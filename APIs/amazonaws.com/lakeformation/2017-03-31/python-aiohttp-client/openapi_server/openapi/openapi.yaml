openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: <fullname>Lake Formation</fullname> <p>Defines the public endpoint
    for the Lake Formation service.</p>
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Lake Formation
  version: 2017-03-31
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: lakeformation
  x-aws-signingName: lakeformation
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lakeformation-2017-03-31.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/lakeformation/
servers:
- description: The AWS Lake Formation multi-region endpoint
  url: "http://lakeformation.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Lake Formation multi-region endpoint
  url: "https://lakeformation.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Lake Formation endpoint for China (Beijing) and China (Ningxia)
  url: "http://lakeformation.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Lake Formation endpoint for China (Beijing) and China (Ningxia)
  url: "https://lakeformation.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /AddLFTagsToResource:
    post:
      description: Attaches one or more LF-tags to an existing resource.
      operationId: add_lf_tags_to_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddLFTagsToResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddLFTagsToResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /AssumeDecoratedRoleWithSAML:
    post:
      description: "<p>Allows a caller to assume an IAM role decorated as the SAML\
        \ user specified in the SAML assertion included in the request. This decoration\
        \ allows Lake Formation to enforce access policies against the SAML users\
        \ and groups. This API operation requires SAML federation setup in the callerâ€™\
        s account as it can only be called with valid SAML assertions. Lake Formation\
        \ does not scope down the permission of the assumed role. All permissions\
        \ attached to the role via the SAML federation setup will be included in the\
        \ role session. </p> <p> This decorated role is expected to access data in\
        \ Amazon S3 by getting temporary access from Lake Formation which is authorized\
        \ via the virtual API <code>GetDataAccess</code>. Therefore, all SAML roles\
        \ that can be assumed via <code>AssumeDecoratedRoleWithSAML</code> must at\
        \ a minimum include <code>lakeformation:GetDataAccess</code> in their role\
        \ policies. A typical IAM policy attached to such a role would look as follows:\
        \ </p>"
      operationId: assume_decorated_role_with_saml
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssumeDecoratedRoleWithSAML_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssumeDecoratedRoleWithSAMLResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /BatchGrantPermissions:
    post:
      description: Batch operation to grant permissions to the principal.
      operationId: batch_grant_permissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGrantPermissions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGrantPermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /BatchRevokePermissions:
    post:
      description: Batch operation to revoke permissions from the principal.
      operationId: batch_revoke_permissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRevokePermissions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRevokePermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /CancelTransaction:
    post:
      description: Attempts to cancel the specified transaction. Returns an exception
        if the transaction was previously committed.
      operationId: cancel_transaction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelTransaction_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelTransactionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCommittedException'
          description: TransactionCommittedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCommitInProgressException'
          description: TransactionCommitInProgressException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /CommitTransaction:
    post:
      description: Attempts to commit the specified transaction. Returns an exception
        if the transaction was previously aborted. This API action is idempotent if
        called multiple times for the same transaction.
      operationId: commit_transaction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitTransaction_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitTransactionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCanceledException'
          description: TransactionCanceledException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /CreateDataCellsFilter:
    post:
      description: Creates a data cell filter to allow one to grant access to certain
        columns on certain rows.
      operationId: create_data_cells_filter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataCellsFilter_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataCellsFilterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /CreateLFTag:
    post:
      description: Creates an LF-tag with the specified name and values.
      operationId: create_lf_tag
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLFTag_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLFTagResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /DeleteDataCellsFilter:
    post:
      description: Deletes a data cell filter.
      operationId: delete_data_cells_filter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDataCellsFilter_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataCellsFilterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /DeleteLFTag:
    post:
      description: "Deletes the specified LF-tag given a key name. If the input parameter\
        \ tag key was not found, then the operation will throw an exception. When\
        \ you delete an LF-tag, the <code>LFTagPolicy</code> attached to the LF-tag\
        \ becomes invalid. If the deleted LF-tag was still assigned to any resource,\
        \ the tag policy attach to the deleted LF-tag will no longer be applied to\
        \ the resource."
      operationId: delete_lf_tag
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLFTag_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLFTagResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /DeleteObjectsOnCancel:
    post:
      description: "<p>For a specific governed table, provides a list of Amazon S3\
        \ objects that will be written during the current transaction and that can\
        \ be automatically deleted if the transaction is canceled. Without this call,\
        \ no Amazon S3 objects are automatically deleted when a transaction cancels.\
        \ </p> <p> The Glue ETL library function <code>write_dynamic_frame.from_catalog()</code>\
        \ includes an option to automatically call <code>DeleteObjectsOnCancel</code>\
        \ before writes. For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/transactions-data-operations.html#rolling-back-writes\"\
        >Rolling Back Amazon S3 Writes</a>. </p>"
      operationId: delete_objects_on_cancel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteObjectsOnCancel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteObjectsOnCancelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCommittedException'
          description: TransactionCommittedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCanceledException'
          description: TransactionCanceledException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotReadyException'
          description: ResourceNotReadyException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /DeregisterResource:
    post:
      description: "<p>Deregisters the resource as managed by the Data Catalog.</p>\
        \ <p>When you deregister a path, Lake Formation removes the path from the\
        \ inline policy attached to your service-linked role.</p>"
      operationId: deregister_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /DescribeResource:
    post:
      description: Retrieves the current data access role for the given resource registered
        in Lake Formation.
      operationId: describe_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /DescribeTransaction:
    post:
      description: Returns the details of a single transaction.
      operationId: describe_transaction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTransaction_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTransactionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ExtendTransaction:
    post:
      description: <p>Indicates to the service that the specified transaction is still
        active and should not be treated as idle and aborted.</p> <p>Write transactions
        that remain idle for a long period are automatically aborted unless explicitly
        extended.</p>
      operationId: extend_transaction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendTransaction_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendTransactionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCommittedException'
          description: TransactionCommittedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCanceledException'
          description: TransactionCanceledException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCommitInProgressException'
          description: TransactionCommitInProgressException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetDataCellsFilter:
    post:
      description: Returns a data cells filter.
      operationId: get_data_cells_filter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataCellsFilter_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataCellsFilterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetDataLakeSettings:
    post:
      description: 'Retrieves the list of the data lake administrators of a Lake Formation-managed
        data lake. '
      operationId: get_data_lake_settings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataLakeSettings_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataLakeSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetEffectivePermissionsForPath:
    post:
      description: Returns the Lake Formation permissions for a specified table or
        database resource located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code>
        will not return databases and tables if the catalog is encrypted.
      operationId: get_effective_permissions_for_path
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEffectivePermissionsForPath_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectivePermissionsForPathResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetLFTag:
    post:
      description: Returns an LF-tag definition.
      operationId: get_lf_tag
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLFTag_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLFTagResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetQueryState:
    post:
      description: Returns the state of a query previously submitted. Clients are
        expected to poll <code>GetQueryState</code> to monitor the current state of
        the planning before retrieving the work units. A query state is only visible
        to the principal that made the initial call to <code>StartQueryPlanning</code>.
      operationId: get_query_state
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQueryState_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQueryStateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetQueryStatistics:
    post:
      description: Retrieves statistics on the planning and execution of a query.
      operationId: get_query_statistics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQueryState_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQueryStatisticsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsNotReadyYetException'
          description: StatisticsNotReadyYetException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredException'
          description: ExpiredException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetResourceLFTags:
    post:
      description: Returns the LF-tags applied to a resource.
      operationId: get_resource_lf_tags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourceLFTags_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourceLFTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetTableObjects:
    post:
      description: Returns the set of Amazon S3 objects that make up the specified
        governed table. A transaction ID or timestamp can be specified for time-travel
        queries.
      operationId: get_table_objects
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTableObjects_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTableObjectsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCommittedException'
          description: TransactionCommittedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCanceledException'
          description: TransactionCanceledException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotReadyException'
          description: ResourceNotReadyException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetTemporaryGluePartitionCredentials:
    post:
      description: This API is identical to <code>GetTemporaryTableCredentials</code>
        except that this is used when the target Data Catalog resource is of type
        Partition. Lake Formation restricts the permission of the vended credentials
        with the same scope down policy which restricts access to a single Amazon
        S3 prefix.
      operationId: get_temporary_glue_partition_credentials
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTemporaryGluePartitionCredentials_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemporaryGluePartitionCredentialsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionTypeMismatchException'
          description: PermissionTypeMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetTemporaryGlueTableCredentials:
    post:
      description: "Allows a caller in a secure environment to assume a role with\
        \ permission to access Amazon S3. In order to vend such credentials, Lake\
        \ Formation assumes the role associated with a registered location, for example\
        \ an Amazon S3 bucket, with a scope down policy which restricts the access\
        \ to a single prefix."
      operationId: get_temporary_glue_table_credentials
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTemporaryGlueTableCredentials_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemporaryGlueTableCredentialsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionTypeMismatchException'
          description: PermissionTypeMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetWorkUnitResults:
    post:
      description: 'Returns the work units resulting from the query. Work units can
        be executed in any order and in parallel. '
      operationId: get_work_unit_results
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorkUnitResults_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkUnitResultsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredException'
          description: ExpiredException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetWorkUnits:
    post:
      description: Retrieves the work units generated by the <code>StartQueryPlanning</code>
        operation.
      operationId: get_work_units
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorkUnits_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkUnitsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkUnitsNotReadyYetException'
          description: WorkUnitsNotReadyYetException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredException'
          description: ExpiredException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GrantPermissions:
    post:
      description: "<p>Grants permissions to the principal to access metadata in the\
        \ Data Catalog and data organized in underlying data storage such as Amazon\
        \ S3.</p> <p>For information about permissions, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html\"\
        >Security and Access Control to Metadata and Data</a>.</p>"
      operationId: grant_permissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantPermissions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantPermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ListDataCellsFilter:
    post:
      description: Lists all the data cell filters on a table.
      operationId: list_data_cells_filter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDataCellsFilter_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataCellsFilterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ListLFTags:
    post:
      description: 'Lists LF-tags that the requester has permission to view. '
      operationId: list_lf_tags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLFTags_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLFTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ListPermissions:
    post:
      description: "<p>Returns a list of the principal permissions on the resource,\
        \ filtered by the permissions of the caller. For example, if you are granted\
        \ an ALTER permission, you are able to see only the principal permissions\
        \ for ALTER.</p> <p>This operation returns only those permissions that have\
        \ been explicitly granted.</p> <p>For information about permissions, see <a\
        \ href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html\"\
        >Security and Access Control to Metadata and Data</a>.</p>"
      operationId: list_permissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPermissions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ListResources:
    post:
      description: Lists the resources registered to be managed by the Data Catalog.
      operationId: list_resources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResources_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ListTableStorageOptimizers:
    post:
      description: Returns the configuration of all storage optimizers associated
        with a specified table.
      operationId: list_table_storage_optimizers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTableStorageOptimizers_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTableStorageOptimizersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ListTransactions:
    post:
      description: "<p>Returns metadata about transactions and their status. To prevent\
        \ the response from growing indefinitely, only uncommitted transactions and\
        \ those available for time-travel queries are returned.</p> <p>This operation\
        \ can help you identify uncommitted transactions or to get information about\
        \ transactions.</p>"
      operationId: list_transactions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTransactions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /PutDataLakeSettings:
    post:
      description: "<p>Sets the list of data lake administrators who have admin privileges\
        \ on all resources managed by Lake Formation. For more information on admin\
        \ privileges, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html\"\
        >Granting Lake Formation Permissions</a>.</p> <p>This API replaces the current\
        \ list of data lake admins with the new list being passed. To add an admin,\
        \ fetch the current list and add the new admin to that list and pass that\
        \ list in this API.</p>"
      operationId: put_data_lake_settings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDataLakeSettings_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataLakeSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /RegisterResource:
    post:
      description: "<p>Registers the resource as managed by the Data Catalog.</p>\
        \ <p>To add or update data, Lake Formation needs read/write access to the\
        \ chosen Amazon S3 path. Choose a role that you know has permission to do\
        \ this, or choose the AWSServiceRoleForLakeFormationDataAccess service-linked\
        \ role. When you register the first Amazon S3 path, the service-linked role\
        \ and a new inline policy are created on your behalf. Lake Formation adds\
        \ the first path to the inline policy and attaches it to the service-linked\
        \ role. When you register subsequent paths, Lake Formation adds the path to\
        \ the existing policy.</p> <p>The following request registers a new location\
        \ and gives Lake Formation permission to use the service-linked role to access\
        \ that location.</p> <p> <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole\
        \ = true</code> </p> <p>If <code>UseServiceLinkedRole</code> is not set to\
        \ true, you must provide or set the <code>RoleArn</code>:</p> <p> <code>arn:aws:iam::12345:role/my-data-access-role</code>\
        \ </p>"
      operationId: register_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /RemoveLFTagsFromResource:
    post:
      description: "Removes an LF-tag from the resource. Only database, table, or\
        \ tableWithColumns resource are allowed. To tag columns, use the column inclusion\
        \ list in <code>tableWithColumns</code> to specify column input."
      operationId: remove_lf_tags_from_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveLFTagsFromResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveLFTagsFromResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /RevokePermissions:
    post:
      description: Revokes permissions to the principal to access metadata in the
        Data Catalog and data organized in underlying data storage such as Amazon
        S3.
      operationId: revoke_permissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokePermissions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokePermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /SearchDatabasesByLFTags:
    post:
      description: "This operation allows a search on <code>DATABASE</code> resources\
        \ by <code>TagCondition</code>. This operation is used by admins who want\
        \ to grant user permissions on certain <code>TagConditions</code>. Before\
        \ making a grant, the admin can use <code>SearchDatabasesByTags</code> to\
        \ find all resources where the given <code>TagConditions</code> are valid\
        \ to verify whether the returned resources can be shared."
      operationId: search_databases_by_lf_tags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDatabasesByLFTags_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDatabasesByLFTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /SearchTablesByLFTags:
    post:
      description: "This operation allows a search on <code>TABLE</code> resources\
        \ by <code>LFTag</code>s. This will be used by admins who want to grant user\
        \ permissions on certain LF-tags. Before making a grant, the admin can use\
        \ <code>SearchTablesByLFTags</code> to find all resources where the given\
        \ <code>LFTag</code>s are valid to verify whether the returned resources can\
        \ be shared."
      operationId: search_tables_by_lf_tags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTablesByLFTags_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTablesByLFTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /StartQueryPlanning:
    post:
      description: <p>Submits a request to process a query statement.</p> <p>This
        operation generates work units that can be retrieved with the <code>GetWorkUnits</code>
        operation as soon as the query state is WORKUNITS_AVAILABLE or FINISHED.</p>
      operationId: start_query_planning
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartQueryPlanning_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartQueryPlanningResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /StartTransaction:
    post:
      description: Starts a new transaction and returns its transaction ID. Transaction
        IDs are opaque objects that you can use to identify a transaction.
      operationId: start_transaction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTransaction_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTransactionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /UpdateDataCellsFilter:
    post:
      description: Updates a data cell filter.
      operationId: update_data_cells_filter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataCellsFilter_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataCellsFilterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /UpdateLFTag:
    post:
      description: "Updates the list of possible values for the specified LF-tag key.\
        \ If the LF-tag does not exist, the operation throws an EntityNotFoundException.\
        \ The values in the delete key values will be deleted from list of possible\
        \ values. If any value in the delete key values is attached to a resource,\
        \ then API errors out with a 400 Exception - \"Update not allowed\". Untag\
        \ the attribute before deleting the LF-tag key's value. "
      operationId: update_lf_tag
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLFTag_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLFTagResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /UpdateResource:
    post:
      description: 'Updates the data access role used for vending access to the given
        (registered) resource in Lake Formation. '
      operationId: update_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /UpdateTableObjects:
    post:
      description: Updates the manifest of Amazon S3 objects that make up the specified
        governed table.
      operationId: update_table_objects
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTableObjects_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTableObjectsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCommittedException'
          description: TransactionCommittedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCanceledException'
          description: TransactionCanceledException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCommitInProgressException'
          description: TransactionCommitInProgressException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotReadyException'
          description: ResourceNotReadyException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /UpdateTableStorageOptimizer:
    post:
      description: Updates the configuration of the storage optimizers for a table.
      operationId: update_table_storage_optimizer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTableStorageOptimizer_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTableStorageOptimizerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AddLFTagsToResourceResponse:
      example:
        Failures: ""
      properties:
        Failures:
          allOf:
          - $ref: '#/components/schemas/LFTagErrors'
          - description: A list of failures to tag the resource.
          title: Failures
      title: AddLFTagsToResourceResponse
      type: object
    CatalogResource:
      description: A structure for the catalog object.
      properties: {}
      type: object
    DatabaseResource:
      description: A structure for the database object.
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, it is the\
              \ account ID of the caller."
          title: CatalogId
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the database resource. Unique to the Data Catalog.
          title: Name
      required:
      - Name
      title: DatabaseResource
      type: object
    TableResource:
      description: 'A structure for the table object. A table is a metadata definition
        that represents your data. You can Grant and Revoke table privileges to a
        principal. '
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, it is the\
              \ account ID of the caller."
          title: CatalogId
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: 'The name of the database for the table. Unique to a Data
              Catalog. A database is a set of associated table definitions organized
              into a logical group. You can Grant and Revoke database privileges to
              a principal. '
          title: DatabaseName
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the table.
          title: Name
        TableWildcard:
          allOf:
          - $ref: '#/components/schemas/TableWildcard'
          - description: <p>A wildcard object representing every table under a database.</p>
              <p>At least one of <code>TableResource$Name</code> or <code>TableResource$TableWildcard</code>
              is required.</p>
          title: TableWildcard
      required:
      - DatabaseName
      title: TableResource
      type: object
    TableWithColumnsResource:
      description: "<p>A structure for a table with columns object. This object is\
        \ only used when granting a SELECT permission.</p> <p>This object must take\
        \ a value for at least one of <code>ColumnsNames</code>, <code>ColumnsIndexes</code>,\
        \ or <code>ColumnsWildcard</code>.</p>"
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, it is the\
              \ account ID of the caller."
          title: CatalogId
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: 'The name of the database for the table with columns resource.
              Unique to the Data Catalog. A database is a set of associated table
              definitions organized into a logical group. You can Grant and Revoke
              database privileges to a principal. '
          title: DatabaseName
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: 'The name of the table resource. A table is a metadata definition
              that represents your data. You can Grant and Revoke table privileges
              to a principal. '
          title: Name
        ColumnNames:
          allOf:
          - $ref: '#/components/schemas/ColumnNames'
          - description: The list of column names for the table. At least one of <code>ColumnNames</code>
              or <code>ColumnWildcard</code> is required.
          title: ColumnNames
        ColumnWildcard:
          $ref: '#/components/schemas/TableWithColumnsResource_ColumnWildcard'
      required:
      - DatabaseName
      - Name
      title: TableWithColumnsResource
      type: object
    DataLocationResource:
      description: 'A structure for a data location object where permissions are granted
        or revoked. '
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog where the location is\
              \ registered with Lake Formation. By default, it is the account ID of\
              \ the caller."
          title: CatalogId
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: The Amazon Resource Name (ARN) that uniquely identifies the
              data location resource.
          title: ResourceArn
      required:
      - ResourceArn
      title: DataLocationResource
      type: object
    DataCellsFilterResource:
      description: 'A structure for a data cells filter resource. '
      properties:
        TableCatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The ID of the catalog to which the table belongs.
          title: TableCatalogId
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A database in the Glue Data Catalog.
          title: DatabaseName
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the table.
          title: TableName
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: 'The name of the data cells filter. '
          title: Name
      title: DataCellsFilterResource
      type: object
    LFTagKeyResource:
      description: A structure containing an LF-tag key and values for a resource.
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
          title: CatalogId
        TagKey:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The key-name for the LF-tag.
          title: TagKey
        TagValues:
          allOf:
          - $ref: '#/components/schemas/TagValueList'
          - description: A list of possible values an attribute can take.
          title: TagValues
      required:
      - TagKey
      - TagValues
      title: LFTagKeyResource
      type: object
    LFTagPolicyResource:
      description: A structure containing a list of LF-tag conditions that apply to
        a resource's LF-tag policy.
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
          title: CatalogId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The resource type for which the LF-tag policy applies.
          title: ResourceType
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: A list of LF-tag conditions that apply to the resource's
              LF-tag policy.
          title: Expression
      required:
      - Expression
      - ResourceType
      title: LFTagPolicyResource
      type: object
    LFTagPair:
      description: A structure containing an LF-tag key-value pair.
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
          title: CatalogId
        TagKey:
          allOf:
          - $ref: '#/components/schemas/LFTagKey'
          - description: The key-name for the LF-tag.
          title: TagKey
        TagValues:
          allOf:
          - $ref: '#/components/schemas/TagValueList'
          - description: A list of possible values an attribute can take.
          title: TagValues
      required:
      - TagKey
      - TagValues
      title: LFTagPair
      type: object
    EntityNotFoundException: {}
    InvalidInputException: {}
    InternalServiceException: {}
    OperationTimeoutException: {}
    AccessDeniedException: {}
    ConcurrentModificationException: {}
    AssumeDecoratedRoleWithSAMLResponse:
      example:
        SessionToken: ""
        AccessKeyId: ""
        SecretAccessKey: ""
        Expiration: ""
      properties:
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/AccessKeyIdString'
          - description: The access key ID for the temporary credentials. (The access
              key consists of an access key ID and a secret key).
          title: AccessKeyId
        SecretAccessKey:
          allOf:
          - $ref: '#/components/schemas/SecretAccessKeyString'
          - description: The secret key for the temporary credentials. (The access
              key consists of an access key ID and a secret key).
          title: SecretAccessKey
        SessionToken:
          allOf:
          - $ref: '#/components/schemas/SessionTokenString'
          - description: The session token for the temporary credentials.
          title: SessionToken
        Expiration:
          allOf:
          - $ref: '#/components/schemas/ExpirationTimestamp'
          - description: The date and time when the temporary credentials expire.
          title: Expiration
      title: AssumeDecoratedRoleWithSAMLResponse
      type: object
    BatchGrantPermissionsResponse:
      example:
        Failures: ""
      properties:
        Failures:
          allOf:
          - $ref: '#/components/schemas/BatchPermissionsFailureList'
          - description: A list of failures to grant permissions to the resources.
          title: Failures
      title: BatchGrantPermissionsResponse
      type: object
    BatchPermissionsRequestEntry:
      description: A permission to a resource granted by batch operation to the principal.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: A unique identifier for the batch permissions request entry.
          title: Id
        Principal:
          $ref: '#/components/schemas/BatchPermissionsRequestEntry_Principal'
        Resource:
          $ref: '#/components/schemas/BatchPermissionsRequestEntry_Resource'
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: The permissions to be granted.
          title: Permissions
        PermissionsWithGrantOption:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: Indicates if the option to pass permissions is granted.
          title: PermissionsWithGrantOption
      required:
      - Id
      title: BatchPermissionsRequestEntry
      type: object
    BatchRevokePermissionsResponse:
      example:
        Failures: ""
      properties:
        Failures:
          allOf:
          - $ref: '#/components/schemas/BatchPermissionsFailureList'
          - description: A list of failures to revoke permissions to the resources.
          title: Failures
      title: BatchRevokePermissionsResponse
      type: object
    CancelTransactionResponse:
      properties: {}
      type: object
    TransactionCommittedException: {}
    TransactionCommitInProgressException: {}
    CommitTransactionResponse:
      example:
        TransactionStatus: ""
      properties:
        TransactionStatus:
          allOf:
          - $ref: '#/components/schemas/TransactionStatus'
          - description: The status of the transaction.
          title: TransactionStatus
      title: CommitTransactionResponse
      type: object
    TransactionCanceledException: {}
    CreateDataCellsFilterResponse:
      properties: {}
      type: object
    CatalogIdString:
      maxLength: 255
      minLength: 1
      title: CatalogIdString
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    NameString:
      maxLength: 255
      minLength: 1
      title: NameString
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    RowFilter:
      description: A PartiQL predicate.
      properties:
        FilterExpression:
          allOf:
          - $ref: '#/components/schemas/PredicateString'
          - description: A filter expression.
          title: FilterExpression
        AllRowsWildcard:
          allOf:
          - $ref: '#/components/schemas/AllRowsWildcard'
          - description: A wildcard for all rows.
          title: AllRowsWildcard
      title: RowFilter
      type: object
    ColumnNames:
      items:
        $ref: '#/components/schemas/NameString'
      type: array
    ColumnWildcard:
      description: "A wildcard object, consisting of an optional list of excluded\
        \ column names or indexes."
      properties:
        ExcludedColumnNames:
          allOf:
          - $ref: '#/components/schemas/ColumnNames'
          - description: Excludes column names. Any column with this name will be
              excluded.
          title: ExcludedColumnNames
      title: ColumnWildcard
      type: object
    VersionString:
      maxLength: 255
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    AlreadyExistsException: {}
    ResourceNumberLimitExceededException: {}
    CreateLFTagResponse:
      properties: {}
      type: object
    LFTagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:\\*\\/=+\\-@%]*)$"
      title: LFTagValue
      type: string
    DeleteDataCellsFilterResponse:
      properties: {}
      type: object
    DeleteLFTagResponse:
      properties: {}
      type: object
    DeleteObjectsOnCancelResponse:
      properties: {}
      type: object
    VirtualObject:
      description: "An object that defines an Amazon S3 object to be deleted if a\
        \ transaction cancels, provided that <code>VirtualPut</code> was called before\
        \ writing the object."
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/URI'
          - description: The path to the Amazon S3 object. Must start with s3://
          title: Uri
        ETag:
          allOf:
          - $ref: '#/components/schemas/ETagString'
          - description: The ETag of the Amazon S3 object.
          title: ETag
      required:
      - Uri
      title: VirtualObject
      type: object
    ResourceNotReadyException: {}
    DeregisterResourceResponse:
      properties: {}
      type: object
    DescribeResourceResponse:
      example:
        ResourceInfo:
          LastModified: ""
          ResourceArn: ""
          WithFederation: ""
          RoleArn: ""
      properties:
        ResourceInfo:
          $ref: '#/components/schemas/DescribeResourceResponse_ResourceInfo'
      title: DescribeResourceResponse
      type: object
    DescribeTransactionResponse:
      example:
        TransactionDescription:
          TransactionStatus: ""
          TransactionStartTime: ""
          TransactionEndTime: ""
          TransactionId: ""
      properties:
        TransactionDescription:
          $ref: '#/components/schemas/DescribeTransactionResponse_TransactionDescription'
      title: DescribeTransactionResponse
      type: object
    ExtendTransactionResponse:
      properties: {}
      type: object
    GetDataCellsFilterResponse:
      example:
        DataCellsFilter:
          VersionId: ""
          TableName: ""
          ColumnNames: ""
          RowFilter:
            AllRowsWildcard: ""
            FilterExpression: ""
          DatabaseName: ""
          TableCatalogId: ""
          Name: ""
          ColumnWildcard:
            ExcludedColumnNames: ""
      properties:
        DataCellsFilter:
          $ref: '#/components/schemas/GetDataCellsFilterResponse_DataCellsFilter'
      title: GetDataCellsFilterResponse
      type: object
    GetDataLakeSettingsResponse:
      example:
        DataLakeSettings:
          AllowExternalDataFiltering: ""
          ExternalDataFilteringAllowList: ""
          CreateTableDefaultPermissions: ""
          Parameters: ""
          ReadOnlyAdmins: ""
          AllowFullTableExternalDataAccess: ""
          CreateDatabaseDefaultPermissions: ""
          AuthorizedSessionTagValueList: ""
          DataLakeAdmins: ""
          TrustedResourceOwners: ""
      properties:
        DataLakeSettings:
          $ref: '#/components/schemas/GetDataLakeSettingsResponse_DataLakeSettings'
      title: GetDataLakeSettingsResponse
      type: object
    GetEffectivePermissionsForPathResponse:
      example:
        NextToken: ""
        Permissions: ""
      properties:
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PrincipalResourcePermissionsList'
          - description: A list of the permissions for the specified table or database
              resource located at the path in Amazon S3.
          title: Permissions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call to retrieve\
              \ this list."
          title: NextToken
      title: GetEffectivePermissionsForPathResponse
      type: object
    GetLFTagResponse:
      example:
        TagKey: ""
        CatalogId: ""
        TagValues: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
          title: CatalogId
        TagKey:
          allOf:
          - $ref: '#/components/schemas/LFTagKey'
          - description: The key-name for the LF-tag.
          title: TagKey
        TagValues:
          allOf:
          - $ref: '#/components/schemas/TagValueList'
          - description: A list of possible values an attribute can take.
          title: TagValues
      title: GetLFTagResponse
      type: object
    GetQueryStateResponse:
      description: A structure for the output.
      example:
        State: ""
        Error: ""
      properties:
        Error:
          allOf:
          - $ref: '#/components/schemas/ErrorMessageString'
          - description: An error message when the operation fails.
          title: Error
        State:
          allOf:
          - $ref: '#/components/schemas/QueryStateString'
          - description: "<p>The state of a query previously submitted. The possible\
              \ states are:</p> <ul> <li> <p>PENDING: the query is pending.</p> </li>\
              \ <li> <p>WORKUNITS_AVAILABLE: some work units are ready for retrieval\
              \ and execution.</p> </li> <li> <p>FINISHED: the query planning finished\
              \ successfully, and all work units are ready for retrieval and execution.</p>\
              \ </li> <li> <p>ERROR: an error occurred with the query, such as an\
              \ invalid query ID or a backend error.</p> </li> </ul>"
          title: State
      required:
      - State
      title: GetQueryStateResponse
      type: object
    GetQueryStatisticsResponse:
      example:
        ExecutionStatistics:
          WorkUnitsExecutedCount: ""
          DataScannedBytes: ""
          AverageExecutionTimeMillis: ""
        QuerySubmissionTime: ""
        PlanningStatistics:
          EstimatedDataToScanBytes: ""
          QueueTimeMillis: ""
          WorkUnitsGeneratedCount: ""
          PlanningTimeMillis: ""
      properties:
        ExecutionStatistics:
          $ref: '#/components/schemas/GetQueryStatisticsResponse_ExecutionStatistics'
        PlanningStatistics:
          $ref: '#/components/schemas/GetQueryStatisticsResponse_PlanningStatistics'
        QuerySubmissionTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the query was submitted.
          title: QuerySubmissionTime
      title: GetQueryStatisticsResponse
      type: object
    StatisticsNotReadyYetException: {}
    ExpiredException: {}
    ThrottledException: {}
    GetResourceLFTagsResponse:
      example:
        LFTagsOnColumns: ""
        LFTagOnDatabase: ""
        LFTagsOnTable: ""
      properties:
        LFTagOnDatabase:
          allOf:
          - $ref: '#/components/schemas/LFTagsList'
          - description: A list of LF-tags applied to a database resource.
          title: LFTagOnDatabase
        LFTagsOnTable:
          allOf:
          - $ref: '#/components/schemas/LFTagsList'
          - description: A list of LF-tags applied to a table resource.
          title: LFTagsOnTable
        LFTagsOnColumns:
          allOf:
          - $ref: '#/components/schemas/ColumnLFTagsList'
          - description: A list of LF-tags applied to a column resource.
          title: LFTagsOnColumns
      title: GetResourceLFTagsResponse
      type: object
    GlueEncryptionException: {}
    GetTableObjectsResponse:
      example:
        NextToken: ""
        Objects: ""
      properties:
        Objects:
          allOf:
          - $ref: '#/components/schemas/PartitionedTableObjectsList'
          - description: A list of objects organized by partition keys.
          title: Objects
        NextToken:
          allOf:
          - $ref: '#/components/schemas/TokenString'
          - description: A continuation token indicating whether additional data is
              available.
          title: NextToken
      title: GetTableObjectsResponse
      type: object
    GetTemporaryGluePartitionCredentialsResponse:
      example:
        SessionToken: ""
        AccessKeyId: ""
        SecretAccessKey: ""
        Expiration: ""
      properties:
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/AccessKeyIdString'
          - description: The access key ID for the temporary credentials.
          title: AccessKeyId
        SecretAccessKey:
          allOf:
          - $ref: '#/components/schemas/SecretAccessKeyString'
          - description: The secret key for the temporary credentials.
          title: SecretAccessKey
        SessionToken:
          allOf:
          - $ref: '#/components/schemas/SessionTokenString'
          - description: The session token for the temporary credentials.
          title: SessionToken
        Expiration:
          allOf:
          - $ref: '#/components/schemas/ExpirationTimestamp'
          - description: The date and time when the temporary credentials expire.
          title: Expiration
      title: GetTemporaryGluePartitionCredentialsResponse
      type: object
    ValueStringList:
      items:
        $ref: '#/components/schemas/ValueString'
      minItems: 1
      type: array
    Permission:
      enum:
      - ALL
      - SELECT
      - ALTER
      - DROP
      - DELETE
      - INSERT
      - DESCRIBE
      - CREATE_DATABASE
      - CREATE_TABLE
      - DATA_LOCATION_ACCESS
      - CREATE_LF_TAG
      - ASSOCIATE
      - GRANT_WITH_LF_TAG_EXPRESSION
      title: Permission
      type: string
    AuditContextString:
      maxLength: 2048
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    PermissionType:
      enum:
      - COLUMN_PERMISSION
      - CELL_FILTER_PERMISSION
      - NESTED_PERMISSION
      - NESTED_CELL_PERMISSION
      title: PermissionType
      type: string
    PermissionTypeMismatchException: {}
    GetTemporaryGlueTableCredentialsResponse:
      example:
        SessionToken: ""
        AccessKeyId: ""
        SecretAccessKey: ""
        Expiration: ""
      properties:
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/AccessKeyIdString'
          - description: The access key ID for the temporary credentials.
          title: AccessKeyId
        SecretAccessKey:
          allOf:
          - $ref: '#/components/schemas/SecretAccessKeyString'
          - description: The secret key for the temporary credentials.
          title: SecretAccessKey
        SessionToken:
          allOf:
          - $ref: '#/components/schemas/SessionTokenString'
          - description: The session token for the temporary credentials.
          title: SessionToken
        Expiration:
          allOf:
          - $ref: '#/components/schemas/ExpirationTimestamp'
          - description: The date and time when the temporary credentials expire.
          title: Expiration
      title: GetTemporaryGlueTableCredentialsResponse
      type: object
    GetWorkUnitResultsResponse:
      description: A structure for the output.
      example:
        ResultStream: ""
      properties:
        ResultStream:
          allOf:
          - $ref: '#/components/schemas/ResultStream'
          - description: Rows returned from the <code>GetWorkUnitResults</code> operation
              as a stream of Apache Arrow v1.0 messages.
          title: ResultStream
      title: GetWorkUnitResultsResponse
      type: object
    GetWorkUnitsResponse:
      description: A structure for the output.
      example:
        NextToken: ""
        QueryId: ""
        WorkUnitRanges: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token for paginating the returned list of\
              \ tokens, returned if the current segment of the list is not the last."
          title: NextToken
        QueryId:
          allOf:
          - $ref: '#/components/schemas/QueryIdString'
          - description: The ID of the plan query operation.
          title: QueryId
        WorkUnitRanges:
          allOf:
          - $ref: '#/components/schemas/WorkUnitRangeList'
          - description: A <code>WorkUnitRangeList</code> object that specifies the
              valid range of work unit IDs for querying the execution service.
          title: WorkUnitRanges
      required:
      - QueryId
      - WorkUnitRanges
      title: GetWorkUnitsResponse
      type: object
    WorkUnitsNotReadyYetException: {}
    GrantPermissionsResponse:
      properties: {}
      type: object
    DataLakePrincipalString:
      maxLength: 255
      minLength: 1
      type: string
    ListDataCellsFilterResponse:
      example:
        NextToken: ""
        DataCellsFilters: ""
      properties:
        DataCellsFilters:
          allOf:
          - $ref: '#/components/schemas/DataCellsFilterList'
          - description: A list of <code>DataCellFilter</code> structures.
          title: DataCellsFilters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if not all requested data cell filters\
              \ have been returned."
          title: NextToken
      title: ListDataCellsFilterResponse
      type: object
    TableWildcard:
      description: A wildcard object representing every table under a database.
      properties: {}
      type: object
    ListLFTagsResponse:
      example:
        LFTags: ""
        NextToken: ""
      properties:
        LFTags:
          allOf:
          - $ref: '#/components/schemas/LFTagsList'
          - description: A list of LF-tags that the requested has permission to view.
          title: LFTags
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, present if the current list segment\
              \ is not the last."
          title: NextToken
      title: ListLFTagsResponse
      type: object
    ListPermissionsResponse:
      example:
        PrincipalResourcePermissions: ""
        NextToken: ""
      properties:
        PrincipalResourcePermissions:
          allOf:
          - $ref: '#/components/schemas/PrincipalResourcePermissionsList'
          - description: A list of principals and their permissions on the resource
              for the specified principal and resource types.
          title: PrincipalResourcePermissions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call to retrieve\
              \ this list."
          title: NextToken
      title: ListPermissionsResponse
      type: object
    ListResourcesResponse:
      example:
        NextToken: ""
        ResourceInfoList: ""
      properties:
        ResourceInfoList:
          allOf:
          - $ref: '#/components/schemas/ResourceInfoList'
          - description: A summary of the data lake resources.
          title: ResourceInfoList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call to retrieve\
              \ these resources."
          title: NextToken
      title: ListResourcesResponse
      type: object
    FilterCondition:
      description: This structure describes the filtering of columns in a table based
        on a filter condition.
      properties:
        Field:
          allOf:
          - $ref: '#/components/schemas/FieldNameString'
          - description: The field to filter in the filter condition.
          title: Field
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          - description: The comparison operator used in the filter condition.
          title: ComparisonOperator
        StringValueList:
          allOf:
          - $ref: '#/components/schemas/StringValueList'
          - description: A string with values used in evaluating the filter condition.
          title: StringValueList
      title: FilterCondition
      type: object
    ListTableStorageOptimizersResponse:
      example:
        NextToken: ""
        StorageOptimizerList: ""
      properties:
        StorageOptimizerList:
          allOf:
          - $ref: '#/components/schemas/StorageOptimizerList'
          - description: A list of the storage optimizers associated with a table.
          title: StorageOptimizerList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token for paginating the returned list of\
              \ tokens, returned if the current segment of the list is not the last."
          title: NextToken
      title: ListTableStorageOptimizersResponse
      type: object
    ListTransactionsResponse:
      example:
        Transactions: ""
        NextToken: ""
      properties:
        Transactions:
          allOf:
          - $ref: '#/components/schemas/TransactionDescriptionList'
          - description: A list of transactions. The record for each transaction is
              a <code>TransactionDescription</code> object.
          title: Transactions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/TokenString'
          - description: A continuation token indicating whether additional data is
              available.
          title: NextToken
      title: ListTransactionsResponse
      type: object
    PutDataLakeSettingsResponse:
      properties: {}
      type: object
    DataLakePrincipalList:
      items:
        $ref: '#/components/schemas/DataLakePrincipal'
      maxItems: 30
      minItems: 0
      type: array
    PrincipalPermissionsList:
      items:
        $ref: '#/components/schemas/PrincipalPermissions'
      type: array
    ParametersMap:
      additionalProperties:
        $ref: '#/components/schemas/ParametersMapValue'
      type: object
    TrustedResourceOwners:
      items:
        $ref: '#/components/schemas/CatalogIdString'
      type: array
    NullableBoolean:
      type: boolean
    AuthorizedSessionTagValueList:
      items:
        $ref: '#/components/schemas/NameString'
      type: array
    RegisterResourceResponse:
      properties: {}
      type: object
    RemoveLFTagsFromResourceResponse:
      example:
        Failures: ""
      properties:
        Failures:
          allOf:
          - $ref: '#/components/schemas/LFTagErrors'
          - description: A list of failures to untag a resource.
          title: Failures
      title: RemoveLFTagsFromResourceResponse
      type: object
    RevokePermissionsResponse:
      properties: {}
      type: object
    SearchDatabasesByLFTagsResponse:
      example:
        NextToken: ""
        DatabaseList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, present if the current list segment\
              \ is not the last."
          title: NextToken
        DatabaseList:
          allOf:
          - $ref: '#/components/schemas/DatabaseLFTagsList'
          - description: A list of databases that meet the LF-tag conditions.
          title: DatabaseList
      title: SearchDatabasesByLFTagsResponse
      type: object
    LFTag:
      description: "A structure that allows an admin to grant user permissions on\
        \ certain conditions. For example, granting a role access to all columns that\
        \ do not have the LF-tag 'PII' in tables that have the LF-tag 'Prod'."
      properties:
        TagKey:
          allOf:
          - $ref: '#/components/schemas/LFTagKey'
          - description: The key-name for the LF-tag.
          title: TagKey
        TagValues:
          allOf:
          - $ref: '#/components/schemas/TagValueList'
          - description: A list of possible values an attribute can take.
          title: TagValues
      required:
      - TagKey
      - TagValues
      title: LFTag
      type: object
    SearchTablesByLFTagsResponse:
      example:
        NextToken: ""
        TableList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, present if the current list segment\
              \ is not the last."
          title: NextToken
        TableList:
          allOf:
          - $ref: '#/components/schemas/TableLFTagsList'
          - description: A list of tables that meet the LF-tag conditions.
          title: TableList
      title: SearchTablesByLFTagsResponse
      type: object
    StartQueryPlanningResponse:
      description: A structure for the output.
      example:
        QueryId: ""
      properties:
        QueryId:
          allOf:
          - $ref: '#/components/schemas/QueryIdString'
          - description: The ID of the plan query operation can be used to fetch the
              actual work unit descriptors that are produced as the result of the
              operation. The ID is also used to get the query state and as an input
              to the <code>Execute</code> operation.
          title: QueryId
      required:
      - QueryId
      title: StartQueryPlanningResponse
      type: object
    QueryPlanningContextDatabaseNameString:
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    Timestamp:
      format: date-time
      type: string
    QueryParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    TransactionIdString:
      maxLength: 255
      minLength: 1
      pattern: "[\\p{L}\\p{N}\\p{P}]*"
      type: string
    StartTransactionResponse:
      example:
        TransactionId: ""
      properties:
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: An opaque identifier for the transaction.
          title: TransactionId
      title: StartTransactionResponse
      type: object
    UpdateDataCellsFilterResponse:
      properties: {}
      type: object
    UpdateLFTagResponse:
      properties: {}
      type: object
    UpdateResourceResponse:
      properties: {}
      type: object
    UpdateTableObjectsResponse:
      properties: {}
      type: object
    WriteOperation:
      description: Defines an object to add to or delete from a governed table.
      properties:
        AddObject:
          $ref: '#/components/schemas/WriteOperation_AddObject'
        DeleteObject:
          $ref: '#/components/schemas/WriteOperation_DeleteObject'
      title: WriteOperation
      type: object
    UpdateTableStorageOptimizerResponse:
      example:
        Result: ""
      properties:
        Result:
          allOf:
          - $ref: '#/components/schemas/Result'
          - description: A response indicating the success of failure of the operation.
          title: Result
      title: UpdateTableStorageOptimizerResponse
      type: object
    StorageOptimizerConfig:
      additionalProperties:
        $ref: '#/components/schemas/StorageOptimizerConfigValue'
      title: StorageOptimizerConfig
      type: object
    AccessKeyIdString:
      type: string
    Resource:
      description: A structure for the resource.
      properties:
        Catalog:
          allOf:
          - $ref: '#/components/schemas/CatalogResource'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
          title: Catalog
        Database:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_Database'
        Table:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_Table'
        TableWithColumns:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_TableWithColumns'
        DataLocation:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_DataLocation'
        DataCellsFilter:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_DataCellsFilter'
        LFTag:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_LFTag'
        LFTagPolicy:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_LFTagPolicy'
      title: Resource
      type: object
    LFTagsList:
      items:
        $ref: '#/components/schemas/LFTagPair'
      maxItems: 50
      minItems: 1
      type: array
    AddLFTagsToResourceRequest:
      example:
        LFTags: ""
        Resource:
          LFTag:
            TagKey: ""
            CatalogId: ""
            TagValues: ""
          Table:
            DatabaseName: ""
            CatalogId: ""
            TableWildcard: ""
            Name: ""
          DataCellsFilter:
            TableName: ""
            DatabaseName: ""
            TableCatalogId: ""
            Name: ""
          TableWithColumns:
            ColumnNames: ""
            DatabaseName: ""
            CatalogId: ""
            Name: ""
            ColumnWildcard:
              ExcludedColumnNames: ""
          LFTagPolicy:
            Expression: ""
            ResourceType: ""
            CatalogId: ""
          Database:
            CatalogId: ""
            Name: ""
          DataLocation:
            ResourceArn: ""
            CatalogId: ""
          Catalog: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        Resource:
          $ref: '#/components/schemas/AddLFTagsToResourceRequest_Resource'
        LFTags:
          allOf:
          - $ref: '#/components/schemas/LFTagsList'
          - description: The LF-tags to attach to the resource.
      required:
      - LFTags
      - Resource
      title: AddLFTagsToResourceRequest
      type: object
    LFTagErrors:
      items:
        $ref: '#/components/schemas/LFTagError'
      type: array
    URI:
      maxLength: 1024
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    ETagString:
      maxLength: 255
      minLength: 1
      pattern: "[\\p{L}\\p{N}\\p{P}]*"
      type: string
    ObjectSize:
      type: integer
    PartitionValuesList:
      items:
        $ref: '#/components/schemas/PartitionValueString'
      maxItems: 100
      minItems: 1
      type: array
    AddObjectInput:
      description: A new object to add to the governed table.
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/URI'
          - description: The Amazon S3 location of the object.
          title: Uri
        ETag:
          allOf:
          - $ref: '#/components/schemas/ETagString'
          - description: The Amazon S3 ETag of the object. Returned by <code>GetTableObjects</code>
              for validation and used to identify changes to the underlying data.
          title: ETag
        Size:
          allOf:
          - $ref: '#/components/schemas/ObjectSize'
          - description: The size of the Amazon S3 object in bytes.
          title: Size
        PartitionValues:
          allOf:
          - $ref: '#/components/schemas/PartitionValuesList'
          - description: "<p>A list of partition values for the object. A value must\
              \ be specified for each partition key associated with the table.</p>\
              \ <p>The supported data types are integer, long, date(yyyy-MM-dd), timestamp(yyyy-MM-dd\
              \ HH:mm:ssXXX or yyyy-MM-dd HH:mm:ss\"), string and decimal.</p>"
          title: PartitionValues
      required:
      - ETag
      - Size
      - Uri
      title: AddObjectInput
      type: object
    AllRowsWildcard:
      description: 'A structure that you pass to indicate you want all rows in a filter. '
      properties: {}
      type: object
    SAMLAssertionString:
      maxLength: 100000
      minLength: 4
      type: string
    IAMRoleArn:
      pattern: "arn:aws:iam::[0-9]*:role/.*"
      type: string
    IAMSAMLProviderArn:
      pattern: "arn:aws:iam::[0-9]*:saml-provider/.*"
      type: string
    CredentialTimeoutDurationSecondInteger:
      maximum: 43200
      minimum: 900
      type: integer
    AssumeDecoratedRoleWithSAMLRequest:
      example:
        SAMLAssertion: ""
        PrincipalArn: ""
        DurationSeconds: ""
        RoleArn: ""
      properties:
        SAMLAssertion:
          allOf:
          - $ref: '#/components/schemas/SAMLAssertionString'
          - description: A SAML assertion consisting of an assertion statement for
              the user who needs temporary credentials. This must match the SAML assertion
              that was issued to IAM. This must be Base64 encoded.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: 'The role that represents an IAM principal whose scope down
              policy allows it to call credential vending APIs such as <code>GetTemporaryTableCredentials</code>.
              The caller must also have iam:PassRole permission on this role. '
        PrincipalArn:
          allOf:
          - $ref: '#/components/schemas/IAMSAMLProviderArn'
          - description: The Amazon Resource Name (ARN) of the SAML provider in IAM
              that describes the IdP.
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/CredentialTimeoutDurationSecondInteger'
          - description: "The time period, between 900 and 43,200 seconds, for the\
              \ timeout of the temporary credentials."
      required:
      - PrincipalArn
      - RoleArn
      - SAMLAssertion
      title: AssumeDecoratedRoleWithSAMLRequest
      type: object
    SecretAccessKeyString:
      type: string
    SessionTokenString:
      type: string
    ExpirationTimestamp:
      format: date-time
      type: string
    AuditContext:
      description: 'A structure used to include auditing information on the privileged
        API. '
      properties:
        AdditionalAuditContext:
          allOf:
          - $ref: '#/components/schemas/AuditContextString'
          - description: The filter engine can populate the 'AdditionalAuditContext'
              information with the request ID for you to track. This information will
              be displayed in CloudTrail log in your account.
          title: AdditionalAuditContext
      title: AuditContext
      type: object
    BatchPermissionsRequestEntryList:
      items:
        $ref: '#/components/schemas/BatchPermissionsRequestEntry'
      type: array
    BatchGrantPermissionsRequest:
      example:
        Entries: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        Entries:
          allOf:
          - $ref: '#/components/schemas/BatchPermissionsRequestEntryList'
          - description: A list of up to 20 entries for resource permissions to be
              granted by batch operation to the principal.
      required:
      - Entries
      title: BatchGrantPermissionsRequest
      type: object
    BatchPermissionsFailureList:
      items:
        $ref: '#/components/schemas/BatchPermissionsFailureEntry'
      type: array
    ErrorDetail:
      description: Contains details about an error.
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The code associated with this error.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A message describing the error.
          title: ErrorMessage
      title: ErrorDetail
      type: object
    BatchPermissionsFailureEntry:
      description: A list of failures when performing a batch grant or batch revoke
        operation.
      properties:
        RequestEntry:
          $ref: '#/components/schemas/BatchPermissionsFailureEntry_RequestEntry'
        Error:
          $ref: '#/components/schemas/BatchPermissionsFailureEntry_Error'
      title: BatchPermissionsFailureEntry
      type: object
    Identifier:
      maxLength: 255
      minLength: 1
      type: string
    DataLakePrincipal:
      description: The Lake Formation principal. Supported principals are IAM users
        or IAM roles.
      properties:
        DataLakePrincipalIdentifier:
          allOf:
          - $ref: '#/components/schemas/DataLakePrincipalString'
          - description: An identifier for the Lake Formation principal.
          title: DataLakePrincipalIdentifier
      title: DataLakePrincipal
      type: object
    PermissionList:
      items:
        $ref: '#/components/schemas/Permission'
      type: array
    BatchRevokePermissionsRequest:
      example:
        Entries: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        Entries:
          allOf:
          - $ref: '#/components/schemas/BatchPermissionsRequestEntryList'
          - description: A list of up to 20 entries for resource permissions to be
              revoked by batch operation to the principal.
      required:
      - Entries
      title: BatchRevokePermissionsRequest
      type: object
    BooleanNullable:
      type: boolean
    CancelTransactionRequest:
      example:
        TransactionId: ""
      properties:
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: The transaction to cancel.
      required:
      - TransactionId
      title: CancelTransactionRequest
      type: object
    ColumnLFTag:
      description: A structure containing the name of a column resource and the LF-tags
        attached to it.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of a column resource.
          title: Name
        LFTags:
          allOf:
          - $ref: '#/components/schemas/LFTagsList'
          - description: The LF-tags attached to a column resource.
          title: LFTags
      title: ColumnLFTag
      type: object
    ColumnLFTagsList:
      items:
        $ref: '#/components/schemas/ColumnLFTag'
      type: array
    CommitTransactionRequest:
      example:
        TransactionId: ""
      properties:
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: The transaction to commit.
      required:
      - TransactionId
      title: CommitTransactionRequest
      type: object
    TransactionStatus:
      enum:
      - ACTIVE
      - COMMITTED
      - ABORTED
      - COMMIT_IN_PROGRESS
      title: TransactionStatus
      type: string
    ComparisonOperator:
      enum:
      - EQ
      - NE
      - LE
      - LT
      - GE
      - GT
      - CONTAINS
      - NOT_CONTAINS
      - BEGINS_WITH
      - IN
      - BETWEEN
      title: ComparisonOperator
      type: string
    DataCellsFilter:
      description: A structure that describes certain columns on certain rows.
      properties:
        TableCatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The ID of the catalog to which the table belongs.
          title: TableCatalogId
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A database in the Glue Data Catalog.
          title: DatabaseName
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A table in the database.
          title: TableName
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name given by the user to the data filter cell.
          title: Name
        RowFilter:
          $ref: '#/components/schemas/CreateDataCellsFilter_request_TableData_RowFilter'
        ColumnNames:
          allOf:
          - $ref: '#/components/schemas/ColumnNames'
          - description: "A list of column names and/or nested column attributes.\
              \ When specifying nested attributes, use a qualified dot (.) delimited\
              \ format such as \"address\".\"zip\". Nested attributes within this\
              \ list may not exceed a depth of 5."
          title: ColumnNames
        ColumnWildcard:
          $ref: '#/components/schemas/CreateDataCellsFilter_request_TableData_ColumnWildcard'
        VersionId:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          - description: The ID of the data cells filter version.
          title: VersionId
      required:
      - DatabaseName
      - Name
      - TableCatalogId
      - TableName
      title: DataCellsFilter
      type: object
    CreateDataCellsFilterRequest:
      example:
        TableData:
          VersionId: ""
          TableName: ""
          ColumnNames: ""
          RowFilter:
            AllRowsWildcard: ""
            FilterExpression: ""
          DatabaseName: ""
          TableCatalogId: ""
          Name: ""
          ColumnWildcard:
            ExcludedColumnNames: ""
      properties:
        TableData:
          $ref: '#/components/schemas/CreateDataCellsFilterRequest_TableData'
      required:
      - TableData
      title: CreateDataCellsFilterRequest
      type: object
    LFTagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*)$"
      type: string
    TagValueList:
      items:
        $ref: '#/components/schemas/LFTagValue'
      maxItems: 50
      minItems: 1
      type: array
    CreateLFTagRequest:
      example:
        TagKey: ""
        CatalogId: ""
        TagValues: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        TagKey:
          allOf:
          - $ref: '#/components/schemas/LFTagKey'
          - description: The key-name for the LF-tag.
        TagValues:
          allOf:
          - $ref: '#/components/schemas/TagValueList'
          - description: A list of possible values an attribute can take.
      required:
      - TagKey
      - TagValues
      title: CreateLFTagRequest
      type: object
    DataCellsFilterList:
      items:
        $ref: '#/components/schemas/DataCellsFilter'
      type: array
    DataLakeResourceType:
      enum:
      - CATALOG
      - DATABASE
      - TABLE
      - DATA_LOCATION
      - LF_TAG
      - LF_TAG_POLICY
      - LF_TAG_POLICY_DATABASE
      - LF_TAG_POLICY_TABLE
      title: DataLakeResourceType
      type: string
    DataLakeSettings:
      description: A structure representing a list of Lake Formation principals designated
        as data lake administrators and lists of principal permission entries for
        default create database and default create table permissions.
      properties:
        DataLakeAdmins:
          allOf:
          - $ref: '#/components/schemas/DataLakePrincipalList'
          - description: A list of Lake Formation principals. Supported principals
              are IAM users or IAM roles.
          title: DataLakeAdmins
        ReadOnlyAdmins:
          allOf:
          - $ref: '#/components/schemas/DataLakePrincipalList'
          - description: "A list of Lake Formation principals with only view access\
              \ to the resources, without the ability to make changes. Supported principals\
              \ are IAM users or IAM roles."
          title: ReadOnlyAdmins
        CreateDatabaseDefaultPermissions:
          allOf:
          - $ref: '#/components/schemas/PrincipalPermissionsList'
          - description: "<p>Specifies whether access control on newly created database\
              \ is managed by Lake Formation permissions or exclusively by IAM permissions.</p>\
              \ <p>A null value indicates access control by Lake Formation permissions.\
              \ A value that assigns ALL to IAM_ALLOWED_PRINCIPALS indicates access\
              \ control by IAM permissions. This is referred to as the setting \"\
              Use only IAM access control,\" and is for backward compatibility with\
              \ the Glue permission model implemented by IAM permissions.</p> <p>The\
              \ only permitted values are an empty array or an array that contains\
              \ a single JSON object that grants ALL to IAM_ALLOWED_PRINCIPALS.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html\"\
              >Changing the Default Security Settings for Your Data Lake</a>.</p>"
          title: CreateDatabaseDefaultPermissions
        CreateTableDefaultPermissions:
          allOf:
          - $ref: '#/components/schemas/PrincipalPermissionsList'
          - description: "<p>Specifies whether access control on newly created table\
              \ is managed by Lake Formation permissions or exclusively by IAM permissions.</p>\
              \ <p>A null value indicates access control by Lake Formation permissions.\
              \ A value that assigns ALL to IAM_ALLOWED_PRINCIPALS indicates access\
              \ control by IAM permissions. This is referred to as the setting \"\
              Use only IAM access control,\" and is for backward compatibility with\
              \ the Glue permission model implemented by IAM permissions.</p> <p>The\
              \ only permitted values are an empty array or an array that contains\
              \ a single JSON object that grants ALL to IAM_ALLOWED_PRINCIPALS.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html\"\
              >Changing the Default Security Settings for Your Data Lake</a>.</p>"
          title: CreateTableDefaultPermissions
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersMap'
          - description: "A key-value map that provides an additional configuration\
              \ on your data lake. CrossAccountVersion is the key you can configure\
              \ in the Parameters field. Accepted values for the CrossAccountVersion\
              \ key are 1, 2, and 3."
          title: Parameters
        TrustedResourceOwners:
          allOf:
          - $ref: '#/components/schemas/TrustedResourceOwners'
          - description: "<p>A list of the resource-owning account IDs that the caller's\
              \ account can use to share their user access details (user ARNs). The\
              \ user ARNs can be logged in the resource owner's CloudTrail log.</p>\
              \ <p>You may want to specify this property when you are in a high-trust\
              \ boundary, such as the same team or company. </p>"
          title: TrustedResourceOwners
        AllowExternalDataFiltering:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: "<p>Whether to allow Amazon EMR clusters to access data managed\
              \ by Lake Formation. </p> <p>If true, you allow Amazon EMR clusters\
              \ to access data in Amazon S3 locations that are registered with Lake\
              \ Formation.</p> <p>If false or null, no Amazon EMR clusters will be\
              \ able to access data in Amazon S3 locations that are registered with\
              \ Lake Formation.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/initial-LF-setup.html#external-data-filter\"\
              >(Optional) Allow external data filtering</a>.</p>"
          title: AllowExternalDataFiltering
        AllowFullTableExternalDataAccess:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Whether to allow a third-party query engine to get data access
              credentials without session tags when a caller has full data access
              permissions.
          title: AllowFullTableExternalDataAccess
        ExternalDataFilteringAllowList:
          allOf:
          - $ref: '#/components/schemas/DataLakePrincipalList'
          - description: A list of the account IDs of Amazon Web Services accounts
              with Amazon EMR clusters that are to perform data filtering.&gt;
          title: ExternalDataFilteringAllowList
        AuthorizedSessionTagValueList:
          allOf:
          - $ref: '#/components/schemas/AuthorizedSessionTagValueList'
          - description: "Lake Formation relies on a privileged process secured by\
              \ Amazon EMR or the third party integrator to tag the user's role while\
              \ assuming it. Lake Formation will publish the acceptable key-value\
              \ pair, for example key = \"LakeFormationTrustedCaller\" and value =\
              \ \"TRUE\" and the third party integrator must properly tag the temporary\
              \ security credentials that will be used to call Lake Formation's administrative\
              \ APIs."
          title: AuthorizedSessionTagValueList
      title: DataLakeSettings
      type: object
    ResourceArnString:
      type: string
    TaggedDatabase:
      description: A structure describing a database resource with LF-tags.
      properties:
        Database:
          $ref: '#/components/schemas/TaggedDatabase_Database'
        LFTags:
          allOf:
          - $ref: '#/components/schemas/LFTagsList'
          - description: A list of LF-tags attached to the database.
          title: LFTags
      title: TaggedDatabase
      type: object
    DatabaseLFTagsList:
      items:
        $ref: '#/components/schemas/TaggedDatabase'
      type: array
    DateTime:
      format: date-time
      type: string
    DeleteDataCellsFilterRequest:
      example:
        TableName: ""
        DatabaseName: ""
        TableCatalogId: ""
        Name: ""
      properties:
        TableCatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The ID of the catalog to which the table belongs.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A database in the Glue Data Catalog.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A table in the database.
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name given by the user to the data filter cell.
      title: DeleteDataCellsFilterRequest
      type: object
    DeleteLFTagRequest:
      example:
        TagKey: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        TagKey:
          allOf:
          - $ref: '#/components/schemas/LFTagKey'
          - description: The key-name for the LF-tag to delete.
      required:
      - TagKey
      title: DeleteLFTagRequest
      type: object
    DeleteObjectInput:
      description: An object to delete from the governed table.
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/URI'
          - description: The Amazon S3 location of the object to delete.
          title: Uri
        ETag:
          allOf:
          - $ref: '#/components/schemas/ETagString'
          - description: The Amazon S3 ETag of the object. Returned by <code>GetTableObjects</code>
              for validation and used to identify changes to the underlying data.
          title: ETag
        PartitionValues:
          allOf:
          - $ref: '#/components/schemas/PartitionValuesList'
          - description: A list of partition values for the object. A value must be
              specified for each partition key associated with the governed table.
          title: PartitionValues
      required:
      - Uri
      title: DeleteObjectInput
      type: object
    VirtualObjectList:
      items:
        $ref: '#/components/schemas/VirtualObject'
      maxItems: 100
      minItems: 1
      type: array
    DeleteObjectsOnCancelRequest:
      example:
        TableName: ""
        DatabaseName: ""
        Objects: ""
        CatalogId: ""
        TransactionId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The Glue data catalog that contains the governed table. Defaults
              to the current account ID.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The database that contains the governed table.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the governed table.
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: ID of the transaction that the writes occur in.
        Objects:
          allOf:
          - $ref: '#/components/schemas/VirtualObjectList'
          - description: "A list of VirtualObject structures, which indicates the\
              \ Amazon S3 objects to be deleted if the transaction cancels."
      required:
      - DatabaseName
      - Objects
      - TableName
      - TransactionId
      title: DeleteObjectsOnCancelRequest
      type: object
    DeregisterResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: The Amazon Resource Name (ARN) of the resource that you want
              to deregister.
      required:
      - ResourceArn
      title: DeregisterResourceRequest
      type: object
    DescribeResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: The resource ARN.
      required:
      - ResourceArn
      title: DescribeResourceRequest
      type: object
    ResourceInfo:
      description: A structure containing information about an Lake Formation resource.
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: The Amazon Resource Name (ARN) of the resource.
          title: ResourceArn
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: The IAM role that registered a resource.
          title: RoleArn
        LastModified:
          allOf:
          - $ref: '#/components/schemas/LastModifiedTimestamp'
          - description: The date and time the resource was last modified.
          title: LastModified
        WithFederation:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Whether or not the resource is a federated resource.
          title: WithFederation
      title: ResourceInfo
      type: object
    DescribeTransactionRequest:
      example:
        TransactionId: ""
      properties:
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: The transaction for which to return status.
      required:
      - TransactionId
      title: DescribeTransactionRequest
      type: object
    TransactionDescription:
      description: A structure that contains information about a transaction.
      properties:
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: The ID of the transaction.
          title: TransactionId
        TransactionStatus:
          allOf:
          - $ref: '#/components/schemas/TransactionStatus'
          - description: "A status of ACTIVE, COMMITTED, or ABORTED."
          title: TransactionStatus
        TransactionStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the transaction started.
          title: TransactionStartTime
        TransactionEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time when the transaction committed or aborted, if it\
              \ is not currently active."
          title: TransactionEndTime
      title: TransactionDescription
      type: object
    DescriptionString:
      maxLength: 2048
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    ResourceShareList:
      items:
        $ref: '#/components/schemas/RAMResourceShareArn'
      type: array
    DetailsMap:
      description: "<p>A structure containing the additional details to be returned\
        \ in the <code>AdditionalDetails</code> attribute of <code>PrincipalResourcePermissions</code>.</p>\
        \ <p>If a catalog resource is shared through Resource Access Manager (RAM),\
        \ then there will exist a corresponding RAM resource share ARN.</p>"
      properties:
        ResourceShare:
          allOf:
          - $ref: '#/components/schemas/ResourceShareList'
          - description: A resource share ARN for a catalog resource shared through
              RAM.
          title: ResourceShare
      title: DetailsMap
      type: object
    ErrorMessageString:
      type: string
    NumberOfMilliseconds:
      type: integer
    NumberOfBytes:
      type: integer
    NumberOfItems:
      type: integer
    ExecutionStatistics:
      description: Statistics related to the processing of a query statement.
      properties:
        AverageExecutionTimeMillis:
          allOf:
          - $ref: '#/components/schemas/NumberOfMilliseconds'
          - description: The average time the request took to be executed.
          title: AverageExecutionTimeMillis
        DataScannedBytes:
          allOf:
          - $ref: '#/components/schemas/NumberOfBytes'
          - description: The amount of data that was scanned in bytes.
          title: DataScannedBytes
        WorkUnitsExecutedCount:
          allOf:
          - $ref: '#/components/schemas/NumberOfItems'
          - description: The number of work units executed.
          title: WorkUnitsExecutedCount
      title: ExecutionStatistics
      type: object
    Expression:
      items:
        $ref: '#/components/schemas/LFTag'
      type: array
    ExtendTransactionRequest:
      example:
        TransactionId: ""
      properties:
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: The transaction to extend.
      title: ExtendTransactionRequest
      type: object
    FieldNameString:
      enum:
      - RESOURCE_ARN
      - ROLE_ARN
      - LAST_MODIFIED
      title: FieldNameString
      type: string
    StringValueList:
      items:
        $ref: '#/components/schemas/StringValue'
      type: array
    FilterConditionList:
      items:
        $ref: '#/components/schemas/FilterCondition'
      maxItems: 20
      minItems: 1
      type: array
    GetDataCellsFilterRequest:
      example:
        TableName: ""
        DatabaseName: ""
        TableCatalogId: ""
        Name: ""
      properties:
        TableCatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The ID of the catalog to which the table belongs.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A database in the Glue Data Catalog.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A table in the database.
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name given by the user to the data filter cell.
      required:
      - DatabaseName
      - Name
      - TableCatalogId
      - TableName
      title: GetDataCellsFilterRequest
      type: object
    GetDataLakeSettingsRequest:
      example:
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
      title: GetDataLakeSettingsRequest
      type: object
    Token:
      type: string
    PageSize:
      maximum: 1000
      minimum: 1
      type: integer
    GetEffectivePermissionsForPathRequest:
      example:
        ResourceArn: ""
        NextToken: ""
        MaxResults: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: The Amazon Resource Name (ARN) of the resource for which
              you want to get permissions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call to retrieve\
              \ this list."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of results to return.
      required:
      - ResourceArn
      title: GetEffectivePermissionsForPathRequest
      type: object
    PrincipalResourcePermissionsList:
      items:
        $ref: '#/components/schemas/PrincipalResourcePermissions'
      type: array
    GetLFTagRequest:
      example:
        TagKey: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        TagKey:
          allOf:
          - $ref: '#/components/schemas/LFTagKey'
          - description: The key-name for the LF-tag.
      required:
      - TagKey
      title: GetLFTagRequest
      type: object
    GetQueryStateRequestQueryIdString:
      maxLength: 36
      minLength: 36
      type: string
    GetQueryStateRequest:
      example:
        QueryId: ""
      properties:
        QueryId:
          allOf:
          - $ref: '#/components/schemas/GetQueryStateRequestQueryIdString'
          - description: The ID of the plan query operation.
      required:
      - QueryId
      title: GetQueryStateRequest
      type: object
    QueryStateString:
      enum:
      - PENDING
      - WORKUNITS_AVAILABLE
      - ERROR
      - FINISHED
      - EXPIRED
      title: QueryStateString
      type: string
    GetQueryStatisticsRequestQueryIdString:
      maxLength: 36
      minLength: 36
      type: string
    GetQueryStatisticsRequest:
      properties:
        QueryId:
          allOf:
          - $ref: '#/components/schemas/GetQueryStatisticsRequestQueryIdString'
          - description: The ID of the plan query operation.
      required:
      - QueryId
      title: GetQueryStatisticsRequest
      type: object
    PlanningStatistics:
      description: Statistics related to the processing of a query statement.
      properties:
        EstimatedDataToScanBytes:
          allOf:
          - $ref: '#/components/schemas/NumberOfBytes'
          - description: An estimate of the data that was scanned in bytes.
          title: EstimatedDataToScanBytes
        PlanningTimeMillis:
          allOf:
          - $ref: '#/components/schemas/NumberOfMilliseconds'
          - description: The time that it took to process the request.
          title: PlanningTimeMillis
        QueueTimeMillis:
          allOf:
          - $ref: '#/components/schemas/NumberOfMilliseconds'
          - description: The time the request was in queue to be processed.
          title: QueueTimeMillis
        WorkUnitsGeneratedCount:
          allOf:
          - $ref: '#/components/schemas/NumberOfItems'
          - description: The number of work units generated.
          title: WorkUnitsGeneratedCount
      title: PlanningStatistics
      type: object
    GetResourceLFTagsRequest:
      example:
        ShowAssignedLFTags: ""
        Resource:
          LFTag:
            TagKey: ""
            CatalogId: ""
            TagValues: ""
          Table:
            DatabaseName: ""
            CatalogId: ""
            TableWildcard: ""
            Name: ""
          DataCellsFilter:
            TableName: ""
            DatabaseName: ""
            TableCatalogId: ""
            Name: ""
          TableWithColumns:
            ColumnNames: ""
            DatabaseName: ""
            CatalogId: ""
            Name: ""
            ColumnWildcard:
              ExcludedColumnNames: ""
          LFTagPolicy:
            Expression: ""
            ResourceType: ""
            CatalogId: ""
          Database:
            CatalogId: ""
            Name: ""
          DataLocation:
            ResourceArn: ""
            CatalogId: ""
          Catalog: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        Resource:
          $ref: '#/components/schemas/GetResourceLFTagsRequest_Resource'
        ShowAssignedLFTags:
          allOf:
          - $ref: '#/components/schemas/BooleanNullable'
          - description: Indicates whether to show the assigned LF-tags.
      required:
      - Resource
      title: GetResourceLFTagsRequest
      type: object
    PredicateString:
      maxLength: 2048
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    TokenString:
      maxLength: 4096
      type: string
    GetTableObjectsRequest:
      example:
        TableName: ""
        QueryAsOfTime: ""
        PartitionPredicate: ""
        NextToken: ""
        MaxResults: ""
        DatabaseName: ""
        CatalogId: ""
        TransactionId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The catalog containing the governed table. Defaults to the
              callerâ€™s account.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The database containing the governed table.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The governed table for which to retrieve objects.
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: "The transaction ID at which to read the governed table contents.\
              \ If this transaction has aborted, an error is returned. If not set,\
              \ defaults to the most recent committed transaction. Cannot be specified\
              \ along with <code>QueryAsOfTime</code>."
        QueryAsOfTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time as of when to read the governed table contents.\
              \ If not set, the most recent transaction commit time is used. Cannot\
              \ be specified along with <code>TransactionId</code>."
        PartitionPredicate:
          allOf:
          - $ref: '#/components/schemas/PredicateString'
          - description: "<p>A predicate to filter the objects returned based on the\
              \ partition keys defined in the governed table.</p> <ul> <li> <p>The\
              \ comparison operators supported are: =, &gt;, &lt;, &gt;=, &lt;=</p>\
              \ </li> <li> <p>The logical operators supported are: AND</p> </li> <li>\
              \ <p>The data types supported are integer, long, date(yyyy-MM-dd), timestamp(yyyy-MM-dd\
              \ HH:mm:ssXXX or yyyy-MM-dd HH:mm:ss\"), string and decimal.</p> </li>\
              \ </ul>"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: Specifies how many values to return in a page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/TokenString'
          - description: A continuation token if this is not the first call to retrieve
              these objects.
      required:
      - DatabaseName
      - TableName
      title: GetTableObjectsRequest
      type: object
    PartitionedTableObjectsList:
      items:
        $ref: '#/components/schemas/PartitionObjects'
      type: array
    PartitionValueList:
      description: Contains a list of values defining partitions.
      properties:
        Values:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: The list of partition values.
          title: Values
      required:
      - Values
      title: PartitionValueList
      type: object
    PermissionTypeList:
      items:
        $ref: '#/components/schemas/PermissionType'
      maxItems: 255
      minItems: 1
      type: array
    GetTemporaryGluePartitionCredentialsRequest:
      example:
        Partition:
          Values: ""
        TableArn: ""
        Permissions: ""
        DurationSeconds: ""
        AuditContext:
          AdditionalAuditContext: ""
        SupportedPermissionTypes: ""
      properties:
        TableArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: The ARN of the partitions' table.
        Partition:
          $ref: '#/components/schemas/GetTemporaryGluePartitionCredentialsRequest_Partition'
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: Filters the request based on the user having been granted
              a list of specified permissions on the requested resource(s).
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/CredentialTimeoutDurationSecondInteger'
          - description: "The time period, between 900 and 21,600 seconds, for the\
              \ timeout of the temporary credentials."
        AuditContext:
          $ref: '#/components/schemas/GetTemporaryGluePartitionCredentialsRequest_AuditContext'
        SupportedPermissionTypes:
          allOf:
          - $ref: '#/components/schemas/PermissionTypeList'
          - description: A list of supported permission types for the partition. Valid
              values are <code>COLUMN_PERMISSION</code> and <code>CELL_FILTER_PERMISSION</code>.
      required:
      - Partition
      - TableArn
      title: GetTemporaryGluePartitionCredentialsRequest
      type: object
    GetTemporaryGlueTableCredentialsRequest:
      example:
        TableArn: ""
        Permissions: ""
        DurationSeconds: ""
        AuditContext:
          AdditionalAuditContext: ""
        SupportedPermissionTypes: ""
      properties:
        TableArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: The ARN identifying a table in the Data Catalog for the temporary
              credentials request.
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: Filters the request based on the user having been granted
              a list of specified permissions on the requested resource(s).
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/CredentialTimeoutDurationSecondInteger'
          - description: "The time period, between 900 and 21,600 seconds, for the\
              \ timeout of the temporary credentials."
        AuditContext:
          $ref: '#/components/schemas/GetTemporaryGluePartitionCredentialsRequest_AuditContext'
        SupportedPermissionTypes:
          allOf:
          - $ref: '#/components/schemas/PermissionTypeList'
          - description: A list of supported permission types for the table. Valid
              values are <code>COLUMN_PERMISSION</code> and <code>CELL_FILTER_PERMISSION</code>.
      required:
      - TableArn
      title: GetTemporaryGlueTableCredentialsRequest
      type: object
    GetWorkUnitResultsRequestQueryIdString:
      maxLength: 36
      minLength: 36
      type: string
    GetWorkUnitResultsRequestWorkUnitIdLong:
      minimum: 0
      type: integer
    SyntheticGetWorkUnitResultsRequestWorkUnitTokenString:
      format: password
      minLength: 1
      type: string
    GetWorkUnitResultsRequest:
      example:
        WorkUnitToken: ""
        QueryId: ""
        WorkUnitId: ""
      properties:
        QueryId:
          allOf:
          - $ref: '#/components/schemas/GetWorkUnitResultsRequestQueryIdString'
          - description: The ID of the plan query operation for which to get results.
        WorkUnitId:
          allOf:
          - $ref: '#/components/schemas/GetWorkUnitResultsRequestWorkUnitIdLong'
          - description: The work unit ID for which to get results. Value generated
              by enumerating <code>WorkUnitIdMin</code> to <code>WorkUnitIdMax</code>
              (inclusive) from the <code>WorkUnitRange</code> in the output of <code>GetWorkUnits</code>.
        WorkUnitToken:
          allOf:
          - $ref: '#/components/schemas/SyntheticGetWorkUnitResultsRequestWorkUnitTokenString'
          - description: A work token used to query the execution service. Token output
              from <code>GetWorkUnits</code>.
      required:
      - QueryId
      - WorkUnitId
      - WorkUnitToken
      title: GetWorkUnitResultsRequest
      type: object
    ResultStream:
      type: string
    Integer:
      type: integer
    GetWorkUnitsRequestQueryIdString:
      maxLength: 36
      minLength: 36
      type: string
    GetWorkUnitsRequest:
      example:
        NextToken: ""
        PageSize: ""
        QueryId: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is a continuation call."
        PageSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The size of each page to get in the Amazon Web Services\
              \ service call. This does not affect the number of items returned in\
              \ the command's output. Setting a smaller page size results in more\
              \ calls to the Amazon Web Services service, retrieving fewer items in\
              \ each call. This can help prevent the Amazon Web Services service calls\
              \ from timing out."
        QueryId:
          allOf:
          - $ref: '#/components/schemas/GetWorkUnitsRequestQueryIdString'
          - description: The ID of the plan query operation.
      required:
      - QueryId
      title: GetWorkUnitsRequest
      type: object
    QueryIdString:
      type: string
    WorkUnitRangeList:
      items:
        $ref: '#/components/schemas/WorkUnitRange'
      type: array
    GrantPermissionsRequest:
      example:
        Resource:
          LFTag:
            TagKey: ""
            CatalogId: ""
            TagValues: ""
          Table:
            DatabaseName: ""
            CatalogId: ""
            TableWildcard: ""
            Name: ""
          DataCellsFilter:
            TableName: ""
            DatabaseName: ""
            TableCatalogId: ""
            Name: ""
          TableWithColumns:
            ColumnNames: ""
            DatabaseName: ""
            CatalogId: ""
            Name: ""
            ColumnWildcard:
              ExcludedColumnNames: ""
          LFTagPolicy:
            Expression: ""
            ResourceType: ""
            CatalogId: ""
          Database:
            CatalogId: ""
            Name: ""
          DataLocation:
            ResourceArn: ""
            CatalogId: ""
          Catalog: ""
        Permissions: ""
        CatalogId: ""
        Principal:
          DataLakePrincipalIdentifier: ""
        PermissionsWithGrantOption: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        Principal:
          $ref: '#/components/schemas/GrantPermissionsRequest_Principal'
        Resource:
          $ref: '#/components/schemas/GrantPermissionsRequest_Resource'
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: 'The permissions granted to the principal on the resource.
              Lake Formation defines privileges to grant and revoke access to metadata
              in the Data Catalog and data organized in underlying data storage such
              as Amazon S3. Lake Formation requires that each principal be authorized
              to perform a specific task on Lake Formation resources. '
        PermissionsWithGrantOption:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: Indicates a list of the granted permissions that the principal
              may pass to other users. These permissions may only be a subset of the
              permissions granted in the <code>Privileges</code>.
      required:
      - Permissions
      - Principal
      - Resource
      title: GrantPermissionsRequest
      type: object
    KeyString:
      maxLength: 255
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    LFTagError:
      description: A structure containing an error related to a <code>TagResource</code>
        or <code>UnTagResource</code> operation.
      properties:
        LFTag:
          $ref: '#/components/schemas/LFTagError_LFTag'
        Error:
          $ref: '#/components/schemas/LFTagError_Error'
      title: LFTagError
      type: object
    ResourceType:
      enum:
      - DATABASE
      - TABLE
      title: ResourceType
      type: string
    LastModifiedTimestamp:
      format: date-time
      type: string
    ListDataCellsFilterRequest:
      example:
        Table:
          DatabaseName: ""
          CatalogId: ""
          TableWildcard: ""
          Name: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Table:
          $ref: '#/components/schemas/ListDataCellsFilterRequest_Table'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is a continuation call."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of the response.
      title: ListDataCellsFilterRequest
      type: object
    ResourceShareType:
      enum:
      - FOREIGN
      - ALL
      title: ResourceShareType
      type: string
    ListLFTagsRequest:
      example:
        ResourceShareType: ""
        NextToken: ""
        MaxResults: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        ResourceShareType:
          allOf:
          - $ref: '#/components/schemas/ResourceShareType'
          - description: "If resource share type is <code>ALL</code>, returns both\
              \ in-account LF-tags and shared LF-tags that the requester has permission\
              \ to view. If resource share type is <code>FOREIGN</code>, returns all\
              \ share LF-tags that the requester can view. If no resource share type\
              \ is passed, lists LF-tags in the given catalog ID that the requester\
              \ has permission to view."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call to retrieve\
              \ this list."
      title: ListLFTagsRequest
      type: object
    TrueFalseString:
      maxLength: 5
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    ListPermissionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        IncludeRelated: ""
        Resource:
          LFTag:
            TagKey: ""
            CatalogId: ""
            TagValues: ""
          Table:
            DatabaseName: ""
            CatalogId: ""
            TableWildcard: ""
            Name: ""
          DataCellsFilter:
            TableName: ""
            DatabaseName: ""
            TableCatalogId: ""
            Name: ""
          TableWithColumns:
            ColumnNames: ""
            DatabaseName: ""
            CatalogId: ""
            Name: ""
            ColumnWildcard:
              ExcludedColumnNames: ""
          LFTagPolicy:
            Expression: ""
            ResourceType: ""
            CatalogId: ""
          Database:
            CatalogId: ""
            Name: ""
          DataLocation:
            ResourceArn: ""
            CatalogId: ""
          Catalog: ""
        ResourceType: ""
        CatalogId: ""
        Principal:
          DataLakePrincipalIdentifier: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        Principal:
          $ref: '#/components/schemas/ListPermissionsRequest_Principal'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/DataLakeResourceType'
          - description: Specifies a resource type to filter the permissions returned.
        Resource:
          $ref: '#/components/schemas/ListPermissionsRequest_Resource'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call to retrieve\
              \ this list."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of results to return.
        IncludeRelated:
          allOf:
          - $ref: '#/components/schemas/TrueFalseString'
          - description: Indicates that related permissions should be included in
              the results.
      title: ListPermissionsRequest
      type: object
    ListResourcesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        FilterConditionList: ""
      properties:
        FilterConditionList:
          allOf:
          - $ref: '#/components/schemas/FilterConditionList'
          - description: Any applicable row-level and/or column-level filtering conditions
              for the resources.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of resource results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call to retrieve\
              \ these resources."
      title: ListResourcesRequest
      type: object
    ResourceInfoList:
      items:
        $ref: '#/components/schemas/ResourceInfo'
      type: array
    OptimizerType:
      enum:
      - COMPACTION
      - GARBAGE_COLLECTION
      - ALL
      title: OptimizerType
      type: string
    ListTableStorageOptimizersRequest:
      example:
        TableName: ""
        StorageOptimizerType: ""
        NextToken: ""
        MaxResults: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The Catalog ID of the table.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the database where the table is present.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the table.
        StorageOptimizerType:
          allOf:
          - $ref: '#/components/schemas/OptimizerType'
          - description: The specific type of storage optimizers to list. The supported
              value is <code>compaction</code>.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The number of storage optimizers to return on each call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is a continuation call."
      required:
      - DatabaseName
      - TableName
      title: ListTableStorageOptimizersRequest
      type: object
    StorageOptimizerList:
      items:
        $ref: '#/components/schemas/StorageOptimizer'
      type: array
    TransactionStatusFilter:
      enum:
      - ALL
      - COMPLETED
      - ACTIVE
      - COMMITTED
      - ABORTED
      title: TransactionStatusFilter
      type: string
    ListTransactionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        StatusFilter: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The catalog for which to list transactions. Defaults to the
              account ID of the caller.
        StatusFilter:
          allOf:
          - $ref: '#/components/schemas/TransactionStatusFilter'
          - description: ' A filter indicating the status of transactions to return.
              Options are ALL | COMPLETED | COMMITTED | ABORTED | ACTIVE. The default
              is <code>ALL</code>.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of transactions to return in a single
              call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/TokenString'
          - description: A continuation token if this is not the first call to retrieve
              transactions.
      title: ListTransactionsRequest
      type: object
    TransactionDescriptionList:
      items:
        $ref: '#/components/schemas/TransactionDescription'
      type: array
    MessageString:
      type: string
    ParametersMapValue:
      maxLength: 512000
      title: ParametersMapValue
      type: string
    TableObjectList:
      items:
        $ref: '#/components/schemas/TableObject'
      type: array
    PartitionObjects:
      description: A structure containing a list of partition values and table objects.
      properties:
        PartitionValues:
          allOf:
          - $ref: '#/components/schemas/PartitionValuesList'
          - description: A list of partition values.
          title: PartitionValues
        Objects:
          allOf:
          - $ref: '#/components/schemas/TableObjectList'
          - description: A list of table objects
          title: Objects
      title: PartitionObjects
      type: object
    PartitionValueString:
      maxLength: 1024
      title: PartitionValueString
      type: string
    PrincipalPermissions:
      description: Permissions granted to a principal.
      properties:
        Principal:
          $ref: '#/components/schemas/PrincipalPermissions_Principal'
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: The permissions that are granted to the principal.
          title: Permissions
      title: PrincipalPermissions
      type: object
    PrincipalResourcePermissions:
      description: The permissions granted or revoked on a resource.
      properties:
        Principal:
          $ref: '#/components/schemas/PrincipalResourcePermissions_Principal'
        Resource:
          $ref: '#/components/schemas/PrincipalResourcePermissions_Resource'
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: The permissions to be granted or revoked on the resource.
          title: Permissions
        PermissionsWithGrantOption:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: Indicates whether to grant the ability to grant permissions
              (as a subset of permissions granted).
          title: PermissionsWithGrantOption
        AdditionalDetails:
          $ref: '#/components/schemas/PrincipalResourcePermissions_AdditionalDetails'
      title: PrincipalResourcePermissions
      type: object
    PutDataLakeSettingsRequest:
      example:
        DataLakeSettings:
          AllowExternalDataFiltering: ""
          ExternalDataFilteringAllowList: ""
          CreateTableDefaultPermissions: ""
          Parameters: ""
          ReadOnlyAdmins: ""
          AllowFullTableExternalDataAccess: ""
          CreateDatabaseDefaultPermissions: ""
          AuthorizedSessionTagValueList: ""
          DataLakeAdmins: ""
          TrustedResourceOwners: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        DataLakeSettings:
          $ref: '#/components/schemas/GetDataLakeSettingsResponse_DataLakeSettings'
      required:
      - DataLakeSettings
      title: PutDataLakeSettingsRequest
      type: object
    String:
      title: String
      type: string
    QueryPlanningContext:
      description: A structure containing information about the query plan.
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partition in question\
              \ resides. If none is provided, the Amazon Web Services account ID is\
              \ used by default."
          title: CatalogId
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/QueryPlanningContextDatabaseNameString'
          - description: The database containing the table.
          title: DatabaseName
        QueryAsOfTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time as of when to read the table contents. If not set,\
              \ the most recent transaction commit time will be used. Cannot be specified\
              \ along with <code>TransactionId</code>."
          title: QueryAsOfTime
        QueryParameters:
          allOf:
          - $ref: '#/components/schemas/QueryParameterMap'
          - description: A map consisting of key-value pairs.
          title: QueryParameters
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: "The transaction ID at which to read the table contents.\
              \ If this transaction is not committed, the read will be treated as\
              \ part of that transaction and will see its writes. If this transaction\
              \ has aborted, an error will be returned. If not set, defaults to the\
              \ most recent committed transaction. Cannot be specified along with\
              \ <code>QueryAsOfTime</code>."
          title: TransactionId
      required:
      - DatabaseName
      title: QueryPlanningContext
      type: object
    RAMResourceShareArn:
      title: RAMResourceShareArn
      type: string
    RegisterResourceRequest:
      example:
        ResourceArn: ""
        WithFederation: ""
        UseServiceLinkedRole: ""
        RoleArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: The Amazon Resource Name (ARN) of the resource that you want
              to register.
        UseServiceLinkedRole:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: "<p>Designates an Identity and Access Management (IAM) service-linked\
              \ role by registering this role with the Data Catalog. A service-linked\
              \ role is a unique type of IAM role that is linked directly to Lake\
              \ Formation.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/service-linked-roles.html\"\
              >Using Service-Linked Roles for Lake Formation</a>.</p>"
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: The identifier for the role that registers the resource.
        WithFederation:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Whether or not the resource is a federated resource.
      required:
      - ResourceArn
      title: RegisterResourceRequest
      type: object
    RemoveLFTagsFromResourceRequest:
      example:
        LFTags: ""
        Resource:
          LFTag:
            TagKey: ""
            CatalogId: ""
            TagValues: ""
          Table:
            DatabaseName: ""
            CatalogId: ""
            TableWildcard: ""
            Name: ""
          DataCellsFilter:
            TableName: ""
            DatabaseName: ""
            TableCatalogId: ""
            Name: ""
          TableWithColumns:
            ColumnNames: ""
            DatabaseName: ""
            CatalogId: ""
            Name: ""
            ColumnWildcard:
              ExcludedColumnNames: ""
          LFTagPolicy:
            Expression: ""
            ResourceType: ""
            CatalogId: ""
          Database:
            CatalogId: ""
            Name: ""
          DataLocation:
            ResourceArn: ""
            CatalogId: ""
          Catalog: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        Resource:
          $ref: '#/components/schemas/RemoveLFTagsFromResourceRequest_Resource'
        LFTags:
          allOf:
          - $ref: '#/components/schemas/LFTagsList'
          - description: The LF-tags to be removed from the resource.
      required:
      - LFTags
      - Resource
      title: RemoveLFTagsFromResourceRequest
      type: object
    Result:
      type: string
    RevokePermissionsRequest:
      example:
        Resource:
          LFTag:
            TagKey: ""
            CatalogId: ""
            TagValues: ""
          Table:
            DatabaseName: ""
            CatalogId: ""
            TableWildcard: ""
            Name: ""
          DataCellsFilter:
            TableName: ""
            DatabaseName: ""
            TableCatalogId: ""
            Name: ""
          TableWithColumns:
            ColumnNames: ""
            DatabaseName: ""
            CatalogId: ""
            Name: ""
            ColumnWildcard:
              ExcludedColumnNames: ""
          LFTagPolicy:
            Expression: ""
            ResourceType: ""
            CatalogId: ""
          Database:
            CatalogId: ""
            Name: ""
          DataLocation:
            ResourceArn: ""
            CatalogId: ""
          Catalog: ""
        Permissions: ""
        CatalogId: ""
        Principal:
          DataLakePrincipalIdentifier: ""
        PermissionsWithGrantOption: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        Principal:
          $ref: '#/components/schemas/RevokePermissionsRequest_Principal'
        Resource:
          $ref: '#/components/schemas/RevokePermissionsRequest_Resource'
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: "The permissions revoked to the principal on the resource.\
              \ For information about permissions, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html\"\
              >Security and Access Control to Metadata and Data</a>."
        PermissionsWithGrantOption:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: Indicates a list of permissions for which to revoke the grant
              option allowing the principal to pass permissions to other principals.
      required:
      - Permissions
      - Principal
      - Resource
      title: RevokePermissionsRequest
      type: object
    SearchPageSize:
      maximum: 100
      minimum: 1
      type: integer
    SearchDatabasesByLFTagsRequest:
      example:
        NextToken: ""
        Expression: ""
        MaxResults: ""
        CatalogId: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call to retrieve\
              \ this list."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/SearchPageSize'
          - description: The maximum number of results to return.
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: A list of conditions (<code>LFTag</code> structures) to search
              for in database resources.
      required:
      - Expression
      title: SearchDatabasesByLFTagsRequest
      type: object
    SearchTablesByLFTagsRequest:
      example:
        NextToken: ""
        Expression: ""
        MaxResults: ""
        CatalogId: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call to retrieve\
              \ this list."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/SearchPageSize'
          - description: The maximum number of results to return.
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: A list of conditions (<code>LFTag</code> structures) to search
              for in table resources.
      required:
      - Expression
      title: SearchTablesByLFTagsRequest
      type: object
    TableLFTagsList:
      items:
        $ref: '#/components/schemas/TaggedTable'
      type: array
    SyntheticStartQueryPlanningRequestQueryString:
      format: password
      minLength: 1
      type: string
    StartQueryPlanningRequest:
      example:
        QueryPlanningContext:
          QueryAsOfTime: ""
          DatabaseName: ""
          QueryParameters: ""
          CatalogId: ""
          TransactionId: ""
        QueryString: ""
      properties:
        QueryPlanningContext:
          $ref: '#/components/schemas/StartQueryPlanningRequest_QueryPlanningContext'
        QueryString:
          allOf:
          - $ref: '#/components/schemas/SyntheticStartQueryPlanningRequestQueryString'
          - description: A PartiQL query statement used as an input to the planner
              service.
      required:
      - QueryPlanningContext
      - QueryString
      title: StartQueryPlanningRequest
      type: object
    TransactionType:
      enum:
      - READ_AND_WRITE
      - READ_ONLY
      title: TransactionType
      type: string
    StartTransactionRequest:
      example:
        TransactionType: ""
      properties:
        TransactionType:
          allOf:
          - $ref: '#/components/schemas/TransactionType'
          - description: 'Indicates whether this transaction should be read only or
              read and write. Writes made using a read-only transaction ID will be
              rejected. Read-only transactions do not need to be committed. '
      title: StartTransactionRequest
      type: object
    StorageOptimizer:
      description: A structure describing the configuration and details of a storage
        optimizer.
      properties:
        StorageOptimizerType:
          allOf:
          - $ref: '#/components/schemas/OptimizerType'
          - description: The specific type of storage optimizer. The supported value
              is <code>compaction</code>.
          title: StorageOptimizerType
        Config:
          allOf:
          - $ref: '#/components/schemas/StorageOptimizerConfig'
          - description: "A map of the storage optimizer configuration. Currently\
              \ contains only one key-value pair: <code>is_enabled</code> indicates\
              \ true or false for acceleration."
          title: Config
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/MessageString'
          - description: "<p>A message that contains information about any error (if\
              \ present).</p> <p>When an acceleration result has an enabled status,\
              \ the error message is empty.</p> <p>When an acceleration result has\
              \ a disabled status, the message describes an error or simply indicates\
              \ \"disabled by the user\".</p>"
          title: ErrorMessage
        Warnings:
          allOf:
          - $ref: '#/components/schemas/MessageString'
          - description: A message that contains information about any warnings (if
              present).
          title: Warnings
        LastRunDetails:
          allOf:
          - $ref: '#/components/schemas/MessageString'
          - description: "When an acceleration result has an enabled status, contains\
              \ the details of the last job run."
          title: LastRunDetails
      title: StorageOptimizer
      type: object
    StorageOptimizerConfigValue:
      title: StorageOptimizerConfigValue
      type: string
    StorageOptimizerConfigKey:
      type: string
    StorageOptimizerConfigMap:
      additionalProperties:
        $ref: '#/components/schemas/StorageOptimizerConfig'
      type: object
    StringValue:
      title: StringValue
      type: string
    TaggedTable:
      description: A structure describing a table resource with LF-tags.
      properties:
        Table:
          $ref: '#/components/schemas/TaggedTable_Table'
        LFTagOnDatabase:
          allOf:
          - $ref: '#/components/schemas/LFTagsList'
          - description: A list of LF-tags attached to the database where the table
              resides.
          title: LFTagOnDatabase
        LFTagsOnTable:
          allOf:
          - $ref: '#/components/schemas/LFTagsList'
          - description: A list of LF-tags attached to the table.
          title: LFTagsOnTable
        LFTagsOnColumns:
          allOf:
          - $ref: '#/components/schemas/ColumnLFTagsList'
          - description: A list of LF-tags attached to columns in the table.
          title: LFTagsOnColumns
      title: TaggedTable
      type: object
    TableObject:
      description: Specifies the details of a governed table.
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/URI'
          - description: The Amazon S3 location of the object.
          title: Uri
        ETag:
          allOf:
          - $ref: '#/components/schemas/ETagString'
          - description: The Amazon S3 ETag of the object. Returned by <code>GetTableObjects</code>
              for validation and used to identify changes to the underlying data.
          title: ETag
        Size:
          allOf:
          - $ref: '#/components/schemas/ObjectSize'
          - description: The size of the Amazon S3 object in bytes.
          title: Size
      title: TableObject
      type: object
    UpdateDataCellsFilterRequest:
      properties:
        TableData:
          $ref: '#/components/schemas/CreateDataCellsFilterRequest_TableData'
      required:
      - TableData
      title: UpdateDataCellsFilterRequest
      type: object
    UpdateLFTagRequest:
      example:
        TagValuesToAdd: ""
        TagValuesToDelete: ""
        TagKey: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
        TagKey:
          allOf:
          - $ref: '#/components/schemas/LFTagKey'
          - description: The key-name for the LF-tag for which to add or delete values.
        TagValuesToDelete:
          allOf:
          - $ref: '#/components/schemas/TagValueList'
          - description: A list of LF-tag values to delete from the LF-tag.
        TagValuesToAdd:
          allOf:
          - $ref: '#/components/schemas/TagValueList'
          - description: A list of LF-tag values to add from the LF-tag.
      required:
      - TagKey
      title: UpdateLFTagRequest
      type: object
    UpdateResourceRequest:
      example:
        ResourceArn: ""
        WithFederation: ""
        RoleArn: ""
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: The new role to use for the given resource registered in
              Lake Formation.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: The resource ARN.
        WithFederation:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Whether or not the resource is a federated resource.
      required:
      - ResourceArn
      - RoleArn
      title: UpdateResourceRequest
      type: object
    WriteOperationList:
      items:
        $ref: '#/components/schemas/WriteOperation'
      maxItems: 100
      minItems: 1
      type: array
    UpdateTableObjectsRequest:
      example:
        TableName: ""
        WriteOperations: ""
        DatabaseName: ""
        CatalogId: ""
        TransactionId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The catalog containing the governed table to update. Defaults
              to the callerâ€™s account ID.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The database containing the governed table to update.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The governed table to update.
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: The transaction at which to do the write.
        WriteOperations:
          allOf:
          - $ref: '#/components/schemas/WriteOperationList'
          - description: A list of <code>WriteOperation</code> objects that define
              an object to add to or delete from the manifest for a governed table.
      required:
      - DatabaseName
      - TableName
      - WriteOperations
      title: UpdateTableObjectsRequest
      type: object
    UpdateTableStorageOptimizerRequest:
      example:
        TableName: ""
        StorageOptimizerConfig: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The Catalog ID of the table.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the database where the table is present.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the table for which to enable the storage optimizer.
        StorageOptimizerConfig:
          allOf:
          - $ref: '#/components/schemas/StorageOptimizerConfigMap'
          - description: Name of the table for which to enable the storage optimizer.
      required:
      - DatabaseName
      - StorageOptimizerConfig
      - TableName
      title: UpdateTableStorageOptimizerRequest
      type: object
    ValueString:
      title: ValueString
      type: string
    WorkUnitIdLong:
      type: integer
    WorkUnitTokenString:
      type: string
    WorkUnitRange:
      description: Defines the valid range of work unit IDs for querying the execution
        service.
      properties:
        WorkUnitIdMax:
          allOf:
          - $ref: '#/components/schemas/WorkUnitIdLong'
          - description: Defines the maximum work unit ID in the range. The maximum
              value is inclusive.
          title: WorkUnitIdMax
        WorkUnitIdMin:
          allOf:
          - $ref: '#/components/schemas/WorkUnitIdLong'
          - description: Defines the minimum work unit ID in the range.
          title: WorkUnitIdMin
        WorkUnitToken:
          allOf:
          - $ref: '#/components/schemas/WorkUnitTokenString'
          - description: A work token used to query the execution service.
          title: WorkUnitToken
      required:
      - WorkUnitIdMax
      - WorkUnitIdMin
      - WorkUnitToken
      title: WorkUnitRange
      type: object
    AddLFTagsToResource_request_Resource_Database:
      allOf:
      - $ref: '#/components/schemas/DatabaseResource'
      - description: 'The database for the resource. Unique to the Data Catalog. A
          database is a set of associated table definitions organized into a logical
          group. You can Grant and Revoke database permissions to a principal. '
      example:
        CatalogId: ""
        Name: ""
      title: AddLFTagsToResource_request_Resource_Database
    AddLFTagsToResource_request_Resource_Table:
      allOf:
      - $ref: '#/components/schemas/TableResource'
      - description: 'The table for the resource. A table is a metadata definition
          that represents your data. You can Grant and Revoke table privileges to
          a principal. '
      example:
        DatabaseName: ""
        CatalogId: ""
        TableWildcard: ""
        Name: ""
      title: AddLFTagsToResource_request_Resource_Table
    AddLFTagsToResource_request_Resource_TableWithColumns:
      allOf:
      - $ref: '#/components/schemas/TableWithColumnsResource'
      - description: The table with columns for the resource. A principal with permissions
          to this resource can select metadata from the columns of a table in the
          Data Catalog and the underlying data in Amazon S3.
      example:
        ColumnNames: ""
        DatabaseName: ""
        CatalogId: ""
        Name: ""
        ColumnWildcard:
          ExcludedColumnNames: ""
      title: AddLFTagsToResource_request_Resource_TableWithColumns
    AddLFTagsToResource_request_Resource_DataLocation:
      allOf:
      - $ref: '#/components/schemas/DataLocationResource'
      - description: 'The location of an Amazon S3 path where permissions are granted
          or revoked. '
      example:
        ResourceArn: ""
        CatalogId: ""
      title: AddLFTagsToResource_request_Resource_DataLocation
    AddLFTagsToResource_request_Resource_DataCellsFilter:
      allOf:
      - $ref: '#/components/schemas/DataCellsFilterResource'
      - description: A data cell filter.
      example:
        TableName: ""
        DatabaseName: ""
        TableCatalogId: ""
        Name: ""
      title: AddLFTagsToResource_request_Resource_DataCellsFilter
    AddLFTagsToResource_request_Resource_LFTag:
      allOf:
      - $ref: '#/components/schemas/LFTagKeyResource'
      - description: The LF-tag key and values attached to a resource.
      example:
        TagKey: ""
        CatalogId: ""
        TagValues: ""
      title: AddLFTagsToResource_request_Resource_LFTag
    AddLFTagsToResource_request_Resource_LFTagPolicy:
      allOf:
      - $ref: '#/components/schemas/LFTagPolicyResource'
      - description: A list of LF-tag conditions that define a resource's LF-tag policy.
      example:
        Expression: ""
        ResourceType: ""
        CatalogId: ""
      title: AddLFTagsToResource_request_Resource_LFTagPolicy
    AddLFTagsToResource_request_Resource:
      description: A structure for the resource.
      properties:
        Catalog:
          allOf:
          - $ref: '#/components/schemas/CatalogResource'
          - description: "The identifier for the Data Catalog. By default, the account\
              \ ID. The Data Catalog is the persistent metadata store. It contains\
              \ database definitions, table definitions, and other control information\
              \ to manage your Lake Formation environment. "
          title: Catalog
        Database:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_Database'
        Table:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_Table'
        TableWithColumns:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_TableWithColumns'
        DataLocation:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_DataLocation'
        DataCellsFilter:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_DataCellsFilter'
        LFTag:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_LFTag'
        LFTagPolicy:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource_LFTagPolicy'
      title: AddLFTagsToResource_request_Resource
      type: object
    AddLFTagsToResource_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Resource:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource'
        LFTags:
          description: The LF-tags to attach to the resource.
          items:
            $ref: '#/components/schemas/LFTagPair'
          maxItems: 50
          minItems: 1
          title: LFTags
          type: array
      required:
      - LFTags
      - Resource
      title: AddLFTagsToResource_request
      type: object
    AssumeDecoratedRoleWithSAML_request:
      properties:
        SAMLAssertion:
          description: A SAML assertion consisting of an assertion statement for the
            user who needs temporary credentials. This must match the SAML assertion
            that was issued to IAM. This must be Base64 encoded.
          maxLength: 100000
          minLength: 4
          title: SAMLAssertion
          type: string
        RoleArn:
          description: 'The role that represents an IAM principal whose scope down
            policy allows it to call credential vending APIs such as <code>GetTemporaryTableCredentials</code>.
            The caller must also have iam:PassRole permission on this role. '
          pattern: "arn:aws:iam::[0-9]*:role/.*"
          title: RoleArn
          type: string
        PrincipalArn:
          description: The Amazon Resource Name (ARN) of the SAML provider in IAM
            that describes the IdP.
          pattern: "arn:aws:iam::[0-9]*:saml-provider/.*"
          title: PrincipalArn
          type: string
        DurationSeconds:
          description: "The time period, between 900 and 43,200 seconds, for the timeout\
            \ of the temporary credentials."
          maximum: 43200
          minimum: 900
          title: DurationSeconds
          type: integer
      required:
      - PrincipalArn
      - RoleArn
      - SAMLAssertion
      title: AssumeDecoratedRoleWithSAML_request
      type: object
    BatchGrantPermissions_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Entries:
          description: A list of up to 20 entries for resource permissions to be granted
            by batch operation to the principal.
          items:
            $ref: '#/components/schemas/BatchPermissionsRequestEntry'
          title: Entries
          type: array
      required:
      - Entries
      title: BatchGrantPermissions_request
      type: object
    BatchRevokePermissions_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Entries:
          description: A list of up to 20 entries for resource permissions to be revoked
            by batch operation to the principal.
          items:
            $ref: '#/components/schemas/BatchPermissionsRequestEntry'
          title: Entries
          type: array
      required:
      - Entries
      title: BatchRevokePermissions_request
      type: object
    CancelTransaction_request:
      properties:
        TransactionId:
          description: The transaction to cancel.
          maxLength: 255
          minLength: 1
          pattern: "[\\p{L}\\p{N}\\p{P}]*"
          title: TransactionId
          type: string
      required:
      - TransactionId
      title: CancelTransaction_request
      type: object
    CommitTransaction_request:
      properties:
        TransactionId:
          description: The transaction to commit.
          maxLength: 255
          minLength: 1
          pattern: "[\\p{L}\\p{N}\\p{P}]*"
          title: TransactionId
          type: string
      required:
      - TransactionId
      title: CommitTransaction_request
      type: object
    CreateDataCellsFilter_request_TableData_RowFilter:
      allOf:
      - $ref: '#/components/schemas/RowFilter'
      - description: A PartiQL predicate.
      example:
        AllRowsWildcard: ""
        FilterExpression: ""
      title: CreateDataCellsFilter_request_TableData_RowFilter
    CreateDataCellsFilter_request_TableData_ColumnWildcard:
      allOf:
      - $ref: '#/components/schemas/ColumnWildcard'
      - description: <p>A wildcard with exclusions.</p> <p>You must specify either
          a <code>ColumnNames</code> list or the <code>ColumnWildCard</code>. </p>
      example:
        ExcludedColumnNames: ""
      title: CreateDataCellsFilter_request_TableData_ColumnWildcard
    CreateDataCellsFilter_request_TableData:
      description: A structure that describes certain columns on certain rows.
      properties:
        TableCatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The ID of the catalog to which the table belongs.
          title: TableCatalogId
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A database in the Glue Data Catalog.
          title: DatabaseName
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A table in the database.
          title: TableName
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name given by the user to the data filter cell.
          title: Name
        RowFilter:
          $ref: '#/components/schemas/CreateDataCellsFilter_request_TableData_RowFilter'
        ColumnNames:
          allOf:
          - $ref: '#/components/schemas/ColumnNames'
          - description: "A list of column names and/or nested column attributes.\
              \ When specifying nested attributes, use a qualified dot (.) delimited\
              \ format such as \"address\".\"zip\". Nested attributes within this\
              \ list may not exceed a depth of 5."
          title: ColumnNames
        ColumnWildcard:
          $ref: '#/components/schemas/CreateDataCellsFilter_request_TableData_ColumnWildcard'
        VersionId:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          - description: The ID of the data cells filter version.
          title: VersionId
      title: CreateDataCellsFilter_request_TableData
      type: object
    CreateDataCellsFilter_request:
      properties:
        TableData:
          $ref: '#/components/schemas/CreateDataCellsFilter_request_TableData'
      required:
      - TableData
      title: CreateDataCellsFilter_request
      type: object
    CreateLFTag_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TagKey:
          description: The key-name for the LF-tag.
          maxLength: 128
          minLength: 1
          pattern: "^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*)$"
          title: TagKey
          type: string
        TagValues:
          description: A list of possible values an attribute can take.
          items:
            $ref: '#/components/schemas/LFTagValue'
          maxItems: 50
          minItems: 1
          title: TagValues
          type: array
      required:
      - TagKey
      - TagValues
      title: CreateLFTag_request
      type: object
    DeleteDataCellsFilter_request:
      properties:
        TableCatalogId:
          description: The ID of the catalog to which the table belongs.
          maxLength: 255
          minLength: 1
          title: TableCatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        DatabaseName:
          description: A database in the Glue Data Catalog.
          maxLength: 255
          minLength: 1
          title: DatabaseName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TableName:
          description: A table in the database.
          maxLength: 255
          minLength: 1
          title: TableName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Name:
          description: The name given by the user to the data filter cell.
          maxLength: 255
          minLength: 1
          title: Name
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
      title: DeleteDataCellsFilter_request
      type: object
    DeleteLFTag_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TagKey:
          description: The key-name for the LF-tag to delete.
          maxLength: 128
          minLength: 1
          pattern: "^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*)$"
          title: TagKey
          type: string
      required:
      - TagKey
      title: DeleteLFTag_request
      type: object
    DeleteObjectsOnCancel_request:
      properties:
        CatalogId:
          description: The Glue data catalog that contains the governed table. Defaults
            to the current account ID.
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        DatabaseName:
          description: The database that contains the governed table.
          maxLength: 255
          minLength: 1
          title: DatabaseName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TableName:
          description: The name of the governed table.
          maxLength: 255
          minLength: 1
          title: TableName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TransactionId:
          description: ID of the transaction that the writes occur in.
          maxLength: 255
          minLength: 1
          pattern: "[\\p{L}\\p{N}\\p{P}]*"
          title: TransactionId
          type: string
        Objects:
          description: "A list of VirtualObject structures, which indicates the Amazon\
            \ S3 objects to be deleted if the transaction cancels."
          items:
            $ref: '#/components/schemas/VirtualObject'
          maxItems: 100
          minItems: 1
          title: Objects
          type: array
      required:
      - DatabaseName
      - Objects
      - TableName
      - TransactionId
      title: DeleteObjectsOnCancel_request
      type: object
    DeregisterResource_request:
      properties:
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the resource that you want
            to deregister.
          title: ResourceArn
          type: string
      required:
      - ResourceArn
      title: DeregisterResource_request
      type: object
    DescribeResource_request:
      properties:
        ResourceArn:
          description: The resource ARN.
          title: ResourceArn
          type: string
      required:
      - ResourceArn
      title: DescribeResource_request
      type: object
    DescribeTransaction_request:
      properties:
        TransactionId:
          description: The transaction for which to return status.
          maxLength: 255
          minLength: 1
          pattern: "[\\p{L}\\p{N}\\p{P}]*"
          title: TransactionId
          type: string
      required:
      - TransactionId
      title: DescribeTransaction_request
      type: object
    ExtendTransaction_request:
      properties:
        TransactionId:
          description: The transaction to extend.
          maxLength: 255
          minLength: 1
          pattern: "[\\p{L}\\p{N}\\p{P}]*"
          title: TransactionId
          type: string
      title: ExtendTransaction_request
      type: object
    GetDataCellsFilter_request:
      properties:
        TableCatalogId:
          description: The ID of the catalog to which the table belongs.
          maxLength: 255
          minLength: 1
          title: TableCatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        DatabaseName:
          description: A database in the Glue Data Catalog.
          maxLength: 255
          minLength: 1
          title: DatabaseName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TableName:
          description: A table in the database.
          maxLength: 255
          minLength: 1
          title: TableName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Name:
          description: The name given by the user to the data filter cell.
          maxLength: 255
          minLength: 1
          title: Name
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
      required:
      - DatabaseName
      - Name
      - TableCatalogId
      - TableName
      title: GetDataCellsFilter_request
      type: object
    GetDataLakeSettings_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
      title: GetDataLakeSettings_request
      type: object
    GetEffectivePermissionsForPath_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the resource for which you
            want to get permissions.
          title: ResourceArn
          type: string
        NextToken:
          description: "A continuation token, if this is not the first call to retrieve\
            \ this list."
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to return.
          maximum: 1000
          minimum: 1
          title: MaxResults
          type: integer
      required:
      - ResourceArn
      title: GetEffectivePermissionsForPath_request
      type: object
    GetLFTag_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TagKey:
          description: The key-name for the LF-tag.
          maxLength: 128
          minLength: 1
          pattern: "^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*)$"
          title: TagKey
          type: string
      required:
      - TagKey
      title: GetLFTag_request
      type: object
    GetQueryState_request:
      properties:
        QueryId:
          description: The ID of the plan query operation.
          maxLength: 36
          minLength: 36
          title: QueryId
          type: string
      required:
      - QueryId
      title: GetQueryState_request
      type: object
    GetResourceLFTags_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Resource:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource'
        ShowAssignedLFTags:
          description: Indicates whether to show the assigned LF-tags.
          title: ShowAssignedLFTags
          type: boolean
      required:
      - Resource
      title: GetResourceLFTags_request
      type: object
    GetTableObjects_request:
      properties:
        CatalogId:
          description: The catalog containing the governed table. Defaults to the
            callerâ€™s account.
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        DatabaseName:
          description: The database containing the governed table.
          maxLength: 255
          minLength: 1
          title: DatabaseName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TableName:
          description: The governed table for which to retrieve objects.
          maxLength: 255
          minLength: 1
          title: TableName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TransactionId:
          description: "The transaction ID at which to read the governed table contents.\
            \ If this transaction has aborted, an error is returned. If not set, defaults\
            \ to the most recent committed transaction. Cannot be specified along\
            \ with <code>QueryAsOfTime</code>."
          maxLength: 255
          minLength: 1
          pattern: "[\\p{L}\\p{N}\\p{P}]*"
          title: TransactionId
          type: string
        QueryAsOfTime:
          description: "The time as of when to read the governed table contents. If\
            \ not set, the most recent transaction commit time is used. Cannot be\
            \ specified along with <code>TransactionId</code>."
          format: date-time
          title: QueryAsOfTime
          type: string
        PartitionPredicate:
          description: "<p>A predicate to filter the objects returned based on the\
            \ partition keys defined in the governed table.</p> <ul> <li> <p>The comparison\
            \ operators supported are: =, &gt;, &lt;, &gt;=, &lt;=</p> </li> <li>\
            \ <p>The logical operators supported are: AND</p> </li> <li> <p>The data\
            \ types supported are integer, long, date(yyyy-MM-dd), timestamp(yyyy-MM-dd\
            \ HH:mm:ssXXX or yyyy-MM-dd HH:mm:ss\"), string and decimal.</p> </li>\
            \ </ul>"
          maxLength: 2048
          minLength: 0
          title: PartitionPredicate
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            r\\n\\t]*"
        MaxResults:
          description: Specifies how many values to return in a page.
          maximum: 1000
          minimum: 1
          title: MaxResults
          type: integer
        NextToken:
          description: A continuation token if this is not the first call to retrieve
            these objects.
          maxLength: 4096
          title: NextToken
          type: string
      required:
      - DatabaseName
      - TableName
      title: GetTableObjects_request
      type: object
    GetTemporaryGluePartitionCredentials_request_Partition:
      description: Contains a list of values defining partitions.
      properties:
        Values:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: The list of partition values.
          title: Values
      title: GetTemporaryGluePartitionCredentials_request_Partition
      type: object
    GetTemporaryGluePartitionCredentials_request_AuditContext:
      description: 'A structure used to include auditing information on the privileged
        API. '
      properties:
        AdditionalAuditContext:
          allOf:
          - $ref: '#/components/schemas/AuditContextString'
          - description: The filter engine can populate the 'AdditionalAuditContext'
              information with the request ID for you to track. This information will
              be displayed in CloudTrail log in your account.
          title: AdditionalAuditContext
      title: GetTemporaryGluePartitionCredentials_request_AuditContext
      type: object
    GetTemporaryGluePartitionCredentials_request:
      properties:
        TableArn:
          description: The ARN of the partitions' table.
          title: TableArn
          type: string
        Partition:
          $ref: '#/components/schemas/GetTemporaryGluePartitionCredentials_request_Partition'
        Permissions:
          description: Filters the request based on the user having been granted a
            list of specified permissions on the requested resource(s).
          items:
            $ref: '#/components/schemas/Permission'
          title: Permissions
          type: array
        DurationSeconds:
          description: "The time period, between 900 and 21,600 seconds, for the timeout\
            \ of the temporary credentials."
          maximum: 43200
          minimum: 900
          title: DurationSeconds
          type: integer
        AuditContext:
          $ref: '#/components/schemas/GetTemporaryGluePartitionCredentials_request_AuditContext'
        SupportedPermissionTypes:
          description: A list of supported permission types for the partition. Valid
            values are <code>COLUMN_PERMISSION</code> and <code>CELL_FILTER_PERMISSION</code>.
          items:
            $ref: '#/components/schemas/PermissionType'
          maxItems: 255
          minItems: 1
          title: SupportedPermissionTypes
          type: array
      required:
      - Partition
      - TableArn
      title: GetTemporaryGluePartitionCredentials_request
      type: object
    GetTemporaryGlueTableCredentials_request:
      properties:
        TableArn:
          description: The ARN identifying a table in the Data Catalog for the temporary
            credentials request.
          title: TableArn
          type: string
        Permissions:
          description: Filters the request based on the user having been granted a
            list of specified permissions on the requested resource(s).
          items:
            $ref: '#/components/schemas/Permission'
          title: Permissions
          type: array
        DurationSeconds:
          description: "The time period, between 900 and 21,600 seconds, for the timeout\
            \ of the temporary credentials."
          maximum: 43200
          minimum: 900
          title: DurationSeconds
          type: integer
        AuditContext:
          $ref: '#/components/schemas/GetTemporaryGluePartitionCredentials_request_AuditContext'
        SupportedPermissionTypes:
          description: A list of supported permission types for the table. Valid values
            are <code>COLUMN_PERMISSION</code> and <code>CELL_FILTER_PERMISSION</code>.
          items:
            $ref: '#/components/schemas/PermissionType'
          maxItems: 255
          minItems: 1
          title: SupportedPermissionTypes
          type: array
      required:
      - TableArn
      title: GetTemporaryGlueTableCredentials_request
      type: object
    GetWorkUnitResults_request:
      properties:
        QueryId:
          description: The ID of the plan query operation for which to get results.
          maxLength: 36
          minLength: 36
          title: QueryId
          type: string
        WorkUnitId:
          description: The work unit ID for which to get results. Value generated
            by enumerating <code>WorkUnitIdMin</code> to <code>WorkUnitIdMax</code>
            (inclusive) from the <code>WorkUnitRange</code> in the output of <code>GetWorkUnits</code>.
          minimum: 0
          title: WorkUnitId
          type: integer
        WorkUnitToken:
          description: A work token used to query the execution service. Token output
            from <code>GetWorkUnits</code>.
          format: password
          minLength: 1
          title: WorkUnitToken
          type: string
      required:
      - QueryId
      - WorkUnitId
      - WorkUnitToken
      title: GetWorkUnitResults_request
      type: object
    GetWorkUnits_request:
      properties:
        NextToken:
          description: "A continuation token, if this is a continuation call."
          title: NextToken
          type: string
        PageSize:
          description: "The size of each page to get in the Amazon Web Services service\
            \ call. This does not affect the number of items returned in the command's\
            \ output. Setting a smaller page size results in more calls to the Amazon\
            \ Web Services service, retrieving fewer items in each call. This can\
            \ help prevent the Amazon Web Services service calls from timing out."
          title: PageSize
          type: integer
        QueryId:
          description: The ID of the plan query operation.
          maxLength: 36
          minLength: 36
          title: QueryId
          type: string
      required:
      - QueryId
      title: GetWorkUnits_request
      type: object
    GrantPermissions_request_Principal:
      description: The Lake Formation principal. Supported principals are IAM users
        or IAM roles.
      properties:
        DataLakePrincipalIdentifier:
          allOf:
          - $ref: '#/components/schemas/DataLakePrincipalString'
          - description: An identifier for the Lake Formation principal.
          title: DataLakePrincipalIdentifier
      title: GrantPermissions_request_Principal
      type: object
    GrantPermissions_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Principal:
          $ref: '#/components/schemas/GrantPermissions_request_Principal'
        Resource:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource'
        Permissions:
          description: 'The permissions granted to the principal on the resource.
            Lake Formation defines privileges to grant and revoke access to metadata
            in the Data Catalog and data organized in underlying data storage such
            as Amazon S3. Lake Formation requires that each principal be authorized
            to perform a specific task on Lake Formation resources. '
          items:
            $ref: '#/components/schemas/Permission'
          title: Permissions
          type: array
        PermissionsWithGrantOption:
          description: Indicates a list of the granted permissions that the principal
            may pass to other users. These permissions may only be a subset of the
            permissions granted in the <code>Privileges</code>.
          items:
            $ref: '#/components/schemas/Permission'
          title: PermissionsWithGrantOption
          type: array
      required:
      - Permissions
      - Principal
      - Resource
      title: GrantPermissions_request
      type: object
    ListDataCellsFilter_request_Table:
      description: 'A structure for the table object. A table is a metadata definition
        that represents your data. You can Grant and Revoke table privileges to a
        principal. '
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The identifier for the Data Catalog. By default, it is the\
              \ account ID of the caller."
          title: CatalogId
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: 'The name of the database for the table. Unique to a Data
              Catalog. A database is a set of associated table definitions organized
              into a logical group. You can Grant and Revoke database privileges to
              a principal. '
          title: DatabaseName
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the table.
          title: Name
        TableWildcard:
          allOf:
          - $ref: '#/components/schemas/TableWildcard'
          - description: <p>A wildcard object representing every table under a database.</p>
              <p>At least one of <code>TableResource$Name</code> or <code>TableResource$TableWildcard</code>
              is required.</p>
          title: TableWildcard
      title: ListDataCellsFilter_request_Table
      type: object
    ListDataCellsFilter_request:
      properties:
        Table:
          $ref: '#/components/schemas/ListDataCellsFilter_request_Table'
        NextToken:
          description: "A continuation token, if this is a continuation call."
          title: NextToken
          type: string
        MaxResults:
          description: The maximum size of the response.
          maximum: 1000
          minimum: 1
          title: MaxResults
          type: integer
      title: ListDataCellsFilter_request
      type: object
    ListLFTags_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        ResourceShareType:
          description: "If resource share type is <code>ALL</code>, returns both in-account\
            \ LF-tags and shared LF-tags that the requester has permission to view.\
            \ If resource share type is <code>FOREIGN</code>, returns all share LF-tags\
            \ that the requester can view. If no resource share type is passed, lists\
            \ LF-tags in the given catalog ID that the requester has permission to\
            \ view."
          enum:
          - FOREIGN
          - ALL
          title: ResourceShareType
          type: string
        MaxResults:
          description: The maximum number of results to return.
          maximum: 1000
          minimum: 1
          title: MaxResults
          type: integer
        NextToken:
          description: "A continuation token, if this is not the first call to retrieve\
            \ this list."
          title: NextToken
          type: string
      title: ListLFTags_request
      type: object
    ListPermissions_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Principal:
          $ref: '#/components/schemas/GrantPermissions_request_Principal'
        ResourceType:
          description: Specifies a resource type to filter the permissions returned.
          enum:
          - CATALOG
          - DATABASE
          - TABLE
          - DATA_LOCATION
          - LF_TAG
          - LF_TAG_POLICY
          - LF_TAG_POLICY_DATABASE
          - LF_TAG_POLICY_TABLE
          title: ResourceType
          type: string
        Resource:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource'
        NextToken:
          description: "A continuation token, if this is not the first call to retrieve\
            \ this list."
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to return.
          maximum: 1000
          minimum: 1
          title: MaxResults
          type: integer
        IncludeRelated:
          description: Indicates that related permissions should be included in the
            results.
          maxLength: 5
          minLength: 1
          title: IncludeRelated
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
      title: ListPermissions_request
      type: object
    ListResources_request:
      properties:
        FilterConditionList:
          description: Any applicable row-level and/or column-level filtering conditions
            for the resources.
          items:
            $ref: '#/components/schemas/FilterCondition'
          maxItems: 20
          minItems: 1
          title: FilterConditionList
          type: array
        MaxResults:
          description: The maximum number of resource results.
          maximum: 1000
          minimum: 1
          title: MaxResults
          type: integer
        NextToken:
          description: "A continuation token, if this is not the first call to retrieve\
            \ these resources."
          title: NextToken
          type: string
      title: ListResources_request
      type: object
    ListTableStorageOptimizers_request:
      properties:
        CatalogId:
          description: The Catalog ID of the table.
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        DatabaseName:
          description: Name of the database where the table is present.
          maxLength: 255
          minLength: 1
          title: DatabaseName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TableName:
          description: Name of the table.
          maxLength: 255
          minLength: 1
          title: TableName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        StorageOptimizerType:
          description: The specific type of storage optimizers to list. The supported
            value is <code>compaction</code>.
          enum:
          - COMPACTION
          - GARBAGE_COLLECTION
          - ALL
          title: StorageOptimizerType
          type: string
        MaxResults:
          description: The number of storage optimizers to return on each call.
          maximum: 1000
          minimum: 1
          title: MaxResults
          type: integer
        NextToken:
          description: "A continuation token, if this is a continuation call."
          title: NextToken
          type: string
      required:
      - DatabaseName
      - TableName
      title: ListTableStorageOptimizers_request
      type: object
    ListTransactions_request:
      properties:
        CatalogId:
          description: The catalog for which to list transactions. Defaults to the
            account ID of the caller.
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        StatusFilter:
          description: ' A filter indicating the status of transactions to return.
            Options are ALL | COMPLETED | COMMITTED | ABORTED | ACTIVE. The default
            is <code>ALL</code>.'
          enum:
          - ALL
          - COMPLETED
          - ACTIVE
          - COMMITTED
          - ABORTED
          title: StatusFilter
          type: string
        MaxResults:
          description: The maximum number of transactions to return in a single call.
          maximum: 1000
          minimum: 1
          title: MaxResults
          type: integer
        NextToken:
          description: A continuation token if this is not the first call to retrieve
            transactions.
          maxLength: 4096
          title: NextToken
          type: string
      title: ListTransactions_request
      type: object
    PutDataLakeSettings_request_DataLakeSettings:
      description: A structure representing a list of Lake Formation principals designated
        as data lake administrators and lists of principal permission entries for
        default create database and default create table permissions.
      properties:
        DataLakeAdmins:
          allOf:
          - $ref: '#/components/schemas/DataLakePrincipalList'
          - description: A list of Lake Formation principals. Supported principals
              are IAM users or IAM roles.
          title: DataLakeAdmins
        ReadOnlyAdmins:
          allOf:
          - $ref: '#/components/schemas/DataLakePrincipalList'
          - description: "A list of Lake Formation principals with only view access\
              \ to the resources, without the ability to make changes. Supported principals\
              \ are IAM users or IAM roles."
          title: ReadOnlyAdmins
        CreateDatabaseDefaultPermissions:
          allOf:
          - $ref: '#/components/schemas/PrincipalPermissionsList'
          - description: "<p>Specifies whether access control on newly created database\
              \ is managed by Lake Formation permissions or exclusively by IAM permissions.</p>\
              \ <p>A null value indicates access control by Lake Formation permissions.\
              \ A value that assigns ALL to IAM_ALLOWED_PRINCIPALS indicates access\
              \ control by IAM permissions. This is referred to as the setting \"\
              Use only IAM access control,\" and is for backward compatibility with\
              \ the Glue permission model implemented by IAM permissions.</p> <p>The\
              \ only permitted values are an empty array or an array that contains\
              \ a single JSON object that grants ALL to IAM_ALLOWED_PRINCIPALS.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html\"\
              >Changing the Default Security Settings for Your Data Lake</a>.</p>"
          title: CreateDatabaseDefaultPermissions
        CreateTableDefaultPermissions:
          allOf:
          - $ref: '#/components/schemas/PrincipalPermissionsList'
          - description: "<p>Specifies whether access control on newly created table\
              \ is managed by Lake Formation permissions or exclusively by IAM permissions.</p>\
              \ <p>A null value indicates access control by Lake Formation permissions.\
              \ A value that assigns ALL to IAM_ALLOWED_PRINCIPALS indicates access\
              \ control by IAM permissions. This is referred to as the setting \"\
              Use only IAM access control,\" and is for backward compatibility with\
              \ the Glue permission model implemented by IAM permissions.</p> <p>The\
              \ only permitted values are an empty array or an array that contains\
              \ a single JSON object that grants ALL to IAM_ALLOWED_PRINCIPALS.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html\"\
              >Changing the Default Security Settings for Your Data Lake</a>.</p>"
          title: CreateTableDefaultPermissions
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersMap'
          - description: "A key-value map that provides an additional configuration\
              \ on your data lake. CrossAccountVersion is the key you can configure\
              \ in the Parameters field. Accepted values for the CrossAccountVersion\
              \ key are 1, 2, and 3."
          title: Parameters
        TrustedResourceOwners:
          allOf:
          - $ref: '#/components/schemas/TrustedResourceOwners'
          - description: "<p>A list of the resource-owning account IDs that the caller's\
              \ account can use to share their user access details (user ARNs). The\
              \ user ARNs can be logged in the resource owner's CloudTrail log.</p>\
              \ <p>You may want to specify this property when you are in a high-trust\
              \ boundary, such as the same team or company. </p>"
          title: TrustedResourceOwners
        AllowExternalDataFiltering:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: "<p>Whether to allow Amazon EMR clusters to access data managed\
              \ by Lake Formation. </p> <p>If true, you allow Amazon EMR clusters\
              \ to access data in Amazon S3 locations that are registered with Lake\
              \ Formation.</p> <p>If false or null, no Amazon EMR clusters will be\
              \ able to access data in Amazon S3 locations that are registered with\
              \ Lake Formation.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/initial-LF-setup.html#external-data-filter\"\
              >(Optional) Allow external data filtering</a>.</p>"
          title: AllowExternalDataFiltering
        AllowFullTableExternalDataAccess:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Whether to allow a third-party query engine to get data access
              credentials without session tags when a caller has full data access
              permissions.
          title: AllowFullTableExternalDataAccess
        ExternalDataFilteringAllowList:
          allOf:
          - $ref: '#/components/schemas/DataLakePrincipalList'
          - description: A list of the account IDs of Amazon Web Services accounts
              with Amazon EMR clusters that are to perform data filtering.&gt;
          title: ExternalDataFilteringAllowList
        AuthorizedSessionTagValueList:
          allOf:
          - $ref: '#/components/schemas/AuthorizedSessionTagValueList'
          - description: "Lake Formation relies on a privileged process secured by\
              \ Amazon EMR or the third party integrator to tag the user's role while\
              \ assuming it. Lake Formation will publish the acceptable key-value\
              \ pair, for example key = \"LakeFormationTrustedCaller\" and value =\
              \ \"TRUE\" and the third party integrator must properly tag the temporary\
              \ security credentials that will be used to call Lake Formation's administrative\
              \ APIs."
          title: AuthorizedSessionTagValueList
      title: PutDataLakeSettings_request_DataLakeSettings
      type: object
    PutDataLakeSettings_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        DataLakeSettings:
          $ref: '#/components/schemas/PutDataLakeSettings_request_DataLakeSettings'
      required:
      - DataLakeSettings
      title: PutDataLakeSettings_request
      type: object
    RegisterResource_request:
      properties:
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the resource that you want
            to register.
          title: ResourceArn
          type: string
        UseServiceLinkedRole:
          description: "<p>Designates an Identity and Access Management (IAM) service-linked\
            \ role by registering this role with the Data Catalog. A service-linked\
            \ role is a unique type of IAM role that is linked directly to Lake Formation.</p>\
            \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/service-linked-roles.html\"\
            >Using Service-Linked Roles for Lake Formation</a>.</p>"
          title: UseServiceLinkedRole
          type: boolean
        RoleArn:
          description: The identifier for the role that registers the resource.
          pattern: "arn:aws:iam::[0-9]*:role/.*"
          title: RoleArn
          type: string
        WithFederation:
          description: Whether or not the resource is a federated resource.
          title: WithFederation
          type: boolean
      required:
      - ResourceArn
      title: RegisterResource_request
      type: object
    RemoveLFTagsFromResource_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Resource:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource'
        LFTags:
          description: The LF-tags to be removed from the resource.
          items:
            $ref: '#/components/schemas/LFTagPair'
          maxItems: 50
          minItems: 1
          title: LFTags
          type: array
      required:
      - LFTags
      - Resource
      title: RemoveLFTagsFromResource_request
      type: object
    RevokePermissions_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Principal:
          $ref: '#/components/schemas/GrantPermissions_request_Principal'
        Resource:
          $ref: '#/components/schemas/AddLFTagsToResource_request_Resource'
        Permissions:
          description: "The permissions revoked to the principal on the resource.\
            \ For information about permissions, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html\"\
            >Security and Access Control to Metadata and Data</a>."
          items:
            $ref: '#/components/schemas/Permission'
          title: Permissions
          type: array
        PermissionsWithGrantOption:
          description: Indicates a list of permissions for which to revoke the grant
            option allowing the principal to pass permissions to other principals.
          items:
            $ref: '#/components/schemas/Permission'
          title: PermissionsWithGrantOption
          type: array
      required:
      - Permissions
      - Principal
      - Resource
      title: RevokePermissions_request
      type: object
    SearchDatabasesByLFTags_request:
      properties:
        NextToken:
          description: "A continuation token, if this is not the first call to retrieve\
            \ this list."
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          title: MaxResults
          type: integer
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Expression:
          description: A list of conditions (<code>LFTag</code> structures) to search
            for in database resources.
          items:
            $ref: '#/components/schemas/LFTag'
          title: Expression
          type: array
      required:
      - Expression
      title: SearchDatabasesByLFTags_request
      type: object
    SearchTablesByLFTags_request:
      properties:
        NextToken:
          description: "A continuation token, if this is not the first call to retrieve\
            \ this list."
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          title: MaxResults
          type: integer
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        Expression:
          description: A list of conditions (<code>LFTag</code> structures) to search
            for in table resources.
          items:
            $ref: '#/components/schemas/LFTag'
          title: Expression
          type: array
      required:
      - Expression
      title: SearchTablesByLFTags_request
      type: object
    StartQueryPlanning_request_QueryPlanningContext:
      description: A structure containing information about the query plan.
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partition in question\
              \ resides. If none is provided, the Amazon Web Services account ID is\
              \ used by default."
          title: CatalogId
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/QueryPlanningContextDatabaseNameString'
          - description: The database containing the table.
          title: DatabaseName
        QueryAsOfTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time as of when to read the table contents. If not set,\
              \ the most recent transaction commit time will be used. Cannot be specified\
              \ along with <code>TransactionId</code>."
          title: QueryAsOfTime
        QueryParameters:
          allOf:
          - $ref: '#/components/schemas/QueryParameterMap'
          - description: A map consisting of key-value pairs.
          title: QueryParameters
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: "The transaction ID at which to read the table contents.\
              \ If this transaction is not committed, the read will be treated as\
              \ part of that transaction and will see its writes. If this transaction\
              \ has aborted, an error will be returned. If not set, defaults to the\
              \ most recent committed transaction. Cannot be specified along with\
              \ <code>QueryAsOfTime</code>."
          title: TransactionId
      title: StartQueryPlanning_request_QueryPlanningContext
      type: object
    StartQueryPlanning_request:
      properties:
        QueryPlanningContext:
          $ref: '#/components/schemas/StartQueryPlanning_request_QueryPlanningContext'
        QueryString:
          description: A PartiQL query statement used as an input to the planner service.
          format: password
          minLength: 1
          title: QueryString
          type: string
      required:
      - QueryPlanningContext
      - QueryString
      title: StartQueryPlanning_request
      type: object
    StartTransaction_request:
      properties:
        TransactionType:
          description: 'Indicates whether this transaction should be read only or
            read and write. Writes made using a read-only transaction ID will be rejected.
            Read-only transactions do not need to be committed. '
          enum:
          - READ_AND_WRITE
          - READ_ONLY
          title: TransactionType
          type: string
      title: StartTransaction_request
      type: object
    UpdateLFTag_request:
      properties:
        CatalogId:
          description: "The identifier for the Data Catalog. By default, the account\
            \ ID. The Data Catalog is the persistent metadata store. It contains database\
            \ definitions, table definitions, and other control information to manage\
            \ your Lake Formation environment. "
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TagKey:
          description: The key-name for the LF-tag for which to add or delete values.
          maxLength: 128
          minLength: 1
          pattern: "^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*)$"
          title: TagKey
          type: string
        TagValuesToDelete:
          description: A list of LF-tag values to delete from the LF-tag.
          items:
            $ref: '#/components/schemas/LFTagValue'
          maxItems: 50
          minItems: 1
          title: TagValuesToDelete
          type: array
        TagValuesToAdd:
          description: A list of LF-tag values to add from the LF-tag.
          items:
            $ref: '#/components/schemas/LFTagValue'
          maxItems: 50
          minItems: 1
          title: TagValuesToAdd
          type: array
      required:
      - TagKey
      title: UpdateLFTag_request
      type: object
    UpdateResource_request:
      properties:
        RoleArn:
          description: The new role to use for the given resource registered in Lake
            Formation.
          pattern: "arn:aws:iam::[0-9]*:role/.*"
          title: RoleArn
          type: string
        ResourceArn:
          description: The resource ARN.
          title: ResourceArn
          type: string
        WithFederation:
          description: Whether or not the resource is a federated resource.
          title: WithFederation
          type: boolean
      required:
      - ResourceArn
      - RoleArn
      title: UpdateResource_request
      type: object
    UpdateTableObjects_request:
      properties:
        CatalogId:
          description: The catalog containing the governed table to update. Defaults
            to the callerâ€™s account ID.
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        DatabaseName:
          description: The database containing the governed table to update.
          maxLength: 255
          minLength: 1
          title: DatabaseName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TableName:
          description: The governed table to update.
          maxLength: 255
          minLength: 1
          title: TableName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TransactionId:
          description: The transaction at which to do the write.
          maxLength: 255
          minLength: 1
          pattern: "[\\p{L}\\p{N}\\p{P}]*"
          title: TransactionId
          type: string
        WriteOperations:
          description: A list of <code>WriteOperation</code> objects that define an
            object to add to or delete from the manifest for a governed table.
          items:
            $ref: '#/components/schemas/WriteOperation'
          maxItems: 100
          minItems: 1
          title: WriteOperations
          type: array
      required:
      - DatabaseName
      - TableName
      - WriteOperations
      title: UpdateTableObjects_request
      type: object
    UpdateTableStorageOptimizer_request:
      properties:
        CatalogId:
          description: The Catalog ID of the table.
          maxLength: 255
          minLength: 1
          title: CatalogId
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        DatabaseName:
          description: Name of the database where the table is present.
          maxLength: 255
          minLength: 1
          title: DatabaseName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        TableName:
          description: Name of the table for which to enable the storage optimizer.
          maxLength: 255
          minLength: 1
          title: TableName
          type: string
          x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
            t]*"
        StorageOptimizerConfig:
          additionalProperties:
            $ref: '#/components/schemas/StorageOptimizerConfig'
          description: Name of the table for which to enable the storage optimizer.
          title: StorageOptimizerConfig
          type: object
      required:
      - DatabaseName
      - StorageOptimizerConfig
      - TableName
      title: UpdateTableStorageOptimizer_request
      type: object
    TableWithColumnsResource_ColumnWildcard:
      allOf:
      - $ref: '#/components/schemas/ColumnWildcard'
      - description: A wildcard specified by a <code>ColumnWildcard</code> object.
          At least one of <code>ColumnNames</code> or <code>ColumnWildcard</code>
          is required.
      example:
        ExcludedColumnNames: ""
      title: TableWithColumnsResource_ColumnWildcard
    BatchPermissionsRequestEntry_Principal:
      allOf:
      - $ref: '#/components/schemas/DataLakePrincipal'
      - description: The principal to be granted a permission.
      title: BatchPermissionsRequestEntry_Principal
    BatchPermissionsRequestEntry_Resource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - description: The resource to which the principal is to be granted a permission.
      title: BatchPermissionsRequestEntry_Resource
    DescribeResourceResponse_ResourceInfo:
      allOf:
      - $ref: '#/components/schemas/ResourceInfo'
      - description: A structure containing information about an Lake Formation resource.
      example:
        LastModified: ""
        ResourceArn: ""
        WithFederation: ""
        RoleArn: ""
      title: DescribeResourceResponse_ResourceInfo
    DescribeTransactionResponse_TransactionDescription:
      allOf:
      - $ref: '#/components/schemas/TransactionDescription'
      - description: Returns a <code>TransactionDescription</code> object containing
          information about the transaction.
      example:
        TransactionStatus: ""
        TransactionStartTime: ""
        TransactionEndTime: ""
        TransactionId: ""
      title: DescribeTransactionResponse_TransactionDescription
    GetDataCellsFilterResponse_DataCellsFilter:
      allOf:
      - $ref: '#/components/schemas/DataCellsFilter'
      - description: A structure that describes certain columns on certain rows.
      example:
        VersionId: ""
        TableName: ""
        ColumnNames: ""
        RowFilter:
          AllRowsWildcard: ""
          FilterExpression: ""
        DatabaseName: ""
        TableCatalogId: ""
        Name: ""
        ColumnWildcard:
          ExcludedColumnNames: ""
      title: GetDataCellsFilterResponse_DataCellsFilter
    GetDataLakeSettingsResponse_DataLakeSettings:
      allOf:
      - $ref: '#/components/schemas/DataLakeSettings'
      - description: A structure representing a list of Lake Formation principals
          designated as data lake administrators.
      example:
        AllowExternalDataFiltering: ""
        ExternalDataFilteringAllowList: ""
        CreateTableDefaultPermissions: ""
        Parameters: ""
        ReadOnlyAdmins: ""
        AllowFullTableExternalDataAccess: ""
        CreateDatabaseDefaultPermissions: ""
        AuthorizedSessionTagValueList: ""
        DataLakeAdmins: ""
        TrustedResourceOwners: ""
      title: GetDataLakeSettingsResponse_DataLakeSettings
    GetQueryStatisticsResponse_ExecutionStatistics:
      allOf:
      - $ref: '#/components/schemas/ExecutionStatistics'
      - description: An <code>ExecutionStatistics</code> structure containing execution
          statistics.
      example:
        WorkUnitsExecutedCount: ""
        DataScannedBytes: ""
        AverageExecutionTimeMillis: ""
      title: GetQueryStatisticsResponse_ExecutionStatistics
    GetQueryStatisticsResponse_PlanningStatistics:
      allOf:
      - $ref: '#/components/schemas/PlanningStatistics'
      - description: A <code>PlanningStatistics</code> structure containing query
          planning statistics.
      example:
        EstimatedDataToScanBytes: ""
        QueueTimeMillis: ""
        WorkUnitsGeneratedCount: ""
        PlanningTimeMillis: ""
      title: GetQueryStatisticsResponse_PlanningStatistics
    WriteOperation_AddObject:
      allOf:
      - $ref: '#/components/schemas/AddObjectInput'
      - description: A new object to add to the governed table.
      title: WriteOperation_AddObject
    WriteOperation_DeleteObject:
      allOf:
      - $ref: '#/components/schemas/DeleteObjectInput'
      - description: An object to delete from the governed table.
      title: WriteOperation_DeleteObject
    AddLFTagsToResourceRequest_Resource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - description: "The database, table, or column resource to which to attach an\
          \ LF-tag."
      example:
        LFTag:
          TagKey: ""
          CatalogId: ""
          TagValues: ""
        Table:
          DatabaseName: ""
          CatalogId: ""
          TableWildcard: ""
          Name: ""
        DataCellsFilter:
          TableName: ""
          DatabaseName: ""
          TableCatalogId: ""
          Name: ""
        TableWithColumns:
          ColumnNames: ""
          DatabaseName: ""
          CatalogId: ""
          Name: ""
          ColumnWildcard:
            ExcludedColumnNames: ""
        LFTagPolicy:
          Expression: ""
          ResourceType: ""
          CatalogId: ""
        Database:
          CatalogId: ""
          Name: ""
        DataLocation:
          ResourceArn: ""
          CatalogId: ""
        Catalog: ""
      title: AddLFTagsToResourceRequest_Resource
    BatchPermissionsFailureEntry_RequestEntry:
      allOf:
      - $ref: '#/components/schemas/BatchPermissionsRequestEntry'
      - description: An identifier for an entry of the batch request.
      title: BatchPermissionsFailureEntry_RequestEntry
    BatchPermissionsFailureEntry_Error:
      allOf:
      - $ref: '#/components/schemas/ErrorDetail'
      - description: An error message that applies to the failure of the entry.
      title: BatchPermissionsFailureEntry_Error
    CreateDataCellsFilterRequest_TableData:
      allOf:
      - $ref: '#/components/schemas/DataCellsFilter'
      - description: A <code>DataCellsFilter</code> structure containing information
          about the data cells filter.
      example:
        VersionId: ""
        TableName: ""
        ColumnNames: ""
        RowFilter:
          AllRowsWildcard: ""
          FilterExpression: ""
        DatabaseName: ""
        TableCatalogId: ""
        Name: ""
        ColumnWildcard:
          ExcludedColumnNames: ""
      title: CreateDataCellsFilterRequest_TableData
    TaggedDatabase_Database:
      allOf:
      - $ref: '#/components/schemas/DatabaseResource'
      - description: A database that has LF-tags attached to it.
      title: TaggedDatabase_Database
    GetResourceLFTagsRequest_Resource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - description: "The database, table, or column resource for which you want to\
          \ return LF-tags."
      example:
        LFTag:
          TagKey: ""
          CatalogId: ""
          TagValues: ""
        Table:
          DatabaseName: ""
          CatalogId: ""
          TableWildcard: ""
          Name: ""
        DataCellsFilter:
          TableName: ""
          DatabaseName: ""
          TableCatalogId: ""
          Name: ""
        TableWithColumns:
          ColumnNames: ""
          DatabaseName: ""
          CatalogId: ""
          Name: ""
          ColumnWildcard:
            ExcludedColumnNames: ""
        LFTagPolicy:
          Expression: ""
          ResourceType: ""
          CatalogId: ""
        Database:
          CatalogId: ""
          Name: ""
        DataLocation:
          ResourceArn: ""
          CatalogId: ""
        Catalog: ""
      title: GetResourceLFTagsRequest_Resource
    GetTemporaryGluePartitionCredentialsRequest_Partition:
      allOf:
      - $ref: '#/components/schemas/PartitionValueList'
      - description: A list of partition values identifying a single partition.
      example:
        Values: ""
      title: GetTemporaryGluePartitionCredentialsRequest_Partition
    GetTemporaryGluePartitionCredentialsRequest_AuditContext:
      allOf:
      - $ref: '#/components/schemas/AuditContext'
      - description: "A structure representing context to access a resource (column\
          \ names, query ID, etc)."
      example:
        AdditionalAuditContext: ""
      title: GetTemporaryGluePartitionCredentialsRequest_AuditContext
    GrantPermissionsRequest_Principal:
      allOf:
      - $ref: '#/components/schemas/DataLakePrincipal'
      - description: "<p>The principal to be granted the permissions on the resource.\
          \ Supported principals are IAM users or IAM roles, and they are defined\
          \ by their principal type and their ARN.</p> <p>Note that if you define\
          \ a resource with a particular ARN, then later delete, and recreate a resource\
          \ with that same ARN, the resource maintains the permissions already granted.\
          \ </p>"
      example:
        DataLakePrincipalIdentifier: ""
      title: GrantPermissionsRequest_Principal
    GrantPermissionsRequest_Resource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - description: "The resource to which permissions are to be granted. Resources\
          \ in Lake Formation are the Data Catalog, databases, and tables."
      example:
        LFTag:
          TagKey: ""
          CatalogId: ""
          TagValues: ""
        Table:
          DatabaseName: ""
          CatalogId: ""
          TableWildcard: ""
          Name: ""
        DataCellsFilter:
          TableName: ""
          DatabaseName: ""
          TableCatalogId: ""
          Name: ""
        TableWithColumns:
          ColumnNames: ""
          DatabaseName: ""
          CatalogId: ""
          Name: ""
          ColumnWildcard:
            ExcludedColumnNames: ""
        LFTagPolicy:
          Expression: ""
          ResourceType: ""
          CatalogId: ""
        Database:
          CatalogId: ""
          Name: ""
        DataLocation:
          ResourceArn: ""
          CatalogId: ""
        Catalog: ""
      title: GrantPermissionsRequest_Resource
    LFTagError_LFTag:
      allOf:
      - $ref: '#/components/schemas/LFTagPair'
      - description: The key-name of the LF-tag.
      title: LFTagError_LFTag
    LFTagError_Error:
      allOf:
      - $ref: '#/components/schemas/ErrorDetail'
      - description: An error that occurred with the attachment or detachment of the
          LF-tag.
      title: LFTagError_Error
    ListDataCellsFilterRequest_Table:
      allOf:
      - $ref: '#/components/schemas/TableResource'
      - description: A table in the Glue Data Catalog.
      example:
        DatabaseName: ""
        CatalogId: ""
        TableWildcard: ""
        Name: ""
      title: ListDataCellsFilterRequest_Table
    ListPermissionsRequest_Principal:
      allOf:
      - $ref: '#/components/schemas/DataLakePrincipal'
      - description: Specifies a principal to filter the permissions returned.
      example:
        DataLakePrincipalIdentifier: ""
      title: ListPermissionsRequest_Principal
    ListPermissionsRequest_Resource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - description: "<p>A resource where you will get a list of the principal permissions.</p>\
          \ <p>This operation does not support getting privileges on a table with\
          \ columns. Instead, call this operation on the table, and the operation\
          \ returns the table and the table w columns.</p>"
      example:
        LFTag:
          TagKey: ""
          CatalogId: ""
          TagValues: ""
        Table:
          DatabaseName: ""
          CatalogId: ""
          TableWildcard: ""
          Name: ""
        DataCellsFilter:
          TableName: ""
          DatabaseName: ""
          TableCatalogId: ""
          Name: ""
        TableWithColumns:
          ColumnNames: ""
          DatabaseName: ""
          CatalogId: ""
          Name: ""
          ColumnWildcard:
            ExcludedColumnNames: ""
        LFTagPolicy:
          Expression: ""
          ResourceType: ""
          CatalogId: ""
        Database:
          CatalogId: ""
          Name: ""
        DataLocation:
          ResourceArn: ""
          CatalogId: ""
        Catalog: ""
      title: ListPermissionsRequest_Resource
    PrincipalPermissions_Principal:
      allOf:
      - $ref: '#/components/schemas/DataLakePrincipal'
      - description: The principal who is granted permissions.
      title: PrincipalPermissions_Principal
    PrincipalResourcePermissions_Principal:
      allOf:
      - $ref: '#/components/schemas/DataLakePrincipal'
      - description: The Data Lake principal to be granted or revoked permissions.
      title: PrincipalResourcePermissions_Principal
    PrincipalResourcePermissions_Resource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - description: The resource where permissions are to be granted or revoked.
      title: PrincipalResourcePermissions_Resource
    PrincipalResourcePermissions_AdditionalDetails:
      allOf:
      - $ref: '#/components/schemas/DetailsMap'
      - description: This attribute can be used to return any additional details of
          <code>PrincipalResourcePermissions</code>. Currently returns only as a RAM
          resource share ARN.
      title: PrincipalResourcePermissions_AdditionalDetails
    RemoveLFTagsFromResourceRequest_Resource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - description: "The database, table, or column resource where you want to remove\
          \ an LF-tag."
      example:
        LFTag:
          TagKey: ""
          CatalogId: ""
          TagValues: ""
        Table:
          DatabaseName: ""
          CatalogId: ""
          TableWildcard: ""
          Name: ""
        DataCellsFilter:
          TableName: ""
          DatabaseName: ""
          TableCatalogId: ""
          Name: ""
        TableWithColumns:
          ColumnNames: ""
          DatabaseName: ""
          CatalogId: ""
          Name: ""
          ColumnWildcard:
            ExcludedColumnNames: ""
        LFTagPolicy:
          Expression: ""
          ResourceType: ""
          CatalogId: ""
        Database:
          CatalogId: ""
          Name: ""
        DataLocation:
          ResourceArn: ""
          CatalogId: ""
        Catalog: ""
      title: RemoveLFTagsFromResourceRequest_Resource
    RevokePermissionsRequest_Principal:
      allOf:
      - $ref: '#/components/schemas/DataLakePrincipal'
      - description: The principal to be revoked permissions on the resource.
      example:
        DataLakePrincipalIdentifier: ""
      title: RevokePermissionsRequest_Principal
    RevokePermissionsRequest_Resource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - description: The resource to which permissions are to be revoked.
      example:
        LFTag:
          TagKey: ""
          CatalogId: ""
          TagValues: ""
        Table:
          DatabaseName: ""
          CatalogId: ""
          TableWildcard: ""
          Name: ""
        DataCellsFilter:
          TableName: ""
          DatabaseName: ""
          TableCatalogId: ""
          Name: ""
        TableWithColumns:
          ColumnNames: ""
          DatabaseName: ""
          CatalogId: ""
          Name: ""
          ColumnWildcard:
            ExcludedColumnNames: ""
        LFTagPolicy:
          Expression: ""
          ResourceType: ""
          CatalogId: ""
        Database:
          CatalogId: ""
          Name: ""
        DataLocation:
          ResourceArn: ""
          CatalogId: ""
        Catalog: ""
      title: RevokePermissionsRequest_Resource
    StartQueryPlanningRequest_QueryPlanningContext:
      allOf:
      - $ref: '#/components/schemas/QueryPlanningContext'
      - description: A structure containing information about the query plan.
      example:
        QueryAsOfTime: ""
        DatabaseName: ""
        QueryParameters: ""
        CatalogId: ""
        TransactionId: ""
      title: StartQueryPlanningRequest_QueryPlanningContext
    TaggedTable_Table:
      allOf:
      - $ref: '#/components/schemas/TableResource'
      - description: A table that has LF-tags attached to it.
      title: TaggedTable_Table
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
