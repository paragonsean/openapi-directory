# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrincipalPermissionsPrincipal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_lake_principal_identifier: str=None):
        """PrincipalPermissionsPrincipal - a model defined in OpenAPI

        :param data_lake_principal_identifier: The data_lake_principal_identifier of this PrincipalPermissionsPrincipal.
        """
        self.openapi_types = {
            'data_lake_principal_identifier': str
        }

        self.attribute_map = {
            'data_lake_principal_identifier': 'DataLakePrincipalIdentifier'
        }

        self._data_lake_principal_identifier = data_lake_principal_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrincipalPermissionsPrincipal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrincipalPermissions_Principal of this PrincipalPermissionsPrincipal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_lake_principal_identifier(self):
        """Gets the data_lake_principal_identifier of this PrincipalPermissionsPrincipal.


        :return: The data_lake_principal_identifier of this PrincipalPermissionsPrincipal.
        :rtype: str
        """
        return self._data_lake_principal_identifier

    @data_lake_principal_identifier.setter
    def data_lake_principal_identifier(self, data_lake_principal_identifier):
        """Sets the data_lake_principal_identifier of this PrincipalPermissionsPrincipal.


        :param data_lake_principal_identifier: The data_lake_principal_identifier of this PrincipalPermissionsPrincipal.
        :type data_lake_principal_identifier: str
        """

        self._data_lake_principal_identifier = data_lake_principal_identifier
