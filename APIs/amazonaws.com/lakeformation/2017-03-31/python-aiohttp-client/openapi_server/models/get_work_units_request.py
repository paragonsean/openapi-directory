# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetWorkUnitsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, page_size: int=None, query_id: str=None):
        """GetWorkUnitsRequest - a model defined in OpenAPI

        :param next_token: The next_token of this GetWorkUnitsRequest.
        :param page_size: The page_size of this GetWorkUnitsRequest.
        :param query_id: The query_id of this GetWorkUnitsRequest.
        """
        self.openapi_types = {
            'next_token': str,
            'page_size': int,
            'query_id': str
        }

        self.attribute_map = {
            'next_token': 'NextToken',
            'page_size': 'PageSize',
            'query_id': 'QueryId'
        }

        self._next_token = next_token
        self._page_size = page_size
        self._query_id = query_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetWorkUnitsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetWorkUnits_request of this GetWorkUnitsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this GetWorkUnitsRequest.

        A continuation token, if this is a continuation call.

        :return: The next_token of this GetWorkUnitsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetWorkUnitsRequest.

        A continuation token, if this is a continuation call.

        :param next_token: The next_token of this GetWorkUnitsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def page_size(self):
        """Gets the page_size of this GetWorkUnitsRequest.

        The size of each page to get in the Amazon Web Services service call. This does not affect the number of items returned in the command's output. Setting a smaller page size results in more calls to the Amazon Web Services service, retrieving fewer items in each call. This can help prevent the Amazon Web Services service calls from timing out.

        :return: The page_size of this GetWorkUnitsRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this GetWorkUnitsRequest.

        The size of each page to get in the Amazon Web Services service call. This does not affect the number of items returned in the command's output. Setting a smaller page size results in more calls to the Amazon Web Services service, retrieving fewer items in each call. This can help prevent the Amazon Web Services service calls from timing out.

        :param page_size: The page_size of this GetWorkUnitsRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def query_id(self):
        """Gets the query_id of this GetWorkUnitsRequest.

        The ID of the plan query operation.

        :return: The query_id of this GetWorkUnitsRequest.
        :rtype: str
        """
        return self._query_id

    @query_id.setter
    def query_id(self, query_id):
        """Sets the query_id of this GetWorkUnitsRequest.

        The ID of the plan query operation.

        :param query_id: The query_id of this GetWorkUnitsRequest.
        :type query_id: str
        """
        if query_id is None:
            raise ValueError("Invalid value for `query_id`, must not be `None`")
        if query_id is not None and len(query_id) > 36:
            raise ValueError("Invalid value for `query_id`, length must be less than or equal to `36`")
        if query_id is not None and len(query_id) < 36:
            raise ValueError("Invalid value for `query_id`, length must be greater than or equal to `36`")

        self._query_id = query_id
