# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_lf_tags_to_resource_request_resource import AddLFTagsToResourceRequestResource
from openapi_server import util


class GetResourceLFTagsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, catalog_id: str=None, resource: AddLFTagsToResourceRequestResource=None, show_assigned_lf_tags: bool=None):
        """GetResourceLFTagsRequest - a model defined in OpenAPI

        :param catalog_id: The catalog_id of this GetResourceLFTagsRequest.
        :param resource: The resource of this GetResourceLFTagsRequest.
        :param show_assigned_lf_tags: The show_assigned_lf_tags of this GetResourceLFTagsRequest.
        """
        self.openapi_types = {
            'catalog_id': str,
            'resource': AddLFTagsToResourceRequestResource,
            'show_assigned_lf_tags': bool
        }

        self.attribute_map = {
            'catalog_id': 'CatalogId',
            'resource': 'Resource',
            'show_assigned_lf_tags': 'ShowAssignedLFTags'
        }

        self._catalog_id = catalog_id
        self._resource = resource
        self._show_assigned_lf_tags = show_assigned_lf_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetResourceLFTagsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetResourceLFTags_request of this GetResourceLFTagsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def catalog_id(self):
        """Gets the catalog_id of this GetResourceLFTagsRequest.

        The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. 

        :return: The catalog_id of this GetResourceLFTagsRequest.
        :rtype: str
        """
        return self._catalog_id

    @catalog_id.setter
    def catalog_id(self, catalog_id):
        """Sets the catalog_id of this GetResourceLFTagsRequest.

        The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. 

        :param catalog_id: The catalog_id of this GetResourceLFTagsRequest.
        :type catalog_id: str
        """
        if catalog_id is not None and len(catalog_id) > 255:
            raise ValueError("Invalid value for `catalog_id`, length must be less than or equal to `255`")
        if catalog_id is not None and len(catalog_id) < 1:
            raise ValueError("Invalid value for `catalog_id`, length must be greater than or equal to `1`")

        self._catalog_id = catalog_id

    @property
    def resource(self):
        """Gets the resource of this GetResourceLFTagsRequest.


        :return: The resource of this GetResourceLFTagsRequest.
        :rtype: AddLFTagsToResourceRequestResource
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this GetResourceLFTagsRequest.


        :param resource: The resource of this GetResourceLFTagsRequest.
        :type resource: AddLFTagsToResourceRequestResource
        """
        if resource is None:
            raise ValueError("Invalid value for `resource`, must not be `None`")

        self._resource = resource

    @property
    def show_assigned_lf_tags(self):
        """Gets the show_assigned_lf_tags of this GetResourceLFTagsRequest.

        Indicates whether to show the assigned LF-tags.

        :return: The show_assigned_lf_tags of this GetResourceLFTagsRequest.
        :rtype: bool
        """
        return self._show_assigned_lf_tags

    @show_assigned_lf_tags.setter
    def show_assigned_lf_tags(self, show_assigned_lf_tags):
        """Sets the show_assigned_lf_tags of this GetResourceLFTagsRequest.

        Indicates whether to show the assigned LF-tags.

        :param show_assigned_lf_tags: The show_assigned_lf_tags of this GetResourceLFTagsRequest.
        :type show_assigned_lf_tags: bool
        """

        self._show_assigned_lf_tags = show_assigned_lf_tags
