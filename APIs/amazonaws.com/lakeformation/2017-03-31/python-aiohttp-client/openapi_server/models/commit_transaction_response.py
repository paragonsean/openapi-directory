# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transaction_status import TransactionStatus
from openapi_server import util


class CommitTransactionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transaction_status: TransactionStatus=None):
        """CommitTransactionResponse - a model defined in OpenAPI

        :param transaction_status: The transaction_status of this CommitTransactionResponse.
        """
        self.openapi_types = {
            'transaction_status': TransactionStatus
        }

        self.attribute_map = {
            'transaction_status': 'TransactionStatus'
        }

        self._transaction_status = transaction_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommitTransactionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommitTransactionResponse of this CommitTransactionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transaction_status(self):
        """Gets the transaction_status of this CommitTransactionResponse.


        :return: The transaction_status of this CommitTransactionResponse.
        :rtype: TransactionStatus
        """
        return self._transaction_status

    @transaction_status.setter
    def transaction_status(self, transaction_status):
        """Sets the transaction_status of this CommitTransactionResponse.


        :param transaction_status: The transaction_status of this CommitTransactionResponse.
        :type transaction_status: TransactionStatus
        """

        self._transaction_status = transaction_status
