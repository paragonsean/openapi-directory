# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_data_cells_filter_request_table_data import CreateDataCellsFilterRequestTableData
from openapi_server import util


class UpdateDataCellsFilterRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, table_data: CreateDataCellsFilterRequestTableData=None):
        """UpdateDataCellsFilterRequest - a model defined in OpenAPI

        :param table_data: The table_data of this UpdateDataCellsFilterRequest.
        """
        self.openapi_types = {
            'table_data': CreateDataCellsFilterRequestTableData
        }

        self.attribute_map = {
            'table_data': 'TableData'
        }

        self._table_data = table_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDataCellsFilterRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDataCellsFilterRequest of this UpdateDataCellsFilterRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def table_data(self):
        """Gets the table_data of this UpdateDataCellsFilterRequest.


        :return: The table_data of this UpdateDataCellsFilterRequest.
        :rtype: CreateDataCellsFilterRequestTableData
        """
        return self._table_data

    @table_data.setter
    def table_data(self, table_data):
        """Sets the table_data of this UpdateDataCellsFilterRequest.


        :param table_data: The table_data of this UpdateDataCellsFilterRequest.
        :type table_data: CreateDataCellsFilterRequestTableData
        """
        if table_data is None:
            raise ValueError("Invalid value for `table_data`, must not be `None`")

        self._table_data = table_data
