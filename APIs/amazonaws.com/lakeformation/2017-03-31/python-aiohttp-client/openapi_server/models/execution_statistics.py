# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExecutionStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_execution_time_millis: int=None, data_scanned_bytes: int=None, work_units_executed_count: int=None):
        """ExecutionStatistics - a model defined in OpenAPI

        :param average_execution_time_millis: The average_execution_time_millis of this ExecutionStatistics.
        :param data_scanned_bytes: The data_scanned_bytes of this ExecutionStatistics.
        :param work_units_executed_count: The work_units_executed_count of this ExecutionStatistics.
        """
        self.openapi_types = {
            'average_execution_time_millis': int,
            'data_scanned_bytes': int,
            'work_units_executed_count': int
        }

        self.attribute_map = {
            'average_execution_time_millis': 'AverageExecutionTimeMillis',
            'data_scanned_bytes': 'DataScannedBytes',
            'work_units_executed_count': 'WorkUnitsExecutedCount'
        }

        self._average_execution_time_millis = average_execution_time_millis
        self._data_scanned_bytes = data_scanned_bytes
        self._work_units_executed_count = work_units_executed_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecutionStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecutionStatistics of this ExecutionStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_execution_time_millis(self):
        """Gets the average_execution_time_millis of this ExecutionStatistics.


        :return: The average_execution_time_millis of this ExecutionStatistics.
        :rtype: int
        """
        return self._average_execution_time_millis

    @average_execution_time_millis.setter
    def average_execution_time_millis(self, average_execution_time_millis):
        """Sets the average_execution_time_millis of this ExecutionStatistics.


        :param average_execution_time_millis: The average_execution_time_millis of this ExecutionStatistics.
        :type average_execution_time_millis: int
        """

        self._average_execution_time_millis = average_execution_time_millis

    @property
    def data_scanned_bytes(self):
        """Gets the data_scanned_bytes of this ExecutionStatistics.


        :return: The data_scanned_bytes of this ExecutionStatistics.
        :rtype: int
        """
        return self._data_scanned_bytes

    @data_scanned_bytes.setter
    def data_scanned_bytes(self, data_scanned_bytes):
        """Sets the data_scanned_bytes of this ExecutionStatistics.


        :param data_scanned_bytes: The data_scanned_bytes of this ExecutionStatistics.
        :type data_scanned_bytes: int
        """

        self._data_scanned_bytes = data_scanned_bytes

    @property
    def work_units_executed_count(self):
        """Gets the work_units_executed_count of this ExecutionStatistics.


        :return: The work_units_executed_count of this ExecutionStatistics.
        :rtype: int
        """
        return self._work_units_executed_count

    @work_units_executed_count.setter
    def work_units_executed_count(self, work_units_executed_count):
        """Sets the work_units_executed_count of this ExecutionStatistics.


        :param work_units_executed_count: The work_units_executed_count of this ExecutionStatistics.
        :type work_units_executed_count: int
        """

        self._work_units_executed_count = work_units_executed_count
