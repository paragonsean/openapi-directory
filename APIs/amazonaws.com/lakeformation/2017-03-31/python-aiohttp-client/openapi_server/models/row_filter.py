# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RowFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter_expression: str=None, all_rows_wildcard: object=None):
        """RowFilter - a model defined in OpenAPI

        :param filter_expression: The filter_expression of this RowFilter.
        :param all_rows_wildcard: The all_rows_wildcard of this RowFilter.
        """
        self.openapi_types = {
            'filter_expression': str,
            'all_rows_wildcard': object
        }

        self.attribute_map = {
            'filter_expression': 'FilterExpression',
            'all_rows_wildcard': 'AllRowsWildcard'
        }

        self._filter_expression = filter_expression
        self._all_rows_wildcard = all_rows_wildcard

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RowFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RowFilter of this RowFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter_expression(self):
        """Gets the filter_expression of this RowFilter.


        :return: The filter_expression of this RowFilter.
        :rtype: str
        """
        return self._filter_expression

    @filter_expression.setter
    def filter_expression(self, filter_expression):
        """Sets the filter_expression of this RowFilter.


        :param filter_expression: The filter_expression of this RowFilter.
        :type filter_expression: str
        """

        self._filter_expression = filter_expression

    @property
    def all_rows_wildcard(self):
        """Gets the all_rows_wildcard of this RowFilter.


        :return: The all_rows_wildcard of this RowFilter.
        :rtype: object
        """
        return self._all_rows_wildcard

    @all_rows_wildcard.setter
    def all_rows_wildcard(self, all_rows_wildcard):
        """Sets the all_rows_wildcard of this RowFilter.


        :param all_rows_wildcard: The all_rows_wildcard of this RowFilter.
        :type all_rows_wildcard: object
        """

        self._all_rows_wildcard = all_rows_wildcard
