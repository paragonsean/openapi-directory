# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.principal_permissions_principal import PrincipalPermissionsPrincipal
from openapi_server import util


class PrincipalPermissions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, principal: PrincipalPermissionsPrincipal=None, permissions: List=None):
        """PrincipalPermissions - a model defined in OpenAPI

        :param principal: The principal of this PrincipalPermissions.
        :param permissions: The permissions of this PrincipalPermissions.
        """
        self.openapi_types = {
            'principal': PrincipalPermissionsPrincipal,
            'permissions': List
        }

        self.attribute_map = {
            'principal': 'Principal',
            'permissions': 'Permissions'
        }

        self._principal = principal
        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrincipalPermissions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrincipalPermissions of this PrincipalPermissions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def principal(self):
        """Gets the principal of this PrincipalPermissions.


        :return: The principal of this PrincipalPermissions.
        :rtype: PrincipalPermissionsPrincipal
        """
        return self._principal

    @principal.setter
    def principal(self, principal):
        """Sets the principal of this PrincipalPermissions.


        :param principal: The principal of this PrincipalPermissions.
        :type principal: PrincipalPermissionsPrincipal
        """

        self._principal = principal

    @property
    def permissions(self):
        """Gets the permissions of this PrincipalPermissions.


        :return: The permissions of this PrincipalPermissions.
        :rtype: List
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this PrincipalPermissions.


        :param permissions: The permissions of this PrincipalPermissions.
        :type permissions: List
        """

        self._permissions = permissions
