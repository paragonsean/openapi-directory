# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.write_operation_add_object import WriteOperationAddObject
from openapi_server.models.write_operation_delete_object import WriteOperationDeleteObject
from openapi_server import util


class WriteOperation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_object: WriteOperationAddObject=None, delete_object: WriteOperationDeleteObject=None):
        """WriteOperation - a model defined in OpenAPI

        :param add_object: The add_object of this WriteOperation.
        :param delete_object: The delete_object of this WriteOperation.
        """
        self.openapi_types = {
            'add_object': WriteOperationAddObject,
            'delete_object': WriteOperationDeleteObject
        }

        self.attribute_map = {
            'add_object': 'AddObject',
            'delete_object': 'DeleteObject'
        }

        self._add_object = add_object
        self._delete_object = delete_object

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WriteOperation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WriteOperation of this WriteOperation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_object(self):
        """Gets the add_object of this WriteOperation.


        :return: The add_object of this WriteOperation.
        :rtype: WriteOperationAddObject
        """
        return self._add_object

    @add_object.setter
    def add_object(self, add_object):
        """Sets the add_object of this WriteOperation.


        :param add_object: The add_object of this WriteOperation.
        :type add_object: WriteOperationAddObject
        """

        self._add_object = add_object

    @property
    def delete_object(self):
        """Gets the delete_object of this WriteOperation.


        :return: The delete_object of this WriteOperation.
        :rtype: WriteOperationDeleteObject
        """
        return self._delete_object

    @delete_object.setter
    def delete_object(self, delete_object):
        """Sets the delete_object of this WriteOperation.


        :param delete_object: The delete_object of this WriteOperation.
        :type delete_object: WriteOperationDeleteObject
        """

        self._delete_object = delete_object
