# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataLocationResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, catalog_id: str=None, resource_arn: str=None):
        """DataLocationResource - a model defined in OpenAPI

        :param catalog_id: The catalog_id of this DataLocationResource.
        :param resource_arn: The resource_arn of this DataLocationResource.
        """
        self.openapi_types = {
            'catalog_id': str,
            'resource_arn': str
        }

        self.attribute_map = {
            'catalog_id': 'CatalogId',
            'resource_arn': 'ResourceArn'
        }

        self._catalog_id = catalog_id
        self._resource_arn = resource_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataLocationResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataLocationResource of this DataLocationResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def catalog_id(self):
        """Gets the catalog_id of this DataLocationResource.


        :return: The catalog_id of this DataLocationResource.
        :rtype: str
        """
        return self._catalog_id

    @catalog_id.setter
    def catalog_id(self, catalog_id):
        """Sets the catalog_id of this DataLocationResource.


        :param catalog_id: The catalog_id of this DataLocationResource.
        :type catalog_id: str
        """

        self._catalog_id = catalog_id

    @property
    def resource_arn(self):
        """Gets the resource_arn of this DataLocationResource.


        :return: The resource_arn of this DataLocationResource.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this DataLocationResource.


        :param resource_arn: The resource_arn of this DataLocationResource.
        :type resource_arn: str
        """
        if resource_arn is None:
            raise ValueError("Invalid value for `resource_arn`, must not be `None`")

        self._resource_arn = resource_arn
