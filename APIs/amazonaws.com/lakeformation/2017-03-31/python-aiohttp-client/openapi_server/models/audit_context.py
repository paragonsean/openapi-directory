# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuditContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_audit_context: str=None):
        """AuditContext - a model defined in OpenAPI

        :param additional_audit_context: The additional_audit_context of this AuditContext.
        """
        self.openapi_types = {
            'additional_audit_context': str
        }

        self.attribute_map = {
            'additional_audit_context': 'AdditionalAuditContext'
        }

        self._additional_audit_context = additional_audit_context

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuditContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuditContext of this AuditContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_audit_context(self):
        """Gets the additional_audit_context of this AuditContext.


        :return: The additional_audit_context of this AuditContext.
        :rtype: str
        """
        return self._additional_audit_context

    @additional_audit_context.setter
    def additional_audit_context(self, additional_audit_context):
        """Sets the additional_audit_context of this AuditContext.


        :param additional_audit_context: The additional_audit_context of this AuditContext.
        :type additional_audit_context: str
        """

        self._additional_audit_context = additional_audit_context
