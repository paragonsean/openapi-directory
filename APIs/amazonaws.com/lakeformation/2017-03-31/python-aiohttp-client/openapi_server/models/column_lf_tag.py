# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ColumnLFTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, lf_tags: List=None):
        """ColumnLFTag - a model defined in OpenAPI

        :param name: The name of this ColumnLFTag.
        :param lf_tags: The lf_tags of this ColumnLFTag.
        """
        self.openapi_types = {
            'name': str,
            'lf_tags': List
        }

        self.attribute_map = {
            'name': 'Name',
            'lf_tags': 'LFTags'
        }

        self._name = name
        self._lf_tags = lf_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ColumnLFTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ColumnLFTag of this ColumnLFTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ColumnLFTag.


        :return: The name of this ColumnLFTag.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ColumnLFTag.


        :param name: The name of this ColumnLFTag.
        :type name: str
        """

        self._name = name

    @property
    def lf_tags(self):
        """Gets the lf_tags of this ColumnLFTag.


        :return: The lf_tags of this ColumnLFTag.
        :rtype: List
        """
        return self._lf_tags

    @lf_tags.setter
    def lf_tags(self, lf_tags):
        """Sets the lf_tags of this ColumnLFTag.


        :param lf_tags: The lf_tags of this ColumnLFTag.
        :type lf_tags: List
        """

        self._lf_tags = lf_tags
