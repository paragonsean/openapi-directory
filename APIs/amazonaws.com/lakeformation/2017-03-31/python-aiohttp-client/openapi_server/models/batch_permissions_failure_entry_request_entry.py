# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_permissions_request_entry_principal import BatchPermissionsRequestEntryPrincipal
from openapi_server.models.batch_permissions_request_entry_resource import BatchPermissionsRequestEntryResource
from openapi_server import util


class BatchPermissionsFailureEntryRequestEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, principal: BatchPermissionsRequestEntryPrincipal=None, resource: BatchPermissionsRequestEntryResource=None, permissions: List=None, permissions_with_grant_option: List=None):
        """BatchPermissionsFailureEntryRequestEntry - a model defined in OpenAPI

        :param id: The id of this BatchPermissionsFailureEntryRequestEntry.
        :param principal: The principal of this BatchPermissionsFailureEntryRequestEntry.
        :param resource: The resource of this BatchPermissionsFailureEntryRequestEntry.
        :param permissions: The permissions of this BatchPermissionsFailureEntryRequestEntry.
        :param permissions_with_grant_option: The permissions_with_grant_option of this BatchPermissionsFailureEntryRequestEntry.
        """
        self.openapi_types = {
            'id': str,
            'principal': BatchPermissionsRequestEntryPrincipal,
            'resource': BatchPermissionsRequestEntryResource,
            'permissions': List,
            'permissions_with_grant_option': List
        }

        self.attribute_map = {
            'id': 'Id',
            'principal': 'Principal',
            'resource': 'Resource',
            'permissions': 'Permissions',
            'permissions_with_grant_option': 'PermissionsWithGrantOption'
        }

        self._id = id
        self._principal = principal
        self._resource = resource
        self._permissions = permissions
        self._permissions_with_grant_option = permissions_with_grant_option

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchPermissionsFailureEntryRequestEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchPermissionsFailureEntry_RequestEntry of this BatchPermissionsFailureEntryRequestEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this BatchPermissionsFailureEntryRequestEntry.


        :return: The id of this BatchPermissionsFailureEntryRequestEntry.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BatchPermissionsFailureEntryRequestEntry.


        :param id: The id of this BatchPermissionsFailureEntryRequestEntry.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def principal(self):
        """Gets the principal of this BatchPermissionsFailureEntryRequestEntry.


        :return: The principal of this BatchPermissionsFailureEntryRequestEntry.
        :rtype: BatchPermissionsRequestEntryPrincipal
        """
        return self._principal

    @principal.setter
    def principal(self, principal):
        """Sets the principal of this BatchPermissionsFailureEntryRequestEntry.


        :param principal: The principal of this BatchPermissionsFailureEntryRequestEntry.
        :type principal: BatchPermissionsRequestEntryPrincipal
        """

        self._principal = principal

    @property
    def resource(self):
        """Gets the resource of this BatchPermissionsFailureEntryRequestEntry.


        :return: The resource of this BatchPermissionsFailureEntryRequestEntry.
        :rtype: BatchPermissionsRequestEntryResource
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this BatchPermissionsFailureEntryRequestEntry.


        :param resource: The resource of this BatchPermissionsFailureEntryRequestEntry.
        :type resource: BatchPermissionsRequestEntryResource
        """

        self._resource = resource

    @property
    def permissions(self):
        """Gets the permissions of this BatchPermissionsFailureEntryRequestEntry.


        :return: The permissions of this BatchPermissionsFailureEntryRequestEntry.
        :rtype: List
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this BatchPermissionsFailureEntryRequestEntry.


        :param permissions: The permissions of this BatchPermissionsFailureEntryRequestEntry.
        :type permissions: List
        """

        self._permissions = permissions

    @property
    def permissions_with_grant_option(self):
        """Gets the permissions_with_grant_option of this BatchPermissionsFailureEntryRequestEntry.


        :return: The permissions_with_grant_option of this BatchPermissionsFailureEntryRequestEntry.
        :rtype: List
        """
        return self._permissions_with_grant_option

    @permissions_with_grant_option.setter
    def permissions_with_grant_option(self, permissions_with_grant_option):
        """Sets the permissions_with_grant_option of this BatchPermissionsFailureEntryRequestEntry.


        :param permissions_with_grant_option: The permissions_with_grant_option of this BatchPermissionsFailureEntryRequestEntry.
        :type permissions_with_grant_option: List
        """

        self._permissions_with_grant_option = permissions_with_grant_option
