/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DataLocationResource model module.
 * @module model/DataLocationResource
 * @version 2017-03-31
 */
class DataLocationResource {
    /**
     * Constructs a new <code>DataLocationResource</code>.
     * A structure for a data location object where permissions are granted or revoked. 
     * @alias module:model/DataLocationResource
     * @param resourceArn {String} 
     */
    constructor(resourceArn) { 
        
        DataLocationResource.initialize(this, resourceArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceArn) { 
        obj['ResourceArn'] = resourceArn;
    }

    /**
     * Constructs a <code>DataLocationResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataLocationResource} obj Optional instance to populate.
     * @return {module:model/DataLocationResource} The populated <code>DataLocationResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataLocationResource();

            if (data.hasOwnProperty('CatalogId')) {
                obj['CatalogId'] = ApiClient.convertToType(data['CatalogId'], 'String');
            }
            if (data.hasOwnProperty('ResourceArn')) {
                obj['ResourceArn'] = ApiClient.convertToType(data['ResourceArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataLocationResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataLocationResource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DataLocationResource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CatalogId`
        if (data['CatalogId']) { // data not null
          String.validateJSON(data['CatalogId']);
        }
        // validate the optional field `ResourceArn`
        if (data['ResourceArn']) { // data not null
          String.validateJSON(data['ResourceArn']);
        }

        return true;
    }


}

DataLocationResource.RequiredProperties = ["ResourceArn"];

/**
 * @member {String} CatalogId
 */
DataLocationResource.prototype['CatalogId'] = undefined;

/**
 * @member {String} ResourceArn
 */
DataLocationResource.prototype['ResourceArn'] = undefined;






export default DataLocationResource;

