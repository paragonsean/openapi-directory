/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateResourceRequest model module.
 * @module model/UpdateResourceRequest
 * @version 2017-03-31
 */
class UpdateResourceRequest {
    /**
     * Constructs a new <code>UpdateResourceRequest</code>.
     * @alias module:model/UpdateResourceRequest
     * @param roleArn {String} The new role to use for the given resource registered in Lake Formation.
     * @param resourceArn {String} The resource ARN.
     */
    constructor(roleArn, resourceArn) { 
        
        UpdateResourceRequest.initialize(this, roleArn, resourceArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, roleArn, resourceArn) { 
        obj['RoleArn'] = roleArn;
        obj['ResourceArn'] = resourceArn;
    }

    /**
     * Constructs a <code>UpdateResourceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateResourceRequest} obj Optional instance to populate.
     * @return {module:model/UpdateResourceRequest} The populated <code>UpdateResourceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateResourceRequest();

            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('ResourceArn')) {
                obj['ResourceArn'] = ApiClient.convertToType(data['ResourceArn'], 'String');
            }
            if (data.hasOwnProperty('WithFederation')) {
                obj['WithFederation'] = ApiClient.convertToType(data['WithFederation'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateResourceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateResourceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateResourceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['RoleArn'] && !(typeof data['RoleArn'] === 'string' || data['RoleArn'] instanceof String)) {
            throw new Error("Expected the field `RoleArn` to be a primitive type in the JSON string but got " + data['RoleArn']);
        }
        // ensure the json data is a string
        if (data['ResourceArn'] && !(typeof data['ResourceArn'] === 'string' || data['ResourceArn'] instanceof String)) {
            throw new Error("Expected the field `ResourceArn` to be a primitive type in the JSON string but got " + data['ResourceArn']);
        }

        return true;
    }


}

UpdateResourceRequest.RequiredProperties = ["RoleArn", "ResourceArn"];

/**
 * The new role to use for the given resource registered in Lake Formation.
 * @member {String} RoleArn
 */
UpdateResourceRequest.prototype['RoleArn'] = undefined;

/**
 * The resource ARN.
 * @member {String} ResourceArn
 */
UpdateResourceRequest.prototype['ResourceArn'] = undefined;

/**
 * Whether or not the resource is a federated resource.
 * @member {Boolean} WithFederation
 */
UpdateResourceRequest.prototype['WithFederation'] = undefined;






export default UpdateResourceRequest;

