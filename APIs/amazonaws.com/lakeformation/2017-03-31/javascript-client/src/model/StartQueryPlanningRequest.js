/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StartQueryPlanningRequestQueryPlanningContext from './StartQueryPlanningRequestQueryPlanningContext';

/**
 * The StartQueryPlanningRequest model module.
 * @module model/StartQueryPlanningRequest
 * @version 2017-03-31
 */
class StartQueryPlanningRequest {
    /**
     * Constructs a new <code>StartQueryPlanningRequest</code>.
     * @alias module:model/StartQueryPlanningRequest
     * @param queryPlanningContext {module:model/StartQueryPlanningRequestQueryPlanningContext} 
     * @param queryString {String} A PartiQL query statement used as an input to the planner service.
     */
    constructor(queryPlanningContext, queryString) { 
        
        StartQueryPlanningRequest.initialize(this, queryPlanningContext, queryString);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, queryPlanningContext, queryString) { 
        obj['QueryPlanningContext'] = queryPlanningContext;
        obj['QueryString'] = queryString;
    }

    /**
     * Constructs a <code>StartQueryPlanningRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartQueryPlanningRequest} obj Optional instance to populate.
     * @return {module:model/StartQueryPlanningRequest} The populated <code>StartQueryPlanningRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartQueryPlanningRequest();

            if (data.hasOwnProperty('QueryPlanningContext')) {
                obj['QueryPlanningContext'] = StartQueryPlanningRequestQueryPlanningContext.constructFromObject(data['QueryPlanningContext']);
            }
            if (data.hasOwnProperty('QueryString')) {
                obj['QueryString'] = ApiClient.convertToType(data['QueryString'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartQueryPlanningRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartQueryPlanningRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartQueryPlanningRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `QueryPlanningContext`
        if (data['QueryPlanningContext']) { // data not null
          StartQueryPlanningRequestQueryPlanningContext.validateJSON(data['QueryPlanningContext']);
        }
        // ensure the json data is a string
        if (data['QueryString'] && !(typeof data['QueryString'] === 'string' || data['QueryString'] instanceof String)) {
            throw new Error("Expected the field `QueryString` to be a primitive type in the JSON string but got " + data['QueryString']);
        }

        return true;
    }


}

StartQueryPlanningRequest.RequiredProperties = ["QueryPlanningContext", "QueryString"];

/**
 * @member {module:model/StartQueryPlanningRequestQueryPlanningContext} QueryPlanningContext
 */
StartQueryPlanningRequest.prototype['QueryPlanningContext'] = undefined;

/**
 * A PartiQL query statement used as an input to the planner service.
 * @member {String} QueryString
 */
StartQueryPlanningRequest.prototype['QueryString'] = undefined;






export default StartQueryPlanningRequest;

