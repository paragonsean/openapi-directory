/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DataLakeSettings model module.
 * @module model/DataLakeSettings
 * @version 2017-03-31
 */
class DataLakeSettings {
    /**
     * Constructs a new <code>DataLakeSettings</code>.
     * A structure representing a list of Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.
     * @alias module:model/DataLakeSettings
     */
    constructor() { 
        
        DataLakeSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataLakeSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataLakeSettings} obj Optional instance to populate.
     * @return {module:model/DataLakeSettings} The populated <code>DataLakeSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataLakeSettings();

            if (data.hasOwnProperty('DataLakeAdmins')) {
                obj['DataLakeAdmins'] = ApiClient.convertToType(data['DataLakeAdmins'], Array);
            }
            if (data.hasOwnProperty('ReadOnlyAdmins')) {
                obj['ReadOnlyAdmins'] = ApiClient.convertToType(data['ReadOnlyAdmins'], Array);
            }
            if (data.hasOwnProperty('CreateDatabaseDefaultPermissions')) {
                obj['CreateDatabaseDefaultPermissions'] = ApiClient.convertToType(data['CreateDatabaseDefaultPermissions'], Array);
            }
            if (data.hasOwnProperty('CreateTableDefaultPermissions')) {
                obj['CreateTableDefaultPermissions'] = ApiClient.convertToType(data['CreateTableDefaultPermissions'], Array);
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], Object);
            }
            if (data.hasOwnProperty('TrustedResourceOwners')) {
                obj['TrustedResourceOwners'] = ApiClient.convertToType(data['TrustedResourceOwners'], Array);
            }
            if (data.hasOwnProperty('AllowExternalDataFiltering')) {
                obj['AllowExternalDataFiltering'] = ApiClient.convertToType(data['AllowExternalDataFiltering'], 'Boolean');
            }
            if (data.hasOwnProperty('AllowFullTableExternalDataAccess')) {
                obj['AllowFullTableExternalDataAccess'] = ApiClient.convertToType(data['AllowFullTableExternalDataAccess'], 'Boolean');
            }
            if (data.hasOwnProperty('ExternalDataFilteringAllowList')) {
                obj['ExternalDataFilteringAllowList'] = ApiClient.convertToType(data['ExternalDataFilteringAllowList'], Array);
            }
            if (data.hasOwnProperty('AuthorizedSessionTagValueList')) {
                obj['AuthorizedSessionTagValueList'] = ApiClient.convertToType(data['AuthorizedSessionTagValueList'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataLakeSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataLakeSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DataLakeAdmins`
        if (data['DataLakeAdmins']) { // data not null
          Array.validateJSON(data['DataLakeAdmins']);
        }
        // validate the optional field `ReadOnlyAdmins`
        if (data['ReadOnlyAdmins']) { // data not null
          Array.validateJSON(data['ReadOnlyAdmins']);
        }
        // validate the optional field `CreateDatabaseDefaultPermissions`
        if (data['CreateDatabaseDefaultPermissions']) { // data not null
          Array.validateJSON(data['CreateDatabaseDefaultPermissions']);
        }
        // validate the optional field `CreateTableDefaultPermissions`
        if (data['CreateTableDefaultPermissions']) { // data not null
          Array.validateJSON(data['CreateTableDefaultPermissions']);
        }
        // validate the optional field `Parameters`
        if (data['Parameters']) { // data not null
          Object.validateJSON(data['Parameters']);
        }
        // validate the optional field `TrustedResourceOwners`
        if (data['TrustedResourceOwners']) { // data not null
          Array.validateJSON(data['TrustedResourceOwners']);
        }
        // validate the optional field `AllowExternalDataFiltering`
        if (data['AllowExternalDataFiltering']) { // data not null
          Boolean.validateJSON(data['AllowExternalDataFiltering']);
        }
        // validate the optional field `AllowFullTableExternalDataAccess`
        if (data['AllowFullTableExternalDataAccess']) { // data not null
          Boolean.validateJSON(data['AllowFullTableExternalDataAccess']);
        }
        // validate the optional field `ExternalDataFilteringAllowList`
        if (data['ExternalDataFilteringAllowList']) { // data not null
          Array.validateJSON(data['ExternalDataFilteringAllowList']);
        }
        // validate the optional field `AuthorizedSessionTagValueList`
        if (data['AuthorizedSessionTagValueList']) { // data not null
          Array.validateJSON(data['AuthorizedSessionTagValueList']);
        }

        return true;
    }


}



/**
 * @member {Array} DataLakeAdmins
 */
DataLakeSettings.prototype['DataLakeAdmins'] = undefined;

/**
 * @member {Array} ReadOnlyAdmins
 */
DataLakeSettings.prototype['ReadOnlyAdmins'] = undefined;

/**
 * @member {Array} CreateDatabaseDefaultPermissions
 */
DataLakeSettings.prototype['CreateDatabaseDefaultPermissions'] = undefined;

/**
 * @member {Array} CreateTableDefaultPermissions
 */
DataLakeSettings.prototype['CreateTableDefaultPermissions'] = undefined;

/**
 * @member {Object} Parameters
 */
DataLakeSettings.prototype['Parameters'] = undefined;

/**
 * @member {Array} TrustedResourceOwners
 */
DataLakeSettings.prototype['TrustedResourceOwners'] = undefined;

/**
 * @member {Boolean} AllowExternalDataFiltering
 */
DataLakeSettings.prototype['AllowExternalDataFiltering'] = undefined;

/**
 * @member {Boolean} AllowFullTableExternalDataAccess
 */
DataLakeSettings.prototype['AllowFullTableExternalDataAccess'] = undefined;

/**
 * @member {Array} ExternalDataFilteringAllowList
 */
DataLakeSettings.prototype['ExternalDataFilteringAllowList'] = undefined;

/**
 * @member {Array} AuthorizedSessionTagValueList
 */
DataLakeSettings.prototype['AuthorizedSessionTagValueList'] = undefined;






export default DataLakeSettings;

