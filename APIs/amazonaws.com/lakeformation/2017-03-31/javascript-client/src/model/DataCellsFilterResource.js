/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DataCellsFilterResource model module.
 * @module model/DataCellsFilterResource
 * @version 2017-03-31
 */
class DataCellsFilterResource {
    /**
     * Constructs a new <code>DataCellsFilterResource</code>.
     * A structure for a data cells filter resource. 
     * @alias module:model/DataCellsFilterResource
     */
    constructor() { 
        
        DataCellsFilterResource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataCellsFilterResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataCellsFilterResource} obj Optional instance to populate.
     * @return {module:model/DataCellsFilterResource} The populated <code>DataCellsFilterResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataCellsFilterResource();

            if (data.hasOwnProperty('TableCatalogId')) {
                obj['TableCatalogId'] = ApiClient.convertToType(data['TableCatalogId'], 'String');
            }
            if (data.hasOwnProperty('DatabaseName')) {
                obj['DatabaseName'] = ApiClient.convertToType(data['DatabaseName'], 'String');
            }
            if (data.hasOwnProperty('TableName')) {
                obj['TableName'] = ApiClient.convertToType(data['TableName'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataCellsFilterResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataCellsFilterResource</code>.
     */
    static validateJSON(data) {
        // validate the optional field `TableCatalogId`
        if (data['TableCatalogId']) { // data not null
          String.validateJSON(data['TableCatalogId']);
        }
        // validate the optional field `DatabaseName`
        if (data['DatabaseName']) { // data not null
          String.validateJSON(data['DatabaseName']);
        }
        // validate the optional field `TableName`
        if (data['TableName']) { // data not null
          String.validateJSON(data['TableName']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }

        return true;
    }


}



/**
 * @member {String} TableCatalogId
 */
DataCellsFilterResource.prototype['TableCatalogId'] = undefined;

/**
 * @member {String} DatabaseName
 */
DataCellsFilterResource.prototype['DatabaseName'] = undefined;

/**
 * @member {String} TableName
 */
DataCellsFilterResource.prototype['TableName'] = undefined;

/**
 * @member {String} Name
 */
DataCellsFilterResource.prototype['Name'] = undefined;






export default DataCellsFilterResource;

