/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LFTagErrorError from './LFTagErrorError';
import LFTagErrorLFTag from './LFTagErrorLFTag';

/**
 * The LFTagError model module.
 * @module model/LFTagError
 * @version 2017-03-31
 */
class LFTagError {
    /**
     * Constructs a new <code>LFTagError</code>.
     * A structure containing an error related to a &lt;code&gt;TagResource&lt;/code&gt; or &lt;code&gt;UnTagResource&lt;/code&gt; operation.
     * @alias module:model/LFTagError
     */
    constructor() { 
        
        LFTagError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LFTagError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LFTagError} obj Optional instance to populate.
     * @return {module:model/LFTagError} The populated <code>LFTagError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LFTagError();

            if (data.hasOwnProperty('LFTag')) {
                obj['LFTag'] = LFTagErrorLFTag.constructFromObject(data['LFTag']);
            }
            if (data.hasOwnProperty('Error')) {
                obj['Error'] = LFTagErrorError.constructFromObject(data['Error']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LFTagError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LFTagError</code>.
     */
    static validateJSON(data) {
        // validate the optional field `LFTag`
        if (data['LFTag']) { // data not null
          LFTagErrorLFTag.validateJSON(data['LFTag']);
        }
        // validate the optional field `Error`
        if (data['Error']) { // data not null
          LFTagErrorError.validateJSON(data['Error']);
        }

        return true;
    }


}



/**
 * @member {module:model/LFTagErrorLFTag} LFTag
 */
LFTagError.prototype['LFTag'] = undefined;

/**
 * @member {module:model/LFTagErrorError} Error
 */
LFTagError.prototype['Error'] = undefined;






export default LFTagError;

