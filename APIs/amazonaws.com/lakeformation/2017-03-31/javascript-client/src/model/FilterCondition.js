/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ComparisonOperator from './ComparisonOperator';
import FieldNameString from './FieldNameString';

/**
 * The FilterCondition model module.
 * @module model/FilterCondition
 * @version 2017-03-31
 */
class FilterCondition {
    /**
     * Constructs a new <code>FilterCondition</code>.
     * This structure describes the filtering of columns in a table based on a filter condition.
     * @alias module:model/FilterCondition
     */
    constructor() { 
        
        FilterCondition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilterCondition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterCondition} obj Optional instance to populate.
     * @return {module:model/FilterCondition} The populated <code>FilterCondition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterCondition();

            if (data.hasOwnProperty('Field')) {
                obj['Field'] = ApiClient.convertToType(data['Field'], FieldNameString);
            }
            if (data.hasOwnProperty('ComparisonOperator')) {
                obj['ComparisonOperator'] = ApiClient.convertToType(data['ComparisonOperator'], ComparisonOperator);
            }
            if (data.hasOwnProperty('StringValueList')) {
                obj['StringValueList'] = ApiClient.convertToType(data['StringValueList'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FilterCondition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FilterCondition</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Field`
        if (data['Field']) { // data not null
          FieldNameString.validateJSON(data['Field']);
        }
        // validate the optional field `ComparisonOperator`
        if (data['ComparisonOperator']) { // data not null
          ComparisonOperator.validateJSON(data['ComparisonOperator']);
        }
        // validate the optional field `StringValueList`
        if (data['StringValueList']) { // data not null
          Array.validateJSON(data['StringValueList']);
        }

        return true;
    }


}



/**
 * @member {module:model/FieldNameString} Field
 */
FilterCondition.prototype['Field'] = undefined;

/**
 * @member {module:model/ComparisonOperator} ComparisonOperator
 */
FilterCondition.prototype['ComparisonOperator'] = undefined;

/**
 * @member {Array} StringValueList
 */
FilterCondition.prototype['StringValueList'] = undefined;






export default FilterCondition;

