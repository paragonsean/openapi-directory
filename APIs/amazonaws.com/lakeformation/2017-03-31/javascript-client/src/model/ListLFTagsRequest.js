/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListLFTagsRequest model module.
 * @module model/ListLFTagsRequest
 * @version 2017-03-31
 */
class ListLFTagsRequest {
    /**
     * Constructs a new <code>ListLFTagsRequest</code>.
     * @alias module:model/ListLFTagsRequest
     */
    constructor() { 
        
        ListLFTagsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListLFTagsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListLFTagsRequest} obj Optional instance to populate.
     * @return {module:model/ListLFTagsRequest} The populated <code>ListLFTagsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListLFTagsRequest();

            if (data.hasOwnProperty('CatalogId')) {
                obj['CatalogId'] = ApiClient.convertToType(data['CatalogId'], 'String');
            }
            if (data.hasOwnProperty('ResourceShareType')) {
                obj['ResourceShareType'] = ApiClient.convertToType(data['ResourceShareType'], 'String');
            }
            if (data.hasOwnProperty('MaxResults')) {
                obj['MaxResults'] = ApiClient.convertToType(data['MaxResults'], 'Number');
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListLFTagsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListLFTagsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CatalogId'] && !(typeof data['CatalogId'] === 'string' || data['CatalogId'] instanceof String)) {
            throw new Error("Expected the field `CatalogId` to be a primitive type in the JSON string but got " + data['CatalogId']);
        }
        // ensure the json data is a string
        if (data['ResourceShareType'] && !(typeof data['ResourceShareType'] === 'string' || data['ResourceShareType'] instanceof String)) {
            throw new Error("Expected the field `ResourceShareType` to be a primitive type in the JSON string but got " + data['ResourceShareType']);
        }
        // ensure the json data is a string
        if (data['NextToken'] && !(typeof data['NextToken'] === 'string' || data['NextToken'] instanceof String)) {
            throw new Error("Expected the field `NextToken` to be a primitive type in the JSON string but got " + data['NextToken']);
        }

        return true;
    }


}



/**
 * The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. 
 * @member {String} CatalogId
 */
ListLFTagsRequest.prototype['CatalogId'] = undefined;

/**
 * If resource share type is <code>ALL</code>, returns both in-account LF-tags and shared LF-tags that the requester has permission to view. If resource share type is <code>FOREIGN</code>, returns all share LF-tags that the requester can view. If no resource share type is passed, lists LF-tags in the given catalog ID that the requester has permission to view.
 * @member {module:model/ListLFTagsRequest.ResourceShareTypeEnum} ResourceShareType
 */
ListLFTagsRequest.prototype['ResourceShareType'] = undefined;

/**
 * The maximum number of results to return.
 * @member {Number} MaxResults
 */
ListLFTagsRequest.prototype['MaxResults'] = undefined;

/**
 * A continuation token, if this is not the first call to retrieve this list.
 * @member {String} NextToken
 */
ListLFTagsRequest.prototype['NextToken'] = undefined;





/**
 * Allowed values for the <code>ResourceShareType</code> property.
 * @enum {String}
 * @readonly
 */
ListLFTagsRequest['ResourceShareTypeEnum'] = {

    /**
     * value: "FOREIGN"
     * @const
     */
    "FOREIGN": "FOREIGN",

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL"
};



export default ListLFTagsRequest;

