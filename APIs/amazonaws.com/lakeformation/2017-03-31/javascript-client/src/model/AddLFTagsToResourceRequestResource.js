/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddLFTagsToResourceRequestResourceDataCellsFilter from './AddLFTagsToResourceRequestResourceDataCellsFilter';
import AddLFTagsToResourceRequestResourceDataLocation from './AddLFTagsToResourceRequestResourceDataLocation';
import AddLFTagsToResourceRequestResourceDatabase from './AddLFTagsToResourceRequestResourceDatabase';
import AddLFTagsToResourceRequestResourceLFTag from './AddLFTagsToResourceRequestResourceLFTag';
import AddLFTagsToResourceRequestResourceLFTagPolicy from './AddLFTagsToResourceRequestResourceLFTagPolicy';
import AddLFTagsToResourceRequestResourceTable from './AddLFTagsToResourceRequestResourceTable';
import AddLFTagsToResourceRequestResourceTableWithColumns from './AddLFTagsToResourceRequestResourceTableWithColumns';
import Resource from './Resource';

/**
 * The AddLFTagsToResourceRequestResource model module.
 * @module model/AddLFTagsToResourceRequestResource
 * @version 2017-03-31
 */
class AddLFTagsToResourceRequestResource {
    /**
     * Constructs a new <code>AddLFTagsToResourceRequestResource</code>.
     * @alias module:model/AddLFTagsToResourceRequestResource
     * @implements module:model/Resource
     */
    constructor() { 
        Resource.initialize(this);
        AddLFTagsToResourceRequestResource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddLFTagsToResourceRequestResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddLFTagsToResourceRequestResource} obj Optional instance to populate.
     * @return {module:model/AddLFTagsToResourceRequestResource} The populated <code>AddLFTagsToResourceRequestResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddLFTagsToResourceRequestResource();
            Resource.constructFromObject(data, obj);

            if (data.hasOwnProperty('Catalog')) {
                obj['Catalog'] = ApiClient.convertToType(data['Catalog'], Object);
            }
            if (data.hasOwnProperty('Database')) {
                obj['Database'] = AddLFTagsToResourceRequestResourceDatabase.constructFromObject(data['Database']);
            }
            if (data.hasOwnProperty('Table')) {
                obj['Table'] = AddLFTagsToResourceRequestResourceTable.constructFromObject(data['Table']);
            }
            if (data.hasOwnProperty('TableWithColumns')) {
                obj['TableWithColumns'] = AddLFTagsToResourceRequestResourceTableWithColumns.constructFromObject(data['TableWithColumns']);
            }
            if (data.hasOwnProperty('DataLocation')) {
                obj['DataLocation'] = AddLFTagsToResourceRequestResourceDataLocation.constructFromObject(data['DataLocation']);
            }
            if (data.hasOwnProperty('DataCellsFilter')) {
                obj['DataCellsFilter'] = AddLFTagsToResourceRequestResourceDataCellsFilter.constructFromObject(data['DataCellsFilter']);
            }
            if (data.hasOwnProperty('LFTag')) {
                obj['LFTag'] = AddLFTagsToResourceRequestResourceLFTag.constructFromObject(data['LFTag']);
            }
            if (data.hasOwnProperty('LFTagPolicy')) {
                obj['LFTagPolicy'] = AddLFTagsToResourceRequestResourceLFTagPolicy.constructFromObject(data['LFTagPolicy']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddLFTagsToResourceRequestResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddLFTagsToResourceRequestResource</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Catalog`
        if (data['Catalog']) { // data not null
          Object.validateJSON(data['Catalog']);
        }
        // validate the optional field `Database`
        if (data['Database']) { // data not null
          AddLFTagsToResourceRequestResourceDatabase.validateJSON(data['Database']);
        }
        // validate the optional field `Table`
        if (data['Table']) { // data not null
          AddLFTagsToResourceRequestResourceTable.validateJSON(data['Table']);
        }
        // validate the optional field `TableWithColumns`
        if (data['TableWithColumns']) { // data not null
          AddLFTagsToResourceRequestResourceTableWithColumns.validateJSON(data['TableWithColumns']);
        }
        // validate the optional field `DataLocation`
        if (data['DataLocation']) { // data not null
          AddLFTagsToResourceRequestResourceDataLocation.validateJSON(data['DataLocation']);
        }
        // validate the optional field `DataCellsFilter`
        if (data['DataCellsFilter']) { // data not null
          AddLFTagsToResourceRequestResourceDataCellsFilter.validateJSON(data['DataCellsFilter']);
        }
        // validate the optional field `LFTag`
        if (data['LFTag']) { // data not null
          AddLFTagsToResourceRequestResourceLFTag.validateJSON(data['LFTag']);
        }
        // validate the optional field `LFTagPolicy`
        if (data['LFTagPolicy']) { // data not null
          AddLFTagsToResourceRequestResourceLFTagPolicy.validateJSON(data['LFTagPolicy']);
        }

        return true;
    }


}



/**
 * @member {Object} Catalog
 */
AddLFTagsToResourceRequestResource.prototype['Catalog'] = undefined;

/**
 * @member {module:model/AddLFTagsToResourceRequestResourceDatabase} Database
 */
AddLFTagsToResourceRequestResource.prototype['Database'] = undefined;

/**
 * @member {module:model/AddLFTagsToResourceRequestResourceTable} Table
 */
AddLFTagsToResourceRequestResource.prototype['Table'] = undefined;

/**
 * @member {module:model/AddLFTagsToResourceRequestResourceTableWithColumns} TableWithColumns
 */
AddLFTagsToResourceRequestResource.prototype['TableWithColumns'] = undefined;

/**
 * @member {module:model/AddLFTagsToResourceRequestResourceDataLocation} DataLocation
 */
AddLFTagsToResourceRequestResource.prototype['DataLocation'] = undefined;

/**
 * @member {module:model/AddLFTagsToResourceRequestResourceDataCellsFilter} DataCellsFilter
 */
AddLFTagsToResourceRequestResource.prototype['DataCellsFilter'] = undefined;

/**
 * @member {module:model/AddLFTagsToResourceRequestResourceLFTag} LFTag
 */
AddLFTagsToResourceRequestResource.prototype['LFTag'] = undefined;

/**
 * @member {module:model/AddLFTagsToResourceRequestResourceLFTagPolicy} LFTagPolicy
 */
AddLFTagsToResourceRequestResource.prototype['LFTagPolicy'] = undefined;


// Implement Resource interface:
/**
 * @member {Object} Catalog
 */
Resource.prototype['Catalog'] = undefined;
/**
 * @member {module:model/AddLFTagsToResourceRequestResourceDatabase} Database
 */
Resource.prototype['Database'] = undefined;
/**
 * @member {module:model/AddLFTagsToResourceRequestResourceTable} Table
 */
Resource.prototype['Table'] = undefined;
/**
 * @member {module:model/AddLFTagsToResourceRequestResourceTableWithColumns} TableWithColumns
 */
Resource.prototype['TableWithColumns'] = undefined;
/**
 * @member {module:model/AddLFTagsToResourceRequestResourceDataLocation} DataLocation
 */
Resource.prototype['DataLocation'] = undefined;
/**
 * @member {module:model/AddLFTagsToResourceRequestResourceDataCellsFilter} DataCellsFilter
 */
Resource.prototype['DataCellsFilter'] = undefined;
/**
 * @member {module:model/AddLFTagsToResourceRequestResourceLFTag} LFTag
 */
Resource.prototype['LFTag'] = undefined;
/**
 * @member {module:model/AddLFTagsToResourceRequestResourceLFTagPolicy} LFTagPolicy
 */
Resource.prototype['LFTagPolicy'] = undefined;




export default AddLFTagsToResourceRequestResource;

