/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssumeDecoratedRoleWithSAMLResponse model module.
 * @module model/AssumeDecoratedRoleWithSAMLResponse
 * @version 2017-03-31
 */
class AssumeDecoratedRoleWithSAMLResponse {
    /**
     * Constructs a new <code>AssumeDecoratedRoleWithSAMLResponse</code>.
     * @alias module:model/AssumeDecoratedRoleWithSAMLResponse
     */
    constructor() { 
        
        AssumeDecoratedRoleWithSAMLResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssumeDecoratedRoleWithSAMLResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssumeDecoratedRoleWithSAMLResponse} obj Optional instance to populate.
     * @return {module:model/AssumeDecoratedRoleWithSAMLResponse} The populated <code>AssumeDecoratedRoleWithSAMLResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssumeDecoratedRoleWithSAMLResponse();

            if (data.hasOwnProperty('AccessKeyId')) {
                obj['AccessKeyId'] = ApiClient.convertToType(data['AccessKeyId'], 'String');
            }
            if (data.hasOwnProperty('SecretAccessKey')) {
                obj['SecretAccessKey'] = ApiClient.convertToType(data['SecretAccessKey'], 'String');
            }
            if (data.hasOwnProperty('SessionToken')) {
                obj['SessionToken'] = ApiClient.convertToType(data['SessionToken'], 'String');
            }
            if (data.hasOwnProperty('Expiration')) {
                obj['Expiration'] = ApiClient.convertToType(data['Expiration'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssumeDecoratedRoleWithSAMLResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssumeDecoratedRoleWithSAMLResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AccessKeyId`
        if (data['AccessKeyId']) { // data not null
          String.validateJSON(data['AccessKeyId']);
        }
        // validate the optional field `SecretAccessKey`
        if (data['SecretAccessKey']) { // data not null
          String.validateJSON(data['SecretAccessKey']);
        }
        // validate the optional field `SessionToken`
        if (data['SessionToken']) { // data not null
          String.validateJSON(data['SessionToken']);
        }
        // validate the optional field `Expiration`
        if (data['Expiration']) { // data not null
          Date.validateJSON(data['Expiration']);
        }

        return true;
    }


}



/**
 * @member {String} AccessKeyId
 */
AssumeDecoratedRoleWithSAMLResponse.prototype['AccessKeyId'] = undefined;

/**
 * @member {String} SecretAccessKey
 */
AssumeDecoratedRoleWithSAMLResponse.prototype['SecretAccessKey'] = undefined;

/**
 * @member {String} SessionToken
 */
AssumeDecoratedRoleWithSAMLResponse.prototype['SessionToken'] = undefined;

/**
 * @member {Date} Expiration
 */
AssumeDecoratedRoleWithSAMLResponse.prototype['Expiration'] = undefined;






export default AssumeDecoratedRoleWithSAMLResponse;

