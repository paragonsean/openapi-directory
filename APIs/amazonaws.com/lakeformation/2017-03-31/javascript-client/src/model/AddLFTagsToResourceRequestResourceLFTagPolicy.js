/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LFTagPolicyResource from './LFTagPolicyResource';
import ResourceType from './ResourceType';

/**
 * The AddLFTagsToResourceRequestResourceLFTagPolicy model module.
 * @module model/AddLFTagsToResourceRequestResourceLFTagPolicy
 * @version 2017-03-31
 */
class AddLFTagsToResourceRequestResourceLFTagPolicy {
    /**
     * Constructs a new <code>AddLFTagsToResourceRequestResourceLFTagPolicy</code>.
     * @alias module:model/AddLFTagsToResourceRequestResourceLFTagPolicy
     * @implements module:model/LFTagPolicyResource
     * @param resourceType {module:model/ResourceType} 
     * @param expression {Array} 
     */
    constructor(resourceType, expression) { 
        LFTagPolicyResource.initialize(this, resourceType, expression);
        AddLFTagsToResourceRequestResourceLFTagPolicy.initialize(this, resourceType, expression);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceType, expression) { 
        obj['ResourceType'] = resourceType;
        obj['Expression'] = expression;
    }

    /**
     * Constructs a <code>AddLFTagsToResourceRequestResourceLFTagPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddLFTagsToResourceRequestResourceLFTagPolicy} obj Optional instance to populate.
     * @return {module:model/AddLFTagsToResourceRequestResourceLFTagPolicy} The populated <code>AddLFTagsToResourceRequestResourceLFTagPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddLFTagsToResourceRequestResourceLFTagPolicy();
            LFTagPolicyResource.constructFromObject(data, obj);

            if (data.hasOwnProperty('CatalogId')) {
                obj['CatalogId'] = ApiClient.convertToType(data['CatalogId'], 'String');
            }
            if (data.hasOwnProperty('ResourceType')) {
                obj['ResourceType'] = ApiClient.convertToType(data['ResourceType'], ResourceType);
            }
            if (data.hasOwnProperty('Expression')) {
                obj['Expression'] = ApiClient.convertToType(data['Expression'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddLFTagsToResourceRequestResourceLFTagPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddLFTagsToResourceRequestResourceLFTagPolicy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddLFTagsToResourceRequestResourceLFTagPolicy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CatalogId`
        if (data['CatalogId']) { // data not null
          String.validateJSON(data['CatalogId']);
        }
        // validate the optional field `ResourceType`
        if (data['ResourceType']) { // data not null
          ResourceType.validateJSON(data['ResourceType']);
        }
        // validate the optional field `Expression`
        if (data['Expression']) { // data not null
          Array.validateJSON(data['Expression']);
        }

        return true;
    }


}

AddLFTagsToResourceRequestResourceLFTagPolicy.RequiredProperties = ["ResourceType", "Expression"];

/**
 * @member {String} CatalogId
 */
AddLFTagsToResourceRequestResourceLFTagPolicy.prototype['CatalogId'] = undefined;

/**
 * @member {module:model/ResourceType} ResourceType
 */
AddLFTagsToResourceRequestResourceLFTagPolicy.prototype['ResourceType'] = undefined;

/**
 * @member {Array} Expression
 */
AddLFTagsToResourceRequestResourceLFTagPolicy.prototype['Expression'] = undefined;


// Implement LFTagPolicyResource interface:
/**
 * @member {String} CatalogId
 */
LFTagPolicyResource.prototype['CatalogId'] = undefined;
/**
 * @member {module:model/ResourceType} ResourceType
 */
LFTagPolicyResource.prototype['ResourceType'] = undefined;
/**
 * @member {Array} Expression
 */
LFTagPolicyResource.prototype['Expression'] = undefined;




export default AddLFTagsToResourceRequestResourceLFTagPolicy;

