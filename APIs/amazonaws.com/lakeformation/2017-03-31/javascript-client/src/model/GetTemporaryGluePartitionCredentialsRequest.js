/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetTemporaryGluePartitionCredentialsRequestAuditContext from './GetTemporaryGluePartitionCredentialsRequestAuditContext';
import GetTemporaryGluePartitionCredentialsRequestPartition from './GetTemporaryGluePartitionCredentialsRequestPartition';
import Permission from './Permission';
import PermissionType from './PermissionType';

/**
 * The GetTemporaryGluePartitionCredentialsRequest model module.
 * @module model/GetTemporaryGluePartitionCredentialsRequest
 * @version 2017-03-31
 */
class GetTemporaryGluePartitionCredentialsRequest {
    /**
     * Constructs a new <code>GetTemporaryGluePartitionCredentialsRequest</code>.
     * @alias module:model/GetTemporaryGluePartitionCredentialsRequest
     * @param tableArn {String} The ARN of the partitions' table.
     * @param partition {module:model/GetTemporaryGluePartitionCredentialsRequestPartition} 
     */
    constructor(tableArn, partition) { 
        
        GetTemporaryGluePartitionCredentialsRequest.initialize(this, tableArn, partition);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tableArn, partition) { 
        obj['TableArn'] = tableArn;
        obj['Partition'] = partition;
    }

    /**
     * Constructs a <code>GetTemporaryGluePartitionCredentialsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetTemporaryGluePartitionCredentialsRequest} obj Optional instance to populate.
     * @return {module:model/GetTemporaryGluePartitionCredentialsRequest} The populated <code>GetTemporaryGluePartitionCredentialsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetTemporaryGluePartitionCredentialsRequest();

            if (data.hasOwnProperty('TableArn')) {
                obj['TableArn'] = ApiClient.convertToType(data['TableArn'], 'String');
            }
            if (data.hasOwnProperty('Partition')) {
                obj['Partition'] = GetTemporaryGluePartitionCredentialsRequestPartition.constructFromObject(data['Partition']);
            }
            if (data.hasOwnProperty('Permissions')) {
                obj['Permissions'] = ApiClient.convertToType(data['Permissions'], [Permission]);
            }
            if (data.hasOwnProperty('DurationSeconds')) {
                obj['DurationSeconds'] = ApiClient.convertToType(data['DurationSeconds'], 'Number');
            }
            if (data.hasOwnProperty('AuditContext')) {
                obj['AuditContext'] = GetTemporaryGluePartitionCredentialsRequestAuditContext.constructFromObject(data['AuditContext']);
            }
            if (data.hasOwnProperty('SupportedPermissionTypes')) {
                obj['SupportedPermissionTypes'] = ApiClient.convertToType(data['SupportedPermissionTypes'], [PermissionType]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetTemporaryGluePartitionCredentialsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetTemporaryGluePartitionCredentialsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetTemporaryGluePartitionCredentialsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['TableArn'] && !(typeof data['TableArn'] === 'string' || data['TableArn'] instanceof String)) {
            throw new Error("Expected the field `TableArn` to be a primitive type in the JSON string but got " + data['TableArn']);
        }
        // validate the optional field `Partition`
        if (data['Partition']) { // data not null
          GetTemporaryGluePartitionCredentialsRequestPartition.validateJSON(data['Partition']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Permissions'])) {
            throw new Error("Expected the field `Permissions` to be an array in the JSON data but got " + data['Permissions']);
        }
        // validate the optional field `AuditContext`
        if (data['AuditContext']) { // data not null
          GetTemporaryGluePartitionCredentialsRequestAuditContext.validateJSON(data['AuditContext']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['SupportedPermissionTypes'])) {
            throw new Error("Expected the field `SupportedPermissionTypes` to be an array in the JSON data but got " + data['SupportedPermissionTypes']);
        }

        return true;
    }


}

GetTemporaryGluePartitionCredentialsRequest.RequiredProperties = ["TableArn", "Partition"];

/**
 * The ARN of the partitions' table.
 * @member {String} TableArn
 */
GetTemporaryGluePartitionCredentialsRequest.prototype['TableArn'] = undefined;

/**
 * @member {module:model/GetTemporaryGluePartitionCredentialsRequestPartition} Partition
 */
GetTemporaryGluePartitionCredentialsRequest.prototype['Partition'] = undefined;

/**
 * Filters the request based on the user having been granted a list of specified permissions on the requested resource(s).
 * @member {Array.<module:model/Permission>} Permissions
 */
GetTemporaryGluePartitionCredentialsRequest.prototype['Permissions'] = undefined;

/**
 * The time period, between 900 and 21,600 seconds, for the timeout of the temporary credentials.
 * @member {Number} DurationSeconds
 */
GetTemporaryGluePartitionCredentialsRequest.prototype['DurationSeconds'] = undefined;

/**
 * @member {module:model/GetTemporaryGluePartitionCredentialsRequestAuditContext} AuditContext
 */
GetTemporaryGluePartitionCredentialsRequest.prototype['AuditContext'] = undefined;

/**
 * A list of supported permission types for the partition. Valid values are <code>COLUMN_PERMISSION</code> and <code>CELL_FILTER_PERMISSION</code>.
 * @member {Array.<module:model/PermissionType>} SupportedPermissionTypes
 */
GetTemporaryGluePartitionCredentialsRequest.prototype['SupportedPermissionTypes'] = undefined;






export default GetTemporaryGluePartitionCredentialsRequest;

