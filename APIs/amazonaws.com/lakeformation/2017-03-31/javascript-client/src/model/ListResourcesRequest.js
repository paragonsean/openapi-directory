/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FilterCondition from './FilterCondition';

/**
 * The ListResourcesRequest model module.
 * @module model/ListResourcesRequest
 * @version 2017-03-31
 */
class ListResourcesRequest {
    /**
     * Constructs a new <code>ListResourcesRequest</code>.
     * @alias module:model/ListResourcesRequest
     */
    constructor() { 
        
        ListResourcesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListResourcesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListResourcesRequest} obj Optional instance to populate.
     * @return {module:model/ListResourcesRequest} The populated <code>ListResourcesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListResourcesRequest();

            if (data.hasOwnProperty('FilterConditionList')) {
                obj['FilterConditionList'] = ApiClient.convertToType(data['FilterConditionList'], [FilterCondition]);
            }
            if (data.hasOwnProperty('MaxResults')) {
                obj['MaxResults'] = ApiClient.convertToType(data['MaxResults'], 'Number');
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListResourcesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListResourcesRequest</code>.
     */
    static validateJSON(data) {
        if (data['FilterConditionList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['FilterConditionList'])) {
                throw new Error("Expected the field `FilterConditionList` to be an array in the JSON data but got " + data['FilterConditionList']);
            }
            // validate the optional field `FilterConditionList` (array)
            for (const item of data['FilterConditionList']) {
                FilterCondition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['NextToken'] && !(typeof data['NextToken'] === 'string' || data['NextToken'] instanceof String)) {
            throw new Error("Expected the field `NextToken` to be a primitive type in the JSON string but got " + data['NextToken']);
        }

        return true;
    }


}



/**
 * Any applicable row-level and/or column-level filtering conditions for the resources.
 * @member {Array.<module:model/FilterCondition>} FilterConditionList
 */
ListResourcesRequest.prototype['FilterConditionList'] = undefined;

/**
 * The maximum number of resource results.
 * @member {Number} MaxResults
 */
ListResourcesRequest.prototype['MaxResults'] = undefined;

/**
 * A continuation token, if this is not the first call to retrieve these resources.
 * @member {String} NextToken
 */
ListResourcesRequest.prototype['NextToken'] = undefined;






export default ListResourcesRequest;

