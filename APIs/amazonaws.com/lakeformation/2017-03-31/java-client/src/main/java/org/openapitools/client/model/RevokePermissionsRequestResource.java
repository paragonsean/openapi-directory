/*
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AddLFTagsToResourceRequestResourceDataCellsFilter;
import org.openapitools.client.model.AddLFTagsToResourceRequestResourceDataLocation;
import org.openapitools.client.model.AddLFTagsToResourceRequestResourceDatabase;
import org.openapitools.client.model.AddLFTagsToResourceRequestResourceLFTag;
import org.openapitools.client.model.AddLFTagsToResourceRequestResourceLFTagPolicy;
import org.openapitools.client.model.AddLFTagsToResourceRequestResourceTable;
import org.openapitools.client.model.AddLFTagsToResourceRequestResourceTableWithColumns;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RevokePermissionsRequestResource
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:41.778535-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RevokePermissionsRequestResource {
  public static final String SERIALIZED_NAME_CATALOG = "Catalog";
  @SerializedName(SERIALIZED_NAME_CATALOG)
  private Object catalog;

  public static final String SERIALIZED_NAME_DATABASE = "Database";
  @SerializedName(SERIALIZED_NAME_DATABASE)
  private AddLFTagsToResourceRequestResourceDatabase database;

  public static final String SERIALIZED_NAME_TABLE = "Table";
  @SerializedName(SERIALIZED_NAME_TABLE)
  private AddLFTagsToResourceRequestResourceTable table;

  public static final String SERIALIZED_NAME_TABLE_WITH_COLUMNS = "TableWithColumns";
  @SerializedName(SERIALIZED_NAME_TABLE_WITH_COLUMNS)
  private AddLFTagsToResourceRequestResourceTableWithColumns tableWithColumns;

  public static final String SERIALIZED_NAME_DATA_LOCATION = "DataLocation";
  @SerializedName(SERIALIZED_NAME_DATA_LOCATION)
  private AddLFTagsToResourceRequestResourceDataLocation dataLocation;

  public static final String SERIALIZED_NAME_DATA_CELLS_FILTER = "DataCellsFilter";
  @SerializedName(SERIALIZED_NAME_DATA_CELLS_FILTER)
  private AddLFTagsToResourceRequestResourceDataCellsFilter dataCellsFilter;

  public static final String SERIALIZED_NAME_LF_TAG = "LFTag";
  @SerializedName(SERIALIZED_NAME_LF_TAG)
  private AddLFTagsToResourceRequestResourceLFTag lfTag;

  public static final String SERIALIZED_NAME_LF_TAG_POLICY = "LFTagPolicy";
  @SerializedName(SERIALIZED_NAME_LF_TAG_POLICY)
  private AddLFTagsToResourceRequestResourceLFTagPolicy lfTagPolicy;

  public RevokePermissionsRequestResource() {
  }

  public RevokePermissionsRequestResource catalog(Object catalog) {
    this.catalog = catalog;
    return this;
  }

  /**
   * Get catalog
   * @return catalog
   */
  @javax.annotation.Nullable
  public Object getCatalog() {
    return catalog;
  }

  public void setCatalog(Object catalog) {
    this.catalog = catalog;
  }


  public RevokePermissionsRequestResource database(AddLFTagsToResourceRequestResourceDatabase database) {
    this.database = database;
    return this;
  }

  /**
   * Get database
   * @return database
   */
  @javax.annotation.Nullable
  public AddLFTagsToResourceRequestResourceDatabase getDatabase() {
    return database;
  }

  public void setDatabase(AddLFTagsToResourceRequestResourceDatabase database) {
    this.database = database;
  }


  public RevokePermissionsRequestResource table(AddLFTagsToResourceRequestResourceTable table) {
    this.table = table;
    return this;
  }

  /**
   * Get table
   * @return table
   */
  @javax.annotation.Nullable
  public AddLFTagsToResourceRequestResourceTable getTable() {
    return table;
  }

  public void setTable(AddLFTagsToResourceRequestResourceTable table) {
    this.table = table;
  }


  public RevokePermissionsRequestResource tableWithColumns(AddLFTagsToResourceRequestResourceTableWithColumns tableWithColumns) {
    this.tableWithColumns = tableWithColumns;
    return this;
  }

  /**
   * Get tableWithColumns
   * @return tableWithColumns
   */
  @javax.annotation.Nullable
  public AddLFTagsToResourceRequestResourceTableWithColumns getTableWithColumns() {
    return tableWithColumns;
  }

  public void setTableWithColumns(AddLFTagsToResourceRequestResourceTableWithColumns tableWithColumns) {
    this.tableWithColumns = tableWithColumns;
  }


  public RevokePermissionsRequestResource dataLocation(AddLFTagsToResourceRequestResourceDataLocation dataLocation) {
    this.dataLocation = dataLocation;
    return this;
  }

  /**
   * Get dataLocation
   * @return dataLocation
   */
  @javax.annotation.Nullable
  public AddLFTagsToResourceRequestResourceDataLocation getDataLocation() {
    return dataLocation;
  }

  public void setDataLocation(AddLFTagsToResourceRequestResourceDataLocation dataLocation) {
    this.dataLocation = dataLocation;
  }


  public RevokePermissionsRequestResource dataCellsFilter(AddLFTagsToResourceRequestResourceDataCellsFilter dataCellsFilter) {
    this.dataCellsFilter = dataCellsFilter;
    return this;
  }

  /**
   * Get dataCellsFilter
   * @return dataCellsFilter
   */
  @javax.annotation.Nullable
  public AddLFTagsToResourceRequestResourceDataCellsFilter getDataCellsFilter() {
    return dataCellsFilter;
  }

  public void setDataCellsFilter(AddLFTagsToResourceRequestResourceDataCellsFilter dataCellsFilter) {
    this.dataCellsFilter = dataCellsFilter;
  }


  public RevokePermissionsRequestResource lfTag(AddLFTagsToResourceRequestResourceLFTag lfTag) {
    this.lfTag = lfTag;
    return this;
  }

  /**
   * Get lfTag
   * @return lfTag
   */
  @javax.annotation.Nullable
  public AddLFTagsToResourceRequestResourceLFTag getLfTag() {
    return lfTag;
  }

  public void setLfTag(AddLFTagsToResourceRequestResourceLFTag lfTag) {
    this.lfTag = lfTag;
  }


  public RevokePermissionsRequestResource lfTagPolicy(AddLFTagsToResourceRequestResourceLFTagPolicy lfTagPolicy) {
    this.lfTagPolicy = lfTagPolicy;
    return this;
  }

  /**
   * Get lfTagPolicy
   * @return lfTagPolicy
   */
  @javax.annotation.Nullable
  public AddLFTagsToResourceRequestResourceLFTagPolicy getLfTagPolicy() {
    return lfTagPolicy;
  }

  public void setLfTagPolicy(AddLFTagsToResourceRequestResourceLFTagPolicy lfTagPolicy) {
    this.lfTagPolicy = lfTagPolicy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RevokePermissionsRequestResource revokePermissionsRequestResource = (RevokePermissionsRequestResource) o;
    return Objects.equals(this.catalog, revokePermissionsRequestResource.catalog) &&
        Objects.equals(this.database, revokePermissionsRequestResource.database) &&
        Objects.equals(this.table, revokePermissionsRequestResource.table) &&
        Objects.equals(this.tableWithColumns, revokePermissionsRequestResource.tableWithColumns) &&
        Objects.equals(this.dataLocation, revokePermissionsRequestResource.dataLocation) &&
        Objects.equals(this.dataCellsFilter, revokePermissionsRequestResource.dataCellsFilter) &&
        Objects.equals(this.lfTag, revokePermissionsRequestResource.lfTag) &&
        Objects.equals(this.lfTagPolicy, revokePermissionsRequestResource.lfTagPolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(catalog, database, table, tableWithColumns, dataLocation, dataCellsFilter, lfTag, lfTagPolicy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RevokePermissionsRequestResource {\n");
    sb.append("    catalog: ").append(toIndentedString(catalog)).append("\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    table: ").append(toIndentedString(table)).append("\n");
    sb.append("    tableWithColumns: ").append(toIndentedString(tableWithColumns)).append("\n");
    sb.append("    dataLocation: ").append(toIndentedString(dataLocation)).append("\n");
    sb.append("    dataCellsFilter: ").append(toIndentedString(dataCellsFilter)).append("\n");
    sb.append("    lfTag: ").append(toIndentedString(lfTag)).append("\n");
    sb.append("    lfTagPolicy: ").append(toIndentedString(lfTagPolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Catalog");
    openapiFields.add("Database");
    openapiFields.add("Table");
    openapiFields.add("TableWithColumns");
    openapiFields.add("DataLocation");
    openapiFields.add("DataCellsFilter");
    openapiFields.add("LFTag");
    openapiFields.add("LFTagPolicy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RevokePermissionsRequestResource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RevokePermissionsRequestResource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RevokePermissionsRequestResource is not found in the empty JSON string", RevokePermissionsRequestResource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RevokePermissionsRequestResource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RevokePermissionsRequestResource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Catalog`
      if (jsonObj.get("Catalog") != null && !jsonObj.get("Catalog").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("Catalog"));
      }
      // validate the optional field `Database`
      if (jsonObj.get("Database") != null && !jsonObj.get("Database").isJsonNull()) {
        AddLFTagsToResourceRequestResourceDatabase.validateJsonElement(jsonObj.get("Database"));
      }
      // validate the optional field `Table`
      if (jsonObj.get("Table") != null && !jsonObj.get("Table").isJsonNull()) {
        AddLFTagsToResourceRequestResourceTable.validateJsonElement(jsonObj.get("Table"));
      }
      // validate the optional field `TableWithColumns`
      if (jsonObj.get("TableWithColumns") != null && !jsonObj.get("TableWithColumns").isJsonNull()) {
        AddLFTagsToResourceRequestResourceTableWithColumns.validateJsonElement(jsonObj.get("TableWithColumns"));
      }
      // validate the optional field `DataLocation`
      if (jsonObj.get("DataLocation") != null && !jsonObj.get("DataLocation").isJsonNull()) {
        AddLFTagsToResourceRequestResourceDataLocation.validateJsonElement(jsonObj.get("DataLocation"));
      }
      // validate the optional field `DataCellsFilter`
      if (jsonObj.get("DataCellsFilter") != null && !jsonObj.get("DataCellsFilter").isJsonNull()) {
        AddLFTagsToResourceRequestResourceDataCellsFilter.validateJsonElement(jsonObj.get("DataCellsFilter"));
      }
      // validate the optional field `LFTag`
      if (jsonObj.get("LFTag") != null && !jsonObj.get("LFTag").isJsonNull()) {
        AddLFTagsToResourceRequestResourceLFTag.validateJsonElement(jsonObj.get("LFTag"));
      }
      // validate the optional field `LFTagPolicy`
      if (jsonObj.get("LFTagPolicy") != null && !jsonObj.get("LFTagPolicy").isJsonNull()) {
        AddLFTagsToResourceRequestResourceLFTagPolicy.validateJsonElement(jsonObj.get("LFTagPolicy"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RevokePermissionsRequestResource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RevokePermissionsRequestResource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RevokePermissionsRequestResource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RevokePermissionsRequestResource.class));

       return (TypeAdapter<T>) new TypeAdapter<RevokePermissionsRequestResource>() {
           @Override
           public void write(JsonWriter out, RevokePermissionsRequestResource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RevokePermissionsRequestResource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RevokePermissionsRequestResource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RevokePermissionsRequestResource
   * @throws IOException if the JSON string is invalid with respect to RevokePermissionsRequestResource
   */
  public static RevokePermissionsRequestResource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RevokePermissionsRequestResource.class);
  }

  /**
   * Convert an instance of RevokePermissionsRequestResource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

