/*
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetQueryStatisticsResponsePlanningStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:41.778535-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetQueryStatisticsResponsePlanningStatistics {
  public static final String SERIALIZED_NAME_ESTIMATED_DATA_TO_SCAN_BYTES = "EstimatedDataToScanBytes";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_DATA_TO_SCAN_BYTES)
  private Integer estimatedDataToScanBytes;

  public static final String SERIALIZED_NAME_PLANNING_TIME_MILLIS = "PlanningTimeMillis";
  @SerializedName(SERIALIZED_NAME_PLANNING_TIME_MILLIS)
  private Integer planningTimeMillis;

  public static final String SERIALIZED_NAME_QUEUE_TIME_MILLIS = "QueueTimeMillis";
  @SerializedName(SERIALIZED_NAME_QUEUE_TIME_MILLIS)
  private Integer queueTimeMillis;

  public static final String SERIALIZED_NAME_WORK_UNITS_GENERATED_COUNT = "WorkUnitsGeneratedCount";
  @SerializedName(SERIALIZED_NAME_WORK_UNITS_GENERATED_COUNT)
  private Integer workUnitsGeneratedCount;

  public GetQueryStatisticsResponsePlanningStatistics() {
  }

  public GetQueryStatisticsResponsePlanningStatistics estimatedDataToScanBytes(Integer estimatedDataToScanBytes) {
    this.estimatedDataToScanBytes = estimatedDataToScanBytes;
    return this;
  }

  /**
   * Get estimatedDataToScanBytes
   * @return estimatedDataToScanBytes
   */
  @javax.annotation.Nullable
  public Integer getEstimatedDataToScanBytes() {
    return estimatedDataToScanBytes;
  }

  public void setEstimatedDataToScanBytes(Integer estimatedDataToScanBytes) {
    this.estimatedDataToScanBytes = estimatedDataToScanBytes;
  }


  public GetQueryStatisticsResponsePlanningStatistics planningTimeMillis(Integer planningTimeMillis) {
    this.planningTimeMillis = planningTimeMillis;
    return this;
  }

  /**
   * Get planningTimeMillis
   * @return planningTimeMillis
   */
  @javax.annotation.Nullable
  public Integer getPlanningTimeMillis() {
    return planningTimeMillis;
  }

  public void setPlanningTimeMillis(Integer planningTimeMillis) {
    this.planningTimeMillis = planningTimeMillis;
  }


  public GetQueryStatisticsResponsePlanningStatistics queueTimeMillis(Integer queueTimeMillis) {
    this.queueTimeMillis = queueTimeMillis;
    return this;
  }

  /**
   * Get queueTimeMillis
   * @return queueTimeMillis
   */
  @javax.annotation.Nullable
  public Integer getQueueTimeMillis() {
    return queueTimeMillis;
  }

  public void setQueueTimeMillis(Integer queueTimeMillis) {
    this.queueTimeMillis = queueTimeMillis;
  }


  public GetQueryStatisticsResponsePlanningStatistics workUnitsGeneratedCount(Integer workUnitsGeneratedCount) {
    this.workUnitsGeneratedCount = workUnitsGeneratedCount;
    return this;
  }

  /**
   * Get workUnitsGeneratedCount
   * @return workUnitsGeneratedCount
   */
  @javax.annotation.Nullable
  public Integer getWorkUnitsGeneratedCount() {
    return workUnitsGeneratedCount;
  }

  public void setWorkUnitsGeneratedCount(Integer workUnitsGeneratedCount) {
    this.workUnitsGeneratedCount = workUnitsGeneratedCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetQueryStatisticsResponsePlanningStatistics getQueryStatisticsResponsePlanningStatistics = (GetQueryStatisticsResponsePlanningStatistics) o;
    return Objects.equals(this.estimatedDataToScanBytes, getQueryStatisticsResponsePlanningStatistics.estimatedDataToScanBytes) &&
        Objects.equals(this.planningTimeMillis, getQueryStatisticsResponsePlanningStatistics.planningTimeMillis) &&
        Objects.equals(this.queueTimeMillis, getQueryStatisticsResponsePlanningStatistics.queueTimeMillis) &&
        Objects.equals(this.workUnitsGeneratedCount, getQueryStatisticsResponsePlanningStatistics.workUnitsGeneratedCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(estimatedDataToScanBytes, planningTimeMillis, queueTimeMillis, workUnitsGeneratedCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetQueryStatisticsResponsePlanningStatistics {\n");
    sb.append("    estimatedDataToScanBytes: ").append(toIndentedString(estimatedDataToScanBytes)).append("\n");
    sb.append("    planningTimeMillis: ").append(toIndentedString(planningTimeMillis)).append("\n");
    sb.append("    queueTimeMillis: ").append(toIndentedString(queueTimeMillis)).append("\n");
    sb.append("    workUnitsGeneratedCount: ").append(toIndentedString(workUnitsGeneratedCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EstimatedDataToScanBytes");
    openapiFields.add("PlanningTimeMillis");
    openapiFields.add("QueueTimeMillis");
    openapiFields.add("WorkUnitsGeneratedCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetQueryStatisticsResponsePlanningStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetQueryStatisticsResponsePlanningStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetQueryStatisticsResponsePlanningStatistics is not found in the empty JSON string", GetQueryStatisticsResponsePlanningStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetQueryStatisticsResponsePlanningStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetQueryStatisticsResponsePlanningStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `EstimatedDataToScanBytes`
      if (jsonObj.get("EstimatedDataToScanBytes") != null && !jsonObj.get("EstimatedDataToScanBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EstimatedDataToScanBytes"));
      }
      // validate the optional field `PlanningTimeMillis`
      if (jsonObj.get("PlanningTimeMillis") != null && !jsonObj.get("PlanningTimeMillis").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PlanningTimeMillis"));
      }
      // validate the optional field `QueueTimeMillis`
      if (jsonObj.get("QueueTimeMillis") != null && !jsonObj.get("QueueTimeMillis").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("QueueTimeMillis"));
      }
      // validate the optional field `WorkUnitsGeneratedCount`
      if (jsonObj.get("WorkUnitsGeneratedCount") != null && !jsonObj.get("WorkUnitsGeneratedCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("WorkUnitsGeneratedCount"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetQueryStatisticsResponsePlanningStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetQueryStatisticsResponsePlanningStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetQueryStatisticsResponsePlanningStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetQueryStatisticsResponsePlanningStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<GetQueryStatisticsResponsePlanningStatistics>() {
           @Override
           public void write(JsonWriter out, GetQueryStatisticsResponsePlanningStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetQueryStatisticsResponsePlanningStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetQueryStatisticsResponsePlanningStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetQueryStatisticsResponsePlanningStatistics
   * @throws IOException if the JSON string is invalid with respect to GetQueryStatisticsResponsePlanningStatistics
   */
  public static GetQueryStatisticsResponsePlanningStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetQueryStatisticsResponsePlanningStatistics.class);
  }

  /**
   * Convert an instance of GetQueryStatisticsResponsePlanningStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

