# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Resource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, parent_id: str=None, path_part: str=None, path: str=None, resource_methods: Dict=None):
        """Resource - a model defined in OpenAPI

        :param id: The id of this Resource.
        :param parent_id: The parent_id of this Resource.
        :param path_part: The path_part of this Resource.
        :param path: The path of this Resource.
        :param resource_methods: The resource_methods of this Resource.
        """
        self.openapi_types = {
            'id': str,
            'parent_id': str,
            'path_part': str,
            'path': str,
            'resource_methods': Dict
        }

        self.attribute_map = {
            'id': 'id',
            'parent_id': 'parentId',
            'path_part': 'pathPart',
            'path': 'path',
            'resource_methods': 'resourceMethods'
        }

        self._id = id
        self._parent_id = parent_id
        self._path_part = path_part
        self._path = path
        self._resource_methods = resource_methods

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Resource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Resource of this Resource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Resource.


        :return: The id of this Resource.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Resource.


        :param id: The id of this Resource.
        :type id: str
        """

        self._id = id

    @property
    def parent_id(self):
        """Gets the parent_id of this Resource.


        :return: The parent_id of this Resource.
        :rtype: str
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this Resource.


        :param parent_id: The parent_id of this Resource.
        :type parent_id: str
        """

        self._parent_id = parent_id

    @property
    def path_part(self):
        """Gets the path_part of this Resource.


        :return: The path_part of this Resource.
        :rtype: str
        """
        return self._path_part

    @path_part.setter
    def path_part(self, path_part):
        """Sets the path_part of this Resource.


        :param path_part: The path_part of this Resource.
        :type path_part: str
        """

        self._path_part = path_part

    @property
    def path(self):
        """Gets the path of this Resource.


        :return: The path of this Resource.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this Resource.


        :param path: The path of this Resource.
        :type path: str
        """

        self._path = path

    @property
    def resource_methods(self):
        """Gets the resource_methods of this Resource.


        :return: The resource_methods of this Resource.
        :rtype: Dict
        """
        return self._resource_methods

    @resource_methods.setter
    def resource_methods(self, resource_methods):
        """Sets the resource_methods of this Resource.


        :param resource_methods: The resource_methods of this Resource.
        :type resource_methods: Dict
        """

        self._resource_methods = resource_methods
