# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MethodSnapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization_type: str=None, api_key_required: bool=None):
        """MethodSnapshot - a model defined in OpenAPI

        :param authorization_type: The authorization_type of this MethodSnapshot.
        :param api_key_required: The api_key_required of this MethodSnapshot.
        """
        self.openapi_types = {
            'authorization_type': str,
            'api_key_required': bool
        }

        self.attribute_map = {
            'authorization_type': 'authorizationType',
            'api_key_required': 'apiKeyRequired'
        }

        self._authorization_type = authorization_type
        self._api_key_required = api_key_required

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MethodSnapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MethodSnapshot of this MethodSnapshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization_type(self):
        """Gets the authorization_type of this MethodSnapshot.


        :return: The authorization_type of this MethodSnapshot.
        :rtype: str
        """
        return self._authorization_type

    @authorization_type.setter
    def authorization_type(self, authorization_type):
        """Sets the authorization_type of this MethodSnapshot.


        :param authorization_type: The authorization_type of this MethodSnapshot.
        :type authorization_type: str
        """

        self._authorization_type = authorization_type

    @property
    def api_key_required(self):
        """Gets the api_key_required of this MethodSnapshot.


        :return: The api_key_required of this MethodSnapshot.
        :rtype: bool
        """
        return self._api_key_required

    @api_key_required.setter
    def api_key_required(self, api_key_required):
        """Sets the api_key_required of this MethodSnapshot.


        :param api_key_required: The api_key_required of this MethodSnapshot.
        :type api_key_required: bool
        """

        self._api_key_required = api_key_required
