# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_deployment_request_canary_settings import CreateDeploymentRequestCanarySettings
from openapi_server import util


class CreateDeploymentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stage_name: str=None, stage_description: str=None, description: str=None, cache_cluster_enabled: bool=None, cache_cluster_size: str=None, variables: Dict[str, str]=None, canary_settings: CreateDeploymentRequestCanarySettings=None, tracing_enabled: bool=None):
        """CreateDeploymentRequest - a model defined in OpenAPI

        :param stage_name: The stage_name of this CreateDeploymentRequest.
        :param stage_description: The stage_description of this CreateDeploymentRequest.
        :param description: The description of this CreateDeploymentRequest.
        :param cache_cluster_enabled: The cache_cluster_enabled of this CreateDeploymentRequest.
        :param cache_cluster_size: The cache_cluster_size of this CreateDeploymentRequest.
        :param variables: The variables of this CreateDeploymentRequest.
        :param canary_settings: The canary_settings of this CreateDeploymentRequest.
        :param tracing_enabled: The tracing_enabled of this CreateDeploymentRequest.
        """
        self.openapi_types = {
            'stage_name': str,
            'stage_description': str,
            'description': str,
            'cache_cluster_enabled': bool,
            'cache_cluster_size': str,
            'variables': Dict[str, str],
            'canary_settings': CreateDeploymentRequestCanarySettings,
            'tracing_enabled': bool
        }

        self.attribute_map = {
            'stage_name': 'stageName',
            'stage_description': 'stageDescription',
            'description': 'description',
            'cache_cluster_enabled': 'cacheClusterEnabled',
            'cache_cluster_size': 'cacheClusterSize',
            'variables': 'variables',
            'canary_settings': 'canarySettings',
            'tracing_enabled': 'tracingEnabled'
        }

        self._stage_name = stage_name
        self._stage_description = stage_description
        self._description = description
        self._cache_cluster_enabled = cache_cluster_enabled
        self._cache_cluster_size = cache_cluster_size
        self._variables = variables
        self._canary_settings = canary_settings
        self._tracing_enabled = tracing_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDeploymentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDeployment_request of this CreateDeploymentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stage_name(self):
        """Gets the stage_name of this CreateDeploymentRequest.

        The name of the Stage resource for the Deployment resource to create.

        :return: The stage_name of this CreateDeploymentRequest.
        :rtype: str
        """
        return self._stage_name

    @stage_name.setter
    def stage_name(self, stage_name):
        """Sets the stage_name of this CreateDeploymentRequest.

        The name of the Stage resource for the Deployment resource to create.

        :param stage_name: The stage_name of this CreateDeploymentRequest.
        :type stage_name: str
        """

        self._stage_name = stage_name

    @property
    def stage_description(self):
        """Gets the stage_description of this CreateDeploymentRequest.

        The description of the Stage resource for the Deployment resource to create.

        :return: The stage_description of this CreateDeploymentRequest.
        :rtype: str
        """
        return self._stage_description

    @stage_description.setter
    def stage_description(self, stage_description):
        """Sets the stage_description of this CreateDeploymentRequest.

        The description of the Stage resource for the Deployment resource to create.

        :param stage_description: The stage_description of this CreateDeploymentRequest.
        :type stage_description: str
        """

        self._stage_description = stage_description

    @property
    def description(self):
        """Gets the description of this CreateDeploymentRequest.

        The description for the Deployment resource to create.

        :return: The description of this CreateDeploymentRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateDeploymentRequest.

        The description for the Deployment resource to create.

        :param description: The description of this CreateDeploymentRequest.
        :type description: str
        """

        self._description = description

    @property
    def cache_cluster_enabled(self):
        """Gets the cache_cluster_enabled of this CreateDeploymentRequest.

        Enables a cache cluster for the Stage resource specified in the input.

        :return: The cache_cluster_enabled of this CreateDeploymentRequest.
        :rtype: bool
        """
        return self._cache_cluster_enabled

    @cache_cluster_enabled.setter
    def cache_cluster_enabled(self, cache_cluster_enabled):
        """Sets the cache_cluster_enabled of this CreateDeploymentRequest.

        Enables a cache cluster for the Stage resource specified in the input.

        :param cache_cluster_enabled: The cache_cluster_enabled of this CreateDeploymentRequest.
        :type cache_cluster_enabled: bool
        """

        self._cache_cluster_enabled = cache_cluster_enabled

    @property
    def cache_cluster_size(self):
        """Gets the cache_cluster_size of this CreateDeploymentRequest.

        Returns the size of the CacheCluster.

        :return: The cache_cluster_size of this CreateDeploymentRequest.
        :rtype: str
        """
        return self._cache_cluster_size

    @cache_cluster_size.setter
    def cache_cluster_size(self, cache_cluster_size):
        """Sets the cache_cluster_size of this CreateDeploymentRequest.

        Returns the size of the CacheCluster.

        :param cache_cluster_size: The cache_cluster_size of this CreateDeploymentRequest.
        :type cache_cluster_size: str
        """
        allowed_values = ["0.5", "1.6", "6.1", "13.5", "28.4", "58.2", "118", "237"]  # noqa: E501
        if cache_cluster_size not in allowed_values:
            raise ValueError(
                "Invalid value for `cache_cluster_size` ({0}), must be one of {1}"
                .format(cache_cluster_size, allowed_values)
            )

        self._cache_cluster_size = cache_cluster_size

    @property
    def variables(self):
        """Gets the variables of this CreateDeploymentRequest.

        A map that defines the stage variables for the Stage resource that is associated with the new deployment. Variable names can have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&amp;=,]+</code>.

        :return: The variables of this CreateDeploymentRequest.
        :rtype: Dict[str, str]
        """
        return self._variables

    @variables.setter
    def variables(self, variables):
        """Sets the variables of this CreateDeploymentRequest.

        A map that defines the stage variables for the Stage resource that is associated with the new deployment. Variable names can have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&amp;=,]+</code>.

        :param variables: The variables of this CreateDeploymentRequest.
        :type variables: Dict[str, str]
        """

        self._variables = variables

    @property
    def canary_settings(self):
        """Gets the canary_settings of this CreateDeploymentRequest.


        :return: The canary_settings of this CreateDeploymentRequest.
        :rtype: CreateDeploymentRequestCanarySettings
        """
        return self._canary_settings

    @canary_settings.setter
    def canary_settings(self, canary_settings):
        """Sets the canary_settings of this CreateDeploymentRequest.


        :param canary_settings: The canary_settings of this CreateDeploymentRequest.
        :type canary_settings: CreateDeploymentRequestCanarySettings
        """

        self._canary_settings = canary_settings

    @property
    def tracing_enabled(self):
        """Gets the tracing_enabled of this CreateDeploymentRequest.

        Specifies whether active tracing with X-ray is enabled for the Stage.

        :return: The tracing_enabled of this CreateDeploymentRequest.
        :rtype: bool
        """
        return self._tracing_enabled

    @tracing_enabled.setter
    def tracing_enabled(self, tracing_enabled):
        """Sets the tracing_enabled of this CreateDeploymentRequest.

        Specifies whether active tracing with X-ray is enabled for the Stage.

        :param tracing_enabled: The tracing_enabled of this CreateDeploymentRequest.
        :type tracing_enabled: bool
        """

        self._tracing_enabled = tracing_enabled
