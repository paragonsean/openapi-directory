# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiStage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_id: str=None, stage: str=None, throttle: Dict=None):
        """ApiStage - a model defined in OpenAPI

        :param api_id: The api_id of this ApiStage.
        :param stage: The stage of this ApiStage.
        :param throttle: The throttle of this ApiStage.
        """
        self.openapi_types = {
            'api_id': str,
            'stage': str,
            'throttle': Dict
        }

        self.attribute_map = {
            'api_id': 'apiId',
            'stage': 'stage',
            'throttle': 'throttle'
        }

        self._api_id = api_id
        self._stage = stage
        self._throttle = throttle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiStage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiStage of this ApiStage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_id(self):
        """Gets the api_id of this ApiStage.


        :return: The api_id of this ApiStage.
        :rtype: str
        """
        return self._api_id

    @api_id.setter
    def api_id(self, api_id):
        """Sets the api_id of this ApiStage.


        :param api_id: The api_id of this ApiStage.
        :type api_id: str
        """

        self._api_id = api_id

    @property
    def stage(self):
        """Gets the stage of this ApiStage.


        :return: The stage of this ApiStage.
        :rtype: str
        """
        return self._stage

    @stage.setter
    def stage(self, stage):
        """Sets the stage of this ApiStage.


        :param stage: The stage of this ApiStage.
        :type stage: str
        """

        self._stage = stage

    @property
    def throttle(self):
        """Gets the throttle of this ApiStage.


        :return: The throttle of this ApiStage.
        :rtype: Dict
        """
        return self._throttle

    @throttle.setter
    def throttle(self, throttle):
        """Sets the throttle of this ApiStage.


        :param throttle: The throttle of this ApiStage.
        :type throttle: Dict
        """

        self._throttle = throttle
