# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SdkConfigurationProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, friendly_name: str=None, description: str=None, required: bool=None, default_value: str=None):
        """SdkConfigurationProperty - a model defined in OpenAPI

        :param name: The name of this SdkConfigurationProperty.
        :param friendly_name: The friendly_name of this SdkConfigurationProperty.
        :param description: The description of this SdkConfigurationProperty.
        :param required: The required of this SdkConfigurationProperty.
        :param default_value: The default_value of this SdkConfigurationProperty.
        """
        self.openapi_types = {
            'name': str,
            'friendly_name': str,
            'description': str,
            'required': bool,
            'default_value': str
        }

        self.attribute_map = {
            'name': 'name',
            'friendly_name': 'friendlyName',
            'description': 'description',
            'required': 'required',
            'default_value': 'defaultValue'
        }

        self._name = name
        self._friendly_name = friendly_name
        self._description = description
        self._required = required
        self._default_value = default_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SdkConfigurationProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SdkConfigurationProperty of this SdkConfigurationProperty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this SdkConfigurationProperty.


        :return: The name of this SdkConfigurationProperty.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SdkConfigurationProperty.


        :param name: The name of this SdkConfigurationProperty.
        :type name: str
        """

        self._name = name

    @property
    def friendly_name(self):
        """Gets the friendly_name of this SdkConfigurationProperty.


        :return: The friendly_name of this SdkConfigurationProperty.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this SdkConfigurationProperty.


        :param friendly_name: The friendly_name of this SdkConfigurationProperty.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def description(self):
        """Gets the description of this SdkConfigurationProperty.


        :return: The description of this SdkConfigurationProperty.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SdkConfigurationProperty.


        :param description: The description of this SdkConfigurationProperty.
        :type description: str
        """

        self._description = description

    @property
    def required(self):
        """Gets the required of this SdkConfigurationProperty.


        :return: The required of this SdkConfigurationProperty.
        :rtype: bool
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this SdkConfigurationProperty.


        :param required: The required of this SdkConfigurationProperty.
        :type required: bool
        """

        self._required = required

    @property
    def default_value(self):
        """Gets the default_value of this SdkConfigurationProperty.


        :return: The default_value of this SdkConfigurationProperty.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this SdkConfigurationProperty.


        :param default_value: The default_value of this SdkConfigurationProperty.
        :type default_value: str
        """

        self._default_value = default_value
