# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GatewayResponseType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DEFAULT_4_XX = 'DEFAULT_4XX'
    DEFAULT_5_XX = 'DEFAULT_5XX'
    RESOURCE_NOT_FOUND = 'RESOURCE_NOT_FOUND'
    UNAUTHORIZED = 'UNAUTHORIZED'
    INVALID_API_KEY = 'INVALID_API_KEY'
    ACCESS_DENIED = 'ACCESS_DENIED'
    AUTHORIZER_FAILURE = 'AUTHORIZER_FAILURE'
    AUTHORIZER_CONFIGURATION_ERROR = 'AUTHORIZER_CONFIGURATION_ERROR'
    INVALID_SIGNATURE = 'INVALID_SIGNATURE'
    EXPIRED_TOKEN = 'EXPIRED_TOKEN'
    MISSING_AUTHENTICATION_TOKEN = 'MISSING_AUTHENTICATION_TOKEN'
    INTEGRATION_FAILURE = 'INTEGRATION_FAILURE'
    INTEGRATION_TIMEOUT = 'INTEGRATION_TIMEOUT'
    API_CONFIGURATION_ERROR = 'API_CONFIGURATION_ERROR'
    UNSUPPORTED_MEDIA_TYPE = 'UNSUPPORTED_MEDIA_TYPE'
    BAD_REQUEST_PARAMETERS = 'BAD_REQUEST_PARAMETERS'
    BAD_REQUEST_BODY = 'BAD_REQUEST_BODY'
    REQUEST_TOO_LARGE = 'REQUEST_TOO_LARGE'
    THROTTLED = 'THROTTLED'
    QUOTA_EXCEEDED = 'QUOTA_EXCEEDED'
    WAF_FILTERED = 'WAF_FILTERED'

    def __init__(self):
        """GatewayResponseType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GatewayResponseType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GatewayResponseType of this GatewayResponseType.
        """
        return util.deserialize_model(dikt, cls)
