# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Usage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, usage_plan_id: str=None, start_date: str=None, end_date: str=None, position: str=None, items: Dict=None):
        """Usage - a model defined in OpenAPI

        :param usage_plan_id: The usage_plan_id of this Usage.
        :param start_date: The start_date of this Usage.
        :param end_date: The end_date of this Usage.
        :param position: The position of this Usage.
        :param items: The items of this Usage.
        """
        self.openapi_types = {
            'usage_plan_id': str,
            'start_date': str,
            'end_date': str,
            'position': str,
            'items': Dict
        }

        self.attribute_map = {
            'usage_plan_id': 'usagePlanId',
            'start_date': 'startDate',
            'end_date': 'endDate',
            'position': 'position',
            'items': 'items'
        }

        self._usage_plan_id = usage_plan_id
        self._start_date = start_date
        self._end_date = end_date
        self._position = position
        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Usage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Usage of this Usage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def usage_plan_id(self):
        """Gets the usage_plan_id of this Usage.


        :return: The usage_plan_id of this Usage.
        :rtype: str
        """
        return self._usage_plan_id

    @usage_plan_id.setter
    def usage_plan_id(self, usage_plan_id):
        """Sets the usage_plan_id of this Usage.


        :param usage_plan_id: The usage_plan_id of this Usage.
        :type usage_plan_id: str
        """

        self._usage_plan_id = usage_plan_id

    @property
    def start_date(self):
        """Gets the start_date of this Usage.


        :return: The start_date of this Usage.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Usage.


        :param start_date: The start_date of this Usage.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def end_date(self):
        """Gets the end_date of this Usage.


        :return: The end_date of this Usage.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Usage.


        :param end_date: The end_date of this Usage.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def position(self):
        """Gets the position of this Usage.


        :return: The position of this Usage.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this Usage.


        :param position: The position of this Usage.
        :type position: str
        """

        self._position = position

    @property
    def items(self):
        """Gets the items of this Usage.


        :return: The items of this Usage.
        :rtype: Dict
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this Usage.


        :param items: The items of this Usage.
        :type items: Dict
        """

        self._items = items
