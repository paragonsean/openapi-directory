# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_domain_name_request_endpoint_configuration import CreateDomainNameRequestEndpointConfiguration
from openapi_server import util


class CreateRestApiRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, version: str=None, clone_from: str=None, binary_media_types: List[str]=None, minimum_compression_size: int=None, api_key_source: str=None, endpoint_configuration: CreateDomainNameRequestEndpointConfiguration=None, policy: str=None, tags: Dict[str, str]=None, disable_execute_api_endpoint: bool=None):
        """CreateRestApiRequest - a model defined in OpenAPI

        :param name: The name of this CreateRestApiRequest.
        :param description: The description of this CreateRestApiRequest.
        :param version: The version of this CreateRestApiRequest.
        :param clone_from: The clone_from of this CreateRestApiRequest.
        :param binary_media_types: The binary_media_types of this CreateRestApiRequest.
        :param minimum_compression_size: The minimum_compression_size of this CreateRestApiRequest.
        :param api_key_source: The api_key_source of this CreateRestApiRequest.
        :param endpoint_configuration: The endpoint_configuration of this CreateRestApiRequest.
        :param policy: The policy of this CreateRestApiRequest.
        :param tags: The tags of this CreateRestApiRequest.
        :param disable_execute_api_endpoint: The disable_execute_api_endpoint of this CreateRestApiRequest.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'version': str,
            'clone_from': str,
            'binary_media_types': List[str],
            'minimum_compression_size': int,
            'api_key_source': str,
            'endpoint_configuration': CreateDomainNameRequestEndpointConfiguration,
            'policy': str,
            'tags': Dict[str, str],
            'disable_execute_api_endpoint': bool
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            'version': 'version',
            'clone_from': 'cloneFrom',
            'binary_media_types': 'binaryMediaTypes',
            'minimum_compression_size': 'minimumCompressionSize',
            'api_key_source': 'apiKeySource',
            'endpoint_configuration': 'endpointConfiguration',
            'policy': 'policy',
            'tags': 'tags',
            'disable_execute_api_endpoint': 'disableExecuteApiEndpoint'
        }

        self._name = name
        self._description = description
        self._version = version
        self._clone_from = clone_from
        self._binary_media_types = binary_media_types
        self._minimum_compression_size = minimum_compression_size
        self._api_key_source = api_key_source
        self._endpoint_configuration = endpoint_configuration
        self._policy = policy
        self._tags = tags
        self._disable_execute_api_endpoint = disable_execute_api_endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRestApiRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRestApi_request of this CreateRestApiRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateRestApiRequest.

        The name of the RestApi.

        :return: The name of this CreateRestApiRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateRestApiRequest.

        The name of the RestApi.

        :param name: The name of this CreateRestApiRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def description(self):
        """Gets the description of this CreateRestApiRequest.

        The description of the RestApi.

        :return: The description of this CreateRestApiRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateRestApiRequest.

        The description of the RestApi.

        :param description: The description of this CreateRestApiRequest.
        :type description: str
        """

        self._description = description

    @property
    def version(self):
        """Gets the version of this CreateRestApiRequest.

        A version identifier for the API.

        :return: The version of this CreateRestApiRequest.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this CreateRestApiRequest.

        A version identifier for the API.

        :param version: The version of this CreateRestApiRequest.
        :type version: str
        """

        self._version = version

    @property
    def clone_from(self):
        """Gets the clone_from of this CreateRestApiRequest.

        The ID of the RestApi that you want to clone from.

        :return: The clone_from of this CreateRestApiRequest.
        :rtype: str
        """
        return self._clone_from

    @clone_from.setter
    def clone_from(self, clone_from):
        """Sets the clone_from of this CreateRestApiRequest.

        The ID of the RestApi that you want to clone from.

        :param clone_from: The clone_from of this CreateRestApiRequest.
        :type clone_from: str
        """

        self._clone_from = clone_from

    @property
    def binary_media_types(self):
        """Gets the binary_media_types of this CreateRestApiRequest.

        The list of binary media types supported by the RestApi. By default, the RestApi supports only UTF-8-encoded text payloads.

        :return: The binary_media_types of this CreateRestApiRequest.
        :rtype: List[str]
        """
        return self._binary_media_types

    @binary_media_types.setter
    def binary_media_types(self, binary_media_types):
        """Sets the binary_media_types of this CreateRestApiRequest.

        The list of binary media types supported by the RestApi. By default, the RestApi supports only UTF-8-encoded text payloads.

        :param binary_media_types: The binary_media_types of this CreateRestApiRequest.
        :type binary_media_types: List[str]
        """

        self._binary_media_types = binary_media_types

    @property
    def minimum_compression_size(self):
        """Gets the minimum_compression_size of this CreateRestApiRequest.

        A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API. When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.

        :return: The minimum_compression_size of this CreateRestApiRequest.
        :rtype: int
        """
        return self._minimum_compression_size

    @minimum_compression_size.setter
    def minimum_compression_size(self, minimum_compression_size):
        """Sets the minimum_compression_size of this CreateRestApiRequest.

        A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API. When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.

        :param minimum_compression_size: The minimum_compression_size of this CreateRestApiRequest.
        :type minimum_compression_size: int
        """

        self._minimum_compression_size = minimum_compression_size

    @property
    def api_key_source(self):
        """Gets the api_key_source of this CreateRestApiRequest.

        The source of the API key for metering requests according to a usage plan. Valid values are: &gt;<code>HEADER</code> to read the API key from the <code>X-API-Key</code> header of a request. <code>AUTHORIZER</code> to read the API key from the <code>UsageIdentifierKey</code> from a custom authorizer.

        :return: The api_key_source of this CreateRestApiRequest.
        :rtype: str
        """
        return self._api_key_source

    @api_key_source.setter
    def api_key_source(self, api_key_source):
        """Sets the api_key_source of this CreateRestApiRequest.

        The source of the API key for metering requests according to a usage plan. Valid values are: &gt;<code>HEADER</code> to read the API key from the <code>X-API-Key</code> header of a request. <code>AUTHORIZER</code> to read the API key from the <code>UsageIdentifierKey</code> from a custom authorizer.

        :param api_key_source: The api_key_source of this CreateRestApiRequest.
        :type api_key_source: str
        """
        allowed_values = ["HEADER", "AUTHORIZER"]  # noqa: E501
        if api_key_source not in allowed_values:
            raise ValueError(
                "Invalid value for `api_key_source` ({0}), must be one of {1}"
                .format(api_key_source, allowed_values)
            )

        self._api_key_source = api_key_source

    @property
    def endpoint_configuration(self):
        """Gets the endpoint_configuration of this CreateRestApiRequest.


        :return: The endpoint_configuration of this CreateRestApiRequest.
        :rtype: CreateDomainNameRequestEndpointConfiguration
        """
        return self._endpoint_configuration

    @endpoint_configuration.setter
    def endpoint_configuration(self, endpoint_configuration):
        """Sets the endpoint_configuration of this CreateRestApiRequest.


        :param endpoint_configuration: The endpoint_configuration of this CreateRestApiRequest.
        :type endpoint_configuration: CreateDomainNameRequestEndpointConfiguration
        """

        self._endpoint_configuration = endpoint_configuration

    @property
    def policy(self):
        """Gets the policy of this CreateRestApiRequest.

        A stringified JSON policy document that applies to this RestApi regardless of the caller and Method configuration.

        :return: The policy of this CreateRestApiRequest.
        :rtype: str
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this CreateRestApiRequest.

        A stringified JSON policy document that applies to this RestApi regardless of the caller and Method configuration.

        :param policy: The policy of this CreateRestApiRequest.
        :type policy: str
        """

        self._policy = policy

    @property
    def tags(self):
        """Gets the tags of this CreateRestApiRequest.

        The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.

        :return: The tags of this CreateRestApiRequest.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateRestApiRequest.

        The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.

        :param tags: The tags of this CreateRestApiRequest.
        :type tags: Dict[str, str]
        """

        self._tags = tags

    @property
    def disable_execute_api_endpoint(self):
        """Gets the disable_execute_api_endpoint of this CreateRestApiRequest.

        Specifies whether clients can invoke your API by using the default <code>execute-api</code> endpoint. By default, clients can invoke your API with the default <code>https://{api_id}.execute-api.{region}.amazonaws.com</code> endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint

        :return: The disable_execute_api_endpoint of this CreateRestApiRequest.
        :rtype: bool
        """
        return self._disable_execute_api_endpoint

    @disable_execute_api_endpoint.setter
    def disable_execute_api_endpoint(self, disable_execute_api_endpoint):
        """Sets the disable_execute_api_endpoint of this CreateRestApiRequest.

        Specifies whether clients can invoke your API by using the default <code>execute-api</code> endpoint. By default, clients can invoke your API with the default <code>https://{api_id}.execute-api.{region}.amazonaws.com</code> endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint

        :param disable_execute_api_endpoint: The disable_execute_api_endpoint of this CreateRestApiRequest.
        :type disable_execute_api_endpoint: bool
        """

        self._disable_execute_api_endpoint = disable_execute_api_endpoint
