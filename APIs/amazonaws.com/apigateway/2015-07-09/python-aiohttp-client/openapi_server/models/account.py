# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_throttle_settings import AccountThrottleSettings
from openapi_server import util


class Account(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloudwatch_role_arn: str=None, throttle_settings: AccountThrottleSettings=None, features: List=None, api_key_version: str=None):
        """Account - a model defined in OpenAPI

        :param cloudwatch_role_arn: The cloudwatch_role_arn of this Account.
        :param throttle_settings: The throttle_settings of this Account.
        :param features: The features of this Account.
        :param api_key_version: The api_key_version of this Account.
        """
        self.openapi_types = {
            'cloudwatch_role_arn': str,
            'throttle_settings': AccountThrottleSettings,
            'features': List,
            'api_key_version': str
        }

        self.attribute_map = {
            'cloudwatch_role_arn': 'cloudwatchRoleArn',
            'throttle_settings': 'throttleSettings',
            'features': 'features',
            'api_key_version': 'apiKeyVersion'
        }

        self._cloudwatch_role_arn = cloudwatch_role_arn
        self._throttle_settings = throttle_settings
        self._features = features
        self._api_key_version = api_key_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Account':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Account of this Account.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloudwatch_role_arn(self):
        """Gets the cloudwatch_role_arn of this Account.


        :return: The cloudwatch_role_arn of this Account.
        :rtype: str
        """
        return self._cloudwatch_role_arn

    @cloudwatch_role_arn.setter
    def cloudwatch_role_arn(self, cloudwatch_role_arn):
        """Sets the cloudwatch_role_arn of this Account.


        :param cloudwatch_role_arn: The cloudwatch_role_arn of this Account.
        :type cloudwatch_role_arn: str
        """

        self._cloudwatch_role_arn = cloudwatch_role_arn

    @property
    def throttle_settings(self):
        """Gets the throttle_settings of this Account.


        :return: The throttle_settings of this Account.
        :rtype: AccountThrottleSettings
        """
        return self._throttle_settings

    @throttle_settings.setter
    def throttle_settings(self, throttle_settings):
        """Sets the throttle_settings of this Account.


        :param throttle_settings: The throttle_settings of this Account.
        :type throttle_settings: AccountThrottleSettings
        """

        self._throttle_settings = throttle_settings

    @property
    def features(self):
        """Gets the features of this Account.


        :return: The features of this Account.
        :rtype: List
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this Account.


        :param features: The features of this Account.
        :type features: List
        """

        self._features = features

    @property
    def api_key_version(self):
        """Gets the api_key_version of this Account.


        :return: The api_key_version of this Account.
        :rtype: str
        """
        return self._api_key_version

    @api_key_version.setter
    def api_key_version(self, api_key_version):
        """Sets the api_key_version of this Account.


        :param api_key_version: The api_key_version of this Account.
        :type api_key_version: str
        """

        self._api_key_version = api_key_version
