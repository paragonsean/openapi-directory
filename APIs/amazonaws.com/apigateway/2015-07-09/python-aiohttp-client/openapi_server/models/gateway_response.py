# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gateway_response_type import GatewayResponseType
from openapi_server import util


class GatewayResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, response_type: GatewayResponseType=None, status_code: str=None, response_parameters: Dict=None, response_templates: Dict=None, default_response: bool=None):
        """GatewayResponse - a model defined in OpenAPI

        :param response_type: The response_type of this GatewayResponse.
        :param status_code: The status_code of this GatewayResponse.
        :param response_parameters: The response_parameters of this GatewayResponse.
        :param response_templates: The response_templates of this GatewayResponse.
        :param default_response: The default_response of this GatewayResponse.
        """
        self.openapi_types = {
            'response_type': GatewayResponseType,
            'status_code': str,
            'response_parameters': Dict,
            'response_templates': Dict,
            'default_response': bool
        }

        self.attribute_map = {
            'response_type': 'responseType',
            'status_code': 'statusCode',
            'response_parameters': 'responseParameters',
            'response_templates': 'responseTemplates',
            'default_response': 'defaultResponse'
        }

        self._response_type = response_type
        self._status_code = status_code
        self._response_parameters = response_parameters
        self._response_templates = response_templates
        self._default_response = default_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GatewayResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GatewayResponse of this GatewayResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def response_type(self):
        """Gets the response_type of this GatewayResponse.


        :return: The response_type of this GatewayResponse.
        :rtype: GatewayResponseType
        """
        return self._response_type

    @response_type.setter
    def response_type(self, response_type):
        """Sets the response_type of this GatewayResponse.


        :param response_type: The response_type of this GatewayResponse.
        :type response_type: GatewayResponseType
        """

        self._response_type = response_type

    @property
    def status_code(self):
        """Gets the status_code of this GatewayResponse.


        :return: The status_code of this GatewayResponse.
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this GatewayResponse.


        :param status_code: The status_code of this GatewayResponse.
        :type status_code: str
        """

        self._status_code = status_code

    @property
    def response_parameters(self):
        """Gets the response_parameters of this GatewayResponse.


        :return: The response_parameters of this GatewayResponse.
        :rtype: Dict
        """
        return self._response_parameters

    @response_parameters.setter
    def response_parameters(self, response_parameters):
        """Sets the response_parameters of this GatewayResponse.


        :param response_parameters: The response_parameters of this GatewayResponse.
        :type response_parameters: Dict
        """

        self._response_parameters = response_parameters

    @property
    def response_templates(self):
        """Gets the response_templates of this GatewayResponse.


        :return: The response_templates of this GatewayResponse.
        :rtype: Dict
        """
        return self._response_templates

    @response_templates.setter
    def response_templates(self, response_templates):
        """Sets the response_templates of this GatewayResponse.


        :param response_templates: The response_templates of this GatewayResponse.
        :type response_templates: Dict
        """

        self._response_templates = response_templates

    @property
    def default_response(self):
        """Gets the default_response of this GatewayResponse.


        :return: The default_response of this GatewayResponse.
        :rtype: bool
        """
        return self._default_response

    @default_response.setter
    def default_response(self, default_response):
        """Sets the default_response of this GatewayResponse.


        :param default_response: The default_response of this GatewayResponse.
        :type default_response: bool
        """

        self._default_response = default_response
