# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SdkType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, friendly_name: str=None, description: str=None, configuration_properties: List=None):
        """SdkType - a model defined in OpenAPI

        :param id: The id of this SdkType.
        :param friendly_name: The friendly_name of this SdkType.
        :param description: The description of this SdkType.
        :param configuration_properties: The configuration_properties of this SdkType.
        """
        self.openapi_types = {
            'id': str,
            'friendly_name': str,
            'description': str,
            'configuration_properties': List
        }

        self.attribute_map = {
            'id': 'id',
            'friendly_name': 'friendlyName',
            'description': 'description',
            'configuration_properties': 'configurationProperties'
        }

        self._id = id
        self._friendly_name = friendly_name
        self._description = description
        self._configuration_properties = configuration_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SdkType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SdkType of this SdkType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this SdkType.


        :return: The id of this SdkType.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SdkType.


        :param id: The id of this SdkType.
        :type id: str
        """

        self._id = id

    @property
    def friendly_name(self):
        """Gets the friendly_name of this SdkType.


        :return: The friendly_name of this SdkType.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this SdkType.


        :param friendly_name: The friendly_name of this SdkType.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def description(self):
        """Gets the description of this SdkType.


        :return: The description of this SdkType.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SdkType.


        :param description: The description of this SdkType.
        :type description: str
        """

        self._description = description

    @property
    def configuration_properties(self):
        """Gets the configuration_properties of this SdkType.


        :return: The configuration_properties of this SdkType.
        :rtype: List
        """
        return self._configuration_properties

    @configuration_properties.setter
    def configuration_properties(self, configuration_properties):
        """Sets the configuration_properties of this SdkType.


        :param configuration_properties: The configuration_properties of this SdkType.
        :type configuration_properties: List
        """

        self._configuration_properties = configuration_properties
