# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.domain_name_endpoint_configuration import DomainNameEndpointConfiguration
from openapi_server.models.domain_name_mutual_tls_authentication import DomainNameMutualTlsAuthentication
from openapi_server.models.domain_name_status import DomainNameStatus
from openapi_server.models.security_policy import SecurityPolicy
from openapi_server import util


class DomainName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, certificate_name: str=None, certificate_arn: str=None, certificate_upload_date: datetime=None, regional_domain_name: str=None, regional_hosted_zone_id: str=None, regional_certificate_name: str=None, regional_certificate_arn: str=None, distribution_domain_name: str=None, distribution_hosted_zone_id: str=None, endpoint_configuration: DomainNameEndpointConfiguration=None, domain_name_status: DomainNameStatus=None, domain_name_status_message: str=None, security_policy: SecurityPolicy=None, tags: Dict=None, mutual_tls_authentication: DomainNameMutualTlsAuthentication=None, ownership_verification_certificate_arn: str=None):
        """DomainName - a model defined in OpenAPI

        :param domain_name: The domain_name of this DomainName.
        :param certificate_name: The certificate_name of this DomainName.
        :param certificate_arn: The certificate_arn of this DomainName.
        :param certificate_upload_date: The certificate_upload_date of this DomainName.
        :param regional_domain_name: The regional_domain_name of this DomainName.
        :param regional_hosted_zone_id: The regional_hosted_zone_id of this DomainName.
        :param regional_certificate_name: The regional_certificate_name of this DomainName.
        :param regional_certificate_arn: The regional_certificate_arn of this DomainName.
        :param distribution_domain_name: The distribution_domain_name of this DomainName.
        :param distribution_hosted_zone_id: The distribution_hosted_zone_id of this DomainName.
        :param endpoint_configuration: The endpoint_configuration of this DomainName.
        :param domain_name_status: The domain_name_status of this DomainName.
        :param domain_name_status_message: The domain_name_status_message of this DomainName.
        :param security_policy: The security_policy of this DomainName.
        :param tags: The tags of this DomainName.
        :param mutual_tls_authentication: The mutual_tls_authentication of this DomainName.
        :param ownership_verification_certificate_arn: The ownership_verification_certificate_arn of this DomainName.
        """
        self.openapi_types = {
            'domain_name': str,
            'certificate_name': str,
            'certificate_arn': str,
            'certificate_upload_date': datetime,
            'regional_domain_name': str,
            'regional_hosted_zone_id': str,
            'regional_certificate_name': str,
            'regional_certificate_arn': str,
            'distribution_domain_name': str,
            'distribution_hosted_zone_id': str,
            'endpoint_configuration': DomainNameEndpointConfiguration,
            'domain_name_status': DomainNameStatus,
            'domain_name_status_message': str,
            'security_policy': SecurityPolicy,
            'tags': Dict,
            'mutual_tls_authentication': DomainNameMutualTlsAuthentication,
            'ownership_verification_certificate_arn': str
        }

        self.attribute_map = {
            'domain_name': 'domainName',
            'certificate_name': 'certificateName',
            'certificate_arn': 'certificateArn',
            'certificate_upload_date': 'certificateUploadDate',
            'regional_domain_name': 'regionalDomainName',
            'regional_hosted_zone_id': 'regionalHostedZoneId',
            'regional_certificate_name': 'regionalCertificateName',
            'regional_certificate_arn': 'regionalCertificateArn',
            'distribution_domain_name': 'distributionDomainName',
            'distribution_hosted_zone_id': 'distributionHostedZoneId',
            'endpoint_configuration': 'endpointConfiguration',
            'domain_name_status': 'domainNameStatus',
            'domain_name_status_message': 'domainNameStatusMessage',
            'security_policy': 'securityPolicy',
            'tags': 'tags',
            'mutual_tls_authentication': 'mutualTlsAuthentication',
            'ownership_verification_certificate_arn': 'ownershipVerificationCertificateArn'
        }

        self._domain_name = domain_name
        self._certificate_name = certificate_name
        self._certificate_arn = certificate_arn
        self._certificate_upload_date = certificate_upload_date
        self._regional_domain_name = regional_domain_name
        self._regional_hosted_zone_id = regional_hosted_zone_id
        self._regional_certificate_name = regional_certificate_name
        self._regional_certificate_arn = regional_certificate_arn
        self._distribution_domain_name = distribution_domain_name
        self._distribution_hosted_zone_id = distribution_hosted_zone_id
        self._endpoint_configuration = endpoint_configuration
        self._domain_name_status = domain_name_status
        self._domain_name_status_message = domain_name_status_message
        self._security_policy = security_policy
        self._tags = tags
        self._mutual_tls_authentication = mutual_tls_authentication
        self._ownership_verification_certificate_arn = ownership_verification_certificate_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainName of this DomainName.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self):
        """Gets the domain_name of this DomainName.


        :return: The domain_name of this DomainName.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this DomainName.


        :param domain_name: The domain_name of this DomainName.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def certificate_name(self):
        """Gets the certificate_name of this DomainName.


        :return: The certificate_name of this DomainName.
        :rtype: str
        """
        return self._certificate_name

    @certificate_name.setter
    def certificate_name(self, certificate_name):
        """Sets the certificate_name of this DomainName.


        :param certificate_name: The certificate_name of this DomainName.
        :type certificate_name: str
        """

        self._certificate_name = certificate_name

    @property
    def certificate_arn(self):
        """Gets the certificate_arn of this DomainName.


        :return: The certificate_arn of this DomainName.
        :rtype: str
        """
        return self._certificate_arn

    @certificate_arn.setter
    def certificate_arn(self, certificate_arn):
        """Sets the certificate_arn of this DomainName.


        :param certificate_arn: The certificate_arn of this DomainName.
        :type certificate_arn: str
        """

        self._certificate_arn = certificate_arn

    @property
    def certificate_upload_date(self):
        """Gets the certificate_upload_date of this DomainName.


        :return: The certificate_upload_date of this DomainName.
        :rtype: datetime
        """
        return self._certificate_upload_date

    @certificate_upload_date.setter
    def certificate_upload_date(self, certificate_upload_date):
        """Sets the certificate_upload_date of this DomainName.


        :param certificate_upload_date: The certificate_upload_date of this DomainName.
        :type certificate_upload_date: datetime
        """

        self._certificate_upload_date = certificate_upload_date

    @property
    def regional_domain_name(self):
        """Gets the regional_domain_name of this DomainName.


        :return: The regional_domain_name of this DomainName.
        :rtype: str
        """
        return self._regional_domain_name

    @regional_domain_name.setter
    def regional_domain_name(self, regional_domain_name):
        """Sets the regional_domain_name of this DomainName.


        :param regional_domain_name: The regional_domain_name of this DomainName.
        :type regional_domain_name: str
        """

        self._regional_domain_name = regional_domain_name

    @property
    def regional_hosted_zone_id(self):
        """Gets the regional_hosted_zone_id of this DomainName.


        :return: The regional_hosted_zone_id of this DomainName.
        :rtype: str
        """
        return self._regional_hosted_zone_id

    @regional_hosted_zone_id.setter
    def regional_hosted_zone_id(self, regional_hosted_zone_id):
        """Sets the regional_hosted_zone_id of this DomainName.


        :param regional_hosted_zone_id: The regional_hosted_zone_id of this DomainName.
        :type regional_hosted_zone_id: str
        """

        self._regional_hosted_zone_id = regional_hosted_zone_id

    @property
    def regional_certificate_name(self):
        """Gets the regional_certificate_name of this DomainName.


        :return: The regional_certificate_name of this DomainName.
        :rtype: str
        """
        return self._regional_certificate_name

    @regional_certificate_name.setter
    def regional_certificate_name(self, regional_certificate_name):
        """Sets the regional_certificate_name of this DomainName.


        :param regional_certificate_name: The regional_certificate_name of this DomainName.
        :type regional_certificate_name: str
        """

        self._regional_certificate_name = regional_certificate_name

    @property
    def regional_certificate_arn(self):
        """Gets the regional_certificate_arn of this DomainName.


        :return: The regional_certificate_arn of this DomainName.
        :rtype: str
        """
        return self._regional_certificate_arn

    @regional_certificate_arn.setter
    def regional_certificate_arn(self, regional_certificate_arn):
        """Sets the regional_certificate_arn of this DomainName.


        :param regional_certificate_arn: The regional_certificate_arn of this DomainName.
        :type regional_certificate_arn: str
        """

        self._regional_certificate_arn = regional_certificate_arn

    @property
    def distribution_domain_name(self):
        """Gets the distribution_domain_name of this DomainName.


        :return: The distribution_domain_name of this DomainName.
        :rtype: str
        """
        return self._distribution_domain_name

    @distribution_domain_name.setter
    def distribution_domain_name(self, distribution_domain_name):
        """Sets the distribution_domain_name of this DomainName.


        :param distribution_domain_name: The distribution_domain_name of this DomainName.
        :type distribution_domain_name: str
        """

        self._distribution_domain_name = distribution_domain_name

    @property
    def distribution_hosted_zone_id(self):
        """Gets the distribution_hosted_zone_id of this DomainName.


        :return: The distribution_hosted_zone_id of this DomainName.
        :rtype: str
        """
        return self._distribution_hosted_zone_id

    @distribution_hosted_zone_id.setter
    def distribution_hosted_zone_id(self, distribution_hosted_zone_id):
        """Sets the distribution_hosted_zone_id of this DomainName.


        :param distribution_hosted_zone_id: The distribution_hosted_zone_id of this DomainName.
        :type distribution_hosted_zone_id: str
        """

        self._distribution_hosted_zone_id = distribution_hosted_zone_id

    @property
    def endpoint_configuration(self):
        """Gets the endpoint_configuration of this DomainName.


        :return: The endpoint_configuration of this DomainName.
        :rtype: DomainNameEndpointConfiguration
        """
        return self._endpoint_configuration

    @endpoint_configuration.setter
    def endpoint_configuration(self, endpoint_configuration):
        """Sets the endpoint_configuration of this DomainName.


        :param endpoint_configuration: The endpoint_configuration of this DomainName.
        :type endpoint_configuration: DomainNameEndpointConfiguration
        """

        self._endpoint_configuration = endpoint_configuration

    @property
    def domain_name_status(self):
        """Gets the domain_name_status of this DomainName.


        :return: The domain_name_status of this DomainName.
        :rtype: DomainNameStatus
        """
        return self._domain_name_status

    @domain_name_status.setter
    def domain_name_status(self, domain_name_status):
        """Sets the domain_name_status of this DomainName.


        :param domain_name_status: The domain_name_status of this DomainName.
        :type domain_name_status: DomainNameStatus
        """

        self._domain_name_status = domain_name_status

    @property
    def domain_name_status_message(self):
        """Gets the domain_name_status_message of this DomainName.


        :return: The domain_name_status_message of this DomainName.
        :rtype: str
        """
        return self._domain_name_status_message

    @domain_name_status_message.setter
    def domain_name_status_message(self, domain_name_status_message):
        """Sets the domain_name_status_message of this DomainName.


        :param domain_name_status_message: The domain_name_status_message of this DomainName.
        :type domain_name_status_message: str
        """

        self._domain_name_status_message = domain_name_status_message

    @property
    def security_policy(self):
        """Gets the security_policy of this DomainName.


        :return: The security_policy of this DomainName.
        :rtype: SecurityPolicy
        """
        return self._security_policy

    @security_policy.setter
    def security_policy(self, security_policy):
        """Sets the security_policy of this DomainName.


        :param security_policy: The security_policy of this DomainName.
        :type security_policy: SecurityPolicy
        """

        self._security_policy = security_policy

    @property
    def tags(self):
        """Gets the tags of this DomainName.


        :return: The tags of this DomainName.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DomainName.


        :param tags: The tags of this DomainName.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def mutual_tls_authentication(self):
        """Gets the mutual_tls_authentication of this DomainName.


        :return: The mutual_tls_authentication of this DomainName.
        :rtype: DomainNameMutualTlsAuthentication
        """
        return self._mutual_tls_authentication

    @mutual_tls_authentication.setter
    def mutual_tls_authentication(self, mutual_tls_authentication):
        """Sets the mutual_tls_authentication of this DomainName.


        :param mutual_tls_authentication: The mutual_tls_authentication of this DomainName.
        :type mutual_tls_authentication: DomainNameMutualTlsAuthentication
        """

        self._mutual_tls_authentication = mutual_tls_authentication

    @property
    def ownership_verification_certificate_arn(self):
        """Gets the ownership_verification_certificate_arn of this DomainName.


        :return: The ownership_verification_certificate_arn of this DomainName.
        :rtype: str
        """
        return self._ownership_verification_certificate_arn

    @ownership_verification_certificate_arn.setter
    def ownership_verification_certificate_arn(self, ownership_verification_certificate_arn):
        """Sets the ownership_verification_certificate_arn of this DomainName.


        :param ownership_verification_certificate_arn: The ownership_verification_certificate_arn of this DomainName.
        :type ownership_verification_certificate_arn: str
        """

        self._ownership_verification_certificate_arn = ownership_verification_certificate_arn
