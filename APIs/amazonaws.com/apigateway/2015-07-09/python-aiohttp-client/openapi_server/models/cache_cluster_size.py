# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CacheClusterSize(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ENUM_0_PERIOD_5 = '0.5'
    ENUM_1_PERIOD_6 = '1.6'
    ENUM_6_PERIOD_1 = '6.1'
    ENUM_13_PERIOD_5 = '13.5'
    ENUM_28_PERIOD_4 = '28.4'
    ENUM_58_PERIOD_2 = '58.2'
    ENUM_118 = '118'
    ENUM_237 = '237'

    def __init__(self):
        """CacheClusterSize - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CacheClusterSize':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CacheClusterSize of this CacheClusterSize.
        """
        return util.deserialize_model(dikt, cls)
