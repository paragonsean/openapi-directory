# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClientCertificate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_certificate_id: str=None, description: str=None, pem_encoded_certificate: str=None, created_date: datetime=None, expiration_date: datetime=None, tags: Dict=None):
        """ClientCertificate - a model defined in OpenAPI

        :param client_certificate_id: The client_certificate_id of this ClientCertificate.
        :param description: The description of this ClientCertificate.
        :param pem_encoded_certificate: The pem_encoded_certificate of this ClientCertificate.
        :param created_date: The created_date of this ClientCertificate.
        :param expiration_date: The expiration_date of this ClientCertificate.
        :param tags: The tags of this ClientCertificate.
        """
        self.openapi_types = {
            'client_certificate_id': str,
            'description': str,
            'pem_encoded_certificate': str,
            'created_date': datetime,
            'expiration_date': datetime,
            'tags': Dict
        }

        self.attribute_map = {
            'client_certificate_id': 'clientCertificateId',
            'description': 'description',
            'pem_encoded_certificate': 'pemEncodedCertificate',
            'created_date': 'createdDate',
            'expiration_date': 'expirationDate',
            'tags': 'tags'
        }

        self._client_certificate_id = client_certificate_id
        self._description = description
        self._pem_encoded_certificate = pem_encoded_certificate
        self._created_date = created_date
        self._expiration_date = expiration_date
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClientCertificate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClientCertificate of this ClientCertificate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_certificate_id(self):
        """Gets the client_certificate_id of this ClientCertificate.


        :return: The client_certificate_id of this ClientCertificate.
        :rtype: str
        """
        return self._client_certificate_id

    @client_certificate_id.setter
    def client_certificate_id(self, client_certificate_id):
        """Sets the client_certificate_id of this ClientCertificate.


        :param client_certificate_id: The client_certificate_id of this ClientCertificate.
        :type client_certificate_id: str
        """

        self._client_certificate_id = client_certificate_id

    @property
    def description(self):
        """Gets the description of this ClientCertificate.


        :return: The description of this ClientCertificate.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ClientCertificate.


        :param description: The description of this ClientCertificate.
        :type description: str
        """

        self._description = description

    @property
    def pem_encoded_certificate(self):
        """Gets the pem_encoded_certificate of this ClientCertificate.


        :return: The pem_encoded_certificate of this ClientCertificate.
        :rtype: str
        """
        return self._pem_encoded_certificate

    @pem_encoded_certificate.setter
    def pem_encoded_certificate(self, pem_encoded_certificate):
        """Sets the pem_encoded_certificate of this ClientCertificate.


        :param pem_encoded_certificate: The pem_encoded_certificate of this ClientCertificate.
        :type pem_encoded_certificate: str
        """

        self._pem_encoded_certificate = pem_encoded_certificate

    @property
    def created_date(self):
        """Gets the created_date of this ClientCertificate.


        :return: The created_date of this ClientCertificate.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this ClientCertificate.


        :param created_date: The created_date of this ClientCertificate.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def expiration_date(self):
        """Gets the expiration_date of this ClientCertificate.


        :return: The expiration_date of this ClientCertificate.
        :rtype: datetime
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this ClientCertificate.


        :param expiration_date: The expiration_date of this ClientCertificate.
        :type expiration_date: datetime
        """

        self._expiration_date = expiration_date

    @property
    def tags(self):
        """Gets the tags of this ClientCertificate.


        :return: The tags of this ClientCertificate.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ClientCertificate.


        :param tags: The tags of this ClientCertificate.
        :type tags: Dict
        """

        self._tags = tags
