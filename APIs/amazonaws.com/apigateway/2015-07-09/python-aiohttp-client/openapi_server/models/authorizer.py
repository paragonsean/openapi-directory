# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authorizer_type import AuthorizerType
from openapi_server import util


class Authorizer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, type: AuthorizerType=None, provider_arns: List=None, auth_type: str=None, authorizer_uri: str=None, authorizer_credentials: str=None, identity_source: str=None, identity_validation_expression: str=None, authorizer_result_ttl_in_seconds: int=None):
        """Authorizer - a model defined in OpenAPI

        :param id: The id of this Authorizer.
        :param name: The name of this Authorizer.
        :param type: The type of this Authorizer.
        :param provider_arns: The provider_arns of this Authorizer.
        :param auth_type: The auth_type of this Authorizer.
        :param authorizer_uri: The authorizer_uri of this Authorizer.
        :param authorizer_credentials: The authorizer_credentials of this Authorizer.
        :param identity_source: The identity_source of this Authorizer.
        :param identity_validation_expression: The identity_validation_expression of this Authorizer.
        :param authorizer_result_ttl_in_seconds: The authorizer_result_ttl_in_seconds of this Authorizer.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'type': AuthorizerType,
            'provider_arns': List,
            'auth_type': str,
            'authorizer_uri': str,
            'authorizer_credentials': str,
            'identity_source': str,
            'identity_validation_expression': str,
            'authorizer_result_ttl_in_seconds': int
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'type': 'type',
            'provider_arns': 'providerARNs',
            'auth_type': 'authType',
            'authorizer_uri': 'authorizerUri',
            'authorizer_credentials': 'authorizerCredentials',
            'identity_source': 'identitySource',
            'identity_validation_expression': 'identityValidationExpression',
            'authorizer_result_ttl_in_seconds': 'authorizerResultTtlInSeconds'
        }

        self._id = id
        self._name = name
        self._type = type
        self._provider_arns = provider_arns
        self._auth_type = auth_type
        self._authorizer_uri = authorizer_uri
        self._authorizer_credentials = authorizer_credentials
        self._identity_source = identity_source
        self._identity_validation_expression = identity_validation_expression
        self._authorizer_result_ttl_in_seconds = authorizer_result_ttl_in_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Authorizer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Authorizer of this Authorizer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Authorizer.


        :return: The id of this Authorizer.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Authorizer.


        :param id: The id of this Authorizer.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Authorizer.


        :return: The name of this Authorizer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Authorizer.


        :param name: The name of this Authorizer.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this Authorizer.


        :return: The type of this Authorizer.
        :rtype: AuthorizerType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Authorizer.


        :param type: The type of this Authorizer.
        :type type: AuthorizerType
        """

        self._type = type

    @property
    def provider_arns(self):
        """Gets the provider_arns of this Authorizer.


        :return: The provider_arns of this Authorizer.
        :rtype: List
        """
        return self._provider_arns

    @provider_arns.setter
    def provider_arns(self, provider_arns):
        """Sets the provider_arns of this Authorizer.


        :param provider_arns: The provider_arns of this Authorizer.
        :type provider_arns: List
        """

        self._provider_arns = provider_arns

    @property
    def auth_type(self):
        """Gets the auth_type of this Authorizer.


        :return: The auth_type of this Authorizer.
        :rtype: str
        """
        return self._auth_type

    @auth_type.setter
    def auth_type(self, auth_type):
        """Sets the auth_type of this Authorizer.


        :param auth_type: The auth_type of this Authorizer.
        :type auth_type: str
        """

        self._auth_type = auth_type

    @property
    def authorizer_uri(self):
        """Gets the authorizer_uri of this Authorizer.


        :return: The authorizer_uri of this Authorizer.
        :rtype: str
        """
        return self._authorizer_uri

    @authorizer_uri.setter
    def authorizer_uri(self, authorizer_uri):
        """Sets the authorizer_uri of this Authorizer.


        :param authorizer_uri: The authorizer_uri of this Authorizer.
        :type authorizer_uri: str
        """

        self._authorizer_uri = authorizer_uri

    @property
    def authorizer_credentials(self):
        """Gets the authorizer_credentials of this Authorizer.


        :return: The authorizer_credentials of this Authorizer.
        :rtype: str
        """
        return self._authorizer_credentials

    @authorizer_credentials.setter
    def authorizer_credentials(self, authorizer_credentials):
        """Sets the authorizer_credentials of this Authorizer.


        :param authorizer_credentials: The authorizer_credentials of this Authorizer.
        :type authorizer_credentials: str
        """

        self._authorizer_credentials = authorizer_credentials

    @property
    def identity_source(self):
        """Gets the identity_source of this Authorizer.


        :return: The identity_source of this Authorizer.
        :rtype: str
        """
        return self._identity_source

    @identity_source.setter
    def identity_source(self, identity_source):
        """Sets the identity_source of this Authorizer.


        :param identity_source: The identity_source of this Authorizer.
        :type identity_source: str
        """

        self._identity_source = identity_source

    @property
    def identity_validation_expression(self):
        """Gets the identity_validation_expression of this Authorizer.


        :return: The identity_validation_expression of this Authorizer.
        :rtype: str
        """
        return self._identity_validation_expression

    @identity_validation_expression.setter
    def identity_validation_expression(self, identity_validation_expression):
        """Sets the identity_validation_expression of this Authorizer.


        :param identity_validation_expression: The identity_validation_expression of this Authorizer.
        :type identity_validation_expression: str
        """

        self._identity_validation_expression = identity_validation_expression

    @property
    def authorizer_result_ttl_in_seconds(self):
        """Gets the authorizer_result_ttl_in_seconds of this Authorizer.


        :return: The authorizer_result_ttl_in_seconds of this Authorizer.
        :rtype: int
        """
        return self._authorizer_result_ttl_in_seconds

    @authorizer_result_ttl_in_seconds.setter
    def authorizer_result_ttl_in_seconds(self, authorizer_result_ttl_in_seconds):
        """Sets the authorizer_result_ttl_in_seconds of this Authorizer.


        :param authorizer_result_ttl_in_seconds: The authorizer_result_ttl_in_seconds of this Authorizer.
        :type authorizer_result_ttl_in_seconds: int
        """

        self._authorizer_result_ttl_in_seconds = authorizer_result_ttl_in_seconds
