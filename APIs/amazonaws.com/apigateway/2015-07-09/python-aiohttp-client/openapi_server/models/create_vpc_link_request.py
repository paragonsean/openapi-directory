# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateVpcLinkRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, target_arns: List[str]=None, tags: Dict[str, str]=None):
        """CreateVpcLinkRequest - a model defined in OpenAPI

        :param name: The name of this CreateVpcLinkRequest.
        :param description: The description of this CreateVpcLinkRequest.
        :param target_arns: The target_arns of this CreateVpcLinkRequest.
        :param tags: The tags of this CreateVpcLinkRequest.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'target_arns': List[str],
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            'target_arns': 'targetArns',
            'tags': 'tags'
        }

        self._name = name
        self._description = description
        self._target_arns = target_arns
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVpcLinkRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateVpcLink_request of this CreateVpcLinkRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateVpcLinkRequest.

        The name used to label and identify the VPC link.

        :return: The name of this CreateVpcLinkRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateVpcLinkRequest.

        The name used to label and identify the VPC link.

        :param name: The name of this CreateVpcLinkRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def description(self):
        """Gets the description of this CreateVpcLinkRequest.

        The description of the VPC link.

        :return: The description of this CreateVpcLinkRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateVpcLinkRequest.

        The description of the VPC link.

        :param description: The description of this CreateVpcLinkRequest.
        :type description: str
        """

        self._description = description

    @property
    def target_arns(self):
        """Gets the target_arns of this CreateVpcLinkRequest.

        The ARN of the network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the same AWS account of the API owner.

        :return: The target_arns of this CreateVpcLinkRequest.
        :rtype: List[str]
        """
        return self._target_arns

    @target_arns.setter
    def target_arns(self, target_arns):
        """Sets the target_arns of this CreateVpcLinkRequest.

        The ARN of the network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the same AWS account of the API owner.

        :param target_arns: The target_arns of this CreateVpcLinkRequest.
        :type target_arns: List[str]
        """
        if target_arns is None:
            raise ValueError("Invalid value for `target_arns`, must not be `None`")

        self._target_arns = target_arns

    @property
    def tags(self):
        """Gets the tags of this CreateVpcLinkRequest.

        The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.

        :return: The tags of this CreateVpcLinkRequest.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateVpcLinkRequest.

        The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.

        :param tags: The tags of this CreateVpcLinkRequest.
        :type tags: Dict[str, str]
        """

        self._tags = tags
