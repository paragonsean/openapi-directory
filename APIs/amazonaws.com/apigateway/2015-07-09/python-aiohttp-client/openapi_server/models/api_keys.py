# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiKeys(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, warnings: List=None, position: str=None, items: List=None):
        """ApiKeys - a model defined in OpenAPI

        :param warnings: The warnings of this ApiKeys.
        :param position: The position of this ApiKeys.
        :param items: The items of this ApiKeys.
        """
        self.openapi_types = {
            'warnings': List,
            'position': str,
            'items': List
        }

        self.attribute_map = {
            'warnings': 'warnings',
            'position': 'position',
            'items': 'items'
        }

        self._warnings = warnings
        self._position = position
        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiKeys':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiKeys of this ApiKeys.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def warnings(self):
        """Gets the warnings of this ApiKeys.


        :return: The warnings of this ApiKeys.
        :rtype: List
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this ApiKeys.


        :param warnings: The warnings of this ApiKeys.
        :type warnings: List
        """

        self._warnings = warnings

    @property
    def position(self):
        """Gets the position of this ApiKeys.


        :return: The position of this ApiKeys.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this ApiKeys.


        :param position: The position of this ApiKeys.
        :type position: str
        """

        self._position = position

    @property
    def items(self):
        """Gets the items of this ApiKeys.


        :return: The items of this ApiKeys.
        :rtype: List
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this ApiKeys.


        :param items: The items of this ApiKeys.
        :type items: List
        """

        self._items = items
