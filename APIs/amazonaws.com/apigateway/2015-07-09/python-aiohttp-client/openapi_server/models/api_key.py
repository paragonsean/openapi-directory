# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, value: str=None, name: str=None, customer_id: str=None, description: str=None, enabled: bool=None, created_date: datetime=None, last_updated_date: datetime=None, stage_keys: List=None, tags: Dict=None):
        """ApiKey - a model defined in OpenAPI

        :param id: The id of this ApiKey.
        :param value: The value of this ApiKey.
        :param name: The name of this ApiKey.
        :param customer_id: The customer_id of this ApiKey.
        :param description: The description of this ApiKey.
        :param enabled: The enabled of this ApiKey.
        :param created_date: The created_date of this ApiKey.
        :param last_updated_date: The last_updated_date of this ApiKey.
        :param stage_keys: The stage_keys of this ApiKey.
        :param tags: The tags of this ApiKey.
        """
        self.openapi_types = {
            'id': str,
            'value': str,
            'name': str,
            'customer_id': str,
            'description': str,
            'enabled': bool,
            'created_date': datetime,
            'last_updated_date': datetime,
            'stage_keys': List,
            'tags': Dict
        }

        self.attribute_map = {
            'id': 'id',
            'value': 'value',
            'name': 'name',
            'customer_id': 'customerId',
            'description': 'description',
            'enabled': 'enabled',
            'created_date': 'createdDate',
            'last_updated_date': 'lastUpdatedDate',
            'stage_keys': 'stageKeys',
            'tags': 'tags'
        }

        self._id = id
        self._value = value
        self._name = name
        self._customer_id = customer_id
        self._description = description
        self._enabled = enabled
        self._created_date = created_date
        self._last_updated_date = last_updated_date
        self._stage_keys = stage_keys
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiKey of this ApiKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ApiKey.


        :return: The id of this ApiKey.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ApiKey.


        :param id: The id of this ApiKey.
        :type id: str
        """

        self._id = id

    @property
    def value(self):
        """Gets the value of this ApiKey.


        :return: The value of this ApiKey.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ApiKey.


        :param value: The value of this ApiKey.
        :type value: str
        """

        self._value = value

    @property
    def name(self):
        """Gets the name of this ApiKey.


        :return: The name of this ApiKey.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApiKey.


        :param name: The name of this ApiKey.
        :type name: str
        """

        self._name = name

    @property
    def customer_id(self):
        """Gets the customer_id of this ApiKey.


        :return: The customer_id of this ApiKey.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this ApiKey.


        :param customer_id: The customer_id of this ApiKey.
        :type customer_id: str
        """

        self._customer_id = customer_id

    @property
    def description(self):
        """Gets the description of this ApiKey.


        :return: The description of this ApiKey.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApiKey.


        :param description: The description of this ApiKey.
        :type description: str
        """

        self._description = description

    @property
    def enabled(self):
        """Gets the enabled of this ApiKey.


        :return: The enabled of this ApiKey.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this ApiKey.


        :param enabled: The enabled of this ApiKey.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def created_date(self):
        """Gets the created_date of this ApiKey.


        :return: The created_date of this ApiKey.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this ApiKey.


        :param created_date: The created_date of this ApiKey.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def last_updated_date(self):
        """Gets the last_updated_date of this ApiKey.


        :return: The last_updated_date of this ApiKey.
        :rtype: datetime
        """
        return self._last_updated_date

    @last_updated_date.setter
    def last_updated_date(self, last_updated_date):
        """Sets the last_updated_date of this ApiKey.


        :param last_updated_date: The last_updated_date of this ApiKey.
        :type last_updated_date: datetime
        """

        self._last_updated_date = last_updated_date

    @property
    def stage_keys(self):
        """Gets the stage_keys of this ApiKey.


        :return: The stage_keys of this ApiKey.
        :rtype: List
        """
        return self._stage_keys

    @stage_keys.setter
    def stage_keys(self, stage_keys):
        """Sets the stage_keys of this ApiKey.


        :param stage_keys: The stage_keys of this ApiKey.
        :type stage_keys: List
        """

        self._stage_keys = stage_keys

    @property
    def tags(self):
        """Gets the tags of this ApiKey.


        :return: The tags of this ApiKey.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ApiKey.


        :param tags: The tags of this ApiKey.
        :type tags: Dict
        """

        self._tags = tags
