/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRestApis.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRestApis::OAIRestApis(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRestApis::OAIRestApis() {
    this->initializeModel();
}

OAIRestApis::~OAIRestApis() {}

void OAIRestApis::initializeModel() {

    m_position_isSet = false;
    m_position_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;
}

void OAIRestApis::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRestApis::fromJsonObject(QJsonObject json) {

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;
}

QString OAIRestApis::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRestApis::asJsonObject() const {
    QJsonObject obj;
    if (m_position_isSet) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_items.isSet()) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    return obj;
}

QString OAIRestApis::getPosition() const {
    return m_position;
}
void OAIRestApis::setPosition(const QString &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIRestApis::is_position_Set() const{
    return m_position_isSet;
}

bool OAIRestApis::is_position_Valid() const{
    return m_position_isValid;
}

QList OAIRestApis::getItems() const {
    return m_items;
}
void OAIRestApis::setItems(const QList &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIRestApis::is_items_Set() const{
    return m_items_isSet;
}

bool OAIRestApis::is_items_Valid() const{
    return m_items_isValid;
}

bool OAIRestApis::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRestApis::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
