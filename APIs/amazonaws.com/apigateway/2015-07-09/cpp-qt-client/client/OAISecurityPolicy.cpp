/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityPolicy::OAISecurityPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityPolicy::OAISecurityPolicy() {
    this->initializeModel();
}

OAISecurityPolicy::~OAISecurityPolicy() {}

void OAISecurityPolicy::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISecurityPolicy::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISecurityPolicy::fromJson(QString jsonString) {
    
    if ( jsonString.compare("TLS_1_0", Qt::CaseInsensitive) == 0) {
        m_value = eOAISecurityPolicy::_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TLS_1_2", Qt::CaseInsensitive) == 0) {
        m_value = eOAISecurityPolicy::_2;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISecurityPolicy::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISecurityPolicy::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISecurityPolicy::_0:
            val = "TLS_1_0";
            break;
        case eOAISecurityPolicy::_2:
            val = "TLS_1_2";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISecurityPolicy::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISecurityPolicy::eOAISecurityPolicy OAISecurityPolicy::getValue() const {
    return m_value;
}

void OAISecurityPolicy::setValue(const OAISecurityPolicy::eOAISecurityPolicy& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISecurityPolicy::isSet() const {
    
    return m_value_isSet;
}

bool OAISecurityPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
