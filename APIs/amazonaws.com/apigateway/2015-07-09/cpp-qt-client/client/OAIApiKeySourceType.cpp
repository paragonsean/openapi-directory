/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiKeySourceType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiKeySourceType::OAIApiKeySourceType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiKeySourceType::OAIApiKeySourceType() {
    this->initializeModel();
}

OAIApiKeySourceType::~OAIApiKeySourceType() {}

void OAIApiKeySourceType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIApiKeySourceType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIApiKeySourceType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("HEADER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApiKeySourceType::HEADER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AUTHORIZER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApiKeySourceType::AUTHORIZER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIApiKeySourceType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIApiKeySourceType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIApiKeySourceType::HEADER:
            val = "HEADER";
            break;
        case eOAIApiKeySourceType::AUTHORIZER:
            val = "AUTHORIZER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIApiKeySourceType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIApiKeySourceType::eOAIApiKeySourceType OAIApiKeySourceType::getValue() const {
    return m_value;
}

void OAIApiKeySourceType::setValue(const OAIApiKeySourceType::eOAIApiKeySourceType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIApiKeySourceType::isSet() const {
    
    return m_value_isSet;
}

bool OAIApiKeySourceType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
