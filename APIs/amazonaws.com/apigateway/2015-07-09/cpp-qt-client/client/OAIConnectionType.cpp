/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectionType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectionType::OAIConnectionType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectionType::OAIConnectionType() {
    this->initializeModel();
}

OAIConnectionType::~OAIConnectionType() {}

void OAIConnectionType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIConnectionType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIConnectionType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("INTERNET", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConnectionType::INTERNET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VPC_LINK", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConnectionType::VPC_LINK;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIConnectionType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIConnectionType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIConnectionType::INTERNET:
            val = "INTERNET";
            break;
        case eOAIConnectionType::VPC_LINK:
            val = "VPC_LINK";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIConnectionType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIConnectionType::eOAIConnectionType OAIConnectionType::getValue() const {
    return m_value;
}

void OAIConnectionType::setValue(const OAIConnectionType::eOAIConnectionType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIConnectionType::isSet() const {
    
    return m_value_isSet;
}

bool OAIConnectionType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
