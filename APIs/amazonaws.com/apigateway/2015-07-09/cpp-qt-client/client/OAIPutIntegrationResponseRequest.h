/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutIntegrationResponseRequest.h
 *
 * Represents a put integration response request.
 */

#ifndef OAIPutIntegrationResponseRequest_H
#define OAIPutIntegrationResponseRequest_H

#include <QJsonObject>

#include "OAIContentHandlingStrategy.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPutIntegrationResponseRequest : public OAIObject {
public:
    OAIPutIntegrationResponseRequest();
    OAIPutIntegrationResponseRequest(QString json);
    ~OAIPutIntegrationResponseRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSelectionPattern() const;
    void setSelectionPattern(const QString &selection_pattern);
    bool is_selection_pattern_Set() const;
    bool is_selection_pattern_Valid() const;

    QMap getResponseParameters() const;
    void setResponseParameters(const QMap &response_parameters);
    bool is_response_parameters_Set() const;
    bool is_response_parameters_Valid() const;

    QMap getResponseTemplates() const;
    void setResponseTemplates(const QMap &response_templates);
    bool is_response_templates_Set() const;
    bool is_response_templates_Valid() const;

    OAIContentHandlingStrategy getContentHandling() const;
    void setContentHandling(const OAIContentHandlingStrategy &content_handling);
    bool is_content_handling_Set() const;
    bool is_content_handling_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_selection_pattern;
    bool m_selection_pattern_isSet;
    bool m_selection_pattern_isValid;

    QMap m_response_parameters;
    bool m_response_parameters_isSet;
    bool m_response_parameters_isValid;

    QMap m_response_templates;
    bool m_response_templates_isSet;
    bool m_response_templates_isValid;

    OAIContentHandlingStrategy m_content_handling;
    bool m_content_handling_isSet;
    bool m_content_handling_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutIntegrationResponseRequest)

#endif // OAIPutIntegrationResponseRequest_H
