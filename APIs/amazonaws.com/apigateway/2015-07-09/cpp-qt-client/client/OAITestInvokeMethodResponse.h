/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestInvokeMethodResponse.h
 *
 * Represents the response of the test invoke request in the HTTP method.
 */

#ifndef OAITestInvokeMethodResponse_H
#define OAITestInvokeMethodResponse_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITestInvokeMethodResponse : public OAIObject {
public:
    OAITestInvokeMethodResponse();
    OAITestInvokeMethodResponse(QString json);
    ~OAITestInvokeMethodResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QMap getHeaders() const;
    void setHeaders(const QMap &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QMap getMultiValueHeaders() const;
    void setMultiValueHeaders(const QMap &multi_value_headers);
    bool is_multi_value_headers_Set() const;
    bool is_multi_value_headers_Valid() const;

    QString getLog() const;
    void setLog(const QString &log);
    bool is_log_Set() const;
    bool is_log_Valid() const;

    qint32 getLatency() const;
    void setLatency(const qint32 &latency);
    bool is_latency_Set() const;
    bool is_latency_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QMap m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QMap m_multi_value_headers;
    bool m_multi_value_headers_isSet;
    bool m_multi_value_headers_isValid;

    QString m_log;
    bool m_log_isSet;
    bool m_log_isValid;

    qint32 m_latency;
    bool m_latency_isSet;
    bool m_latency_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestInvokeMethodResponse)

#endif // OAITestInvokeMethodResponse_H
