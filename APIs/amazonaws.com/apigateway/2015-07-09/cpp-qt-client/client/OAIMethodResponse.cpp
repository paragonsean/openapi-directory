/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMethodResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMethodResponse::OAIMethodResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMethodResponse::OAIMethodResponse() {
    this->initializeModel();
}

OAIMethodResponse::~OAIMethodResponse() {}

void OAIMethodResponse::initializeModel() {

    m_status_code_isSet = false;
    m_status_code_isValid = false;

    m_response_parameters_isSet = false;
    m_response_parameters_isValid = false;

    m_response_models_isSet = false;
    m_response_models_isValid = false;
}

void OAIMethodResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMethodResponse::fromJsonObject(QJsonObject json) {

    m_status_code_isValid = ::OpenAPI::fromJsonValue(m_status_code, json[QString("statusCode")]);
    m_status_code_isSet = !json[QString("statusCode")].isNull() && m_status_code_isValid;

    m_response_parameters_isValid = ::OpenAPI::fromJsonValue(m_response_parameters, json[QString("responseParameters")]);
    m_response_parameters_isSet = !json[QString("responseParameters")].isNull() && m_response_parameters_isValid;

    m_response_models_isValid = ::OpenAPI::fromJsonValue(m_response_models, json[QString("responseModels")]);
    m_response_models_isSet = !json[QString("responseModels")].isNull() && m_response_models_isValid;
}

QString OAIMethodResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMethodResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_status_code_isSet) {
        obj.insert(QString("statusCode"), ::OpenAPI::toJsonValue(m_status_code));
    }
    if (m_response_parameters.isSet()) {
        obj.insert(QString("responseParameters"), ::OpenAPI::toJsonValue(m_response_parameters));
    }
    if (m_response_models.isSet()) {
        obj.insert(QString("responseModels"), ::OpenAPI::toJsonValue(m_response_models));
    }
    return obj;
}

QString OAIMethodResponse::getStatusCode() const {
    return m_status_code;
}
void OAIMethodResponse::setStatusCode(const QString &status_code) {
    m_status_code = status_code;
    m_status_code_isSet = true;
}

bool OAIMethodResponse::is_status_code_Set() const{
    return m_status_code_isSet;
}

bool OAIMethodResponse::is_status_code_Valid() const{
    return m_status_code_isValid;
}

QMap OAIMethodResponse::getResponseParameters() const {
    return m_response_parameters;
}
void OAIMethodResponse::setResponseParameters(const QMap &response_parameters) {
    m_response_parameters = response_parameters;
    m_response_parameters_isSet = true;
}

bool OAIMethodResponse::is_response_parameters_Set() const{
    return m_response_parameters_isSet;
}

bool OAIMethodResponse::is_response_parameters_Valid() const{
    return m_response_parameters_isValid;
}

QMap OAIMethodResponse::getResponseModels() const {
    return m_response_models;
}
void OAIMethodResponse::setResponseModels(const QMap &response_models) {
    m_response_models = response_models;
    m_response_models_isSet = true;
}

bool OAIMethodResponse::is_response_models_Set() const{
    return m_response_models_isSet;
}

bool OAIMethodResponse::is_response_models_Valid() const{
    return m_response_models_isValid;
}

bool OAIMethodResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_models.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMethodResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
