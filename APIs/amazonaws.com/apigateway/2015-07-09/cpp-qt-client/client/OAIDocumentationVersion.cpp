/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentationVersion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentationVersion::OAIDocumentationVersion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentationVersion::OAIDocumentationVersion() {
    this->initializeModel();
}

OAIDocumentationVersion::~OAIDocumentationVersion() {}

void OAIDocumentationVersion::initializeModel() {

    m_version_isSet = false;
    m_version_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;
}

void OAIDocumentationVersion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentationVersion::fromJsonObject(QJsonObject json) {

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("createdDate")]);
    m_created_date_isSet = !json[QString("createdDate")].isNull() && m_created_date_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;
}

QString OAIDocumentationVersion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentationVersion::asJsonObject() const {
    QJsonObject obj;
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("createdDate"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    return obj;
}

QString OAIDocumentationVersion::getVersion() const {
    return m_version;
}
void OAIDocumentationVersion::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIDocumentationVersion::is_version_Set() const{
    return m_version_isSet;
}

bool OAIDocumentationVersion::is_version_Valid() const{
    return m_version_isValid;
}

QDateTime OAIDocumentationVersion::getCreatedDate() const {
    return m_created_date;
}
void OAIDocumentationVersion::setCreatedDate(const QDateTime &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIDocumentationVersion::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIDocumentationVersion::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAIDocumentationVersion::getDescription() const {
    return m_description;
}
void OAIDocumentationVersion::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDocumentationVersion::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDocumentationVersion::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIDocumentationVersion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentationVersion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
