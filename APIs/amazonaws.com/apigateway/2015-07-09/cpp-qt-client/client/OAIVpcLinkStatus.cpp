/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVpcLinkStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVpcLinkStatus::OAIVpcLinkStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVpcLinkStatus::OAIVpcLinkStatus() {
    this->initializeModel();
}

OAIVpcLinkStatus::~OAIVpcLinkStatus() {}

void OAIVpcLinkStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIVpcLinkStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIVpcLinkStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AVAILABLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVpcLinkStatus::AVAILABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PENDING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVpcLinkStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVpcLinkStatus::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVpcLinkStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIVpcLinkStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIVpcLinkStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIVpcLinkStatus::AVAILABLE:
            val = "AVAILABLE";
            break;
        case eOAIVpcLinkStatus::PENDING:
            val = "PENDING";
            break;
        case eOAIVpcLinkStatus::DELETING:
            val = "DELETING";
            break;
        case eOAIVpcLinkStatus::FAILED:
            val = "FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIVpcLinkStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIVpcLinkStatus::eOAIVpcLinkStatus OAIVpcLinkStatus::getValue() const {
    return m_value;
}

void OAIVpcLinkStatus::setValue(const OAIVpcLinkStatus::eOAIVpcLinkStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIVpcLinkStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIVpcLinkStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
