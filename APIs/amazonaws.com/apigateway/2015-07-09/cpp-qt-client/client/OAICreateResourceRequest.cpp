/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateResourceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateResourceRequest::OAICreateResourceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateResourceRequest::OAICreateResourceRequest() {
    this->initializeModel();
}

OAICreateResourceRequest::~OAICreateResourceRequest() {}

void OAICreateResourceRequest::initializeModel() {

    m_path_part_isSet = false;
    m_path_part_isValid = false;
}

void OAICreateResourceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateResourceRequest::fromJsonObject(QJsonObject json) {

    m_path_part_isValid = ::OpenAPI::fromJsonValue(m_path_part, json[QString("pathPart")]);
    m_path_part_isSet = !json[QString("pathPart")].isNull() && m_path_part_isValid;
}

QString OAICreateResourceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateResourceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_path_part_isSet) {
        obj.insert(QString("pathPart"), ::OpenAPI::toJsonValue(m_path_part));
    }
    return obj;
}

QString OAICreateResourceRequest::getPathPart() const {
    return m_path_part;
}
void OAICreateResourceRequest::setPathPart(const QString &path_part) {
    m_path_part = path_part;
    m_path_part_isSet = true;
}

bool OAICreateResourceRequest::is_path_part_Set() const{
    return m_path_part_isSet;
}

bool OAICreateResourceRequest::is_path_part_Valid() const{
    return m_path_part_isValid;
}

bool OAICreateResourceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_path_part_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateResourceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_path_part_isValid && true;
}

} // namespace OpenAPI
