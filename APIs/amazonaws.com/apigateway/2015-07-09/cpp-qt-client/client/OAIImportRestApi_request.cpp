/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImportRestApi_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImportRestApi_request::OAIImportRestApi_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImportRestApi_request::OAIImportRestApi_request() {
    this->initializeModel();
}

OAIImportRestApi_request::~OAIImportRestApi_request() {}

void OAIImportRestApi_request::initializeModel() {

    m_body_isSet = false;
    m_body_isValid = false;
}

void OAIImportRestApi_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIImportRestApi_request::fromJsonObject(QJsonObject json) {

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;
}

QString OAIImportRestApi_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIImportRestApi_request::asJsonObject() const {
    QJsonObject obj;
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(m_body));
    }
    return obj;
}

QString OAIImportRestApi_request::getBody() const {
    return m_body;
}
void OAIImportRestApi_request::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIImportRestApi_request::is_body_Set() const{
    return m_body_isSet;
}

bool OAIImportRestApi_request::is_body_Valid() const{
    return m_body_isValid;
}

bool OAIImportRestApi_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIImportRestApi_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_body_isValid && true;
}

} // namespace OpenAPI
