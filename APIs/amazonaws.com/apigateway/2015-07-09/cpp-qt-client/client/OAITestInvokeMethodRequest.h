/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestInvokeMethodRequest.h
 *
 * Make a request to simulate the invocation of a Method.
 */

#ifndef OAITestInvokeMethodRequest_H
#define OAITestInvokeMethodRequest_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITestInvokeMethodRequest : public OAIObject {
public:
    OAITestInvokeMethodRequest();
    OAITestInvokeMethodRequest(QString json);
    ~OAITestInvokeMethodRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPathWithQueryString() const;
    void setPathWithQueryString(const QString &path_with_query_string);
    bool is_path_with_query_string_Set() const;
    bool is_path_with_query_string_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QMap getHeaders() const;
    void setHeaders(const QMap &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QMap getMultiValueHeaders() const;
    void setMultiValueHeaders(const QMap &multi_value_headers);
    bool is_multi_value_headers_Set() const;
    bool is_multi_value_headers_Valid() const;

    QString getClientCertificateId() const;
    void setClientCertificateId(const QString &client_certificate_id);
    bool is_client_certificate_id_Set() const;
    bool is_client_certificate_id_Valid() const;

    QMap getStageVariables() const;
    void setStageVariables(const QMap &stage_variables);
    bool is_stage_variables_Set() const;
    bool is_stage_variables_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_path_with_query_string;
    bool m_path_with_query_string_isSet;
    bool m_path_with_query_string_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QMap m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QMap m_multi_value_headers;
    bool m_multi_value_headers_isSet;
    bool m_multi_value_headers_isValid;

    QString m_client_certificate_id;
    bool m_client_certificate_id_isSet;
    bool m_client_certificate_id_isValid;

    QMap m_stage_variables;
    bool m_stage_variables_isSet;
    bool m_stage_variables_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestInvokeMethodRequest)

#endif // OAITestInvokeMethodRequest_H
