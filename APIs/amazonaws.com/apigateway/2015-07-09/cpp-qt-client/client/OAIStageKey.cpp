/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStageKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStageKey::OAIStageKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStageKey::OAIStageKey() {
    this->initializeModel();
}

OAIStageKey::~OAIStageKey() {}

void OAIStageKey::initializeModel() {

    m_rest_api_id_isSet = false;
    m_rest_api_id_isValid = false;

    m_stage_name_isSet = false;
    m_stage_name_isValid = false;
}

void OAIStageKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStageKey::fromJsonObject(QJsonObject json) {

    m_rest_api_id_isValid = ::OpenAPI::fromJsonValue(m_rest_api_id, json[QString("restApiId")]);
    m_rest_api_id_isSet = !json[QString("restApiId")].isNull() && m_rest_api_id_isValid;

    m_stage_name_isValid = ::OpenAPI::fromJsonValue(m_stage_name, json[QString("stageName")]);
    m_stage_name_isSet = !json[QString("stageName")].isNull() && m_stage_name_isValid;
}

QString OAIStageKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStageKey::asJsonObject() const {
    QJsonObject obj;
    if (m_rest_api_id_isSet) {
        obj.insert(QString("restApiId"), ::OpenAPI::toJsonValue(m_rest_api_id));
    }
    if (m_stage_name_isSet) {
        obj.insert(QString("stageName"), ::OpenAPI::toJsonValue(m_stage_name));
    }
    return obj;
}

QString OAIStageKey::getRestApiId() const {
    return m_rest_api_id;
}
void OAIStageKey::setRestApiId(const QString &rest_api_id) {
    m_rest_api_id = rest_api_id;
    m_rest_api_id_isSet = true;
}

bool OAIStageKey::is_rest_api_id_Set() const{
    return m_rest_api_id_isSet;
}

bool OAIStageKey::is_rest_api_id_Valid() const{
    return m_rest_api_id_isValid;
}

QString OAIStageKey::getStageName() const {
    return m_stage_name;
}
void OAIStageKey::setStageName(const QString &stage_name) {
    m_stage_name = stage_name;
    m_stage_name_isSet = true;
}

bool OAIStageKey::is_stage_name_Set() const{
    return m_stage_name_isSet;
}

bool OAIStageKey::is_stage_name_Valid() const{
    return m_stage_name_isValid;
}

bool OAIStageKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rest_api_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStageKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
