/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMutualTlsAuthentication.h
 *
 * The mutual TLS authentication configuration for a custom domain name. If specified, API Gateway performs two-way authentication between the client and the server. Clients must present a trusted certificate to access your API.
 */

#ifndef OAIMutualTlsAuthentication_H
#define OAIMutualTlsAuthentication_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMutualTlsAuthentication : public OAIObject {
public:
    OAIMutualTlsAuthentication();
    OAIMutualTlsAuthentication(QString json);
    ~OAIMutualTlsAuthentication() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTruststoreUri() const;
    void setTruststoreUri(const QString &truststore_uri);
    bool is_truststore_uri_Set() const;
    bool is_truststore_uri_Valid() const;

    QString getTruststoreVersion() const;
    void setTruststoreVersion(const QString &truststore_version);
    bool is_truststore_version_Set() const;
    bool is_truststore_version_Valid() const;

    QList getTruststoreWarnings() const;
    void setTruststoreWarnings(const QList &truststore_warnings);
    bool is_truststore_warnings_Set() const;
    bool is_truststore_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_truststore_uri;
    bool m_truststore_uri_isSet;
    bool m_truststore_uri_isValid;

    QString m_truststore_version;
    bool m_truststore_version_isSet;
    bool m_truststore_version_isValid;

    QList m_truststore_warnings;
    bool m_truststore_warnings_isSet;
    bool m_truststore_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMutualTlsAuthentication)

#endif // OAIMutualTlsAuthentication_H
