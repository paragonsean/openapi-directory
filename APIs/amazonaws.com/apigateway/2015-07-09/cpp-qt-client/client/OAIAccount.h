/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccount.h
 *
 * Represents an AWS account that is associated with API Gateway.
 */

#ifndef OAIAccount_H
#define OAIAccount_H

#include <QJsonObject>

#include "OAIAccount_throttleSettings.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccount_throttleSettings;

class OAIAccount : public OAIObject {
public:
    OAIAccount();
    OAIAccount(QString json);
    ~OAIAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCloudwatchRoleArn() const;
    void setCloudwatchRoleArn(const QString &cloudwatch_role_arn);
    bool is_cloudwatch_role_arn_Set() const;
    bool is_cloudwatch_role_arn_Valid() const;

    OAIAccount_throttleSettings getThrottleSettings() const;
    void setThrottleSettings(const OAIAccount_throttleSettings &throttle_settings);
    bool is_throttle_settings_Set() const;
    bool is_throttle_settings_Valid() const;

    QList getFeatures() const;
    void setFeatures(const QList &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    QString getApiKeyVersion() const;
    void setApiKeyVersion(const QString &api_key_version);
    bool is_api_key_version_Set() const;
    bool is_api_key_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cloudwatch_role_arn;
    bool m_cloudwatch_role_arn_isSet;
    bool m_cloudwatch_role_arn_isValid;

    OAIAccount_throttleSettings m_throttle_settings;
    bool m_throttle_settings_isSet;
    bool m_throttle_settings_isValid;

    QList m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    QString m_api_key_version;
    bool m_api_key_version_isSet;
    bool m_api_key_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccount)

#endif // OAIAccount_H
