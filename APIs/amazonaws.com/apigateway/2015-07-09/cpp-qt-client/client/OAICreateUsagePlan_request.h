/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateUsagePlan_request.h
 *
 * 
 */

#ifndef OAICreateUsagePlan_request_H
#define OAICreateUsagePlan_request_H

#include <QJsonObject>

#include "OAIApiStage.h"
#include "OAICreateUsagePlan_request_quota.h"
#include "OAICreateUsagePlan_request_throttle.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApiStage;
class OAICreateUsagePlan_request_throttle;
class OAICreateUsagePlan_request_quota;

class OAICreateUsagePlan_request : public OAIObject {
public:
    OAICreateUsagePlan_request();
    OAICreateUsagePlan_request(QString json);
    ~OAICreateUsagePlan_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIApiStage> getApiStages() const;
    void setApiStages(const QList<OAIApiStage> &api_stages);
    bool is_api_stages_Set() const;
    bool is_api_stages_Valid() const;

    OAICreateUsagePlan_request_throttle getThrottle() const;
    void setThrottle(const OAICreateUsagePlan_request_throttle &throttle);
    bool is_throttle_Set() const;
    bool is_throttle_Valid() const;

    OAICreateUsagePlan_request_quota getQuota() const;
    void setQuota(const OAICreateUsagePlan_request_quota &quota);
    bool is_quota_Set() const;
    bool is_quota_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIApiStage> m_api_stages;
    bool m_api_stages_isSet;
    bool m_api_stages_isValid;

    OAICreateUsagePlan_request_throttle m_throttle;
    bool m_throttle_isSet;
    bool m_throttle_isValid;

    OAICreateUsagePlan_request_quota m_quota;
    bool m_quota_isSet;
    bool m_quota_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateUsagePlan_request)

#endif // OAICreateUsagePlan_request_H
