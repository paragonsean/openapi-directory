/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMethod.h
 *
 *  Represents a client-facing interface by which the client calls the API to access back-end resources. A Method resource is integrated with an Integration resource. Both consist of a request and one or more responses. The method request takes the client input that is passed to the back end through the integration request. A method response returns the output from the back end to the client through an integration response. A method request is embodied in a Method resource, whereas an integration request is embodied in an Integration resource. On the other hand, a method response is represented by a MethodResponse resource, whereas an integration response is represented by an IntegrationResponse resource. 
 */

#ifndef OAIMethod_H
#define OAIMethod_H

#include <QJsonObject>

#include "OAIMethod_methodIntegration.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMethod_methodIntegration;

class OAIMethod : public OAIObject {
public:
    OAIMethod();
    OAIMethod(QString json);
    ~OAIMethod() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHttpMethod() const;
    void setHttpMethod(const QString &http_method);
    bool is_http_method_Set() const;
    bool is_http_method_Valid() const;

    QString getAuthorizationType() const;
    void setAuthorizationType(const QString &authorization_type);
    bool is_authorization_type_Set() const;
    bool is_authorization_type_Valid() const;

    QString getAuthorizerId() const;
    void setAuthorizerId(const QString &authorizer_id);
    bool is_authorizer_id_Set() const;
    bool is_authorizer_id_Valid() const;

    bool getApiKeyRequired() const;
    void setApiKeyRequired(const bool &api_key_required);
    bool is_api_key_required_Set() const;
    bool is_api_key_required_Valid() const;

    QString getRequestValidatorId() const;
    void setRequestValidatorId(const QString &request_validator_id);
    bool is_request_validator_id_Set() const;
    bool is_request_validator_id_Valid() const;

    QString getOperationName() const;
    void setOperationName(const QString &operation_name);
    bool is_operation_name_Set() const;
    bool is_operation_name_Valid() const;

    QMap getRequestParameters() const;
    void setRequestParameters(const QMap &request_parameters);
    bool is_request_parameters_Set() const;
    bool is_request_parameters_Valid() const;

    QMap getRequestModels() const;
    void setRequestModels(const QMap &request_models);
    bool is_request_models_Set() const;
    bool is_request_models_Valid() const;

    QMap getMethodResponses() const;
    void setMethodResponses(const QMap &method_responses);
    bool is_method_responses_Set() const;
    bool is_method_responses_Valid() const;

    OAIMethod_methodIntegration getMethodIntegration() const;
    void setMethodIntegration(const OAIMethod_methodIntegration &method_integration);
    bool is_method_integration_Set() const;
    bool is_method_integration_Valid() const;

    QList getAuthorizationScopes() const;
    void setAuthorizationScopes(const QList &authorization_scopes);
    bool is_authorization_scopes_Set() const;
    bool is_authorization_scopes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_http_method;
    bool m_http_method_isSet;
    bool m_http_method_isValid;

    QString m_authorization_type;
    bool m_authorization_type_isSet;
    bool m_authorization_type_isValid;

    QString m_authorizer_id;
    bool m_authorizer_id_isSet;
    bool m_authorizer_id_isValid;

    bool m_api_key_required;
    bool m_api_key_required_isSet;
    bool m_api_key_required_isValid;

    QString m_request_validator_id;
    bool m_request_validator_id_isSet;
    bool m_request_validator_id_isValid;

    QString m_operation_name;
    bool m_operation_name_isSet;
    bool m_operation_name_isValid;

    QMap m_request_parameters;
    bool m_request_parameters_isSet;
    bool m_request_parameters_isValid;

    QMap m_request_models;
    bool m_request_models_isSet;
    bool m_request_models_isValid;

    QMap m_method_responses;
    bool m_method_responses_isSet;
    bool m_method_responses_isValid;

    OAIMethod_methodIntegration m_method_integration;
    bool m_method_integration_isSet;
    bool m_method_integration_isValid;

    QList m_authorization_scopes;
    bool m_authorization_scopes_isSet;
    bool m_authorization_scopes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMethod)

#endif // OAIMethod_H
