/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomainName.h
 *
 * Represents a custom domain name as a user-friendly host name of an API (RestApi).
 */

#ifndef OAIDomainName_H
#define OAIDomainName_H

#include <QJsonObject>

#include "OAIDomainNameStatus.h"
#include "OAIDomainName_endpointConfiguration.h"
#include "OAIDomainName_mutualTlsAuthentication.h"
#include "OAISecurityPolicy.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDomainName_endpointConfiguration;
class OAIDomainName_mutualTlsAuthentication;

class OAIDomainName : public OAIObject {
public:
    OAIDomainName();
    OAIDomainName(QString json);
    ~OAIDomainName() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    QString getCertificateName() const;
    void setCertificateName(const QString &certificate_name);
    bool is_certificate_name_Set() const;
    bool is_certificate_name_Valid() const;

    QString getCertificateArn() const;
    void setCertificateArn(const QString &certificate_arn);
    bool is_certificate_arn_Set() const;
    bool is_certificate_arn_Valid() const;

    QDateTime getCertificateUploadDate() const;
    void setCertificateUploadDate(const QDateTime &certificate_upload_date);
    bool is_certificate_upload_date_Set() const;
    bool is_certificate_upload_date_Valid() const;

    QString getRegionalDomainName() const;
    void setRegionalDomainName(const QString &regional_domain_name);
    bool is_regional_domain_name_Set() const;
    bool is_regional_domain_name_Valid() const;

    QString getRegionalHostedZoneId() const;
    void setRegionalHostedZoneId(const QString &regional_hosted_zone_id);
    bool is_regional_hosted_zone_id_Set() const;
    bool is_regional_hosted_zone_id_Valid() const;

    QString getRegionalCertificateName() const;
    void setRegionalCertificateName(const QString &regional_certificate_name);
    bool is_regional_certificate_name_Set() const;
    bool is_regional_certificate_name_Valid() const;

    QString getRegionalCertificateArn() const;
    void setRegionalCertificateArn(const QString &regional_certificate_arn);
    bool is_regional_certificate_arn_Set() const;
    bool is_regional_certificate_arn_Valid() const;

    QString getDistributionDomainName() const;
    void setDistributionDomainName(const QString &distribution_domain_name);
    bool is_distribution_domain_name_Set() const;
    bool is_distribution_domain_name_Valid() const;

    QString getDistributionHostedZoneId() const;
    void setDistributionHostedZoneId(const QString &distribution_hosted_zone_id);
    bool is_distribution_hosted_zone_id_Set() const;
    bool is_distribution_hosted_zone_id_Valid() const;

    OAIDomainName_endpointConfiguration getEndpointConfiguration() const;
    void setEndpointConfiguration(const OAIDomainName_endpointConfiguration &endpoint_configuration);
    bool is_endpoint_configuration_Set() const;
    bool is_endpoint_configuration_Valid() const;

    OAIDomainNameStatus getDomainNameStatus() const;
    void setDomainNameStatus(const OAIDomainNameStatus &domain_name_status);
    bool is_domain_name_status_Set() const;
    bool is_domain_name_status_Valid() const;

    QString getDomainNameStatusMessage() const;
    void setDomainNameStatusMessage(const QString &domain_name_status_message);
    bool is_domain_name_status_message_Set() const;
    bool is_domain_name_status_message_Valid() const;

    OAISecurityPolicy getSecurityPolicy() const;
    void setSecurityPolicy(const OAISecurityPolicy &security_policy);
    bool is_security_policy_Set() const;
    bool is_security_policy_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIDomainName_mutualTlsAuthentication getMutualTlsAuthentication() const;
    void setMutualTlsAuthentication(const OAIDomainName_mutualTlsAuthentication &mutual_tls_authentication);
    bool is_mutual_tls_authentication_Set() const;
    bool is_mutual_tls_authentication_Valid() const;

    QString getOwnershipVerificationCertificateArn() const;
    void setOwnershipVerificationCertificateArn(const QString &ownership_verification_certificate_arn);
    bool is_ownership_verification_certificate_arn_Set() const;
    bool is_ownership_verification_certificate_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    QString m_certificate_name;
    bool m_certificate_name_isSet;
    bool m_certificate_name_isValid;

    QString m_certificate_arn;
    bool m_certificate_arn_isSet;
    bool m_certificate_arn_isValid;

    QDateTime m_certificate_upload_date;
    bool m_certificate_upload_date_isSet;
    bool m_certificate_upload_date_isValid;

    QString m_regional_domain_name;
    bool m_regional_domain_name_isSet;
    bool m_regional_domain_name_isValid;

    QString m_regional_hosted_zone_id;
    bool m_regional_hosted_zone_id_isSet;
    bool m_regional_hosted_zone_id_isValid;

    QString m_regional_certificate_name;
    bool m_regional_certificate_name_isSet;
    bool m_regional_certificate_name_isValid;

    QString m_regional_certificate_arn;
    bool m_regional_certificate_arn_isSet;
    bool m_regional_certificate_arn_isValid;

    QString m_distribution_domain_name;
    bool m_distribution_domain_name_isSet;
    bool m_distribution_domain_name_isValid;

    QString m_distribution_hosted_zone_id;
    bool m_distribution_hosted_zone_id_isSet;
    bool m_distribution_hosted_zone_id_isValid;

    OAIDomainName_endpointConfiguration m_endpoint_configuration;
    bool m_endpoint_configuration_isSet;
    bool m_endpoint_configuration_isValid;

    OAIDomainNameStatus m_domain_name_status;
    bool m_domain_name_status_isSet;
    bool m_domain_name_status_isValid;

    QString m_domain_name_status_message;
    bool m_domain_name_status_message_isSet;
    bool m_domain_name_status_message_isValid;

    OAISecurityPolicy m_security_policy;
    bool m_security_policy_isSet;
    bool m_security_policy_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIDomainName_mutualTlsAuthentication m_mutual_tls_authentication;
    bool m_mutual_tls_authentication_isSet;
    bool m_mutual_tls_authentication_isValid;

    QString m_ownership_verification_certificate_arn;
    bool m_ownership_verification_certificate_arn_isSet;
    bool m_ownership_verification_certificate_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomainName)

#endif // OAIDomainName_H
