/*
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.CacheClusterSize;
import org.openapitools.client.model.CacheClusterStatus;
import org.openapitools.client.model.StageAccessLogSettings;
import org.openapitools.client.model.StageCanarySettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a unique identifier for a version of a deployed RestApi that is callable by users.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:41.810522-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Stage {
  public static final String SERIALIZED_NAME_DEPLOYMENT_ID = "deploymentId";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_ID)
  private String deploymentId;

  public static final String SERIALIZED_NAME_CLIENT_CERTIFICATE_ID = "clientCertificateId";
  @SerializedName(SERIALIZED_NAME_CLIENT_CERTIFICATE_ID)
  private String clientCertificateId;

  public static final String SERIALIZED_NAME_STAGE_NAME = "stageName";
  @SerializedName(SERIALIZED_NAME_STAGE_NAME)
  private String stageName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CACHE_CLUSTER_ENABLED = "cacheClusterEnabled";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_ENABLED)
  private Boolean cacheClusterEnabled;

  public static final String SERIALIZED_NAME_CACHE_CLUSTER_SIZE = "cacheClusterSize";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_SIZE)
  private CacheClusterSize cacheClusterSize;

  public static final String SERIALIZED_NAME_CACHE_CLUSTER_STATUS = "cacheClusterStatus";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_STATUS)
  private CacheClusterStatus cacheClusterStatus;

  public static final String SERIALIZED_NAME_METHOD_SETTINGS = "methodSettings";
  @SerializedName(SERIALIZED_NAME_METHOD_SETTINGS)
  private Map methodSettings;

  public static final String SERIALIZED_NAME_VARIABLES = "variables";
  @SerializedName(SERIALIZED_NAME_VARIABLES)
  private Map variables;

  public static final String SERIALIZED_NAME_DOCUMENTATION_VERSION = "documentationVersion";
  @SerializedName(SERIALIZED_NAME_DOCUMENTATION_VERSION)
  private String documentationVersion;

  public static final String SERIALIZED_NAME_ACCESS_LOG_SETTINGS = "accessLogSettings";
  @SerializedName(SERIALIZED_NAME_ACCESS_LOG_SETTINGS)
  private StageAccessLogSettings accessLogSettings;

  public static final String SERIALIZED_NAME_CANARY_SETTINGS = "canarySettings";
  @SerializedName(SERIALIZED_NAME_CANARY_SETTINGS)
  private StageCanarySettings canarySettings;

  public static final String SERIALIZED_NAME_TRACING_ENABLED = "tracingEnabled";
  @SerializedName(SERIALIZED_NAME_TRACING_ENABLED)
  private Boolean tracingEnabled;

  public static final String SERIALIZED_NAME_WEB_ACL_ARN = "webAclArn";
  @SerializedName(SERIALIZED_NAME_WEB_ACL_ARN)
  private String webAclArn;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE = "lastUpdatedDate";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE)
  private OffsetDateTime lastUpdatedDate;

  public Stage() {
  }

  public Stage deploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
    return this;
  }

  /**
   * Get deploymentId
   * @return deploymentId
   */
  @javax.annotation.Nullable
  public String getDeploymentId() {
    return deploymentId;
  }

  public void setDeploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
  }


  public Stage clientCertificateId(String clientCertificateId) {
    this.clientCertificateId = clientCertificateId;
    return this;
  }

  /**
   * Get clientCertificateId
   * @return clientCertificateId
   */
  @javax.annotation.Nullable
  public String getClientCertificateId() {
    return clientCertificateId;
  }

  public void setClientCertificateId(String clientCertificateId) {
    this.clientCertificateId = clientCertificateId;
  }


  public Stage stageName(String stageName) {
    this.stageName = stageName;
    return this;
  }

  /**
   * Get stageName
   * @return stageName
   */
  @javax.annotation.Nullable
  public String getStageName() {
    return stageName;
  }

  public void setStageName(String stageName) {
    this.stageName = stageName;
  }


  public Stage description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Stage cacheClusterEnabled(Boolean cacheClusterEnabled) {
    this.cacheClusterEnabled = cacheClusterEnabled;
    return this;
  }

  /**
   * Get cacheClusterEnabled
   * @return cacheClusterEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCacheClusterEnabled() {
    return cacheClusterEnabled;
  }

  public void setCacheClusterEnabled(Boolean cacheClusterEnabled) {
    this.cacheClusterEnabled = cacheClusterEnabled;
  }


  public Stage cacheClusterSize(CacheClusterSize cacheClusterSize) {
    this.cacheClusterSize = cacheClusterSize;
    return this;
  }

  /**
   * Get cacheClusterSize
   * @return cacheClusterSize
   */
  @javax.annotation.Nullable
  public CacheClusterSize getCacheClusterSize() {
    return cacheClusterSize;
  }

  public void setCacheClusterSize(CacheClusterSize cacheClusterSize) {
    this.cacheClusterSize = cacheClusterSize;
  }


  public Stage cacheClusterStatus(CacheClusterStatus cacheClusterStatus) {
    this.cacheClusterStatus = cacheClusterStatus;
    return this;
  }

  /**
   * Get cacheClusterStatus
   * @return cacheClusterStatus
   */
  @javax.annotation.Nullable
  public CacheClusterStatus getCacheClusterStatus() {
    return cacheClusterStatus;
  }

  public void setCacheClusterStatus(CacheClusterStatus cacheClusterStatus) {
    this.cacheClusterStatus = cacheClusterStatus;
  }


  public Stage methodSettings(Map methodSettings) {
    this.methodSettings = methodSettings;
    return this;
  }

  /**
   * Get methodSettings
   * @return methodSettings
   */
  @javax.annotation.Nullable
  public Map getMethodSettings() {
    return methodSettings;
  }

  public void setMethodSettings(Map methodSettings) {
    this.methodSettings = methodSettings;
  }


  public Stage variables(Map variables) {
    this.variables = variables;
    return this;
  }

  /**
   * Get variables
   * @return variables
   */
  @javax.annotation.Nullable
  public Map getVariables() {
    return variables;
  }

  public void setVariables(Map variables) {
    this.variables = variables;
  }


  public Stage documentationVersion(String documentationVersion) {
    this.documentationVersion = documentationVersion;
    return this;
  }

  /**
   * Get documentationVersion
   * @return documentationVersion
   */
  @javax.annotation.Nullable
  public String getDocumentationVersion() {
    return documentationVersion;
  }

  public void setDocumentationVersion(String documentationVersion) {
    this.documentationVersion = documentationVersion;
  }


  public Stage accessLogSettings(StageAccessLogSettings accessLogSettings) {
    this.accessLogSettings = accessLogSettings;
    return this;
  }

  /**
   * Get accessLogSettings
   * @return accessLogSettings
   */
  @javax.annotation.Nullable
  public StageAccessLogSettings getAccessLogSettings() {
    return accessLogSettings;
  }

  public void setAccessLogSettings(StageAccessLogSettings accessLogSettings) {
    this.accessLogSettings = accessLogSettings;
  }


  public Stage canarySettings(StageCanarySettings canarySettings) {
    this.canarySettings = canarySettings;
    return this;
  }

  /**
   * Get canarySettings
   * @return canarySettings
   */
  @javax.annotation.Nullable
  public StageCanarySettings getCanarySettings() {
    return canarySettings;
  }

  public void setCanarySettings(StageCanarySettings canarySettings) {
    this.canarySettings = canarySettings;
  }


  public Stage tracingEnabled(Boolean tracingEnabled) {
    this.tracingEnabled = tracingEnabled;
    return this;
  }

  /**
   * Get tracingEnabled
   * @return tracingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTracingEnabled() {
    return tracingEnabled;
  }

  public void setTracingEnabled(Boolean tracingEnabled) {
    this.tracingEnabled = tracingEnabled;
  }


  public Stage webAclArn(String webAclArn) {
    this.webAclArn = webAclArn;
    return this;
  }

  /**
   * Get webAclArn
   * @return webAclArn
   */
  @javax.annotation.Nullable
  public String getWebAclArn() {
    return webAclArn;
  }

  public void setWebAclArn(String webAclArn) {
    this.webAclArn = webAclArn;
  }


  public Stage tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public Stage createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public Stage lastUpdatedDate(OffsetDateTime lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
    return this;
  }

  /**
   * Get lastUpdatedDate
   * @return lastUpdatedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDate() {
    return lastUpdatedDate;
  }

  public void setLastUpdatedDate(OffsetDateTime lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Stage stage = (Stage) o;
    return Objects.equals(this.deploymentId, stage.deploymentId) &&
        Objects.equals(this.clientCertificateId, stage.clientCertificateId) &&
        Objects.equals(this.stageName, stage.stageName) &&
        Objects.equals(this.description, stage.description) &&
        Objects.equals(this.cacheClusterEnabled, stage.cacheClusterEnabled) &&
        Objects.equals(this.cacheClusterSize, stage.cacheClusterSize) &&
        Objects.equals(this.cacheClusterStatus, stage.cacheClusterStatus) &&
        Objects.equals(this.methodSettings, stage.methodSettings) &&
        Objects.equals(this.variables, stage.variables) &&
        Objects.equals(this.documentationVersion, stage.documentationVersion) &&
        Objects.equals(this.accessLogSettings, stage.accessLogSettings) &&
        Objects.equals(this.canarySettings, stage.canarySettings) &&
        Objects.equals(this.tracingEnabled, stage.tracingEnabled) &&
        Objects.equals(this.webAclArn, stage.webAclArn) &&
        Objects.equals(this.tags, stage.tags) &&
        Objects.equals(this.createdDate, stage.createdDate) &&
        Objects.equals(this.lastUpdatedDate, stage.lastUpdatedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deploymentId, clientCertificateId, stageName, description, cacheClusterEnabled, cacheClusterSize, cacheClusterStatus, methodSettings, variables, documentationVersion, accessLogSettings, canarySettings, tracingEnabled, webAclArn, tags, createdDate, lastUpdatedDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Stage {\n");
    sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
    sb.append("    clientCertificateId: ").append(toIndentedString(clientCertificateId)).append("\n");
    sb.append("    stageName: ").append(toIndentedString(stageName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    cacheClusterEnabled: ").append(toIndentedString(cacheClusterEnabled)).append("\n");
    sb.append("    cacheClusterSize: ").append(toIndentedString(cacheClusterSize)).append("\n");
    sb.append("    cacheClusterStatus: ").append(toIndentedString(cacheClusterStatus)).append("\n");
    sb.append("    methodSettings: ").append(toIndentedString(methodSettings)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("    documentationVersion: ").append(toIndentedString(documentationVersion)).append("\n");
    sb.append("    accessLogSettings: ").append(toIndentedString(accessLogSettings)).append("\n");
    sb.append("    canarySettings: ").append(toIndentedString(canarySettings)).append("\n");
    sb.append("    tracingEnabled: ").append(toIndentedString(tracingEnabled)).append("\n");
    sb.append("    webAclArn: ").append(toIndentedString(webAclArn)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    lastUpdatedDate: ").append(toIndentedString(lastUpdatedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deploymentId");
    openapiFields.add("clientCertificateId");
    openapiFields.add("stageName");
    openapiFields.add("description");
    openapiFields.add("cacheClusterEnabled");
    openapiFields.add("cacheClusterSize");
    openapiFields.add("cacheClusterStatus");
    openapiFields.add("methodSettings");
    openapiFields.add("variables");
    openapiFields.add("documentationVersion");
    openapiFields.add("accessLogSettings");
    openapiFields.add("canarySettings");
    openapiFields.add("tracingEnabled");
    openapiFields.add("webAclArn");
    openapiFields.add("tags");
    openapiFields.add("createdDate");
    openapiFields.add("lastUpdatedDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Stage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Stage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Stage is not found in the empty JSON string", Stage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Stage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Stage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `deploymentId`
      if (jsonObj.get("deploymentId") != null && !jsonObj.get("deploymentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("deploymentId"));
      }
      // validate the optional field `clientCertificateId`
      if (jsonObj.get("clientCertificateId") != null && !jsonObj.get("clientCertificateId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clientCertificateId"));
      }
      // validate the optional field `stageName`
      if (jsonObj.get("stageName") != null && !jsonObj.get("stageName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("stageName"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `cacheClusterEnabled`
      if (jsonObj.get("cacheClusterEnabled") != null && !jsonObj.get("cacheClusterEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("cacheClusterEnabled"));
      }
      // validate the optional field `cacheClusterSize`
      if (jsonObj.get("cacheClusterSize") != null && !jsonObj.get("cacheClusterSize").isJsonNull()) {
        CacheClusterSize.validateJsonElement(jsonObj.get("cacheClusterSize"));
      }
      // validate the optional field `cacheClusterStatus`
      if (jsonObj.get("cacheClusterStatus") != null && !jsonObj.get("cacheClusterStatus").isJsonNull()) {
        CacheClusterStatus.validateJsonElement(jsonObj.get("cacheClusterStatus"));
      }
      // validate the optional field `methodSettings`
      if (jsonObj.get("methodSettings") != null && !jsonObj.get("methodSettings").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("methodSettings"));
      }
      // validate the optional field `variables`
      if (jsonObj.get("variables") != null && !jsonObj.get("variables").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("variables"));
      }
      // validate the optional field `documentationVersion`
      if (jsonObj.get("documentationVersion") != null && !jsonObj.get("documentationVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("documentationVersion"));
      }
      // validate the optional field `accessLogSettings`
      if (jsonObj.get("accessLogSettings") != null && !jsonObj.get("accessLogSettings").isJsonNull()) {
        StageAccessLogSettings.validateJsonElement(jsonObj.get("accessLogSettings"));
      }
      // validate the optional field `canarySettings`
      if (jsonObj.get("canarySettings") != null && !jsonObj.get("canarySettings").isJsonNull()) {
        StageCanarySettings.validateJsonElement(jsonObj.get("canarySettings"));
      }
      // validate the optional field `tracingEnabled`
      if (jsonObj.get("tracingEnabled") != null && !jsonObj.get("tracingEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("tracingEnabled"));
      }
      // validate the optional field `webAclArn`
      if (jsonObj.get("webAclArn") != null && !jsonObj.get("webAclArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("webAclArn"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `createdDate`
      if (jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdDate"));
      }
      // validate the optional field `lastUpdatedDate`
      if (jsonObj.get("lastUpdatedDate") != null && !jsonObj.get("lastUpdatedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedDate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Stage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Stage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Stage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Stage.class));

       return (TypeAdapter<T>) new TypeAdapter<Stage>() {
           @Override
           public void write(JsonWriter out, Stage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Stage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Stage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Stage
   * @throws IOException if the JSON string is invalid with respect to Stage
   */
  public static Stage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Stage.class);
  }

  /**
   * Convert an instance of Stage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

