/*
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateDeploymentRequestCanarySettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:41.810522-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateDeploymentRequestCanarySettings {
  public static final String SERIALIZED_NAME_PERCENT_TRAFFIC = "percentTraffic";
  @SerializedName(SERIALIZED_NAME_PERCENT_TRAFFIC)
  private Double percentTraffic;

  public static final String SERIALIZED_NAME_STAGE_VARIABLE_OVERRIDES = "stageVariableOverrides";
  @SerializedName(SERIALIZED_NAME_STAGE_VARIABLE_OVERRIDES)
  private Map stageVariableOverrides;

  public static final String SERIALIZED_NAME_USE_STAGE_CACHE = "useStageCache";
  @SerializedName(SERIALIZED_NAME_USE_STAGE_CACHE)
  private Boolean useStageCache;

  public CreateDeploymentRequestCanarySettings() {
  }

  public CreateDeploymentRequestCanarySettings percentTraffic(Double percentTraffic) {
    this.percentTraffic = percentTraffic;
    return this;
  }

  /**
   * Get percentTraffic
   * @return percentTraffic
   */
  @javax.annotation.Nullable
  public Double getPercentTraffic() {
    return percentTraffic;
  }

  public void setPercentTraffic(Double percentTraffic) {
    this.percentTraffic = percentTraffic;
  }


  public CreateDeploymentRequestCanarySettings stageVariableOverrides(Map stageVariableOverrides) {
    this.stageVariableOverrides = stageVariableOverrides;
    return this;
  }

  /**
   * Get stageVariableOverrides
   * @return stageVariableOverrides
   */
  @javax.annotation.Nullable
  public Map getStageVariableOverrides() {
    return stageVariableOverrides;
  }

  public void setStageVariableOverrides(Map stageVariableOverrides) {
    this.stageVariableOverrides = stageVariableOverrides;
  }


  public CreateDeploymentRequestCanarySettings useStageCache(Boolean useStageCache) {
    this.useStageCache = useStageCache;
    return this;
  }

  /**
   * Get useStageCache
   * @return useStageCache
   */
  @javax.annotation.Nullable
  public Boolean getUseStageCache() {
    return useStageCache;
  }

  public void setUseStageCache(Boolean useStageCache) {
    this.useStageCache = useStageCache;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDeploymentRequestCanarySettings createDeploymentRequestCanarySettings = (CreateDeploymentRequestCanarySettings) o;
    return Objects.equals(this.percentTraffic, createDeploymentRequestCanarySettings.percentTraffic) &&
        Objects.equals(this.stageVariableOverrides, createDeploymentRequestCanarySettings.stageVariableOverrides) &&
        Objects.equals(this.useStageCache, createDeploymentRequestCanarySettings.useStageCache);
  }

  @Override
  public int hashCode() {
    return Objects.hash(percentTraffic, stageVariableOverrides, useStageCache);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDeploymentRequestCanarySettings {\n");
    sb.append("    percentTraffic: ").append(toIndentedString(percentTraffic)).append("\n");
    sb.append("    stageVariableOverrides: ").append(toIndentedString(stageVariableOverrides)).append("\n");
    sb.append("    useStageCache: ").append(toIndentedString(useStageCache)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("percentTraffic");
    openapiFields.add("stageVariableOverrides");
    openapiFields.add("useStageCache");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateDeploymentRequestCanarySettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateDeploymentRequestCanarySettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateDeploymentRequestCanarySettings is not found in the empty JSON string", CreateDeploymentRequestCanarySettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateDeploymentRequestCanarySettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateDeploymentRequestCanarySettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `percentTraffic`
      if (jsonObj.get("percentTraffic") != null && !jsonObj.get("percentTraffic").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("percentTraffic"));
      }
      // validate the optional field `stageVariableOverrides`
      if (jsonObj.get("stageVariableOverrides") != null && !jsonObj.get("stageVariableOverrides").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("stageVariableOverrides"));
      }
      // validate the optional field `useStageCache`
      if (jsonObj.get("useStageCache") != null && !jsonObj.get("useStageCache").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("useStageCache"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateDeploymentRequestCanarySettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateDeploymentRequestCanarySettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateDeploymentRequestCanarySettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateDeploymentRequestCanarySettings.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateDeploymentRequestCanarySettings>() {
           @Override
           public void write(JsonWriter out, CreateDeploymentRequestCanarySettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateDeploymentRequestCanarySettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateDeploymentRequestCanarySettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateDeploymentRequestCanarySettings
   * @throws IOException if the JSON string is invalid with respect to CreateDeploymentRequestCanarySettings
   */
  public static CreateDeploymentRequestCanarySettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateDeploymentRequestCanarySettings.class);
  }

  /**
   * Convert an instance of CreateDeploymentRequestCanarySettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

