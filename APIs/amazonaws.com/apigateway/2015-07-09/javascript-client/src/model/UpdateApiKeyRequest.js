/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PatchOperation from './PatchOperation';

/**
 * The UpdateApiKeyRequest model module.
 * @module model/UpdateApiKeyRequest
 * @version 2015-07-09
 */
class UpdateApiKeyRequest {
    /**
     * Constructs a new <code>UpdateApiKeyRequest</code>.
     * @alias module:model/UpdateApiKeyRequest
     */
    constructor() { 
        
        UpdateApiKeyRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateApiKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateApiKeyRequest} obj Optional instance to populate.
     * @return {module:model/UpdateApiKeyRequest} The populated <code>UpdateApiKeyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateApiKeyRequest();

            if (data.hasOwnProperty('patchOperations')) {
                obj['patchOperations'] = ApiClient.convertToType(data['patchOperations'], [PatchOperation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateApiKeyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateApiKeyRequest</code>.
     */
    static validateJSON(data) {
        if (data['patchOperations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['patchOperations'])) {
                throw new Error("Expected the field `patchOperations` to be an array in the JSON data but got " + data['patchOperations']);
            }
            // validate the optional field `patchOperations` (array)
            for (const item of data['patchOperations']) {
                PatchOperation.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A list of operations describing the updates to apply to the specified resource. The patches are applied in the order specified in the list.
 * @member {Array.<module:model/PatchOperation>} patchOperations
 */
UpdateApiKeyRequest.prototype['patchOperations'] = undefined;






export default UpdateApiKeyRequest;

