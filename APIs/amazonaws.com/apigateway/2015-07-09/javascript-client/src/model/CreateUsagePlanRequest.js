/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiStage from './ApiStage';
import CreateUsagePlanRequestQuota from './CreateUsagePlanRequestQuota';
import CreateUsagePlanRequestThrottle from './CreateUsagePlanRequestThrottle';

/**
 * The CreateUsagePlanRequest model module.
 * @module model/CreateUsagePlanRequest
 * @version 2015-07-09
 */
class CreateUsagePlanRequest {
    /**
     * Constructs a new <code>CreateUsagePlanRequest</code>.
     * @alias module:model/CreateUsagePlanRequest
     * @param name {String} The name of the usage plan.
     */
    constructor(name) { 
        
        CreateUsagePlanRequest.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateUsagePlanRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateUsagePlanRequest} obj Optional instance to populate.
     * @return {module:model/CreateUsagePlanRequest} The populated <code>CreateUsagePlanRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateUsagePlanRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('apiStages')) {
                obj['apiStages'] = ApiClient.convertToType(data['apiStages'], [ApiStage]);
            }
            if (data.hasOwnProperty('throttle')) {
                obj['throttle'] = CreateUsagePlanRequestThrottle.constructFromObject(data['throttle']);
            }
            if (data.hasOwnProperty('quota')) {
                obj['quota'] = CreateUsagePlanRequestQuota.constructFromObject(data['quota']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateUsagePlanRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateUsagePlanRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateUsagePlanRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['apiStages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['apiStages'])) {
                throw new Error("Expected the field `apiStages` to be an array in the JSON data but got " + data['apiStages']);
            }
            // validate the optional field `apiStages` (array)
            for (const item of data['apiStages']) {
                ApiStage.validateJSON(item);
            };
        }
        // validate the optional field `throttle`
        if (data['throttle']) { // data not null
          CreateUsagePlanRequestThrottle.validateJSON(data['throttle']);
        }
        // validate the optional field `quota`
        if (data['quota']) { // data not null
          CreateUsagePlanRequestQuota.validateJSON(data['quota']);
        }

        return true;
    }


}

CreateUsagePlanRequest.RequiredProperties = ["name"];

/**
 * The name of the usage plan.
 * @member {String} name
 */
CreateUsagePlanRequest.prototype['name'] = undefined;

/**
 * The description of the usage plan.
 * @member {String} description
 */
CreateUsagePlanRequest.prototype['description'] = undefined;

/**
 * The associated API stages of the usage plan.
 * @member {Array.<module:model/ApiStage>} apiStages
 */
CreateUsagePlanRequest.prototype['apiStages'] = undefined;

/**
 * @member {module:model/CreateUsagePlanRequestThrottle} throttle
 */
CreateUsagePlanRequest.prototype['throttle'] = undefined;

/**
 * @member {module:model/CreateUsagePlanRequestQuota} quota
 */
CreateUsagePlanRequest.prototype['quota'] = undefined;

/**
 * The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.
 * @member {Object.<String, String>} tags
 */
CreateUsagePlanRequest.prototype['tags'] = undefined;






export default CreateUsagePlanRequest;

