/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonApiGateway);
  }
}(this, function(expect, AmazonApiGateway) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonApiGateway.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createApiKey', function() {
      it('should call createApiKey successfully', function(done) {
        //uncomment below and update the code to test createApiKey
        //instance.createApiKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizer', function() {
      it('should call createAuthorizer successfully', function(done) {
        //uncomment below and update the code to test createAuthorizer
        //instance.createAuthorizer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBasePathMapping', function() {
      it('should call createBasePathMapping successfully', function(done) {
        //uncomment below and update the code to test createBasePathMapping
        //instance.createBasePathMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDeployment', function() {
      it('should call createDeployment successfully', function(done) {
        //uncomment below and update the code to test createDeployment
        //instance.createDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDocumentationPart', function() {
      it('should call createDocumentationPart successfully', function(done) {
        //uncomment below and update the code to test createDocumentationPart
        //instance.createDocumentationPart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDocumentationVersion', function() {
      it('should call createDocumentationVersion successfully', function(done) {
        //uncomment below and update the code to test createDocumentationVersion
        //instance.createDocumentationVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDomainName', function() {
      it('should call createDomainName successfully', function(done) {
        //uncomment below and update the code to test createDomainName
        //instance.createDomainName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModel', function() {
      it('should call createModel successfully', function(done) {
        //uncomment below and update the code to test createModel
        //instance.createModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRequestValidator', function() {
      it('should call createRequestValidator successfully', function(done) {
        //uncomment below and update the code to test createRequestValidator
        //instance.createRequestValidator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createResource', function() {
      it('should call createResource successfully', function(done) {
        //uncomment below and update the code to test createResource
        //instance.createResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRestApi', function() {
      it('should call createRestApi successfully', function(done) {
        //uncomment below and update the code to test createRestApi
        //instance.createRestApi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStage', function() {
      it('should call createStage successfully', function(done) {
        //uncomment below and update the code to test createStage
        //instance.createStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUsagePlan', function() {
      it('should call createUsagePlan successfully', function(done) {
        //uncomment below and update the code to test createUsagePlan
        //instance.createUsagePlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUsagePlanKey', function() {
      it('should call createUsagePlanKey successfully', function(done) {
        //uncomment below and update the code to test createUsagePlanKey
        //instance.createUsagePlanKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVpcLink', function() {
      it('should call createVpcLink successfully', function(done) {
        //uncomment below and update the code to test createVpcLink
        //instance.createVpcLink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteApiKey', function() {
      it('should call deleteApiKey successfully', function(done) {
        //uncomment below and update the code to test deleteApiKey
        //instance.deleteApiKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizer', function() {
      it('should call deleteAuthorizer successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizer
        //instance.deleteAuthorizer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBasePathMapping', function() {
      it('should call deleteBasePathMapping successfully', function(done) {
        //uncomment below and update the code to test deleteBasePathMapping
        //instance.deleteBasePathMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClientCertificate', function() {
      it('should call deleteClientCertificate successfully', function(done) {
        //uncomment below and update the code to test deleteClientCertificate
        //instance.deleteClientCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDeployment', function() {
      it('should call deleteDeployment successfully', function(done) {
        //uncomment below and update the code to test deleteDeployment
        //instance.deleteDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDocumentationPart', function() {
      it('should call deleteDocumentationPart successfully', function(done) {
        //uncomment below and update the code to test deleteDocumentationPart
        //instance.deleteDocumentationPart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDocumentationVersion', function() {
      it('should call deleteDocumentationVersion successfully', function(done) {
        //uncomment below and update the code to test deleteDocumentationVersion
        //instance.deleteDocumentationVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDomainName', function() {
      it('should call deleteDomainName successfully', function(done) {
        //uncomment below and update the code to test deleteDomainName
        //instance.deleteDomainName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGatewayResponse', function() {
      it('should call deleteGatewayResponse successfully', function(done) {
        //uncomment below and update the code to test deleteGatewayResponse
        //instance.deleteGatewayResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteIntegration', function() {
      it('should call deleteIntegration successfully', function(done) {
        //uncomment below and update the code to test deleteIntegration
        //instance.deleteIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteIntegrationResponse', function() {
      it('should call deleteIntegrationResponse successfully', function(done) {
        //uncomment below and update the code to test deleteIntegrationResponse
        //instance.deleteIntegrationResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMethod', function() {
      it('should call deleteMethod successfully', function(done) {
        //uncomment below and update the code to test deleteMethod
        //instance.deleteMethod(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMethodResponse', function() {
      it('should call deleteMethodResponse successfully', function(done) {
        //uncomment below and update the code to test deleteMethodResponse
        //instance.deleteMethodResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModel', function() {
      it('should call deleteModel successfully', function(done) {
        //uncomment below and update the code to test deleteModel
        //instance.deleteModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRequestValidator', function() {
      it('should call deleteRequestValidator successfully', function(done) {
        //uncomment below and update the code to test deleteRequestValidator
        //instance.deleteRequestValidator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteResource', function() {
      it('should call deleteResource successfully', function(done) {
        //uncomment below and update the code to test deleteResource
        //instance.deleteResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRestApi', function() {
      it('should call deleteRestApi successfully', function(done) {
        //uncomment below and update the code to test deleteRestApi
        //instance.deleteRestApi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStage', function() {
      it('should call deleteStage successfully', function(done) {
        //uncomment below and update the code to test deleteStage
        //instance.deleteStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUsagePlan', function() {
      it('should call deleteUsagePlan successfully', function(done) {
        //uncomment below and update the code to test deleteUsagePlan
        //instance.deleteUsagePlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUsagePlanKey', function() {
      it('should call deleteUsagePlanKey successfully', function(done) {
        //uncomment below and update the code to test deleteUsagePlanKey
        //instance.deleteUsagePlanKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVpcLink', function() {
      it('should call deleteVpcLink successfully', function(done) {
        //uncomment below and update the code to test deleteVpcLink
        //instance.deleteVpcLink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('flushStageAuthorizersCache', function() {
      it('should call flushStageAuthorizersCache successfully', function(done) {
        //uncomment below and update the code to test flushStageAuthorizersCache
        //instance.flushStageAuthorizersCache(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('flushStageCache', function() {
      it('should call flushStageCache successfully', function(done) {
        //uncomment below and update the code to test flushStageCache
        //instance.flushStageCache(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generateClientCertificate', function() {
      it('should call generateClientCertificate successfully', function(done) {
        //uncomment below and update the code to test generateClientCertificate
        //instance.generateClientCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccount', function() {
      it('should call getAccount successfully', function(done) {
        //uncomment below and update the code to test getAccount
        //instance.getAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApiKey', function() {
      it('should call getApiKey successfully', function(done) {
        //uncomment below and update the code to test getApiKey
        //instance.getApiKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApiKeys', function() {
      it('should call getApiKeys successfully', function(done) {
        //uncomment below and update the code to test getApiKeys
        //instance.getApiKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAuthorizer', function() {
      it('should call getAuthorizer successfully', function(done) {
        //uncomment below and update the code to test getAuthorizer
        //instance.getAuthorizer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAuthorizers', function() {
      it('should call getAuthorizers successfully', function(done) {
        //uncomment below and update the code to test getAuthorizers
        //instance.getAuthorizers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBasePathMapping', function() {
      it('should call getBasePathMapping successfully', function(done) {
        //uncomment below and update the code to test getBasePathMapping
        //instance.getBasePathMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBasePathMappings', function() {
      it('should call getBasePathMappings successfully', function(done) {
        //uncomment below and update the code to test getBasePathMappings
        //instance.getBasePathMappings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClientCertificate', function() {
      it('should call getClientCertificate successfully', function(done) {
        //uncomment below and update the code to test getClientCertificate
        //instance.getClientCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClientCertificates', function() {
      it('should call getClientCertificates successfully', function(done) {
        //uncomment below and update the code to test getClientCertificates
        //instance.getClientCertificates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeployment', function() {
      it('should call getDeployment successfully', function(done) {
        //uncomment below and update the code to test getDeployment
        //instance.getDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeployments', function() {
      it('should call getDeployments successfully', function(done) {
        //uncomment below and update the code to test getDeployments
        //instance.getDeployments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentationPart', function() {
      it('should call getDocumentationPart successfully', function(done) {
        //uncomment below and update the code to test getDocumentationPart
        //instance.getDocumentationPart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentationParts', function() {
      it('should call getDocumentationParts successfully', function(done) {
        //uncomment below and update the code to test getDocumentationParts
        //instance.getDocumentationParts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentationVersion', function() {
      it('should call getDocumentationVersion successfully', function(done) {
        //uncomment below and update the code to test getDocumentationVersion
        //instance.getDocumentationVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentationVersions', function() {
      it('should call getDocumentationVersions successfully', function(done) {
        //uncomment below and update the code to test getDocumentationVersions
        //instance.getDocumentationVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDomainName', function() {
      it('should call getDomainName successfully', function(done) {
        //uncomment below and update the code to test getDomainName
        //instance.getDomainName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDomainNames', function() {
      it('should call getDomainNames successfully', function(done) {
        //uncomment below and update the code to test getDomainNames
        //instance.getDomainNames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExport', function() {
      it('should call getExport successfully', function(done) {
        //uncomment below and update the code to test getExport
        //instance.getExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGatewayResponse', function() {
      it('should call getGatewayResponse successfully', function(done) {
        //uncomment below and update the code to test getGatewayResponse
        //instance.getGatewayResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGatewayResponses', function() {
      it('should call getGatewayResponses successfully', function(done) {
        //uncomment below and update the code to test getGatewayResponses
        //instance.getGatewayResponses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getIntegration', function() {
      it('should call getIntegration successfully', function(done) {
        //uncomment below and update the code to test getIntegration
        //instance.getIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getIntegrationResponse', function() {
      it('should call getIntegrationResponse successfully', function(done) {
        //uncomment below and update the code to test getIntegrationResponse
        //instance.getIntegrationResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMethod', function() {
      it('should call getMethod successfully', function(done) {
        //uncomment below and update the code to test getMethod
        //instance.getMethod(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMethodResponse', function() {
      it('should call getMethodResponse successfully', function(done) {
        //uncomment below and update the code to test getMethodResponse
        //instance.getMethodResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModel', function() {
      it('should call getModel successfully', function(done) {
        //uncomment below and update the code to test getModel
        //instance.getModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelTemplate', function() {
      it('should call getModelTemplate successfully', function(done) {
        //uncomment below and update the code to test getModelTemplate
        //instance.getModelTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModels', function() {
      it('should call getModels successfully', function(done) {
        //uncomment below and update the code to test getModels
        //instance.getModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRequestValidator', function() {
      it('should call getRequestValidator successfully', function(done) {
        //uncomment below and update the code to test getRequestValidator
        //instance.getRequestValidator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRequestValidators', function() {
      it('should call getRequestValidators successfully', function(done) {
        //uncomment below and update the code to test getRequestValidators
        //instance.getRequestValidators(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getResource', function() {
      it('should call getResource successfully', function(done) {
        //uncomment below and update the code to test getResource
        //instance.getResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getResources', function() {
      it('should call getResources successfully', function(done) {
        //uncomment below and update the code to test getResources
        //instance.getResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRestApi', function() {
      it('should call getRestApi successfully', function(done) {
        //uncomment below and update the code to test getRestApi
        //instance.getRestApi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRestApis', function() {
      it('should call getRestApis successfully', function(done) {
        //uncomment below and update the code to test getRestApis
        //instance.getRestApis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSdk', function() {
      it('should call getSdk successfully', function(done) {
        //uncomment below and update the code to test getSdk
        //instance.getSdk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSdkType', function() {
      it('should call getSdkType successfully', function(done) {
        //uncomment below and update the code to test getSdkType
        //instance.getSdkType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSdkTypes', function() {
      it('should call getSdkTypes successfully', function(done) {
        //uncomment below and update the code to test getSdkTypes
        //instance.getSdkTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStage', function() {
      it('should call getStage successfully', function(done) {
        //uncomment below and update the code to test getStage
        //instance.getStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStages', function() {
      it('should call getStages successfully', function(done) {
        //uncomment below and update the code to test getStages
        //instance.getStages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTags', function() {
      it('should call getTags successfully', function(done) {
        //uncomment below and update the code to test getTags
        //instance.getTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUsage', function() {
      it('should call getUsage successfully', function(done) {
        //uncomment below and update the code to test getUsage
        //instance.getUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUsagePlan', function() {
      it('should call getUsagePlan successfully', function(done) {
        //uncomment below and update the code to test getUsagePlan
        //instance.getUsagePlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUsagePlanKey', function() {
      it('should call getUsagePlanKey successfully', function(done) {
        //uncomment below and update the code to test getUsagePlanKey
        //instance.getUsagePlanKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUsagePlanKeys', function() {
      it('should call getUsagePlanKeys successfully', function(done) {
        //uncomment below and update the code to test getUsagePlanKeys
        //instance.getUsagePlanKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUsagePlans', function() {
      it('should call getUsagePlans successfully', function(done) {
        //uncomment below and update the code to test getUsagePlans
        //instance.getUsagePlans(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVpcLink', function() {
      it('should call getVpcLink successfully', function(done) {
        //uncomment below and update the code to test getVpcLink
        //instance.getVpcLink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVpcLinks', function() {
      it('should call getVpcLinks successfully', function(done) {
        //uncomment below and update the code to test getVpcLinks
        //instance.getVpcLinks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importApiKeys', function() {
      it('should call importApiKeys successfully', function(done) {
        //uncomment below and update the code to test importApiKeys
        //instance.importApiKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importDocumentationParts', function() {
      it('should call importDocumentationParts successfully', function(done) {
        //uncomment below and update the code to test importDocumentationParts
        //instance.importDocumentationParts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importRestApi', function() {
      it('should call importRestApi successfully', function(done) {
        //uncomment below and update the code to test importRestApi
        //instance.importRestApi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putGatewayResponse', function() {
      it('should call putGatewayResponse successfully', function(done) {
        //uncomment below and update the code to test putGatewayResponse
        //instance.putGatewayResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putIntegration', function() {
      it('should call putIntegration successfully', function(done) {
        //uncomment below and update the code to test putIntegration
        //instance.putIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putIntegrationResponse', function() {
      it('should call putIntegrationResponse successfully', function(done) {
        //uncomment below and update the code to test putIntegrationResponse
        //instance.putIntegrationResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putMethod', function() {
      it('should call putMethod successfully', function(done) {
        //uncomment below and update the code to test putMethod
        //instance.putMethod(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putMethodResponse', function() {
      it('should call putMethodResponse successfully', function(done) {
        //uncomment below and update the code to test putMethodResponse
        //instance.putMethodResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putRestApi', function() {
      it('should call putRestApi successfully', function(done) {
        //uncomment below and update the code to test putRestApi
        //instance.putRestApi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testInvokeAuthorizer', function() {
      it('should call testInvokeAuthorizer successfully', function(done) {
        //uncomment below and update the code to test testInvokeAuthorizer
        //instance.testInvokeAuthorizer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testInvokeMethod', function() {
      it('should call testInvokeMethod successfully', function(done) {
        //uncomment below and update the code to test testInvokeMethod
        //instance.testInvokeMethod(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccount', function() {
      it('should call updateAccount successfully', function(done) {
        //uncomment below and update the code to test updateAccount
        //instance.updateAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateApiKey', function() {
      it('should call updateApiKey successfully', function(done) {
        //uncomment below and update the code to test updateApiKey
        //instance.updateApiKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAuthorizer', function() {
      it('should call updateAuthorizer successfully', function(done) {
        //uncomment below and update the code to test updateAuthorizer
        //instance.updateAuthorizer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBasePathMapping', function() {
      it('should call updateBasePathMapping successfully', function(done) {
        //uncomment below and update the code to test updateBasePathMapping
        //instance.updateBasePathMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClientCertificate', function() {
      it('should call updateClientCertificate successfully', function(done) {
        //uncomment below and update the code to test updateClientCertificate
        //instance.updateClientCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDeployment', function() {
      it('should call updateDeployment successfully', function(done) {
        //uncomment below and update the code to test updateDeployment
        //instance.updateDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDocumentationPart', function() {
      it('should call updateDocumentationPart successfully', function(done) {
        //uncomment below and update the code to test updateDocumentationPart
        //instance.updateDocumentationPart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDocumentationVersion', function() {
      it('should call updateDocumentationVersion successfully', function(done) {
        //uncomment below and update the code to test updateDocumentationVersion
        //instance.updateDocumentationVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDomainName', function() {
      it('should call updateDomainName successfully', function(done) {
        //uncomment below and update the code to test updateDomainName
        //instance.updateDomainName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGatewayResponse', function() {
      it('should call updateGatewayResponse successfully', function(done) {
        //uncomment below and update the code to test updateGatewayResponse
        //instance.updateGatewayResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateIntegration', function() {
      it('should call updateIntegration successfully', function(done) {
        //uncomment below and update the code to test updateIntegration
        //instance.updateIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateIntegrationResponse', function() {
      it('should call updateIntegrationResponse successfully', function(done) {
        //uncomment below and update the code to test updateIntegrationResponse
        //instance.updateIntegrationResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMethod', function() {
      it('should call updateMethod successfully', function(done) {
        //uncomment below and update the code to test updateMethod
        //instance.updateMethod(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMethodResponse', function() {
      it('should call updateMethodResponse successfully', function(done) {
        //uncomment below and update the code to test updateMethodResponse
        //instance.updateMethodResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModel', function() {
      it('should call updateModel successfully', function(done) {
        //uncomment below and update the code to test updateModel
        //instance.updateModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRequestValidator', function() {
      it('should call updateRequestValidator successfully', function(done) {
        //uncomment below and update the code to test updateRequestValidator
        //instance.updateRequestValidator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateResource', function() {
      it('should call updateResource successfully', function(done) {
        //uncomment below and update the code to test updateResource
        //instance.updateResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRestApi', function() {
      it('should call updateRestApi successfully', function(done) {
        //uncomment below and update the code to test updateRestApi
        //instance.updateRestApi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateStage', function() {
      it('should call updateStage successfully', function(done) {
        //uncomment below and update the code to test updateStage
        //instance.updateStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUsage', function() {
      it('should call updateUsage successfully', function(done) {
        //uncomment below and update the code to test updateUsage
        //instance.updateUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUsagePlan', function() {
      it('should call updateUsagePlan successfully', function(done) {
        //uncomment below and update the code to test updateUsagePlan
        //instance.updateUsagePlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVpcLink', function() {
      it('should call updateVpcLink successfully', function(done) {
        //uncomment below and update the code to test updateVpcLink
        //instance.updateVpcLink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
