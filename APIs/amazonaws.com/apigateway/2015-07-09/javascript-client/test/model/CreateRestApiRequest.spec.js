/**
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonApiGateway);
  }
}(this, function(expect, AmazonApiGateway) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonApiGateway.CreateRestApiRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateRestApiRequest', function() {
    it('should create an instance of CreateRestApiRequest', function() {
      // uncomment below and update the code to test CreateRestApiRequest
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be.a(AmazonApiGateway.CreateRestApiRequest);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be();
    });

    it('should have the property cloneFrom (base name: "cloneFrom")', function() {
      // uncomment below and update the code to test the property cloneFrom
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be();
    });

    it('should have the property binaryMediaTypes (base name: "binaryMediaTypes")', function() {
      // uncomment below and update the code to test the property binaryMediaTypes
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be();
    });

    it('should have the property minimumCompressionSize (base name: "minimumCompressionSize")', function() {
      // uncomment below and update the code to test the property minimumCompressionSize
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be();
    });

    it('should have the property apiKeySource (base name: "apiKeySource")', function() {
      // uncomment below and update the code to test the property apiKeySource
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be();
    });

    it('should have the property endpointConfiguration (base name: "endpointConfiguration")', function() {
      // uncomment below and update the code to test the property endpointConfiguration
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be();
    });

    it('should have the property policy (base name: "policy")', function() {
      // uncomment below and update the code to test the property policy
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be();
    });

    it('should have the property disableExecuteApiEndpoint (base name: "disableExecuteApiEndpoint")', function() {
      // uncomment below and update the code to test the property disableExecuteApiEndpoint
      //var instance = new AmazonApiGateway.CreateRestApiRequest();
      //expect(instance).to.be();
    });

  });

}));
