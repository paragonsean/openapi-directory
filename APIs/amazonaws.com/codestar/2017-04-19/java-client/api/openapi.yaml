openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>AWS CodeStar</fullname> <p>This is the API reference for\
    \ AWS CodeStar. This reference provides descriptions of the operations and data\
    \ types for the AWS CodeStar API along with usage examples.</p> <p>You can use\
    \ the AWS CodeStar API to work with:</p> <p>Projects and their resources, by calling\
    \ the following:</p> <ul> <li> <p> <code>DeleteProject</code>, which deletes a\
    \ project.</p> </li> <li> <p> <code>DescribeProject</code>, which lists the attributes\
    \ of a project.</p> </li> <li> <p> <code>ListProjects</code>, which lists all\
    \ projects associated with your AWS account.</p> </li> <li> <p> <code>ListResources</code>,\
    \ which lists the resources associated with a project.</p> </li> <li> <p> <code>ListTagsForProject</code>,\
    \ which lists the tags associated with a project.</p> </li> <li> <p> <code>TagProject</code>,\
    \ which adds tags to a project.</p> </li> <li> <p> <code>UntagProject</code>,\
    \ which removes tags from a project.</p> </li> <li> <p> <code>UpdateProject</code>,\
    \ which updates the attributes of a project.</p> </li> </ul> <p>Teams and team\
    \ members, by calling the following:</p> <ul> <li> <p> <code>AssociateTeamMember</code>,\
    \ which adds an IAM user to the team for a project.</p> </li> <li> <p> <code>DisassociateTeamMember</code>,\
    \ which removes an IAM user from the team for a project.</p> </li> <li> <p> <code>ListTeamMembers</code>,\
    \ which lists all the IAM users in the team for a project, including their roles\
    \ and attributes.</p> </li> <li> <p> <code>UpdateTeamMember</code>, which updates\
    \ a team member's attributes in a project.</p> </li> </ul> <p>Users, by calling\
    \ the following:</p> <ul> <li> <p> <code>CreateUserProfile</code>, which creates\
    \ a user profile that contains data associated with the user across all projects.</p>\
    \ </li> <li> <p> <code>DeleteUserProfile</code>, which deletes all user profile\
    \ information across all projects.</p> </li> <li> <p> <code>DescribeUserProfile</code>,\
    \ which describes the profile of a user.</p> </li> <li> <p> <code>ListUserProfiles</code>,\
    \ which lists all user profiles.</p> </li> <li> <p> <code>UpdateUserProfile</code>,\
    \ which updates the profile for a user.</p> </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS CodeStar
  version: 2017-04-19
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: codestar
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codestar-2017-04-19.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codestar/
servers:
- description: The CodeStar multi-region endpoint
  url: "http://codestar.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CodeStar multi-region endpoint
  url: "https://codestar.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CodeStar endpoint for China (Beijing) and China (Ningxia)
  url: "http://codestar.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The CodeStar endpoint for China (Beijing) and China (Ningxia)
  url: "https://codestar.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=CodeStar_20170419.AssociateTeamMember:
    post:
      description: Adds an IAM user to the team for an AWS CodeStar project.
      operationId: AssociateTeamMember
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.AssociateTeamMember
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateTeamMemberRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateTeamMemberResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotFoundException'
          description: ProjectNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberAlreadyAssociatedException'
          description: TeamMemberAlreadyAssociatedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidServiceRoleException'
          description: InvalidServiceRoleException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfigurationException'
          description: ProjectConfigurationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.CreateProject:
    post:
      description: "Creates a project, including project resources. This action creates\
        \ a project based on a submitted project request. A set of source code files\
        \ and a toolchain template file can be included with the project request.\
        \ If these are not provided, an empty project is created."
      operationId: CreateProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.CreateProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAlreadyExistsException'
          description: ProjectAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreationFailedException'
          description: ProjectCreationFailedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidServiceRoleException'
          description: InvalidServiceRoleException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfigurationException'
          description: ProjectConfigurationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.CreateUserProfile:
    post:
      description: "Creates a profile for a user that includes user preferences, such\
        \ as the display name and email address assocciated with the user, in AWS\
        \ CodeStar. The user profile is not project-specific. Information in the user\
        \ profile is displayed wherever the user's information appears to other users\
        \ in AWS CodeStar."
      operationId: CreateUserProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.CreateUserProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileAlreadyExistsException'
          description: UserProfileAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.DeleteProject:
    post:
      description: "Deletes a project, including project resources. Does not delete\
        \ users associated with the project, but does delete the IAM roles that allowed\
        \ access to the project."
      operationId: DeleteProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.DeleteProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidServiceRoleException'
          description: InvalidServiceRoleException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.DeleteUserProfile:
    post:
      description: "Deletes a user profile in AWS CodeStar, including all personal\
        \ preference data associated with that profile, such as display name and email\
        \ address. It does not delete the history of that user, for example the history\
        \ of commits made by that user."
      operationId: DeleteUserProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.DeleteUserProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.DescribeProject:
    post:
      description: Describes a project and its resources.
      operationId: DescribeProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.DescribeProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotFoundException'
          description: ProjectNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidServiceRoleException'
          description: InvalidServiceRoleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfigurationException'
          description: ProjectConfigurationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.DescribeUserProfile:
    post:
      description: Describes a user in AWS CodeStar and the user attributes across
        all projects.
      operationId: DescribeUserProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.DescribeUserProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileNotFoundException'
          description: UserProfileNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.DisassociateTeamMember:
    post:
      description: Removes a user from a project. Removing a user from a project also
        removes the IAM policies from that user that allowed access to the project
        and its resources. Disassociating a team member does not remove that user's
        profile from AWS CodeStar. It does not remove the user from IAM.
      operationId: DisassociateTeamMember
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.DisassociateTeamMember
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateTeamMemberRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateTeamMemberResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotFoundException'
          description: ProjectNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidServiceRoleException'
          description: InvalidServiceRoleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.ListProjects:
    post:
      description: Lists all projects in AWS CodeStar associated with your AWS account.
      operationId: ListProjects
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.ListProjects
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProjectsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.ListResources:
    post:
      description: Lists resources associated with a project in AWS CodeStar.
      operationId: ListResources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.ListResources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourcesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotFoundException'
          description: ProjectNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.ListTagsForProject:
    post:
      description: Gets the tags for a project.
      operationId: ListTagsForProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.ListTagsForProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotFoundException'
          description: ProjectNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.ListTeamMembers:
    post:
      description: Lists all team members associated with a project.
      operationId: ListTeamMembers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.ListTeamMembers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTeamMembersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamMembersResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotFoundException'
          description: ProjectNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.ListUserProfiles:
    post:
      description: Lists all the user profiles configured for your AWS account in
        AWS CodeStar.
      operationId: ListUserProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.ListUserProfiles
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUserProfilesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserProfilesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.TagProject:
    post:
      description: Adds tags to a project.
      operationId: TagProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.TagProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotFoundException'
          description: ProjectNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.UntagProject:
    post:
      description: Removes tags from a project.
      operationId: UntagProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.UntagProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotFoundException'
          description: ProjectNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.UpdateProject:
    post:
      description: Updates a project in AWS CodeStar.
      operationId: UpdateProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.UpdateProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotFoundException'
          description: ProjectNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.UpdateTeamMember:
    post:
      description: "Updates a team member's attributes in an AWS CodeStar project.\
        \ For example, you can change a team member's role in the project, or change\
        \ whether they have remote access to project resources."
      operationId: UpdateTeamMember
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.UpdateTeamMember
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamMemberRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTeamMemberResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotFoundException'
          description: ProjectNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidServiceRoleException'
          description: InvalidServiceRoleException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfigurationException'
          description: ProjectConfigurationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberNotFoundException'
          description: TeamMemberNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=CodeStar_20170419.UpdateUserProfile:
    post:
      description: 'Updates a user''s profile in AWS CodeStar. The user profile is
        not project-specific. Information in the user profile is displayed wherever
        the user''s information appears to other users in AWS CodeStar. '
      operationId: UpdateUserProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodeStar_20170419.UpdateUserProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileNotFoundException'
          description: UserProfileNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateTeamMemberResult:
      example:
        clientRequestToken: ""
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The user- or system-generated token from the initial request
              that can be used to repeat the request.
      type: object
    AssociateTeamMemberRequest:
      example:
        clientRequestToken: ""
        projectRole: ""
        remoteAccessAllowed: ""
        userArn: ""
        projectId: ""
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project to which you will add the IAM user.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: A user- or system-generated token that identifies the entity
              that requested the team member association to the project. This token
              can be used to repeat the request.
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) for the IAM user you want
              to add to the AWS CodeStar project.
        projectRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The AWS CodeStar project role that will apply to this user.
              This role determines what actions a user can take in an AWS CodeStar
              project.
        remoteAccessAllowed:
          allOf:
          - $ref: '#/components/schemas/RemoteAccessAllowed'
          - description: "Whether the team member is allowed to use an SSH public/private\
              \ key pair to remotely access project resources, for example Amazon\
              \ EC2 instances."
      required:
      - projectId
      - projectRole
      - userArn
      title: AssociateTeamMemberRequest
      type: object
    LimitExceededException: {}
    ProjectNotFoundException: {}
    TeamMemberAlreadyAssociatedException: {}
    ValidationException: {}
    InvalidServiceRoleException: {}
    ProjectConfigurationException: {}
    ConcurrentModificationException: {}
    CreateProjectResult:
      example:
        projectTemplateId: ""
        clientRequestToken: ""
        id: ""
        arn: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project.
        arn:
          allOf:
          - $ref: '#/components/schemas/ProjectArn'
          - description: The Amazon Resource Name (ARN) of the created project.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: A user- or system-generated token that identifies the entity
              that requested project creation.
        projectTemplateId:
          allOf:
          - $ref: '#/components/schemas/ProjectTemplateId'
          - description: Reserved for future use.
      required:
      - arn
      - id
      type: object
    CreateProjectRequest:
      example:
        sourceCode: ""
        clientRequestToken: ""
        name: ""
        description: ""
        id: ""
        toolchain:
          roleArn: ""
          stackParameters: ""
          source:
            s3:
              bucketName: ""
              bucketKey: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          - description: The display name for the project to be created in AWS CodeStar.
        id:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project to be created in AWS CodeStar.
        description:
          allOf:
          - $ref: '#/components/schemas/ProjectDescription'
          - description: "The description of the project, if any."
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: A user- or system-generated token that identifies the entity
              that requested project creation. This token can be used to repeat the
              request.
        sourceCode:
          allOf:
          - $ref: '#/components/schemas/SourceCode'
          - description: "A list of the Code objects submitted with the project request.\
              \ If this parameter is specified, the request must also include the\
              \ toolchain parameter."
        toolchain:
          $ref: '#/components/schemas/CreateProjectRequest_toolchain'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags created for the project.
      required:
      - id
      - name
      title: CreateProjectRequest
      type: object
    ProjectAlreadyExistsException: {}
    ProjectCreationFailedException: {}
    CreateUserProfileResult:
      example:
        sshPublicKey: ""
        emailAddress: ""
        displayName: ""
        createdTimestamp: ""
        userArn: ""
        lastModifiedTimestamp: ""
      properties:
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user in IAM.
        displayName:
          allOf:
          - $ref: '#/components/schemas/UserProfileDisplayName'
          - description: The name that is displayed as the friendly name for the user
              in AWS CodeStar.
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email address that is displayed as part of the user's
              profile in AWS CodeStar.
        sshPublicKey:
          allOf:
          - $ref: '#/components/schemas/SshPublicKey'
          - description: The SSH public key associated with the user in AWS CodeStar.
              This is the public portion of the public/private keypair the user can
              use to access project resources if a project owner allows the user remote
              access to those resources.
        createdTimestamp:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: "The date the user profile was created, in timestamp format."
        lastModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/LastModifiedTimestamp'
          - description: "The date the user profile was last modified, in timestamp\
              \ format."
      required:
      - userArn
      type: object
    CreateUserProfileRequest:
      example:
        sshPublicKey: ""
        emailAddress: ""
        displayName: ""
        userArn: ""
      properties:
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user in IAM.
        displayName:
          allOf:
          - $ref: '#/components/schemas/UserProfileDisplayName'
          - description: 'The name that will be displayed as the friendly name for
              the user in AWS CodeStar. '
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email address that will be displayed as part of the user's
              profile in AWS CodeStar.
        sshPublicKey:
          allOf:
          - $ref: '#/components/schemas/SshPublicKey'
          - description: "The SSH public key associated with the user in AWS CodeStar.\
              \ If a project owner allows the user remote access to project resources,\
              \ this public key will be used along with the user's private key for\
              \ SSH access."
      required:
      - displayName
      - emailAddress
      - userArn
      title: CreateUserProfileRequest
      type: object
    UserProfileAlreadyExistsException: {}
    DeleteProjectResult:
      example:
        projectArn: ""
        stackId: ""
      properties:
        stackId:
          allOf:
          - $ref: '#/components/schemas/StackId'
          - description: The ID of the primary stack in AWS CloudFormation that will
              be deleted as part of deleting the project and its resources.
        projectArn:
          allOf:
          - $ref: '#/components/schemas/ProjectArn'
          - description: The Amazon Resource Name (ARN) of the deleted project.
      type: object
    DeleteProjectRequest:
      example:
        clientRequestToken: ""
        deleteStack: ""
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project to be deleted in AWS CodeStar.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: 'A user- or system-generated token that identifies the entity
              that requested project deletion. This token can be used to repeat the
              request. '
        deleteStack:
          allOf:
          - $ref: '#/components/schemas/DeleteStack'
          - description: Whether to send a delete request for the primary stack in
              AWS CloudFormation originally used to generate the project and its resources.
              This option will delete all AWS resources for the project (except for
              any buckets in Amazon S3) as well as deleting the project itself. Recommended
              for most use cases.
      required:
      - id
      title: DeleteProjectRequest
      type: object
    DeleteUserProfileResult:
      example:
        userArn: ""
      properties:
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user deleted from AWS
              CodeStar.
      required:
      - userArn
      type: object
    DeleteUserProfileRequest:
      example:
        userArn: ""
      properties:
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user to delete from
              AWS CodeStar.
      required:
      - userArn
      title: DeleteUserProfileRequest
      type: object
    DescribeProjectResult:
      example:
        projectTemplateId: ""
        clientRequestToken: ""
        stackId: ""
        name: ""
        createdTimeStamp: ""
        description: ""
        id: ""
        arn: ""
        status:
          reason: ""
          state: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          - description: The display name for the project.
        id:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project.
        arn:
          allOf:
          - $ref: '#/components/schemas/ProjectArn'
          - description: The Amazon Resource Name (ARN) for the project.
        description:
          allOf:
          - $ref: '#/components/schemas/ProjectDescription'
          - description: "The description of the project, if any."
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: 'A user- or system-generated token that identifies the entity
              that requested project creation. '
        createdTimeStamp:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: "The date and time the project was created, in timestamp\
              \ format."
        stackId:
          allOf:
          - $ref: '#/components/schemas/StackId'
          - description: The ID of the primary stack in AWS CloudFormation used to
              generate resources for the project.
        projectTemplateId:
          allOf:
          - $ref: '#/components/schemas/ProjectTemplateId'
          - description: The ID for the AWS CodeStar project template used to create
              the project.
        status:
          $ref: '#/components/schemas/DescribeProjectResult_status'
      type: object
    DescribeProjectRequest:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project.
      required:
      - id
      title: DescribeProjectRequest
      type: object
    DescribeUserProfileResult:
      example:
        sshPublicKey: ""
        emailAddress: ""
        displayName: ""
        createdTimestamp: ""
        userArn: ""
        lastModifiedTimestamp: ""
      properties:
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user.
        displayName:
          allOf:
          - $ref: '#/components/schemas/UserProfileDisplayName'
          - description: "The display name shown for the user in AWS CodeStar projects.\
              \ For example, this could be set to both first and last name (\"Mary\
              \ Major\") or a single name (\"Mary\"). The display name is also used\
              \ to generate the initial icon associated with the user in AWS CodeStar\
              \ projects. If spaces are included in the display name, the first character\
              \ that appears after the space will be used as the second character\
              \ in the user initial icon. The initial icon displays a maximum of two\
              \ characters, so a display name with more than one space (for example\
              \ \"Mary Jane Major\") would generate an initial icon using the first\
              \ character and the first character after the space (\"MJ\", not \"\
              MM\")."
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email address for the user. Optional.
        sshPublicKey:
          allOf:
          - $ref: '#/components/schemas/SshPublicKey'
          - description: "The SSH public key associated with the user. This SSH public\
              \ key is associated with the user profile, and can be used in conjunction\
              \ with the associated private key for access to project resources, such\
              \ as Amazon EC2 instances, if a project owner grants remote access to\
              \ those resources."
        createdTimestamp:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: "The date and time when the user profile was created in AWS\
              \ CodeStar, in timestamp format."
        lastModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/LastModifiedTimestamp'
          - description: "The date and time when the user profile was last modified,\
              \ in timestamp format."
      required:
      - createdTimestamp
      - lastModifiedTimestamp
      - userArn
      type: object
    DescribeUserProfileRequest:
      example:
        userArn: ""
      properties:
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user.
      required:
      - userArn
      title: DescribeUserProfileRequest
      type: object
    UserProfileNotFoundException: {}
    DisassociateTeamMemberResult:
      properties: {}
      type: object
    DisassociateTeamMemberRequest:
      example:
        userArn: ""
        projectId: ""
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the AWS CodeStar project from which you want to
              remove a team member.
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the IAM user or group whom
              you want to remove from the project.
      required:
      - projectId
      - userArn
      title: DisassociateTeamMemberRequest
      type: object
    ListProjectsResult:
      example:
        projects: ""
        nextToken: ""
      properties:
        projects:
          allOf:
          - $ref: '#/components/schemas/ProjectsList'
          - description: A list of projects.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The continuation token to use when requesting the next set\
              \ of results, if there are more results to be returned."
      required:
      - projects
      type: object
    ListProjectsRequest:
      example:
        nextToken: ""
        maxResults: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The continuation token to be used to return the next set\
              \ of results, if the results cannot be returned in one response."
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum amount of data that can be contained in a single
              set of results.
      title: ListProjectsRequest
      type: object
    InvalidNextTokenException: {}
    ListResourcesResult:
      example:
        nextToken: ""
        resources: ""
      properties:
        resources:
          allOf:
          - $ref: '#/components/schemas/ResourcesResult'
          - description: 'An array of resources associated with the project. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The continuation token to use when requesting the next set\
              \ of results, if there are more results to be returned."
      type: object
    ListResourcesRequest:
      example:
        nextToken: ""
        maxResults: ""
        projectId: ""
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The continuation token for the next set of results, if the\
              \ results cannot be returned in one response."
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum amount of data that can be contained in a single
              set of results.
      required:
      - projectId
      title: ListResourcesRequest
      type: object
    ListTagsForProjectResult:
      example:
        nextToken: ""
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags for the project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Reserved for future use.
      type: object
    ListTagsForProjectRequest:
      example:
        nextToken: ""
        maxResults: ""
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project to get tags for.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Reserved for future use.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: Reserved for future use.
      required:
      - id
      title: ListTagsForProjectRequest
      type: object
    ListTeamMembersResult:
      example:
        nextToken: ""
        teamMembers: ""
      properties:
        teamMembers:
          allOf:
          - $ref: '#/components/schemas/TeamMemberResult'
          - description: A list of team member objects for the project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The continuation token to use when requesting the next set\
              \ of results, if there are more results to be returned."
      required:
      - teamMembers
      type: object
    ListTeamMembersRequest:
      example:
        nextToken: ""
        maxResults: ""
        projectId: ""
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project for which you want to list team members.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The continuation token for the next set of results, if the\
              \ results cannot be returned in one response."
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of team members you want returned in a
              response.
      required:
      - projectId
      title: ListTeamMembersRequest
      type: object
    ListUserProfilesResult:
      example:
        nextToken: ""
        userProfiles: ""
      properties:
        userProfiles:
          allOf:
          - $ref: '#/components/schemas/UserProfilesList'
          - description: All the user profiles configured in AWS CodeStar for an AWS
              account.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The continuation token to use when requesting the next set\
              \ of results, if there are more results to be returned."
      required:
      - userProfiles
      type: object
    ListUserProfilesRequest:
      example:
        nextToken: ""
        maxResults: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The continuation token for the next set of results, if the\
              \ results cannot be returned in one response."
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a response.
      title: ListUserProfilesRequest
      type: object
    TagProjectResult:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags for the project.
      type: object
    TagProjectRequest:
      example:
        id: ""
        tags: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project you want to add a tag to.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags you want to add to the project.
      required:
      - id
      - tags
      title: TagProjectRequest
      type: object
    UntagProjectResult:
      properties: {}
      type: object
    UntagProjectRequest:
      example:
        id: ""
        tags: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project to remove tags from.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          - description: The tags to remove from the project.
      required:
      - id
      - tags
      title: UntagProjectRequest
      type: object
    UpdateProjectResult:
      properties: {}
      type: object
    UpdateProjectRequest:
      example:
        name: ""
        description: ""
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project you want to update.
        name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          - description: The name of the project you want to update.
        description:
          allOf:
          - $ref: '#/components/schemas/ProjectDescription'
          - description: "The description of the project, if any."
      required:
      - id
      title: UpdateProjectRequest
      type: object
    UpdateTeamMemberResult:
      example:
        projectRole: ""
        remoteAccessAllowed: ""
        userArn: ""
      properties:
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user whose team membership
              attributes were updated.
        projectRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The project role granted to the user.
        remoteAccessAllowed:
          allOf:
          - $ref: '#/components/schemas/RemoteAccessAllowed'
          - description: Whether a team member is allowed to remotely access project
              resources using the SSH public key associated with the user's profile.
      type: object
    UpdateTeamMemberRequest:
      example:
        projectRole: ""
        remoteAccessAllowed: ""
        userArn: ""
        projectId: ""
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project.
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user for whom you want
              to change team membership attributes.
        projectRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "The role assigned to the user in the project. Project roles\
              \ have different levels of access. For more information, see <a href=\"\
              http://docs.aws.amazon.com/codestar/latest/userguide/working-with-teams.html\"\
              >Working with Teams</a> in the <i>AWS CodeStar User Guide</i>."
        remoteAccessAllowed:
          allOf:
          - $ref: '#/components/schemas/RemoteAccessAllowed'
          - description: "Whether a team member is allowed to remotely access project\
              \ resources using the SSH public key associated with the user's profile.\
              \ Even if this is set to True, the user must associate a public key\
              \ with their profile before the user can access resources."
      required:
      - projectId
      - userArn
      title: UpdateTeamMemberRequest
      type: object
    TeamMemberNotFoundException: {}
    UpdateUserProfileResult:
      example:
        sshPublicKey: ""
        emailAddress: ""
        displayName: ""
        createdTimestamp: ""
        userArn: ""
        lastModifiedTimestamp: ""
      properties:
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user in IAM.
        displayName:
          allOf:
          - $ref: '#/components/schemas/UserProfileDisplayName'
          - description: The name that is displayed as the friendly name for the user
              in AWS CodeStar.
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email address that is displayed as part of the user's
              profile in AWS CodeStar.
        sshPublicKey:
          allOf:
          - $ref: '#/components/schemas/SshPublicKey'
          - description: The SSH public key associated with the user in AWS CodeStar.
              This is the public portion of the public/private keypair the user can
              use to access project resources if a project owner allows the user remote
              access to those resources.
        createdTimestamp:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: "The date the user profile was created, in timestamp format."
        lastModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/LastModifiedTimestamp'
          - description: "The date the user profile was last modified, in timestamp\
              \ format."
      required:
      - userArn
      type: object
    UpdateUserProfileRequest:
      example:
        sshPublicKey: ""
        emailAddress: ""
        displayName: ""
        userArn: ""
      properties:
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The name that will be displayed as the friendly name for
              the user in AWS CodeStar.
        displayName:
          allOf:
          - $ref: '#/components/schemas/UserProfileDisplayName'
          - description: The name that is displayed as the friendly name for the user
              in AWS CodeStar.
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email address that is displayed as part of the user's
              profile in AWS CodeStar.
        sshPublicKey:
          allOf:
          - $ref: '#/components/schemas/SshPublicKey'
          - description: "The SSH public key associated with the user in AWS CodeStar.\
              \ If a project owner allows the user remote access to project resources,\
              \ this public key will be used along with the user's private key for\
              \ SSH access."
      required:
      - userArn
      title: UpdateUserProfileRequest
      type: object
    ProjectId:
      maxLength: 15
      minLength: 2
      pattern: "^[a-z][a-z0-9-]+$"
      type: string
    ClientRequestToken:
      maxLength: 256
      minLength: 1
      pattern: "^[\\w:/-]+$"
      type: string
    UserArn:
      maxLength: 95
      minLength: 32
      pattern: "^arn:aws:iam::\\d{12}:user(?:(\\u002F)|(\\u002F[\\u0021-\\u007E]+\\\
        u002F))[\\w+=,.@-]+$"
      type: string
    Role:
      pattern: ^(Owner|Viewer|Contributor)$
      type: string
    RemoteAccessAllowed:
      type: boolean
    BucketKey:
      type: string
    BucketName:
      maxLength: 63
      minLength: 3
      type: string
    CodeSource:
      description: The location where the source code files provided with the project
        request are stored. AWS CodeStar retrieves the files during project creation.
      properties:
        s3:
          $ref: '#/components/schemas/CodeSource_s3'
      required:
      - s3
      type: object
    CodeDestination:
      description: "The repository to be created in AWS CodeStar. Valid values are\
        \ AWS CodeCommit or GitHub. After AWS CodeStar provisions the new repository,\
        \ the source code files provided with the project request are placed in the\
        \ repository."
      properties:
        codeCommit:
          $ref: '#/components/schemas/CodeDestination_codeCommit'
        gitHub:
          $ref: '#/components/schemas/CodeDestination_gitHub'
      type: object
    Code:
      description: Location and destination information about the source code files
        provided with the project request. The source code is uploaded to the new
        project source repository after project creation.
      properties:
        source:
          $ref: '#/components/schemas/Code_source'
        destination:
          $ref: '#/components/schemas/Code_destination'
      required:
      - destination
      - source
      type: object
    RepositoryName:
      maxLength: 100
      minLength: 1
      pattern: "^\\S[\\w.-]*$"
      type: string
    CodeCommitCodeDestination:
      description: Information about the AWS CodeCommit repository to be created in
        AWS CodeStar. This is where the source code files provided with the project
        request will be uploaded after project creation.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The name of the AWS CodeCommit repository to be created in
              AWS CodeStar.
      required:
      - name
      type: object
    GitHubCodeDestination:
      description: Information about the GitHub repository to be created in AWS CodeStar.
        This is where the source code files provided with the project request will
        be uploaded after project creation.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: Name of the GitHub repository to be created in AWS CodeStar.
        description:
          allOf:
          - $ref: '#/components/schemas/RepositoryDescription'
          - description: Description for the GitHub repository to be created in AWS
              CodeStar. This description displays in GitHub after the repository is
              created.
        type:
          allOf:
          - $ref: '#/components/schemas/RepositoryType'
          - description: The type of GitHub repository to be created in AWS CodeStar.
              Valid values are User or Organization.
        owner:
          allOf:
          - $ref: '#/components/schemas/RepositoryOwner'
          - description: "The GitHub username for the owner of the GitHub repository\
              \ to be created in AWS CodeStar. If this repository should be owned\
              \ by a GitHub organization, provide its name."
        privateRepository:
          allOf:
          - $ref: '#/components/schemas/RepositoryIsPrivate'
          - description: Whether the GitHub repository is to be a private repository.
        issuesEnabled:
          allOf:
          - $ref: '#/components/schemas/RepositoryEnableIssues'
          - description: Whether to enable issues for the GitHub repository.
        token:
          allOf:
          - $ref: '#/components/schemas/GitHubPersonalToken'
          - description: The GitHub user's personal access token for the GitHub repository.
      required:
      - issuesEnabled
      - name
      - owner
      - privateRepository
      - token
      - type
      type: object
    S3Location:
      description: The Amazon S3 location where the source code files provided with
        the project request are stored.
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The Amazon S3 bucket name where the source code files provided
              with the project request are stored.
        bucketKey:
          allOf:
          - $ref: '#/components/schemas/BucketKey'
          - description: The Amazon S3 object key where the source code files provided
              with the project request are stored.
      type: object
    ProjectName:
      format: password
      maxLength: 100
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    ProjectDescription:
      format: password
      maxLength: 1024
      pattern: ^$|^\S(.*\S)?$
      type: string
    SourceCode:
      items:
        $ref: '#/components/schemas/Code'
      type: array
    Toolchain:
      description: The toolchain template file provided with the project request.
        AWS CodeStar uses the template to provision the toolchain stack in AWS CloudFormation.
      properties:
        source:
          $ref: '#/components/schemas/Toolchain_source'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The service role ARN for AWS CodeStar to use for the toolchain
              template during stack provisioning.
        stackParameters:
          allOf:
          - $ref: '#/components/schemas/TemplateParameterMap'
          - description: "The list of parameter overrides to be passed into the toolchain\
              \ template during stack provisioning, if any."
      required:
      - source
      type: object
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    ProjectArn:
      pattern: "^arn:aws[^:\\s]*:codestar:[^:\\s]+:[0-9]{12}:project\\/[a-z]([a-z0-9|-])+$"
      type: string
    ProjectTemplateId:
      minLength: 1
      pattern: "^arn:aws[^:\\s]{0,5}:codestar:[^:\\s]+::project-template(\\/(github|codecommit))?\\\
        /[a-z0-9-]+$"
      type: string
    UserProfileDisplayName:
      format: password
      maxLength: 64
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    Email:
      format: password
      maxLength: 128
      minLength: 3
      pattern: "^[\\w-.+]+@[\\w-.+]+$"
      type: string
    SshPublicKey:
      maxLength: 16384
      pattern: "^[\\t\\r\\n\\u0020-\\u00FF]*$"
      type: string
    CreatedTimestamp:
      format: date-time
      type: string
    LastModifiedTimestamp:
      format: date-time
      type: string
    DeleteStack:
      type: boolean
    StackId:
      pattern: "^arn:aws[^:\\s]*:cloudformation:[^:\\s]+:[0-9]{12}:stack\\/[^:\\s]+\\\
        /[^:\\s]+$"
      type: string
    ProjectStatus:
      description: An indication of whether a project creation or deletion is failed
        or successful.
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: The phase of completion for a project creation or deletion.
        reason:
          allOf:
          - $ref: '#/components/schemas/Reason'
          - description: "In the case of a project creation or deletion failure, a\
              \ reason for the failure."
      required:
      - state
      type: object
    RepositoryDescription:
      maxLength: 1000
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    RepositoryType:
      pattern: ^(user|organization|User|Organization)$
      type: string
    RepositoryOwner:
      maxLength: 100
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    RepositoryIsPrivate:
      type: boolean
    RepositoryEnableIssues:
      type: boolean
    GitHubPersonalToken:
      format: password
      minLength: 1
      type: string
    PaginationToken:
      maxLength: 512
      minLength: 1
      pattern: "^[\\w/+=]+$"
      type: string
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ProjectsList:
      items:
        $ref: '#/components/schemas/ProjectSummary'
      type: array
    ResourcesResult:
      items:
        $ref: '#/components/schemas/Resource'
      type: array
    TeamMemberResult:
      items:
        $ref: '#/components/schemas/TeamMember'
      type: array
    UserProfilesList:
      items:
        $ref: '#/components/schemas/UserProfileSummary'
      type: array
    State:
      pattern: ^(CreateInProgress|CreateComplete|CreateFailed|DeleteComplete|DeleteFailed|DeleteInProgress|UpdateComplete|UpdateInProgress|UpdateFailed|Unknown)$
      type: string
    Reason:
      maxLength: 1024
      pattern: ^$|^\S(.*\S)?$
      type: string
    ProjectSummary:
      description: Information about the metadata for a project.
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ProjectId'
          - description: The ID of the project.
        projectArn:
          allOf:
          - $ref: '#/components/schemas/ProjectArn'
          - description: The Amazon Resource Name (ARN) of the project.
      type: object
    ResourceId:
      minLength: 11
      pattern: ^arn\:aws\:\S.*\:.*
      type: string
    Resource:
      description: Information about a resource for a project.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The Amazon Resource Name (ARN) of the resource.
      required:
      - id
      type: object
    RoleArn:
      maxLength: 1224
      minLength: 1
      type: string
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagValue:
      maxLength: 256
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    TeamMember:
      description: Information about a team member in a project.
      properties:
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user in IAM.
        projectRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "The role assigned to the user in the project. Project roles\
              \ have different levels of access. For more information, see <a href=\"\
              http://docs.aws.amazon.com/codestar/latest/userguide/working-with-teams.html\"\
              >Working with Teams</a> in the <i>AWS CodeStar User Guide</i>. "
        remoteAccessAllowed:
          allOf:
          - $ref: '#/components/schemas/RemoteAccessAllowed'
          - description: Whether the user is allowed to remotely access project resources
              using an SSH public/private key pair.
      required:
      - projectRole
      - userArn
      type: object
    TemplateParameterKey:
      maxLength: 30
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    TemplateParameterValue:
      format: password
      maxLength: 100
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    TemplateParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/TemplateParameterValue'
      maxProperties: 25
      type: object
    ToolchainSource:
      description: The Amazon S3 location where the toolchain template file provided
        with the project request is stored. AWS CodeStar retrieves the file during
        project creation.
      properties:
        s3:
          $ref: '#/components/schemas/ToolchainSource_s3'
      required:
      - s3
      type: object
    UserProfileSummary:
      description: Information about a user's profile in AWS CodeStar.
      properties:
        userArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user in IAM.
        displayName:
          allOf:
          - $ref: '#/components/schemas/UserProfileDisplayName'
          - description: "The display name of a user in AWS CodeStar. For example,\
              \ this could be set to both first and last name (\"Mary Major\") or\
              \ a single name (\"Mary\"). The display name is also used to generate\
              \ the initial icon associated with the user in AWS CodeStar projects.\
              \ If spaces are included in the display name, the first character that\
              \ appears after the space will be used as the second character in the\
              \ user initial icon. The initial icon displays a maximum of two characters,\
              \ so a display name with more than one space (for example \"Mary Jane\
              \ Major\") would generate an initial icon using the first character\
              \ and the first character after the space (\"MJ\", not \"MM\")."
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email address associated with the user.
        sshPublicKey:
          allOf:
          - $ref: '#/components/schemas/SshPublicKey'
          - description: "The SSH public key associated with the user in AWS CodeStar.\
              \ If a project owner allows the user remote access to project resources,\
              \ this public key will be used along with the user's private key for\
              \ SSH access."
      type: object
    CreateProjectRequest_toolchain:
      allOf:
      - $ref: '#/components/schemas/Toolchain'
      - description: "The name of the toolchain template file submitted with the project\
          \ request. If this parameter is specified, the request must also include\
          \ the sourceCode parameter."
      example:
        roleArn: ""
        stackParameters: ""
        source:
          s3:
            bucketName: ""
            bucketKey: ""
    DescribeProjectResult_status:
      allOf:
      - $ref: '#/components/schemas/ProjectStatus'
      - description: The project creation or deletion status.
      example:
        reason: ""
        state: ""
    CodeSource_s3:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: 'Information about the Amazon S3 location where the source code
          files provided with the project request are stored. '
    CodeDestination_codeCommit:
      allOf:
      - $ref: '#/components/schemas/CodeCommitCodeDestination'
      - description: Information about the AWS CodeCommit repository to be created
          in AWS CodeStar. This is where the source code files provided with the project
          request will be uploaded after project creation.
    CodeDestination_gitHub:
      allOf:
      - $ref: '#/components/schemas/GitHubCodeDestination'
      - description: Information about the GitHub repository to be created in AWS
          CodeStar. This is where the source code files provided with the project
          request will be uploaded after project creation.
    Code_source:
      allOf:
      - $ref: '#/components/schemas/CodeSource'
      - description: The location where the source code files provided with the project
          request are stored. AWS CodeStar retrieves the files during project creation.
    Code_destination:
      allOf:
      - $ref: '#/components/schemas/CodeDestination'
      - description: "The repository to be created in AWS CodeStar. Valid values are\
          \ AWS CodeCommit or GitHub. After AWS CodeStar provisions the new repository,\
          \ the source code files provided with the project request are placed in\
          \ the repository."
    Toolchain_source:
      allOf:
      - $ref: '#/components/schemas/ToolchainSource'
      - description: The Amazon S3 location where the toolchain template file provided
          with the project request is stored. AWS CodeStar retrieves the file during
          project creation.
      example:
        s3:
          bucketName: ""
          bucketKey: ""
    ToolchainSource_s3:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: The Amazon S3 bucket where the toolchain template file provided
          with the project request is stored.
      example:
        bucketName: ""
        bucketKey: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

