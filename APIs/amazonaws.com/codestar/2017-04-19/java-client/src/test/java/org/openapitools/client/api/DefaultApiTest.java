/*
 * AWS CodeStar
 * <fullname>AWS CodeStar</fullname> <p>This is the API reference for AWS CodeStar. This reference provides descriptions of the operations and data types for the AWS CodeStar API along with usage examples.</p> <p>You can use the AWS CodeStar API to work with:</p> <p>Projects and their resources, by calling the following:</p> <ul> <li> <p> <code>DeleteProject</code>, which deletes a project.</p> </li> <li> <p> <code>DescribeProject</code>, which lists the attributes of a project.</p> </li> <li> <p> <code>ListProjects</code>, which lists all projects associated with your AWS account.</p> </li> <li> <p> <code>ListResources</code>, which lists the resources associated with a project.</p> </li> <li> <p> <code>ListTagsForProject</code>, which lists the tags associated with a project.</p> </li> <li> <p> <code>TagProject</code>, which adds tags to a project.</p> </li> <li> <p> <code>UntagProject</code>, which removes tags from a project.</p> </li> <li> <p> <code>UpdateProject</code>, which updates the attributes of a project.</p> </li> </ul> <p>Teams and team members, by calling the following:</p> <ul> <li> <p> <code>AssociateTeamMember</code>, which adds an IAM user to the team for a project.</p> </li> <li> <p> <code>DisassociateTeamMember</code>, which removes an IAM user from the team for a project.</p> </li> <li> <p> <code>ListTeamMembers</code>, which lists all the IAM users in the team for a project, including their roles and attributes.</p> </li> <li> <p> <code>UpdateTeamMember</code>, which updates a team member's attributes in a project.</p> </li> </ul> <p>Users, by calling the following:</p> <ul> <li> <p> <code>CreateUserProfile</code>, which creates a user profile that contains data associated with the user across all projects.</p> </li> <li> <p> <code>DeleteUserProfile</code>, which deletes all user profile information across all projects.</p> </li> <li> <p> <code>DescribeUserProfile</code>, which describes the profile of a user.</p> </li> <li> <p> <code>ListUserProfiles</code>, which lists all user profiles.</p> </li> <li> <p> <code>UpdateUserProfile</code>, which updates the profile for a user.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AssociateTeamMemberRequest;
import org.openapitools.client.model.AssociateTeamMemberResult;
import org.openapitools.client.model.CreateProjectRequest;
import org.openapitools.client.model.CreateProjectResult;
import org.openapitools.client.model.CreateUserProfileRequest;
import org.openapitools.client.model.CreateUserProfileResult;
import org.openapitools.client.model.DeleteProjectRequest;
import org.openapitools.client.model.DeleteProjectResult;
import org.openapitools.client.model.DeleteUserProfileRequest;
import org.openapitools.client.model.DeleteUserProfileResult;
import org.openapitools.client.model.DescribeProjectRequest;
import org.openapitools.client.model.DescribeProjectResult;
import org.openapitools.client.model.DescribeUserProfileRequest;
import org.openapitools.client.model.DescribeUserProfileResult;
import org.openapitools.client.model.DisassociateTeamMemberRequest;
import org.openapitools.client.model.ListProjectsRequest;
import org.openapitools.client.model.ListProjectsResult;
import org.openapitools.client.model.ListResourcesRequest;
import org.openapitools.client.model.ListResourcesResult;
import org.openapitools.client.model.ListTagsForProjectRequest;
import org.openapitools.client.model.ListTagsForProjectResult;
import org.openapitools.client.model.ListTeamMembersRequest;
import org.openapitools.client.model.ListTeamMembersResult;
import org.openapitools.client.model.ListUserProfilesRequest;
import org.openapitools.client.model.ListUserProfilesResult;
import org.openapitools.client.model.TagProjectRequest;
import org.openapitools.client.model.TagProjectResult;
import org.openapitools.client.model.UntagProjectRequest;
import org.openapitools.client.model.UpdateProjectRequest;
import org.openapitools.client.model.UpdateTeamMemberRequest;
import org.openapitools.client.model.UpdateTeamMemberResult;
import org.openapitools.client.model.UpdateUserProfileRequest;
import org.openapitools.client.model.UpdateUserProfileResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Adds an IAM user to the team for an AWS CodeStar project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void associateTeamMemberTest() throws ApiException {
        String xAmzTarget = null;
        AssociateTeamMemberRequest associateTeamMemberRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        AssociateTeamMemberResult response = api.associateTeamMember(xAmzTarget, associateTeamMemberRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a project, including project resources. This action creates a project based on a submitted project request. A set of source code files and a toolchain template file can be included with the project request. If these are not provided, an empty project is created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProjectTest() throws ApiException {
        String xAmzTarget = null;
        CreateProjectRequest createProjectRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateProjectResult response = api.createProject(xAmzTarget, createProjectRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a profile for a user that includes user preferences, such as the display name and email address assocciated with the user, in AWS CodeStar. The user profile is not project-specific. Information in the user profile is displayed wherever the user&#39;s information appears to other users in AWS CodeStar.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUserProfileTest() throws ApiException {
        String xAmzTarget = null;
        CreateUserProfileRequest createUserProfileRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateUserProfileResult response = api.createUserProfile(xAmzTarget, createUserProfileRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a project, including project resources. Does not delete users associated with the project, but does delete the IAM roles that allowed access to the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProjectTest() throws ApiException {
        String xAmzTarget = null;
        DeleteProjectRequest deleteProjectRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteProjectResult response = api.deleteProject(xAmzTarget, deleteProjectRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a user profile in AWS CodeStar, including all personal preference data associated with that profile, such as display name and email address. It does not delete the history of that user, for example the history of commits made by that user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserProfileTest() throws ApiException {
        String xAmzTarget = null;
        DeleteUserProfileRequest deleteUserProfileRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteUserProfileResult response = api.deleteUserProfile(xAmzTarget, deleteUserProfileRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a project and its resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeProjectTest() throws ApiException {
        String xAmzTarget = null;
        DescribeProjectRequest describeProjectRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeProjectResult response = api.describeProject(xAmzTarget, describeProjectRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a user in AWS CodeStar and the user attributes across all projects.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeUserProfileTest() throws ApiException {
        String xAmzTarget = null;
        DescribeUserProfileRequest describeUserProfileRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeUserProfileResult response = api.describeUserProfile(xAmzTarget, describeUserProfileRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes a user from a project. Removing a user from a project also removes the IAM policies from that user that allowed access to the project and its resources. Disassociating a team member does not remove that user&#39;s profile from AWS CodeStar. It does not remove the user from IAM.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disassociateTeamMemberTest() throws ApiException {
        String xAmzTarget = null;
        DisassociateTeamMemberRequest disassociateTeamMemberRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.disassociateTeamMember(xAmzTarget, disassociateTeamMemberRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists all projects in AWS CodeStar associated with your AWS account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProjectsTest() throws ApiException {
        String xAmzTarget = null;
        ListProjectsRequest listProjectsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListProjectsResult response = api.listProjects(xAmzTarget, listProjectsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists resources associated with a project in AWS CodeStar.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listResourcesTest() throws ApiException {
        String xAmzTarget = null;
        ListResourcesRequest listResourcesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListResourcesResult response = api.listResources(xAmzTarget, listResourcesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the tags for a project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForProjectTest() throws ApiException {
        String xAmzTarget = null;
        ListTagsForProjectRequest listTagsForProjectRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForProjectResult response = api.listTagsForProject(xAmzTarget, listTagsForProjectRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists all team members associated with a project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTeamMembersTest() throws ApiException {
        String xAmzTarget = null;
        ListTeamMembersRequest listTeamMembersRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTeamMembersResult response = api.listTeamMembers(xAmzTarget, listTeamMembersRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists all the user profiles configured for your AWS account in AWS CodeStar.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listUserProfilesTest() throws ApiException {
        String xAmzTarget = null;
        ListUserProfilesRequest listUserProfilesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListUserProfilesResult response = api.listUserProfiles(xAmzTarget, listUserProfilesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Adds tags to a project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagProjectTest() throws ApiException {
        String xAmzTarget = null;
        TagProjectRequest tagProjectRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        TagProjectResult response = api.tagProject(xAmzTarget, tagProjectRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes tags from a project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagProjectTest() throws ApiException {
        String xAmzTarget = null;
        UntagProjectRequest untagProjectRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagProject(xAmzTarget, untagProjectRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a project in AWS CodeStar.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProjectTest() throws ApiException {
        String xAmzTarget = null;
        UpdateProjectRequest updateProjectRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.updateProject(xAmzTarget, updateProjectRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a team member&#39;s attributes in an AWS CodeStar project. For example, you can change a team member&#39;s role in the project, or change whether they have remote access to project resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTeamMemberTest() throws ApiException {
        String xAmzTarget = null;
        UpdateTeamMemberRequest updateTeamMemberRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateTeamMemberResult response = api.updateTeamMember(xAmzTarget, updateTeamMemberRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a user&#39;s profile in AWS CodeStar. The user profile is not project-specific. Information in the user profile is displayed wherever the user&#39;s information appears to other users in AWS CodeStar. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUserProfileTest() throws ApiException {
        String xAmzTarget = null;
        UpdateUserProfileRequest updateUserProfileRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateUserProfileResult response = api.updateUserProfile(xAmzTarget, updateUserProfileRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
