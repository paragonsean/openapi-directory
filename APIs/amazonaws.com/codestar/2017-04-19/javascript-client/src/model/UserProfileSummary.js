/**
 * AWS CodeStar
 * <fullname>AWS CodeStar</fullname> <p>This is the API reference for AWS CodeStar. This reference provides descriptions of the operations and data types for the AWS CodeStar API along with usage examples.</p> <p>You can use the AWS CodeStar API to work with:</p> <p>Projects and their resources, by calling the following:</p> <ul> <li> <p> <code>DeleteProject</code>, which deletes a project.</p> </li> <li> <p> <code>DescribeProject</code>, which lists the attributes of a project.</p> </li> <li> <p> <code>ListProjects</code>, which lists all projects associated with your AWS account.</p> </li> <li> <p> <code>ListResources</code>, which lists the resources associated with a project.</p> </li> <li> <p> <code>ListTagsForProject</code>, which lists the tags associated with a project.</p> </li> <li> <p> <code>TagProject</code>, which adds tags to a project.</p> </li> <li> <p> <code>UntagProject</code>, which removes tags from a project.</p> </li> <li> <p> <code>UpdateProject</code>, which updates the attributes of a project.</p> </li> </ul> <p>Teams and team members, by calling the following:</p> <ul> <li> <p> <code>AssociateTeamMember</code>, which adds an IAM user to the team for a project.</p> </li> <li> <p> <code>DisassociateTeamMember</code>, which removes an IAM user from the team for a project.</p> </li> <li> <p> <code>ListTeamMembers</code>, which lists all the IAM users in the team for a project, including their roles and attributes.</p> </li> <li> <p> <code>UpdateTeamMember</code>, which updates a team member's attributes in a project.</p> </li> </ul> <p>Users, by calling the following:</p> <ul> <li> <p> <code>CreateUserProfile</code>, which creates a user profile that contains data associated with the user across all projects.</p> </li> <li> <p> <code>DeleteUserProfile</code>, which deletes all user profile information across all projects.</p> </li> <li> <p> <code>DescribeUserProfile</code>, which describes the profile of a user.</p> </li> <li> <p> <code>ListUserProfiles</code>, which lists all user profiles.</p> </li> <li> <p> <code>UpdateUserProfile</code>, which updates the profile for a user.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserProfileSummary model module.
 * @module model/UserProfileSummary
 * @version 2017-04-19
 */
class UserProfileSummary {
    /**
     * Constructs a new <code>UserProfileSummary</code>.
     * Information about a user&#39;s profile in AWS CodeStar.
     * @alias module:model/UserProfileSummary
     */
    constructor() { 
        
        UserProfileSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserProfileSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserProfileSummary} obj Optional instance to populate.
     * @return {module:model/UserProfileSummary} The populated <code>UserProfileSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserProfileSummary();

            if (data.hasOwnProperty('userArn')) {
                obj['userArn'] = ApiClient.convertToType(data['userArn'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('emailAddress')) {
                obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
            }
            if (data.hasOwnProperty('sshPublicKey')) {
                obj['sshPublicKey'] = ApiClient.convertToType(data['sshPublicKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserProfileSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserProfileSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `userArn`
        if (data['userArn']) { // data not null
          String.validateJSON(data['userArn']);
        }
        // validate the optional field `displayName`
        if (data['displayName']) { // data not null
          String.validateJSON(data['displayName']);
        }
        // validate the optional field `emailAddress`
        if (data['emailAddress']) { // data not null
          String.validateJSON(data['emailAddress']);
        }
        // validate the optional field `sshPublicKey`
        if (data['sshPublicKey']) { // data not null
          String.validateJSON(data['sshPublicKey']);
        }

        return true;
    }


}



/**
 * @member {String} userArn
 */
UserProfileSummary.prototype['userArn'] = undefined;

/**
 * @member {String} displayName
 */
UserProfileSummary.prototype['displayName'] = undefined;

/**
 * @member {String} emailAddress
 */
UserProfileSummary.prototype['emailAddress'] = undefined;

/**
 * @member {String} sshPublicKey
 */
UserProfileSummary.prototype['sshPublicKey'] = undefined;






export default UserProfileSummary;

