# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateTeamMemberResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_arn: str=None, project_role: str=None, remote_access_allowed: bool=None):
        """UpdateTeamMemberResult - a model defined in OpenAPI

        :param user_arn: The user_arn of this UpdateTeamMemberResult.
        :param project_role: The project_role of this UpdateTeamMemberResult.
        :param remote_access_allowed: The remote_access_allowed of this UpdateTeamMemberResult.
        """
        self.openapi_types = {
            'user_arn': str,
            'project_role': str,
            'remote_access_allowed': bool
        }

        self.attribute_map = {
            'user_arn': 'userArn',
            'project_role': 'projectRole',
            'remote_access_allowed': 'remoteAccessAllowed'
        }

        self._user_arn = user_arn
        self._project_role = project_role
        self._remote_access_allowed = remote_access_allowed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTeamMemberResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTeamMemberResult of this UpdateTeamMemberResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_arn(self):
        """Gets the user_arn of this UpdateTeamMemberResult.


        :return: The user_arn of this UpdateTeamMemberResult.
        :rtype: str
        """
        return self._user_arn

    @user_arn.setter
    def user_arn(self, user_arn):
        """Sets the user_arn of this UpdateTeamMemberResult.


        :param user_arn: The user_arn of this UpdateTeamMemberResult.
        :type user_arn: str
        """

        self._user_arn = user_arn

    @property
    def project_role(self):
        """Gets the project_role of this UpdateTeamMemberResult.


        :return: The project_role of this UpdateTeamMemberResult.
        :rtype: str
        """
        return self._project_role

    @project_role.setter
    def project_role(self, project_role):
        """Sets the project_role of this UpdateTeamMemberResult.


        :param project_role: The project_role of this UpdateTeamMemberResult.
        :type project_role: str
        """

        self._project_role = project_role

    @property
    def remote_access_allowed(self):
        """Gets the remote_access_allowed of this UpdateTeamMemberResult.


        :return: The remote_access_allowed of this UpdateTeamMemberResult.
        :rtype: bool
        """
        return self._remote_access_allowed

    @remote_access_allowed.setter
    def remote_access_allowed(self, remote_access_allowed):
        """Sets the remote_access_allowed of this UpdateTeamMemberResult.


        :param remote_access_allowed: The remote_access_allowed of this UpdateTeamMemberResult.
        :type remote_access_allowed: bool
        """

        self._remote_access_allowed = remote_access_allowed
