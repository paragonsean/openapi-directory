# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateUserProfileRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_arn: str=None, display_name: str=None, email_address: str=None, ssh_public_key: str=None):
        """UpdateUserProfileRequest - a model defined in OpenAPI

        :param user_arn: The user_arn of this UpdateUserProfileRequest.
        :param display_name: The display_name of this UpdateUserProfileRequest.
        :param email_address: The email_address of this UpdateUserProfileRequest.
        :param ssh_public_key: The ssh_public_key of this UpdateUserProfileRequest.
        """
        self.openapi_types = {
            'user_arn': str,
            'display_name': str,
            'email_address': str,
            'ssh_public_key': str
        }

        self.attribute_map = {
            'user_arn': 'userArn',
            'display_name': 'displayName',
            'email_address': 'emailAddress',
            'ssh_public_key': 'sshPublicKey'
        }

        self._user_arn = user_arn
        self._display_name = display_name
        self._email_address = email_address
        self._ssh_public_key = ssh_public_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateUserProfileRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateUserProfileRequest of this UpdateUserProfileRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_arn(self):
        """Gets the user_arn of this UpdateUserProfileRequest.


        :return: The user_arn of this UpdateUserProfileRequest.
        :rtype: str
        """
        return self._user_arn

    @user_arn.setter
    def user_arn(self, user_arn):
        """Sets the user_arn of this UpdateUserProfileRequest.


        :param user_arn: The user_arn of this UpdateUserProfileRequest.
        :type user_arn: str
        """
        if user_arn is None:
            raise ValueError("Invalid value for `user_arn`, must not be `None`")

        self._user_arn = user_arn

    @property
    def display_name(self):
        """Gets the display_name of this UpdateUserProfileRequest.


        :return: The display_name of this UpdateUserProfileRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this UpdateUserProfileRequest.


        :param display_name: The display_name of this UpdateUserProfileRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def email_address(self):
        """Gets the email_address of this UpdateUserProfileRequest.


        :return: The email_address of this UpdateUserProfileRequest.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this UpdateUserProfileRequest.


        :param email_address: The email_address of this UpdateUserProfileRequest.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def ssh_public_key(self):
        """Gets the ssh_public_key of this UpdateUserProfileRequest.


        :return: The ssh_public_key of this UpdateUserProfileRequest.
        :rtype: str
        """
        return self._ssh_public_key

    @ssh_public_key.setter
    def ssh_public_key(self, ssh_public_key):
        """Sets the ssh_public_key of this UpdateUserProfileRequest.


        :param ssh_public_key: The ssh_public_key of this UpdateUserProfileRequest.
        :type ssh_public_key: str
        """

        self._ssh_public_key = ssh_public_key
