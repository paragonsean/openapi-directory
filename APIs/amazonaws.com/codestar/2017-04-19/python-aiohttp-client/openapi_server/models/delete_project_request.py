# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteProjectRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, client_request_token: str=None, delete_stack: bool=None):
        """DeleteProjectRequest - a model defined in OpenAPI

        :param id: The id of this DeleteProjectRequest.
        :param client_request_token: The client_request_token of this DeleteProjectRequest.
        :param delete_stack: The delete_stack of this DeleteProjectRequest.
        """
        self.openapi_types = {
            'id': str,
            'client_request_token': str,
            'delete_stack': bool
        }

        self.attribute_map = {
            'id': 'id',
            'client_request_token': 'clientRequestToken',
            'delete_stack': 'deleteStack'
        }

        self._id = id
        self._client_request_token = client_request_token
        self._delete_stack = delete_stack

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteProjectRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteProjectRequest of this DeleteProjectRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DeleteProjectRequest.


        :return: The id of this DeleteProjectRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeleteProjectRequest.


        :param id: The id of this DeleteProjectRequest.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def client_request_token(self):
        """Gets the client_request_token of this DeleteProjectRequest.


        :return: The client_request_token of this DeleteProjectRequest.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this DeleteProjectRequest.


        :param client_request_token: The client_request_token of this DeleteProjectRequest.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token

    @property
    def delete_stack(self):
        """Gets the delete_stack of this DeleteProjectRequest.


        :return: The delete_stack of this DeleteProjectRequest.
        :rtype: bool
        """
        return self._delete_stack

    @delete_stack.setter
    def delete_stack(self, delete_stack):
        """Sets the delete_stack of this DeleteProjectRequest.


        :param delete_stack: The delete_stack of this DeleteProjectRequest.
        :type delete_stack: bool
        """

        self._delete_stack = delete_stack
