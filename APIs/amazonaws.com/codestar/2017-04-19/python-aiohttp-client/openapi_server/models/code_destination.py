# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.code_destination_code_commit import CodeDestinationCodeCommit
from openapi_server.models.code_destination_git_hub import CodeDestinationGitHub
from openapi_server import util


class CodeDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_commit: CodeDestinationCodeCommit=None, git_hub: CodeDestinationGitHub=None):
        """CodeDestination - a model defined in OpenAPI

        :param code_commit: The code_commit of this CodeDestination.
        :param git_hub: The git_hub of this CodeDestination.
        """
        self.openapi_types = {
            'code_commit': CodeDestinationCodeCommit,
            'git_hub': CodeDestinationGitHub
        }

        self.attribute_map = {
            'code_commit': 'codeCommit',
            'git_hub': 'gitHub'
        }

        self._code_commit = code_commit
        self._git_hub = git_hub

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CodeDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Code_destination of this CodeDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_commit(self):
        """Gets the code_commit of this CodeDestination.


        :return: The code_commit of this CodeDestination.
        :rtype: CodeDestinationCodeCommit
        """
        return self._code_commit

    @code_commit.setter
    def code_commit(self, code_commit):
        """Sets the code_commit of this CodeDestination.


        :param code_commit: The code_commit of this CodeDestination.
        :type code_commit: CodeDestinationCodeCommit
        """

        self._code_commit = code_commit

    @property
    def git_hub(self):
        """Gets the git_hub of this CodeDestination.


        :return: The git_hub of this CodeDestination.
        :rtype: CodeDestinationGitHub
        """
        return self._git_hub

    @git_hub.setter
    def git_hub(self, git_hub):
        """Sets the git_hub of this CodeDestination.


        :param git_hub: The git_hub of this CodeDestination.
        :type git_hub: CodeDestinationGitHub
        """

        self._git_hub = git_hub
