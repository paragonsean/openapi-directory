# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_project_result_status import DescribeProjectResultStatus
from openapi_server import util


class DescribeProjectResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, id: str=None, arn: str=None, description: str=None, client_request_token: str=None, created_time_stamp: datetime=None, stack_id: str=None, project_template_id: str=None, status: DescribeProjectResultStatus=None):
        """DescribeProjectResult - a model defined in OpenAPI

        :param name: The name of this DescribeProjectResult.
        :param id: The id of this DescribeProjectResult.
        :param arn: The arn of this DescribeProjectResult.
        :param description: The description of this DescribeProjectResult.
        :param client_request_token: The client_request_token of this DescribeProjectResult.
        :param created_time_stamp: The created_time_stamp of this DescribeProjectResult.
        :param stack_id: The stack_id of this DescribeProjectResult.
        :param project_template_id: The project_template_id of this DescribeProjectResult.
        :param status: The status of this DescribeProjectResult.
        """
        self.openapi_types = {
            'name': str,
            'id': str,
            'arn': str,
            'description': str,
            'client_request_token': str,
            'created_time_stamp': datetime,
            'stack_id': str,
            'project_template_id': str,
            'status': DescribeProjectResultStatus
        }

        self.attribute_map = {
            'name': 'name',
            'id': 'id',
            'arn': 'arn',
            'description': 'description',
            'client_request_token': 'clientRequestToken',
            'created_time_stamp': 'createdTimeStamp',
            'stack_id': 'stackId',
            'project_template_id': 'projectTemplateId',
            'status': 'status'
        }

        self._name = name
        self._id = id
        self._arn = arn
        self._description = description
        self._client_request_token = client_request_token
        self._created_time_stamp = created_time_stamp
        self._stack_id = stack_id
        self._project_template_id = project_template_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeProjectResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeProjectResult of this DescribeProjectResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DescribeProjectResult.


        :return: The name of this DescribeProjectResult.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeProjectResult.


        :param name: The name of this DescribeProjectResult.
        :type name: str
        """

        self._name = name

    @property
    def id(self):
        """Gets the id of this DescribeProjectResult.


        :return: The id of this DescribeProjectResult.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DescribeProjectResult.


        :param id: The id of this DescribeProjectResult.
        :type id: str
        """

        self._id = id

    @property
    def arn(self):
        """Gets the arn of this DescribeProjectResult.


        :return: The arn of this DescribeProjectResult.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DescribeProjectResult.


        :param arn: The arn of this DescribeProjectResult.
        :type arn: str
        """

        self._arn = arn

    @property
    def description(self):
        """Gets the description of this DescribeProjectResult.


        :return: The description of this DescribeProjectResult.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeProjectResult.


        :param description: The description of this DescribeProjectResult.
        :type description: str
        """

        self._description = description

    @property
    def client_request_token(self):
        """Gets the client_request_token of this DescribeProjectResult.


        :return: The client_request_token of this DescribeProjectResult.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this DescribeProjectResult.


        :param client_request_token: The client_request_token of this DescribeProjectResult.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token

    @property
    def created_time_stamp(self):
        """Gets the created_time_stamp of this DescribeProjectResult.


        :return: The created_time_stamp of this DescribeProjectResult.
        :rtype: datetime
        """
        return self._created_time_stamp

    @created_time_stamp.setter
    def created_time_stamp(self, created_time_stamp):
        """Sets the created_time_stamp of this DescribeProjectResult.


        :param created_time_stamp: The created_time_stamp of this DescribeProjectResult.
        :type created_time_stamp: datetime
        """

        self._created_time_stamp = created_time_stamp

    @property
    def stack_id(self):
        """Gets the stack_id of this DescribeProjectResult.


        :return: The stack_id of this DescribeProjectResult.
        :rtype: str
        """
        return self._stack_id

    @stack_id.setter
    def stack_id(self, stack_id):
        """Sets the stack_id of this DescribeProjectResult.


        :param stack_id: The stack_id of this DescribeProjectResult.
        :type stack_id: str
        """

        self._stack_id = stack_id

    @property
    def project_template_id(self):
        """Gets the project_template_id of this DescribeProjectResult.


        :return: The project_template_id of this DescribeProjectResult.
        :rtype: str
        """
        return self._project_template_id

    @project_template_id.setter
    def project_template_id(self, project_template_id):
        """Sets the project_template_id of this DescribeProjectResult.


        :param project_template_id: The project_template_id of this DescribeProjectResult.
        :type project_template_id: str
        """

        self._project_template_id = project_template_id

    @property
    def status(self):
        """Gets the status of this DescribeProjectResult.


        :return: The status of this DescribeProjectResult.
        :rtype: DescribeProjectResultStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeProjectResult.


        :param status: The status of this DescribeProjectResult.
        :type status: DescribeProjectResultStatus
        """

        self._status = status
