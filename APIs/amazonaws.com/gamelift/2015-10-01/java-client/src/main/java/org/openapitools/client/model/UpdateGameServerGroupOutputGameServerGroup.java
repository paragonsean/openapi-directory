/*
 * Amazon GameLift
 * <p>Amazon GameLift provides solutions for hosting session-based multiplayer game servers in the cloud, including tools for deploying, operating, and scaling game servers. Built on Amazon Web Services global computing infrastructure, GameLift helps you deliver high-performance, high-reliability, low-cost game servers while dynamically scaling your resource usage to meet player demand. </p> <p> <b>About Amazon GameLift solutions</b> </p> <p>Get more information on these Amazon GameLift solutions in the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/\">Amazon GameLift Developer Guide</a>.</p> <ul> <li> <p>Amazon GameLift managed hosting -- Amazon GameLift offers a fully managed service to set up and maintain computing machines for hosting, manage game session and player session life cycle, and handle security, storage, and performance tracking. You can use automatic scaling tools to balance player demand and hosting costs, configure your game session management to minimize player latency, and add FlexMatch for matchmaking.</p> </li> <li> <p>Managed hosting with Realtime Servers -- With Amazon GameLift Realtime Servers, you can quickly configure and set up ready-to-go game servers for your game. Realtime Servers provides a game server framework with core Amazon GameLift infrastructure already built in. Then use the full range of Amazon GameLift managed hosting features, including FlexMatch, for your game.</p> </li> <li> <p>Amazon GameLift FleetIQ -- Use Amazon GameLift FleetIQ as a standalone service while hosting your games using EC2 instances and Auto Scaling groups. Amazon GameLift FleetIQ provides optimizations for game hosting, including boosting the viability of low-cost Spot Instances gaming. For a complete solution, pair the Amazon GameLift FleetIQ and FlexMatch standalone services.</p> </li> <li> <p>Amazon GameLift FlexMatch -- Add matchmaking to your game hosting solution. FlexMatch is a customizable matchmaking service for multiplayer games. Use FlexMatch as integrated with Amazon GameLift managed hosting or incorporate FlexMatch as a standalone service into your own hosting solution.</p> </li> </ul> <p> <b>About this API Reference</b> </p> <p>This reference guide describes the low-level service API for Amazon GameLift. With each topic in this guide, you can find links to language-specific SDK guides and the Amazon Web Services CLI reference. Useful links:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html\">Amazon GameLift API operations listed by tasks</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-components.html\"> Amazon GameLift tools and resources</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-10-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BalancingStrategy;
import org.openapitools.client.model.GameServerGroupStatus;
import org.openapitools.client.model.GameServerProtectionPolicy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateGameServerGroupOutputGameServerGroup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:49.380048-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateGameServerGroupOutputGameServerGroup {
  public static final String SERIALIZED_NAME_GAME_SERVER_GROUP_NAME = "GameServerGroupName";
  @SerializedName(SERIALIZED_NAME_GAME_SERVER_GROUP_NAME)
  private String gameServerGroupName;

  public static final String SERIALIZED_NAME_GAME_SERVER_GROUP_ARN = "GameServerGroupArn";
  @SerializedName(SERIALIZED_NAME_GAME_SERVER_GROUP_ARN)
  private String gameServerGroupArn;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_INSTANCE_DEFINITIONS = "InstanceDefinitions";
  @SerializedName(SERIALIZED_NAME_INSTANCE_DEFINITIONS)
  private List instanceDefinitions;

  public static final String SERIALIZED_NAME_BALANCING_STRATEGY = "BalancingStrategy";
  @SerializedName(SERIALIZED_NAME_BALANCING_STRATEGY)
  private BalancingStrategy balancingStrategy;

  public static final String SERIALIZED_NAME_GAME_SERVER_PROTECTION_POLICY = "GameServerProtectionPolicy";
  @SerializedName(SERIALIZED_NAME_GAME_SERVER_PROTECTION_POLICY)
  private GameServerProtectionPolicy gameServerProtectionPolicy;

  public static final String SERIALIZED_NAME_AUTO_SCALING_GROUP_ARN = "AutoScalingGroupArn";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_GROUP_ARN)
  private String autoScalingGroupArn;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private GameServerGroupStatus status;

  public static final String SERIALIZED_NAME_STATUS_REASON = "StatusReason";
  @SerializedName(SERIALIZED_NAME_STATUS_REASON)
  private String statusReason;

  public static final String SERIALIZED_NAME_SUSPENDED_ACTIONS = "SuspendedActions";
  @SerializedName(SERIALIZED_NAME_SUSPENDED_ACTIONS)
  private List suspendedActions;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "LastUpdatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
  private OffsetDateTime lastUpdatedTime;

  public UpdateGameServerGroupOutputGameServerGroup() {
  }

  public UpdateGameServerGroupOutputGameServerGroup gameServerGroupName(String gameServerGroupName) {
    this.gameServerGroupName = gameServerGroupName;
    return this;
  }

  /**
   * Get gameServerGroupName
   * @return gameServerGroupName
   */
  @javax.annotation.Nullable
  public String getGameServerGroupName() {
    return gameServerGroupName;
  }

  public void setGameServerGroupName(String gameServerGroupName) {
    this.gameServerGroupName = gameServerGroupName;
  }


  public UpdateGameServerGroupOutputGameServerGroup gameServerGroupArn(String gameServerGroupArn) {
    this.gameServerGroupArn = gameServerGroupArn;
    return this;
  }

  /**
   * Get gameServerGroupArn
   * @return gameServerGroupArn
   */
  @javax.annotation.Nullable
  public String getGameServerGroupArn() {
    return gameServerGroupArn;
  }

  public void setGameServerGroupArn(String gameServerGroupArn) {
    this.gameServerGroupArn = gameServerGroupArn;
  }


  public UpdateGameServerGroupOutputGameServerGroup roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public UpdateGameServerGroupOutputGameServerGroup instanceDefinitions(List instanceDefinitions) {
    this.instanceDefinitions = instanceDefinitions;
    return this;
  }

  /**
   * Get instanceDefinitions
   * @return instanceDefinitions
   */
  @javax.annotation.Nullable
  public List getInstanceDefinitions() {
    return instanceDefinitions;
  }

  public void setInstanceDefinitions(List instanceDefinitions) {
    this.instanceDefinitions = instanceDefinitions;
  }


  public UpdateGameServerGroupOutputGameServerGroup balancingStrategy(BalancingStrategy balancingStrategy) {
    this.balancingStrategy = balancingStrategy;
    return this;
  }

  /**
   * Get balancingStrategy
   * @return balancingStrategy
   */
  @javax.annotation.Nullable
  public BalancingStrategy getBalancingStrategy() {
    return balancingStrategy;
  }

  public void setBalancingStrategy(BalancingStrategy balancingStrategy) {
    this.balancingStrategy = balancingStrategy;
  }


  public UpdateGameServerGroupOutputGameServerGroup gameServerProtectionPolicy(GameServerProtectionPolicy gameServerProtectionPolicy) {
    this.gameServerProtectionPolicy = gameServerProtectionPolicy;
    return this;
  }

  /**
   * Get gameServerProtectionPolicy
   * @return gameServerProtectionPolicy
   */
  @javax.annotation.Nullable
  public GameServerProtectionPolicy getGameServerProtectionPolicy() {
    return gameServerProtectionPolicy;
  }

  public void setGameServerProtectionPolicy(GameServerProtectionPolicy gameServerProtectionPolicy) {
    this.gameServerProtectionPolicy = gameServerProtectionPolicy;
  }


  public UpdateGameServerGroupOutputGameServerGroup autoScalingGroupArn(String autoScalingGroupArn) {
    this.autoScalingGroupArn = autoScalingGroupArn;
    return this;
  }

  /**
   * Get autoScalingGroupArn
   * @return autoScalingGroupArn
   */
  @javax.annotation.Nullable
  public String getAutoScalingGroupArn() {
    return autoScalingGroupArn;
  }

  public void setAutoScalingGroupArn(String autoScalingGroupArn) {
    this.autoScalingGroupArn = autoScalingGroupArn;
  }


  public UpdateGameServerGroupOutputGameServerGroup status(GameServerGroupStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public GameServerGroupStatus getStatus() {
    return status;
  }

  public void setStatus(GameServerGroupStatus status) {
    this.status = status;
  }


  public UpdateGameServerGroupOutputGameServerGroup statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * Get statusReason
   * @return statusReason
   */
  @javax.annotation.Nullable
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }


  public UpdateGameServerGroupOutputGameServerGroup suspendedActions(List suspendedActions) {
    this.suspendedActions = suspendedActions;
    return this;
  }

  /**
   * Get suspendedActions
   * @return suspendedActions
   */
  @javax.annotation.Nullable
  public List getSuspendedActions() {
    return suspendedActions;
  }

  public void setSuspendedActions(List suspendedActions) {
    this.suspendedActions = suspendedActions;
  }


  public UpdateGameServerGroupOutputGameServerGroup creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public UpdateGameServerGroupOutputGameServerGroup lastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
    return this;
  }

  /**
   * Get lastUpdatedTime
   * @return lastUpdatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedTime() {
    return lastUpdatedTime;
  }

  public void setLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateGameServerGroupOutputGameServerGroup updateGameServerGroupOutputGameServerGroup = (UpdateGameServerGroupOutputGameServerGroup) o;
    return Objects.equals(this.gameServerGroupName, updateGameServerGroupOutputGameServerGroup.gameServerGroupName) &&
        Objects.equals(this.gameServerGroupArn, updateGameServerGroupOutputGameServerGroup.gameServerGroupArn) &&
        Objects.equals(this.roleArn, updateGameServerGroupOutputGameServerGroup.roleArn) &&
        Objects.equals(this.instanceDefinitions, updateGameServerGroupOutputGameServerGroup.instanceDefinitions) &&
        Objects.equals(this.balancingStrategy, updateGameServerGroupOutputGameServerGroup.balancingStrategy) &&
        Objects.equals(this.gameServerProtectionPolicy, updateGameServerGroupOutputGameServerGroup.gameServerProtectionPolicy) &&
        Objects.equals(this.autoScalingGroupArn, updateGameServerGroupOutputGameServerGroup.autoScalingGroupArn) &&
        Objects.equals(this.status, updateGameServerGroupOutputGameServerGroup.status) &&
        Objects.equals(this.statusReason, updateGameServerGroupOutputGameServerGroup.statusReason) &&
        Objects.equals(this.suspendedActions, updateGameServerGroupOutputGameServerGroup.suspendedActions) &&
        Objects.equals(this.creationTime, updateGameServerGroupOutputGameServerGroup.creationTime) &&
        Objects.equals(this.lastUpdatedTime, updateGameServerGroupOutputGameServerGroup.lastUpdatedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gameServerGroupName, gameServerGroupArn, roleArn, instanceDefinitions, balancingStrategy, gameServerProtectionPolicy, autoScalingGroupArn, status, statusReason, suspendedActions, creationTime, lastUpdatedTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateGameServerGroupOutputGameServerGroup {\n");
    sb.append("    gameServerGroupName: ").append(toIndentedString(gameServerGroupName)).append("\n");
    sb.append("    gameServerGroupArn: ").append(toIndentedString(gameServerGroupArn)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    instanceDefinitions: ").append(toIndentedString(instanceDefinitions)).append("\n");
    sb.append("    balancingStrategy: ").append(toIndentedString(balancingStrategy)).append("\n");
    sb.append("    gameServerProtectionPolicy: ").append(toIndentedString(gameServerProtectionPolicy)).append("\n");
    sb.append("    autoScalingGroupArn: ").append(toIndentedString(autoScalingGroupArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    suspendedActions: ").append(toIndentedString(suspendedActions)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("GameServerGroupName");
    openapiFields.add("GameServerGroupArn");
    openapiFields.add("RoleArn");
    openapiFields.add("InstanceDefinitions");
    openapiFields.add("BalancingStrategy");
    openapiFields.add("GameServerProtectionPolicy");
    openapiFields.add("AutoScalingGroupArn");
    openapiFields.add("Status");
    openapiFields.add("StatusReason");
    openapiFields.add("SuspendedActions");
    openapiFields.add("CreationTime");
    openapiFields.add("LastUpdatedTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateGameServerGroupOutputGameServerGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateGameServerGroupOutputGameServerGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateGameServerGroupOutputGameServerGroup is not found in the empty JSON string", UpdateGameServerGroupOutputGameServerGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateGameServerGroupOutputGameServerGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateGameServerGroupOutputGameServerGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `GameServerGroupName`
      if (jsonObj.get("GameServerGroupName") != null && !jsonObj.get("GameServerGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GameServerGroupName"));
      }
      // validate the optional field `GameServerGroupArn`
      if (jsonObj.get("GameServerGroupArn") != null && !jsonObj.get("GameServerGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GameServerGroupArn"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `InstanceDefinitions`
      if (jsonObj.get("InstanceDefinitions") != null && !jsonObj.get("InstanceDefinitions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("InstanceDefinitions"));
      }
      // validate the optional field `BalancingStrategy`
      if (jsonObj.get("BalancingStrategy") != null && !jsonObj.get("BalancingStrategy").isJsonNull()) {
        BalancingStrategy.validateJsonElement(jsonObj.get("BalancingStrategy"));
      }
      // validate the optional field `GameServerProtectionPolicy`
      if (jsonObj.get("GameServerProtectionPolicy") != null && !jsonObj.get("GameServerProtectionPolicy").isJsonNull()) {
        GameServerProtectionPolicy.validateJsonElement(jsonObj.get("GameServerProtectionPolicy"));
      }
      // validate the optional field `AutoScalingGroupArn`
      if (jsonObj.get("AutoScalingGroupArn") != null && !jsonObj.get("AutoScalingGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AutoScalingGroupArn"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        GameServerGroupStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusReason`
      if (jsonObj.get("StatusReason") != null && !jsonObj.get("StatusReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusReason"));
      }
      // validate the optional field `SuspendedActions`
      if (jsonObj.get("SuspendedActions") != null && !jsonObj.get("SuspendedActions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SuspendedActions"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `LastUpdatedTime`
      if (jsonObj.get("LastUpdatedTime") != null && !jsonObj.get("LastUpdatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateGameServerGroupOutputGameServerGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateGameServerGroupOutputGameServerGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateGameServerGroupOutputGameServerGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateGameServerGroupOutputGameServerGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateGameServerGroupOutputGameServerGroup>() {
           @Override
           public void write(JsonWriter out, UpdateGameServerGroupOutputGameServerGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateGameServerGroupOutputGameServerGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateGameServerGroupOutputGameServerGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateGameServerGroupOutputGameServerGroup
   * @throws IOException if the JSON string is invalid with respect to UpdateGameServerGroupOutputGameServerGroup
   */
  public static UpdateGameServerGroupOutputGameServerGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateGameServerGroupOutputGameServerGroup.class);
  }

  /**
   * Convert an instance of UpdateGameServerGroupOutputGameServerGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

