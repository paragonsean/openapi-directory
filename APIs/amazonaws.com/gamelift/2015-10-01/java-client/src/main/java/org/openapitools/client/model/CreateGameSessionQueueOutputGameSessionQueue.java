/*
 * Amazon GameLift
 * <p>Amazon GameLift provides solutions for hosting session-based multiplayer game servers in the cloud, including tools for deploying, operating, and scaling game servers. Built on Amazon Web Services global computing infrastructure, GameLift helps you deliver high-performance, high-reliability, low-cost game servers while dynamically scaling your resource usage to meet player demand. </p> <p> <b>About Amazon GameLift solutions</b> </p> <p>Get more information on these Amazon GameLift solutions in the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/\">Amazon GameLift Developer Guide</a>.</p> <ul> <li> <p>Amazon GameLift managed hosting -- Amazon GameLift offers a fully managed service to set up and maintain computing machines for hosting, manage game session and player session life cycle, and handle security, storage, and performance tracking. You can use automatic scaling tools to balance player demand and hosting costs, configure your game session management to minimize player latency, and add FlexMatch for matchmaking.</p> </li> <li> <p>Managed hosting with Realtime Servers -- With Amazon GameLift Realtime Servers, you can quickly configure and set up ready-to-go game servers for your game. Realtime Servers provides a game server framework with core Amazon GameLift infrastructure already built in. Then use the full range of Amazon GameLift managed hosting features, including FlexMatch, for your game.</p> </li> <li> <p>Amazon GameLift FleetIQ -- Use Amazon GameLift FleetIQ as a standalone service while hosting your games using EC2 instances and Auto Scaling groups. Amazon GameLift FleetIQ provides optimizations for game hosting, including boosting the viability of low-cost Spot Instances gaming. For a complete solution, pair the Amazon GameLift FleetIQ and FlexMatch standalone services.</p> </li> <li> <p>Amazon GameLift FlexMatch -- Add matchmaking to your game hosting solution. FlexMatch is a customizable matchmaking service for multiplayer games. Use FlexMatch as integrated with Amazon GameLift managed hosting or incorporate FlexMatch as a standalone service into your own hosting solution.</p> </li> </ul> <p> <b>About this API Reference</b> </p> <p>This reference guide describes the low-level service API for Amazon GameLift. With each topic in this guide, you can find links to language-specific SDK guides and the Amazon Web Services CLI reference. Useful links:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html\">Amazon GameLift API operations listed by tasks</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-components.html\"> Amazon GameLift tools and resources</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-10-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateGameSessionQueueInputFilterConfiguration;
import org.openapitools.client.model.CreateGameSessionQueueInputPriorityConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateGameSessionQueueOutputGameSessionQueue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:49.380048-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateGameSessionQueueOutputGameSessionQueue {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_GAME_SESSION_QUEUE_ARN = "GameSessionQueueArn";
  @SerializedName(SERIALIZED_NAME_GAME_SESSION_QUEUE_ARN)
  private String gameSessionQueueArn;

  public static final String SERIALIZED_NAME_TIMEOUT_IN_SECONDS = "TimeoutInSeconds";
  @SerializedName(SERIALIZED_NAME_TIMEOUT_IN_SECONDS)
  private Integer timeoutInSeconds;

  public static final String SERIALIZED_NAME_PLAYER_LATENCY_POLICIES = "PlayerLatencyPolicies";
  @SerializedName(SERIALIZED_NAME_PLAYER_LATENCY_POLICIES)
  private List playerLatencyPolicies;

  public static final String SERIALIZED_NAME_DESTINATIONS = "Destinations";
  @SerializedName(SERIALIZED_NAME_DESTINATIONS)
  private List destinations;

  public static final String SERIALIZED_NAME_FILTER_CONFIGURATION = "FilterConfiguration";
  @SerializedName(SERIALIZED_NAME_FILTER_CONFIGURATION)
  private CreateGameSessionQueueInputFilterConfiguration filterConfiguration;

  public static final String SERIALIZED_NAME_PRIORITY_CONFIGURATION = "PriorityConfiguration";
  @SerializedName(SERIALIZED_NAME_PRIORITY_CONFIGURATION)
  private CreateGameSessionQueueInputPriorityConfiguration priorityConfiguration;

  public static final String SERIALIZED_NAME_CUSTOM_EVENT_DATA = "CustomEventData";
  @SerializedName(SERIALIZED_NAME_CUSTOM_EVENT_DATA)
  private String customEventData;

  public static final String SERIALIZED_NAME_NOTIFICATION_TARGET = "NotificationTarget";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_TARGET)
  private String notificationTarget;

  public CreateGameSessionQueueOutputGameSessionQueue() {
  }

  public CreateGameSessionQueueOutputGameSessionQueue name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateGameSessionQueueOutputGameSessionQueue gameSessionQueueArn(String gameSessionQueueArn) {
    this.gameSessionQueueArn = gameSessionQueueArn;
    return this;
  }

  /**
   * Get gameSessionQueueArn
   * @return gameSessionQueueArn
   */
  @javax.annotation.Nullable
  public String getGameSessionQueueArn() {
    return gameSessionQueueArn;
  }

  public void setGameSessionQueueArn(String gameSessionQueueArn) {
    this.gameSessionQueueArn = gameSessionQueueArn;
  }


  public CreateGameSessionQueueOutputGameSessionQueue timeoutInSeconds(Integer timeoutInSeconds) {
    this.timeoutInSeconds = timeoutInSeconds;
    return this;
  }

  /**
   * Get timeoutInSeconds
   * @return timeoutInSeconds
   */
  @javax.annotation.Nullable
  public Integer getTimeoutInSeconds() {
    return timeoutInSeconds;
  }

  public void setTimeoutInSeconds(Integer timeoutInSeconds) {
    this.timeoutInSeconds = timeoutInSeconds;
  }


  public CreateGameSessionQueueOutputGameSessionQueue playerLatencyPolicies(List playerLatencyPolicies) {
    this.playerLatencyPolicies = playerLatencyPolicies;
    return this;
  }

  /**
   * Get playerLatencyPolicies
   * @return playerLatencyPolicies
   */
  @javax.annotation.Nullable
  public List getPlayerLatencyPolicies() {
    return playerLatencyPolicies;
  }

  public void setPlayerLatencyPolicies(List playerLatencyPolicies) {
    this.playerLatencyPolicies = playerLatencyPolicies;
  }


  public CreateGameSessionQueueOutputGameSessionQueue destinations(List destinations) {
    this.destinations = destinations;
    return this;
  }

  /**
   * Get destinations
   * @return destinations
   */
  @javax.annotation.Nullable
  public List getDestinations() {
    return destinations;
  }

  public void setDestinations(List destinations) {
    this.destinations = destinations;
  }


  public CreateGameSessionQueueOutputGameSessionQueue filterConfiguration(CreateGameSessionQueueInputFilterConfiguration filterConfiguration) {
    this.filterConfiguration = filterConfiguration;
    return this;
  }

  /**
   * Get filterConfiguration
   * @return filterConfiguration
   */
  @javax.annotation.Nullable
  public CreateGameSessionQueueInputFilterConfiguration getFilterConfiguration() {
    return filterConfiguration;
  }

  public void setFilterConfiguration(CreateGameSessionQueueInputFilterConfiguration filterConfiguration) {
    this.filterConfiguration = filterConfiguration;
  }


  public CreateGameSessionQueueOutputGameSessionQueue priorityConfiguration(CreateGameSessionQueueInputPriorityConfiguration priorityConfiguration) {
    this.priorityConfiguration = priorityConfiguration;
    return this;
  }

  /**
   * Get priorityConfiguration
   * @return priorityConfiguration
   */
  @javax.annotation.Nullable
  public CreateGameSessionQueueInputPriorityConfiguration getPriorityConfiguration() {
    return priorityConfiguration;
  }

  public void setPriorityConfiguration(CreateGameSessionQueueInputPriorityConfiguration priorityConfiguration) {
    this.priorityConfiguration = priorityConfiguration;
  }


  public CreateGameSessionQueueOutputGameSessionQueue customEventData(String customEventData) {
    this.customEventData = customEventData;
    return this;
  }

  /**
   * Get customEventData
   * @return customEventData
   */
  @javax.annotation.Nullable
  public String getCustomEventData() {
    return customEventData;
  }

  public void setCustomEventData(String customEventData) {
    this.customEventData = customEventData;
  }


  public CreateGameSessionQueueOutputGameSessionQueue notificationTarget(String notificationTarget) {
    this.notificationTarget = notificationTarget;
    return this;
  }

  /**
   * Get notificationTarget
   * @return notificationTarget
   */
  @javax.annotation.Nullable
  public String getNotificationTarget() {
    return notificationTarget;
  }

  public void setNotificationTarget(String notificationTarget) {
    this.notificationTarget = notificationTarget;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateGameSessionQueueOutputGameSessionQueue createGameSessionQueueOutputGameSessionQueue = (CreateGameSessionQueueOutputGameSessionQueue) o;
    return Objects.equals(this.name, createGameSessionQueueOutputGameSessionQueue.name) &&
        Objects.equals(this.gameSessionQueueArn, createGameSessionQueueOutputGameSessionQueue.gameSessionQueueArn) &&
        Objects.equals(this.timeoutInSeconds, createGameSessionQueueOutputGameSessionQueue.timeoutInSeconds) &&
        Objects.equals(this.playerLatencyPolicies, createGameSessionQueueOutputGameSessionQueue.playerLatencyPolicies) &&
        Objects.equals(this.destinations, createGameSessionQueueOutputGameSessionQueue.destinations) &&
        Objects.equals(this.filterConfiguration, createGameSessionQueueOutputGameSessionQueue.filterConfiguration) &&
        Objects.equals(this.priorityConfiguration, createGameSessionQueueOutputGameSessionQueue.priorityConfiguration) &&
        Objects.equals(this.customEventData, createGameSessionQueueOutputGameSessionQueue.customEventData) &&
        Objects.equals(this.notificationTarget, createGameSessionQueueOutputGameSessionQueue.notificationTarget);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, gameSessionQueueArn, timeoutInSeconds, playerLatencyPolicies, destinations, filterConfiguration, priorityConfiguration, customEventData, notificationTarget);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateGameSessionQueueOutputGameSessionQueue {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    gameSessionQueueArn: ").append(toIndentedString(gameSessionQueueArn)).append("\n");
    sb.append("    timeoutInSeconds: ").append(toIndentedString(timeoutInSeconds)).append("\n");
    sb.append("    playerLatencyPolicies: ").append(toIndentedString(playerLatencyPolicies)).append("\n");
    sb.append("    destinations: ").append(toIndentedString(destinations)).append("\n");
    sb.append("    filterConfiguration: ").append(toIndentedString(filterConfiguration)).append("\n");
    sb.append("    priorityConfiguration: ").append(toIndentedString(priorityConfiguration)).append("\n");
    sb.append("    customEventData: ").append(toIndentedString(customEventData)).append("\n");
    sb.append("    notificationTarget: ").append(toIndentedString(notificationTarget)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("GameSessionQueueArn");
    openapiFields.add("TimeoutInSeconds");
    openapiFields.add("PlayerLatencyPolicies");
    openapiFields.add("Destinations");
    openapiFields.add("FilterConfiguration");
    openapiFields.add("PriorityConfiguration");
    openapiFields.add("CustomEventData");
    openapiFields.add("NotificationTarget");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateGameSessionQueueOutputGameSessionQueue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateGameSessionQueueOutputGameSessionQueue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateGameSessionQueueOutputGameSessionQueue is not found in the empty JSON string", CreateGameSessionQueueOutputGameSessionQueue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateGameSessionQueueOutputGameSessionQueue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateGameSessionQueueOutputGameSessionQueue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `GameSessionQueueArn`
      if (jsonObj.get("GameSessionQueueArn") != null && !jsonObj.get("GameSessionQueueArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GameSessionQueueArn"));
      }
      // validate the optional field `TimeoutInSeconds`
      if (jsonObj.get("TimeoutInSeconds") != null && !jsonObj.get("TimeoutInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimeoutInSeconds"));
      }
      // validate the optional field `PlayerLatencyPolicies`
      if (jsonObj.get("PlayerLatencyPolicies") != null && !jsonObj.get("PlayerLatencyPolicies").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PlayerLatencyPolicies"));
      }
      // validate the optional field `Destinations`
      if (jsonObj.get("Destinations") != null && !jsonObj.get("Destinations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Destinations"));
      }
      // validate the optional field `FilterConfiguration`
      if (jsonObj.get("FilterConfiguration") != null && !jsonObj.get("FilterConfiguration").isJsonNull()) {
        CreateGameSessionQueueInputFilterConfiguration.validateJsonElement(jsonObj.get("FilterConfiguration"));
      }
      // validate the optional field `PriorityConfiguration`
      if (jsonObj.get("PriorityConfiguration") != null && !jsonObj.get("PriorityConfiguration").isJsonNull()) {
        CreateGameSessionQueueInputPriorityConfiguration.validateJsonElement(jsonObj.get("PriorityConfiguration"));
      }
      // validate the optional field `CustomEventData`
      if (jsonObj.get("CustomEventData") != null && !jsonObj.get("CustomEventData").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CustomEventData"));
      }
      // validate the optional field `NotificationTarget`
      if (jsonObj.get("NotificationTarget") != null && !jsonObj.get("NotificationTarget").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NotificationTarget"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateGameSessionQueueOutputGameSessionQueue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateGameSessionQueueOutputGameSessionQueue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateGameSessionQueueOutputGameSessionQueue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateGameSessionQueueOutputGameSessionQueue.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateGameSessionQueueOutputGameSessionQueue>() {
           @Override
           public void write(JsonWriter out, CreateGameSessionQueueOutputGameSessionQueue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateGameSessionQueueOutputGameSessionQueue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateGameSessionQueueOutputGameSessionQueue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateGameSessionQueueOutputGameSessionQueue
   * @throws IOException if the JSON string is invalid with respect to CreateGameSessionQueueOutputGameSessionQueue
   */
  public static CreateGameSessionQueueOutputGameSessionQueue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateGameSessionQueueOutputGameSessionQueue.class);
  }

  /**
   * Convert an instance of CreateGameSessionQueueOutputGameSessionQueue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

