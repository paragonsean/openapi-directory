/**
 * Amazon GameLift
 * <p>Amazon GameLift provides solutions for hosting session-based multiplayer game servers in the cloud, including tools for deploying, operating, and scaling game servers. Built on Amazon Web Services global computing infrastructure, GameLift helps you deliver high-performance, high-reliability, low-cost game servers while dynamically scaling your resource usage to meet player demand. </p> <p> <b>About Amazon GameLift solutions</b> </p> <p>Get more information on these Amazon GameLift solutions in the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/\">Amazon GameLift Developer Guide</a>.</p> <ul> <li> <p>Amazon GameLift managed hosting -- Amazon GameLift offers a fully managed service to set up and maintain computing machines for hosting, manage game session and player session life cycle, and handle security, storage, and performance tracking. You can use automatic scaling tools to balance player demand and hosting costs, configure your game session management to minimize player latency, and add FlexMatch for matchmaking.</p> </li> <li> <p>Managed hosting with Realtime Servers -- With Amazon GameLift Realtime Servers, you can quickly configure and set up ready-to-go game servers for your game. Realtime Servers provides a game server framework with core Amazon GameLift infrastructure already built in. Then use the full range of Amazon GameLift managed hosting features, including FlexMatch, for your game.</p> </li> <li> <p>Amazon GameLift FleetIQ -- Use Amazon GameLift FleetIQ as a standalone service while hosting your games using EC2 instances and Auto Scaling groups. Amazon GameLift FleetIQ provides optimizations for game hosting, including boosting the viability of low-cost Spot Instances gaming. For a complete solution, pair the Amazon GameLift FleetIQ and FlexMatch standalone services.</p> </li> <li> <p>Amazon GameLift FlexMatch -- Add matchmaking to your game hosting solution. FlexMatch is a customizable matchmaking service for multiplayer games. Use FlexMatch as integrated with Amazon GameLift managed hosting or incorporate FlexMatch as a standalone service into your own hosting solution.</p> </li> </ul> <p> <b>About this API Reference</b> </p> <p>This reference guide describes the low-level service API for Amazon GameLift. With each topic in this guide, you can find links to language-specific SDK guides and the Amazon Web Services CLI reference. Useful links:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html\">Amazon GameLift API operations listed by tasks</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-components.html\"> Amazon GameLift tools and resources</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-10-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVpcPeeringAuthorization.h
 *
 * &lt;p&gt;Represents an authorization for a VPC peering connection between the VPC for an Amazon GameLift fleet and another VPC on an account you have access to. This authorization must exist and be valid for the peering connection to be established. Authorizations are valid for 24 hours after they are issued.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Related actions&lt;/b&gt; &lt;/p&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets\&quot;&gt;All APIs by task&lt;/a&gt; &lt;/p&gt;
 */

#ifndef OAIVpcPeeringAuthorization_H
#define OAIVpcPeeringAuthorization_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVpcPeeringAuthorization : public OAIObject {
public:
    OAIVpcPeeringAuthorization();
    OAIVpcPeeringAuthorization(QString json);
    ~OAIVpcPeeringAuthorization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGameLiftAwsAccountId() const;
    void setGameLiftAwsAccountId(const QString &game_lift_aws_account_id);
    bool is_game_lift_aws_account_id_Set() const;
    bool is_game_lift_aws_account_id_Valid() const;

    QString getPeerVpcAwsAccountId() const;
    void setPeerVpcAwsAccountId(const QString &peer_vpc_aws_account_id);
    bool is_peer_vpc_aws_account_id_Set() const;
    bool is_peer_vpc_aws_account_id_Valid() const;

    QString getPeerVpcId() const;
    void setPeerVpcId(const QString &peer_vpc_id);
    bool is_peer_vpc_id_Set() const;
    bool is_peer_vpc_id_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getExpirationTime() const;
    void setExpirationTime(const QDateTime &expiration_time);
    bool is_expiration_time_Set() const;
    bool is_expiration_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_game_lift_aws_account_id;
    bool m_game_lift_aws_account_id_isSet;
    bool m_game_lift_aws_account_id_isValid;

    QString m_peer_vpc_aws_account_id;
    bool m_peer_vpc_aws_account_id_isSet;
    bool m_peer_vpc_aws_account_id_isValid;

    QString m_peer_vpc_id;
    bool m_peer_vpc_id_isSet;
    bool m_peer_vpc_id_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_expiration_time;
    bool m_expiration_time_isSet;
    bool m_expiration_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVpcPeeringAuthorization)

#endif // OAIVpcPeeringAuthorization_H
