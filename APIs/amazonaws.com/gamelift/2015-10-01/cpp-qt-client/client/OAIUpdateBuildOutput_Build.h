/**
 * Amazon GameLift
 * <p>Amazon GameLift provides solutions for hosting session-based multiplayer game servers in the cloud, including tools for deploying, operating, and scaling game servers. Built on Amazon Web Services global computing infrastructure, GameLift helps you deliver high-performance, high-reliability, low-cost game servers while dynamically scaling your resource usage to meet player demand. </p> <p> <b>About Amazon GameLift solutions</b> </p> <p>Get more information on these Amazon GameLift solutions in the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/\">Amazon GameLift Developer Guide</a>.</p> <ul> <li> <p>Amazon GameLift managed hosting -- Amazon GameLift offers a fully managed service to set up and maintain computing machines for hosting, manage game session and player session life cycle, and handle security, storage, and performance tracking. You can use automatic scaling tools to balance player demand and hosting costs, configure your game session management to minimize player latency, and add FlexMatch for matchmaking.</p> </li> <li> <p>Managed hosting with Realtime Servers -- With Amazon GameLift Realtime Servers, you can quickly configure and set up ready-to-go game servers for your game. Realtime Servers provides a game server framework with core Amazon GameLift infrastructure already built in. Then use the full range of Amazon GameLift managed hosting features, including FlexMatch, for your game.</p> </li> <li> <p>Amazon GameLift FleetIQ -- Use Amazon GameLift FleetIQ as a standalone service while hosting your games using EC2 instances and Auto Scaling groups. Amazon GameLift FleetIQ provides optimizations for game hosting, including boosting the viability of low-cost Spot Instances gaming. For a complete solution, pair the Amazon GameLift FleetIQ and FlexMatch standalone services.</p> </li> <li> <p>Amazon GameLift FlexMatch -- Add matchmaking to your game hosting solution. FlexMatch is a customizable matchmaking service for multiplayer games. Use FlexMatch as integrated with Amazon GameLift managed hosting or incorporate FlexMatch as a standalone service into your own hosting solution.</p> </li> </ul> <p> <b>About this API Reference</b> </p> <p>This reference guide describes the low-level service API for Amazon GameLift. With each topic in this guide, you can find links to language-specific SDK guides and the Amazon Web Services CLI reference. Useful links:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html\">Amazon GameLift API operations listed by tasks</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-components.html\"> Amazon GameLift tools and resources</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-10-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateBuildOutput_Build.h
 *
 * 
 */

#ifndef OAIUpdateBuildOutput_Build_H
#define OAIUpdateBuildOutput_Build_H

#include <QJsonObject>

#include "OAIBuildStatus.h"
#include "OAIOperatingSystem.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateBuildOutput_Build : public OAIObject {
public:
    OAIUpdateBuildOutput_Build();
    OAIUpdateBuildOutput_Build(QString json);
    ~OAIUpdateBuildOutput_Build() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBuildId() const;
    void setBuildId(const QString &build_id);
    bool is_build_id_Set() const;
    bool is_build_id_Valid() const;

    QString getBuildArn() const;
    void setBuildArn(const QString &build_arn);
    bool is_build_arn_Set() const;
    bool is_build_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    OAIBuildStatus getStatus() const;
    void setStatus(const OAIBuildStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getSizeOnDisk() const;
    void setSizeOnDisk(const qint32 &size_on_disk);
    bool is_size_on_disk_Set() const;
    bool is_size_on_disk_Valid() const;

    OAIOperatingSystem getOperatingSystem() const;
    void setOperatingSystem(const OAIOperatingSystem &operating_system);
    bool is_operating_system_Set() const;
    bool is_operating_system_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getServerSdkVersion() const;
    void setServerSdkVersion(const QString &server_sdk_version);
    bool is_server_sdk_version_Set() const;
    bool is_server_sdk_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_build_id;
    bool m_build_id_isSet;
    bool m_build_id_isValid;

    QString m_build_arn;
    bool m_build_arn_isSet;
    bool m_build_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIBuildStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_size_on_disk;
    bool m_size_on_disk_isSet;
    bool m_size_on_disk_isValid;

    OAIOperatingSystem m_operating_system;
    bool m_operating_system_isSet;
    bool m_operating_system_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_server_sdk_version;
    bool m_server_sdk_version_isSet;
    bool m_server_sdk_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateBuildOutput_Build)

#endif // OAIUpdateBuildOutput_Build_H
