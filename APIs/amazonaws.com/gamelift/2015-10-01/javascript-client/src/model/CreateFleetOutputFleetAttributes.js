/**
 * Amazon GameLift
 * <p>Amazon GameLift provides solutions for hosting session-based multiplayer game servers in the cloud, including tools for deploying, operating, and scaling game servers. Built on Amazon Web Services global computing infrastructure, GameLift helps you deliver high-performance, high-reliability, low-cost game servers while dynamically scaling your resource usage to meet player demand. </p> <p> <b>About Amazon GameLift solutions</b> </p> <p>Get more information on these Amazon GameLift solutions in the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/\">Amazon GameLift Developer Guide</a>.</p> <ul> <li> <p>Amazon GameLift managed hosting -- Amazon GameLift offers a fully managed service to set up and maintain computing machines for hosting, manage game session and player session life cycle, and handle security, storage, and performance tracking. You can use automatic scaling tools to balance player demand and hosting costs, configure your game session management to minimize player latency, and add FlexMatch for matchmaking.</p> </li> <li> <p>Managed hosting with Realtime Servers -- With Amazon GameLift Realtime Servers, you can quickly configure and set up ready-to-go game servers for your game. Realtime Servers provides a game server framework with core Amazon GameLift infrastructure already built in. Then use the full range of Amazon GameLift managed hosting features, including FlexMatch, for your game.</p> </li> <li> <p>Amazon GameLift FleetIQ -- Use Amazon GameLift FleetIQ as a standalone service while hosting your games using EC2 instances and Auto Scaling groups. Amazon GameLift FleetIQ provides optimizations for game hosting, including boosting the viability of low-cost Spot Instances gaming. For a complete solution, pair the Amazon GameLift FleetIQ and FlexMatch standalone services.</p> </li> <li> <p>Amazon GameLift FlexMatch -- Add matchmaking to your game hosting solution. FlexMatch is a customizable matchmaking service for multiplayer games. Use FlexMatch as integrated with Amazon GameLift managed hosting or incorporate FlexMatch as a standalone service into your own hosting solution.</p> </li> </ul> <p> <b>About this API Reference</b> </p> <p>This reference guide describes the low-level service API for Amazon GameLift. With each topic in this guide, you can find links to language-specific SDK guides and the Amazon Web Services CLI reference. Useful links:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html\">Amazon GameLift API operations listed by tasks</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-components.html\"> Amazon GameLift tools and resources</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-10-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnywhereConfiguration from './AnywhereConfiguration';
import CertificateConfiguration from './CertificateConfiguration';
import ComputeType from './ComputeType';
import EC2InstanceType from './EC2InstanceType';
import FleetAttributes from './FleetAttributes';
import FleetStatus from './FleetStatus';
import FleetType from './FleetType';
import OperatingSystem from './OperatingSystem';
import ProtectionPolicy from './ProtectionPolicy';
import ResourceCreationLimitPolicy from './ResourceCreationLimitPolicy';

/**
 * The CreateFleetOutputFleetAttributes model module.
 * @module model/CreateFleetOutputFleetAttributes
 * @version 2015-10-01
 */
class CreateFleetOutputFleetAttributes {
    /**
     * Constructs a new <code>CreateFleetOutputFleetAttributes</code>.
     * @alias module:model/CreateFleetOutputFleetAttributes
     * @implements module:model/FleetAttributes
     */
    constructor() { 
        FleetAttributes.initialize(this);
        CreateFleetOutputFleetAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateFleetOutputFleetAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFleetOutputFleetAttributes} obj Optional instance to populate.
     * @return {module:model/CreateFleetOutputFleetAttributes} The populated <code>CreateFleetOutputFleetAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFleetOutputFleetAttributes();
            FleetAttributes.constructFromObject(data, obj);

            if (data.hasOwnProperty('FleetId')) {
                obj['FleetId'] = ApiClient.convertToType(data['FleetId'], 'String');
            }
            if (data.hasOwnProperty('FleetArn')) {
                obj['FleetArn'] = ApiClient.convertToType(data['FleetArn'], 'String');
            }
            if (data.hasOwnProperty('FleetType')) {
                obj['FleetType'] = ApiClient.convertToType(data['FleetType'], FleetType);
            }
            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], EC2InstanceType);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('TerminationTime')) {
                obj['TerminationTime'] = ApiClient.convertToType(data['TerminationTime'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], FleetStatus);
            }
            if (data.hasOwnProperty('BuildId')) {
                obj['BuildId'] = ApiClient.convertToType(data['BuildId'], 'String');
            }
            if (data.hasOwnProperty('BuildArn')) {
                obj['BuildArn'] = ApiClient.convertToType(data['BuildArn'], 'String');
            }
            if (data.hasOwnProperty('ScriptId')) {
                obj['ScriptId'] = ApiClient.convertToType(data['ScriptId'], 'String');
            }
            if (data.hasOwnProperty('ScriptArn')) {
                obj['ScriptArn'] = ApiClient.convertToType(data['ScriptArn'], 'String');
            }
            if (data.hasOwnProperty('ServerLaunchPath')) {
                obj['ServerLaunchPath'] = ApiClient.convertToType(data['ServerLaunchPath'], 'String');
            }
            if (data.hasOwnProperty('ServerLaunchParameters')) {
                obj['ServerLaunchParameters'] = ApiClient.convertToType(data['ServerLaunchParameters'], 'String');
            }
            if (data.hasOwnProperty('LogPaths')) {
                obj['LogPaths'] = ApiClient.convertToType(data['LogPaths'], Array);
            }
            if (data.hasOwnProperty('NewGameSessionProtectionPolicy')) {
                obj['NewGameSessionProtectionPolicy'] = ApiClient.convertToType(data['NewGameSessionProtectionPolicy'], ProtectionPolicy);
            }
            if (data.hasOwnProperty('OperatingSystem')) {
                obj['OperatingSystem'] = ApiClient.convertToType(data['OperatingSystem'], OperatingSystem);
            }
            if (data.hasOwnProperty('ResourceCreationLimitPolicy')) {
                obj['ResourceCreationLimitPolicy'] = ResourceCreationLimitPolicy.constructFromObject(data['ResourceCreationLimitPolicy']);
            }
            if (data.hasOwnProperty('MetricGroups')) {
                obj['MetricGroups'] = ApiClient.convertToType(data['MetricGroups'], Array);
            }
            if (data.hasOwnProperty('StoppedActions')) {
                obj['StoppedActions'] = ApiClient.convertToType(data['StoppedActions'], Array);
            }
            if (data.hasOwnProperty('InstanceRoleArn')) {
                obj['InstanceRoleArn'] = ApiClient.convertToType(data['InstanceRoleArn'], 'String');
            }
            if (data.hasOwnProperty('CertificateConfiguration')) {
                obj['CertificateConfiguration'] = CertificateConfiguration.constructFromObject(data['CertificateConfiguration']);
            }
            if (data.hasOwnProperty('ComputeType')) {
                obj['ComputeType'] = ApiClient.convertToType(data['ComputeType'], ComputeType);
            }
            if (data.hasOwnProperty('AnywhereConfiguration')) {
                obj['AnywhereConfiguration'] = AnywhereConfiguration.constructFromObject(data['AnywhereConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateFleetOutputFleetAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateFleetOutputFleetAttributes</code>.
     */
    static validateJSON(data) {
        // validate the optional field `FleetId`
        if (data['FleetId']) { // data not null
          String.validateJSON(data['FleetId']);
        }
        // validate the optional field `FleetArn`
        if (data['FleetArn']) { // data not null
          String.validateJSON(data['FleetArn']);
        }
        // validate the optional field `FleetType`
        if (data['FleetType']) { // data not null
          FleetType.validateJSON(data['FleetType']);
        }
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          EC2InstanceType.validateJSON(data['InstanceType']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `TerminationTime`
        if (data['TerminationTime']) { // data not null
          Date.validateJSON(data['TerminationTime']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          FleetStatus.validateJSON(data['Status']);
        }
        // validate the optional field `BuildId`
        if (data['BuildId']) { // data not null
          String.validateJSON(data['BuildId']);
        }
        // validate the optional field `BuildArn`
        if (data['BuildArn']) { // data not null
          String.validateJSON(data['BuildArn']);
        }
        // validate the optional field `ScriptId`
        if (data['ScriptId']) { // data not null
          String.validateJSON(data['ScriptId']);
        }
        // validate the optional field `ScriptArn`
        if (data['ScriptArn']) { // data not null
          String.validateJSON(data['ScriptArn']);
        }
        // validate the optional field `ServerLaunchPath`
        if (data['ServerLaunchPath']) { // data not null
          String.validateJSON(data['ServerLaunchPath']);
        }
        // validate the optional field `ServerLaunchParameters`
        if (data['ServerLaunchParameters']) { // data not null
          String.validateJSON(data['ServerLaunchParameters']);
        }
        // validate the optional field `LogPaths`
        if (data['LogPaths']) { // data not null
          Array.validateJSON(data['LogPaths']);
        }
        // validate the optional field `NewGameSessionProtectionPolicy`
        if (data['NewGameSessionProtectionPolicy']) { // data not null
          ProtectionPolicy.validateJSON(data['NewGameSessionProtectionPolicy']);
        }
        // validate the optional field `OperatingSystem`
        if (data['OperatingSystem']) { // data not null
          OperatingSystem.validateJSON(data['OperatingSystem']);
        }
        // validate the optional field `ResourceCreationLimitPolicy`
        if (data['ResourceCreationLimitPolicy']) { // data not null
          ResourceCreationLimitPolicy.validateJSON(data['ResourceCreationLimitPolicy']);
        }
        // validate the optional field `MetricGroups`
        if (data['MetricGroups']) { // data not null
          Array.validateJSON(data['MetricGroups']);
        }
        // validate the optional field `StoppedActions`
        if (data['StoppedActions']) { // data not null
          Array.validateJSON(data['StoppedActions']);
        }
        // validate the optional field `InstanceRoleArn`
        if (data['InstanceRoleArn']) { // data not null
          String.validateJSON(data['InstanceRoleArn']);
        }
        // validate the optional field `CertificateConfiguration`
        if (data['CertificateConfiguration']) { // data not null
          CertificateConfiguration.validateJSON(data['CertificateConfiguration']);
        }
        // validate the optional field `ComputeType`
        if (data['ComputeType']) { // data not null
          ComputeType.validateJSON(data['ComputeType']);
        }
        // validate the optional field `AnywhereConfiguration`
        if (data['AnywhereConfiguration']) { // data not null
          AnywhereConfiguration.validateJSON(data['AnywhereConfiguration']);
        }

        return true;
    }


}



/**
 * @member {String} FleetId
 */
CreateFleetOutputFleetAttributes.prototype['FleetId'] = undefined;

/**
 * @member {String} FleetArn
 */
CreateFleetOutputFleetAttributes.prototype['FleetArn'] = undefined;

/**
 * @member {module:model/FleetType} FleetType
 */
CreateFleetOutputFleetAttributes.prototype['FleetType'] = undefined;

/**
 * @member {module:model/EC2InstanceType} InstanceType
 */
CreateFleetOutputFleetAttributes.prototype['InstanceType'] = undefined;

/**
 * @member {String} Description
 */
CreateFleetOutputFleetAttributes.prototype['Description'] = undefined;

/**
 * @member {String} Name
 */
CreateFleetOutputFleetAttributes.prototype['Name'] = undefined;

/**
 * @member {Date} CreationTime
 */
CreateFleetOutputFleetAttributes.prototype['CreationTime'] = undefined;

/**
 * @member {Date} TerminationTime
 */
CreateFleetOutputFleetAttributes.prototype['TerminationTime'] = undefined;

/**
 * @member {module:model/FleetStatus} Status
 */
CreateFleetOutputFleetAttributes.prototype['Status'] = undefined;

/**
 * @member {String} BuildId
 */
CreateFleetOutputFleetAttributes.prototype['BuildId'] = undefined;

/**
 * @member {String} BuildArn
 */
CreateFleetOutputFleetAttributes.prototype['BuildArn'] = undefined;

/**
 * @member {String} ScriptId
 */
CreateFleetOutputFleetAttributes.prototype['ScriptId'] = undefined;

/**
 * @member {String} ScriptArn
 */
CreateFleetOutputFleetAttributes.prototype['ScriptArn'] = undefined;

/**
 * @member {String} ServerLaunchPath
 */
CreateFleetOutputFleetAttributes.prototype['ServerLaunchPath'] = undefined;

/**
 * @member {String} ServerLaunchParameters
 */
CreateFleetOutputFleetAttributes.prototype['ServerLaunchParameters'] = undefined;

/**
 * @member {Array} LogPaths
 */
CreateFleetOutputFleetAttributes.prototype['LogPaths'] = undefined;

/**
 * @member {module:model/ProtectionPolicy} NewGameSessionProtectionPolicy
 */
CreateFleetOutputFleetAttributes.prototype['NewGameSessionProtectionPolicy'] = undefined;

/**
 * @member {module:model/OperatingSystem} OperatingSystem
 */
CreateFleetOutputFleetAttributes.prototype['OperatingSystem'] = undefined;

/**
 * @member {module:model/ResourceCreationLimitPolicy} ResourceCreationLimitPolicy
 */
CreateFleetOutputFleetAttributes.prototype['ResourceCreationLimitPolicy'] = undefined;

/**
 * @member {Array} MetricGroups
 */
CreateFleetOutputFleetAttributes.prototype['MetricGroups'] = undefined;

/**
 * @member {Array} StoppedActions
 */
CreateFleetOutputFleetAttributes.prototype['StoppedActions'] = undefined;

/**
 * @member {String} InstanceRoleArn
 */
CreateFleetOutputFleetAttributes.prototype['InstanceRoleArn'] = undefined;

/**
 * @member {module:model/CertificateConfiguration} CertificateConfiguration
 */
CreateFleetOutputFleetAttributes.prototype['CertificateConfiguration'] = undefined;

/**
 * @member {module:model/ComputeType} ComputeType
 */
CreateFleetOutputFleetAttributes.prototype['ComputeType'] = undefined;

/**
 * @member {module:model/AnywhereConfiguration} AnywhereConfiguration
 */
CreateFleetOutputFleetAttributes.prototype['AnywhereConfiguration'] = undefined;


// Implement FleetAttributes interface:
/**
 * @member {String} FleetId
 */
FleetAttributes.prototype['FleetId'] = undefined;
/**
 * @member {String} FleetArn
 */
FleetAttributes.prototype['FleetArn'] = undefined;
/**
 * @member {module:model/FleetType} FleetType
 */
FleetAttributes.prototype['FleetType'] = undefined;
/**
 * @member {module:model/EC2InstanceType} InstanceType
 */
FleetAttributes.prototype['InstanceType'] = undefined;
/**
 * @member {String} Description
 */
FleetAttributes.prototype['Description'] = undefined;
/**
 * @member {String} Name
 */
FleetAttributes.prototype['Name'] = undefined;
/**
 * @member {Date} CreationTime
 */
FleetAttributes.prototype['CreationTime'] = undefined;
/**
 * @member {Date} TerminationTime
 */
FleetAttributes.prototype['TerminationTime'] = undefined;
/**
 * @member {module:model/FleetStatus} Status
 */
FleetAttributes.prototype['Status'] = undefined;
/**
 * @member {String} BuildId
 */
FleetAttributes.prototype['BuildId'] = undefined;
/**
 * @member {String} BuildArn
 */
FleetAttributes.prototype['BuildArn'] = undefined;
/**
 * @member {String} ScriptId
 */
FleetAttributes.prototype['ScriptId'] = undefined;
/**
 * @member {String} ScriptArn
 */
FleetAttributes.prototype['ScriptArn'] = undefined;
/**
 * @member {String} ServerLaunchPath
 */
FleetAttributes.prototype['ServerLaunchPath'] = undefined;
/**
 * @member {String} ServerLaunchParameters
 */
FleetAttributes.prototype['ServerLaunchParameters'] = undefined;
/**
 * @member {Array} LogPaths
 */
FleetAttributes.prototype['LogPaths'] = undefined;
/**
 * @member {module:model/ProtectionPolicy} NewGameSessionProtectionPolicy
 */
FleetAttributes.prototype['NewGameSessionProtectionPolicy'] = undefined;
/**
 * @member {module:model/OperatingSystem} OperatingSystem
 */
FleetAttributes.prototype['OperatingSystem'] = undefined;
/**
 * @member {module:model/ResourceCreationLimitPolicy} ResourceCreationLimitPolicy
 */
FleetAttributes.prototype['ResourceCreationLimitPolicy'] = undefined;
/**
 * @member {Array} MetricGroups
 */
FleetAttributes.prototype['MetricGroups'] = undefined;
/**
 * @member {Array} StoppedActions
 */
FleetAttributes.prototype['StoppedActions'] = undefined;
/**
 * @member {String} InstanceRoleArn
 */
FleetAttributes.prototype['InstanceRoleArn'] = undefined;
/**
 * @member {module:model/CertificateConfiguration} CertificateConfiguration
 */
FleetAttributes.prototype['CertificateConfiguration'] = undefined;
/**
 * @member {module:model/ComputeType} ComputeType
 */
FleetAttributes.prototype['ComputeType'] = undefined;
/**
 * @member {module:model/AnywhereConfiguration} AnywhereConfiguration
 */
FleetAttributes.prototype['AnywhereConfiguration'] = undefined;




export default CreateFleetOutputFleetAttributes;

