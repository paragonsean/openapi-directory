# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_build_output_build import CreateBuildOutputBuild
from openapi_server.models.create_build_output_storage_location import CreateBuildOutputStorageLocation
from openapi_server.models.create_build_output_upload_credentials import CreateBuildOutputUploadCredentials
from openapi_server import util


class CreateBuildOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build: CreateBuildOutputBuild=None, upload_credentials: CreateBuildOutputUploadCredentials=None, storage_location: CreateBuildOutputStorageLocation=None):
        """CreateBuildOutput - a model defined in OpenAPI

        :param build: The build of this CreateBuildOutput.
        :param upload_credentials: The upload_credentials of this CreateBuildOutput.
        :param storage_location: The storage_location of this CreateBuildOutput.
        """
        self.openapi_types = {
            'build': CreateBuildOutputBuild,
            'upload_credentials': CreateBuildOutputUploadCredentials,
            'storage_location': CreateBuildOutputStorageLocation
        }

        self.attribute_map = {
            'build': 'Build',
            'upload_credentials': 'UploadCredentials',
            'storage_location': 'StorageLocation'
        }

        self._build = build
        self._upload_credentials = upload_credentials
        self._storage_location = storage_location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateBuildOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateBuildOutput of this CreateBuildOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build(self):
        """Gets the build of this CreateBuildOutput.


        :return: The build of this CreateBuildOutput.
        :rtype: CreateBuildOutputBuild
        """
        return self._build

    @build.setter
    def build(self, build):
        """Sets the build of this CreateBuildOutput.


        :param build: The build of this CreateBuildOutput.
        :type build: CreateBuildOutputBuild
        """

        self._build = build

    @property
    def upload_credentials(self):
        """Gets the upload_credentials of this CreateBuildOutput.


        :return: The upload_credentials of this CreateBuildOutput.
        :rtype: CreateBuildOutputUploadCredentials
        """
        return self._upload_credentials

    @upload_credentials.setter
    def upload_credentials(self, upload_credentials):
        """Sets the upload_credentials of this CreateBuildOutput.


        :param upload_credentials: The upload_credentials of this CreateBuildOutput.
        :type upload_credentials: CreateBuildOutputUploadCredentials
        """

        self._upload_credentials = upload_credentials

    @property
    def storage_location(self):
        """Gets the storage_location of this CreateBuildOutput.


        :return: The storage_location of this CreateBuildOutput.
        :rtype: CreateBuildOutputStorageLocation
        """
        return self._storage_location

    @storage_location.setter
    def storage_location(self, storage_location):
        """Sets the storage_location of this CreateBuildOutput.


        :param storage_location: The storage_location of this CreateBuildOutput.
        :type storage_location: CreateBuildOutputStorageLocation
        """

        self._storage_location = storage_location
