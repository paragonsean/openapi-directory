# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeGameServerInstancesInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game_server_group_name: str=None, instance_ids: List=None, limit: int=None, next_token: str=None):
        """DescribeGameServerInstancesInput - a model defined in OpenAPI

        :param game_server_group_name: The game_server_group_name of this DescribeGameServerInstancesInput.
        :param instance_ids: The instance_ids of this DescribeGameServerInstancesInput.
        :param limit: The limit of this DescribeGameServerInstancesInput.
        :param next_token: The next_token of this DescribeGameServerInstancesInput.
        """
        self.openapi_types = {
            'game_server_group_name': str,
            'instance_ids': List,
            'limit': int,
            'next_token': str
        }

        self.attribute_map = {
            'game_server_group_name': 'GameServerGroupName',
            'instance_ids': 'InstanceIds',
            'limit': 'Limit',
            'next_token': 'NextToken'
        }

        self._game_server_group_name = game_server_group_name
        self._instance_ids = instance_ids
        self._limit = limit
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeGameServerInstancesInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeGameServerInstancesInput of this DescribeGameServerInstancesInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_server_group_name(self):
        """Gets the game_server_group_name of this DescribeGameServerInstancesInput.


        :return: The game_server_group_name of this DescribeGameServerInstancesInput.
        :rtype: str
        """
        return self._game_server_group_name

    @game_server_group_name.setter
    def game_server_group_name(self, game_server_group_name):
        """Sets the game_server_group_name of this DescribeGameServerInstancesInput.


        :param game_server_group_name: The game_server_group_name of this DescribeGameServerInstancesInput.
        :type game_server_group_name: str
        """
        if game_server_group_name is None:
            raise ValueError("Invalid value for `game_server_group_name`, must not be `None`")

        self._game_server_group_name = game_server_group_name

    @property
    def instance_ids(self):
        """Gets the instance_ids of this DescribeGameServerInstancesInput.


        :return: The instance_ids of this DescribeGameServerInstancesInput.
        :rtype: List
        """
        return self._instance_ids

    @instance_ids.setter
    def instance_ids(self, instance_ids):
        """Sets the instance_ids of this DescribeGameServerInstancesInput.


        :param instance_ids: The instance_ids of this DescribeGameServerInstancesInput.
        :type instance_ids: List
        """

        self._instance_ids = instance_ids

    @property
    def limit(self):
        """Gets the limit of this DescribeGameServerInstancesInput.


        :return: The limit of this DescribeGameServerInstancesInput.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this DescribeGameServerInstancesInput.


        :param limit: The limit of this DescribeGameServerInstancesInput.
        :type limit: int
        """

        self._limit = limit

    @property
    def next_token(self):
        """Gets the next_token of this DescribeGameServerInstancesInput.


        :return: The next_token of this DescribeGameServerInstancesInput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeGameServerInstancesInput.


        :param next_token: The next_token of this DescribeGameServerInstancesInput.
        :type next_token: str
        """

        self._next_token = next_token
