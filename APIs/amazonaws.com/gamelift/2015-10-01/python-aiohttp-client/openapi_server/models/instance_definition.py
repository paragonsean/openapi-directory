# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.game_server_group_instance_type import GameServerGroupInstanceType
from openapi_server import util


class InstanceDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_type: GameServerGroupInstanceType=None, weighted_capacity: str=None):
        """InstanceDefinition - a model defined in OpenAPI

        :param instance_type: The instance_type of this InstanceDefinition.
        :param weighted_capacity: The weighted_capacity of this InstanceDefinition.
        """
        self.openapi_types = {
            'instance_type': GameServerGroupInstanceType,
            'weighted_capacity': str
        }

        self.attribute_map = {
            'instance_type': 'InstanceType',
            'weighted_capacity': 'WeightedCapacity'
        }

        self._instance_type = instance_type
        self._weighted_capacity = weighted_capacity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceDefinition of this InstanceDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_type(self):
        """Gets the instance_type of this InstanceDefinition.


        :return: The instance_type of this InstanceDefinition.
        :rtype: GameServerGroupInstanceType
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this InstanceDefinition.


        :param instance_type: The instance_type of this InstanceDefinition.
        :type instance_type: GameServerGroupInstanceType
        """
        if instance_type is None:
            raise ValueError("Invalid value for `instance_type`, must not be `None`")

        self._instance_type = instance_type

    @property
    def weighted_capacity(self):
        """Gets the weighted_capacity of this InstanceDefinition.


        :return: The weighted_capacity of this InstanceDefinition.
        :rtype: str
        """
        return self._weighted_capacity

    @weighted_capacity.setter
    def weighted_capacity(self, weighted_capacity):
        """Sets the weighted_capacity of this InstanceDefinition.


        :param weighted_capacity: The weighted_capacity of this InstanceDefinition.
        :type weighted_capacity: str
        """

        self._weighted_capacity = weighted_capacity
