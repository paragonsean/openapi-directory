# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.balancing_strategy import BalancingStrategy
from openapi_server.models.game_server_protection_policy import GameServerProtectionPolicy
from openapi_server import util


class UpdateGameServerGroupInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game_server_group_name: str=None, role_arn: str=None, instance_definitions: List=None, game_server_protection_policy: GameServerProtectionPolicy=None, balancing_strategy: BalancingStrategy=None):
        """UpdateGameServerGroupInput - a model defined in OpenAPI

        :param game_server_group_name: The game_server_group_name of this UpdateGameServerGroupInput.
        :param role_arn: The role_arn of this UpdateGameServerGroupInput.
        :param instance_definitions: The instance_definitions of this UpdateGameServerGroupInput.
        :param game_server_protection_policy: The game_server_protection_policy of this UpdateGameServerGroupInput.
        :param balancing_strategy: The balancing_strategy of this UpdateGameServerGroupInput.
        """
        self.openapi_types = {
            'game_server_group_name': str,
            'role_arn': str,
            'instance_definitions': List,
            'game_server_protection_policy': GameServerProtectionPolicy,
            'balancing_strategy': BalancingStrategy
        }

        self.attribute_map = {
            'game_server_group_name': 'GameServerGroupName',
            'role_arn': 'RoleArn',
            'instance_definitions': 'InstanceDefinitions',
            'game_server_protection_policy': 'GameServerProtectionPolicy',
            'balancing_strategy': 'BalancingStrategy'
        }

        self._game_server_group_name = game_server_group_name
        self._role_arn = role_arn
        self._instance_definitions = instance_definitions
        self._game_server_protection_policy = game_server_protection_policy
        self._balancing_strategy = balancing_strategy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateGameServerGroupInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateGameServerGroupInput of this UpdateGameServerGroupInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_server_group_name(self):
        """Gets the game_server_group_name of this UpdateGameServerGroupInput.


        :return: The game_server_group_name of this UpdateGameServerGroupInput.
        :rtype: str
        """
        return self._game_server_group_name

    @game_server_group_name.setter
    def game_server_group_name(self, game_server_group_name):
        """Sets the game_server_group_name of this UpdateGameServerGroupInput.


        :param game_server_group_name: The game_server_group_name of this UpdateGameServerGroupInput.
        :type game_server_group_name: str
        """
        if game_server_group_name is None:
            raise ValueError("Invalid value for `game_server_group_name`, must not be `None`")

        self._game_server_group_name = game_server_group_name

    @property
    def role_arn(self):
        """Gets the role_arn of this UpdateGameServerGroupInput.


        :return: The role_arn of this UpdateGameServerGroupInput.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this UpdateGameServerGroupInput.


        :param role_arn: The role_arn of this UpdateGameServerGroupInput.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def instance_definitions(self):
        """Gets the instance_definitions of this UpdateGameServerGroupInput.


        :return: The instance_definitions of this UpdateGameServerGroupInput.
        :rtype: List
        """
        return self._instance_definitions

    @instance_definitions.setter
    def instance_definitions(self, instance_definitions):
        """Sets the instance_definitions of this UpdateGameServerGroupInput.


        :param instance_definitions: The instance_definitions of this UpdateGameServerGroupInput.
        :type instance_definitions: List
        """

        self._instance_definitions = instance_definitions

    @property
    def game_server_protection_policy(self):
        """Gets the game_server_protection_policy of this UpdateGameServerGroupInput.


        :return: The game_server_protection_policy of this UpdateGameServerGroupInput.
        :rtype: GameServerProtectionPolicy
        """
        return self._game_server_protection_policy

    @game_server_protection_policy.setter
    def game_server_protection_policy(self, game_server_protection_policy):
        """Sets the game_server_protection_policy of this UpdateGameServerGroupInput.


        :param game_server_protection_policy: The game_server_protection_policy of this UpdateGameServerGroupInput.
        :type game_server_protection_policy: GameServerProtectionPolicy
        """

        self._game_server_protection_policy = game_server_protection_policy

    @property
    def balancing_strategy(self):
        """Gets the balancing_strategy of this UpdateGameServerGroupInput.


        :return: The balancing_strategy of this UpdateGameServerGroupInput.
        :rtype: BalancingStrategy
        """
        return self._balancing_strategy

    @balancing_strategy.setter
    def balancing_strategy(self, balancing_strategy):
        """Sets the balancing_strategy of this UpdateGameServerGroupInput.


        :param balancing_strategy: The balancing_strategy of this UpdateGameServerGroupInput.
        :type balancing_strategy: BalancingStrategy
        """

        self._balancing_strategy = balancing_strategy
