# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_fleet_output_fleet_attributes import CreateFleetOutputFleetAttributes
from openapi_server import util


class CreateFleetOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fleet_attributes: CreateFleetOutputFleetAttributes=None, location_states: List=None):
        """CreateFleetOutput - a model defined in OpenAPI

        :param fleet_attributes: The fleet_attributes of this CreateFleetOutput.
        :param location_states: The location_states of this CreateFleetOutput.
        """
        self.openapi_types = {
            'fleet_attributes': CreateFleetOutputFleetAttributes,
            'location_states': List
        }

        self.attribute_map = {
            'fleet_attributes': 'FleetAttributes',
            'location_states': 'LocationStates'
        }

        self._fleet_attributes = fleet_attributes
        self._location_states = location_states

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFleetOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFleetOutput of this CreateFleetOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fleet_attributes(self):
        """Gets the fleet_attributes of this CreateFleetOutput.


        :return: The fleet_attributes of this CreateFleetOutput.
        :rtype: CreateFleetOutputFleetAttributes
        """
        return self._fleet_attributes

    @fleet_attributes.setter
    def fleet_attributes(self, fleet_attributes):
        """Sets the fleet_attributes of this CreateFleetOutput.


        :param fleet_attributes: The fleet_attributes of this CreateFleetOutput.
        :type fleet_attributes: CreateFleetOutputFleetAttributes
        """

        self._fleet_attributes = fleet_attributes

    @property
    def location_states(self):
        """Gets the location_states of this CreateFleetOutput.


        :return: The location_states of this CreateFleetOutput.
        :rtype: List
        """
        return self._location_states

    @location_states.setter
    def location_states(self, location_states):
        """Sets the location_states of this CreateFleetOutput.


        :param location_states: The location_states of this CreateFleetOutput.
        :type location_states: List
        """

        self._location_states = location_states
