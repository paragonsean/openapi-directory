# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateMatchmakingRuleSetInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, rule_set_body: str=None, tags: List=None):
        """CreateMatchmakingRuleSetInput - a model defined in OpenAPI

        :param name: The name of this CreateMatchmakingRuleSetInput.
        :param rule_set_body: The rule_set_body of this CreateMatchmakingRuleSetInput.
        :param tags: The tags of this CreateMatchmakingRuleSetInput.
        """
        self.openapi_types = {
            'name': str,
            'rule_set_body': str,
            'tags': List
        }

        self.attribute_map = {
            'name': 'Name',
            'rule_set_body': 'RuleSetBody',
            'tags': 'Tags'
        }

        self._name = name
        self._rule_set_body = rule_set_body
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateMatchmakingRuleSetInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateMatchmakingRuleSetInput of this CreateMatchmakingRuleSetInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateMatchmakingRuleSetInput.


        :return: The name of this CreateMatchmakingRuleSetInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateMatchmakingRuleSetInput.


        :param name: The name of this CreateMatchmakingRuleSetInput.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def rule_set_body(self):
        """Gets the rule_set_body of this CreateMatchmakingRuleSetInput.


        :return: The rule_set_body of this CreateMatchmakingRuleSetInput.
        :rtype: str
        """
        return self._rule_set_body

    @rule_set_body.setter
    def rule_set_body(self, rule_set_body):
        """Sets the rule_set_body of this CreateMatchmakingRuleSetInput.


        :param rule_set_body: The rule_set_body of this CreateMatchmakingRuleSetInput.
        :type rule_set_body: str
        """
        if rule_set_body is None:
            raise ValueError("Invalid value for `rule_set_body`, must not be `None`")

        self._rule_set_body = rule_set_body

    @property
    def tags(self):
        """Gets the tags of this CreateMatchmakingRuleSetInput.


        :return: The tags of this CreateMatchmakingRuleSetInput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateMatchmakingRuleSetInput.


        :param tags: The tags of this CreateMatchmakingRuleSetInput.
        :type tags: List
        """

        self._tags = tags
