# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Player(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, player_id: str=None, player_attributes: Dict=None, team: str=None, latency_in_ms: Dict=None):
        """Player - a model defined in OpenAPI

        :param player_id: The player_id of this Player.
        :param player_attributes: The player_attributes of this Player.
        :param team: The team of this Player.
        :param latency_in_ms: The latency_in_ms of this Player.
        """
        self.openapi_types = {
            'player_id': str,
            'player_attributes': Dict,
            'team': str,
            'latency_in_ms': Dict
        }

        self.attribute_map = {
            'player_id': 'PlayerId',
            'player_attributes': 'PlayerAttributes',
            'team': 'Team',
            'latency_in_ms': 'LatencyInMs'
        }

        self._player_id = player_id
        self._player_attributes = player_attributes
        self._team = team
        self._latency_in_ms = latency_in_ms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Player':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Player of this Player.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def player_id(self):
        """Gets the player_id of this Player.


        :return: The player_id of this Player.
        :rtype: str
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this Player.


        :param player_id: The player_id of this Player.
        :type player_id: str
        """

        self._player_id = player_id

    @property
    def player_attributes(self):
        """Gets the player_attributes of this Player.


        :return: The player_attributes of this Player.
        :rtype: Dict
        """
        return self._player_attributes

    @player_attributes.setter
    def player_attributes(self, player_attributes):
        """Sets the player_attributes of this Player.


        :param player_attributes: The player_attributes of this Player.
        :type player_attributes: Dict
        """

        self._player_attributes = player_attributes

    @property
    def team(self):
        """Gets the team of this Player.


        :return: The team of this Player.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this Player.


        :param team: The team of this Player.
        :type team: str
        """

        self._team = team

    @property
    def latency_in_ms(self):
        """Gets the latency_in_ms of this Player.


        :return: The latency_in_ms of this Player.
        :rtype: Dict
        """
        return self._latency_in_ms

    @latency_in_ms.setter
    def latency_in_ms(self, latency_in_ms):
        """Sets the latency_in_ms of this Player.


        :param latency_in_ms: The latency_in_ms of this Player.
        :type latency_in_ms: Dict
        """

        self._latency_in_ms = latency_in_ms
