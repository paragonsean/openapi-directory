# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateFleetPortSettingsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fleet_id: str=None, inbound_permission_authorizations: List=None, inbound_permission_revocations: List=None):
        """UpdateFleetPortSettingsInput - a model defined in OpenAPI

        :param fleet_id: The fleet_id of this UpdateFleetPortSettingsInput.
        :param inbound_permission_authorizations: The inbound_permission_authorizations of this UpdateFleetPortSettingsInput.
        :param inbound_permission_revocations: The inbound_permission_revocations of this UpdateFleetPortSettingsInput.
        """
        self.openapi_types = {
            'fleet_id': str,
            'inbound_permission_authorizations': List,
            'inbound_permission_revocations': List
        }

        self.attribute_map = {
            'fleet_id': 'FleetId',
            'inbound_permission_authorizations': 'InboundPermissionAuthorizations',
            'inbound_permission_revocations': 'InboundPermissionRevocations'
        }

        self._fleet_id = fleet_id
        self._inbound_permission_authorizations = inbound_permission_authorizations
        self._inbound_permission_revocations = inbound_permission_revocations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFleetPortSettingsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFleetPortSettingsInput of this UpdateFleetPortSettingsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fleet_id(self):
        """Gets the fleet_id of this UpdateFleetPortSettingsInput.


        :return: The fleet_id of this UpdateFleetPortSettingsInput.
        :rtype: str
        """
        return self._fleet_id

    @fleet_id.setter
    def fleet_id(self, fleet_id):
        """Sets the fleet_id of this UpdateFleetPortSettingsInput.


        :param fleet_id: The fleet_id of this UpdateFleetPortSettingsInput.
        :type fleet_id: str
        """
        if fleet_id is None:
            raise ValueError("Invalid value for `fleet_id`, must not be `None`")

        self._fleet_id = fleet_id

    @property
    def inbound_permission_authorizations(self):
        """Gets the inbound_permission_authorizations of this UpdateFleetPortSettingsInput.


        :return: The inbound_permission_authorizations of this UpdateFleetPortSettingsInput.
        :rtype: List
        """
        return self._inbound_permission_authorizations

    @inbound_permission_authorizations.setter
    def inbound_permission_authorizations(self, inbound_permission_authorizations):
        """Sets the inbound_permission_authorizations of this UpdateFleetPortSettingsInput.


        :param inbound_permission_authorizations: The inbound_permission_authorizations of this UpdateFleetPortSettingsInput.
        :type inbound_permission_authorizations: List
        """

        self._inbound_permission_authorizations = inbound_permission_authorizations

    @property
    def inbound_permission_revocations(self):
        """Gets the inbound_permission_revocations of this UpdateFleetPortSettingsInput.


        :return: The inbound_permission_revocations of this UpdateFleetPortSettingsInput.
        :rtype: List
        """
        return self._inbound_permission_revocations

    @inbound_permission_revocations.setter
    def inbound_permission_revocations(self, inbound_permission_revocations):
        """Sets the inbound_permission_revocations of this UpdateFleetPortSettingsInput.


        :param inbound_permission_revocations: The inbound_permission_revocations of this UpdateFleetPortSettingsInput.
        :type inbound_permission_revocations: List
        """

        self._inbound_permission_revocations = inbound_permission_revocations
