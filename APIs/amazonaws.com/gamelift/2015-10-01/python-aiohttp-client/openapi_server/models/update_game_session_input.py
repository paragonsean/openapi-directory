# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.player_session_creation_policy import PlayerSessionCreationPolicy
from openapi_server.models.protection_policy import ProtectionPolicy
from openapi_server import util


class UpdateGameSessionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game_session_id: str=None, maximum_player_session_count: int=None, name: str=None, player_session_creation_policy: PlayerSessionCreationPolicy=None, protection_policy: ProtectionPolicy=None):
        """UpdateGameSessionInput - a model defined in OpenAPI

        :param game_session_id: The game_session_id of this UpdateGameSessionInput.
        :param maximum_player_session_count: The maximum_player_session_count of this UpdateGameSessionInput.
        :param name: The name of this UpdateGameSessionInput.
        :param player_session_creation_policy: The player_session_creation_policy of this UpdateGameSessionInput.
        :param protection_policy: The protection_policy of this UpdateGameSessionInput.
        """
        self.openapi_types = {
            'game_session_id': str,
            'maximum_player_session_count': int,
            'name': str,
            'player_session_creation_policy': PlayerSessionCreationPolicy,
            'protection_policy': ProtectionPolicy
        }

        self.attribute_map = {
            'game_session_id': 'GameSessionId',
            'maximum_player_session_count': 'MaximumPlayerSessionCount',
            'name': 'Name',
            'player_session_creation_policy': 'PlayerSessionCreationPolicy',
            'protection_policy': 'ProtectionPolicy'
        }

        self._game_session_id = game_session_id
        self._maximum_player_session_count = maximum_player_session_count
        self._name = name
        self._player_session_creation_policy = player_session_creation_policy
        self._protection_policy = protection_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateGameSessionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateGameSessionInput of this UpdateGameSessionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_session_id(self):
        """Gets the game_session_id of this UpdateGameSessionInput.


        :return: The game_session_id of this UpdateGameSessionInput.
        :rtype: str
        """
        return self._game_session_id

    @game_session_id.setter
    def game_session_id(self, game_session_id):
        """Sets the game_session_id of this UpdateGameSessionInput.


        :param game_session_id: The game_session_id of this UpdateGameSessionInput.
        :type game_session_id: str
        """
        if game_session_id is None:
            raise ValueError("Invalid value for `game_session_id`, must not be `None`")

        self._game_session_id = game_session_id

    @property
    def maximum_player_session_count(self):
        """Gets the maximum_player_session_count of this UpdateGameSessionInput.


        :return: The maximum_player_session_count of this UpdateGameSessionInput.
        :rtype: int
        """
        return self._maximum_player_session_count

    @maximum_player_session_count.setter
    def maximum_player_session_count(self, maximum_player_session_count):
        """Sets the maximum_player_session_count of this UpdateGameSessionInput.


        :param maximum_player_session_count: The maximum_player_session_count of this UpdateGameSessionInput.
        :type maximum_player_session_count: int
        """

        self._maximum_player_session_count = maximum_player_session_count

    @property
    def name(self):
        """Gets the name of this UpdateGameSessionInput.


        :return: The name of this UpdateGameSessionInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateGameSessionInput.


        :param name: The name of this UpdateGameSessionInput.
        :type name: str
        """

        self._name = name

    @property
    def player_session_creation_policy(self):
        """Gets the player_session_creation_policy of this UpdateGameSessionInput.


        :return: The player_session_creation_policy of this UpdateGameSessionInput.
        :rtype: PlayerSessionCreationPolicy
        """
        return self._player_session_creation_policy

    @player_session_creation_policy.setter
    def player_session_creation_policy(self, player_session_creation_policy):
        """Sets the player_session_creation_policy of this UpdateGameSessionInput.


        :param player_session_creation_policy: The player_session_creation_policy of this UpdateGameSessionInput.
        :type player_session_creation_policy: PlayerSessionCreationPolicy
        """

        self._player_session_creation_policy = player_session_creation_policy

    @property
    def protection_policy(self):
        """Gets the protection_policy of this UpdateGameSessionInput.


        :return: The protection_policy of this UpdateGameSessionInput.
        :rtype: ProtectionPolicy
        """
        return self._protection_policy

    @protection_policy.setter
    def protection_policy(self, protection_policy):
        """Sets the protection_policy of this UpdateGameSessionInput.


        :param protection_policy: The protection_policy of this UpdateGameSessionInput.
        :type protection_policy: ProtectionPolicy
        """

        self._protection_policy = protection_policy
