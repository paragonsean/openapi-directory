# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.claim_game_server_input_filter_option import ClaimGameServerInputFilterOption
from openapi_server import util


class ClaimGameServerInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game_server_group_name: str=None, game_server_id: str=None, game_server_data: str=None, filter_option: ClaimGameServerInputFilterOption=None):
        """ClaimGameServerInput - a model defined in OpenAPI

        :param game_server_group_name: The game_server_group_name of this ClaimGameServerInput.
        :param game_server_id: The game_server_id of this ClaimGameServerInput.
        :param game_server_data: The game_server_data of this ClaimGameServerInput.
        :param filter_option: The filter_option of this ClaimGameServerInput.
        """
        self.openapi_types = {
            'game_server_group_name': str,
            'game_server_id': str,
            'game_server_data': str,
            'filter_option': ClaimGameServerInputFilterOption
        }

        self.attribute_map = {
            'game_server_group_name': 'GameServerGroupName',
            'game_server_id': 'GameServerId',
            'game_server_data': 'GameServerData',
            'filter_option': 'FilterOption'
        }

        self._game_server_group_name = game_server_group_name
        self._game_server_id = game_server_id
        self._game_server_data = game_server_data
        self._filter_option = filter_option

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClaimGameServerInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClaimGameServerInput of this ClaimGameServerInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_server_group_name(self):
        """Gets the game_server_group_name of this ClaimGameServerInput.


        :return: The game_server_group_name of this ClaimGameServerInput.
        :rtype: str
        """
        return self._game_server_group_name

    @game_server_group_name.setter
    def game_server_group_name(self, game_server_group_name):
        """Sets the game_server_group_name of this ClaimGameServerInput.


        :param game_server_group_name: The game_server_group_name of this ClaimGameServerInput.
        :type game_server_group_name: str
        """
        if game_server_group_name is None:
            raise ValueError("Invalid value for `game_server_group_name`, must not be `None`")

        self._game_server_group_name = game_server_group_name

    @property
    def game_server_id(self):
        """Gets the game_server_id of this ClaimGameServerInput.


        :return: The game_server_id of this ClaimGameServerInput.
        :rtype: str
        """
        return self._game_server_id

    @game_server_id.setter
    def game_server_id(self, game_server_id):
        """Sets the game_server_id of this ClaimGameServerInput.


        :param game_server_id: The game_server_id of this ClaimGameServerInput.
        :type game_server_id: str
        """

        self._game_server_id = game_server_id

    @property
    def game_server_data(self):
        """Gets the game_server_data of this ClaimGameServerInput.


        :return: The game_server_data of this ClaimGameServerInput.
        :rtype: str
        """
        return self._game_server_data

    @game_server_data.setter
    def game_server_data(self, game_server_data):
        """Sets the game_server_data of this ClaimGameServerInput.


        :param game_server_data: The game_server_data of this ClaimGameServerInput.
        :type game_server_data: str
        """

        self._game_server_data = game_server_data

    @property
    def filter_option(self):
        """Gets the filter_option of this ClaimGameServerInput.


        :return: The filter_option of this ClaimGameServerInput.
        :rtype: ClaimGameServerInputFilterOption
        """
        return self._filter_option

    @filter_option.setter
    def filter_option(self, filter_option):
        """Sets the filter_option of this ClaimGameServerInput.


        :param filter_option: The filter_option of this ClaimGameServerInput.
        :type filter_option: ClaimGameServerInputFilterOption
        """

        self._filter_option = filter_option
