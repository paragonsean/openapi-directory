# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_match_backfill_output_matchmaking_ticket import StartMatchBackfillOutputMatchmakingTicket
from openapi_server import util


class StartMatchBackfillOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, matchmaking_ticket: StartMatchBackfillOutputMatchmakingTicket=None):
        """StartMatchBackfillOutput - a model defined in OpenAPI

        :param matchmaking_ticket: The matchmaking_ticket of this StartMatchBackfillOutput.
        """
        self.openapi_types = {
            'matchmaking_ticket': StartMatchBackfillOutputMatchmakingTicket
        }

        self.attribute_map = {
            'matchmaking_ticket': 'MatchmakingTicket'
        }

        self._matchmaking_ticket = matchmaking_ticket

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartMatchBackfillOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartMatchBackfillOutput of this StartMatchBackfillOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def matchmaking_ticket(self):
        """Gets the matchmaking_ticket of this StartMatchBackfillOutput.


        :return: The matchmaking_ticket of this StartMatchBackfillOutput.
        :rtype: StartMatchBackfillOutputMatchmakingTicket
        """
        return self._matchmaking_ticket

    @matchmaking_ticket.setter
    def matchmaking_ticket(self, matchmaking_ticket):
        """Sets the matchmaking_ticket of this StartMatchBackfillOutput.


        :param matchmaking_ticket: The matchmaking_ticket of this StartMatchBackfillOutput.
        :type matchmaking_ticket: StartMatchBackfillOutputMatchmakingTicket
        """

        self._matchmaking_ticket = matchmaking_ticket
