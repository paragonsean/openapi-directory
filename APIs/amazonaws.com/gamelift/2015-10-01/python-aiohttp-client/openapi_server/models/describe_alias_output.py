# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_alias_output_alias import DescribeAliasOutputAlias
from openapi_server import util


class DescribeAliasOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alias: DescribeAliasOutputAlias=None):
        """DescribeAliasOutput - a model defined in OpenAPI

        :param alias: The alias of this DescribeAliasOutput.
        """
        self.openapi_types = {
            'alias': DescribeAliasOutputAlias
        }

        self.attribute_map = {
            'alias': 'Alias'
        }

        self._alias = alias

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAliasOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAliasOutput of this DescribeAliasOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alias(self):
        """Gets the alias of this DescribeAliasOutput.


        :return: The alias of this DescribeAliasOutput.
        :rtype: DescribeAliasOutputAlias
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this DescribeAliasOutput.


        :param alias: The alias of this DescribeAliasOutput.
        :type alias: DescribeAliasOutputAlias
        """

        self._alias = alias
