# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeGameSessionDetailsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fleet_id: str=None, game_session_id: str=None, alias_id: str=None, location: str=None, status_filter: str=None, limit: int=None, next_token: str=None):
        """DescribeGameSessionDetailsInput - a model defined in OpenAPI

        :param fleet_id: The fleet_id of this DescribeGameSessionDetailsInput.
        :param game_session_id: The game_session_id of this DescribeGameSessionDetailsInput.
        :param alias_id: The alias_id of this DescribeGameSessionDetailsInput.
        :param location: The location of this DescribeGameSessionDetailsInput.
        :param status_filter: The status_filter of this DescribeGameSessionDetailsInput.
        :param limit: The limit of this DescribeGameSessionDetailsInput.
        :param next_token: The next_token of this DescribeGameSessionDetailsInput.
        """
        self.openapi_types = {
            'fleet_id': str,
            'game_session_id': str,
            'alias_id': str,
            'location': str,
            'status_filter': str,
            'limit': int,
            'next_token': str
        }

        self.attribute_map = {
            'fleet_id': 'FleetId',
            'game_session_id': 'GameSessionId',
            'alias_id': 'AliasId',
            'location': 'Location',
            'status_filter': 'StatusFilter',
            'limit': 'Limit',
            'next_token': 'NextToken'
        }

        self._fleet_id = fleet_id
        self._game_session_id = game_session_id
        self._alias_id = alias_id
        self._location = location
        self._status_filter = status_filter
        self._limit = limit
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeGameSessionDetailsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeGameSessionDetailsInput of this DescribeGameSessionDetailsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fleet_id(self):
        """Gets the fleet_id of this DescribeGameSessionDetailsInput.


        :return: The fleet_id of this DescribeGameSessionDetailsInput.
        :rtype: str
        """
        return self._fleet_id

    @fleet_id.setter
    def fleet_id(self, fleet_id):
        """Sets the fleet_id of this DescribeGameSessionDetailsInput.


        :param fleet_id: The fleet_id of this DescribeGameSessionDetailsInput.
        :type fleet_id: str
        """

        self._fleet_id = fleet_id

    @property
    def game_session_id(self):
        """Gets the game_session_id of this DescribeGameSessionDetailsInput.


        :return: The game_session_id of this DescribeGameSessionDetailsInput.
        :rtype: str
        """
        return self._game_session_id

    @game_session_id.setter
    def game_session_id(self, game_session_id):
        """Sets the game_session_id of this DescribeGameSessionDetailsInput.


        :param game_session_id: The game_session_id of this DescribeGameSessionDetailsInput.
        :type game_session_id: str
        """

        self._game_session_id = game_session_id

    @property
    def alias_id(self):
        """Gets the alias_id of this DescribeGameSessionDetailsInput.


        :return: The alias_id of this DescribeGameSessionDetailsInput.
        :rtype: str
        """
        return self._alias_id

    @alias_id.setter
    def alias_id(self, alias_id):
        """Sets the alias_id of this DescribeGameSessionDetailsInput.


        :param alias_id: The alias_id of this DescribeGameSessionDetailsInput.
        :type alias_id: str
        """

        self._alias_id = alias_id

    @property
    def location(self):
        """Gets the location of this DescribeGameSessionDetailsInput.


        :return: The location of this DescribeGameSessionDetailsInput.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this DescribeGameSessionDetailsInput.


        :param location: The location of this DescribeGameSessionDetailsInput.
        :type location: str
        """

        self._location = location

    @property
    def status_filter(self):
        """Gets the status_filter of this DescribeGameSessionDetailsInput.


        :return: The status_filter of this DescribeGameSessionDetailsInput.
        :rtype: str
        """
        return self._status_filter

    @status_filter.setter
    def status_filter(self, status_filter):
        """Sets the status_filter of this DescribeGameSessionDetailsInput.


        :param status_filter: The status_filter of this DescribeGameSessionDetailsInput.
        :type status_filter: str
        """

        self._status_filter = status_filter

    @property
    def limit(self):
        """Gets the limit of this DescribeGameSessionDetailsInput.


        :return: The limit of this DescribeGameSessionDetailsInput.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this DescribeGameSessionDetailsInput.


        :param limit: The limit of this DescribeGameSessionDetailsInput.
        :type limit: int
        """

        self._limit = limit

    @property
    def next_token(self):
        """Gets the next_token of this DescribeGameSessionDetailsInput.


        :return: The next_token of this DescribeGameSessionDetailsInput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeGameSessionDetailsInput.


        :param next_token: The next_token of this DescribeGameSessionDetailsInput.
        :type next_token: str
        """

        self._next_token = next_token
