# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.game_server_group_auto_scaling_policy_target_tracking_configuration import GameServerGroupAutoScalingPolicyTargetTrackingConfiguration
from openapi_server import util


class CreateGameServerGroupInputAutoScalingPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, estimated_instance_warmup: int=None, target_tracking_configuration: GameServerGroupAutoScalingPolicyTargetTrackingConfiguration=None):
        """CreateGameServerGroupInputAutoScalingPolicy - a model defined in OpenAPI

        :param estimated_instance_warmup: The estimated_instance_warmup of this CreateGameServerGroupInputAutoScalingPolicy.
        :param target_tracking_configuration: The target_tracking_configuration of this CreateGameServerGroupInputAutoScalingPolicy.
        """
        self.openapi_types = {
            'estimated_instance_warmup': int,
            'target_tracking_configuration': GameServerGroupAutoScalingPolicyTargetTrackingConfiguration
        }

        self.attribute_map = {
            'estimated_instance_warmup': 'EstimatedInstanceWarmup',
            'target_tracking_configuration': 'TargetTrackingConfiguration'
        }

        self._estimated_instance_warmup = estimated_instance_warmup
        self._target_tracking_configuration = target_tracking_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateGameServerGroupInputAutoScalingPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateGameServerGroupInput_AutoScalingPolicy of this CreateGameServerGroupInputAutoScalingPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def estimated_instance_warmup(self):
        """Gets the estimated_instance_warmup of this CreateGameServerGroupInputAutoScalingPolicy.


        :return: The estimated_instance_warmup of this CreateGameServerGroupInputAutoScalingPolicy.
        :rtype: int
        """
        return self._estimated_instance_warmup

    @estimated_instance_warmup.setter
    def estimated_instance_warmup(self, estimated_instance_warmup):
        """Sets the estimated_instance_warmup of this CreateGameServerGroupInputAutoScalingPolicy.


        :param estimated_instance_warmup: The estimated_instance_warmup of this CreateGameServerGroupInputAutoScalingPolicy.
        :type estimated_instance_warmup: int
        """

        self._estimated_instance_warmup = estimated_instance_warmup

    @property
    def target_tracking_configuration(self):
        """Gets the target_tracking_configuration of this CreateGameServerGroupInputAutoScalingPolicy.


        :return: The target_tracking_configuration of this CreateGameServerGroupInputAutoScalingPolicy.
        :rtype: GameServerGroupAutoScalingPolicyTargetTrackingConfiguration
        """
        return self._target_tracking_configuration

    @target_tracking_configuration.setter
    def target_tracking_configuration(self, target_tracking_configuration):
        """Sets the target_tracking_configuration of this CreateGameServerGroupInputAutoScalingPolicy.


        :param target_tracking_configuration: The target_tracking_configuration of this CreateGameServerGroupInputAutoScalingPolicy.
        :type target_tracking_configuration: GameServerGroupAutoScalingPolicyTargetTrackingConfiguration
        """
        if target_tracking_configuration is None:
            raise ValueError("Invalid value for `target_tracking_configuration`, must not be `None`")

        self._target_tracking_configuration = target_tracking_configuration
