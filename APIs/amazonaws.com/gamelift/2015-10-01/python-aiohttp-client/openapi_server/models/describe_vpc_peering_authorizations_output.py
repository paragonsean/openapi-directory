# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeVpcPeeringAuthorizationsOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc_peering_authorizations: List=None):
        """DescribeVpcPeeringAuthorizationsOutput - a model defined in OpenAPI

        :param vpc_peering_authorizations: The vpc_peering_authorizations of this DescribeVpcPeeringAuthorizationsOutput.
        """
        self.openapi_types = {
            'vpc_peering_authorizations': List
        }

        self.attribute_map = {
            'vpc_peering_authorizations': 'VpcPeeringAuthorizations'
        }

        self._vpc_peering_authorizations = vpc_peering_authorizations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeVpcPeeringAuthorizationsOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeVpcPeeringAuthorizationsOutput of this DescribeVpcPeeringAuthorizationsOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc_peering_authorizations(self):
        """Gets the vpc_peering_authorizations of this DescribeVpcPeeringAuthorizationsOutput.


        :return: The vpc_peering_authorizations of this DescribeVpcPeeringAuthorizationsOutput.
        :rtype: List
        """
        return self._vpc_peering_authorizations

    @vpc_peering_authorizations.setter
    def vpc_peering_authorizations(self, vpc_peering_authorizations):
        """Sets the vpc_peering_authorizations of this DescribeVpcPeeringAuthorizationsOutput.


        :param vpc_peering_authorizations: The vpc_peering_authorizations of this DescribeVpcPeeringAuthorizationsOutput.
        :type vpc_peering_authorizations: List
        """

        self._vpc_peering_authorizations = vpc_peering_authorizations
