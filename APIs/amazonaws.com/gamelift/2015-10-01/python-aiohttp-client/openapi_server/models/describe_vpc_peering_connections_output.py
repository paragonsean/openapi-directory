# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeVpcPeeringConnectionsOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc_peering_connections: List=None):
        """DescribeVpcPeeringConnectionsOutput - a model defined in OpenAPI

        :param vpc_peering_connections: The vpc_peering_connections of this DescribeVpcPeeringConnectionsOutput.
        """
        self.openapi_types = {
            'vpc_peering_connections': List
        }

        self.attribute_map = {
            'vpc_peering_connections': 'VpcPeeringConnections'
        }

        self._vpc_peering_connections = vpc_peering_connections

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeVpcPeeringConnectionsOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeVpcPeeringConnectionsOutput of this DescribeVpcPeeringConnectionsOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc_peering_connections(self):
        """Gets the vpc_peering_connections of this DescribeVpcPeeringConnectionsOutput.


        :return: The vpc_peering_connections of this DescribeVpcPeeringConnectionsOutput.
        :rtype: List
        """
        return self._vpc_peering_connections

    @vpc_peering_connections.setter
    def vpc_peering_connections(self, vpc_peering_connections):
        """Sets the vpc_peering_connections of this DescribeVpcPeeringConnectionsOutput.


        :param vpc_peering_connections: The vpc_peering_connections of this DescribeVpcPeeringConnectionsOutput.
        :type vpc_peering_connections: List
        """

        self._vpc_peering_connections = vpc_peering_connections
