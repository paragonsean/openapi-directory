# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribePlayerSessionsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game_session_id: str=None, player_id: str=None, player_session_id: str=None, player_session_status_filter: str=None, limit: int=None, next_token: str=None):
        """DescribePlayerSessionsInput - a model defined in OpenAPI

        :param game_session_id: The game_session_id of this DescribePlayerSessionsInput.
        :param player_id: The player_id of this DescribePlayerSessionsInput.
        :param player_session_id: The player_session_id of this DescribePlayerSessionsInput.
        :param player_session_status_filter: The player_session_status_filter of this DescribePlayerSessionsInput.
        :param limit: The limit of this DescribePlayerSessionsInput.
        :param next_token: The next_token of this DescribePlayerSessionsInput.
        """
        self.openapi_types = {
            'game_session_id': str,
            'player_id': str,
            'player_session_id': str,
            'player_session_status_filter': str,
            'limit': int,
            'next_token': str
        }

        self.attribute_map = {
            'game_session_id': 'GameSessionId',
            'player_id': 'PlayerId',
            'player_session_id': 'PlayerSessionId',
            'player_session_status_filter': 'PlayerSessionStatusFilter',
            'limit': 'Limit',
            'next_token': 'NextToken'
        }

        self._game_session_id = game_session_id
        self._player_id = player_id
        self._player_session_id = player_session_id
        self._player_session_status_filter = player_session_status_filter
        self._limit = limit
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePlayerSessionsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePlayerSessionsInput of this DescribePlayerSessionsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_session_id(self):
        """Gets the game_session_id of this DescribePlayerSessionsInput.


        :return: The game_session_id of this DescribePlayerSessionsInput.
        :rtype: str
        """
        return self._game_session_id

    @game_session_id.setter
    def game_session_id(self, game_session_id):
        """Sets the game_session_id of this DescribePlayerSessionsInput.


        :param game_session_id: The game_session_id of this DescribePlayerSessionsInput.
        :type game_session_id: str
        """

        self._game_session_id = game_session_id

    @property
    def player_id(self):
        """Gets the player_id of this DescribePlayerSessionsInput.


        :return: The player_id of this DescribePlayerSessionsInput.
        :rtype: str
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this DescribePlayerSessionsInput.


        :param player_id: The player_id of this DescribePlayerSessionsInput.
        :type player_id: str
        """

        self._player_id = player_id

    @property
    def player_session_id(self):
        """Gets the player_session_id of this DescribePlayerSessionsInput.


        :return: The player_session_id of this DescribePlayerSessionsInput.
        :rtype: str
        """
        return self._player_session_id

    @player_session_id.setter
    def player_session_id(self, player_session_id):
        """Sets the player_session_id of this DescribePlayerSessionsInput.


        :param player_session_id: The player_session_id of this DescribePlayerSessionsInput.
        :type player_session_id: str
        """

        self._player_session_id = player_session_id

    @property
    def player_session_status_filter(self):
        """Gets the player_session_status_filter of this DescribePlayerSessionsInput.


        :return: The player_session_status_filter of this DescribePlayerSessionsInput.
        :rtype: str
        """
        return self._player_session_status_filter

    @player_session_status_filter.setter
    def player_session_status_filter(self, player_session_status_filter):
        """Sets the player_session_status_filter of this DescribePlayerSessionsInput.


        :param player_session_status_filter: The player_session_status_filter of this DescribePlayerSessionsInput.
        :type player_session_status_filter: str
        """

        self._player_session_status_filter = player_session_status_filter

    @property
    def limit(self):
        """Gets the limit of this DescribePlayerSessionsInput.


        :return: The limit of this DescribePlayerSessionsInput.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this DescribePlayerSessionsInput.


        :param limit: The limit of this DescribePlayerSessionsInput.
        :type limit: int
        """

        self._limit = limit

    @property
    def next_token(self):
        """Gets the next_token of this DescribePlayerSessionsInput.


        :return: The next_token of this DescribePlayerSessionsInput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribePlayerSessionsInput.


        :param next_token: The next_token of this DescribePlayerSessionsInput.
        :type next_token: str
        """

        self._next_token = next_token
