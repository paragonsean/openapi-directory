# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateGameSessionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fleet_id: str=None, alias_id: str=None, maximum_player_session_count: int=None, name: str=None, game_properties: List=None, creator_id: str=None, game_session_id: str=None, idempotency_token: str=None, game_session_data: str=None, location: str=None):
        """CreateGameSessionInput - a model defined in OpenAPI

        :param fleet_id: The fleet_id of this CreateGameSessionInput.
        :param alias_id: The alias_id of this CreateGameSessionInput.
        :param maximum_player_session_count: The maximum_player_session_count of this CreateGameSessionInput.
        :param name: The name of this CreateGameSessionInput.
        :param game_properties: The game_properties of this CreateGameSessionInput.
        :param creator_id: The creator_id of this CreateGameSessionInput.
        :param game_session_id: The game_session_id of this CreateGameSessionInput.
        :param idempotency_token: The idempotency_token of this CreateGameSessionInput.
        :param game_session_data: The game_session_data of this CreateGameSessionInput.
        :param location: The location of this CreateGameSessionInput.
        """
        self.openapi_types = {
            'fleet_id': str,
            'alias_id': str,
            'maximum_player_session_count': int,
            'name': str,
            'game_properties': List,
            'creator_id': str,
            'game_session_id': str,
            'idempotency_token': str,
            'game_session_data': str,
            'location': str
        }

        self.attribute_map = {
            'fleet_id': 'FleetId',
            'alias_id': 'AliasId',
            'maximum_player_session_count': 'MaximumPlayerSessionCount',
            'name': 'Name',
            'game_properties': 'GameProperties',
            'creator_id': 'CreatorId',
            'game_session_id': 'GameSessionId',
            'idempotency_token': 'IdempotencyToken',
            'game_session_data': 'GameSessionData',
            'location': 'Location'
        }

        self._fleet_id = fleet_id
        self._alias_id = alias_id
        self._maximum_player_session_count = maximum_player_session_count
        self._name = name
        self._game_properties = game_properties
        self._creator_id = creator_id
        self._game_session_id = game_session_id
        self._idempotency_token = idempotency_token
        self._game_session_data = game_session_data
        self._location = location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateGameSessionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateGameSessionInput of this CreateGameSessionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fleet_id(self):
        """Gets the fleet_id of this CreateGameSessionInput.


        :return: The fleet_id of this CreateGameSessionInput.
        :rtype: str
        """
        return self._fleet_id

    @fleet_id.setter
    def fleet_id(self, fleet_id):
        """Sets the fleet_id of this CreateGameSessionInput.


        :param fleet_id: The fleet_id of this CreateGameSessionInput.
        :type fleet_id: str
        """

        self._fleet_id = fleet_id

    @property
    def alias_id(self):
        """Gets the alias_id of this CreateGameSessionInput.


        :return: The alias_id of this CreateGameSessionInput.
        :rtype: str
        """
        return self._alias_id

    @alias_id.setter
    def alias_id(self, alias_id):
        """Sets the alias_id of this CreateGameSessionInput.


        :param alias_id: The alias_id of this CreateGameSessionInput.
        :type alias_id: str
        """

        self._alias_id = alias_id

    @property
    def maximum_player_session_count(self):
        """Gets the maximum_player_session_count of this CreateGameSessionInput.


        :return: The maximum_player_session_count of this CreateGameSessionInput.
        :rtype: int
        """
        return self._maximum_player_session_count

    @maximum_player_session_count.setter
    def maximum_player_session_count(self, maximum_player_session_count):
        """Sets the maximum_player_session_count of this CreateGameSessionInput.


        :param maximum_player_session_count: The maximum_player_session_count of this CreateGameSessionInput.
        :type maximum_player_session_count: int
        """
        if maximum_player_session_count is None:
            raise ValueError("Invalid value for `maximum_player_session_count`, must not be `None`")

        self._maximum_player_session_count = maximum_player_session_count

    @property
    def name(self):
        """Gets the name of this CreateGameSessionInput.


        :return: The name of this CreateGameSessionInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateGameSessionInput.


        :param name: The name of this CreateGameSessionInput.
        :type name: str
        """

        self._name = name

    @property
    def game_properties(self):
        """Gets the game_properties of this CreateGameSessionInput.


        :return: The game_properties of this CreateGameSessionInput.
        :rtype: List
        """
        return self._game_properties

    @game_properties.setter
    def game_properties(self, game_properties):
        """Sets the game_properties of this CreateGameSessionInput.


        :param game_properties: The game_properties of this CreateGameSessionInput.
        :type game_properties: List
        """

        self._game_properties = game_properties

    @property
    def creator_id(self):
        """Gets the creator_id of this CreateGameSessionInput.


        :return: The creator_id of this CreateGameSessionInput.
        :rtype: str
        """
        return self._creator_id

    @creator_id.setter
    def creator_id(self, creator_id):
        """Sets the creator_id of this CreateGameSessionInput.


        :param creator_id: The creator_id of this CreateGameSessionInput.
        :type creator_id: str
        """

        self._creator_id = creator_id

    @property
    def game_session_id(self):
        """Gets the game_session_id of this CreateGameSessionInput.


        :return: The game_session_id of this CreateGameSessionInput.
        :rtype: str
        """
        return self._game_session_id

    @game_session_id.setter
    def game_session_id(self, game_session_id):
        """Sets the game_session_id of this CreateGameSessionInput.


        :param game_session_id: The game_session_id of this CreateGameSessionInput.
        :type game_session_id: str
        """

        self._game_session_id = game_session_id

    @property
    def idempotency_token(self):
        """Gets the idempotency_token of this CreateGameSessionInput.


        :return: The idempotency_token of this CreateGameSessionInput.
        :rtype: str
        """
        return self._idempotency_token

    @idempotency_token.setter
    def idempotency_token(self, idempotency_token):
        """Sets the idempotency_token of this CreateGameSessionInput.


        :param idempotency_token: The idempotency_token of this CreateGameSessionInput.
        :type idempotency_token: str
        """

        self._idempotency_token = idempotency_token

    @property
    def game_session_data(self):
        """Gets the game_session_data of this CreateGameSessionInput.


        :return: The game_session_data of this CreateGameSessionInput.
        :rtype: str
        """
        return self._game_session_data

    @game_session_data.setter
    def game_session_data(self, game_session_data):
        """Sets the game_session_data of this CreateGameSessionInput.


        :param game_session_data: The game_session_data of this CreateGameSessionInput.
        :type game_session_data: str
        """

        self._game_session_data = game_session_data

    @property
    def location(self):
        """Gets the location of this CreateGameSessionInput.


        :return: The location of this CreateGameSessionInput.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this CreateGameSessionInput.


        :param location: The location of this CreateGameSessionInput.
        :type location: str
        """

        self._location = location
