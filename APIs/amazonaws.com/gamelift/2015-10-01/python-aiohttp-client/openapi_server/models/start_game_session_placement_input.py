# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartGameSessionPlacementInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, placement_id: str=None, game_session_queue_name: str=None, game_properties: List=None, maximum_player_session_count: int=None, game_session_name: str=None, player_latencies: List=None, desired_player_sessions: List=None, game_session_data: str=None):
        """StartGameSessionPlacementInput - a model defined in OpenAPI

        :param placement_id: The placement_id of this StartGameSessionPlacementInput.
        :param game_session_queue_name: The game_session_queue_name of this StartGameSessionPlacementInput.
        :param game_properties: The game_properties of this StartGameSessionPlacementInput.
        :param maximum_player_session_count: The maximum_player_session_count of this StartGameSessionPlacementInput.
        :param game_session_name: The game_session_name of this StartGameSessionPlacementInput.
        :param player_latencies: The player_latencies of this StartGameSessionPlacementInput.
        :param desired_player_sessions: The desired_player_sessions of this StartGameSessionPlacementInput.
        :param game_session_data: The game_session_data of this StartGameSessionPlacementInput.
        """
        self.openapi_types = {
            'placement_id': str,
            'game_session_queue_name': str,
            'game_properties': List,
            'maximum_player_session_count': int,
            'game_session_name': str,
            'player_latencies': List,
            'desired_player_sessions': List,
            'game_session_data': str
        }

        self.attribute_map = {
            'placement_id': 'PlacementId',
            'game_session_queue_name': 'GameSessionQueueName',
            'game_properties': 'GameProperties',
            'maximum_player_session_count': 'MaximumPlayerSessionCount',
            'game_session_name': 'GameSessionName',
            'player_latencies': 'PlayerLatencies',
            'desired_player_sessions': 'DesiredPlayerSessions',
            'game_session_data': 'GameSessionData'
        }

        self._placement_id = placement_id
        self._game_session_queue_name = game_session_queue_name
        self._game_properties = game_properties
        self._maximum_player_session_count = maximum_player_session_count
        self._game_session_name = game_session_name
        self._player_latencies = player_latencies
        self._desired_player_sessions = desired_player_sessions
        self._game_session_data = game_session_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartGameSessionPlacementInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartGameSessionPlacementInput of this StartGameSessionPlacementInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def placement_id(self):
        """Gets the placement_id of this StartGameSessionPlacementInput.


        :return: The placement_id of this StartGameSessionPlacementInput.
        :rtype: str
        """
        return self._placement_id

    @placement_id.setter
    def placement_id(self, placement_id):
        """Sets the placement_id of this StartGameSessionPlacementInput.


        :param placement_id: The placement_id of this StartGameSessionPlacementInput.
        :type placement_id: str
        """
        if placement_id is None:
            raise ValueError("Invalid value for `placement_id`, must not be `None`")

        self._placement_id = placement_id

    @property
    def game_session_queue_name(self):
        """Gets the game_session_queue_name of this StartGameSessionPlacementInput.


        :return: The game_session_queue_name of this StartGameSessionPlacementInput.
        :rtype: str
        """
        return self._game_session_queue_name

    @game_session_queue_name.setter
    def game_session_queue_name(self, game_session_queue_name):
        """Sets the game_session_queue_name of this StartGameSessionPlacementInput.


        :param game_session_queue_name: The game_session_queue_name of this StartGameSessionPlacementInput.
        :type game_session_queue_name: str
        """
        if game_session_queue_name is None:
            raise ValueError("Invalid value for `game_session_queue_name`, must not be `None`")

        self._game_session_queue_name = game_session_queue_name

    @property
    def game_properties(self):
        """Gets the game_properties of this StartGameSessionPlacementInput.


        :return: The game_properties of this StartGameSessionPlacementInput.
        :rtype: List
        """
        return self._game_properties

    @game_properties.setter
    def game_properties(self, game_properties):
        """Sets the game_properties of this StartGameSessionPlacementInput.


        :param game_properties: The game_properties of this StartGameSessionPlacementInput.
        :type game_properties: List
        """

        self._game_properties = game_properties

    @property
    def maximum_player_session_count(self):
        """Gets the maximum_player_session_count of this StartGameSessionPlacementInput.


        :return: The maximum_player_session_count of this StartGameSessionPlacementInput.
        :rtype: int
        """
        return self._maximum_player_session_count

    @maximum_player_session_count.setter
    def maximum_player_session_count(self, maximum_player_session_count):
        """Sets the maximum_player_session_count of this StartGameSessionPlacementInput.


        :param maximum_player_session_count: The maximum_player_session_count of this StartGameSessionPlacementInput.
        :type maximum_player_session_count: int
        """
        if maximum_player_session_count is None:
            raise ValueError("Invalid value for `maximum_player_session_count`, must not be `None`")

        self._maximum_player_session_count = maximum_player_session_count

    @property
    def game_session_name(self):
        """Gets the game_session_name of this StartGameSessionPlacementInput.


        :return: The game_session_name of this StartGameSessionPlacementInput.
        :rtype: str
        """
        return self._game_session_name

    @game_session_name.setter
    def game_session_name(self, game_session_name):
        """Sets the game_session_name of this StartGameSessionPlacementInput.


        :param game_session_name: The game_session_name of this StartGameSessionPlacementInput.
        :type game_session_name: str
        """

        self._game_session_name = game_session_name

    @property
    def player_latencies(self):
        """Gets the player_latencies of this StartGameSessionPlacementInput.


        :return: The player_latencies of this StartGameSessionPlacementInput.
        :rtype: List
        """
        return self._player_latencies

    @player_latencies.setter
    def player_latencies(self, player_latencies):
        """Sets the player_latencies of this StartGameSessionPlacementInput.


        :param player_latencies: The player_latencies of this StartGameSessionPlacementInput.
        :type player_latencies: List
        """

        self._player_latencies = player_latencies

    @property
    def desired_player_sessions(self):
        """Gets the desired_player_sessions of this StartGameSessionPlacementInput.


        :return: The desired_player_sessions of this StartGameSessionPlacementInput.
        :rtype: List
        """
        return self._desired_player_sessions

    @desired_player_sessions.setter
    def desired_player_sessions(self, desired_player_sessions):
        """Sets the desired_player_sessions of this StartGameSessionPlacementInput.


        :param desired_player_sessions: The desired_player_sessions of this StartGameSessionPlacementInput.
        :type desired_player_sessions: List
        """

        self._desired_player_sessions = desired_player_sessions

    @property
    def game_session_data(self):
        """Gets the game_session_data of this StartGameSessionPlacementInput.


        :return: The game_session_data of this StartGameSessionPlacementInput.
        :rtype: str
        """
        return self._game_session_data

    @game_session_data.setter
    def game_session_data(self, game_session_data):
        """Sets the game_session_data of this StartGameSessionPlacementInput.


        :param game_session_data: The game_session_data of this StartGameSessionPlacementInput.
        :type game_session_data: str
        """

        self._game_session_data = game_session_data
