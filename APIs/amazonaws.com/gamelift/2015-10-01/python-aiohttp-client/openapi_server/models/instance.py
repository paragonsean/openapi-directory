# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ec2_instance_type import EC2InstanceType
from openapi_server.models.instance_status import InstanceStatus
from openapi_server.models.operating_system import OperatingSystem
from openapi_server import util


class Instance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fleet_id: str=None, fleet_arn: str=None, instance_id: str=None, ip_address: str=None, dns_name: str=None, operating_system: OperatingSystem=None, type: EC2InstanceType=None, status: InstanceStatus=None, creation_time: datetime=None, location: str=None):
        """Instance - a model defined in OpenAPI

        :param fleet_id: The fleet_id of this Instance.
        :param fleet_arn: The fleet_arn of this Instance.
        :param instance_id: The instance_id of this Instance.
        :param ip_address: The ip_address of this Instance.
        :param dns_name: The dns_name of this Instance.
        :param operating_system: The operating_system of this Instance.
        :param type: The type of this Instance.
        :param status: The status of this Instance.
        :param creation_time: The creation_time of this Instance.
        :param location: The location of this Instance.
        """
        self.openapi_types = {
            'fleet_id': str,
            'fleet_arn': str,
            'instance_id': str,
            'ip_address': str,
            'dns_name': str,
            'operating_system': OperatingSystem,
            'type': EC2InstanceType,
            'status': InstanceStatus,
            'creation_time': datetime,
            'location': str
        }

        self.attribute_map = {
            'fleet_id': 'FleetId',
            'fleet_arn': 'FleetArn',
            'instance_id': 'InstanceId',
            'ip_address': 'IpAddress',
            'dns_name': 'DnsName',
            'operating_system': 'OperatingSystem',
            'type': 'Type',
            'status': 'Status',
            'creation_time': 'CreationTime',
            'location': 'Location'
        }

        self._fleet_id = fleet_id
        self._fleet_arn = fleet_arn
        self._instance_id = instance_id
        self._ip_address = ip_address
        self._dns_name = dns_name
        self._operating_system = operating_system
        self._type = type
        self._status = status
        self._creation_time = creation_time
        self._location = location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Instance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Instance of this Instance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fleet_id(self):
        """Gets the fleet_id of this Instance.


        :return: The fleet_id of this Instance.
        :rtype: str
        """
        return self._fleet_id

    @fleet_id.setter
    def fleet_id(self, fleet_id):
        """Sets the fleet_id of this Instance.


        :param fleet_id: The fleet_id of this Instance.
        :type fleet_id: str
        """

        self._fleet_id = fleet_id

    @property
    def fleet_arn(self):
        """Gets the fleet_arn of this Instance.


        :return: The fleet_arn of this Instance.
        :rtype: str
        """
        return self._fleet_arn

    @fleet_arn.setter
    def fleet_arn(self, fleet_arn):
        """Sets the fleet_arn of this Instance.


        :param fleet_arn: The fleet_arn of this Instance.
        :type fleet_arn: str
        """

        self._fleet_arn = fleet_arn

    @property
    def instance_id(self):
        """Gets the instance_id of this Instance.


        :return: The instance_id of this Instance.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this Instance.


        :param instance_id: The instance_id of this Instance.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def ip_address(self):
        """Gets the ip_address of this Instance.


        :return: The ip_address of this Instance.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this Instance.


        :param ip_address: The ip_address of this Instance.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def dns_name(self):
        """Gets the dns_name of this Instance.


        :return: The dns_name of this Instance.
        :rtype: str
        """
        return self._dns_name

    @dns_name.setter
    def dns_name(self, dns_name):
        """Sets the dns_name of this Instance.


        :param dns_name: The dns_name of this Instance.
        :type dns_name: str
        """

        self._dns_name = dns_name

    @property
    def operating_system(self):
        """Gets the operating_system of this Instance.


        :return: The operating_system of this Instance.
        :rtype: OperatingSystem
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this Instance.


        :param operating_system: The operating_system of this Instance.
        :type operating_system: OperatingSystem
        """

        self._operating_system = operating_system

    @property
    def type(self):
        """Gets the type of this Instance.


        :return: The type of this Instance.
        :rtype: EC2InstanceType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Instance.


        :param type: The type of this Instance.
        :type type: EC2InstanceType
        """

        self._type = type

    @property
    def status(self):
        """Gets the status of this Instance.


        :return: The status of this Instance.
        :rtype: InstanceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Instance.


        :param status: The status of this Instance.
        :type status: InstanceStatus
        """

        self._status = status

    @property
    def creation_time(self):
        """Gets the creation_time of this Instance.


        :return: The creation_time of this Instance.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this Instance.


        :param creation_time: The creation_time of this Instance.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def location(self):
        """Gets the location of this Instance.


        :return: The location of this Instance.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Instance.


        :param location: The location of this Instance.
        :type location: str
        """

        self._location = location
