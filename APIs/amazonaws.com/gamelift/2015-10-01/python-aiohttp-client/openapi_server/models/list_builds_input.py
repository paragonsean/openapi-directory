# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build_status import BuildStatus
from openapi_server import util


class ListBuildsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: BuildStatus=None, limit: int=None, next_token: str=None):
        """ListBuildsInput - a model defined in OpenAPI

        :param status: The status of this ListBuildsInput.
        :param limit: The limit of this ListBuildsInput.
        :param next_token: The next_token of this ListBuildsInput.
        """
        self.openapi_types = {
            'status': BuildStatus,
            'limit': int,
            'next_token': str
        }

        self.attribute_map = {
            'status': 'Status',
            'limit': 'Limit',
            'next_token': 'NextToken'
        }

        self._status = status
        self._limit = limit
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListBuildsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListBuildsInput of this ListBuildsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this ListBuildsInput.


        :return: The status of this ListBuildsInput.
        :rtype: BuildStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ListBuildsInput.


        :param status: The status of this ListBuildsInput.
        :type status: BuildStatus
        """

        self._status = status

    @property
    def limit(self):
        """Gets the limit of this ListBuildsInput.


        :return: The limit of this ListBuildsInput.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this ListBuildsInput.


        :param limit: The limit of this ListBuildsInput.
        :type limit: int
        """

        self._limit = limit

    @property
    def next_token(self):
        """Gets the next_token of this ListBuildsInput.


        :return: The next_token of this ListBuildsInput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListBuildsInput.


        :param next_token: The next_token of this ListBuildsInput.
        :type next_token: str
        """

        self._next_token = next_token
