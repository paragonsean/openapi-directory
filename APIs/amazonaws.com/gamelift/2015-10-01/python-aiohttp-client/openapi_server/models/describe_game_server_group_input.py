# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeGameServerGroupInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game_server_group_name: str=None):
        """DescribeGameServerGroupInput - a model defined in OpenAPI

        :param game_server_group_name: The game_server_group_name of this DescribeGameServerGroupInput.
        """
        self.openapi_types = {
            'game_server_group_name': str
        }

        self.attribute_map = {
            'game_server_group_name': 'GameServerGroupName'
        }

        self._game_server_group_name = game_server_group_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeGameServerGroupInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeGameServerGroupInput of this DescribeGameServerGroupInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_server_group_name(self):
        """Gets the game_server_group_name of this DescribeGameServerGroupInput.


        :return: The game_server_group_name of this DescribeGameServerGroupInput.
        :rtype: str
        """
        return self._game_server_group_name

    @game_server_group_name.setter
    def game_server_group_name(self, game_server_group_name):
        """Sets the game_server_group_name of this DescribeGameServerGroupInput.


        :param game_server_group_name: The game_server_group_name of this DescribeGameServerGroupInput.
        :type game_server_group_name: str
        """
        if game_server_group_name is None:
            raise ValueError("Invalid value for `game_server_group_name`, must not be `None`")

        self._game_server_group_name = game_server_group_name
