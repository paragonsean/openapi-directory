# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.balancing_strategy import BalancingStrategy
from openapi_server.models.game_server_group_status import GameServerGroupStatus
from openapi_server.models.game_server_protection_policy import GameServerProtectionPolicy
from openapi_server import util


class GameServerGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game_server_group_name: str=None, game_server_group_arn: str=None, role_arn: str=None, instance_definitions: List=None, balancing_strategy: BalancingStrategy=None, game_server_protection_policy: GameServerProtectionPolicy=None, auto_scaling_group_arn: str=None, status: GameServerGroupStatus=None, status_reason: str=None, suspended_actions: List=None, creation_time: datetime=None, last_updated_time: datetime=None):
        """GameServerGroup - a model defined in OpenAPI

        :param game_server_group_name: The game_server_group_name of this GameServerGroup.
        :param game_server_group_arn: The game_server_group_arn of this GameServerGroup.
        :param role_arn: The role_arn of this GameServerGroup.
        :param instance_definitions: The instance_definitions of this GameServerGroup.
        :param balancing_strategy: The balancing_strategy of this GameServerGroup.
        :param game_server_protection_policy: The game_server_protection_policy of this GameServerGroup.
        :param auto_scaling_group_arn: The auto_scaling_group_arn of this GameServerGroup.
        :param status: The status of this GameServerGroup.
        :param status_reason: The status_reason of this GameServerGroup.
        :param suspended_actions: The suspended_actions of this GameServerGroup.
        :param creation_time: The creation_time of this GameServerGroup.
        :param last_updated_time: The last_updated_time of this GameServerGroup.
        """
        self.openapi_types = {
            'game_server_group_name': str,
            'game_server_group_arn': str,
            'role_arn': str,
            'instance_definitions': List,
            'balancing_strategy': BalancingStrategy,
            'game_server_protection_policy': GameServerProtectionPolicy,
            'auto_scaling_group_arn': str,
            'status': GameServerGroupStatus,
            'status_reason': str,
            'suspended_actions': List,
            'creation_time': datetime,
            'last_updated_time': datetime
        }

        self.attribute_map = {
            'game_server_group_name': 'GameServerGroupName',
            'game_server_group_arn': 'GameServerGroupArn',
            'role_arn': 'RoleArn',
            'instance_definitions': 'InstanceDefinitions',
            'balancing_strategy': 'BalancingStrategy',
            'game_server_protection_policy': 'GameServerProtectionPolicy',
            'auto_scaling_group_arn': 'AutoScalingGroupArn',
            'status': 'Status',
            'status_reason': 'StatusReason',
            'suspended_actions': 'SuspendedActions',
            'creation_time': 'CreationTime',
            'last_updated_time': 'LastUpdatedTime'
        }

        self._game_server_group_name = game_server_group_name
        self._game_server_group_arn = game_server_group_arn
        self._role_arn = role_arn
        self._instance_definitions = instance_definitions
        self._balancing_strategy = balancing_strategy
        self._game_server_protection_policy = game_server_protection_policy
        self._auto_scaling_group_arn = auto_scaling_group_arn
        self._status = status
        self._status_reason = status_reason
        self._suspended_actions = suspended_actions
        self._creation_time = creation_time
        self._last_updated_time = last_updated_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GameServerGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GameServerGroup of this GameServerGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_server_group_name(self):
        """Gets the game_server_group_name of this GameServerGroup.


        :return: The game_server_group_name of this GameServerGroup.
        :rtype: str
        """
        return self._game_server_group_name

    @game_server_group_name.setter
    def game_server_group_name(self, game_server_group_name):
        """Sets the game_server_group_name of this GameServerGroup.


        :param game_server_group_name: The game_server_group_name of this GameServerGroup.
        :type game_server_group_name: str
        """

        self._game_server_group_name = game_server_group_name

    @property
    def game_server_group_arn(self):
        """Gets the game_server_group_arn of this GameServerGroup.


        :return: The game_server_group_arn of this GameServerGroup.
        :rtype: str
        """
        return self._game_server_group_arn

    @game_server_group_arn.setter
    def game_server_group_arn(self, game_server_group_arn):
        """Sets the game_server_group_arn of this GameServerGroup.


        :param game_server_group_arn: The game_server_group_arn of this GameServerGroup.
        :type game_server_group_arn: str
        """

        self._game_server_group_arn = game_server_group_arn

    @property
    def role_arn(self):
        """Gets the role_arn of this GameServerGroup.


        :return: The role_arn of this GameServerGroup.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this GameServerGroup.


        :param role_arn: The role_arn of this GameServerGroup.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def instance_definitions(self):
        """Gets the instance_definitions of this GameServerGroup.


        :return: The instance_definitions of this GameServerGroup.
        :rtype: List
        """
        return self._instance_definitions

    @instance_definitions.setter
    def instance_definitions(self, instance_definitions):
        """Sets the instance_definitions of this GameServerGroup.


        :param instance_definitions: The instance_definitions of this GameServerGroup.
        :type instance_definitions: List
        """

        self._instance_definitions = instance_definitions

    @property
    def balancing_strategy(self):
        """Gets the balancing_strategy of this GameServerGroup.


        :return: The balancing_strategy of this GameServerGroup.
        :rtype: BalancingStrategy
        """
        return self._balancing_strategy

    @balancing_strategy.setter
    def balancing_strategy(self, balancing_strategy):
        """Sets the balancing_strategy of this GameServerGroup.


        :param balancing_strategy: The balancing_strategy of this GameServerGroup.
        :type balancing_strategy: BalancingStrategy
        """

        self._balancing_strategy = balancing_strategy

    @property
    def game_server_protection_policy(self):
        """Gets the game_server_protection_policy of this GameServerGroup.


        :return: The game_server_protection_policy of this GameServerGroup.
        :rtype: GameServerProtectionPolicy
        """
        return self._game_server_protection_policy

    @game_server_protection_policy.setter
    def game_server_protection_policy(self, game_server_protection_policy):
        """Sets the game_server_protection_policy of this GameServerGroup.


        :param game_server_protection_policy: The game_server_protection_policy of this GameServerGroup.
        :type game_server_protection_policy: GameServerProtectionPolicy
        """

        self._game_server_protection_policy = game_server_protection_policy

    @property
    def auto_scaling_group_arn(self):
        """Gets the auto_scaling_group_arn of this GameServerGroup.


        :return: The auto_scaling_group_arn of this GameServerGroup.
        :rtype: str
        """
        return self._auto_scaling_group_arn

    @auto_scaling_group_arn.setter
    def auto_scaling_group_arn(self, auto_scaling_group_arn):
        """Sets the auto_scaling_group_arn of this GameServerGroup.


        :param auto_scaling_group_arn: The auto_scaling_group_arn of this GameServerGroup.
        :type auto_scaling_group_arn: str
        """

        self._auto_scaling_group_arn = auto_scaling_group_arn

    @property
    def status(self):
        """Gets the status of this GameServerGroup.


        :return: The status of this GameServerGroup.
        :rtype: GameServerGroupStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GameServerGroup.


        :param status: The status of this GameServerGroup.
        :type status: GameServerGroupStatus
        """

        self._status = status

    @property
    def status_reason(self):
        """Gets the status_reason of this GameServerGroup.


        :return: The status_reason of this GameServerGroup.
        :rtype: str
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this GameServerGroup.


        :param status_reason: The status_reason of this GameServerGroup.
        :type status_reason: str
        """

        self._status_reason = status_reason

    @property
    def suspended_actions(self):
        """Gets the suspended_actions of this GameServerGroup.


        :return: The suspended_actions of this GameServerGroup.
        :rtype: List
        """
        return self._suspended_actions

    @suspended_actions.setter
    def suspended_actions(self, suspended_actions):
        """Sets the suspended_actions of this GameServerGroup.


        :param suspended_actions: The suspended_actions of this GameServerGroup.
        :type suspended_actions: List
        """

        self._suspended_actions = suspended_actions

    @property
    def creation_time(self):
        """Gets the creation_time of this GameServerGroup.


        :return: The creation_time of this GameServerGroup.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this GameServerGroup.


        :param creation_time: The creation_time of this GameServerGroup.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this GameServerGroup.


        :return: The last_updated_time of this GameServerGroup.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this GameServerGroup.


        :param last_updated_time: The last_updated_time of this GameServerGroup.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time
