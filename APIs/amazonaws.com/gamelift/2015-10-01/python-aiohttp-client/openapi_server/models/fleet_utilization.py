# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FleetUtilization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fleet_id: str=None, fleet_arn: str=None, active_server_process_count: int=None, active_game_session_count: int=None, current_player_session_count: int=None, maximum_player_session_count: int=None, location: str=None):
        """FleetUtilization - a model defined in OpenAPI

        :param fleet_id: The fleet_id of this FleetUtilization.
        :param fleet_arn: The fleet_arn of this FleetUtilization.
        :param active_server_process_count: The active_server_process_count of this FleetUtilization.
        :param active_game_session_count: The active_game_session_count of this FleetUtilization.
        :param current_player_session_count: The current_player_session_count of this FleetUtilization.
        :param maximum_player_session_count: The maximum_player_session_count of this FleetUtilization.
        :param location: The location of this FleetUtilization.
        """
        self.openapi_types = {
            'fleet_id': str,
            'fleet_arn': str,
            'active_server_process_count': int,
            'active_game_session_count': int,
            'current_player_session_count': int,
            'maximum_player_session_count': int,
            'location': str
        }

        self.attribute_map = {
            'fleet_id': 'FleetId',
            'fleet_arn': 'FleetArn',
            'active_server_process_count': 'ActiveServerProcessCount',
            'active_game_session_count': 'ActiveGameSessionCount',
            'current_player_session_count': 'CurrentPlayerSessionCount',
            'maximum_player_session_count': 'MaximumPlayerSessionCount',
            'location': 'Location'
        }

        self._fleet_id = fleet_id
        self._fleet_arn = fleet_arn
        self._active_server_process_count = active_server_process_count
        self._active_game_session_count = active_game_session_count
        self._current_player_session_count = current_player_session_count
        self._maximum_player_session_count = maximum_player_session_count
        self._location = location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FleetUtilization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FleetUtilization of this FleetUtilization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fleet_id(self):
        """Gets the fleet_id of this FleetUtilization.


        :return: The fleet_id of this FleetUtilization.
        :rtype: str
        """
        return self._fleet_id

    @fleet_id.setter
    def fleet_id(self, fleet_id):
        """Sets the fleet_id of this FleetUtilization.


        :param fleet_id: The fleet_id of this FleetUtilization.
        :type fleet_id: str
        """

        self._fleet_id = fleet_id

    @property
    def fleet_arn(self):
        """Gets the fleet_arn of this FleetUtilization.


        :return: The fleet_arn of this FleetUtilization.
        :rtype: str
        """
        return self._fleet_arn

    @fleet_arn.setter
    def fleet_arn(self, fleet_arn):
        """Sets the fleet_arn of this FleetUtilization.


        :param fleet_arn: The fleet_arn of this FleetUtilization.
        :type fleet_arn: str
        """

        self._fleet_arn = fleet_arn

    @property
    def active_server_process_count(self):
        """Gets the active_server_process_count of this FleetUtilization.


        :return: The active_server_process_count of this FleetUtilization.
        :rtype: int
        """
        return self._active_server_process_count

    @active_server_process_count.setter
    def active_server_process_count(self, active_server_process_count):
        """Sets the active_server_process_count of this FleetUtilization.


        :param active_server_process_count: The active_server_process_count of this FleetUtilization.
        :type active_server_process_count: int
        """

        self._active_server_process_count = active_server_process_count

    @property
    def active_game_session_count(self):
        """Gets the active_game_session_count of this FleetUtilization.


        :return: The active_game_session_count of this FleetUtilization.
        :rtype: int
        """
        return self._active_game_session_count

    @active_game_session_count.setter
    def active_game_session_count(self, active_game_session_count):
        """Sets the active_game_session_count of this FleetUtilization.


        :param active_game_session_count: The active_game_session_count of this FleetUtilization.
        :type active_game_session_count: int
        """

        self._active_game_session_count = active_game_session_count

    @property
    def current_player_session_count(self):
        """Gets the current_player_session_count of this FleetUtilization.


        :return: The current_player_session_count of this FleetUtilization.
        :rtype: int
        """
        return self._current_player_session_count

    @current_player_session_count.setter
    def current_player_session_count(self, current_player_session_count):
        """Sets the current_player_session_count of this FleetUtilization.


        :param current_player_session_count: The current_player_session_count of this FleetUtilization.
        :type current_player_session_count: int
        """

        self._current_player_session_count = current_player_session_count

    @property
    def maximum_player_session_count(self):
        """Gets the maximum_player_session_count of this FleetUtilization.


        :return: The maximum_player_session_count of this FleetUtilization.
        :rtype: int
        """
        return self._maximum_player_session_count

    @maximum_player_session_count.setter
    def maximum_player_session_count(self, maximum_player_session_count):
        """Sets the maximum_player_session_count of this FleetUtilization.


        :param maximum_player_session_count: The maximum_player_session_count of this FleetUtilization.
        :type maximum_player_session_count: int
        """

        self._maximum_player_session_count = maximum_player_session_count

    @property
    def location(self):
        """Gets the location of this FleetUtilization.


        :return: The location of this FleetUtilization.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this FleetUtilization.


        :param location: The location of this FleetUtilization.
        :type location: str
        """

        self._location = location
