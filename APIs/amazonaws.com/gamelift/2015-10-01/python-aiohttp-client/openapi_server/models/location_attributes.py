# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.location_attributes_location_state import LocationAttributesLocationState
from openapi_server.models.location_update_status import LocationUpdateStatus
from openapi_server import util


class LocationAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_state: LocationAttributesLocationState=None, stopped_actions: List=None, update_status: LocationUpdateStatus=None):
        """LocationAttributes - a model defined in OpenAPI

        :param location_state: The location_state of this LocationAttributes.
        :param stopped_actions: The stopped_actions of this LocationAttributes.
        :param update_status: The update_status of this LocationAttributes.
        """
        self.openapi_types = {
            'location_state': LocationAttributesLocationState,
            'stopped_actions': List,
            'update_status': LocationUpdateStatus
        }

        self.attribute_map = {
            'location_state': 'LocationState',
            'stopped_actions': 'StoppedActions',
            'update_status': 'UpdateStatus'
        }

        self._location_state = location_state
        self._stopped_actions = stopped_actions
        self._update_status = update_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocationAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocationAttributes of this LocationAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_state(self):
        """Gets the location_state of this LocationAttributes.


        :return: The location_state of this LocationAttributes.
        :rtype: LocationAttributesLocationState
        """
        return self._location_state

    @location_state.setter
    def location_state(self, location_state):
        """Sets the location_state of this LocationAttributes.


        :param location_state: The location_state of this LocationAttributes.
        :type location_state: LocationAttributesLocationState
        """

        self._location_state = location_state

    @property
    def stopped_actions(self):
        """Gets the stopped_actions of this LocationAttributes.


        :return: The stopped_actions of this LocationAttributes.
        :rtype: List
        """
        return self._stopped_actions

    @stopped_actions.setter
    def stopped_actions(self, stopped_actions):
        """Sets the stopped_actions of this LocationAttributes.


        :param stopped_actions: The stopped_actions of this LocationAttributes.
        :type stopped_actions: List
        """

        self._stopped_actions = stopped_actions

    @property
    def update_status(self):
        """Gets the update_status of this LocationAttributes.


        :return: The update_status of this LocationAttributes.
        :rtype: LocationUpdateStatus
        """
        return self._update_status

    @update_status.setter
    def update_status(self, update_status):
        """Sets the update_status of this LocationAttributes.


        :param update_status: The update_status of this LocationAttributes.
        :type update_status: LocationUpdateStatus
        """

        self._update_status = update_status
