# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ValidateMatchmakingRuleSetInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_set_body: str=None):
        """ValidateMatchmakingRuleSetInput - a model defined in OpenAPI

        :param rule_set_body: The rule_set_body of this ValidateMatchmakingRuleSetInput.
        """
        self.openapi_types = {
            'rule_set_body': str
        }

        self.attribute_map = {
            'rule_set_body': 'RuleSetBody'
        }

        self._rule_set_body = rule_set_body

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValidateMatchmakingRuleSetInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValidateMatchmakingRuleSetInput of this ValidateMatchmakingRuleSetInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_set_body(self):
        """Gets the rule_set_body of this ValidateMatchmakingRuleSetInput.


        :return: The rule_set_body of this ValidateMatchmakingRuleSetInput.
        :rtype: str
        """
        return self._rule_set_body

    @rule_set_body.setter
    def rule_set_body(self, rule_set_body):
        """Sets the rule_set_body of this ValidateMatchmakingRuleSetInput.


        :param rule_set_body: The rule_set_body of this ValidateMatchmakingRuleSetInput.
        :type rule_set_body: str
        """
        if rule_set_body is None:
            raise ValueError("Invalid value for `rule_set_body`, must not be `None`")

        self._rule_set_body = rule_set_body
