# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayerLatency(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, player_id: str=None, region_identifier: str=None, latency_in_milliseconds: float=None):
        """PlayerLatency - a model defined in OpenAPI

        :param player_id: The player_id of this PlayerLatency.
        :param region_identifier: The region_identifier of this PlayerLatency.
        :param latency_in_milliseconds: The latency_in_milliseconds of this PlayerLatency.
        """
        self.openapi_types = {
            'player_id': str,
            'region_identifier': str,
            'latency_in_milliseconds': float
        }

        self.attribute_map = {
            'player_id': 'PlayerId',
            'region_identifier': 'RegionIdentifier',
            'latency_in_milliseconds': 'LatencyInMilliseconds'
        }

        self._player_id = player_id
        self._region_identifier = region_identifier
        self._latency_in_milliseconds = latency_in_milliseconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerLatency':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayerLatency of this PlayerLatency.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def player_id(self):
        """Gets the player_id of this PlayerLatency.


        :return: The player_id of this PlayerLatency.
        :rtype: str
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this PlayerLatency.


        :param player_id: The player_id of this PlayerLatency.
        :type player_id: str
        """

        self._player_id = player_id

    @property
    def region_identifier(self):
        """Gets the region_identifier of this PlayerLatency.


        :return: The region_identifier of this PlayerLatency.
        :rtype: str
        """
        return self._region_identifier

    @region_identifier.setter
    def region_identifier(self, region_identifier):
        """Sets the region_identifier of this PlayerLatency.


        :param region_identifier: The region_identifier of this PlayerLatency.
        :type region_identifier: str
        """

        self._region_identifier = region_identifier

    @property
    def latency_in_milliseconds(self):
        """Gets the latency_in_milliseconds of this PlayerLatency.


        :return: The latency_in_milliseconds of this PlayerLatency.
        :rtype: float
        """
        return self._latency_in_milliseconds

    @latency_in_milliseconds.setter
    def latency_in_milliseconds(self, latency_in_milliseconds):
        """Sets the latency_in_milliseconds of this PlayerLatency.


        :param latency_in_milliseconds: The latency_in_milliseconds of this PlayerLatency.
        :type latency_in_milliseconds: float
        """

        self._latency_in_milliseconds = latency_in_milliseconds
