# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_compute_access_output_credentials import GetComputeAccessOutputCredentials
from openapi_server import util


class GetComputeAccessOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fleet_id: str=None, fleet_arn: str=None, compute_name: str=None, compute_arn: str=None, credentials: GetComputeAccessOutputCredentials=None):
        """GetComputeAccessOutput - a model defined in OpenAPI

        :param fleet_id: The fleet_id of this GetComputeAccessOutput.
        :param fleet_arn: The fleet_arn of this GetComputeAccessOutput.
        :param compute_name: The compute_name of this GetComputeAccessOutput.
        :param compute_arn: The compute_arn of this GetComputeAccessOutput.
        :param credentials: The credentials of this GetComputeAccessOutput.
        """
        self.openapi_types = {
            'fleet_id': str,
            'fleet_arn': str,
            'compute_name': str,
            'compute_arn': str,
            'credentials': GetComputeAccessOutputCredentials
        }

        self.attribute_map = {
            'fleet_id': 'FleetId',
            'fleet_arn': 'FleetArn',
            'compute_name': 'ComputeName',
            'compute_arn': 'ComputeArn',
            'credentials': 'Credentials'
        }

        self._fleet_id = fleet_id
        self._fleet_arn = fleet_arn
        self._compute_name = compute_name
        self._compute_arn = compute_arn
        self._credentials = credentials

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetComputeAccessOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetComputeAccessOutput of this GetComputeAccessOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fleet_id(self):
        """Gets the fleet_id of this GetComputeAccessOutput.


        :return: The fleet_id of this GetComputeAccessOutput.
        :rtype: str
        """
        return self._fleet_id

    @fleet_id.setter
    def fleet_id(self, fleet_id):
        """Sets the fleet_id of this GetComputeAccessOutput.


        :param fleet_id: The fleet_id of this GetComputeAccessOutput.
        :type fleet_id: str
        """

        self._fleet_id = fleet_id

    @property
    def fleet_arn(self):
        """Gets the fleet_arn of this GetComputeAccessOutput.


        :return: The fleet_arn of this GetComputeAccessOutput.
        :rtype: str
        """
        return self._fleet_arn

    @fleet_arn.setter
    def fleet_arn(self, fleet_arn):
        """Sets the fleet_arn of this GetComputeAccessOutput.


        :param fleet_arn: The fleet_arn of this GetComputeAccessOutput.
        :type fleet_arn: str
        """

        self._fleet_arn = fleet_arn

    @property
    def compute_name(self):
        """Gets the compute_name of this GetComputeAccessOutput.


        :return: The compute_name of this GetComputeAccessOutput.
        :rtype: str
        """
        return self._compute_name

    @compute_name.setter
    def compute_name(self, compute_name):
        """Sets the compute_name of this GetComputeAccessOutput.


        :param compute_name: The compute_name of this GetComputeAccessOutput.
        :type compute_name: str
        """

        self._compute_name = compute_name

    @property
    def compute_arn(self):
        """Gets the compute_arn of this GetComputeAccessOutput.


        :return: The compute_arn of this GetComputeAccessOutput.
        :rtype: str
        """
        return self._compute_arn

    @compute_arn.setter
    def compute_arn(self, compute_arn):
        """Sets the compute_arn of this GetComputeAccessOutput.


        :param compute_arn: The compute_arn of this GetComputeAccessOutput.
        :type compute_arn: str
        """

        self._compute_arn = compute_arn

    @property
    def credentials(self):
        """Gets the credentials of this GetComputeAccessOutput.


        :return: The credentials of this GetComputeAccessOutput.
        :rtype: GetComputeAccessOutputCredentials
        """
        return self._credentials

    @credentials.setter
    def credentials(self, credentials):
        """Sets the credentials of this GetComputeAccessOutput.


        :param credentials: The credentials of this GetComputeAccessOutput.
        :type credentials: GetComputeAccessOutputCredentials
        """

        self._credentials = credentials
