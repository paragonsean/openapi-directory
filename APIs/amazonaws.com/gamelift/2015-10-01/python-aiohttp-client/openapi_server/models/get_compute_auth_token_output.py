# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetComputeAuthTokenOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fleet_id: str=None, fleet_arn: str=None, compute_name: str=None, compute_arn: str=None, auth_token: str=None, expiration_timestamp: datetime=None):
        """GetComputeAuthTokenOutput - a model defined in OpenAPI

        :param fleet_id: The fleet_id of this GetComputeAuthTokenOutput.
        :param fleet_arn: The fleet_arn of this GetComputeAuthTokenOutput.
        :param compute_name: The compute_name of this GetComputeAuthTokenOutput.
        :param compute_arn: The compute_arn of this GetComputeAuthTokenOutput.
        :param auth_token: The auth_token of this GetComputeAuthTokenOutput.
        :param expiration_timestamp: The expiration_timestamp of this GetComputeAuthTokenOutput.
        """
        self.openapi_types = {
            'fleet_id': str,
            'fleet_arn': str,
            'compute_name': str,
            'compute_arn': str,
            'auth_token': str,
            'expiration_timestamp': datetime
        }

        self.attribute_map = {
            'fleet_id': 'FleetId',
            'fleet_arn': 'FleetArn',
            'compute_name': 'ComputeName',
            'compute_arn': 'ComputeArn',
            'auth_token': 'AuthToken',
            'expiration_timestamp': 'ExpirationTimestamp'
        }

        self._fleet_id = fleet_id
        self._fleet_arn = fleet_arn
        self._compute_name = compute_name
        self._compute_arn = compute_arn
        self._auth_token = auth_token
        self._expiration_timestamp = expiration_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetComputeAuthTokenOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetComputeAuthTokenOutput of this GetComputeAuthTokenOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fleet_id(self):
        """Gets the fleet_id of this GetComputeAuthTokenOutput.


        :return: The fleet_id of this GetComputeAuthTokenOutput.
        :rtype: str
        """
        return self._fleet_id

    @fleet_id.setter
    def fleet_id(self, fleet_id):
        """Sets the fleet_id of this GetComputeAuthTokenOutput.


        :param fleet_id: The fleet_id of this GetComputeAuthTokenOutput.
        :type fleet_id: str
        """

        self._fleet_id = fleet_id

    @property
    def fleet_arn(self):
        """Gets the fleet_arn of this GetComputeAuthTokenOutput.


        :return: The fleet_arn of this GetComputeAuthTokenOutput.
        :rtype: str
        """
        return self._fleet_arn

    @fleet_arn.setter
    def fleet_arn(self, fleet_arn):
        """Sets the fleet_arn of this GetComputeAuthTokenOutput.


        :param fleet_arn: The fleet_arn of this GetComputeAuthTokenOutput.
        :type fleet_arn: str
        """

        self._fleet_arn = fleet_arn

    @property
    def compute_name(self):
        """Gets the compute_name of this GetComputeAuthTokenOutput.


        :return: The compute_name of this GetComputeAuthTokenOutput.
        :rtype: str
        """
        return self._compute_name

    @compute_name.setter
    def compute_name(self, compute_name):
        """Sets the compute_name of this GetComputeAuthTokenOutput.


        :param compute_name: The compute_name of this GetComputeAuthTokenOutput.
        :type compute_name: str
        """

        self._compute_name = compute_name

    @property
    def compute_arn(self):
        """Gets the compute_arn of this GetComputeAuthTokenOutput.


        :return: The compute_arn of this GetComputeAuthTokenOutput.
        :rtype: str
        """
        return self._compute_arn

    @compute_arn.setter
    def compute_arn(self, compute_arn):
        """Sets the compute_arn of this GetComputeAuthTokenOutput.


        :param compute_arn: The compute_arn of this GetComputeAuthTokenOutput.
        :type compute_arn: str
        """

        self._compute_arn = compute_arn

    @property
    def auth_token(self):
        """Gets the auth_token of this GetComputeAuthTokenOutput.


        :return: The auth_token of this GetComputeAuthTokenOutput.
        :rtype: str
        """
        return self._auth_token

    @auth_token.setter
    def auth_token(self, auth_token):
        """Sets the auth_token of this GetComputeAuthTokenOutput.


        :param auth_token: The auth_token of this GetComputeAuthTokenOutput.
        :type auth_token: str
        """

        self._auth_token = auth_token

    @property
    def expiration_timestamp(self):
        """Gets the expiration_timestamp of this GetComputeAuthTokenOutput.


        :return: The expiration_timestamp of this GetComputeAuthTokenOutput.
        :rtype: datetime
        """
        return self._expiration_timestamp

    @expiration_timestamp.setter
    def expiration_timestamp(self, expiration_timestamp):
        """Sets the expiration_timestamp of this GetComputeAuthTokenOutput.


        :param expiration_timestamp: The expiration_timestamp of this GetComputeAuthTokenOutput.
        :type expiration_timestamp: datetime
        """

        self._expiration_timestamp = expiration_timestamp
