# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.game_server_instance_status import GameServerInstanceStatus
from openapi_server import util


class GameServerInstance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game_server_group_name: str=None, game_server_group_arn: str=None, instance_id: str=None, instance_status: GameServerInstanceStatus=None):
        """GameServerInstance - a model defined in OpenAPI

        :param game_server_group_name: The game_server_group_name of this GameServerInstance.
        :param game_server_group_arn: The game_server_group_arn of this GameServerInstance.
        :param instance_id: The instance_id of this GameServerInstance.
        :param instance_status: The instance_status of this GameServerInstance.
        """
        self.openapi_types = {
            'game_server_group_name': str,
            'game_server_group_arn': str,
            'instance_id': str,
            'instance_status': GameServerInstanceStatus
        }

        self.attribute_map = {
            'game_server_group_name': 'GameServerGroupName',
            'game_server_group_arn': 'GameServerGroupArn',
            'instance_id': 'InstanceId',
            'instance_status': 'InstanceStatus'
        }

        self._game_server_group_name = game_server_group_name
        self._game_server_group_arn = game_server_group_arn
        self._instance_id = instance_id
        self._instance_status = instance_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GameServerInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GameServerInstance of this GameServerInstance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_server_group_name(self):
        """Gets the game_server_group_name of this GameServerInstance.


        :return: The game_server_group_name of this GameServerInstance.
        :rtype: str
        """
        return self._game_server_group_name

    @game_server_group_name.setter
    def game_server_group_name(self, game_server_group_name):
        """Sets the game_server_group_name of this GameServerInstance.


        :param game_server_group_name: The game_server_group_name of this GameServerInstance.
        :type game_server_group_name: str
        """

        self._game_server_group_name = game_server_group_name

    @property
    def game_server_group_arn(self):
        """Gets the game_server_group_arn of this GameServerInstance.


        :return: The game_server_group_arn of this GameServerInstance.
        :rtype: str
        """
        return self._game_server_group_arn

    @game_server_group_arn.setter
    def game_server_group_arn(self, game_server_group_arn):
        """Sets the game_server_group_arn of this GameServerInstance.


        :param game_server_group_arn: The game_server_group_arn of this GameServerInstance.
        :type game_server_group_arn: str
        """

        self._game_server_group_arn = game_server_group_arn

    @property
    def instance_id(self):
        """Gets the instance_id of this GameServerInstance.


        :return: The instance_id of this GameServerInstance.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this GameServerInstance.


        :param instance_id: The instance_id of this GameServerInstance.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def instance_status(self):
        """Gets the instance_status of this GameServerInstance.


        :return: The instance_status of this GameServerInstance.
        :rtype: GameServerInstanceStatus
        """
        return self._instance_status

    @instance_status.setter
    def instance_status(self, instance_status):
        """Sets the instance_status of this GameServerInstance.


        :param instance_status: The instance_status of this GameServerInstance.
        :type instance_status: GameServerInstanceStatus
        """

        self._instance_status = instance_status
