# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.routing_strategy_type import RoutingStrategyType
from openapi_server import util


class RoutingStrategy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: RoutingStrategyType=None, fleet_id: str=None, message: str=None):
        """RoutingStrategy - a model defined in OpenAPI

        :param type: The type of this RoutingStrategy.
        :param fleet_id: The fleet_id of this RoutingStrategy.
        :param message: The message of this RoutingStrategy.
        """
        self.openapi_types = {
            'type': RoutingStrategyType,
            'fleet_id': str,
            'message': str
        }

        self.attribute_map = {
            'type': 'Type',
            'fleet_id': 'FleetId',
            'message': 'Message'
        }

        self._type = type
        self._fleet_id = fleet_id
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoutingStrategy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoutingStrategy of this RoutingStrategy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this RoutingStrategy.


        :return: The type of this RoutingStrategy.
        :rtype: RoutingStrategyType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this RoutingStrategy.


        :param type: The type of this RoutingStrategy.
        :type type: RoutingStrategyType
        """

        self._type = type

    @property
    def fleet_id(self):
        """Gets the fleet_id of this RoutingStrategy.


        :return: The fleet_id of this RoutingStrategy.
        :rtype: str
        """
        return self._fleet_id

    @fleet_id.setter
    def fleet_id(self, fleet_id):
        """Sets the fleet_id of this RoutingStrategy.


        :param fleet_id: The fleet_id of this RoutingStrategy.
        :type fleet_id: str
        """

        self._fleet_id = fleet_id

    @property
    def message(self):
        """Gets the message of this RoutingStrategy.


        :return: The message of this RoutingStrategy.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this RoutingStrategy.


        :param message: The message of this RoutingStrategy.
        :type message: str
        """

        self._message = message
