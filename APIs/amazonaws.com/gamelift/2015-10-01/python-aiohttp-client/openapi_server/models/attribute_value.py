# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AttributeValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s: str=None, n: float=None, sl: List=None, sdm: Dict=None):
        """AttributeValue - a model defined in OpenAPI

        :param s: The s of this AttributeValue.
        :param n: The n of this AttributeValue.
        :param sl: The sl of this AttributeValue.
        :param sdm: The sdm of this AttributeValue.
        """
        self.openapi_types = {
            's': str,
            'n': float,
            'sl': List,
            'sdm': Dict
        }

        self.attribute_map = {
            's': 'S',
            'n': 'N',
            'sl': 'SL',
            'sdm': 'SDM'
        }

        self._s = s
        self._n = n
        self._sl = sl
        self._sdm = sdm

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttributeValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttributeValue of this AttributeValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s(self):
        """Gets the s of this AttributeValue.


        :return: The s of this AttributeValue.
        :rtype: str
        """
        return self._s

    @s.setter
    def s(self, s):
        """Sets the s of this AttributeValue.


        :param s: The s of this AttributeValue.
        :type s: str
        """

        self._s = s

    @property
    def n(self):
        """Gets the n of this AttributeValue.


        :return: The n of this AttributeValue.
        :rtype: float
        """
        return self._n

    @n.setter
    def n(self, n):
        """Sets the n of this AttributeValue.


        :param n: The n of this AttributeValue.
        :type n: float
        """

        self._n = n

    @property
    def sl(self):
        """Gets the sl of this AttributeValue.


        :return: The sl of this AttributeValue.
        :rtype: List
        """
        return self._sl

    @sl.setter
    def sl(self, sl):
        """Sets the sl of this AttributeValue.


        :param sl: The sl of this AttributeValue.
        :type sl: List
        """

        self._sl = sl

    @property
    def sdm(self):
        """Gets the sdm of this AttributeValue.


        :return: The sdm of this AttributeValue.
        :rtype: Dict
        """
        return self._sdm

    @sdm.setter
    def sdm(self, sdm):
        """Sets the sdm of this AttributeValue.


        :param sdm: The sdm of this AttributeValue.
        :type sdm: Dict
        """

        self._sdm = sdm
