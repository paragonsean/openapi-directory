# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.certificate_type import CertificateType
from openapi_server import util


class CreateFleetInputCertificateConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_type: CertificateType=None):
        """CreateFleetInputCertificateConfiguration - a model defined in OpenAPI

        :param certificate_type: The certificate_type of this CreateFleetInputCertificateConfiguration.
        """
        self.openapi_types = {
            'certificate_type': CertificateType
        }

        self.attribute_map = {
            'certificate_type': 'CertificateType'
        }

        self._certificate_type = certificate_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFleetInputCertificateConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFleetInput_CertificateConfiguration of this CreateFleetInputCertificateConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_type(self):
        """Gets the certificate_type of this CreateFleetInputCertificateConfiguration.


        :return: The certificate_type of this CreateFleetInputCertificateConfiguration.
        :rtype: CertificateType
        """
        return self._certificate_type

    @certificate_type.setter
    def certificate_type(self, certificate_type):
        """Sets the certificate_type of this CreateFleetInputCertificateConfiguration.


        :param certificate_type: The certificate_type of this CreateFleetInputCertificateConfiguration.
        :type certificate_type: CertificateType
        """
        if certificate_type is None:
            raise ValueError("Invalid value for `certificate_type`, must not be `None`")

        self._certificate_type = certificate_type
