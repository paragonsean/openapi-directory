# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_compute_output_compute import DescribeComputeOutputCompute
from openapi_server import util


class RegisterComputeOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compute: DescribeComputeOutputCompute=None):
        """RegisterComputeOutput - a model defined in OpenAPI

        :param compute: The compute of this RegisterComputeOutput.
        """
        self.openapi_types = {
            'compute': DescribeComputeOutputCompute
        }

        self.attribute_map = {
            'compute': 'Compute'
        }

        self._compute = compute

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisterComputeOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegisterComputeOutput of this RegisterComputeOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compute(self):
        """Gets the compute of this RegisterComputeOutput.


        :return: The compute of this RegisterComputeOutput.
        :rtype: DescribeComputeOutputCompute
        """
        return self._compute

    @compute.setter
    def compute(self, compute):
        """Sets the compute of this RegisterComputeOutput.


        :param compute: The compute of this RegisterComputeOutput.
        :type compute: DescribeComputeOutputCompute
        """

        self._compute = compute
