# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.comparison_operator_type import ComparisonOperatorType
from openapi_server.models.metric_name import MetricName
from openapi_server.models.policy_type import PolicyType
from openapi_server.models.put_scaling_policy_input_target_configuration import PutScalingPolicyInputTargetConfiguration
from openapi_server.models.scaling_adjustment_type import ScalingAdjustmentType
from openapi_server import util


class PutScalingPolicyInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, fleet_id: str=None, scaling_adjustment: int=None, scaling_adjustment_type: ScalingAdjustmentType=None, threshold: float=None, comparison_operator: ComparisonOperatorType=None, evaluation_periods: int=None, metric_name: MetricName=None, policy_type: PolicyType=None, target_configuration: PutScalingPolicyInputTargetConfiguration=None):
        """PutScalingPolicyInput - a model defined in OpenAPI

        :param name: The name of this PutScalingPolicyInput.
        :param fleet_id: The fleet_id of this PutScalingPolicyInput.
        :param scaling_adjustment: The scaling_adjustment of this PutScalingPolicyInput.
        :param scaling_adjustment_type: The scaling_adjustment_type of this PutScalingPolicyInput.
        :param threshold: The threshold of this PutScalingPolicyInput.
        :param comparison_operator: The comparison_operator of this PutScalingPolicyInput.
        :param evaluation_periods: The evaluation_periods of this PutScalingPolicyInput.
        :param metric_name: The metric_name of this PutScalingPolicyInput.
        :param policy_type: The policy_type of this PutScalingPolicyInput.
        :param target_configuration: The target_configuration of this PutScalingPolicyInput.
        """
        self.openapi_types = {
            'name': str,
            'fleet_id': str,
            'scaling_adjustment': int,
            'scaling_adjustment_type': ScalingAdjustmentType,
            'threshold': float,
            'comparison_operator': ComparisonOperatorType,
            'evaluation_periods': int,
            'metric_name': MetricName,
            'policy_type': PolicyType,
            'target_configuration': PutScalingPolicyInputTargetConfiguration
        }

        self.attribute_map = {
            'name': 'Name',
            'fleet_id': 'FleetId',
            'scaling_adjustment': 'ScalingAdjustment',
            'scaling_adjustment_type': 'ScalingAdjustmentType',
            'threshold': 'Threshold',
            'comparison_operator': 'ComparisonOperator',
            'evaluation_periods': 'EvaluationPeriods',
            'metric_name': 'MetricName',
            'policy_type': 'PolicyType',
            'target_configuration': 'TargetConfiguration'
        }

        self._name = name
        self._fleet_id = fleet_id
        self._scaling_adjustment = scaling_adjustment
        self._scaling_adjustment_type = scaling_adjustment_type
        self._threshold = threshold
        self._comparison_operator = comparison_operator
        self._evaluation_periods = evaluation_periods
        self._metric_name = metric_name
        self._policy_type = policy_type
        self._target_configuration = target_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutScalingPolicyInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutScalingPolicyInput of this PutScalingPolicyInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PutScalingPolicyInput.


        :return: The name of this PutScalingPolicyInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PutScalingPolicyInput.


        :param name: The name of this PutScalingPolicyInput.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def fleet_id(self):
        """Gets the fleet_id of this PutScalingPolicyInput.


        :return: The fleet_id of this PutScalingPolicyInput.
        :rtype: str
        """
        return self._fleet_id

    @fleet_id.setter
    def fleet_id(self, fleet_id):
        """Sets the fleet_id of this PutScalingPolicyInput.


        :param fleet_id: The fleet_id of this PutScalingPolicyInput.
        :type fleet_id: str
        """
        if fleet_id is None:
            raise ValueError("Invalid value for `fleet_id`, must not be `None`")

        self._fleet_id = fleet_id

    @property
    def scaling_adjustment(self):
        """Gets the scaling_adjustment of this PutScalingPolicyInput.


        :return: The scaling_adjustment of this PutScalingPolicyInput.
        :rtype: int
        """
        return self._scaling_adjustment

    @scaling_adjustment.setter
    def scaling_adjustment(self, scaling_adjustment):
        """Sets the scaling_adjustment of this PutScalingPolicyInput.


        :param scaling_adjustment: The scaling_adjustment of this PutScalingPolicyInput.
        :type scaling_adjustment: int
        """

        self._scaling_adjustment = scaling_adjustment

    @property
    def scaling_adjustment_type(self):
        """Gets the scaling_adjustment_type of this PutScalingPolicyInput.


        :return: The scaling_adjustment_type of this PutScalingPolicyInput.
        :rtype: ScalingAdjustmentType
        """
        return self._scaling_adjustment_type

    @scaling_adjustment_type.setter
    def scaling_adjustment_type(self, scaling_adjustment_type):
        """Sets the scaling_adjustment_type of this PutScalingPolicyInput.


        :param scaling_adjustment_type: The scaling_adjustment_type of this PutScalingPolicyInput.
        :type scaling_adjustment_type: ScalingAdjustmentType
        """

        self._scaling_adjustment_type = scaling_adjustment_type

    @property
    def threshold(self):
        """Gets the threshold of this PutScalingPolicyInput.


        :return: The threshold of this PutScalingPolicyInput.
        :rtype: float
        """
        return self._threshold

    @threshold.setter
    def threshold(self, threshold):
        """Sets the threshold of this PutScalingPolicyInput.


        :param threshold: The threshold of this PutScalingPolicyInput.
        :type threshold: float
        """

        self._threshold = threshold

    @property
    def comparison_operator(self):
        """Gets the comparison_operator of this PutScalingPolicyInput.


        :return: The comparison_operator of this PutScalingPolicyInput.
        :rtype: ComparisonOperatorType
        """
        return self._comparison_operator

    @comparison_operator.setter
    def comparison_operator(self, comparison_operator):
        """Sets the comparison_operator of this PutScalingPolicyInput.


        :param comparison_operator: The comparison_operator of this PutScalingPolicyInput.
        :type comparison_operator: ComparisonOperatorType
        """

        self._comparison_operator = comparison_operator

    @property
    def evaluation_periods(self):
        """Gets the evaluation_periods of this PutScalingPolicyInput.


        :return: The evaluation_periods of this PutScalingPolicyInput.
        :rtype: int
        """
        return self._evaluation_periods

    @evaluation_periods.setter
    def evaluation_periods(self, evaluation_periods):
        """Sets the evaluation_periods of this PutScalingPolicyInput.


        :param evaluation_periods: The evaluation_periods of this PutScalingPolicyInput.
        :type evaluation_periods: int
        """

        self._evaluation_periods = evaluation_periods

    @property
    def metric_name(self):
        """Gets the metric_name of this PutScalingPolicyInput.


        :return: The metric_name of this PutScalingPolicyInput.
        :rtype: MetricName
        """
        return self._metric_name

    @metric_name.setter
    def metric_name(self, metric_name):
        """Sets the metric_name of this PutScalingPolicyInput.


        :param metric_name: The metric_name of this PutScalingPolicyInput.
        :type metric_name: MetricName
        """
        if metric_name is None:
            raise ValueError("Invalid value for `metric_name`, must not be `None`")

        self._metric_name = metric_name

    @property
    def policy_type(self):
        """Gets the policy_type of this PutScalingPolicyInput.


        :return: The policy_type of this PutScalingPolicyInput.
        :rtype: PolicyType
        """
        return self._policy_type

    @policy_type.setter
    def policy_type(self, policy_type):
        """Sets the policy_type of this PutScalingPolicyInput.


        :param policy_type: The policy_type of this PutScalingPolicyInput.
        :type policy_type: PolicyType
        """

        self._policy_type = policy_type

    @property
    def target_configuration(self):
        """Gets the target_configuration of this PutScalingPolicyInput.


        :return: The target_configuration of this PutScalingPolicyInput.
        :rtype: PutScalingPolicyInputTargetConfiguration
        """
        return self._target_configuration

    @target_configuration.setter
    def target_configuration(self, target_configuration):
        """Sets the target_configuration of this PutScalingPolicyInput.


        :param target_configuration: The target_configuration of this PutScalingPolicyInput.
        :type target_configuration: PutScalingPolicyInputTargetConfiguration
        """

        self._target_configuration = target_configuration
