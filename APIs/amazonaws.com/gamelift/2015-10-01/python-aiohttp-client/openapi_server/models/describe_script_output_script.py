# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_script_input_storage_location import CreateScriptInputStorageLocation
from openapi_server import util


class DescribeScriptOutputScript(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, script_id: str=None, script_arn: str=None, name: str=None, version: str=None, size_on_disk: int=None, creation_time: datetime=None, storage_location: CreateScriptInputStorageLocation=None):
        """DescribeScriptOutputScript - a model defined in OpenAPI

        :param script_id: The script_id of this DescribeScriptOutputScript.
        :param script_arn: The script_arn of this DescribeScriptOutputScript.
        :param name: The name of this DescribeScriptOutputScript.
        :param version: The version of this DescribeScriptOutputScript.
        :param size_on_disk: The size_on_disk of this DescribeScriptOutputScript.
        :param creation_time: The creation_time of this DescribeScriptOutputScript.
        :param storage_location: The storage_location of this DescribeScriptOutputScript.
        """
        self.openapi_types = {
            'script_id': str,
            'script_arn': str,
            'name': str,
            'version': str,
            'size_on_disk': int,
            'creation_time': datetime,
            'storage_location': CreateScriptInputStorageLocation
        }

        self.attribute_map = {
            'script_id': 'ScriptId',
            'script_arn': 'ScriptArn',
            'name': 'Name',
            'version': 'Version',
            'size_on_disk': 'SizeOnDisk',
            'creation_time': 'CreationTime',
            'storage_location': 'StorageLocation'
        }

        self._script_id = script_id
        self._script_arn = script_arn
        self._name = name
        self._version = version
        self._size_on_disk = size_on_disk
        self._creation_time = creation_time
        self._storage_location = storage_location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeScriptOutputScript':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeScriptOutput_Script of this DescribeScriptOutputScript.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def script_id(self):
        """Gets the script_id of this DescribeScriptOutputScript.


        :return: The script_id of this DescribeScriptOutputScript.
        :rtype: str
        """
        return self._script_id

    @script_id.setter
    def script_id(self, script_id):
        """Sets the script_id of this DescribeScriptOutputScript.


        :param script_id: The script_id of this DescribeScriptOutputScript.
        :type script_id: str
        """

        self._script_id = script_id

    @property
    def script_arn(self):
        """Gets the script_arn of this DescribeScriptOutputScript.


        :return: The script_arn of this DescribeScriptOutputScript.
        :rtype: str
        """
        return self._script_arn

    @script_arn.setter
    def script_arn(self, script_arn):
        """Sets the script_arn of this DescribeScriptOutputScript.


        :param script_arn: The script_arn of this DescribeScriptOutputScript.
        :type script_arn: str
        """

        self._script_arn = script_arn

    @property
    def name(self):
        """Gets the name of this DescribeScriptOutputScript.


        :return: The name of this DescribeScriptOutputScript.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeScriptOutputScript.


        :param name: The name of this DescribeScriptOutputScript.
        :type name: str
        """

        self._name = name

    @property
    def version(self):
        """Gets the version of this DescribeScriptOutputScript.


        :return: The version of this DescribeScriptOutputScript.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DescribeScriptOutputScript.


        :param version: The version of this DescribeScriptOutputScript.
        :type version: str
        """

        self._version = version

    @property
    def size_on_disk(self):
        """Gets the size_on_disk of this DescribeScriptOutputScript.


        :return: The size_on_disk of this DescribeScriptOutputScript.
        :rtype: int
        """
        return self._size_on_disk

    @size_on_disk.setter
    def size_on_disk(self, size_on_disk):
        """Sets the size_on_disk of this DescribeScriptOutputScript.


        :param size_on_disk: The size_on_disk of this DescribeScriptOutputScript.
        :type size_on_disk: int
        """

        self._size_on_disk = size_on_disk

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeScriptOutputScript.


        :return: The creation_time of this DescribeScriptOutputScript.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeScriptOutputScript.


        :param creation_time: The creation_time of this DescribeScriptOutputScript.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def storage_location(self):
        """Gets the storage_location of this DescribeScriptOutputScript.


        :return: The storage_location of this DescribeScriptOutputScript.
        :rtype: CreateScriptInputStorageLocation
        """
        return self._storage_location

    @storage_location.setter
    def storage_location(self, storage_location):
        """Sets the storage_location of this DescribeScriptOutputScript.


        :param storage_location: The storage_location of this DescribeScriptOutputScript.
        :type storage_location: CreateScriptInputStorageLocation
        """

        self._storage_location = storage_location
