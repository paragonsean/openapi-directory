# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build_status import BuildStatus
from openapi_server.models.operating_system import OperatingSystem
from openapi_server import util


class DescribeBuildOutputBuild(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build_id: str=None, build_arn: str=None, name: str=None, version: str=None, status: BuildStatus=None, size_on_disk: int=None, operating_system: OperatingSystem=None, creation_time: datetime=None, server_sdk_version: str=None):
        """DescribeBuildOutputBuild - a model defined in OpenAPI

        :param build_id: The build_id of this DescribeBuildOutputBuild.
        :param build_arn: The build_arn of this DescribeBuildOutputBuild.
        :param name: The name of this DescribeBuildOutputBuild.
        :param version: The version of this DescribeBuildOutputBuild.
        :param status: The status of this DescribeBuildOutputBuild.
        :param size_on_disk: The size_on_disk of this DescribeBuildOutputBuild.
        :param operating_system: The operating_system of this DescribeBuildOutputBuild.
        :param creation_time: The creation_time of this DescribeBuildOutputBuild.
        :param server_sdk_version: The server_sdk_version of this DescribeBuildOutputBuild.
        """
        self.openapi_types = {
            'build_id': str,
            'build_arn': str,
            'name': str,
            'version': str,
            'status': BuildStatus,
            'size_on_disk': int,
            'operating_system': OperatingSystem,
            'creation_time': datetime,
            'server_sdk_version': str
        }

        self.attribute_map = {
            'build_id': 'BuildId',
            'build_arn': 'BuildArn',
            'name': 'Name',
            'version': 'Version',
            'status': 'Status',
            'size_on_disk': 'SizeOnDisk',
            'operating_system': 'OperatingSystem',
            'creation_time': 'CreationTime',
            'server_sdk_version': 'ServerSdkVersion'
        }

        self._build_id = build_id
        self._build_arn = build_arn
        self._name = name
        self._version = version
        self._status = status
        self._size_on_disk = size_on_disk
        self._operating_system = operating_system
        self._creation_time = creation_time
        self._server_sdk_version = server_sdk_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeBuildOutputBuild':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeBuildOutput_Build of this DescribeBuildOutputBuild.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build_id(self):
        """Gets the build_id of this DescribeBuildOutputBuild.


        :return: The build_id of this DescribeBuildOutputBuild.
        :rtype: str
        """
        return self._build_id

    @build_id.setter
    def build_id(self, build_id):
        """Sets the build_id of this DescribeBuildOutputBuild.


        :param build_id: The build_id of this DescribeBuildOutputBuild.
        :type build_id: str
        """

        self._build_id = build_id

    @property
    def build_arn(self):
        """Gets the build_arn of this DescribeBuildOutputBuild.


        :return: The build_arn of this DescribeBuildOutputBuild.
        :rtype: str
        """
        return self._build_arn

    @build_arn.setter
    def build_arn(self, build_arn):
        """Sets the build_arn of this DescribeBuildOutputBuild.


        :param build_arn: The build_arn of this DescribeBuildOutputBuild.
        :type build_arn: str
        """

        self._build_arn = build_arn

    @property
    def name(self):
        """Gets the name of this DescribeBuildOutputBuild.


        :return: The name of this DescribeBuildOutputBuild.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeBuildOutputBuild.


        :param name: The name of this DescribeBuildOutputBuild.
        :type name: str
        """

        self._name = name

    @property
    def version(self):
        """Gets the version of this DescribeBuildOutputBuild.


        :return: The version of this DescribeBuildOutputBuild.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DescribeBuildOutputBuild.


        :param version: The version of this DescribeBuildOutputBuild.
        :type version: str
        """

        self._version = version

    @property
    def status(self):
        """Gets the status of this DescribeBuildOutputBuild.


        :return: The status of this DescribeBuildOutputBuild.
        :rtype: BuildStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeBuildOutputBuild.


        :param status: The status of this DescribeBuildOutputBuild.
        :type status: BuildStatus
        """

        self._status = status

    @property
    def size_on_disk(self):
        """Gets the size_on_disk of this DescribeBuildOutputBuild.


        :return: The size_on_disk of this DescribeBuildOutputBuild.
        :rtype: int
        """
        return self._size_on_disk

    @size_on_disk.setter
    def size_on_disk(self, size_on_disk):
        """Sets the size_on_disk of this DescribeBuildOutputBuild.


        :param size_on_disk: The size_on_disk of this DescribeBuildOutputBuild.
        :type size_on_disk: int
        """

        self._size_on_disk = size_on_disk

    @property
    def operating_system(self):
        """Gets the operating_system of this DescribeBuildOutputBuild.


        :return: The operating_system of this DescribeBuildOutputBuild.
        :rtype: OperatingSystem
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this DescribeBuildOutputBuild.


        :param operating_system: The operating_system of this DescribeBuildOutputBuild.
        :type operating_system: OperatingSystem
        """

        self._operating_system = operating_system

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeBuildOutputBuild.


        :return: The creation_time of this DescribeBuildOutputBuild.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeBuildOutputBuild.


        :param creation_time: The creation_time of this DescribeBuildOutputBuild.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def server_sdk_version(self):
        """Gets the server_sdk_version of this DescribeBuildOutputBuild.


        :return: The server_sdk_version of this DescribeBuildOutputBuild.
        :rtype: str
        """
        return self._server_sdk_version

    @server_sdk_version.setter
    def server_sdk_version(self, server_sdk_version):
        """Sets the server_sdk_version of this DescribeBuildOutputBuild.


        :param server_sdk_version: The server_sdk_version of this DescribeBuildOutputBuild.
        :type server_sdk_version: str
        """

        self._server_sdk_version = server_sdk_version
