/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecordType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecordType::OAIRecordType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecordType::OAIRecordType() {
    this->initializeModel();
}

OAIRecordType::~OAIRecordType() {}

void OAIRecordType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRecordType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRecordType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CNAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecordType::CNAME;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRecordType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRecordType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRecordType::CNAME:
            val = "CNAME";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRecordType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRecordType::eOAIRecordType OAIRecordType::getValue() const {
    return m_value;
}

void OAIRecordType::setValue(const OAIRecordType::eOAIRecordType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRecordType::isSet() const {
    
    return m_value_isSet;
}

bool OAIRecordType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
