/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateSummary.h
 *
 * This structure is returned in the response object of &lt;a&gt;ListCertificates&lt;/a&gt; action. 
 */

#ifndef OAICertificateSummary_H
#define OAICertificateSummary_H

#include <QJsonObject>

#include "OAICertificateStatus.h"
#include "OAICertificateType.h"
#include "OAIKeyAlgorithm.h"
#include "OAIRenewalEligibility.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICertificateSummary : public OAIObject {
public:
    OAICertificateSummary();
    OAICertificateSummary(QString json);
    ~OAICertificateSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertificateArn() const;
    void setCertificateArn(const QString &certificate_arn);
    bool is_certificate_arn_Set() const;
    bool is_certificate_arn_Valid() const;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    QList getSubjectAlternativeNameSummaries() const;
    void setSubjectAlternativeNameSummaries(const QList &subject_alternative_name_summaries);
    bool is_subject_alternative_name_summaries_Set() const;
    bool is_subject_alternative_name_summaries_Valid() const;

    bool getHasAdditionalSubjectAlternativeNames() const;
    void setHasAdditionalSubjectAlternativeNames(const bool &has_additional_subject_alternative_names);
    bool is_has_additional_subject_alternative_names_Set() const;
    bool is_has_additional_subject_alternative_names_Valid() const;

    OAICertificateStatus getStatus() const;
    void setStatus(const OAICertificateStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAICertificateType getType() const;
    void setType(const OAICertificateType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIKeyAlgorithm getKeyAlgorithm() const;
    void setKeyAlgorithm(const OAIKeyAlgorithm &key_algorithm);
    bool is_key_algorithm_Set() const;
    bool is_key_algorithm_Valid() const;

    QList getKeyUsages() const;
    void setKeyUsages(const QList &key_usages);
    bool is_key_usages_Set() const;
    bool is_key_usages_Valid() const;

    QList getExtendedKeyUsages() const;
    void setExtendedKeyUsages(const QList &extended_key_usages);
    bool is_extended_key_usages_Set() const;
    bool is_extended_key_usages_Valid() const;

    bool getInUse() const;
    void setInUse(const bool &in_use);
    bool is_in_use_Set() const;
    bool is_in_use_Valid() const;

    bool getExported() const;
    void setExported(const bool &exported);
    bool is_exported_Set() const;
    bool is_exported_Valid() const;

    OAIRenewalEligibility getRenewalEligibility() const;
    void setRenewalEligibility(const OAIRenewalEligibility &renewal_eligibility);
    bool is_renewal_eligibility_Set() const;
    bool is_renewal_eligibility_Valid() const;

    QDateTime getNotBefore() const;
    void setNotBefore(const QDateTime &not_before);
    bool is_not_before_Set() const;
    bool is_not_before_Valid() const;

    QDateTime getNotAfter() const;
    void setNotAfter(const QDateTime &not_after);
    bool is_not_after_Set() const;
    bool is_not_after_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getIssuedAt() const;
    void setIssuedAt(const QDateTime &issued_at);
    bool is_issued_at_Set() const;
    bool is_issued_at_Valid() const;

    QDateTime getImportedAt() const;
    void setImportedAt(const QDateTime &imported_at);
    bool is_imported_at_Set() const;
    bool is_imported_at_Valid() const;

    QDateTime getRevokedAt() const;
    void setRevokedAt(const QDateTime &revoked_at);
    bool is_revoked_at_Set() const;
    bool is_revoked_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_certificate_arn;
    bool m_certificate_arn_isSet;
    bool m_certificate_arn_isValid;

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    QList m_subject_alternative_name_summaries;
    bool m_subject_alternative_name_summaries_isSet;
    bool m_subject_alternative_name_summaries_isValid;

    bool m_has_additional_subject_alternative_names;
    bool m_has_additional_subject_alternative_names_isSet;
    bool m_has_additional_subject_alternative_names_isValid;

    OAICertificateStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAICertificateType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIKeyAlgorithm m_key_algorithm;
    bool m_key_algorithm_isSet;
    bool m_key_algorithm_isValid;

    QList m_key_usages;
    bool m_key_usages_isSet;
    bool m_key_usages_isValid;

    QList m_extended_key_usages;
    bool m_extended_key_usages_isSet;
    bool m_extended_key_usages_isValid;

    bool m_in_use;
    bool m_in_use_isSet;
    bool m_in_use_isValid;

    bool m_exported;
    bool m_exported_isSet;
    bool m_exported_isValid;

    OAIRenewalEligibility m_renewal_eligibility;
    bool m_renewal_eligibility_isSet;
    bool m_renewal_eligibility_isValid;

    QDateTime m_not_before;
    bool m_not_before_isSet;
    bool m_not_before_isValid;

    QDateTime m_not_after;
    bool m_not_after_isSet;
    bool m_not_after_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_issued_at;
    bool m_issued_at_isSet;
    bool m_issued_at_isValid;

    QDateTime m_imported_at;
    bool m_imported_at_isSet;
    bool m_imported_at_isValid;

    QDateTime m_revoked_at;
    bool m_revoked_at_isSet;
    bool m_revoked_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateSummary)

#endif // OAICertificateSummary_H
