/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRenewalSummary.h
 *
 * Contains information about the status of ACM&#39;s &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\&quot;&gt;managed renewal&lt;/a&gt; for the certificate. This structure exists only when the certificate type is &lt;code&gt;AMAZON_ISSUED&lt;/code&gt;.
 */

#ifndef OAIRenewalSummary_H
#define OAIRenewalSummary_H

#include <QJsonObject>

#include "OAIFailureReason.h"
#include "OAIRenewalStatus.h"
#include <QDateTime>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRenewalSummary : public OAIObject {
public:
    OAIRenewalSummary();
    OAIRenewalSummary(QString json);
    ~OAIRenewalSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRenewalStatus getRenewalStatus() const;
    void setRenewalStatus(const OAIRenewalStatus &renewal_status);
    bool is_renewal_status_Set() const;
    bool is_renewal_status_Valid() const;

    QList getDomainValidationOptions() const;
    void setDomainValidationOptions(const QList &domain_validation_options);
    bool is_domain_validation_options_Set() const;
    bool is_domain_validation_options_Valid() const;

    OAIFailureReason getRenewalStatusReason() const;
    void setRenewalStatusReason(const OAIFailureReason &renewal_status_reason);
    bool is_renewal_status_reason_Set() const;
    bool is_renewal_status_reason_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRenewalStatus m_renewal_status;
    bool m_renewal_status_isSet;
    bool m_renewal_status_isValid;

    QList m_domain_validation_options;
    bool m_domain_validation_options_isSet;
    bool m_domain_validation_options_isValid;

    OAIFailureReason m_renewal_status_reason;
    bool m_renewal_status_reason_isSet;
    bool m_renewal_status_reason_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRenewalSummary)

#endif // OAIRenewalSummary_H
