/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICertificateType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICertificateType::OAICertificateType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICertificateType::OAICertificateType() {
    this->initializeModel();
}

OAICertificateType::~OAICertificateType() {}

void OAICertificateType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICertificateType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICertificateType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IMPORTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAICertificateType::IMPORTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AMAZON_ISSUED", Qt::CaseInsensitive) == 0) {
        m_value = eOAICertificateType::AMAZON_ISSUED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRIVATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAICertificateType::PRIVATE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICertificateType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICertificateType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICertificateType::IMPORTED:
            val = "IMPORTED";
            break;
        case eOAICertificateType::AMAZON_ISSUED:
            val = "AMAZON_ISSUED";
            break;
        case eOAICertificateType::PRIVATE:
            val = "PRIVATE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICertificateType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICertificateType::eOAICertificateType OAICertificateType::getValue() const {
    return m_value;
}

void OAICertificateType::setValue(const OAICertificateType::eOAICertificateType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICertificateType::isSet() const {
    
    return m_value_isSet;
}

bool OAICertificateType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
