/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListCertificatesRequest.h
 *
 * 
 */

#ifndef OAIListCertificatesRequest_H
#define OAIListCertificatesRequest_H

#include <QJsonObject>

#include "OAIListCertificatesRequest_Includes.h"
#include "OAISortBy.h"
#include "OAISortOrder.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListCertificatesRequest_Includes;

class OAIListCertificatesRequest : public OAIObject {
public:
    OAIListCertificatesRequest();
    OAIListCertificatesRequest(QString json);
    ~OAIListCertificatesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getCertificateStatuses() const;
    void setCertificateStatuses(const QList &certificate_statuses);
    bool is_certificate_statuses_Set() const;
    bool is_certificate_statuses_Valid() const;

    OAIListCertificatesRequest_Includes getIncludes() const;
    void setIncludes(const OAIListCertificatesRequest_Includes &includes);
    bool is_includes_Set() const;
    bool is_includes_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxItems() const;
    void setMaxItems(const qint32 &max_items);
    bool is_max_items_Set() const;
    bool is_max_items_Valid() const;

    OAISortBy getSortBy() const;
    void setSortBy(const OAISortBy &sort_by);
    bool is_sort_by_Set() const;
    bool is_sort_by_Valid() const;

    OAISortOrder getSortOrder() const;
    void setSortOrder(const OAISortOrder &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_certificate_statuses;
    bool m_certificate_statuses_isSet;
    bool m_certificate_statuses_isValid;

    OAIListCertificatesRequest_Includes m_includes;
    bool m_includes_isSet;
    bool m_includes_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_items;
    bool m_max_items_isSet;
    bool m_max_items_isValid;

    OAISortBy m_sort_by;
    bool m_sort_by_isSet;
    bool m_sort_by_isValid;

    OAISortOrder m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListCertificatesRequest)

#endif // OAIListCertificatesRequest_H
