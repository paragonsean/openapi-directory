/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateOptions.h
 *
 * Structure that contains options for your certificate. Currently, you can use this only to specify whether to opt in to or out of certificate transparency logging. Some browsers require that public certificates issued for your domain be recorded in a log. Certificates that are not logged typically generate a browser error. Transparency makes it possible for you to detect SSL/TLS certificates that have been mistakenly or maliciously issued for your domain. For general information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency\&quot;&gt;Certificate Transparency Logging&lt;/a&gt;. 
 */

#ifndef OAICertificateOptions_H
#define OAICertificateOptions_H

#include <QJsonObject>

#include "OAICertificateTransparencyLoggingPreference.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICertificateOptions : public OAIObject {
public:
    OAICertificateOptions();
    OAICertificateOptions(QString json);
    ~OAICertificateOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICertificateTransparencyLoggingPreference getCertificateTransparencyLoggingPreference() const;
    void setCertificateTransparencyLoggingPreference(const OAICertificateTransparencyLoggingPreference &certificate_transparency_logging_preference);
    bool is_certificate_transparency_logging_preference_Set() const;
    bool is_certificate_transparency_logging_preference_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICertificateTransparencyLoggingPreference m_certificate_transparency_logging_preference;
    bool m_certificate_transparency_logging_preference_isSet;
    bool m_certificate_transparency_logging_preference_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateOptions)

#endif // OAICertificateOptions_H
