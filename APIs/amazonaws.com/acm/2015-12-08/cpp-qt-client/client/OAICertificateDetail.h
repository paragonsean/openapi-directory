/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateDetail.h
 *
 * Contains metadata about an ACM certificate. This structure is returned in the response to a &lt;a&gt;DescribeCertificate&lt;/a&gt; request. 
 */

#ifndef OAICertificateDetail_H
#define OAICertificateDetail_H

#include <QJsonObject>

#include "OAICertificateDetail_Options.h"
#include "OAICertificateDetail_RenewalSummary.h"
#include "OAICertificateStatus.h"
#include "OAICertificateType.h"
#include "OAIFailureReason.h"
#include "OAIKeyAlgorithm.h"
#include "OAIRenewalEligibility.h"
#include "OAIRevocationReason.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICertificateDetail_RenewalSummary;
class OAICertificateDetail_Options;

class OAICertificateDetail : public OAIObject {
public:
    OAICertificateDetail();
    OAICertificateDetail(QString json);
    ~OAICertificateDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertificateArn() const;
    void setCertificateArn(const QString &certificate_arn);
    bool is_certificate_arn_Set() const;
    bool is_certificate_arn_Valid() const;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    QList getSubjectAlternativeNames() const;
    void setSubjectAlternativeNames(const QList &subject_alternative_names);
    bool is_subject_alternative_names_Set() const;
    bool is_subject_alternative_names_Valid() const;

    QList getDomainValidationOptions() const;
    void setDomainValidationOptions(const QList &domain_validation_options);
    bool is_domain_validation_options_Set() const;
    bool is_domain_validation_options_Valid() const;

    QString getSerial() const;
    void setSerial(const QString &serial);
    bool is_serial_Set() const;
    bool is_serial_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getIssuer() const;
    void setIssuer(const QString &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getIssuedAt() const;
    void setIssuedAt(const QDateTime &issued_at);
    bool is_issued_at_Set() const;
    bool is_issued_at_Valid() const;

    QDateTime getImportedAt() const;
    void setImportedAt(const QDateTime &imported_at);
    bool is_imported_at_Set() const;
    bool is_imported_at_Valid() const;

    OAICertificateStatus getStatus() const;
    void setStatus(const OAICertificateStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getRevokedAt() const;
    void setRevokedAt(const QDateTime &revoked_at);
    bool is_revoked_at_Set() const;
    bool is_revoked_at_Valid() const;

    OAIRevocationReason getRevocationReason() const;
    void setRevocationReason(const OAIRevocationReason &revocation_reason);
    bool is_revocation_reason_Set() const;
    bool is_revocation_reason_Valid() const;

    QDateTime getNotBefore() const;
    void setNotBefore(const QDateTime &not_before);
    bool is_not_before_Set() const;
    bool is_not_before_Valid() const;

    QDateTime getNotAfter() const;
    void setNotAfter(const QDateTime &not_after);
    bool is_not_after_Set() const;
    bool is_not_after_Valid() const;

    OAIKeyAlgorithm getKeyAlgorithm() const;
    void setKeyAlgorithm(const OAIKeyAlgorithm &key_algorithm);
    bool is_key_algorithm_Set() const;
    bool is_key_algorithm_Valid() const;

    QString getSignatureAlgorithm() const;
    void setSignatureAlgorithm(const QString &signature_algorithm);
    bool is_signature_algorithm_Set() const;
    bool is_signature_algorithm_Valid() const;

    QList getInUseBy() const;
    void setInUseBy(const QList &in_use_by);
    bool is_in_use_by_Set() const;
    bool is_in_use_by_Valid() const;

    OAIFailureReason getFailureReason() const;
    void setFailureReason(const OAIFailureReason &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    OAICertificateType getType() const;
    void setType(const OAICertificateType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAICertificateDetail_RenewalSummary getRenewalSummary() const;
    void setRenewalSummary(const OAICertificateDetail_RenewalSummary &renewal_summary);
    bool is_renewal_summary_Set() const;
    bool is_renewal_summary_Valid() const;

    QList getKeyUsages() const;
    void setKeyUsages(const QList &key_usages);
    bool is_key_usages_Set() const;
    bool is_key_usages_Valid() const;

    QList getExtendedKeyUsages() const;
    void setExtendedKeyUsages(const QList &extended_key_usages);
    bool is_extended_key_usages_Set() const;
    bool is_extended_key_usages_Valid() const;

    QString getCertificateAuthorityArn() const;
    void setCertificateAuthorityArn(const QString &certificate_authority_arn);
    bool is_certificate_authority_arn_Set() const;
    bool is_certificate_authority_arn_Valid() const;

    OAIRenewalEligibility getRenewalEligibility() const;
    void setRenewalEligibility(const OAIRenewalEligibility &renewal_eligibility);
    bool is_renewal_eligibility_Set() const;
    bool is_renewal_eligibility_Valid() const;

    OAICertificateDetail_Options getOptions() const;
    void setOptions(const OAICertificateDetail_Options &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_certificate_arn;
    bool m_certificate_arn_isSet;
    bool m_certificate_arn_isValid;

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    QList m_subject_alternative_names;
    bool m_subject_alternative_names_isSet;
    bool m_subject_alternative_names_isValid;

    QList m_domain_validation_options;
    bool m_domain_validation_options_isSet;
    bool m_domain_validation_options_isValid;

    QString m_serial;
    bool m_serial_isSet;
    bool m_serial_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_issued_at;
    bool m_issued_at_isSet;
    bool m_issued_at_isValid;

    QDateTime m_imported_at;
    bool m_imported_at_isSet;
    bool m_imported_at_isValid;

    OAICertificateStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_revoked_at;
    bool m_revoked_at_isSet;
    bool m_revoked_at_isValid;

    OAIRevocationReason m_revocation_reason;
    bool m_revocation_reason_isSet;
    bool m_revocation_reason_isValid;

    QDateTime m_not_before;
    bool m_not_before_isSet;
    bool m_not_before_isValid;

    QDateTime m_not_after;
    bool m_not_after_isSet;
    bool m_not_after_isValid;

    OAIKeyAlgorithm m_key_algorithm;
    bool m_key_algorithm_isSet;
    bool m_key_algorithm_isValid;

    QString m_signature_algorithm;
    bool m_signature_algorithm_isSet;
    bool m_signature_algorithm_isValid;

    QList m_in_use_by;
    bool m_in_use_by_isSet;
    bool m_in_use_by_isValid;

    OAIFailureReason m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    OAICertificateType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAICertificateDetail_RenewalSummary m_renewal_summary;
    bool m_renewal_summary_isSet;
    bool m_renewal_summary_isValid;

    QList m_key_usages;
    bool m_key_usages_isSet;
    bool m_key_usages_isValid;

    QList m_extended_key_usages;
    bool m_extended_key_usages_isSet;
    bool m_extended_key_usages_isValid;

    QString m_certificate_authority_arn;
    bool m_certificate_authority_arn_isSet;
    bool m_certificate_authority_arn_isValid;

    OAIRenewalEligibility m_renewal_eligibility;
    bool m_renewal_eligibility_isSet;
    bool m_renewal_eligibility_isValid;

    OAICertificateDetail_Options m_options;
    bool m_options_isSet;
    bool m_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateDetail)

#endif // OAICertificateDetail_H
