/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutAccountConfigurationRequest.h
 *
 * 
 */

#ifndef OAIPutAccountConfigurationRequest_H
#define OAIPutAccountConfigurationRequest_H

#include <QJsonObject>

#include "OAIPutAccountConfigurationRequest_ExpiryEvents.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPutAccountConfigurationRequest_ExpiryEvents;

class OAIPutAccountConfigurationRequest : public OAIObject {
public:
    OAIPutAccountConfigurationRequest();
    OAIPutAccountConfigurationRequest(QString json);
    ~OAIPutAccountConfigurationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPutAccountConfigurationRequest_ExpiryEvents getExpiryEvents() const;
    void setExpiryEvents(const OAIPutAccountConfigurationRequest_ExpiryEvents &expiry_events);
    bool is_expiry_events_Set() const;
    bool is_expiry_events_Valid() const;

    QString getIdempotencyToken() const;
    void setIdempotencyToken(const QString &idempotency_token);
    bool is_idempotency_token_Set() const;
    bool is_idempotency_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPutAccountConfigurationRequest_ExpiryEvents m_expiry_events;
    bool m_expiry_events_isSet;
    bool m_expiry_events_isValid;

    QString m_idempotency_token;
    bool m_idempotency_token_isSet;
    bool m_idempotency_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutAccountConfigurationRequest)

#endif // OAIPutAccountConfigurationRequest_H
