/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRequestCertificateRequest.h
 *
 * 
 */

#ifndef OAIRequestCertificateRequest_H
#define OAIRequestCertificateRequest_H

#include <QJsonObject>

#include "OAIKeyAlgorithm.h"
#include "OAIRequestCertificateRequest_Options.h"
#include "OAIValidationMethod.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRequestCertificateRequest_Options;

class OAIRequestCertificateRequest : public OAIObject {
public:
    OAIRequestCertificateRequest();
    OAIRequestCertificateRequest(QString json);
    ~OAIRequestCertificateRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    OAIValidationMethod getValidationMethod() const;
    void setValidationMethod(const OAIValidationMethod &validation_method);
    bool is_validation_method_Set() const;
    bool is_validation_method_Valid() const;

    QList getSubjectAlternativeNames() const;
    void setSubjectAlternativeNames(const QList &subject_alternative_names);
    bool is_subject_alternative_names_Set() const;
    bool is_subject_alternative_names_Valid() const;

    QString getIdempotencyToken() const;
    void setIdempotencyToken(const QString &idempotency_token);
    bool is_idempotency_token_Set() const;
    bool is_idempotency_token_Valid() const;

    QList getDomainValidationOptions() const;
    void setDomainValidationOptions(const QList &domain_validation_options);
    bool is_domain_validation_options_Set() const;
    bool is_domain_validation_options_Valid() const;

    OAIRequestCertificateRequest_Options getOptions() const;
    void setOptions(const OAIRequestCertificateRequest_Options &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    QString getCertificateAuthorityArn() const;
    void setCertificateAuthorityArn(const QString &certificate_authority_arn);
    bool is_certificate_authority_arn_Set() const;
    bool is_certificate_authority_arn_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIKeyAlgorithm getKeyAlgorithm() const;
    void setKeyAlgorithm(const OAIKeyAlgorithm &key_algorithm);
    bool is_key_algorithm_Set() const;
    bool is_key_algorithm_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    OAIValidationMethod m_validation_method;
    bool m_validation_method_isSet;
    bool m_validation_method_isValid;

    QList m_subject_alternative_names;
    bool m_subject_alternative_names_isSet;
    bool m_subject_alternative_names_isValid;

    QString m_idempotency_token;
    bool m_idempotency_token_isSet;
    bool m_idempotency_token_isValid;

    QList m_domain_validation_options;
    bool m_domain_validation_options_isSet;
    bool m_domain_validation_options_isValid;

    OAIRequestCertificateRequest_Options m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    QString m_certificate_authority_arn;
    bool m_certificate_authority_arn_isSet;
    bool m_certificate_authority_arn_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIKeyAlgorithm m_key_algorithm;
    bool m_key_algorithm_isSet;
    bool m_key_algorithm_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRequestCertificateRequest)

#endif // OAIRequestCertificateRequest_H
