/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRenewalEligibility.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRenewalEligibility::OAIRenewalEligibility(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRenewalEligibility::OAIRenewalEligibility() {
    this->initializeModel();
}

OAIRenewalEligibility::~OAIRenewalEligibility() {}

void OAIRenewalEligibility::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRenewalEligibility::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRenewalEligibility::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ELIGIBLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRenewalEligibility::ELIGIBLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INELIGIBLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRenewalEligibility::INELIGIBLE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRenewalEligibility::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRenewalEligibility::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRenewalEligibility::ELIGIBLE:
            val = "ELIGIBLE";
            break;
        case eOAIRenewalEligibility::INELIGIBLE:
            val = "INELIGIBLE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRenewalEligibility::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRenewalEligibility::eOAIRenewalEligibility OAIRenewalEligibility::getValue() const {
    return m_value;
}

void OAIRenewalEligibility::setValue(const OAIRenewalEligibility::eOAIRenewalEligibility& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRenewalEligibility::isSet() const {
    
    return m_value_isSet;
}

bool OAIRenewalEligibility::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
