/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilters.h
 *
 * This structure can be used in the &lt;a&gt;ListCertificates&lt;/a&gt; action to filter the output of the certificate list. 
 */

#ifndef OAIFilters_H
#define OAIFilters_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFilters : public OAIObject {
public:
    OAIFilters();
    OAIFilters(QString json);
    ~OAIFilters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getExtendedKeyUsage() const;
    void setExtendedKeyUsage(const QList &extended_key_usage);
    bool is_extended_key_usage_Set() const;
    bool is_extended_key_usage_Valid() const;

    QList getKeyUsage() const;
    void setKeyUsage(const QList &key_usage);
    bool is_key_usage_Set() const;
    bool is_key_usage_Valid() const;

    QList getKeyTypes() const;
    void setKeyTypes(const QList &key_types);
    bool is_key_types_Set() const;
    bool is_key_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_extended_key_usage;
    bool m_extended_key_usage_isSet;
    bool m_extended_key_usage_isValid;

    QList m_key_usage;
    bool m_key_usage_isSet;
    bool m_key_usage_isValid;

    QList m_key_types;
    bool m_key_types_isSet;
    bool m_key_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilters)

#endif // OAIFilters_H
