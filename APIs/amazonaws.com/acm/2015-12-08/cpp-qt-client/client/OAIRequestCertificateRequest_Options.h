/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRequestCertificateRequest_Options.h
 *
 * 
 */

#ifndef OAIRequestCertificateRequest_Options_H
#define OAIRequestCertificateRequest_Options_H

#include <QJsonObject>

#include "OAICertificateTransparencyLoggingPreference.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRequestCertificateRequest_Options : public OAIObject {
public:
    OAIRequestCertificateRequest_Options();
    OAIRequestCertificateRequest_Options(QString json);
    ~OAIRequestCertificateRequest_Options() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICertificateTransparencyLoggingPreference getCertificateTransparencyLoggingPreference() const;
    void setCertificateTransparencyLoggingPreference(const OAICertificateTransparencyLoggingPreference &certificate_transparency_logging_preference);
    bool is_certificate_transparency_logging_preference_Set() const;
    bool is_certificate_transparency_logging_preference_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICertificateTransparencyLoggingPreference m_certificate_transparency_logging_preference;
    bool m_certificate_transparency_logging_preference_isSet;
    bool m_certificate_transparency_logging_preference_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRequestCertificateRequest_Options)

#endif // OAIRequestCertificateRequest_Options_H
