/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeCertificateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeCertificateResponse::OAIDescribeCertificateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeCertificateResponse::OAIDescribeCertificateResponse() {
    this->initializeModel();
}

OAIDescribeCertificateResponse::~OAIDescribeCertificateResponse() {}

void OAIDescribeCertificateResponse::initializeModel() {

    m_certificate_isSet = false;
    m_certificate_isValid = false;
}

void OAIDescribeCertificateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeCertificateResponse::fromJsonObject(QJsonObject json) {

    m_certificate_isValid = ::OpenAPI::fromJsonValue(m_certificate, json[QString("Certificate")]);
    m_certificate_isSet = !json[QString("Certificate")].isNull() && m_certificate_isValid;
}

QString OAIDescribeCertificateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeCertificateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_certificate.isSet()) {
        obj.insert(QString("Certificate"), ::OpenAPI::toJsonValue(m_certificate));
    }
    return obj;
}

OAIDescribeCertificateResponse_Certificate OAIDescribeCertificateResponse::getCertificate() const {
    return m_certificate;
}
void OAIDescribeCertificateResponse::setCertificate(const OAIDescribeCertificateResponse_Certificate &certificate) {
    m_certificate = certificate;
    m_certificate_isSet = true;
}

bool OAIDescribeCertificateResponse::is_certificate_Set() const{
    return m_certificate_isSet;
}

bool OAIDescribeCertificateResponse::is_certificate_Valid() const{
    return m_certificate_isValid;
}

bool OAIDescribeCertificateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_certificate.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeCertificateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
