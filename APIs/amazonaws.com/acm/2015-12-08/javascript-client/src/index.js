/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AddTagsToCertificateRequest from './model/AddTagsToCertificateRequest';
import CertificateDetail from './model/CertificateDetail';
import CertificateDetailOptions from './model/CertificateDetailOptions';
import CertificateDetailRenewalSummary from './model/CertificateDetailRenewalSummary';
import CertificateOptions from './model/CertificateOptions';
import CertificateStatus from './model/CertificateStatus';
import CertificateSummary from './model/CertificateSummary';
import CertificateTransparencyLoggingPreference from './model/CertificateTransparencyLoggingPreference';
import CertificateType from './model/CertificateType';
import DeleteCertificateRequest from './model/DeleteCertificateRequest';
import DescribeCertificateRequest from './model/DescribeCertificateRequest';
import DescribeCertificateResponse from './model/DescribeCertificateResponse';
import DescribeCertificateResponseCertificate from './model/DescribeCertificateResponseCertificate';
import DomainStatus from './model/DomainStatus';
import DomainValidation from './model/DomainValidation';
import DomainValidationOption from './model/DomainValidationOption';
import DomainValidationResourceRecord from './model/DomainValidationResourceRecord';
import ExpiryEventsConfiguration from './model/ExpiryEventsConfiguration';
import ExportCertificateRequest from './model/ExportCertificateRequest';
import ExportCertificateResponse from './model/ExportCertificateResponse';
import ExtendedKeyUsage from './model/ExtendedKeyUsage';
import ExtendedKeyUsageName from './model/ExtendedKeyUsageName';
import FailureReason from './model/FailureReason';
import Filters from './model/Filters';
import GetAccountConfigurationResponse from './model/GetAccountConfigurationResponse';
import GetAccountConfigurationResponseExpiryEvents from './model/GetAccountConfigurationResponseExpiryEvents';
import GetCertificateRequest from './model/GetCertificateRequest';
import GetCertificateResponse from './model/GetCertificateResponse';
import ImportCertificateRequest from './model/ImportCertificateRequest';
import ImportCertificateResponse from './model/ImportCertificateResponse';
import KeyAlgorithm from './model/KeyAlgorithm';
import KeyUsage from './model/KeyUsage';
import KeyUsageName from './model/KeyUsageName';
import ListCertificatesRequest from './model/ListCertificatesRequest';
import ListCertificatesRequestIncludes from './model/ListCertificatesRequestIncludes';
import ListCertificatesResponse from './model/ListCertificatesResponse';
import ListTagsForCertificateRequest from './model/ListTagsForCertificateRequest';
import ListTagsForCertificateResponse from './model/ListTagsForCertificateResponse';
import PutAccountConfigurationRequest from './model/PutAccountConfigurationRequest';
import PutAccountConfigurationRequestExpiryEvents from './model/PutAccountConfigurationRequestExpiryEvents';
import RecordType from './model/RecordType';
import RemoveTagsFromCertificateRequest from './model/RemoveTagsFromCertificateRequest';
import RenewCertificateRequest from './model/RenewCertificateRequest';
import RenewalEligibility from './model/RenewalEligibility';
import RenewalStatus from './model/RenewalStatus';
import RenewalSummary from './model/RenewalSummary';
import RequestCertificateRequest from './model/RequestCertificateRequest';
import RequestCertificateRequestOptions from './model/RequestCertificateRequestOptions';
import RequestCertificateResponse from './model/RequestCertificateResponse';
import ResendValidationEmailRequest from './model/ResendValidationEmailRequest';
import ResourceRecord from './model/ResourceRecord';
import RevocationReason from './model/RevocationReason';
import SortBy from './model/SortBy';
import SortOrder from './model/SortOrder';
import Tag from './model/Tag';
import UpdateCertificateOptionsRequest from './model/UpdateCertificateOptionsRequest';
import UpdateCertificateOptionsRequestOptions from './model/UpdateCertificateOptionsRequestOptions';
import ValidationMethod from './model/ValidationMethod';
import DefaultApi from './api/DefaultApi';


/**
* &lt;fullname&gt;Certificate Manager&lt;/fullname&gt; &lt;p&gt;You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/acm/latest/userguide/\&quot;&gt;Certificate Manager User Guide&lt;/a&gt;.&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AwsCertificateManager = require('index'); // See note below*.
* var xxxSvc = new AwsCertificateManager.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AwsCertificateManager.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AwsCertificateManager.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AwsCertificateManager.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-12-08
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AddTagsToCertificateRequest model constructor.
     * @property {module:model/AddTagsToCertificateRequest}
     */
    AddTagsToCertificateRequest,

    /**
     * The CertificateDetail model constructor.
     * @property {module:model/CertificateDetail}
     */
    CertificateDetail,

    /**
     * The CertificateDetailOptions model constructor.
     * @property {module:model/CertificateDetailOptions}
     */
    CertificateDetailOptions,

    /**
     * The CertificateDetailRenewalSummary model constructor.
     * @property {module:model/CertificateDetailRenewalSummary}
     */
    CertificateDetailRenewalSummary,

    /**
     * The CertificateOptions model constructor.
     * @property {module:model/CertificateOptions}
     */
    CertificateOptions,

    /**
     * The CertificateStatus model constructor.
     * @property {module:model/CertificateStatus}
     */
    CertificateStatus,

    /**
     * The CertificateSummary model constructor.
     * @property {module:model/CertificateSummary}
     */
    CertificateSummary,

    /**
     * The CertificateTransparencyLoggingPreference model constructor.
     * @property {module:model/CertificateTransparencyLoggingPreference}
     */
    CertificateTransparencyLoggingPreference,

    /**
     * The CertificateType model constructor.
     * @property {module:model/CertificateType}
     */
    CertificateType,

    /**
     * The DeleteCertificateRequest model constructor.
     * @property {module:model/DeleteCertificateRequest}
     */
    DeleteCertificateRequest,

    /**
     * The DescribeCertificateRequest model constructor.
     * @property {module:model/DescribeCertificateRequest}
     */
    DescribeCertificateRequest,

    /**
     * The DescribeCertificateResponse model constructor.
     * @property {module:model/DescribeCertificateResponse}
     */
    DescribeCertificateResponse,

    /**
     * The DescribeCertificateResponseCertificate model constructor.
     * @property {module:model/DescribeCertificateResponseCertificate}
     */
    DescribeCertificateResponseCertificate,

    /**
     * The DomainStatus model constructor.
     * @property {module:model/DomainStatus}
     */
    DomainStatus,

    /**
     * The DomainValidation model constructor.
     * @property {module:model/DomainValidation}
     */
    DomainValidation,

    /**
     * The DomainValidationOption model constructor.
     * @property {module:model/DomainValidationOption}
     */
    DomainValidationOption,

    /**
     * The DomainValidationResourceRecord model constructor.
     * @property {module:model/DomainValidationResourceRecord}
     */
    DomainValidationResourceRecord,

    /**
     * The ExpiryEventsConfiguration model constructor.
     * @property {module:model/ExpiryEventsConfiguration}
     */
    ExpiryEventsConfiguration,

    /**
     * The ExportCertificateRequest model constructor.
     * @property {module:model/ExportCertificateRequest}
     */
    ExportCertificateRequest,

    /**
     * The ExportCertificateResponse model constructor.
     * @property {module:model/ExportCertificateResponse}
     */
    ExportCertificateResponse,

    /**
     * The ExtendedKeyUsage model constructor.
     * @property {module:model/ExtendedKeyUsage}
     */
    ExtendedKeyUsage,

    /**
     * The ExtendedKeyUsageName model constructor.
     * @property {module:model/ExtendedKeyUsageName}
     */
    ExtendedKeyUsageName,

    /**
     * The FailureReason model constructor.
     * @property {module:model/FailureReason}
     */
    FailureReason,

    /**
     * The Filters model constructor.
     * @property {module:model/Filters}
     */
    Filters,

    /**
     * The GetAccountConfigurationResponse model constructor.
     * @property {module:model/GetAccountConfigurationResponse}
     */
    GetAccountConfigurationResponse,

    /**
     * The GetAccountConfigurationResponseExpiryEvents model constructor.
     * @property {module:model/GetAccountConfigurationResponseExpiryEvents}
     */
    GetAccountConfigurationResponseExpiryEvents,

    /**
     * The GetCertificateRequest model constructor.
     * @property {module:model/GetCertificateRequest}
     */
    GetCertificateRequest,

    /**
     * The GetCertificateResponse model constructor.
     * @property {module:model/GetCertificateResponse}
     */
    GetCertificateResponse,

    /**
     * The ImportCertificateRequest model constructor.
     * @property {module:model/ImportCertificateRequest}
     */
    ImportCertificateRequest,

    /**
     * The ImportCertificateResponse model constructor.
     * @property {module:model/ImportCertificateResponse}
     */
    ImportCertificateResponse,

    /**
     * The KeyAlgorithm model constructor.
     * @property {module:model/KeyAlgorithm}
     */
    KeyAlgorithm,

    /**
     * The KeyUsage model constructor.
     * @property {module:model/KeyUsage}
     */
    KeyUsage,

    /**
     * The KeyUsageName model constructor.
     * @property {module:model/KeyUsageName}
     */
    KeyUsageName,

    /**
     * The ListCertificatesRequest model constructor.
     * @property {module:model/ListCertificatesRequest}
     */
    ListCertificatesRequest,

    /**
     * The ListCertificatesRequestIncludes model constructor.
     * @property {module:model/ListCertificatesRequestIncludes}
     */
    ListCertificatesRequestIncludes,

    /**
     * The ListCertificatesResponse model constructor.
     * @property {module:model/ListCertificatesResponse}
     */
    ListCertificatesResponse,

    /**
     * The ListTagsForCertificateRequest model constructor.
     * @property {module:model/ListTagsForCertificateRequest}
     */
    ListTagsForCertificateRequest,

    /**
     * The ListTagsForCertificateResponse model constructor.
     * @property {module:model/ListTagsForCertificateResponse}
     */
    ListTagsForCertificateResponse,

    /**
     * The PutAccountConfigurationRequest model constructor.
     * @property {module:model/PutAccountConfigurationRequest}
     */
    PutAccountConfigurationRequest,

    /**
     * The PutAccountConfigurationRequestExpiryEvents model constructor.
     * @property {module:model/PutAccountConfigurationRequestExpiryEvents}
     */
    PutAccountConfigurationRequestExpiryEvents,

    /**
     * The RecordType model constructor.
     * @property {module:model/RecordType}
     */
    RecordType,

    /**
     * The RemoveTagsFromCertificateRequest model constructor.
     * @property {module:model/RemoveTagsFromCertificateRequest}
     */
    RemoveTagsFromCertificateRequest,

    /**
     * The RenewCertificateRequest model constructor.
     * @property {module:model/RenewCertificateRequest}
     */
    RenewCertificateRequest,

    /**
     * The RenewalEligibility model constructor.
     * @property {module:model/RenewalEligibility}
     */
    RenewalEligibility,

    /**
     * The RenewalStatus model constructor.
     * @property {module:model/RenewalStatus}
     */
    RenewalStatus,

    /**
     * The RenewalSummary model constructor.
     * @property {module:model/RenewalSummary}
     */
    RenewalSummary,

    /**
     * The RequestCertificateRequest model constructor.
     * @property {module:model/RequestCertificateRequest}
     */
    RequestCertificateRequest,

    /**
     * The RequestCertificateRequestOptions model constructor.
     * @property {module:model/RequestCertificateRequestOptions}
     */
    RequestCertificateRequestOptions,

    /**
     * The RequestCertificateResponse model constructor.
     * @property {module:model/RequestCertificateResponse}
     */
    RequestCertificateResponse,

    /**
     * The ResendValidationEmailRequest model constructor.
     * @property {module:model/ResendValidationEmailRequest}
     */
    ResendValidationEmailRequest,

    /**
     * The ResourceRecord model constructor.
     * @property {module:model/ResourceRecord}
     */
    ResourceRecord,

    /**
     * The RevocationReason model constructor.
     * @property {module:model/RevocationReason}
     */
    RevocationReason,

    /**
     * The SortBy model constructor.
     * @property {module:model/SortBy}
     */
    SortBy,

    /**
     * The SortOrder model constructor.
     * @property {module:model/SortOrder}
     */
    SortOrder,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The UpdateCertificateOptionsRequest model constructor.
     * @property {module:model/UpdateCertificateOptionsRequest}
     */
    UpdateCertificateOptionsRequest,

    /**
     * The UpdateCertificateOptionsRequestOptions model constructor.
     * @property {module:model/UpdateCertificateOptionsRequestOptions}
     */
    UpdateCertificateOptionsRequestOptions,

    /**
     * The ValidationMethod model constructor.
     * @property {module:model/ValidationMethod}
     */
    ValidationMethod,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
