/**
 * AWS Certificate Manager
 * <fullname>Certificate Manager</fullname> <p>You can use Certificate Manager (ACM) to manage SSL/TLS certificates for your Amazon Web Services-based websites and applications. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCertificateManager);
  }
}(this, function(expect, AwsCertificateManager) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCertificateManager.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('addTagsToCertificate', function() {
      it('should call addTagsToCertificate successfully', function(done) {
        //uncomment below and update the code to test addTagsToCertificate
        //instance.addTagsToCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCertificate', function() {
      it('should call deleteCertificate successfully', function(done) {
        //uncomment below and update the code to test deleteCertificate
        //instance.deleteCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeCertificate', function() {
      it('should call describeCertificate successfully', function(done) {
        //uncomment below and update the code to test describeCertificate
        //instance.describeCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportCertificate', function() {
      it('should call exportCertificate successfully', function(done) {
        //uncomment below and update the code to test exportCertificate
        //instance.exportCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountConfiguration', function() {
      it('should call getAccountConfiguration successfully', function(done) {
        //uncomment below and update the code to test getAccountConfiguration
        //instance.getAccountConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCertificate', function() {
      it('should call getCertificate successfully', function(done) {
        //uncomment below and update the code to test getCertificate
        //instance.getCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importCertificate', function() {
      it('should call importCertificate successfully', function(done) {
        //uncomment below and update the code to test importCertificate
        //instance.importCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCertificates', function() {
      it('should call listCertificates successfully', function(done) {
        //uncomment below and update the code to test listCertificates
        //instance.listCertificates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForCertificate', function() {
      it('should call listTagsForCertificate successfully', function(done) {
        //uncomment below and update the code to test listTagsForCertificate
        //instance.listTagsForCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putAccountConfiguration', function() {
      it('should call putAccountConfiguration successfully', function(done) {
        //uncomment below and update the code to test putAccountConfiguration
        //instance.putAccountConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeTagsFromCertificate', function() {
      it('should call removeTagsFromCertificate successfully', function(done) {
        //uncomment below and update the code to test removeTagsFromCertificate
        //instance.removeTagsFromCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('renewCertificate', function() {
      it('should call renewCertificate successfully', function(done) {
        //uncomment below and update the code to test renewCertificate
        //instance.renewCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestCertificate', function() {
      it('should call requestCertificate successfully', function(done) {
        //uncomment below and update the code to test requestCertificate
        //instance.requestCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resendValidationEmail', function() {
      it('should call resendValidationEmail successfully', function(done) {
        //uncomment below and update the code to test resendValidationEmail
        //instance.resendValidationEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCertificateOptions', function() {
      it('should call updateCertificateOptions successfully', function(done) {
        //uncomment below and update the code to test updateCertificateOptions
        //instance.updateCertificateOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
