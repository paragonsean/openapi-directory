# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.failure_reason import FailureReason
from openapi_server.models.renewal_status import RenewalStatus
from openapi_server import util


class RenewalSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, renewal_status: RenewalStatus=None, domain_validation_options: List=None, renewal_status_reason: FailureReason=None, updated_at: datetime=None):
        """RenewalSummary - a model defined in OpenAPI

        :param renewal_status: The renewal_status of this RenewalSummary.
        :param domain_validation_options: The domain_validation_options of this RenewalSummary.
        :param renewal_status_reason: The renewal_status_reason of this RenewalSummary.
        :param updated_at: The updated_at of this RenewalSummary.
        """
        self.openapi_types = {
            'renewal_status': RenewalStatus,
            'domain_validation_options': List,
            'renewal_status_reason': FailureReason,
            'updated_at': datetime
        }

        self.attribute_map = {
            'renewal_status': 'RenewalStatus',
            'domain_validation_options': 'DomainValidationOptions',
            'renewal_status_reason': 'RenewalStatusReason',
            'updated_at': 'UpdatedAt'
        }

        self._renewal_status = renewal_status
        self._domain_validation_options = domain_validation_options
        self._renewal_status_reason = renewal_status_reason
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RenewalSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RenewalSummary of this RenewalSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def renewal_status(self):
        """Gets the renewal_status of this RenewalSummary.


        :return: The renewal_status of this RenewalSummary.
        :rtype: RenewalStatus
        """
        return self._renewal_status

    @renewal_status.setter
    def renewal_status(self, renewal_status):
        """Sets the renewal_status of this RenewalSummary.


        :param renewal_status: The renewal_status of this RenewalSummary.
        :type renewal_status: RenewalStatus
        """
        if renewal_status is None:
            raise ValueError("Invalid value for `renewal_status`, must not be `None`")

        self._renewal_status = renewal_status

    @property
    def domain_validation_options(self):
        """Gets the domain_validation_options of this RenewalSummary.


        :return: The domain_validation_options of this RenewalSummary.
        :rtype: List
        """
        return self._domain_validation_options

    @domain_validation_options.setter
    def domain_validation_options(self, domain_validation_options):
        """Sets the domain_validation_options of this RenewalSummary.


        :param domain_validation_options: The domain_validation_options of this RenewalSummary.
        :type domain_validation_options: List
        """
        if domain_validation_options is None:
            raise ValueError("Invalid value for `domain_validation_options`, must not be `None`")

        self._domain_validation_options = domain_validation_options

    @property
    def renewal_status_reason(self):
        """Gets the renewal_status_reason of this RenewalSummary.


        :return: The renewal_status_reason of this RenewalSummary.
        :rtype: FailureReason
        """
        return self._renewal_status_reason

    @renewal_status_reason.setter
    def renewal_status_reason(self, renewal_status_reason):
        """Sets the renewal_status_reason of this RenewalSummary.


        :param renewal_status_reason: The renewal_status_reason of this RenewalSummary.
        :type renewal_status_reason: FailureReason
        """

        self._renewal_status_reason = renewal_status_reason

    @property
    def updated_at(self):
        """Gets the updated_at of this RenewalSummary.


        :return: The updated_at of this RenewalSummary.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this RenewalSummary.


        :param updated_at: The updated_at of this RenewalSummary.
        :type updated_at: datetime
        """
        if updated_at is None:
            raise ValueError("Invalid value for `updated_at`, must not be `None`")

        self._updated_at = updated_at
