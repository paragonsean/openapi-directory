# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.certificate_status import CertificateStatus
from openapi_server.models.certificate_type import CertificateType
from openapi_server.models.key_algorithm import KeyAlgorithm
from openapi_server.models.renewal_eligibility import RenewalEligibility
from openapi_server import util


class CertificateSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_arn: str=None, domain_name: str=None, subject_alternative_name_summaries: List=None, has_additional_subject_alternative_names: bool=None, status: CertificateStatus=None, type: CertificateType=None, key_algorithm: KeyAlgorithm=None, key_usages: List=None, extended_key_usages: List=None, in_use: bool=None, exported: bool=None, renewal_eligibility: RenewalEligibility=None, not_before: datetime=None, not_after: datetime=None, created_at: datetime=None, issued_at: datetime=None, imported_at: datetime=None, revoked_at: datetime=None):
        """CertificateSummary - a model defined in OpenAPI

        :param certificate_arn: The certificate_arn of this CertificateSummary.
        :param domain_name: The domain_name of this CertificateSummary.
        :param subject_alternative_name_summaries: The subject_alternative_name_summaries of this CertificateSummary.
        :param has_additional_subject_alternative_names: The has_additional_subject_alternative_names of this CertificateSummary.
        :param status: The status of this CertificateSummary.
        :param type: The type of this CertificateSummary.
        :param key_algorithm: The key_algorithm of this CertificateSummary.
        :param key_usages: The key_usages of this CertificateSummary.
        :param extended_key_usages: The extended_key_usages of this CertificateSummary.
        :param in_use: The in_use of this CertificateSummary.
        :param exported: The exported of this CertificateSummary.
        :param renewal_eligibility: The renewal_eligibility of this CertificateSummary.
        :param not_before: The not_before of this CertificateSummary.
        :param not_after: The not_after of this CertificateSummary.
        :param created_at: The created_at of this CertificateSummary.
        :param issued_at: The issued_at of this CertificateSummary.
        :param imported_at: The imported_at of this CertificateSummary.
        :param revoked_at: The revoked_at of this CertificateSummary.
        """
        self.openapi_types = {
            'certificate_arn': str,
            'domain_name': str,
            'subject_alternative_name_summaries': List,
            'has_additional_subject_alternative_names': bool,
            'status': CertificateStatus,
            'type': CertificateType,
            'key_algorithm': KeyAlgorithm,
            'key_usages': List,
            'extended_key_usages': List,
            'in_use': bool,
            'exported': bool,
            'renewal_eligibility': RenewalEligibility,
            'not_before': datetime,
            'not_after': datetime,
            'created_at': datetime,
            'issued_at': datetime,
            'imported_at': datetime,
            'revoked_at': datetime
        }

        self.attribute_map = {
            'certificate_arn': 'CertificateArn',
            'domain_name': 'DomainName',
            'subject_alternative_name_summaries': 'SubjectAlternativeNameSummaries',
            'has_additional_subject_alternative_names': 'HasAdditionalSubjectAlternativeNames',
            'status': 'Status',
            'type': 'Type',
            'key_algorithm': 'KeyAlgorithm',
            'key_usages': 'KeyUsages',
            'extended_key_usages': 'ExtendedKeyUsages',
            'in_use': 'InUse',
            'exported': 'Exported',
            'renewal_eligibility': 'RenewalEligibility',
            'not_before': 'NotBefore',
            'not_after': 'NotAfter',
            'created_at': 'CreatedAt',
            'issued_at': 'IssuedAt',
            'imported_at': 'ImportedAt',
            'revoked_at': 'RevokedAt'
        }

        self._certificate_arn = certificate_arn
        self._domain_name = domain_name
        self._subject_alternative_name_summaries = subject_alternative_name_summaries
        self._has_additional_subject_alternative_names = has_additional_subject_alternative_names
        self._status = status
        self._type = type
        self._key_algorithm = key_algorithm
        self._key_usages = key_usages
        self._extended_key_usages = extended_key_usages
        self._in_use = in_use
        self._exported = exported
        self._renewal_eligibility = renewal_eligibility
        self._not_before = not_before
        self._not_after = not_after
        self._created_at = created_at
        self._issued_at = issued_at
        self._imported_at = imported_at
        self._revoked_at = revoked_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificateSummary of this CertificateSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_arn(self):
        """Gets the certificate_arn of this CertificateSummary.


        :return: The certificate_arn of this CertificateSummary.
        :rtype: str
        """
        return self._certificate_arn

    @certificate_arn.setter
    def certificate_arn(self, certificate_arn):
        """Sets the certificate_arn of this CertificateSummary.


        :param certificate_arn: The certificate_arn of this CertificateSummary.
        :type certificate_arn: str
        """

        self._certificate_arn = certificate_arn

    @property
    def domain_name(self):
        """Gets the domain_name of this CertificateSummary.


        :return: The domain_name of this CertificateSummary.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this CertificateSummary.


        :param domain_name: The domain_name of this CertificateSummary.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def subject_alternative_name_summaries(self):
        """Gets the subject_alternative_name_summaries of this CertificateSummary.


        :return: The subject_alternative_name_summaries of this CertificateSummary.
        :rtype: List
        """
        return self._subject_alternative_name_summaries

    @subject_alternative_name_summaries.setter
    def subject_alternative_name_summaries(self, subject_alternative_name_summaries):
        """Sets the subject_alternative_name_summaries of this CertificateSummary.


        :param subject_alternative_name_summaries: The subject_alternative_name_summaries of this CertificateSummary.
        :type subject_alternative_name_summaries: List
        """

        self._subject_alternative_name_summaries = subject_alternative_name_summaries

    @property
    def has_additional_subject_alternative_names(self):
        """Gets the has_additional_subject_alternative_names of this CertificateSummary.


        :return: The has_additional_subject_alternative_names of this CertificateSummary.
        :rtype: bool
        """
        return self._has_additional_subject_alternative_names

    @has_additional_subject_alternative_names.setter
    def has_additional_subject_alternative_names(self, has_additional_subject_alternative_names):
        """Sets the has_additional_subject_alternative_names of this CertificateSummary.


        :param has_additional_subject_alternative_names: The has_additional_subject_alternative_names of this CertificateSummary.
        :type has_additional_subject_alternative_names: bool
        """

        self._has_additional_subject_alternative_names = has_additional_subject_alternative_names

    @property
    def status(self):
        """Gets the status of this CertificateSummary.


        :return: The status of this CertificateSummary.
        :rtype: CertificateStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CertificateSummary.


        :param status: The status of this CertificateSummary.
        :type status: CertificateStatus
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this CertificateSummary.


        :return: The type of this CertificateSummary.
        :rtype: CertificateType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CertificateSummary.


        :param type: The type of this CertificateSummary.
        :type type: CertificateType
        """

        self._type = type

    @property
    def key_algorithm(self):
        """Gets the key_algorithm of this CertificateSummary.


        :return: The key_algorithm of this CertificateSummary.
        :rtype: KeyAlgorithm
        """
        return self._key_algorithm

    @key_algorithm.setter
    def key_algorithm(self, key_algorithm):
        """Sets the key_algorithm of this CertificateSummary.


        :param key_algorithm: The key_algorithm of this CertificateSummary.
        :type key_algorithm: KeyAlgorithm
        """

        self._key_algorithm = key_algorithm

    @property
    def key_usages(self):
        """Gets the key_usages of this CertificateSummary.


        :return: The key_usages of this CertificateSummary.
        :rtype: List
        """
        return self._key_usages

    @key_usages.setter
    def key_usages(self, key_usages):
        """Sets the key_usages of this CertificateSummary.


        :param key_usages: The key_usages of this CertificateSummary.
        :type key_usages: List
        """

        self._key_usages = key_usages

    @property
    def extended_key_usages(self):
        """Gets the extended_key_usages of this CertificateSummary.


        :return: The extended_key_usages of this CertificateSummary.
        :rtype: List
        """
        return self._extended_key_usages

    @extended_key_usages.setter
    def extended_key_usages(self, extended_key_usages):
        """Sets the extended_key_usages of this CertificateSummary.


        :param extended_key_usages: The extended_key_usages of this CertificateSummary.
        :type extended_key_usages: List
        """

        self._extended_key_usages = extended_key_usages

    @property
    def in_use(self):
        """Gets the in_use of this CertificateSummary.


        :return: The in_use of this CertificateSummary.
        :rtype: bool
        """
        return self._in_use

    @in_use.setter
    def in_use(self, in_use):
        """Sets the in_use of this CertificateSummary.


        :param in_use: The in_use of this CertificateSummary.
        :type in_use: bool
        """

        self._in_use = in_use

    @property
    def exported(self):
        """Gets the exported of this CertificateSummary.


        :return: The exported of this CertificateSummary.
        :rtype: bool
        """
        return self._exported

    @exported.setter
    def exported(self, exported):
        """Sets the exported of this CertificateSummary.


        :param exported: The exported of this CertificateSummary.
        :type exported: bool
        """

        self._exported = exported

    @property
    def renewal_eligibility(self):
        """Gets the renewal_eligibility of this CertificateSummary.


        :return: The renewal_eligibility of this CertificateSummary.
        :rtype: RenewalEligibility
        """
        return self._renewal_eligibility

    @renewal_eligibility.setter
    def renewal_eligibility(self, renewal_eligibility):
        """Sets the renewal_eligibility of this CertificateSummary.


        :param renewal_eligibility: The renewal_eligibility of this CertificateSummary.
        :type renewal_eligibility: RenewalEligibility
        """

        self._renewal_eligibility = renewal_eligibility

    @property
    def not_before(self):
        """Gets the not_before of this CertificateSummary.


        :return: The not_before of this CertificateSummary.
        :rtype: datetime
        """
        return self._not_before

    @not_before.setter
    def not_before(self, not_before):
        """Sets the not_before of this CertificateSummary.


        :param not_before: The not_before of this CertificateSummary.
        :type not_before: datetime
        """

        self._not_before = not_before

    @property
    def not_after(self):
        """Gets the not_after of this CertificateSummary.


        :return: The not_after of this CertificateSummary.
        :rtype: datetime
        """
        return self._not_after

    @not_after.setter
    def not_after(self, not_after):
        """Sets the not_after of this CertificateSummary.


        :param not_after: The not_after of this CertificateSummary.
        :type not_after: datetime
        """

        self._not_after = not_after

    @property
    def created_at(self):
        """Gets the created_at of this CertificateSummary.


        :return: The created_at of this CertificateSummary.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CertificateSummary.


        :param created_at: The created_at of this CertificateSummary.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def issued_at(self):
        """Gets the issued_at of this CertificateSummary.


        :return: The issued_at of this CertificateSummary.
        :rtype: datetime
        """
        return self._issued_at

    @issued_at.setter
    def issued_at(self, issued_at):
        """Sets the issued_at of this CertificateSummary.


        :param issued_at: The issued_at of this CertificateSummary.
        :type issued_at: datetime
        """

        self._issued_at = issued_at

    @property
    def imported_at(self):
        """Gets the imported_at of this CertificateSummary.


        :return: The imported_at of this CertificateSummary.
        :rtype: datetime
        """
        return self._imported_at

    @imported_at.setter
    def imported_at(self, imported_at):
        """Sets the imported_at of this CertificateSummary.


        :param imported_at: The imported_at of this CertificateSummary.
        :type imported_at: datetime
        """

        self._imported_at = imported_at

    @property
    def revoked_at(self):
        """Gets the revoked_at of this CertificateSummary.


        :return: The revoked_at of this CertificateSummary.
        :rtype: datetime
        """
        return self._revoked_at

    @revoked_at.setter
    def revoked_at(self, revoked_at):
        """Sets the revoked_at of this CertificateSummary.


        :param revoked_at: The revoked_at of this CertificateSummary.
        :type revoked_at: datetime
        """

        self._revoked_at = revoked_at
