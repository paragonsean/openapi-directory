# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FailureReason(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NO_AVAILABLE_CONTACTS = 'NO_AVAILABLE_CONTACTS'
    ADDITIONAL_VERIFICATION_REQUIRED = 'ADDITIONAL_VERIFICATION_REQUIRED'
    DOMAIN_NOT_ALLOWED = 'DOMAIN_NOT_ALLOWED'
    INVALID_PUBLIC_DOMAIN = 'INVALID_PUBLIC_DOMAIN'
    DOMAIN_VALIDATION_DENIED = 'DOMAIN_VALIDATION_DENIED'
    CAA_ERROR = 'CAA_ERROR'
    PCA_LIMIT_EXCEEDED = 'PCA_LIMIT_EXCEEDED'
    PCA_INVALID_ARN = 'PCA_INVALID_ARN'
    PCA_INVALID_STATE = 'PCA_INVALID_STATE'
    PCA_REQUEST_FAILED = 'PCA_REQUEST_FAILED'
    PCA_NAME_CONSTRAINTS_VALIDATION = 'PCA_NAME_CONSTRAINTS_VALIDATION'
    PCA_RESOURCE_NOT_FOUND = 'PCA_RESOURCE_NOT_FOUND'
    PCA_INVALID_ARGS = 'PCA_INVALID_ARGS'
    PCA_INVALID_DURATION = 'PCA_INVALID_DURATION'
    PCA_ACCESS_DENIED = 'PCA_ACCESS_DENIED'
    SLR_NOT_FOUND = 'SLR_NOT_FOUND'
    OTHER = 'OTHER'

    def __init__(self):
        """FailureReason - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailureReason':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailureReason of this FailureReason.
        """
        return util.deserialize_model(dikt, cls)
