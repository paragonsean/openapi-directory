# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.put_account_configuration_request_expiry_events import PutAccountConfigurationRequestExpiryEvents
from openapi_server import util


class PutAccountConfigurationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiry_events: PutAccountConfigurationRequestExpiryEvents=None, idempotency_token: str=None):
        """PutAccountConfigurationRequest - a model defined in OpenAPI

        :param expiry_events: The expiry_events of this PutAccountConfigurationRequest.
        :param idempotency_token: The idempotency_token of this PutAccountConfigurationRequest.
        """
        self.openapi_types = {
            'expiry_events': PutAccountConfigurationRequestExpiryEvents,
            'idempotency_token': str
        }

        self.attribute_map = {
            'expiry_events': 'ExpiryEvents',
            'idempotency_token': 'IdempotencyToken'
        }

        self._expiry_events = expiry_events
        self._idempotency_token = idempotency_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutAccountConfigurationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutAccountConfigurationRequest of this PutAccountConfigurationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiry_events(self):
        """Gets the expiry_events of this PutAccountConfigurationRequest.


        :return: The expiry_events of this PutAccountConfigurationRequest.
        :rtype: PutAccountConfigurationRequestExpiryEvents
        """
        return self._expiry_events

    @expiry_events.setter
    def expiry_events(self, expiry_events):
        """Sets the expiry_events of this PutAccountConfigurationRequest.


        :param expiry_events: The expiry_events of this PutAccountConfigurationRequest.
        :type expiry_events: PutAccountConfigurationRequestExpiryEvents
        """

        self._expiry_events = expiry_events

    @property
    def idempotency_token(self):
        """Gets the idempotency_token of this PutAccountConfigurationRequest.


        :return: The idempotency_token of this PutAccountConfigurationRequest.
        :rtype: str
        """
        return self._idempotency_token

    @idempotency_token.setter
    def idempotency_token(self, idempotency_token):
        """Sets the idempotency_token of this PutAccountConfigurationRequest.


        :param idempotency_token: The idempotency_token of this PutAccountConfigurationRequest.
        :type idempotency_token: str
        """
        if idempotency_token is None:
            raise ValueError("Invalid value for `idempotency_token`, must not be `None`")

        self._idempotency_token = idempotency_token
