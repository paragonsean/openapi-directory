# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeyUsageName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DIGITAL_SIGNATURE = 'DIGITAL_SIGNATURE'
    NON_REPUDIATION = 'NON_REPUDIATION'
    KEY_ENCIPHERMENT = 'KEY_ENCIPHERMENT'
    DATA_ENCIPHERMENT = 'DATA_ENCIPHERMENT'
    KEY_AGREEMENT = 'KEY_AGREEMENT'
    CERTIFICATE_SIGNING = 'CERTIFICATE_SIGNING'
    CRL_SIGNING = 'CRL_SIGNING'
    ENCIPHER_ONLY = 'ENCIPHER_ONLY'
    DECIPHER_ONLY = 'DECIPHER_ONLY'
    ANY = 'ANY'
    CUSTOM = 'CUSTOM'

    def __init__(self):
        """KeyUsageName - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyUsageName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyUsageName of this KeyUsageName.
        """
        return util.deserialize_model(dikt, cls)
