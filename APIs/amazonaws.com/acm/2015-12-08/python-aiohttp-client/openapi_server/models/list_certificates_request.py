# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_certificates_request_includes import ListCertificatesRequestIncludes
from openapi_server.models.sort_by import SortBy
from openapi_server.models.sort_order import SortOrder
from openapi_server import util


class ListCertificatesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_statuses: List=None, includes: ListCertificatesRequestIncludes=None, next_token: str=None, max_items: int=None, sort_by: SortBy=None, sort_order: SortOrder=None):
        """ListCertificatesRequest - a model defined in OpenAPI

        :param certificate_statuses: The certificate_statuses of this ListCertificatesRequest.
        :param includes: The includes of this ListCertificatesRequest.
        :param next_token: The next_token of this ListCertificatesRequest.
        :param max_items: The max_items of this ListCertificatesRequest.
        :param sort_by: The sort_by of this ListCertificatesRequest.
        :param sort_order: The sort_order of this ListCertificatesRequest.
        """
        self.openapi_types = {
            'certificate_statuses': List,
            'includes': ListCertificatesRequestIncludes,
            'next_token': str,
            'max_items': int,
            'sort_by': SortBy,
            'sort_order': SortOrder
        }

        self.attribute_map = {
            'certificate_statuses': 'CertificateStatuses',
            'includes': 'Includes',
            'next_token': 'NextToken',
            'max_items': 'MaxItems',
            'sort_by': 'SortBy',
            'sort_order': 'SortOrder'
        }

        self._certificate_statuses = certificate_statuses
        self._includes = includes
        self._next_token = next_token
        self._max_items = max_items
        self._sort_by = sort_by
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCertificatesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCertificatesRequest of this ListCertificatesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_statuses(self):
        """Gets the certificate_statuses of this ListCertificatesRequest.


        :return: The certificate_statuses of this ListCertificatesRequest.
        :rtype: List
        """
        return self._certificate_statuses

    @certificate_statuses.setter
    def certificate_statuses(self, certificate_statuses):
        """Sets the certificate_statuses of this ListCertificatesRequest.


        :param certificate_statuses: The certificate_statuses of this ListCertificatesRequest.
        :type certificate_statuses: List
        """

        self._certificate_statuses = certificate_statuses

    @property
    def includes(self):
        """Gets the includes of this ListCertificatesRequest.


        :return: The includes of this ListCertificatesRequest.
        :rtype: ListCertificatesRequestIncludes
        """
        return self._includes

    @includes.setter
    def includes(self, includes):
        """Sets the includes of this ListCertificatesRequest.


        :param includes: The includes of this ListCertificatesRequest.
        :type includes: ListCertificatesRequestIncludes
        """

        self._includes = includes

    @property
    def next_token(self):
        """Gets the next_token of this ListCertificatesRequest.


        :return: The next_token of this ListCertificatesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListCertificatesRequest.


        :param next_token: The next_token of this ListCertificatesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_items(self):
        """Gets the max_items of this ListCertificatesRequest.


        :return: The max_items of this ListCertificatesRequest.
        :rtype: int
        """
        return self._max_items

    @max_items.setter
    def max_items(self, max_items):
        """Sets the max_items of this ListCertificatesRequest.


        :param max_items: The max_items of this ListCertificatesRequest.
        :type max_items: int
        """

        self._max_items = max_items

    @property
    def sort_by(self):
        """Gets the sort_by of this ListCertificatesRequest.


        :return: The sort_by of this ListCertificatesRequest.
        :rtype: SortBy
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this ListCertificatesRequest.


        :param sort_by: The sort_by of this ListCertificatesRequest.
        :type sort_by: SortBy
        """

        self._sort_by = sort_by

    @property
    def sort_order(self):
        """Gets the sort_order of this ListCertificatesRequest.


        :return: The sort_order of this ListCertificatesRequest.
        :rtype: SortOrder
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ListCertificatesRequest.


        :param sort_order: The sort_order of this ListCertificatesRequest.
        :type sort_order: SortOrder
        """

        self._sort_order = sort_order
