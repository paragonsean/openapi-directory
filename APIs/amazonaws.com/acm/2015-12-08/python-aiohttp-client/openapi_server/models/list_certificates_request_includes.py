# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListCertificatesRequestIncludes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extended_key_usage: List=None, key_usage: List=None, key_types: List=None):
        """ListCertificatesRequestIncludes - a model defined in OpenAPI

        :param extended_key_usage: The extended_key_usage of this ListCertificatesRequestIncludes.
        :param key_usage: The key_usage of this ListCertificatesRequestIncludes.
        :param key_types: The key_types of this ListCertificatesRequestIncludes.
        """
        self.openapi_types = {
            'extended_key_usage': List,
            'key_usage': List,
            'key_types': List
        }

        self.attribute_map = {
            'extended_key_usage': 'extendedKeyUsage',
            'key_usage': 'keyUsage',
            'key_types': 'keyTypes'
        }

        self._extended_key_usage = extended_key_usage
        self._key_usage = key_usage
        self._key_types = key_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCertificatesRequestIncludes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCertificatesRequest_Includes of this ListCertificatesRequestIncludes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extended_key_usage(self):
        """Gets the extended_key_usage of this ListCertificatesRequestIncludes.


        :return: The extended_key_usage of this ListCertificatesRequestIncludes.
        :rtype: List
        """
        return self._extended_key_usage

    @extended_key_usage.setter
    def extended_key_usage(self, extended_key_usage):
        """Sets the extended_key_usage of this ListCertificatesRequestIncludes.


        :param extended_key_usage: The extended_key_usage of this ListCertificatesRequestIncludes.
        :type extended_key_usage: List
        """

        self._extended_key_usage = extended_key_usage

    @property
    def key_usage(self):
        """Gets the key_usage of this ListCertificatesRequestIncludes.


        :return: The key_usage of this ListCertificatesRequestIncludes.
        :rtype: List
        """
        return self._key_usage

    @key_usage.setter
    def key_usage(self, key_usage):
        """Sets the key_usage of this ListCertificatesRequestIncludes.


        :param key_usage: The key_usage of this ListCertificatesRequestIncludes.
        :type key_usage: List
        """

        self._key_usage = key_usage

    @property
    def key_types(self):
        """Gets the key_types of this ListCertificatesRequestIncludes.


        :return: The key_types of this ListCertificatesRequestIncludes.
        :rtype: List
        """
        return self._key_types

    @key_types.setter
    def key_types(self, key_types):
        """Sets the key_types of this ListCertificatesRequestIncludes.


        :param key_types: The key_types of this ListCertificatesRequestIncludes.
        :type key_types: List
        """

        self._key_types = key_types
