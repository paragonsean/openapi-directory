/*
 * AWS Server Migration Service
 * <important> <p> <b>Product update</b> </p> <p>We recommend <a href=\"http://aws.amazon.com/application-migration-service\">Amazon Web Services Application Migration Service</a> (Amazon Web Services MGN) as the primary migration service for lift-and-shift migrations. If Amazon Web Services MGN is unavailable in a specific Amazon Web Services Region, you can use the Server Migration Service APIs through March 2023.</p> </important> <p>Server Migration Service (Server Migration Service) makes it easier and faster for you to migrate your on-premises workloads to Amazon Web Services. To learn more about Server Migration Service, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/server-migration-service/\">Server Migration Service product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/server-migration-service/latest/userguide/\">Server Migration Service User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-10-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AppLaunchConfigurationStatus;
import org.openapitools.client.model.AppLaunchStatus;
import org.openapitools.client.model.AppReplicationConfigurationStatus;
import org.openapitools.client.model.AppReplicationStatus;
import org.openapitools.client.model.AppStatus;
import org.openapitools.client.model.AppSummaryLaunchDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetAppResponseAppSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:47.146770-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetAppResponseAppSummary {
  public static final String SERIALIZED_NAME_APP_ID = "appId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_IMPORTED_APP_ID = "importedAppId";
  @SerializedName(SERIALIZED_NAME_IMPORTED_APP_ID)
  private String importedAppId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private AppStatus status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "statusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_REPLICATION_CONFIGURATION_STATUS = "replicationConfigurationStatus";
  @SerializedName(SERIALIZED_NAME_REPLICATION_CONFIGURATION_STATUS)
  private AppReplicationConfigurationStatus replicationConfigurationStatus;

  public static final String SERIALIZED_NAME_REPLICATION_STATUS = "replicationStatus";
  @SerializedName(SERIALIZED_NAME_REPLICATION_STATUS)
  private AppReplicationStatus replicationStatus;

  public static final String SERIALIZED_NAME_REPLICATION_STATUS_MESSAGE = "replicationStatusMessage";
  @SerializedName(SERIALIZED_NAME_REPLICATION_STATUS_MESSAGE)
  private String replicationStatusMessage;

  public static final String SERIALIZED_NAME_LATEST_REPLICATION_TIME = "latestReplicationTime";
  @SerializedName(SERIALIZED_NAME_LATEST_REPLICATION_TIME)
  private OffsetDateTime latestReplicationTime;

  public static final String SERIALIZED_NAME_LAUNCH_CONFIGURATION_STATUS = "launchConfigurationStatus";
  @SerializedName(SERIALIZED_NAME_LAUNCH_CONFIGURATION_STATUS)
  private AppLaunchConfigurationStatus launchConfigurationStatus;

  public static final String SERIALIZED_NAME_LAUNCH_STATUS = "launchStatus";
  @SerializedName(SERIALIZED_NAME_LAUNCH_STATUS)
  private AppLaunchStatus launchStatus;

  public static final String SERIALIZED_NAME_LAUNCH_STATUS_MESSAGE = "launchStatusMessage";
  @SerializedName(SERIALIZED_NAME_LAUNCH_STATUS_MESSAGE)
  private String launchStatusMessage;

  public static final String SERIALIZED_NAME_LAUNCH_DETAILS = "launchDetails";
  @SerializedName(SERIALIZED_NAME_LAUNCH_DETAILS)
  private AppSummaryLaunchDetails launchDetails;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "lastModified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  private OffsetDateTime lastModified;

  public static final String SERIALIZED_NAME_ROLE_NAME = "roleName";
  @SerializedName(SERIALIZED_NAME_ROLE_NAME)
  private String roleName;

  public static final String SERIALIZED_NAME_TOTAL_SERVER_GROUPS = "totalServerGroups";
  @SerializedName(SERIALIZED_NAME_TOTAL_SERVER_GROUPS)
  private Integer totalServerGroups;

  public static final String SERIALIZED_NAME_TOTAL_SERVERS = "totalServers";
  @SerializedName(SERIALIZED_NAME_TOTAL_SERVERS)
  private Integer totalServers;

  public GetAppResponseAppSummary() {
  }

  public GetAppResponseAppSummary appId(String appId) {
    this.appId = appId;
    return this;
  }

  /**
   * Get appId
   * @return appId
   */
  @javax.annotation.Nullable
  public String getAppId() {
    return appId;
  }

  public void setAppId(String appId) {
    this.appId = appId;
  }


  public GetAppResponseAppSummary importedAppId(String importedAppId) {
    this.importedAppId = importedAppId;
    return this;
  }

  /**
   * Get importedAppId
   * @return importedAppId
   */
  @javax.annotation.Nullable
  public String getImportedAppId() {
    return importedAppId;
  }

  public void setImportedAppId(String importedAppId) {
    this.importedAppId = importedAppId;
  }


  public GetAppResponseAppSummary name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetAppResponseAppSummary description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetAppResponseAppSummary status(AppStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public AppStatus getStatus() {
    return status;
  }

  public void setStatus(AppStatus status) {
    this.status = status;
  }


  public GetAppResponseAppSummary statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public GetAppResponseAppSummary replicationConfigurationStatus(AppReplicationConfigurationStatus replicationConfigurationStatus) {
    this.replicationConfigurationStatus = replicationConfigurationStatus;
    return this;
  }

  /**
   * Get replicationConfigurationStatus
   * @return replicationConfigurationStatus
   */
  @javax.annotation.Nullable
  public AppReplicationConfigurationStatus getReplicationConfigurationStatus() {
    return replicationConfigurationStatus;
  }

  public void setReplicationConfigurationStatus(AppReplicationConfigurationStatus replicationConfigurationStatus) {
    this.replicationConfigurationStatus = replicationConfigurationStatus;
  }


  public GetAppResponseAppSummary replicationStatus(AppReplicationStatus replicationStatus) {
    this.replicationStatus = replicationStatus;
    return this;
  }

  /**
   * Get replicationStatus
   * @return replicationStatus
   */
  @javax.annotation.Nullable
  public AppReplicationStatus getReplicationStatus() {
    return replicationStatus;
  }

  public void setReplicationStatus(AppReplicationStatus replicationStatus) {
    this.replicationStatus = replicationStatus;
  }


  public GetAppResponseAppSummary replicationStatusMessage(String replicationStatusMessage) {
    this.replicationStatusMessage = replicationStatusMessage;
    return this;
  }

  /**
   * Get replicationStatusMessage
   * @return replicationStatusMessage
   */
  @javax.annotation.Nullable
  public String getReplicationStatusMessage() {
    return replicationStatusMessage;
  }

  public void setReplicationStatusMessage(String replicationStatusMessage) {
    this.replicationStatusMessage = replicationStatusMessage;
  }


  public GetAppResponseAppSummary latestReplicationTime(OffsetDateTime latestReplicationTime) {
    this.latestReplicationTime = latestReplicationTime;
    return this;
  }

  /**
   * Get latestReplicationTime
   * @return latestReplicationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLatestReplicationTime() {
    return latestReplicationTime;
  }

  public void setLatestReplicationTime(OffsetDateTime latestReplicationTime) {
    this.latestReplicationTime = latestReplicationTime;
  }


  public GetAppResponseAppSummary launchConfigurationStatus(AppLaunchConfigurationStatus launchConfigurationStatus) {
    this.launchConfigurationStatus = launchConfigurationStatus;
    return this;
  }

  /**
   * Get launchConfigurationStatus
   * @return launchConfigurationStatus
   */
  @javax.annotation.Nullable
  public AppLaunchConfigurationStatus getLaunchConfigurationStatus() {
    return launchConfigurationStatus;
  }

  public void setLaunchConfigurationStatus(AppLaunchConfigurationStatus launchConfigurationStatus) {
    this.launchConfigurationStatus = launchConfigurationStatus;
  }


  public GetAppResponseAppSummary launchStatus(AppLaunchStatus launchStatus) {
    this.launchStatus = launchStatus;
    return this;
  }

  /**
   * Get launchStatus
   * @return launchStatus
   */
  @javax.annotation.Nullable
  public AppLaunchStatus getLaunchStatus() {
    return launchStatus;
  }

  public void setLaunchStatus(AppLaunchStatus launchStatus) {
    this.launchStatus = launchStatus;
  }


  public GetAppResponseAppSummary launchStatusMessage(String launchStatusMessage) {
    this.launchStatusMessage = launchStatusMessage;
    return this;
  }

  /**
   * Get launchStatusMessage
   * @return launchStatusMessage
   */
  @javax.annotation.Nullable
  public String getLaunchStatusMessage() {
    return launchStatusMessage;
  }

  public void setLaunchStatusMessage(String launchStatusMessage) {
    this.launchStatusMessage = launchStatusMessage;
  }


  public GetAppResponseAppSummary launchDetails(AppSummaryLaunchDetails launchDetails) {
    this.launchDetails = launchDetails;
    return this;
  }

  /**
   * Get launchDetails
   * @return launchDetails
   */
  @javax.annotation.Nullable
  public AppSummaryLaunchDetails getLaunchDetails() {
    return launchDetails;
  }

  public void setLaunchDetails(AppSummaryLaunchDetails launchDetails) {
    this.launchDetails = launchDetails;
  }


  public GetAppResponseAppSummary creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public GetAppResponseAppSummary lastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
    return this;
  }

  /**
   * Get lastModified
   * @return lastModified
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModified() {
    return lastModified;
  }

  public void setLastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
  }


  public GetAppResponseAppSummary roleName(String roleName) {
    this.roleName = roleName;
    return this;
  }

  /**
   * Get roleName
   * @return roleName
   */
  @javax.annotation.Nullable
  public String getRoleName() {
    return roleName;
  }

  public void setRoleName(String roleName) {
    this.roleName = roleName;
  }


  public GetAppResponseAppSummary totalServerGroups(Integer totalServerGroups) {
    this.totalServerGroups = totalServerGroups;
    return this;
  }

  /**
   * Get totalServerGroups
   * @return totalServerGroups
   */
  @javax.annotation.Nullable
  public Integer getTotalServerGroups() {
    return totalServerGroups;
  }

  public void setTotalServerGroups(Integer totalServerGroups) {
    this.totalServerGroups = totalServerGroups;
  }


  public GetAppResponseAppSummary totalServers(Integer totalServers) {
    this.totalServers = totalServers;
    return this;
  }

  /**
   * Get totalServers
   * @return totalServers
   */
  @javax.annotation.Nullable
  public Integer getTotalServers() {
    return totalServers;
  }

  public void setTotalServers(Integer totalServers) {
    this.totalServers = totalServers;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAppResponseAppSummary getAppResponseAppSummary = (GetAppResponseAppSummary) o;
    return Objects.equals(this.appId, getAppResponseAppSummary.appId) &&
        Objects.equals(this.importedAppId, getAppResponseAppSummary.importedAppId) &&
        Objects.equals(this.name, getAppResponseAppSummary.name) &&
        Objects.equals(this.description, getAppResponseAppSummary.description) &&
        Objects.equals(this.status, getAppResponseAppSummary.status) &&
        Objects.equals(this.statusMessage, getAppResponseAppSummary.statusMessage) &&
        Objects.equals(this.replicationConfigurationStatus, getAppResponseAppSummary.replicationConfigurationStatus) &&
        Objects.equals(this.replicationStatus, getAppResponseAppSummary.replicationStatus) &&
        Objects.equals(this.replicationStatusMessage, getAppResponseAppSummary.replicationStatusMessage) &&
        Objects.equals(this.latestReplicationTime, getAppResponseAppSummary.latestReplicationTime) &&
        Objects.equals(this.launchConfigurationStatus, getAppResponseAppSummary.launchConfigurationStatus) &&
        Objects.equals(this.launchStatus, getAppResponseAppSummary.launchStatus) &&
        Objects.equals(this.launchStatusMessage, getAppResponseAppSummary.launchStatusMessage) &&
        Objects.equals(this.launchDetails, getAppResponseAppSummary.launchDetails) &&
        Objects.equals(this.creationTime, getAppResponseAppSummary.creationTime) &&
        Objects.equals(this.lastModified, getAppResponseAppSummary.lastModified) &&
        Objects.equals(this.roleName, getAppResponseAppSummary.roleName) &&
        Objects.equals(this.totalServerGroups, getAppResponseAppSummary.totalServerGroups) &&
        Objects.equals(this.totalServers, getAppResponseAppSummary.totalServers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appId, importedAppId, name, description, status, statusMessage, replicationConfigurationStatus, replicationStatus, replicationStatusMessage, latestReplicationTime, launchConfigurationStatus, launchStatus, launchStatusMessage, launchDetails, creationTime, lastModified, roleName, totalServerGroups, totalServers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAppResponseAppSummary {\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    importedAppId: ").append(toIndentedString(importedAppId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    replicationConfigurationStatus: ").append(toIndentedString(replicationConfigurationStatus)).append("\n");
    sb.append("    replicationStatus: ").append(toIndentedString(replicationStatus)).append("\n");
    sb.append("    replicationStatusMessage: ").append(toIndentedString(replicationStatusMessage)).append("\n");
    sb.append("    latestReplicationTime: ").append(toIndentedString(latestReplicationTime)).append("\n");
    sb.append("    launchConfigurationStatus: ").append(toIndentedString(launchConfigurationStatus)).append("\n");
    sb.append("    launchStatus: ").append(toIndentedString(launchStatus)).append("\n");
    sb.append("    launchStatusMessage: ").append(toIndentedString(launchStatusMessage)).append("\n");
    sb.append("    launchDetails: ").append(toIndentedString(launchDetails)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    roleName: ").append(toIndentedString(roleName)).append("\n");
    sb.append("    totalServerGroups: ").append(toIndentedString(totalServerGroups)).append("\n");
    sb.append("    totalServers: ").append(toIndentedString(totalServers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appId");
    openapiFields.add("importedAppId");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("status");
    openapiFields.add("statusMessage");
    openapiFields.add("replicationConfigurationStatus");
    openapiFields.add("replicationStatus");
    openapiFields.add("replicationStatusMessage");
    openapiFields.add("latestReplicationTime");
    openapiFields.add("launchConfigurationStatus");
    openapiFields.add("launchStatus");
    openapiFields.add("launchStatusMessage");
    openapiFields.add("launchDetails");
    openapiFields.add("creationTime");
    openapiFields.add("lastModified");
    openapiFields.add("roleName");
    openapiFields.add("totalServerGroups");
    openapiFields.add("totalServers");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAppResponseAppSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAppResponseAppSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAppResponseAppSummary is not found in the empty JSON string", GetAppResponseAppSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAppResponseAppSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAppResponseAppSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appId`
      if (jsonObj.get("appId") != null && !jsonObj.get("appId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("appId"));
      }
      // validate the optional field `importedAppId`
      if (jsonObj.get("importedAppId") != null && !jsonObj.get("importedAppId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("importedAppId"));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        AppStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `statusMessage`
      if (jsonObj.get("statusMessage") != null && !jsonObj.get("statusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("statusMessage"));
      }
      // validate the optional field `replicationConfigurationStatus`
      if (jsonObj.get("replicationConfigurationStatus") != null && !jsonObj.get("replicationConfigurationStatus").isJsonNull()) {
        AppReplicationConfigurationStatus.validateJsonElement(jsonObj.get("replicationConfigurationStatus"));
      }
      // validate the optional field `replicationStatus`
      if (jsonObj.get("replicationStatus") != null && !jsonObj.get("replicationStatus").isJsonNull()) {
        AppReplicationStatus.validateJsonElement(jsonObj.get("replicationStatus"));
      }
      // validate the optional field `replicationStatusMessage`
      if (jsonObj.get("replicationStatusMessage") != null && !jsonObj.get("replicationStatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("replicationStatusMessage"));
      }
      // validate the optional field `latestReplicationTime`
      if (jsonObj.get("latestReplicationTime") != null && !jsonObj.get("latestReplicationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("latestReplicationTime"));
      }
      // validate the optional field `launchConfigurationStatus`
      if (jsonObj.get("launchConfigurationStatus") != null && !jsonObj.get("launchConfigurationStatus").isJsonNull()) {
        AppLaunchConfigurationStatus.validateJsonElement(jsonObj.get("launchConfigurationStatus"));
      }
      // validate the optional field `launchStatus`
      if (jsonObj.get("launchStatus") != null && !jsonObj.get("launchStatus").isJsonNull()) {
        AppLaunchStatus.validateJsonElement(jsonObj.get("launchStatus"));
      }
      // validate the optional field `launchStatusMessage`
      if (jsonObj.get("launchStatusMessage") != null && !jsonObj.get("launchStatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("launchStatusMessage"));
      }
      // validate the optional field `launchDetails`
      if (jsonObj.get("launchDetails") != null && !jsonObj.get("launchDetails").isJsonNull()) {
        AppSummaryLaunchDetails.validateJsonElement(jsonObj.get("launchDetails"));
      }
      // validate the optional field `creationTime`
      if (jsonObj.get("creationTime") != null && !jsonObj.get("creationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      }
      // validate the optional field `lastModified`
      if (jsonObj.get("lastModified") != null && !jsonObj.get("lastModified").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastModified"));
      }
      // validate the optional field `roleName`
      if (jsonObj.get("roleName") != null && !jsonObj.get("roleName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("roleName"));
      }
      // validate the optional field `totalServerGroups`
      if (jsonObj.get("totalServerGroups") != null && !jsonObj.get("totalServerGroups").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("totalServerGroups"));
      }
      // validate the optional field `totalServers`
      if (jsonObj.get("totalServers") != null && !jsonObj.get("totalServers").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("totalServers"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAppResponseAppSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAppResponseAppSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAppResponseAppSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAppResponseAppSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAppResponseAppSummary>() {
           @Override
           public void write(JsonWriter out, GetAppResponseAppSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAppResponseAppSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAppResponseAppSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAppResponseAppSummary
   * @throws IOException if the JSON string is invalid with respect to GetAppResponseAppSummary
   */
  public static GetAppResponseAppSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAppResponseAppSummary.class);
  }

  /**
   * Convert an instance of GetAppResponseAppSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

