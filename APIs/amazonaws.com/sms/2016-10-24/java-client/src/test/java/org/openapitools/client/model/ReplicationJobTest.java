/*
 * AWS Server Migration Service
 * <important> <p> <b>Product update</b> </p> <p>We recommend <a href=\"http://aws.amazon.com/application-migration-service\">Amazon Web Services Application Migration Service</a> (Amazon Web Services MGN) as the primary migration service for lift-and-shift migrations. If Amazon Web Services MGN is unavailable in a specific Amazon Web Services Region, you can use the Server Migration Service APIs through March 2023.</p> </important> <p>Server Migration Service (Server Migration Service) makes it easier and faster for you to migrate your on-premises workloads to Amazon Web Services. To learn more about Server Migration Service, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/server-migration-service/\">Server Migration Service product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/server-migration-service/latest/userguide/\">Server Migration Service User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-10-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LicenseType;
import org.openapitools.client.model.ReplicationJobState;
import org.openapitools.client.model.ReplicationJobVmServer;
import org.openapitools.client.model.ServerType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ReplicationJob
 */
public class ReplicationJobTest {
    private final ReplicationJob model = new ReplicationJob();

    /**
     * Model tests for ReplicationJob
     */
    @Test
    public void testReplicationJob() {
        // TODO: test ReplicationJob
    }

    /**
     * Test the property 'replicationJobId'
     */
    @Test
    public void replicationJobIdTest() {
        // TODO: test replicationJobId
    }

    /**
     * Test the property 'serverId'
     */
    @Test
    public void serverIdTest() {
        // TODO: test serverId
    }

    /**
     * Test the property 'serverType'
     */
    @Test
    public void serverTypeTest() {
        // TODO: test serverType
    }

    /**
     * Test the property 'vmServer'
     */
    @Test
    public void vmServerTest() {
        // TODO: test vmServer
    }

    /**
     * Test the property 'seedReplicationTime'
     */
    @Test
    public void seedReplicationTimeTest() {
        // TODO: test seedReplicationTime
    }

    /**
     * Test the property 'frequency'
     */
    @Test
    public void frequencyTest() {
        // TODO: test frequency
    }

    /**
     * Test the property 'runOnce'
     */
    @Test
    public void runOnceTest() {
        // TODO: test runOnce
    }

    /**
     * Test the property 'nextReplicationRunStartTime'
     */
    @Test
    public void nextReplicationRunStartTimeTest() {
        // TODO: test nextReplicationRunStartTime
    }

    /**
     * Test the property 'licenseType'
     */
    @Test
    public void licenseTypeTest() {
        // TODO: test licenseType
    }

    /**
     * Test the property 'roleName'
     */
    @Test
    public void roleNameTest() {
        // TODO: test roleName
    }

    /**
     * Test the property 'latestAmiId'
     */
    @Test
    public void latestAmiIdTest() {
        // TODO: test latestAmiId
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'numberOfRecentAmisToKeep'
     */
    @Test
    public void numberOfRecentAmisToKeepTest() {
        // TODO: test numberOfRecentAmisToKeep
    }

    /**
     * Test the property 'encrypted'
     */
    @Test
    public void encryptedTest() {
        // TODO: test encrypted
    }

    /**
     * Test the property 'kmsKeyId'
     */
    @Test
    public void kmsKeyIdTest() {
        // TODO: test kmsKeyId
    }

    /**
     * Test the property 'replicationRunList'
     */
    @Test
    public void replicationRunListTest() {
        // TODO: test replicationRunList
    }

}
