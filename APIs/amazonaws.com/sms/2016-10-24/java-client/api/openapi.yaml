openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<important> <p> <b>Product update</b> </p> <p>We recommend <a href=\"\
    http://aws.amazon.com/application-migration-service\">Amazon Web Services Application\
    \ Migration Service</a> (Amazon Web Services MGN) as the primary migration service\
    \ for lift-and-shift migrations. If Amazon Web Services MGN is unavailable in\
    \ a specific Amazon Web Services Region, you can use the Server Migration Service\
    \ APIs through March 2023.</p> </important> <p>Server Migration Service (Server\
    \ Migration Service) makes it easier and faster for you to migrate your on-premises\
    \ workloads to Amazon Web Services. To learn more about Server Migration Service,\
    \ see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/server-migration-service/\"\
    >Server Migration Service product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/server-migration-service/latest/userguide/\"\
    >Server Migration Service User Guide</a> </p> </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Server Migration Service
  version: 2016-10-24
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: sms
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sms-2016-10-24.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/sms/
servers:
- description: The SMS multi-region endpoint
  url: "http://sms.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The SMS multi-region endpoint
  url: "https://sms.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The SMS endpoint for China (Beijing) and China (Ningxia)
  url: "http://sms.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The SMS endpoint for China (Beijing) and China (Ningxia)
  url: "https://sms.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.CreateApp:
    post:
      description: Creates an application. An application consists of one or more
        server groups. Each server group contain one or more servers.
      operationId: CreateApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.CreateApp
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.CreateReplicationJob:
    post:
      description: Creates a replication job. The replication job schedules periodic
        replication runs to replicate your server to Amazon Web Services. Each replication
        run creates an Amazon Machine Image (AMI).
      operationId: CreateReplicationJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.CreateReplicationJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReplicationJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReplicationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCannotBeReplicatedException'
          description: ServerCannotBeReplicatedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationJobAlreadyExistsException'
          description: ReplicationJobAlreadyExistsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoConnectorsAvailableException'
          description: NoConnectorsAvailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporarilyUnavailableException'
          description: TemporarilyUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteApp:
    post:
      description: Deletes the specified application. Optionally deletes the launched
        stack associated with the application and all Server Migration Service replication
        jobs for servers in the application.
      operationId: DeleteApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.DeleteApp
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteAppLaunchConfiguration:
    post:
      description: Deletes the launch configuration for the specified application.
      operationId: DeleteAppLaunchConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.DeleteAppLaunchConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppLaunchConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppLaunchConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteAppReplicationConfiguration:
    post:
      description: Deletes the replication configuration for the specified application.
      operationId: DeleteAppReplicationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.DeleteAppReplicationConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppReplicationConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppReplicationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteAppValidationConfiguration:
    post:
      description: Deletes the validation configuration for the specified application.
      operationId: DeleteAppValidationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.DeleteAppValidationConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppValidationConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppValidationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteReplicationJob:
    post:
      description: "<p>Deletes the specified replication job.</p> <p>After you delete\
        \ a replication job, there are no further replication runs. Amazon Web Services\
        \ deletes the contents of the Amazon S3 bucket used to store Server Migration\
        \ Service artifacts. The AMIs created by the replication runs are not deleted.</p>"
      operationId: DeleteReplicationJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.DeleteReplicationJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReplicationJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReplicationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationJobNotFoundException'
          description: ReplicationJobNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteServerCatalog:
    post:
      description: Deletes all servers from your server catalog.
      operationId: DeleteServerCatalog
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.DeleteServerCatalog
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServerCatalogRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServerCatalogResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DisassociateConnector:
    post:
      description: "<p>Disassociates the specified connector from Server Migration\
        \ Service.</p> <p>After you disassociate a connector, it is no longer available\
        \ to support replication jobs.</p>"
      operationId: DisassociateConnector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.DisassociateConnector
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateConnectorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateConnectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GenerateChangeSet:
    post:
      description: Generates a target change set for a currently launched stack and
        writes it to an Amazon S3 object in the customer’s Amazon S3 bucket.
      operationId: GenerateChangeSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.GenerateChangeSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateChangeSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateChangeSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GenerateTemplate:
    post:
      description: Generates an CloudFormation template based on the current launch
        configuration and writes it to an Amazon S3 object in the customer’s Amazon
        S3 bucket.
      operationId: GenerateTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.GenerateTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTemplateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetApp:
    post:
      description: Retrieve information about the specified application.
      operationId: GetApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.GetApp
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppLaunchConfiguration:
    post:
      description: Retrieves the application launch configuration associated with
        the specified application.
      operationId: GetAppLaunchConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.GetAppLaunchConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppLaunchConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppLaunchConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppReplicationConfiguration:
    post:
      description: Retrieves the application replication configuration associated
        with the specified application.
      operationId: GetAppReplicationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.GetAppReplicationConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppReplicationConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppReplicationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppValidationConfiguration:
    post:
      description: Retrieves information about a configuration for validating an application.
      operationId: GetAppValidationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.GetAppValidationConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppValidationConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppValidationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppValidationOutput:
    post:
      description: Retrieves output from validating an application.
      operationId: GetAppValidationOutput
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.GetAppValidationOutput
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppValidationOutputRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppValidationOutputResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetConnectors:
    post:
      description: Describes the connectors registered with the Server Migration Service.
      operationId: GetConnectors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.GetConnectors
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConnectorsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetReplicationJobs:
    post:
      description: Describes the specified replication job or all of your replication
        jobs.
      operationId: GetReplicationJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.GetReplicationJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReplicationJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReplicationJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetReplicationRuns:
    post:
      description: Describes the replication runs for the specified replication job.
      operationId: GetReplicationRuns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.GetReplicationRuns
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReplicationRunsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReplicationRunsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetServers:
    post:
      description: "<p>Describes the servers in your server catalog.</p> <p>Before\
        \ you can describe your servers, you must import them using <a>ImportServerCatalog</a>.</p>"
      operationId: GetServers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.GetServers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.ImportAppCatalog:
    post:
      description: Allows application import from Migration Hub.
      operationId: ImportAppCatalog
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.ImportAppCatalog
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAppCatalogRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportAppCatalogResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.ImportServerCatalog:
    post:
      description: "<p>Gathers a complete list of on-premises servers. Connectors\
        \ must be installed and monitoring all servers to import.</p> <p>This call\
        \ returns immediately, but might take additional time to retrieve all the\
        \ servers.</p>"
      operationId: ImportServerCatalog
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.ImportServerCatalog
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportServerCatalogRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportServerCatalogResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoConnectorsAvailableException'
          description: NoConnectorsAvailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.LaunchApp:
    post:
      description: Launches the specified application as a stack in CloudFormation.
      operationId: LaunchApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.LaunchApp
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchAppResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.ListApps:
    post:
      description: Retrieves summaries for all applications.
      operationId: ListApps
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.ListApps
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAppsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.NotifyAppValidationOutput:
    post:
      description: Provides information to Server Migration Service about whether
        application validation is successful.
      operationId: NotifyAppValidationOutput
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.NotifyAppValidationOutput
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyAppValidationOutputRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyAppValidationOutputResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.PutAppLaunchConfiguration:
    post:
      description: Creates or updates the launch configuration for the specified application.
      operationId: PutAppLaunchConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.PutAppLaunchConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAppLaunchConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppLaunchConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.PutAppReplicationConfiguration:
    post:
      description: Creates or updates the replication configuration for the specified
        application.
      operationId: PutAppReplicationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.PutAppReplicationConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAppReplicationConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppReplicationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.PutAppValidationConfiguration:
    post:
      description: Creates or updates a validation configuration for the specified
        application.
      operationId: PutAppValidationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.PutAppValidationConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAppValidationConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppValidationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StartAppReplication:
    post:
      description: Starts replicating the specified application by creating replication
        jobs for each server in the application.
      operationId: StartAppReplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.StartAppReplication
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartAppReplicationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartAppReplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StartOnDemandAppReplication:
    post:
      description: Starts an on-demand replication run for the specified application.
      operationId: StartOnDemandAppReplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.StartOnDemandAppReplication
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartOnDemandAppReplicationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartOnDemandAppReplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StartOnDemandReplicationRun:
    post:
      description: <p>Starts an on-demand replication run for the specified replication
        job. This replication run starts immediately. This replication run is in addition
        to the ones already scheduled.</p> <p>There is a limit on the number of on-demand
        replications runs that you can request in a 24-hour period.</p>
      operationId: StartOnDemandReplicationRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.StartOnDemandReplicationRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartOnDemandReplicationRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartOnDemandReplicationRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationRunLimitExceededException'
          description: ReplicationRunLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryRunOperationException'
          description: DryRunOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StopAppReplication:
    post:
      description: Stops replicating the specified application by deleting the replication
        job for each server in the application.
      operationId: StopAppReplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.StopAppReplication
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopAppReplicationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopAppReplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.TerminateApp:
    post:
      description: Terminates the stack for the specified application.
      operationId: TerminateApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.TerminateApp
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateAppResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.UpdateApp:
    post:
      description: Updates the specified application.
      operationId: UpdateApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.UpdateApp
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.UpdateReplicationJob:
    post:
      description: Updates the specified settings for the specified replication job.
      operationId: UpdateReplicationJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSServerMigrationService_V2016_10_24.UpdateReplicationJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReplicationJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReplicationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
          description: MissingRequiredParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
          description: UnauthorizedOperationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCannotBeReplicatedException'
          description: ServerCannotBeReplicatedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationJobNotFoundException'
          description: ReplicationJobNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: InternalError
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporarilyUnavailableException'
          description: TemporarilyUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateAppResponse:
      example:
        serverGroups: ""
        appSummary:
          launchDetails:
            stackId: ""
            latestLaunchTime: ""
            stackName: ""
          launchStatus: ""
          launchStatusMessage: ""
          creationTime: ""
          replicationStatusMessage: ""
          description: ""
          replicationStatus: ""
          replicationConfigurationStatus: ""
          statusMessage: ""
          importedAppId: ""
          totalServers: ""
          appId: ""
          name: ""
          roleName: ""
          latestReplicationTime: ""
          launchConfigurationStatus: ""
          lastModified: ""
          totalServerGroups: ""
          status: ""
        tags: ""
      properties:
        appSummary:
          $ref: '#/components/schemas/CreateAppResponse_appSummary'
        serverGroups:
          allOf:
          - $ref: '#/components/schemas/ServerGroups'
          - description: The server groups included in the application.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags associated with the application.
      type: object
    CreateAppRequest:
      example:
        serverGroups: ""
        clientToken: ""
        name: ""
        roleName: ""
        description: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AppName'
          - description: The name of the new application.
        description:
          allOf:
          - $ref: '#/components/schemas/AppDescription'
          - description: The description of the new application
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleName'
          - description: The name of the service role in the customer's account to
              be used by Server Migration Service.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of application creation."
        serverGroups:
          allOf:
          - $ref: '#/components/schemas/ServerGroups'
          - description: The server groups to include in the application.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags to be associated with the application.
      title: CreateAppRequest
      type: object
    UnauthorizedOperationException: {}
    InvalidParameterException: {}
    MissingRequiredParameterException: {}
    InternalError: {}
    OperationNotPermittedException: {}
    CreateReplicationJobResponse:
      example:
        replicationJobId: ""
      properties:
        replicationJobId:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobId'
          - description: The unique identifier of the replication job.
      type: object
    CreateReplicationJobRequest:
      example:
        licenseType: ""
        encrypted: ""
        seedReplicationTime: ""
        roleName: ""
        description: ""
        kmsKeyId: ""
        serverId: ""
        runOnce: ""
        numberOfRecentAmisToKeep: ""
        frequency: ""
      properties:
        serverId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The ID of the server.
        seedReplicationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The seed replication time.
        frequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: "The time between consecutive replication runs, in hours."
        runOnce:
          allOf:
          - $ref: '#/components/schemas/RunOnce'
          - description: Indicates whether to run the replication job one time.
        licenseType:
          allOf:
          - $ref: '#/components/schemas/LicenseType'
          - description: The license type to be used for the AMI created by a successful
              replication run.
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleName'
          - description: The name of the IAM role to be used by the Server Migration
              Service.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the replication job.
        numberOfRecentAmisToKeep:
          allOf:
          - $ref: '#/components/schemas/NumberOfRecentAmisToKeep'
          - description: The maximum number of SMS-created AMIs to retain. The oldest
              is deleted after the maximum number is reached and a new AMI is created.
        encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          - description: Indicates whether the replication job produces encrypted
              AMIs.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: "<p>The ID of the KMS key for replication jobs that produce\
              \ encrypted AMIs. This value can be any of the following:</p> <ul> <li>\
              \ <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN\
              \ referring to the KMS key ID</p> </li> <li> <p>ARN referring to the\
              \ KMS key alias</p> </li> </ul> <p> If encrypted is <i>true</i> but\
              \ a KMS key ID is not specified, the customer's default KMS key for\
              \ Amazon EBS is used. </p>"
      required:
      - seedReplicationTime
      - serverId
      title: CreateReplicationJobRequest
      type: object
    ServerCannotBeReplicatedException: {}
    ReplicationJobAlreadyExistsException: {}
    NoConnectorsAvailableException: {}
    TemporarilyUnavailableException: {}
    DeleteAppResponse:
      properties: {}
      type: object
    DeleteAppRequest:
      example:
        forceStopAppReplication: ""
        appId: ""
        forceTerminateApp: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
        forceStopAppReplication:
          allOf:
          - $ref: '#/components/schemas/ForceStopAppReplication'
          - description: Indicates whether to stop all replication jobs corresponding
              to the servers in the application while deleting the application.
        forceTerminateApp:
          allOf:
          - $ref: '#/components/schemas/ForceTerminateApp'
          - description: Indicates whether to terminate the stack corresponding to
              the application while deleting the application.
      title: DeleteAppRequest
      type: object
    DeleteAppLaunchConfigurationResponse:
      properties: {}
      type: object
    DeleteAppLaunchConfigurationRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
      title: DeleteAppLaunchConfigurationRequest
      type: object
    DeleteAppReplicationConfigurationResponse:
      properties: {}
      type: object
    DeleteAppReplicationConfigurationRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
      title: DeleteAppReplicationConfigurationRequest
      type: object
    DeleteAppValidationConfigurationResponse:
      properties: {}
      type: object
    DeleteAppValidationConfigurationRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppIdWithValidation'
          - description: The ID of the application.
      required:
      - appId
      title: DeleteAppValidationConfigurationRequest
      type: object
    DeleteReplicationJobResponse:
      properties: {}
      type: object
    DeleteReplicationJobRequest:
      example:
        replicationJobId: ""
      properties:
        replicationJobId:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobId'
          - description: The ID of the replication job.
      required:
      - replicationJobId
      title: DeleteReplicationJobRequest
      type: object
    ReplicationJobNotFoundException: {}
    DeleteServerCatalogResponse:
      properties: {}
      type: object
    DeleteServerCatalogRequest:
      properties: {}
      title: DeleteServerCatalogRequest
      type: object
    DisassociateConnectorResponse:
      properties: {}
      type: object
    DisassociateConnectorRequest:
      example:
        connectorId: ""
      properties:
        connectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: The ID of the connector.
      required:
      - connectorId
      title: DisassociateConnectorRequest
      type: object
    GenerateChangeSetResponse:
      example:
        s3Location:
          bucket: ""
          key: ""
      properties:
        s3Location:
          $ref: '#/components/schemas/GenerateChangeSetResponse_s3Location'
      type: object
    GenerateChangeSetRequest:
      example:
        changesetFormat: ""
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application associated with the change set.
        changesetFormat:
          allOf:
          - $ref: '#/components/schemas/OutputFormat'
          - description: The format for the change set.
      title: GenerateChangeSetRequest
      type: object
    GenerateTemplateResponse:
      example:
        s3Location:
          bucket: ""
          key: ""
      properties:
        s3Location:
          $ref: '#/components/schemas/GenerateChangeSetResponse_s3Location'
      type: object
    GenerateTemplateRequest:
      example:
        appId: ""
        templateFormat: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application associated with the CloudFormation
              template.
        templateFormat:
          allOf:
          - $ref: '#/components/schemas/OutputFormat'
          - description: The format for generating the CloudFormation template.
      title: GenerateTemplateRequest
      type: object
    GetAppResponse:
      example:
        serverGroups: ""
        appSummary:
          launchDetails:
            stackId: ""
            latestLaunchTime: ""
            stackName: ""
          launchStatus: ""
          launchStatusMessage: ""
          creationTime: ""
          replicationStatusMessage: ""
          description: ""
          replicationStatus: ""
          replicationConfigurationStatus: ""
          statusMessage: ""
          importedAppId: ""
          totalServers: ""
          appId: ""
          name: ""
          roleName: ""
          latestReplicationTime: ""
          launchConfigurationStatus: ""
          lastModified: ""
          totalServerGroups: ""
          status: ""
        tags: ""
      properties:
        appSummary:
          $ref: '#/components/schemas/GetAppResponse_appSummary'
        serverGroups:
          allOf:
          - $ref: '#/components/schemas/ServerGroups'
          - description: The server groups that belong to the application.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags associated with the application.
      type: object
    GetAppRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
      title: GetAppRequest
      type: object
    GetAppLaunchConfigurationResponse:
      example:
        autoLaunch: ""
        appId: ""
        roleName: ""
        serverGroupLaunchConfigurations: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleName'
          - description: The name of the service role in the customer's account that
              CloudFormation uses to launch the application.
        autoLaunch:
          allOf:
          - $ref: '#/components/schemas/AutoLaunch'
          - description: Indicates whether the application is configured to launch
              automatically after replication is complete.
        serverGroupLaunchConfigurations:
          allOf:
          - $ref: '#/components/schemas/ServerGroupLaunchConfigurations'
          - description: The launch configurations for server groups in this application.
      type: object
    GetAppLaunchConfigurationRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
      title: GetAppLaunchConfigurationRequest
      type: object
    GetAppReplicationConfigurationResponse:
      example:
        serverGroupReplicationConfigurations: ""
      properties:
        serverGroupReplicationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ServerGroupReplicationConfigurations'
          - description: The replication configurations associated with server groups
              in this application.
      type: object
    GetAppReplicationConfigurationRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
      title: GetAppReplicationConfigurationRequest
      type: object
    GetAppValidationConfigurationResponse:
      example:
        serverGroupValidationConfigurations: ""
        appValidationConfigurations: ""
      properties:
        appValidationConfigurations:
          allOf:
          - $ref: '#/components/schemas/AppValidationConfigurations'
          - description: The configuration for application validation.
        serverGroupValidationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ServerGroupValidationConfigurations'
          - description: The configuration for instance validation.
      type: object
    GetAppValidationConfigurationRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppIdWithValidation'
          - description: The ID of the application.
      required:
      - appId
      title: GetAppValidationConfigurationRequest
      type: object
    GetAppValidationOutputResponse:
      example:
        validationOutputList: ""
      properties:
        validationOutputList:
          allOf:
          - $ref: '#/components/schemas/ValidationOutputList'
          - description: The validation output.
      type: object
    GetAppValidationOutputRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppIdWithValidation'
          - description: The ID of the application.
      required:
      - appId
      title: GetAppValidationOutputRequest
      type: object
    GetConnectorsResponse:
      example:
        nextToken: ""
        connectorList: ""
      properties:
        connectorList:
          allOf:
          - $ref: '#/components/schemas/ConnectorList'
          - description: Information about the registered connectors.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token required to retrieve the next set of results. This
              value is null when there are no more results to return.
      type: object
    GetConnectorsRequest:
      example:
        nextToken: ""
        maxResults: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return in a single call.\
              \ The default value is 50. To retrieve the remaining results, make another\
              \ call with the returned <code>NextToken</code> value."
      title: GetConnectorsRequest
      type: object
    GetReplicationJobsResponse:
      example:
        replicationJobList: ""
        nextToken: ""
      properties:
        replicationJobList:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobList'
          - description: Information about the replication jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token required to retrieve the next set of results. This
              value is null when there are no more results to return.
      type: object
    GetReplicationJobsRequest:
      example:
        nextToken: ""
        maxResults: ""
        replicationJobId: ""
      properties:
        replicationJobId:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobId'
          - description: The ID of the replication job.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return in a single call.\
              \ The default value is 50. To retrieve the remaining results, make another\
              \ call with the returned <code>NextToken</code> value."
      title: GetReplicationJobsRequest
      type: object
    GetReplicationRunsResponse:
      example:
        replicationJob:
          vmServer:
            vmServerAddress:
              vmManagerId: ""
              vmId: ""
            vmName: ""
            vmManagerName: ""
            vmManagerType: ""
            vmPath: ""
          nextReplicationRunStartTime: ""
          description: ""
          replicationRunList: ""
          serverId: ""
          runOnce: ""
          statusMessage: ""
          numberOfRecentAmisToKeep: ""
          replicationJobId: ""
          frequency: ""
          licenseType: ""
          encrypted: ""
          seedReplicationTime: ""
          serverType: ""
          roleName: ""
          state: ""
          kmsKeyId: ""
          latestAmiId: ""
        nextToken: ""
        replicationRunList: ""
      properties:
        replicationJob:
          $ref: '#/components/schemas/GetReplicationRunsResponse_replicationJob'
        replicationRunList:
          allOf:
          - $ref: '#/components/schemas/ReplicationRunList'
          - description: Information about the replication runs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token required to retrieve the next set of results. This
              value is null when there are no more results to return.
      type: object
    GetReplicationRunsRequest:
      example:
        nextToken: ""
        maxResults: ""
        replicationJobId: ""
      properties:
        replicationJobId:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobId'
          - description: The ID of the replication job.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return in a single call.\
              \ The default value is 50. To retrieve the remaining results, make another\
              \ call with the returned <code>NextToken</code> value."
      required:
      - replicationJobId
      title: GetReplicationRunsRequest
      type: object
    GetServersResponse:
      example:
        nextToken: ""
        serverList: ""
        serverCatalogStatus: ""
        lastModifiedOn: ""
      properties:
        lastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the server was last modified.
        serverCatalogStatus:
          allOf:
          - $ref: '#/components/schemas/ServerCatalogStatus'
          - description: The status of the server catalog.
        serverList:
          allOf:
          - $ref: '#/components/schemas/ServerList'
          - description: Information about the servers.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token required to retrieve the next set of results. This
              value is null when there are no more results to return.
      type: object
    GetServersRequest:
      example:
        nextToken: ""
        maxResults: ""
        vmServerAddressList: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return in a single call.\
              \ The default value is 50. To retrieve the remaining results, make another\
              \ call with the returned <code>NextToken</code> value."
        vmServerAddressList:
          allOf:
          - $ref: '#/components/schemas/VmServerAddressList'
          - description: The server addresses.
      title: GetServersRequest
      type: object
    ImportAppCatalogResponse:
      properties: {}
      type: object
    ImportAppCatalogRequest:
      example:
        roleName: ""
      properties:
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleName'
          - description: "The name of the service role. If you omit this parameter,\
              \ we create a service-linked role for Migration Hub in your account.\
              \ Otherwise, the role that you provide must have the <a href=\"https://docs.aws.amazon.com/migrationhub/latest/ug/new-customer-setup.html#sms-managed\"\
              >policy and trust policy</a> described in the <i>Migration Hub User\
              \ Guide</i>."
      title: ImportAppCatalogRequest
      type: object
    ImportServerCatalogResponse:
      properties: {}
      type: object
    ImportServerCatalogRequest:
      properties: {}
      title: ImportServerCatalogRequest
      type: object
    LaunchAppResponse:
      properties: {}
      type: object
    LaunchAppRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
      title: LaunchAppRequest
      type: object
    ListAppsResponse:
      example:
        nextToken: ""
        apps: ""
      properties:
        apps:
          allOf:
          - $ref: '#/components/schemas/Apps'
          - description: The application summaries.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token required to retrieve the next set of results. This
              value is null when there are no more results to return.
      type: object
    ListAppsRequest:
      example:
        appIds: ""
        nextToken: ""
        maxResults: ""
      properties:
        appIds:
          allOf:
          - $ref: '#/components/schemas/AppIds'
          - description: The unique application IDs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return in a single call.\
              \ The default value is 100. To retrieve the remaining results, make\
              \ another call with the returned <code>NextToken</code> value. "
      title: ListAppsRequest
      type: object
    NotifyAppValidationOutputResponse:
      properties: {}
      type: object
    NotifyAppValidationOutputRequest:
      example:
        notificationContext:
          validationId: ""
          statusMessage: ""
          status: ""
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppIdWithValidation'
          - description: The ID of the application.
        notificationContext:
          $ref: '#/components/schemas/NotifyAppValidationOutputRequest_notificationContext'
      required:
      - appId
      title: NotifyAppValidationOutputRequest
      type: object
    PutAppLaunchConfigurationResponse:
      properties: {}
      type: object
    PutAppLaunchConfigurationRequest:
      example:
        autoLaunch: ""
        appId: ""
        roleName: ""
        serverGroupLaunchConfigurations: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleName'
          - description: The name of service role in the customer's account that CloudFormation
              uses to launch the application.
        autoLaunch:
          allOf:
          - $ref: '#/components/schemas/AutoLaunch'
          - description: Indicates whether the application is configured to launch
              automatically after replication is complete.
        serverGroupLaunchConfigurations:
          allOf:
          - $ref: '#/components/schemas/ServerGroupLaunchConfigurations'
          - description: Information about the launch configurations for server groups
              in the application.
      title: PutAppLaunchConfigurationRequest
      type: object
    PutAppReplicationConfigurationResponse:
      properties: {}
      type: object
    PutAppReplicationConfigurationRequest:
      example:
        appId: ""
        serverGroupReplicationConfigurations: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
        serverGroupReplicationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ServerGroupReplicationConfigurations'
          - description: Information about the replication configurations for server
              groups in the application.
      title: PutAppReplicationConfigurationRequest
      type: object
    PutAppValidationConfigurationResponse:
      properties: {}
      type: object
    PutAppValidationConfigurationRequest:
      example:
        appId: ""
        serverGroupValidationConfigurations: ""
        appValidationConfigurations: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppIdWithValidation'
          - description: The ID of the application.
        appValidationConfigurations:
          allOf:
          - $ref: '#/components/schemas/AppValidationConfigurations'
          - description: The configuration for application validation.
        serverGroupValidationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ServerGroupValidationConfigurations'
          - description: The configuration for instance validation.
      required:
      - appId
      title: PutAppValidationConfigurationRequest
      type: object
    StartAppReplicationResponse:
      properties: {}
      type: object
    StartAppReplicationRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
      title: StartAppReplicationRequest
      type: object
    StartOnDemandAppReplicationResponse:
      properties: {}
      type: object
    StartOnDemandAppReplicationRequest:
      example:
        appId: ""
        description: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the replication run.
      required:
      - appId
      title: StartOnDemandAppReplicationRequest
      type: object
    StartOnDemandReplicationRunResponse:
      example:
        replicationRunId: ""
      properties:
        replicationRunId:
          allOf:
          - $ref: '#/components/schemas/ReplicationRunId'
          - description: The ID of the replication run.
      type: object
    StartOnDemandReplicationRunRequest:
      example:
        description: ""
        replicationJobId: ""
      properties:
        replicationJobId:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobId'
          - description: The ID of the replication job.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the replication run.
      required:
      - replicationJobId
      title: StartOnDemandReplicationRunRequest
      type: object
    ReplicationRunLimitExceededException: {}
    DryRunOperationException: {}
    StopAppReplicationResponse:
      properties: {}
      type: object
    StopAppReplicationRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
      title: StopAppReplicationRequest
      type: object
    TerminateAppResponse:
      properties: {}
      type: object
    TerminateAppRequest:
      example:
        appId: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
      title: TerminateAppRequest
      type: object
    UpdateAppResponse:
      example:
        serverGroups: ""
        appSummary:
          launchDetails:
            stackId: ""
            latestLaunchTime: ""
            stackName: ""
          launchStatus: ""
          launchStatusMessage: ""
          creationTime: ""
          replicationStatusMessage: ""
          description: ""
          replicationStatus: ""
          replicationConfigurationStatus: ""
          statusMessage: ""
          importedAppId: ""
          totalServers: ""
          appId: ""
          name: ""
          roleName: ""
          latestReplicationTime: ""
          launchConfigurationStatus: ""
          lastModified: ""
          totalServerGroups: ""
          status: ""
        tags: ""
      properties:
        appSummary:
          $ref: '#/components/schemas/CreateAppResponse_appSummary'
        serverGroups:
          allOf:
          - $ref: '#/components/schemas/ServerGroups'
          - description: The updated server groups in the application.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags associated with the application.
      type: object
    UpdateAppRequest:
      example:
        serverGroups: ""
        appId: ""
        name: ""
        roleName: ""
        description: ""
        tags: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the application.
        name:
          allOf:
          - $ref: '#/components/schemas/AppName'
          - description: The new name of the application.
        description:
          allOf:
          - $ref: '#/components/schemas/AppDescription'
          - description: The new description of the application.
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleName'
          - description: The name of the service role in the customer's account used
              by Server Migration Service.
        serverGroups:
          allOf:
          - $ref: '#/components/schemas/ServerGroups'
          - description: The server groups in the application to update.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags to associate with the application.
      title: UpdateAppRequest
      type: object
    UpdateReplicationJobResponse:
      properties: {}
      type: object
    UpdateReplicationJobRequest:
      example:
        licenseType: ""
        nextReplicationRunStartTime: ""
        encrypted: ""
        roleName: ""
        description: ""
        kmsKeyId: ""
        numberOfRecentAmisToKeep: ""
        replicationJobId: ""
        frequency: ""
      properties:
        replicationJobId:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobId'
          - description: The ID of the replication job.
        frequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: "The time between consecutive replication runs, in hours."
        nextReplicationRunStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start time of the next replication run.
        licenseType:
          allOf:
          - $ref: '#/components/schemas/LicenseType'
          - description: The license type to be used for the AMI created by a successful
              replication run.
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleName'
          - description: The name of the IAM role to be used by Server Migration Service.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the replication job.
        numberOfRecentAmisToKeep:
          allOf:
          - $ref: '#/components/schemas/NumberOfRecentAmisToKeep'
          - description: The maximum number of SMS-created AMIs to retain. The oldest
              is deleted after the maximum number is reached and a new AMI is created.
        encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          - description: "When true, the replication job produces encrypted AMIs.\
              \ For more information, <code>KmsKeyId</code>."
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: "<p>The ID of the KMS key for replication jobs that produce\
              \ encrypted AMIs. This value can be any of the following:</p> <ul> <li>\
              \ <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN\
              \ referring to the KMS key ID</p> </li> <li> <p>ARN referring to the\
              \ KMS key alias</p> </li> </ul> <p>If encrypted is enabled but a KMS\
              \ key ID is not specified, the customer's default KMS key for Amazon\
              \ EBS is used.</p>"
      required:
      - replicationJobId
      title: UpdateReplicationJobRequest
      type: object
    AmiId:
      type: string
    AppDescription:
      type: string
    AppId:
      type: string
    AppIdWithValidation:
      pattern: "^app-[0-9a-f]{17}$"
      type: string
    AppIds:
      items:
        $ref: '#/components/schemas/AppId'
      type: array
    AppLaunchConfigurationStatus:
      enum:
      - NOT_CONFIGURED
      - CONFIGURED
      type: string
    AppLaunchStatus:
      enum:
      - READY_FOR_CONFIGURATION
      - CONFIGURATION_IN_PROGRESS
      - CONFIGURATION_INVALID
      - READY_FOR_LAUNCH
      - VALIDATION_IN_PROGRESS
      - LAUNCH_PENDING
      - LAUNCH_IN_PROGRESS
      - LAUNCHED
      - PARTIALLY_LAUNCHED
      - DELTA_LAUNCH_IN_PROGRESS
      - DELTA_LAUNCH_FAILED
      - LAUNCH_FAILED
      - TERMINATE_IN_PROGRESS
      - TERMINATE_FAILED
      - TERMINATED
      type: string
    AppLaunchStatusMessage:
      type: string
    AppName:
      type: string
    AppReplicationConfigurationStatus:
      enum:
      - NOT_CONFIGURED
      - CONFIGURED
      type: string
    AppReplicationStatus:
      enum:
      - READY_FOR_CONFIGURATION
      - CONFIGURATION_IN_PROGRESS
      - CONFIGURATION_INVALID
      - READY_FOR_REPLICATION
      - VALIDATION_IN_PROGRESS
      - REPLICATION_PENDING
      - REPLICATION_IN_PROGRESS
      - REPLICATED
      - PARTIALLY_REPLICATED
      - DELTA_REPLICATION_IN_PROGRESS
      - DELTA_REPLICATED
      - DELTA_REPLICATION_FAILED
      - REPLICATION_FAILED
      - REPLICATION_STOPPING
      - REPLICATION_STOP_FAILED
      - REPLICATION_STOPPED
      type: string
    AppReplicationStatusMessage:
      type: string
    AppStatus:
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - DELETED
      - DELETE_FAILED
      type: string
    AppStatusMessage:
      type: string
    ImportedAppId:
      type: string
    Timestamp:
      format: date-time
      type: string
    LaunchDetails:
      description: Details about the latest launch of an application.
      properties:
        latestLaunchTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The latest time that this application was launched successfully.
        stackName:
          allOf:
          - $ref: '#/components/schemas/StackName'
          - description: The name of the latest stack launched for this application.
        stackId:
          allOf:
          - $ref: '#/components/schemas/StackId'
          - description: The ID of the latest stack launched for this application.
      type: object
    RoleName:
      type: string
    TotalServerGroups:
      type: integer
    TotalServers:
      type: integer
    AppSummary:
      description: Information about the application.
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The unique ID of the application.
        importedAppId:
          allOf:
          - $ref: '#/components/schemas/ImportedAppId'
          - description: The ID of the application.
        name:
          allOf:
          - $ref: '#/components/schemas/AppName'
          - description: The name of the application.
        description:
          allOf:
          - $ref: '#/components/schemas/AppDescription'
          - description: The description of the application.
        status:
          allOf:
          - $ref: '#/components/schemas/AppStatus'
          - description: Status of the application.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/AppStatusMessage'
          - description: A message related to the status of the application
        replicationConfigurationStatus:
          allOf:
          - $ref: '#/components/schemas/AppReplicationConfigurationStatus'
          - description: Status of the replication configuration.
        replicationStatus:
          allOf:
          - $ref: '#/components/schemas/AppReplicationStatus'
          - description: The replication status of the application.
        replicationStatusMessage:
          allOf:
          - $ref: '#/components/schemas/AppReplicationStatusMessage'
          - description: A message related to the replication status of the application.
        latestReplicationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of the application's most recent successful
              replication.
        launchConfigurationStatus:
          allOf:
          - $ref: '#/components/schemas/AppLaunchConfigurationStatus'
          - description: Status of the launch configuration.
        launchStatus:
          allOf:
          - $ref: '#/components/schemas/AppLaunchStatus'
          - description: The launch status of the application.
        launchStatusMessage:
          allOf:
          - $ref: '#/components/schemas/AppLaunchStatusMessage'
          - description: A message related to the launch status of the application.
        launchDetails:
          $ref: '#/components/schemas/AppSummary_launchDetails'
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The creation time of the application.
        lastModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last modified time of the application.
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleName'
          - description: The name of the service role in the customer's account used
              by Server Migration Service.
        totalServerGroups:
          allOf:
          - $ref: '#/components/schemas/TotalServerGroups'
          - description: The number of server groups present in the application.
        totalServers:
          allOf:
          - $ref: '#/components/schemas/TotalServers'
          - description: The number of servers present in the application.
      type: object
    ValidationId:
      pattern: "^val-[0-9a-f]{17}$"
      type: string
    NonEmptyStringWithMaxLen255:
      maxLength: 255
      minLength: 1
      pattern: "^[\\S]+$"
      type: string
    AppValidationStrategy:
      enum:
      - SSM
      type: string
    SSMValidationParameters:
      description: Contains validation parameters.
      properties:
        source:
          $ref: '#/components/schemas/SSMValidationParameters_source'
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: "The ID of the instance. The instance must have the following\
              \ tag: UserForSMSApplicationValidation=true."
        scriptType:
          allOf:
          - $ref: '#/components/schemas/ScriptType'
          - description: The type of validation script.
        command:
          allOf:
          - $ref: '#/components/schemas/Command'
          - description: The command to run the validation script.
        executionTimeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/ExecutionTimeoutSeconds'
          - description: "The timeout interval, in seconds."
        outputS3BucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The name of the S3 bucket for output.
      type: object
    AppValidationConfiguration:
      description: Configuration for validating an application.
      properties:
        validationId:
          allOf:
          - $ref: '#/components/schemas/ValidationId'
          - description: The ID of the validation.
        name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringWithMaxLen255'
          - description: The name of the configuration.
        appValidationStrategy:
          allOf:
          - $ref: '#/components/schemas/AppValidationStrategy'
          - description: The validation strategy.
        ssmValidationParameters:
          $ref: '#/components/schemas/AppValidationConfiguration_ssmValidationParameters'
      type: object
    AppValidationConfigurations:
      items:
        $ref: '#/components/schemas/AppValidationConfiguration'
      type: array
    SSMOutput:
      description: Contains the location of validation output.
      properties:
        s3Location:
          $ref: '#/components/schemas/S3Location'
      type: object
    AppValidationOutput:
      description: Output from validating an application.
      properties:
        ssmOutput:
          $ref: '#/components/schemas/AppValidationOutput_ssmOutput'
      type: object
    Apps:
      items:
        $ref: '#/components/schemas/AppSummary'
      type: array
    AssociatePublicIpAddress:
      type: boolean
    AutoLaunch:
      type: boolean
    BucketName:
      type: string
    ClientToken:
      type: string
    Command:
      maxLength: 64000
      minLength: 1
      type: string
    ConnectorId:
      type: string
    ConnectorVersion:
      type: string
    ConnectorStatus:
      enum:
      - HEALTHY
      - UNHEALTHY
      type: string
    ConnectorCapabilityList:
      items:
        $ref: '#/components/schemas/ConnectorCapability'
      type: array
    VmManagerName:
      type: string
    VmManagerType:
      enum:
      - VSPHERE
      - SCVMM
      - HYPERV-MANAGER
      type: string
    VmManagerId:
      type: string
    IpAddress:
      type: string
    MacAddress:
      type: string
    Connector:
      description: Represents a connector.
      properties:
        connectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: The ID of the connector.
        version:
          allOf:
          - $ref: '#/components/schemas/ConnectorVersion'
          - description: The connector version.
        status:
          allOf:
          - $ref: '#/components/schemas/ConnectorStatus'
          - description: The status of the connector.
        capabilityList:
          allOf:
          - $ref: '#/components/schemas/ConnectorCapabilityList'
          - description: The capabilities of the connector.
        vmManagerName:
          allOf:
          - $ref: '#/components/schemas/VmManagerName'
          - description: The name of the VM manager.
        vmManagerType:
          allOf:
          - $ref: '#/components/schemas/VmManagerType'
          - description: The VM management product.
        vmManagerId:
          allOf:
          - $ref: '#/components/schemas/VmManagerId'
          - description: The ID of the VM manager.
        ipAddress:
          allOf:
          - $ref: '#/components/schemas/IpAddress'
          - description: The IP address of the connector.
        macAddress:
          allOf:
          - $ref: '#/components/schemas/MacAddress'
          - description: The MAC address of the connector.
        associatedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the connector was associated.
      type: object
    ConnectorCapability:
      enum:
      - VSPHERE
      - SCVMM
      - HYPERV-MANAGER
      - SNAPSHOT_BATCHING
      - SMS_OPTIMIZED
      type: string
    ConnectorList:
      items:
        $ref: '#/components/schemas/Connector'
      type: array
    ServerGroups:
      items:
        $ref: '#/components/schemas/ServerGroup'
      type: array
    Tags:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    ServerId:
      type: string
    Frequency:
      type: integer
    RunOnce:
      type: boolean
    LicenseType:
      enum:
      - AWS
      - BYOL
      type: string
    Description:
      type: string
    NumberOfRecentAmisToKeep:
      type: integer
    Encrypted:
      type: boolean
    KmsKeyId:
      type: string
    ReplicationJobId:
      type: string
    ForceStopAppReplication:
      type: boolean
    ForceTerminateApp:
      type: boolean
    EC2KeyName:
      type: string
    ExecutionTimeoutSeconds:
      maximum: 28800
      minimum: 60
      type: integer
    OutputFormat:
      enum:
      - JSON
      - YAML
      type: string
    S3Location:
      description: Location of an Amazon S3 object.
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The Amazon S3 bucket name.
        key:
          allOf:
          - $ref: '#/components/schemas/S3KeyName'
          - description: The Amazon S3 bucket key.
      type: object
    ServerGroupLaunchConfigurations:
      items:
        $ref: '#/components/schemas/ServerGroupLaunchConfiguration'
      type: array
    ServerGroupReplicationConfigurations:
      items:
        $ref: '#/components/schemas/ServerGroupReplicationConfiguration'
      type: array
    ServerGroupValidationConfigurations:
      items:
        $ref: '#/components/schemas/ServerGroupValidationConfiguration'
      type: array
    ValidationOutputList:
      items:
        $ref: '#/components/schemas/ValidationOutput'
      type: array
    NextToken:
      type: string
    MaxResults:
      type: integer
    ReplicationJobList:
      items:
        $ref: '#/components/schemas/ReplicationJob'
      type: array
    ReplicationJob:
      description: Represents a replication job.
      properties:
        replicationJobId:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobId'
          - description: The ID of the replication job.
        serverId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The ID of the server.
        serverType:
          allOf:
          - $ref: '#/components/schemas/ServerType'
          - description: The type of server.
        vmServer:
          $ref: '#/components/schemas/ReplicationJob_vmServer'
        seedReplicationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The seed replication time.
        frequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: "The time between consecutive replication runs, in hours."
        runOnce:
          allOf:
          - $ref: '#/components/schemas/RunOnce'
          - description: Indicates whether to run the replication job one time.
        nextReplicationRunStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start time of the next replication run.
        licenseType:
          allOf:
          - $ref: '#/components/schemas/LicenseType'
          - description: The license type to be used for the AMI created by a successful
              replication run.
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleName'
          - description: The name of the IAM role to be used by Server Migration Service.
        latestAmiId:
          allOf:
          - $ref: '#/components/schemas/AmiId'
          - description: The ID of the latest Amazon Machine Image (AMI).
        state:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobState'
          - description: The state of the replication job.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobStatusMessage'
          - description: The description of the current status of the replication
              job.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the replication job.
        numberOfRecentAmisToKeep:
          allOf:
          - $ref: '#/components/schemas/NumberOfRecentAmisToKeep'
          - description: "The number of recent AMIs to keep in the customer's account\
              \ for a replication job. By default, the value is set to zero, meaning\
              \ that all AMIs are kept."
        encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          - description: Indicates whether the replication job should produce encrypted
              AMIs.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: "<p>The ID of the KMS key for replication jobs that produce\
              \ encrypted AMIs. This value can be any of the following: </p> <ul>\
              \ <li> <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li>\
              \ <p>ARN referring to the KMS key ID</p> </li> <li> <p>ARN referring\
              \ to the KMS key alias</p> </li> </ul> <p>If encrypted is enabled but\
              \ a KMS key ID is not specified, the customer's default KMS key for\
              \ Amazon EBS is used.</p>"
        replicationRunList:
          allOf:
          - $ref: '#/components/schemas/ReplicationRunList'
          - description: Information about the replication runs.
      type: object
    ReplicationRunList:
      items:
        $ref: '#/components/schemas/ReplicationRun'
      type: array
    VmServerAddressList:
      items:
        $ref: '#/components/schemas/VmServerAddress'
      type: array
    ServerCatalogStatus:
      enum:
      - NOT_IMPORTED
      - IMPORTING
      - AVAILABLE
      - DELETED
      - EXPIRED
      type: string
    ServerList:
      items:
        $ref: '#/components/schemas/Server'
      type: array
    InstanceId:
      pattern: "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)"
      type: string
    InstanceType:
      type: string
    StackName:
      type: string
    StackId:
      type: string
    LaunchOrder:
      type: integer
    LogicalId:
      type: string
    ValidationStatus:
      enum:
      - READY_FOR_VALIDATION
      - PENDING
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      type: string
    ValidationStatusMessage:
      maxLength: 2500
      type: string
    NotificationContext:
      description: Contains the status of validating an application.
      properties:
        validationId:
          allOf:
          - $ref: '#/components/schemas/ValidationId'
          - description: The ID of the validation.
        status:
          allOf:
          - $ref: '#/components/schemas/ValidationStatus'
          - description: The status of the validation.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/ValidationStatusMessage'
          - description: The status message.
      type: object
    ServerType:
      enum:
      - VIRTUAL_MACHINE
      type: string
    VmServer:
      description: Represents a VM server.
      properties:
        vmServerAddress:
          $ref: '#/components/schemas/VmServer_vmServerAddress'
        vmName:
          allOf:
          - $ref: '#/components/schemas/VmName'
          - description: The name of the VM.
        vmManagerName:
          allOf:
          - $ref: '#/components/schemas/VmManagerName'
          - description: The name of the VM manager.
        vmManagerType:
          allOf:
          - $ref: '#/components/schemas/VmManagerType'
          - description: The type of VM management product.
        vmPath:
          allOf:
          - $ref: '#/components/schemas/VmPath'
          - description: The VM folder path in the vCenter Server virtual machine
              inventory tree.
      type: object
    ReplicationJobState:
      enum:
      - PENDING
      - ACTIVE
      - FAILED
      - DELETING
      - DELETED
      - COMPLETED
      - PAUSED_ON_FAILURE
      - FAILING
      type: string
    ReplicationJobStatusMessage:
      type: string
    ReplicationJobTerminated:
      type: boolean
    ReplicationRunId:
      type: string
    ReplicationRunState:
      enum:
      - PENDING
      - MISSED
      - ACTIVE
      - FAILED
      - COMPLETED
      - DELETING
      - DELETED
      type: string
    ReplicationRunType:
      enum:
      - ON_DEMAND
      - AUTOMATIC
      type: string
    ReplicationRunStageDetails:
      description: Details of the current stage of a replication run.
      properties:
        stage:
          allOf:
          - $ref: '#/components/schemas/ReplicationRunStage'
          - description: The current stage of a replication run.
        stageProgress:
          allOf:
          - $ref: '#/components/schemas/ReplicationRunStageProgress'
          - description: The progress of the current stage of a replication run.
      type: object
    ReplicationRunStatusMessage:
      type: string
    ReplicationRun:
      description: Represents a replication run.
      properties:
        replicationRunId:
          allOf:
          - $ref: '#/components/schemas/ReplicationRunId'
          - description: The ID of the replication run.
        state:
          allOf:
          - $ref: '#/components/schemas/ReplicationRunState'
          - description: The state of the replication run.
        type:
          allOf:
          - $ref: '#/components/schemas/ReplicationRunType'
          - description: The type of replication run.
        stageDetails:
          $ref: '#/components/schemas/ReplicationRun_stageDetails'
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/ReplicationRunStatusMessage'
          - description: The description of the current status of the replication
              job.
        amiId:
          allOf:
          - $ref: '#/components/schemas/AmiId'
          - description: The ID of the Amazon Machine Image (AMI) from the replication
              run.
        scheduledStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start time of the next replication run.
        completedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The completion time of the last replication run.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the replication run.
        encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          - description: Indicates whether the replication run should produce an encrypted
              AMI.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: "<p>The ID of the KMS key for replication jobs that produce\
              \ encrypted AMIs. This value can be any of the following:</p> <ul> <li>\
              \ <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN\
              \ referring to the KMS key ID</p> </li> <li> <p>ARN referring to the\
              \ KMS key alias</p> </li> </ul> <p> If encrypted is <i>true</i> but\
              \ a KMS key ID is not specified, the customer's default KMS key for\
              \ Amazon EBS is used. </p>"
      type: object
    ReplicationRunStage:
      type: string
    ReplicationRunStageProgress:
      type: string
    S3BucketName:
      maxLength: 63
      minLength: 3
      type: string
    S3KeyName:
      maxLength: 1024
      type: string
    Source:
      description: Contains the location of a validation script.
      properties:
        s3Location:
          $ref: '#/components/schemas/S3Location'
      type: object
    ScriptType:
      enum:
      - SHELL_SCRIPT
      - POWERSHELL_SCRIPT
      type: string
    SecurityGroup:
      type: string
    Server:
      description: Represents a server.
      properties:
        serverId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The ID of the server.
        serverType:
          allOf:
          - $ref: '#/components/schemas/ServerType'
          - description: The type of server.
        vmServer:
          $ref: '#/components/schemas/ReplicationJob_vmServer'
        replicationJobId:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobId'
          - description: The ID of the replication job.
        replicationJobTerminated:
          allOf:
          - $ref: '#/components/schemas/ReplicationJobTerminated'
          - description: Indicates whether the replication job is deleted or failed.
      type: object
    ServerGroupId:
      type: string
    ServerGroupName:
      type: string
    ServerGroup:
      description: Logical grouping of servers.
      properties:
        serverGroupId:
          allOf:
          - $ref: '#/components/schemas/ServerGroupId'
          - description: The ID of a server group.
        name:
          allOf:
          - $ref: '#/components/schemas/ServerGroupName'
          - description: The name of a server group.
        serverList:
          allOf:
          - $ref: '#/components/schemas/ServerList'
          - description: The servers that belong to a server group.
      type: object
    ServerLaunchConfigurations:
      items:
        $ref: '#/components/schemas/ServerLaunchConfiguration'
      type: array
    ServerGroupLaunchConfiguration:
      description: Launch configuration for a server group.
      properties:
        serverGroupId:
          allOf:
          - $ref: '#/components/schemas/ServerGroupId'
          - description: The ID of the server group with which the launch configuration
              is associated.
        launchOrder:
          allOf:
          - $ref: '#/components/schemas/LaunchOrder'
          - description: The launch order of servers in the server group.
        serverLaunchConfigurations:
          allOf:
          - $ref: '#/components/schemas/ServerLaunchConfigurations'
          - description: The launch configuration for servers in the server group.
      type: object
    ServerReplicationConfigurations:
      items:
        $ref: '#/components/schemas/ServerReplicationConfiguration'
      type: array
    ServerGroupReplicationConfiguration:
      description: Replication configuration for a server group.
      properties:
        serverGroupId:
          allOf:
          - $ref: '#/components/schemas/ServerGroupId'
          - description: The ID of the server group with which this replication configuration
              is associated.
        serverReplicationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ServerReplicationConfigurations'
          - description: The replication configuration for servers in the server group.
      type: object
    ServerValidationConfigurations:
      items:
        $ref: '#/components/schemas/ServerValidationConfiguration'
      type: array
    ServerGroupValidationConfiguration:
      description: Configuration for validating an instance.
      properties:
        serverGroupId:
          allOf:
          - $ref: '#/components/schemas/ServerGroupId'
          - description: The ID of the server group.
        serverValidationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ServerValidationConfigurations'
          - description: The validation configuration.
      type: object
    VPC:
      type: string
    Subnet:
      type: string
    UserData:
      description: A script that runs on first launch of an Amazon EC2 instance. Used
        for configuring the server during launch.
      properties:
        s3Location:
          $ref: '#/components/schemas/UserData_s3Location'
      type: object
    ServerLaunchConfiguration:
      description: Launch configuration for a server.
      properties:
        server:
          $ref: '#/components/schemas/ServerLaunchConfiguration_server'
        logicalId:
          allOf:
          - $ref: '#/components/schemas/LogicalId'
          - description: The logical ID of the server in the CloudFormation template.
        vpc:
          allOf:
          - $ref: '#/components/schemas/VPC'
          - description: The ID of the VPC into which the server should be launched.
        subnet:
          allOf:
          - $ref: '#/components/schemas/Subnet'
          - description: The ID of the subnet the server should be launched into.
        securityGroup:
          allOf:
          - $ref: '#/components/schemas/SecurityGroup'
          - description: The ID of the security group that applies to the launched
              server.
        ec2KeyName:
          allOf:
          - $ref: '#/components/schemas/EC2KeyName'
          - description: The name of the Amazon EC2 SSH key to be used for connecting
              to the launched server.
        userData:
          $ref: '#/components/schemas/ServerLaunchConfiguration_userData'
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          - description: The instance type to use when launching the server.
        associatePublicIpAddress:
          allOf:
          - $ref: '#/components/schemas/AssociatePublicIpAddress'
          - description: Indicates whether a publicly accessible IP address is created
              when launching the server.
        iamInstanceProfileName:
          allOf:
          - $ref: '#/components/schemas/RoleName'
          - description: The name of the IAM instance profile.
        configureScript:
          $ref: '#/components/schemas/S3Location'
        configureScriptType:
          allOf:
          - $ref: '#/components/schemas/ScriptType'
          - description: The type of configuration script.
      type: object
    ServerReplicationParameters:
      description: The replication parameters for replicating a server.
      properties:
        seedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The seed time for creating a replication job for the server.
        frequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: The frequency of creating replication jobs for the server.
        runOnce:
          allOf:
          - $ref: '#/components/schemas/RunOnce'
          - description: Indicates whether to run the replication job one time.
        licenseType:
          allOf:
          - $ref: '#/components/schemas/LicenseType'
          - description: The license type for creating a replication job for the server.
        numberOfRecentAmisToKeep:
          allOf:
          - $ref: '#/components/schemas/NumberOfRecentAmisToKeep'
          - description: The number of recent AMIs to keep when creating a replication
              job for this server.
        encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          - description: Indicates whether the replication job produces encrypted
              AMIs.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: "<p>The ID of the KMS key for replication jobs that produce\
              \ encrypted AMIs. This value can be any of the following:</p> <ul> <li>\
              \ <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN\
              \ referring to the KMS key ID</p> </li> <li> <p>ARN referring to the\
              \ KMS key alias</p> </li> </ul> <p>If encrypted is enabled but a KMS\
              \ key ID is not specified, the customer's default KMS key for Amazon\
              \ EBS is used.</p>"
      type: object
    ServerReplicationConfiguration:
      description: Replication configuration of a server.
      properties:
        server:
          $ref: '#/components/schemas/ServerReplicationConfiguration_server'
        serverReplicationParameters:
          $ref: '#/components/schemas/ServerReplicationConfiguration_serverReplicationParameters'
      type: object
    ServerValidationStrategy:
      enum:
      - USERDATA
      type: string
    UserDataValidationParameters:
      description: Contains validation parameters.
      properties:
        source:
          $ref: '#/components/schemas/SSMValidationParameters_source'
        scriptType:
          allOf:
          - $ref: '#/components/schemas/ScriptType'
          - description: The type of validation script.
      type: object
    ServerValidationConfiguration:
      description: Configuration for validating an instance.
      properties:
        server:
          $ref: '#/components/schemas/Server'
        validationId:
          allOf:
          - $ref: '#/components/schemas/ValidationId'
          - description: The ID of the validation.
        name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringWithMaxLen255'
          - description: The name of the configuration.
        serverValidationStrategy:
          allOf:
          - $ref: '#/components/schemas/ServerValidationStrategy'
          - description: The validation strategy.
        userDataValidationParameters:
          $ref: '#/components/schemas/ServerValidationConfiguration_userDataValidationParameters'
      type: object
    ServerValidationOutput:
      description: Contains output from validating an instance.
      properties:
        server:
          $ref: '#/components/schemas/Server'
      type: object
    TagKey:
      type: string
    TagValue:
      type: string
    Tag:
      description: Key/value pair that can be assigned to an application.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The tag key.
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The tag value.
      type: object
    ValidationOutput:
      description: Contains validation output.
      properties:
        validationId:
          allOf:
          - $ref: '#/components/schemas/ValidationId'
          - description: The ID of the validation.
        name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringWithMaxLen255'
          - description: The name of the validation.
        status:
          allOf:
          - $ref: '#/components/schemas/ValidationStatus'
          - description: The status of the validation.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/ValidationStatusMessage'
          - description: The status message.
        latestValidationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The latest time that the validation was performed.
        appValidationOutput:
          $ref: '#/components/schemas/ValidationOutput_appValidationOutput'
        serverValidationOutput:
          $ref: '#/components/schemas/ValidationOutput_serverValidationOutput'
      type: object
    VmId:
      type: string
    VmName:
      type: string
    VmPath:
      type: string
    VmServerAddress:
      description: Represents a VM server location.
      properties:
        vmManagerId:
          allOf:
          - $ref: '#/components/schemas/VmManagerId'
          - description: The ID of the VM manager.
        vmId:
          allOf:
          - $ref: '#/components/schemas/VmId'
          - description: The ID of the VM.
      type: object
    CreateAppResponse_appSummary:
      allOf:
      - $ref: '#/components/schemas/AppSummary'
      - description: A summary description of the application.
      example:
        launchDetails:
          stackId: ""
          latestLaunchTime: ""
          stackName: ""
        launchStatus: ""
        launchStatusMessage: ""
        creationTime: ""
        replicationStatusMessage: ""
        description: ""
        replicationStatus: ""
        replicationConfigurationStatus: ""
        statusMessage: ""
        importedAppId: ""
        totalServers: ""
        appId: ""
        name: ""
        roleName: ""
        latestReplicationTime: ""
        launchConfigurationStatus: ""
        lastModified: ""
        totalServerGroups: ""
        status: ""
    GenerateChangeSetResponse_s3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: The location of the Amazon S3 object.
      example:
        bucket: ""
        key: ""
    GetAppResponse_appSummary:
      allOf:
      - $ref: '#/components/schemas/AppSummary'
      - description: Information about the application.
      example:
        launchDetails:
          stackId: ""
          latestLaunchTime: ""
          stackName: ""
        launchStatus: ""
        launchStatusMessage: ""
        creationTime: ""
        replicationStatusMessage: ""
        description: ""
        replicationStatus: ""
        replicationConfigurationStatus: ""
        statusMessage: ""
        importedAppId: ""
        totalServers: ""
        appId: ""
        name: ""
        roleName: ""
        latestReplicationTime: ""
        launchConfigurationStatus: ""
        lastModified: ""
        totalServerGroups: ""
        status: ""
    GetReplicationRunsResponse_replicationJob:
      allOf:
      - $ref: '#/components/schemas/ReplicationJob'
      - description: Information about the replication job.
      example:
        vmServer:
          vmServerAddress:
            vmManagerId: ""
            vmId: ""
          vmName: ""
          vmManagerName: ""
          vmManagerType: ""
          vmPath: ""
        nextReplicationRunStartTime: ""
        description: ""
        replicationRunList: ""
        serverId: ""
        runOnce: ""
        statusMessage: ""
        numberOfRecentAmisToKeep: ""
        replicationJobId: ""
        frequency: ""
        licenseType: ""
        encrypted: ""
        seedReplicationTime: ""
        serverType: ""
        roleName: ""
        state: ""
        kmsKeyId: ""
        latestAmiId: ""
    NotifyAppValidationOutputRequest_notificationContext:
      allOf:
      - $ref: '#/components/schemas/NotificationContext'
      - description: The notification information.
      example:
        validationId: ""
        statusMessage: ""
        status: ""
    AppSummary_launchDetails:
      allOf:
      - $ref: '#/components/schemas/LaunchDetails'
      - description: Details about the latest launch of the application.
      example:
        stackId: ""
        latestLaunchTime: ""
        stackName: ""
    SSMValidationParameters_source:
      allOf:
      - $ref: '#/components/schemas/Source'
      - description: The location of the validation script.
    AppValidationConfiguration_ssmValidationParameters:
      allOf:
      - $ref: '#/components/schemas/SSMValidationParameters'
      - description: The validation parameters.
    AppValidationOutput_ssmOutput:
      allOf:
      - $ref: '#/components/schemas/SSMOutput'
      - description: Output from using SSM to validate the application.
    ReplicationJob_vmServer:
      allOf:
      - $ref: '#/components/schemas/VmServer'
      - description: Information about the VM server.
      example:
        vmServerAddress:
          vmManagerId: ""
          vmId: ""
        vmName: ""
        vmManagerName: ""
        vmManagerType: ""
        vmPath: ""
    VmServer_vmServerAddress:
      allOf:
      - $ref: '#/components/schemas/VmServerAddress'
      - description: The VM server location.
      example:
        vmManagerId: ""
        vmId: ""
    ReplicationRun_stageDetails:
      allOf:
      - $ref: '#/components/schemas/ReplicationRunStageDetails'
      - description: Details about the current stage of the replication run.
    UserData_s3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: Amazon S3 location of the user-data script.
    ServerLaunchConfiguration_server:
      allOf:
      - $ref: '#/components/schemas/Server'
      - description: The ID of the server with which the launch configuration is associated.
    ServerLaunchConfiguration_userData:
      allOf:
      - $ref: '#/components/schemas/UserData'
      - description: Location of the user-data script to be executed when launching
          the server.
    ServerReplicationConfiguration_server:
      allOf:
      - $ref: '#/components/schemas/Server'
      - description: The ID of the server with which this replication configuration
          is associated.
    ServerReplicationConfiguration_serverReplicationParameters:
      allOf:
      - $ref: '#/components/schemas/ServerReplicationParameters'
      - description: The parameters for replicating the server.
    ServerValidationConfiguration_userDataValidationParameters:
      allOf:
      - $ref: '#/components/schemas/UserDataValidationParameters'
      - description: The validation parameters.
    ValidationOutput_appValidationOutput:
      allOf:
      - $ref: '#/components/schemas/AppValidationOutput'
      - description: The output from validating an application.
    ValidationOutput_serverValidationOutput:
      allOf:
      - $ref: '#/components/schemas/ServerValidationOutput'
      - description: The output from validation an instance.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

