/**
 * AWS Server Migration Service
 * <important> <p> <b>Product update</b> </p> <p>We recommend <a href=\"http://aws.amazon.com/application-migration-service\">Amazon Web Services Application Migration Service</a> (Amazon Web Services MGN) as the primary migration service for lift-and-shift migrations. If Amazon Web Services MGN is unavailable in a specific Amazon Web Services Region, you can use the Server Migration Service APIs through March 2023.</p> </important> <p>Server Migration Service (Server Migration Service) makes it easier and faster for you to migrate your on-premises workloads to Amazon Web Services. To learn more about Server Migration Service, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/server-migration-service/\">Server Migration Service product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/server-migration-service/latest/userguide/\">Server Migration Service User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-10-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnector.h
 *
 * Represents a connector.
 */

#ifndef OAIConnector_H
#define OAIConnector_H

#include <QJsonObject>

#include "OAIConnectorStatus.h"
#include "OAIVmManagerType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConnector : public OAIObject {
public:
    OAIConnector();
    OAIConnector(QString json);
    ~OAIConnector() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConnectorId() const;
    void setConnectorId(const QString &connector_id);
    bool is_connector_id_Set() const;
    bool is_connector_id_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    OAIConnectorStatus getStatus() const;
    void setStatus(const OAIConnectorStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList getCapabilityList() const;
    void setCapabilityList(const QList &capability_list);
    bool is_capability_list_Set() const;
    bool is_capability_list_Valid() const;

    QString getVmManagerName() const;
    void setVmManagerName(const QString &vm_manager_name);
    bool is_vm_manager_name_Set() const;
    bool is_vm_manager_name_Valid() const;

    OAIVmManagerType getVmManagerType() const;
    void setVmManagerType(const OAIVmManagerType &vm_manager_type);
    bool is_vm_manager_type_Set() const;
    bool is_vm_manager_type_Valid() const;

    QString getVmManagerId() const;
    void setVmManagerId(const QString &vm_manager_id);
    bool is_vm_manager_id_Set() const;
    bool is_vm_manager_id_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    QString getMacAddress() const;
    void setMacAddress(const QString &mac_address);
    bool is_mac_address_Set() const;
    bool is_mac_address_Valid() const;

    QDateTime getAssociatedOn() const;
    void setAssociatedOn(const QDateTime &associated_on);
    bool is_associated_on_Set() const;
    bool is_associated_on_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_connector_id;
    bool m_connector_id_isSet;
    bool m_connector_id_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIConnectorStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList m_capability_list;
    bool m_capability_list_isSet;
    bool m_capability_list_isValid;

    QString m_vm_manager_name;
    bool m_vm_manager_name_isSet;
    bool m_vm_manager_name_isValid;

    OAIVmManagerType m_vm_manager_type;
    bool m_vm_manager_type_isSet;
    bool m_vm_manager_type_isValid;

    QString m_vm_manager_id;
    bool m_vm_manager_id_isSet;
    bool m_vm_manager_id_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    QString m_mac_address;
    bool m_mac_address_isSet;
    bool m_mac_address_isValid;

    QDateTime m_associated_on;
    bool m_associated_on_isSet;
    bool m_associated_on_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnector)

#endif // OAIConnector_H
