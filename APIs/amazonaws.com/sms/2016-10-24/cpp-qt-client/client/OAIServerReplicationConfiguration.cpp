/**
 * AWS Server Migration Service
 * <important> <p> <b>Product update</b> </p> <p>We recommend <a href=\"http://aws.amazon.com/application-migration-service\">Amazon Web Services Application Migration Service</a> (Amazon Web Services MGN) as the primary migration service for lift-and-shift migrations. If Amazon Web Services MGN is unavailable in a specific Amazon Web Services Region, you can use the Server Migration Service APIs through March 2023.</p> </important> <p>Server Migration Service (Server Migration Service) makes it easier and faster for you to migrate your on-premises workloads to Amazon Web Services. To learn more about Server Migration Service, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/server-migration-service/\">Server Migration Service product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/server-migration-service/latest/userguide/\">Server Migration Service User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-10-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerReplicationConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerReplicationConfiguration::OAIServerReplicationConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerReplicationConfiguration::OAIServerReplicationConfiguration() {
    this->initializeModel();
}

OAIServerReplicationConfiguration::~OAIServerReplicationConfiguration() {}

void OAIServerReplicationConfiguration::initializeModel() {

    m_server_isSet = false;
    m_server_isValid = false;

    m_server_replication_parameters_isSet = false;
    m_server_replication_parameters_isValid = false;
}

void OAIServerReplicationConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServerReplicationConfiguration::fromJsonObject(QJsonObject json) {

    m_server_isValid = ::OpenAPI::fromJsonValue(m_server, json[QString("server")]);
    m_server_isSet = !json[QString("server")].isNull() && m_server_isValid;

    m_server_replication_parameters_isValid = ::OpenAPI::fromJsonValue(m_server_replication_parameters, json[QString("serverReplicationParameters")]);
    m_server_replication_parameters_isSet = !json[QString("serverReplicationParameters")].isNull() && m_server_replication_parameters_isValid;
}

QString OAIServerReplicationConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServerReplicationConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_server.isSet()) {
        obj.insert(QString("server"), ::OpenAPI::toJsonValue(m_server));
    }
    if (m_server_replication_parameters.isSet()) {
        obj.insert(QString("serverReplicationParameters"), ::OpenAPI::toJsonValue(m_server_replication_parameters));
    }
    return obj;
}

OAIServerReplicationConfiguration_server OAIServerReplicationConfiguration::getServer() const {
    return m_server;
}
void OAIServerReplicationConfiguration::setServer(const OAIServerReplicationConfiguration_server &server) {
    m_server = server;
    m_server_isSet = true;
}

bool OAIServerReplicationConfiguration::is_server_Set() const{
    return m_server_isSet;
}

bool OAIServerReplicationConfiguration::is_server_Valid() const{
    return m_server_isValid;
}

OAIServerReplicationConfiguration_serverReplicationParameters OAIServerReplicationConfiguration::getServerReplicationParameters() const {
    return m_server_replication_parameters;
}
void OAIServerReplicationConfiguration::setServerReplicationParameters(const OAIServerReplicationConfiguration_serverReplicationParameters &server_replication_parameters) {
    m_server_replication_parameters = server_replication_parameters;
    m_server_replication_parameters_isSet = true;
}

bool OAIServerReplicationConfiguration::is_server_replication_parameters_Set() const{
    return m_server_replication_parameters_isSet;
}

bool OAIServerReplicationConfiguration::is_server_replication_parameters_Valid() const{
    return m_server_replication_parameters_isValid;
}

bool OAIServerReplicationConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_server.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_server_replication_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServerReplicationConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
