/**
 * AWS Server Migration Service
 * <important> <p> <b>Product update</b> </p> <p>We recommend <a href=\"http://aws.amazon.com/application-migration-service\">Amazon Web Services Application Migration Service</a> (Amazon Web Services MGN) as the primary migration service for lift-and-shift migrations. If Amazon Web Services MGN is unavailable in a specific Amazon Web Services Region, you can use the Server Migration Service APIs through March 2023.</p> </important> <p>Server Migration Service (Server Migration Service) makes it easier and faster for you to migrate your on-premises workloads to Amazon Web Services. To learn more about Server Migration Service, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/server-migration-service/\">Server Migration Service product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/server-migration-service/latest/userguide/\">Server Migration Service User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-10-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateReplicationJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateReplicationJobResponse::OAICreateReplicationJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateReplicationJobResponse::OAICreateReplicationJobResponse() {
    this->initializeModel();
}

OAICreateReplicationJobResponse::~OAICreateReplicationJobResponse() {}

void OAICreateReplicationJobResponse::initializeModel() {

    m_replication_job_id_isSet = false;
    m_replication_job_id_isValid = false;
}

void OAICreateReplicationJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateReplicationJobResponse::fromJsonObject(QJsonObject json) {

    m_replication_job_id_isValid = ::OpenAPI::fromJsonValue(m_replication_job_id, json[QString("replicationJobId")]);
    m_replication_job_id_isSet = !json[QString("replicationJobId")].isNull() && m_replication_job_id_isValid;
}

QString OAICreateReplicationJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateReplicationJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_replication_job_id_isSet) {
        obj.insert(QString("replicationJobId"), ::OpenAPI::toJsonValue(m_replication_job_id));
    }
    return obj;
}

QString OAICreateReplicationJobResponse::getReplicationJobId() const {
    return m_replication_job_id;
}
void OAICreateReplicationJobResponse::setReplicationJobId(const QString &replication_job_id) {
    m_replication_job_id = replication_job_id;
    m_replication_job_id_isSet = true;
}

bool OAICreateReplicationJobResponse::is_replication_job_id_Set() const{
    return m_replication_job_id_isSet;
}

bool OAICreateReplicationJobResponse::is_replication_job_id_Valid() const{
    return m_replication_job_id_isValid;
}

bool OAICreateReplicationJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_replication_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateReplicationJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
