/**
 * AWS Server Migration Service
 * <important> <p> <b>Product update</b> </p> <p>We recommend <a href=\"http://aws.amazon.com/application-migration-service\">Amazon Web Services Application Migration Service</a> (Amazon Web Services MGN) as the primary migration service for lift-and-shift migrations. If Amazon Web Services MGN is unavailable in a specific Amazon Web Services Region, you can use the Server Migration Service APIs through March 2023.</p> </important> <p>Server Migration Service (Server Migration Service) makes it easier and faster for you to migrate your on-premises workloads to Amazon Web Services. To learn more about Server Migration Service, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/server-migration-service/\">Server Migration Service product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/server-migration-service/latest/userguide/\">Server Migration Service User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-10-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServerReplicationParameters.h
 *
 * The replication parameters for replicating a server.
 */

#ifndef OAIServerReplicationParameters_H
#define OAIServerReplicationParameters_H

#include <QJsonObject>

#include "OAILicenseType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServerReplicationParameters : public OAIObject {
public:
    OAIServerReplicationParameters();
    OAIServerReplicationParameters(QString json);
    ~OAIServerReplicationParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getSeedTime() const;
    void setSeedTime(const QDateTime &seed_time);
    bool is_seed_time_Set() const;
    bool is_seed_time_Valid() const;

    qint32 getFrequency() const;
    void setFrequency(const qint32 &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    bool getRunOnce() const;
    void setRunOnce(const bool &run_once);
    bool is_run_once_Set() const;
    bool is_run_once_Valid() const;

    OAILicenseType getLicenseType() const;
    void setLicenseType(const OAILicenseType &license_type);
    bool is_license_type_Set() const;
    bool is_license_type_Valid() const;

    qint32 getNumberOfRecentAmisToKeep() const;
    void setNumberOfRecentAmisToKeep(const qint32 &number_of_recent_amis_to_keep);
    bool is_number_of_recent_amis_to_keep_Set() const;
    bool is_number_of_recent_amis_to_keep_Valid() const;

    bool getEncrypted() const;
    void setEncrypted(const bool &encrypted);
    bool is_encrypted_Set() const;
    bool is_encrypted_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_seed_time;
    bool m_seed_time_isSet;
    bool m_seed_time_isValid;

    qint32 m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    bool m_run_once;
    bool m_run_once_isSet;
    bool m_run_once_isValid;

    OAILicenseType m_license_type;
    bool m_license_type_isSet;
    bool m_license_type_isValid;

    qint32 m_number_of_recent_amis_to_keep;
    bool m_number_of_recent_amis_to_keep_isSet;
    bool m_number_of_recent_amis_to_keep_isValid;

    bool m_encrypted;
    bool m_encrypted_isSet;
    bool m_encrypted_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServerReplicationParameters)

#endif // OAIServerReplicationParameters_H
