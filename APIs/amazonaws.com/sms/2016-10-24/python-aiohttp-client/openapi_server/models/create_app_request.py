# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAppRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, role_name: str=None, client_token: str=None, server_groups: List=None, tags: List=None):
        """CreateAppRequest - a model defined in OpenAPI

        :param name: The name of this CreateAppRequest.
        :param description: The description of this CreateAppRequest.
        :param role_name: The role_name of this CreateAppRequest.
        :param client_token: The client_token of this CreateAppRequest.
        :param server_groups: The server_groups of this CreateAppRequest.
        :param tags: The tags of this CreateAppRequest.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'role_name': str,
            'client_token': str,
            'server_groups': List,
            'tags': List
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            'role_name': 'roleName',
            'client_token': 'clientToken',
            'server_groups': 'serverGroups',
            'tags': 'tags'
        }

        self._name = name
        self._description = description
        self._role_name = role_name
        self._client_token = client_token
        self._server_groups = server_groups
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAppRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAppRequest of this CreateAppRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateAppRequest.


        :return: The name of this CreateAppRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateAppRequest.


        :param name: The name of this CreateAppRequest.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this CreateAppRequest.


        :return: The description of this CreateAppRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateAppRequest.


        :param description: The description of this CreateAppRequest.
        :type description: str
        """

        self._description = description

    @property
    def role_name(self):
        """Gets the role_name of this CreateAppRequest.


        :return: The role_name of this CreateAppRequest.
        :rtype: str
        """
        return self._role_name

    @role_name.setter
    def role_name(self, role_name):
        """Sets the role_name of this CreateAppRequest.


        :param role_name: The role_name of this CreateAppRequest.
        :type role_name: str
        """

        self._role_name = role_name

    @property
    def client_token(self):
        """Gets the client_token of this CreateAppRequest.


        :return: The client_token of this CreateAppRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this CreateAppRequest.


        :param client_token: The client_token of this CreateAppRequest.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def server_groups(self):
        """Gets the server_groups of this CreateAppRequest.


        :return: The server_groups of this CreateAppRequest.
        :rtype: List
        """
        return self._server_groups

    @server_groups.setter
    def server_groups(self, server_groups):
        """Sets the server_groups of this CreateAppRequest.


        :param server_groups: The server_groups of this CreateAppRequest.
        :type server_groups: List
        """

        self._server_groups = server_groups

    @property
    def tags(self):
        """Gets the tags of this CreateAppRequest.


        :return: The tags of this CreateAppRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateAppRequest.


        :param tags: The tags of this CreateAppRequest.
        :type tags: List
        """

        self._tags = tags
