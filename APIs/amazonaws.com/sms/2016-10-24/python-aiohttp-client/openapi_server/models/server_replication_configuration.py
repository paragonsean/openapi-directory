# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.server_replication_configuration_server import ServerReplicationConfigurationServer
from openapi_server.models.server_replication_configuration_server_replication_parameters import ServerReplicationConfigurationServerReplicationParameters
from openapi_server import util


class ServerReplicationConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server: ServerReplicationConfigurationServer=None, server_replication_parameters: ServerReplicationConfigurationServerReplicationParameters=None):
        """ServerReplicationConfiguration - a model defined in OpenAPI

        :param server: The server of this ServerReplicationConfiguration.
        :param server_replication_parameters: The server_replication_parameters of this ServerReplicationConfiguration.
        """
        self.openapi_types = {
            'server': ServerReplicationConfigurationServer,
            'server_replication_parameters': ServerReplicationConfigurationServerReplicationParameters
        }

        self.attribute_map = {
            'server': 'server',
            'server_replication_parameters': 'serverReplicationParameters'
        }

        self._server = server
        self._server_replication_parameters = server_replication_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerReplicationConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerReplicationConfiguration of this ServerReplicationConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server(self):
        """Gets the server of this ServerReplicationConfiguration.


        :return: The server of this ServerReplicationConfiguration.
        :rtype: ServerReplicationConfigurationServer
        """
        return self._server

    @server.setter
    def server(self, server):
        """Sets the server of this ServerReplicationConfiguration.


        :param server: The server of this ServerReplicationConfiguration.
        :type server: ServerReplicationConfigurationServer
        """

        self._server = server

    @property
    def server_replication_parameters(self):
        """Gets the server_replication_parameters of this ServerReplicationConfiguration.


        :return: The server_replication_parameters of this ServerReplicationConfiguration.
        :rtype: ServerReplicationConfigurationServerReplicationParameters
        """
        return self._server_replication_parameters

    @server_replication_parameters.setter
    def server_replication_parameters(self, server_replication_parameters):
        """Sets the server_replication_parameters of this ServerReplicationConfiguration.


        :param server_replication_parameters: The server_replication_parameters of this ServerReplicationConfiguration.
        :type server_replication_parameters: ServerReplicationConfigurationServerReplicationParameters
        """

        self._server_replication_parameters = server_replication_parameters
