# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.server import Server
from openapi_server.models.server_validation_configuration_user_data_validation_parameters import ServerValidationConfigurationUserDataValidationParameters
from openapi_server.models.server_validation_strategy import ServerValidationStrategy
from openapi_server import util


class ServerValidationConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server: Server=None, validation_id: str=None, name: str=None, server_validation_strategy: ServerValidationStrategy=None, user_data_validation_parameters: ServerValidationConfigurationUserDataValidationParameters=None):
        """ServerValidationConfiguration - a model defined in OpenAPI

        :param server: The server of this ServerValidationConfiguration.
        :param validation_id: The validation_id of this ServerValidationConfiguration.
        :param name: The name of this ServerValidationConfiguration.
        :param server_validation_strategy: The server_validation_strategy of this ServerValidationConfiguration.
        :param user_data_validation_parameters: The user_data_validation_parameters of this ServerValidationConfiguration.
        """
        self.openapi_types = {
            'server': Server,
            'validation_id': str,
            'name': str,
            'server_validation_strategy': ServerValidationStrategy,
            'user_data_validation_parameters': ServerValidationConfigurationUserDataValidationParameters
        }

        self.attribute_map = {
            'server': 'server',
            'validation_id': 'validationId',
            'name': 'name',
            'server_validation_strategy': 'serverValidationStrategy',
            'user_data_validation_parameters': 'userDataValidationParameters'
        }

        self._server = server
        self._validation_id = validation_id
        self._name = name
        self._server_validation_strategy = server_validation_strategy
        self._user_data_validation_parameters = user_data_validation_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerValidationConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerValidationConfiguration of this ServerValidationConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server(self):
        """Gets the server of this ServerValidationConfiguration.


        :return: The server of this ServerValidationConfiguration.
        :rtype: Server
        """
        return self._server

    @server.setter
    def server(self, server):
        """Sets the server of this ServerValidationConfiguration.


        :param server: The server of this ServerValidationConfiguration.
        :type server: Server
        """

        self._server = server

    @property
    def validation_id(self):
        """Gets the validation_id of this ServerValidationConfiguration.


        :return: The validation_id of this ServerValidationConfiguration.
        :rtype: str
        """
        return self._validation_id

    @validation_id.setter
    def validation_id(self, validation_id):
        """Sets the validation_id of this ServerValidationConfiguration.


        :param validation_id: The validation_id of this ServerValidationConfiguration.
        :type validation_id: str
        """

        self._validation_id = validation_id

    @property
    def name(self):
        """Gets the name of this ServerValidationConfiguration.


        :return: The name of this ServerValidationConfiguration.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServerValidationConfiguration.


        :param name: The name of this ServerValidationConfiguration.
        :type name: str
        """

        self._name = name

    @property
    def server_validation_strategy(self):
        """Gets the server_validation_strategy of this ServerValidationConfiguration.


        :return: The server_validation_strategy of this ServerValidationConfiguration.
        :rtype: ServerValidationStrategy
        """
        return self._server_validation_strategy

    @server_validation_strategy.setter
    def server_validation_strategy(self, server_validation_strategy):
        """Sets the server_validation_strategy of this ServerValidationConfiguration.


        :param server_validation_strategy: The server_validation_strategy of this ServerValidationConfiguration.
        :type server_validation_strategy: ServerValidationStrategy
        """

        self._server_validation_strategy = server_validation_strategy

    @property
    def user_data_validation_parameters(self):
        """Gets the user_data_validation_parameters of this ServerValidationConfiguration.


        :return: The user_data_validation_parameters of this ServerValidationConfiguration.
        :rtype: ServerValidationConfigurationUserDataValidationParameters
        """
        return self._user_data_validation_parameters

    @user_data_validation_parameters.setter
    def user_data_validation_parameters(self, user_data_validation_parameters):
        """Sets the user_data_validation_parameters of this ServerValidationConfiguration.


        :param user_data_validation_parameters: The user_data_validation_parameters of this ServerValidationConfiguration.
        :type user_data_validation_parameters: ServerValidationConfigurationUserDataValidationParameters
        """

        self._user_data_validation_parameters = user_data_validation_parameters
