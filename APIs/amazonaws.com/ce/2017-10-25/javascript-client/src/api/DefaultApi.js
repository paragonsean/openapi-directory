/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateAnomalyMonitorRequest from '../model/CreateAnomalyMonitorRequest';
import CreateAnomalyMonitorResponse from '../model/CreateAnomalyMonitorResponse';
import CreateAnomalySubscriptionRequest from '../model/CreateAnomalySubscriptionRequest';
import CreateAnomalySubscriptionResponse from '../model/CreateAnomalySubscriptionResponse';
import CreateCostCategoryDefinitionRequest from '../model/CreateCostCategoryDefinitionRequest';
import CreateCostCategoryDefinitionResponse from '../model/CreateCostCategoryDefinitionResponse';
import DeleteAnomalyMonitorRequest from '../model/DeleteAnomalyMonitorRequest';
import DeleteAnomalySubscriptionRequest from '../model/DeleteAnomalySubscriptionRequest';
import DeleteCostCategoryDefinitionRequest from '../model/DeleteCostCategoryDefinitionRequest';
import DeleteCostCategoryDefinitionResponse from '../model/DeleteCostCategoryDefinitionResponse';
import DescribeCostCategoryDefinitionRequest from '../model/DescribeCostCategoryDefinitionRequest';
import DescribeCostCategoryDefinitionResponse from '../model/DescribeCostCategoryDefinitionResponse';
import GetAnomaliesRequest from '../model/GetAnomaliesRequest';
import GetAnomaliesResponse from '../model/GetAnomaliesResponse';
import GetAnomalyMonitorsRequest from '../model/GetAnomalyMonitorsRequest';
import GetAnomalyMonitorsResponse from '../model/GetAnomalyMonitorsResponse';
import GetAnomalySubscriptionsRequest from '../model/GetAnomalySubscriptionsRequest';
import GetAnomalySubscriptionsResponse from '../model/GetAnomalySubscriptionsResponse';
import GetCostAndUsageRequest from '../model/GetCostAndUsageRequest';
import GetCostAndUsageResponse from '../model/GetCostAndUsageResponse';
import GetCostAndUsageWithResourcesRequest from '../model/GetCostAndUsageWithResourcesRequest';
import GetCostAndUsageWithResourcesResponse from '../model/GetCostAndUsageWithResourcesResponse';
import GetCostCategoriesRequest from '../model/GetCostCategoriesRequest';
import GetCostCategoriesResponse from '../model/GetCostCategoriesResponse';
import GetCostForecastRequest from '../model/GetCostForecastRequest';
import GetCostForecastResponse from '../model/GetCostForecastResponse';
import GetDimensionValuesRequest from '../model/GetDimensionValuesRequest';
import GetDimensionValuesResponse from '../model/GetDimensionValuesResponse';
import GetReservationCoverageRequest from '../model/GetReservationCoverageRequest';
import GetReservationCoverageResponse from '../model/GetReservationCoverageResponse';
import GetReservationPurchaseRecommendationRequest from '../model/GetReservationPurchaseRecommendationRequest';
import GetReservationPurchaseRecommendationResponse from '../model/GetReservationPurchaseRecommendationResponse';
import GetReservationUtilizationRequest from '../model/GetReservationUtilizationRequest';
import GetReservationUtilizationResponse from '../model/GetReservationUtilizationResponse';
import GetRightsizingRecommendationRequest from '../model/GetRightsizingRecommendationRequest';
import GetRightsizingRecommendationResponse from '../model/GetRightsizingRecommendationResponse';
import GetSavingsPlanPurchaseRecommendationDetailsRequest from '../model/GetSavingsPlanPurchaseRecommendationDetailsRequest';
import GetSavingsPlanPurchaseRecommendationDetailsResponse from '../model/GetSavingsPlanPurchaseRecommendationDetailsResponse';
import GetSavingsPlansCoverageRequest from '../model/GetSavingsPlansCoverageRequest';
import GetSavingsPlansCoverageResponse from '../model/GetSavingsPlansCoverageResponse';
import GetSavingsPlansPurchaseRecommendationRequest from '../model/GetSavingsPlansPurchaseRecommendationRequest';
import GetSavingsPlansPurchaseRecommendationResponse from '../model/GetSavingsPlansPurchaseRecommendationResponse';
import GetSavingsPlansUtilizationDetailsRequest from '../model/GetSavingsPlansUtilizationDetailsRequest';
import GetSavingsPlansUtilizationDetailsResponse from '../model/GetSavingsPlansUtilizationDetailsResponse';
import GetSavingsPlansUtilizationRequest from '../model/GetSavingsPlansUtilizationRequest';
import GetSavingsPlansUtilizationResponse from '../model/GetSavingsPlansUtilizationResponse';
import GetTagsRequest from '../model/GetTagsRequest';
import GetTagsResponse from '../model/GetTagsResponse';
import GetUsageForecastRequest from '../model/GetUsageForecastRequest';
import GetUsageForecastResponse from '../model/GetUsageForecastResponse';
import ListCostAllocationTagsRequest from '../model/ListCostAllocationTagsRequest';
import ListCostAllocationTagsResponse from '../model/ListCostAllocationTagsResponse';
import ListCostCategoryDefinitionsRequest from '../model/ListCostCategoryDefinitionsRequest';
import ListCostCategoryDefinitionsResponse from '../model/ListCostCategoryDefinitionsResponse';
import ListSavingsPlansPurchaseRecommendationGenerationRequest from '../model/ListSavingsPlansPurchaseRecommendationGenerationRequest';
import ListSavingsPlansPurchaseRecommendationGenerationResponse from '../model/ListSavingsPlansPurchaseRecommendationGenerationResponse';
import ListTagsForResourceRequest from '../model/ListTagsForResourceRequest';
import ListTagsForResourceResponse from '../model/ListTagsForResourceResponse';
import ProvideAnomalyFeedbackRequest from '../model/ProvideAnomalyFeedbackRequest';
import ProvideAnomalyFeedbackResponse from '../model/ProvideAnomalyFeedbackResponse';
import StartSavingsPlansPurchaseRecommendationGenerationResponse from '../model/StartSavingsPlansPurchaseRecommendationGenerationResponse';
import TagResourceRequest from '../model/TagResourceRequest';
import UntagResourceRequest from '../model/UntagResourceRequest';
import UpdateAnomalyMonitorRequest from '../model/UpdateAnomalyMonitorRequest';
import UpdateAnomalyMonitorResponse from '../model/UpdateAnomalyMonitorResponse';
import UpdateAnomalySubscriptionRequest from '../model/UpdateAnomalySubscriptionRequest';
import UpdateAnomalySubscriptionResponse from '../model/UpdateAnomalySubscriptionResponse';
import UpdateCostAllocationTagsStatusRequest from '../model/UpdateCostAllocationTagsStatusRequest';
import UpdateCostAllocationTagsStatusResponse from '../model/UpdateCostAllocationTagsStatusResponse';
import UpdateCostCategoryDefinitionRequest from '../model/UpdateCostCategoryDefinitionRequest';
import UpdateCostCategoryDefinitionResponse from '../model/UpdateCostCategoryDefinitionResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 2017-10-25
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createAnomalyMonitor operation.
     * @callback module:api/DefaultApi~createAnomalyMonitorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAnomalyMonitorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new cost anomaly detection monitor with the requested type and monitor specification. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateAnomalyMonitorRequest} createAnomalyMonitorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAnomalyMonitorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAnomalyMonitorResponse}
     */
    createAnomalyMonitor(xAmzTarget, createAnomalyMonitorRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAnomalyMonitorRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createAnomalyMonitor");
      }
      // verify the required parameter 'createAnomalyMonitorRequest' is set
      if (createAnomalyMonitorRequest === undefined || createAnomalyMonitorRequest === null) {
        throw new Error("Missing the required parameter 'createAnomalyMonitorRequest' when calling createAnomalyMonitor");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAnomalyMonitorResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.CreateAnomalyMonitor', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAnomalySubscription operation.
     * @callback module:api/DefaultApi~createAnomalySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAnomalySubscriptionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds an alert subscription to a cost anomaly detection monitor. You can use each subscription to define subscribers with email or SNS notifications. Email subscribers can set an absolute or percentage threshold and a time frequency for receiving notifications. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateAnomalySubscriptionRequest} createAnomalySubscriptionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAnomalySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAnomalySubscriptionResponse}
     */
    createAnomalySubscription(xAmzTarget, createAnomalySubscriptionRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAnomalySubscriptionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createAnomalySubscription");
      }
      // verify the required parameter 'createAnomalySubscriptionRequest' is set
      if (createAnomalySubscriptionRequest === undefined || createAnomalySubscriptionRequest === null) {
        throw new Error("Missing the required parameter 'createAnomalySubscriptionRequest' when calling createAnomalySubscription");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAnomalySubscriptionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.CreateAnomalySubscription', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createCostCategoryDefinition operation.
     * @callback module:api/DefaultApi~createCostCategoryDefinitionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateCostCategoryDefinitionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new Cost Category with the requested name and rules.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateCostCategoryDefinitionRequest} createCostCategoryDefinitionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createCostCategoryDefinitionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateCostCategoryDefinitionResponse}
     */
    createCostCategoryDefinition(xAmzTarget, createCostCategoryDefinitionRequest, opts, callback) {
      opts = opts || {};
      let postBody = createCostCategoryDefinitionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createCostCategoryDefinition");
      }
      // verify the required parameter 'createCostCategoryDefinitionRequest' is set
      if (createCostCategoryDefinitionRequest === undefined || createCostCategoryDefinitionRequest === null) {
        throw new Error("Missing the required parameter 'createCostCategoryDefinitionRequest' when calling createCostCategoryDefinition");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateCostCategoryDefinitionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.CreateCostCategoryDefinition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAnomalyMonitor operation.
     * @callback module:api/DefaultApi~deleteAnomalyMonitorCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a cost anomaly monitor. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteAnomalyMonitorRequest} deleteAnomalyMonitorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteAnomalyMonitorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteAnomalyMonitor(xAmzTarget, deleteAnomalyMonitorRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteAnomalyMonitorRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteAnomalyMonitor");
      }
      // verify the required parameter 'deleteAnomalyMonitorRequest' is set
      if (deleteAnomalyMonitorRequest === undefined || deleteAnomalyMonitorRequest === null) {
        throw new Error("Missing the required parameter 'deleteAnomalyMonitorRequest' when calling deleteAnomalyMonitor");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.DeleteAnomalyMonitor', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAnomalySubscription operation.
     * @callback module:api/DefaultApi~deleteAnomalySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a cost anomaly subscription. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteAnomalySubscriptionRequest} deleteAnomalySubscriptionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteAnomalySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteAnomalySubscription(xAmzTarget, deleteAnomalySubscriptionRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteAnomalySubscriptionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteAnomalySubscription");
      }
      // verify the required parameter 'deleteAnomalySubscriptionRequest' is set
      if (deleteAnomalySubscriptionRequest === undefined || deleteAnomalySubscriptionRequest === null) {
        throw new Error("Missing the required parameter 'deleteAnomalySubscriptionRequest' when calling deleteAnomalySubscription");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.DeleteAnomalySubscription', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCostCategoryDefinition operation.
     * @callback module:api/DefaultApi~deleteCostCategoryDefinitionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteCostCategoryDefinitionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Cost Category. Expenses from this month going forward will no longer be categorized with this Cost Category.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteCostCategoryDefinitionRequest} deleteCostCategoryDefinitionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteCostCategoryDefinitionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteCostCategoryDefinitionResponse}
     */
    deleteCostCategoryDefinition(xAmzTarget, deleteCostCategoryDefinitionRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteCostCategoryDefinitionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteCostCategoryDefinition");
      }
      // verify the required parameter 'deleteCostCategoryDefinitionRequest' is set
      if (deleteCostCategoryDefinitionRequest === undefined || deleteCostCategoryDefinitionRequest === null) {
        throw new Error("Missing the required parameter 'deleteCostCategoryDefinitionRequest' when calling deleteCostCategoryDefinition");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteCostCategoryDefinitionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.DeleteCostCategoryDefinition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeCostCategoryDefinition operation.
     * @callback module:api/DefaultApi~describeCostCategoryDefinitionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeCostCategoryDefinitionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the name, Amazon Resource Name (ARN), rules, definition, and effective dates of a Cost Category that's defined in the account.</p> <p>You have the option to use <code>EffectiveOn</code> to return a Cost Category that's active on a specific date. If there's no <code>EffectiveOn</code> specified, you see a Cost Category that's effective on the current date. If Cost Category is still effective, <code>EffectiveEnd</code> is omitted in the response. </p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeCostCategoryDefinitionRequest} describeCostCategoryDefinitionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeCostCategoryDefinitionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeCostCategoryDefinitionResponse}
     */
    describeCostCategoryDefinition(xAmzTarget, describeCostCategoryDefinitionRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeCostCategoryDefinitionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeCostCategoryDefinition");
      }
      // verify the required parameter 'describeCostCategoryDefinitionRequest' is set
      if (describeCostCategoryDefinitionRequest === undefined || describeCostCategoryDefinitionRequest === null) {
        throw new Error("Missing the required parameter 'describeCostCategoryDefinitionRequest' when calling describeCostCategoryDefinition");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeCostCategoryDefinitionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.DescribeCostCategoryDefinition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAnomalies operation.
     * @callback module:api/DefaultApi~getAnomaliesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAnomaliesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves all of the cost anomalies detected on your account during the time period that's specified by the <code>DateInterval</code> object. Anomalies are available for up to 90 days.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetAnomaliesRequest} getAnomaliesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAnomaliesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAnomaliesResponse}
     */
    getAnomalies(xAmzTarget, getAnomaliesRequest, opts, callback) {
      opts = opts || {};
      let postBody = getAnomaliesRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getAnomalies");
      }
      // verify the required parameter 'getAnomaliesRequest' is set
      if (getAnomaliesRequest === undefined || getAnomaliesRequest === null) {
        throw new Error("Missing the required parameter 'getAnomaliesRequest' when calling getAnomalies");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetAnomaliesResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetAnomalies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAnomalyMonitors operation.
     * @callback module:api/DefaultApi~getAnomalyMonitorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAnomalyMonitorsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the cost anomaly monitor definitions for your account. You can filter using a list of cost anomaly monitor Amazon Resource Names (ARNs). 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetAnomalyMonitorsRequest} getAnomalyMonitorsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAnomalyMonitorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAnomalyMonitorsResponse}
     */
    getAnomalyMonitors(xAmzTarget, getAnomalyMonitorsRequest, opts, callback) {
      opts = opts || {};
      let postBody = getAnomalyMonitorsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getAnomalyMonitors");
      }
      // verify the required parameter 'getAnomalyMonitorsRequest' is set
      if (getAnomalyMonitorsRequest === undefined || getAnomalyMonitorsRequest === null) {
        throw new Error("Missing the required parameter 'getAnomalyMonitorsRequest' when calling getAnomalyMonitors");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetAnomalyMonitorsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetAnomalyMonitors', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAnomalySubscriptions operation.
     * @callback module:api/DefaultApi~getAnomalySubscriptionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAnomalySubscriptionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the cost anomaly subscription objects for your account. You can filter using a list of cost anomaly monitor Amazon Resource Names (ARNs). 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetAnomalySubscriptionsRequest} getAnomalySubscriptionsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAnomalySubscriptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAnomalySubscriptionsResponse}
     */
    getAnomalySubscriptions(xAmzTarget, getAnomalySubscriptionsRequest, opts, callback) {
      opts = opts || {};
      let postBody = getAnomalySubscriptionsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getAnomalySubscriptions");
      }
      // verify the required parameter 'getAnomalySubscriptionsRequest' is set
      if (getAnomalySubscriptionsRequest === undefined || getAnomalySubscriptionsRequest === null) {
        throw new Error("Missing the required parameter 'getAnomalySubscriptionsRequest' when calling getAnomalySubscriptions");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetAnomalySubscriptionsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetAnomalySubscriptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCostAndUsage operation.
     * @callback module:api/DefaultApi~getCostAndUsageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCostAndUsageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves cost and usage metrics for your account. You can specify which cost and usage-related metric that you want the request to return. For example, you can specify <code>BlendedCosts</code> or <code>UsageQuantity</code>. You can also filter and group your data by various dimensions, such as <code>SERVICE</code> or <code>AZ</code>, in a specific time range. For a complete list of valid dimensions, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html\">GetDimensionValues</a> operation. Management account in an organization in Organizations have access to all member accounts.</p> <p>For information about filter limitations, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/billing-limits.html\">Quotas and restrictions</a> in the <i>Billing and Cost Management User Guide</i>.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetCostAndUsageRequest} getCostAndUsageRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getCostAndUsageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCostAndUsageResponse}
     */
    getCostAndUsage(xAmzTarget, getCostAndUsageRequest, opts, callback) {
      opts = opts || {};
      let postBody = getCostAndUsageRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getCostAndUsage");
      }
      // verify the required parameter 'getCostAndUsageRequest' is set
      if (getCostAndUsageRequest === undefined || getCostAndUsageRequest === null) {
        throw new Error("Missing the required parameter 'getCostAndUsageRequest' when calling getCostAndUsage");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetCostAndUsageResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetCostAndUsage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCostAndUsageWithResources operation.
     * @callback module:api/DefaultApi~getCostAndUsageWithResourcesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCostAndUsageWithResourcesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves cost and usage metrics with resources for your account. You can specify which cost and usage-related metric, such as <code>BlendedCosts</code> or <code>UsageQuantity</code>, that you want the request to return. You can also filter and group your data by various dimensions, such as <code>SERVICE</code> or <code>AZ</code>, in a specific time range. For a complete list of valid dimensions, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html\">GetDimensionValues</a> operation. Management account in an organization in Organizations have access to all member accounts. This API is currently available for the Amazon Elastic Compute Cloud – Compute service only.</p> <note> <p>This is an opt-in only feature. You can enable this feature from the Cost Explorer Settings page. For information about how to access the Settings page, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/ce-access.html\">Controlling Access for Cost Explorer</a> in the <i>Billing and Cost Management User Guide</i>.</p> </note>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetCostAndUsageWithResourcesRequest} getCostAndUsageWithResourcesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getCostAndUsageWithResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCostAndUsageWithResourcesResponse}
     */
    getCostAndUsageWithResources(xAmzTarget, getCostAndUsageWithResourcesRequest, opts, callback) {
      opts = opts || {};
      let postBody = getCostAndUsageWithResourcesRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getCostAndUsageWithResources");
      }
      // verify the required parameter 'getCostAndUsageWithResourcesRequest' is set
      if (getCostAndUsageWithResourcesRequest === undefined || getCostAndUsageWithResourcesRequest === null) {
        throw new Error("Missing the required parameter 'getCostAndUsageWithResourcesRequest' when calling getCostAndUsageWithResources");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetCostAndUsageWithResourcesResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetCostAndUsageWithResources', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCostCategories operation.
     * @callback module:api/DefaultApi~getCostCategoriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCostCategoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves an array of Cost Category names and values incurred cost.</p> <note> <p>If some Cost Category names and values are not associated with any cost, they will not be returned by this API.</p> </note>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetCostCategoriesRequest} getCostCategoriesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getCostCategoriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCostCategoriesResponse}
     */
    getCostCategories(xAmzTarget, getCostCategoriesRequest, opts, callback) {
      opts = opts || {};
      let postBody = getCostCategoriesRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getCostCategories");
      }
      // verify the required parameter 'getCostCategoriesRequest' is set
      if (getCostCategoriesRequest === undefined || getCostCategoriesRequest === null) {
        throw new Error("Missing the required parameter 'getCostCategoriesRequest' when calling getCostCategories");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetCostCategoriesResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetCostCategories', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCostForecast operation.
     * @callback module:api/DefaultApi~getCostForecastCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCostForecastResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a forecast for how much Amazon Web Services predicts that you will spend over the forecast time period that you select, based on your past costs. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetCostForecastRequest} getCostForecastRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getCostForecastCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCostForecastResponse}
     */
    getCostForecast(xAmzTarget, getCostForecastRequest, opts, callback) {
      opts = opts || {};
      let postBody = getCostForecastRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getCostForecast");
      }
      // verify the required parameter 'getCostForecastRequest' is set
      if (getCostForecastRequest === undefined || getCostForecastRequest === null) {
        throw new Error("Missing the required parameter 'getCostForecastRequest' when calling getCostForecast");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetCostForecastResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetCostForecast', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDimensionValues operation.
     * @callback module:api/DefaultApi~getDimensionValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetDimensionValuesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves all available filter values for a specified filter over a period of time. You can search the dimension values for an arbitrary string. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetDimensionValuesRequest} getDimensionValuesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getDimensionValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetDimensionValuesResponse}
     */
    getDimensionValues(xAmzTarget, getDimensionValuesRequest, opts, callback) {
      opts = opts || {};
      let postBody = getDimensionValuesRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getDimensionValues");
      }
      // verify the required parameter 'getDimensionValuesRequest' is set
      if (getDimensionValuesRequest === undefined || getDimensionValuesRequest === null) {
        throw new Error("Missing the required parameter 'getDimensionValuesRequest' when calling getDimensionValues");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetDimensionValuesResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetDimensionValues', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getReservationCoverage operation.
     * @callback module:api/DefaultApi~getReservationCoverageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetReservationCoverageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves the reservation coverage for your account, which you can use to see how much of your Amazon Elastic Compute Cloud, Amazon ElastiCache, Amazon Relational Database Service, or Amazon Redshift usage is covered by a reservation. An organization's management account can see the coverage of the associated member accounts. This supports dimensions, Cost Categories, and nested expressions. For any time period, you can filter data about reservation usage by the following dimensions:</p> <ul> <li> <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p> </li> <li> <p>DATABASE_ENGINE</p> </li> <li> <p>DEPLOYMENT_OPTION</p> </li> <li> <p>INSTANCE_TYPE</p> </li> <li> <p>LINKED_ACCOUNT</p> </li> <li> <p>OPERATING_SYSTEM</p> </li> <li> <p>PLATFORM</p> </li> <li> <p>REGION</p> </li> <li> <p>SERVICE</p> </li> <li> <p>TAG</p> </li> <li> <p>TENANCY</p> </li> </ul> <p>To determine valid values for a dimension, use the <code>GetDimensionValues</code> operation. </p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetReservationCoverageRequest} getReservationCoverageRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getReservationCoverageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetReservationCoverageResponse}
     */
    getReservationCoverage(xAmzTarget, getReservationCoverageRequest, opts, callback) {
      opts = opts || {};
      let postBody = getReservationCoverageRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getReservationCoverage");
      }
      // verify the required parameter 'getReservationCoverageRequest' is set
      if (getReservationCoverageRequest === undefined || getReservationCoverageRequest === null) {
        throw new Error("Missing the required parameter 'getReservationCoverageRequest' when calling getReservationCoverage");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetReservationCoverageResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetReservationCoverage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getReservationPurchaseRecommendation operation.
     * @callback module:api/DefaultApi~getReservationPurchaseRecommendationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetReservationPurchaseRecommendationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets recommendations for reservation purchases. These recommendations might help you to reduce your costs. Reservations provide a discounted hourly rate (up to 75%) compared to On-Demand pricing.</p> <p>Amazon Web Services generates your recommendations by identifying your On-Demand usage during a specific time period and collecting your usage into categories that are eligible for a reservation. After Amazon Web Services has these categories, it simulates every combination of reservations in each category of usage to identify the best number of each type of Reserved Instance (RI) to purchase to maximize your estimated savings. </p> <p>For example, Amazon Web Services automatically aggregates your Amazon EC2 Linux, shared tenancy, and c4 family usage in the US West (Oregon) Region and recommends that you buy size-flexible regional reservations to apply to the c4 family usage. Amazon Web Services recommends the smallest size instance in an instance family. This makes it easier to purchase a size-flexible Reserved Instance (RI). Amazon Web Services also shows the equal number of normalized units. This way, you can purchase any instance size that you want. For this example, your RI recommendation is for <code>c4.large</code> because that is the smallest size instance in the c4 instance family.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetReservationPurchaseRecommendationRequest} getReservationPurchaseRecommendationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getReservationPurchaseRecommendationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetReservationPurchaseRecommendationResponse}
     */
    getReservationPurchaseRecommendation(xAmzTarget, getReservationPurchaseRecommendationRequest, opts, callback) {
      opts = opts || {};
      let postBody = getReservationPurchaseRecommendationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getReservationPurchaseRecommendation");
      }
      // verify the required parameter 'getReservationPurchaseRecommendationRequest' is set
      if (getReservationPurchaseRecommendationRequest === undefined || getReservationPurchaseRecommendationRequest === null) {
        throw new Error("Missing the required parameter 'getReservationPurchaseRecommendationRequest' when calling getReservationPurchaseRecommendation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetReservationPurchaseRecommendationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetReservationPurchaseRecommendation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getReservationUtilization operation.
     * @callback module:api/DefaultApi~getReservationUtilizationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetReservationUtilizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the reservation utilization for your account. Management account in an organization have access to member accounts. You can filter data by dimensions in a time period. You can use <code>GetDimensionValues</code> to determine the possible dimension values. Currently, you can group only by <code>SUBSCRIPTION_ID</code>. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetReservationUtilizationRequest} getReservationUtilizationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getReservationUtilizationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetReservationUtilizationResponse}
     */
    getReservationUtilization(xAmzTarget, getReservationUtilizationRequest, opts, callback) {
      opts = opts || {};
      let postBody = getReservationUtilizationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getReservationUtilization");
      }
      // verify the required parameter 'getReservationUtilizationRequest' is set
      if (getReservationUtilizationRequest === undefined || getReservationUtilizationRequest === null) {
        throw new Error("Missing the required parameter 'getReservationUtilizationRequest' when calling getReservationUtilization");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetReservationUtilizationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetReservationUtilization', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRightsizingRecommendation operation.
     * @callback module:api/DefaultApi~getRightsizingRecommendationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetRightsizingRecommendationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates recommendations that help you save cost by identifying idle and underutilized Amazon EC2 instances.</p> <p>Recommendations are generated to either downsize or terminate instances, along with providing savings detail and metrics. For more information about calculation and function, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/ce-rightsizing.html\">Optimizing Your Cost with Rightsizing Recommendations</a> in the <i>Billing and Cost Management User Guide</i>.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetRightsizingRecommendationRequest} getRightsizingRecommendationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getRightsizingRecommendationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetRightsizingRecommendationResponse}
     */
    getRightsizingRecommendation(xAmzTarget, getRightsizingRecommendationRequest, opts, callback) {
      opts = opts || {};
      let postBody = getRightsizingRecommendationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getRightsizingRecommendation");
      }
      // verify the required parameter 'getRightsizingRecommendationRequest' is set
      if (getRightsizingRecommendationRequest === undefined || getRightsizingRecommendationRequest === null) {
        throw new Error("Missing the required parameter 'getRightsizingRecommendationRequest' when calling getRightsizingRecommendation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetRightsizingRecommendationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetRightsizingRecommendation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSavingsPlanPurchaseRecommendationDetails operation.
     * @callback module:api/DefaultApi~getSavingsPlanPurchaseRecommendationDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSavingsPlanPurchaseRecommendationDetailsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the details for a Savings Plan recommendation. These details include the hourly data-points that construct the new cost, coverage, and utilization charts.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetSavingsPlanPurchaseRecommendationDetailsRequest} getSavingsPlanPurchaseRecommendationDetailsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getSavingsPlanPurchaseRecommendationDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSavingsPlanPurchaseRecommendationDetailsResponse}
     */
    getSavingsPlanPurchaseRecommendationDetails(xAmzTarget, getSavingsPlanPurchaseRecommendationDetailsRequest, opts, callback) {
      opts = opts || {};
      let postBody = getSavingsPlanPurchaseRecommendationDetailsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getSavingsPlanPurchaseRecommendationDetails");
      }
      // verify the required parameter 'getSavingsPlanPurchaseRecommendationDetailsRequest' is set
      if (getSavingsPlanPurchaseRecommendationDetailsRequest === undefined || getSavingsPlanPurchaseRecommendationDetailsRequest === null) {
        throw new Error("Missing the required parameter 'getSavingsPlanPurchaseRecommendationDetailsRequest' when calling getSavingsPlanPurchaseRecommendationDetails");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetSavingsPlanPurchaseRecommendationDetailsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlanPurchaseRecommendationDetails', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSavingsPlansCoverage operation.
     * @callback module:api/DefaultApi~getSavingsPlansCoverageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSavingsPlansCoverageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves the Savings Plans covered for your account. This enables you to see how much of your cost is covered by a Savings Plan. An organization’s management account can see the coverage of the associated member accounts. This supports dimensions, Cost Categories, and nested expressions. For any time period, you can filter data for Savings Plans usage with the following dimensions:</p> <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>SERVICE</code> </p> </li> <li> <p> <code>INSTANCE_FAMILY</code> </p> </li> </ul> <p>To determine valid values for a dimension, use the <code>GetDimensionValues</code> operation.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetSavingsPlansCoverageRequest} getSavingsPlansCoverageRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~getSavingsPlansCoverageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSavingsPlansCoverageResponse}
     */
    getSavingsPlansCoverage(xAmzTarget, getSavingsPlansCoverageRequest, opts, callback) {
      opts = opts || {};
      let postBody = getSavingsPlansCoverageRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getSavingsPlansCoverage");
      }
      // verify the required parameter 'getSavingsPlansCoverageRequest' is set
      if (getSavingsPlansCoverageRequest === undefined || getSavingsPlansCoverageRequest === null) {
        throw new Error("Missing the required parameter 'getSavingsPlansCoverageRequest' when calling getSavingsPlansCoverage");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetSavingsPlansCoverageResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansCoverage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSavingsPlansPurchaseRecommendation operation.
     * @callback module:api/DefaultApi~getSavingsPlansPurchaseRecommendationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSavingsPlansPurchaseRecommendationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the Savings Plans recommendations for your account. First use <code>StartSavingsPlansPurchaseRecommendationGeneration</code> to generate a new set of recommendations, and then use <code>GetSavingsPlansPurchaseRecommendation</code> to retrieve them.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetSavingsPlansPurchaseRecommendationRequest} getSavingsPlansPurchaseRecommendationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getSavingsPlansPurchaseRecommendationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSavingsPlansPurchaseRecommendationResponse}
     */
    getSavingsPlansPurchaseRecommendation(xAmzTarget, getSavingsPlansPurchaseRecommendationRequest, opts, callback) {
      opts = opts || {};
      let postBody = getSavingsPlansPurchaseRecommendationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getSavingsPlansPurchaseRecommendation");
      }
      // verify the required parameter 'getSavingsPlansPurchaseRecommendationRequest' is set
      if (getSavingsPlansPurchaseRecommendationRequest === undefined || getSavingsPlansPurchaseRecommendationRequest === null) {
        throw new Error("Missing the required parameter 'getSavingsPlansPurchaseRecommendationRequest' when calling getSavingsPlansPurchaseRecommendation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetSavingsPlansPurchaseRecommendationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSavingsPlansUtilization operation.
     * @callback module:api/DefaultApi~getSavingsPlansUtilizationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSavingsPlansUtilizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves the Savings Plans utilization for your account across date ranges with daily or monthly granularity. Management account in an organization have access to member accounts. You can use <code>GetDimensionValues</code> in <code>SAVINGS_PLANS</code> to determine the possible dimension values.</p> <note> <p>You can't group by any dimension values for <code>GetSavingsPlansUtilization</code>.</p> </note>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetSavingsPlansUtilizationRequest} getSavingsPlansUtilizationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getSavingsPlansUtilizationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSavingsPlansUtilizationResponse}
     */
    getSavingsPlansUtilization(xAmzTarget, getSavingsPlansUtilizationRequest, opts, callback) {
      opts = opts || {};
      let postBody = getSavingsPlansUtilizationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getSavingsPlansUtilization");
      }
      // verify the required parameter 'getSavingsPlansUtilizationRequest' is set
      if (getSavingsPlansUtilizationRequest === undefined || getSavingsPlansUtilizationRequest === null) {
        throw new Error("Missing the required parameter 'getSavingsPlansUtilizationRequest' when calling getSavingsPlansUtilization");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetSavingsPlansUtilizationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilization', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSavingsPlansUtilizationDetails operation.
     * @callback module:api/DefaultApi~getSavingsPlansUtilizationDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSavingsPlansUtilizationDetailsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves attribute data along with aggregate utilization and savings data for a given time period. This doesn't support granular or grouped data (daily/monthly) in response. You can't retrieve data by dates in a single response similar to <code>GetSavingsPlanUtilization</code>, but you have the option to make multiple calls to <code>GetSavingsPlanUtilizationDetails</code> by providing individual dates. You can use <code>GetDimensionValues</code> in <code>SAVINGS_PLANS</code> to determine the possible dimension values.</p> <note> <p> <code>GetSavingsPlanUtilizationDetails</code> internally groups data by <code>SavingsPlansArn</code>.</p> </note>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetSavingsPlansUtilizationDetailsRequest} getSavingsPlansUtilizationDetailsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~getSavingsPlansUtilizationDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSavingsPlansUtilizationDetailsResponse}
     */
    getSavingsPlansUtilizationDetails(xAmzTarget, getSavingsPlansUtilizationDetailsRequest, opts, callback) {
      opts = opts || {};
      let postBody = getSavingsPlansUtilizationDetailsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getSavingsPlansUtilizationDetails");
      }
      // verify the required parameter 'getSavingsPlansUtilizationDetailsRequest' is set
      if (getSavingsPlansUtilizationDetailsRequest === undefined || getSavingsPlansUtilizationDetailsRequest === null) {
        throw new Error("Missing the required parameter 'getSavingsPlansUtilizationDetailsRequest' when calling getSavingsPlansUtilizationDetails");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetSavingsPlansUtilizationDetailsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilizationDetails', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTags operation.
     * @callback module:api/DefaultApi~getTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetTagsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Queries for available tag keys and tag values for a specified period. You can search the tag values for an arbitrary string. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetTagsRequest} getTagsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetTagsResponse}
     */
    getTags(xAmzTarget, getTagsRequest, opts, callback) {
      opts = opts || {};
      let postBody = getTagsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getTags");
      }
      // verify the required parameter 'getTagsRequest' is set
      if (getTagsRequest === undefined || getTagsRequest === null) {
        throw new Error("Missing the required parameter 'getTagsRequest' when calling getTags");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetTagsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetTags', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUsageForecast operation.
     * @callback module:api/DefaultApi~getUsageForecastCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetUsageForecastResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a forecast for how much Amazon Web Services predicts that you will use over the forecast time period that you select, based on your past usage. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetUsageForecastRequest} getUsageForecastRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getUsageForecastCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetUsageForecastResponse}
     */
    getUsageForecast(xAmzTarget, getUsageForecastRequest, opts, callback) {
      opts = opts || {};
      let postBody = getUsageForecastRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getUsageForecast");
      }
      // verify the required parameter 'getUsageForecastRequest' is set
      if (getUsageForecastRequest === undefined || getUsageForecastRequest === null) {
        throw new Error("Missing the required parameter 'getUsageForecastRequest' when calling getUsageForecast");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetUsageForecastResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.GetUsageForecast', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listCostAllocationTags operation.
     * @callback module:api/DefaultApi~listCostAllocationTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCostAllocationTagsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of cost allocation tags. All inputs in the API are optional and serve as filters. By default, all cost allocation tags are returned. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListCostAllocationTagsRequest} listCostAllocationTagsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listCostAllocationTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCostAllocationTagsResponse}
     */
    listCostAllocationTags(xAmzTarget, listCostAllocationTagsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listCostAllocationTagsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listCostAllocationTags");
      }
      // verify the required parameter 'listCostAllocationTagsRequest' is set
      if (listCostAllocationTagsRequest === undefined || listCostAllocationTagsRequest === null) {
        throw new Error("Missing the required parameter 'listCostAllocationTagsRequest' when calling listCostAllocationTags");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListCostAllocationTagsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.ListCostAllocationTags', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listCostCategoryDefinitions operation.
     * @callback module:api/DefaultApi~listCostCategoryDefinitionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCostCategoryDefinitionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the name, Amazon Resource Name (ARN), <code>NumberOfRules</code> and effective dates of all Cost Categories defined in the account. You have the option to use <code>EffectiveOn</code> to return a list of Cost Categories that were active on a specific date. If there is no <code>EffectiveOn</code> specified, you’ll see Cost Categories that are effective on the current date. If Cost Category is still effective, <code>EffectiveEnd</code> is omitted in the response. <code>ListCostCategoryDefinitions</code> supports pagination. The request can have a <code>MaxResults</code> range up to 100.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListCostCategoryDefinitionsRequest} listCostCategoryDefinitionsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listCostCategoryDefinitionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCostCategoryDefinitionsResponse}
     */
    listCostCategoryDefinitions(xAmzTarget, listCostCategoryDefinitionsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listCostCategoryDefinitionsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listCostCategoryDefinitions");
      }
      // verify the required parameter 'listCostCategoryDefinitionsRequest' is set
      if (listCostCategoryDefinitionsRequest === undefined || listCostCategoryDefinitionsRequest === null) {
        throw new Error("Missing the required parameter 'listCostCategoryDefinitionsRequest' when calling listCostCategoryDefinitions");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListCostCategoryDefinitionsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.ListCostCategoryDefinitions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listSavingsPlansPurchaseRecommendationGeneration operation.
     * @callback module:api/DefaultApi~listSavingsPlansPurchaseRecommendationGenerationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSavingsPlansPurchaseRecommendationGenerationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a list of your historical recommendation generations within the past 30 days.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListSavingsPlansPurchaseRecommendationGenerationRequest} listSavingsPlansPurchaseRecommendationGenerationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listSavingsPlansPurchaseRecommendationGenerationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSavingsPlansPurchaseRecommendationGenerationResponse}
     */
    listSavingsPlansPurchaseRecommendationGeneration(xAmzTarget, listSavingsPlansPurchaseRecommendationGenerationRequest, opts, callback) {
      opts = opts || {};
      let postBody = listSavingsPlansPurchaseRecommendationGenerationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listSavingsPlansPurchaseRecommendationGeneration");
      }
      // verify the required parameter 'listSavingsPlansPurchaseRecommendationGenerationRequest' is set
      if (listSavingsPlansPurchaseRecommendationGenerationRequest === undefined || listSavingsPlansPurchaseRecommendationGenerationRequest === null) {
        throw new Error("Missing the required parameter 'listSavingsPlansPurchaseRecommendationGenerationRequest' when calling listSavingsPlansPurchaseRecommendationGeneration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListSavingsPlansPurchaseRecommendationGenerationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.ListSavingsPlansPurchaseRecommendationGeneration', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTagsForResource operation.
     * @callback module:api/DefaultApi~listTagsForResourceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTagsForResourceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of resource tags associated with the resource specified by the Amazon Resource Name (ARN). 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListTagsForResourceRequest} listTagsForResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listTagsForResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTagsForResourceResponse}
     */
    listTagsForResource(xAmzTarget, listTagsForResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = listTagsForResourceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listTagsForResource");
      }
      // verify the required parameter 'listTagsForResourceRequest' is set
      if (listTagsForResourceRequest === undefined || listTagsForResourceRequest === null) {
        throw new Error("Missing the required parameter 'listTagsForResourceRequest' when calling listTagsForResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListTagsForResourceResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.ListTagsForResource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the provideAnomalyFeedback operation.
     * @callback module:api/DefaultApi~provideAnomalyFeedbackCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProvideAnomalyFeedbackResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Modifies the feedback property of a given cost anomaly. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ProvideAnomalyFeedbackRequest} provideAnomalyFeedbackRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~provideAnomalyFeedbackCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProvideAnomalyFeedbackResponse}
     */
    provideAnomalyFeedback(xAmzTarget, provideAnomalyFeedbackRequest, opts, callback) {
      opts = opts || {};
      let postBody = provideAnomalyFeedbackRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling provideAnomalyFeedback");
      }
      // verify the required parameter 'provideAnomalyFeedbackRequest' is set
      if (provideAnomalyFeedbackRequest === undefined || provideAnomalyFeedbackRequest === null) {
        throw new Error("Missing the required parameter 'provideAnomalyFeedbackRequest' when calling provideAnomalyFeedback");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProvideAnomalyFeedbackResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.ProvideAnomalyFeedback', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startSavingsPlansPurchaseRecommendationGeneration operation.
     * @callback module:api/DefaultApi~startSavingsPlansPurchaseRecommendationGenerationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartSavingsPlansPurchaseRecommendationGenerationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Requests a Savings Plans recommendation generation. This enables you to calculate a fresh set of Savings Plans recommendations that takes your latest usage data and current Savings Plans inventory into account. You can refresh Savings Plans recommendations up to three times daily for a consolidated billing family.</p> <note> <p> <code>StartSavingsPlansPurchaseRecommendationGeneration</code> has no request syntax because no input parameters are needed to support this operation.</p> </note>
     * @param {module:model/String} xAmzTarget 
     * @param {Object.<String, Object>} body 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~startSavingsPlansPurchaseRecommendationGenerationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartSavingsPlansPurchaseRecommendationGenerationResponse}
     */
    startSavingsPlansPurchaseRecommendationGeneration(xAmzTarget, body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling startSavingsPlansPurchaseRecommendationGeneration");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling startSavingsPlansPurchaseRecommendationGeneration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StartSavingsPlansPurchaseRecommendationGenerationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.StartSavingsPlansPurchaseRecommendationGeneration', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tagResource operation.
     * @callback module:api/DefaultApi~tagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>An API operation for adding one or more tags (key-value pairs) to a resource.</p> <p>You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value you specify replaces the previous value for that tag.</p> <p>Although the maximum number of array members is 200, user-tag maximum is 50. The remaining are reserved for Amazon Web Services use.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/TagResourceRequest} tagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~tagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    tagResource(xAmzTarget, tagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = tagResourceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling tagResource");
      }
      // verify the required parameter 'tagResourceRequest' is set
      if (tagResourceRequest === undefined || tagResourceRequest === null) {
        throw new Error("Missing the required parameter 'tagResourceRequest' when calling tagResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.TagResource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the untagResource operation.
     * @callback module:api/DefaultApi~untagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes one or more tags from a resource. Specify only tag keys in your request. Don't specify the value. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UntagResourceRequest} untagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~untagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    untagResource(xAmzTarget, untagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = untagResourceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling untagResource");
      }
      // verify the required parameter 'untagResourceRequest' is set
      if (untagResourceRequest === undefined || untagResourceRequest === null) {
        throw new Error("Missing the required parameter 'untagResourceRequest' when calling untagResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.UntagResource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAnomalyMonitor operation.
     * @callback module:api/DefaultApi~updateAnomalyMonitorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAnomalyMonitorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing cost anomaly monitor. The changes made are applied going forward, and doesn't change anomalies detected in the past. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UpdateAnomalyMonitorRequest} updateAnomalyMonitorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAnomalyMonitorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAnomalyMonitorResponse}
     */
    updateAnomalyMonitor(xAmzTarget, updateAnomalyMonitorRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAnomalyMonitorRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling updateAnomalyMonitor");
      }
      // verify the required parameter 'updateAnomalyMonitorRequest' is set
      if (updateAnomalyMonitorRequest === undefined || updateAnomalyMonitorRequest === null) {
        throw new Error("Missing the required parameter 'updateAnomalyMonitorRequest' when calling updateAnomalyMonitor");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAnomalyMonitorResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.UpdateAnomalyMonitor', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAnomalySubscription operation.
     * @callback module:api/DefaultApi~updateAnomalySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAnomalySubscriptionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates an existing cost anomaly subscription. Specify the fields that you want to update. Omitted fields are unchanged.</p> <note> <p>The JSON below describes the generic construct for each type. See <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_UpdateAnomalySubscription.html#API_UpdateAnomalySubscription_RequestParameters\">Request Parameters</a> for possible values as they apply to <code>AnomalySubscription</code>.</p> </note>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UpdateAnomalySubscriptionRequest} updateAnomalySubscriptionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAnomalySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAnomalySubscriptionResponse}
     */
    updateAnomalySubscription(xAmzTarget, updateAnomalySubscriptionRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAnomalySubscriptionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling updateAnomalySubscription");
      }
      // verify the required parameter 'updateAnomalySubscriptionRequest' is set
      if (updateAnomalySubscriptionRequest === undefined || updateAnomalySubscriptionRequest === null) {
        throw new Error("Missing the required parameter 'updateAnomalySubscriptionRequest' when calling updateAnomalySubscription");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAnomalySubscriptionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.UpdateAnomalySubscription', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateCostAllocationTagsStatus operation.
     * @callback module:api/DefaultApi~updateCostAllocationTagsStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateCostAllocationTagsStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates status for cost allocation tags in bulk, with maximum batch size of 20. If the tag status that's updated is the same as the existing tag status, the request doesn't fail. Instead, it doesn't have any effect on the tag status (for example, activating the active tag). 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UpdateCostAllocationTagsStatusRequest} updateCostAllocationTagsStatusRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateCostAllocationTagsStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateCostAllocationTagsStatusResponse}
     */
    updateCostAllocationTagsStatus(xAmzTarget, updateCostAllocationTagsStatusRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateCostAllocationTagsStatusRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling updateCostAllocationTagsStatus");
      }
      // verify the required parameter 'updateCostAllocationTagsStatusRequest' is set
      if (updateCostAllocationTagsStatusRequest === undefined || updateCostAllocationTagsStatusRequest === null) {
        throw new Error("Missing the required parameter 'updateCostAllocationTagsStatusRequest' when calling updateCostAllocationTagsStatus");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateCostAllocationTagsStatusResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.UpdateCostAllocationTagsStatus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateCostCategoryDefinition operation.
     * @callback module:api/DefaultApi~updateCostCategoryDefinitionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateCostCategoryDefinitionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing Cost Category. Changes made to the Cost Category rules will be used to categorize the current month’s expenses and future expenses. This won’t change categorization for the previous months.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UpdateCostCategoryDefinitionRequest} updateCostCategoryDefinitionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateCostCategoryDefinitionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateCostCategoryDefinitionResponse}
     */
    updateCostCategoryDefinition(xAmzTarget, updateCostCategoryDefinitionRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateCostCategoryDefinitionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling updateCostCategoryDefinition");
      }
      // verify the required parameter 'updateCostCategoryDefinitionRequest' is set
      if (updateCostCategoryDefinitionRequest === undefined || updateCostCategoryDefinitionRequest === null) {
        throw new Error("Missing the required parameter 'updateCostCategoryDefinitionRequest' when calling updateCostCategoryDefinition");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateCostCategoryDefinitionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSInsightsIndexService.UpdateCostCategoryDefinition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
