/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnomalySubscriptionFrequency from './AnomalySubscriptionFrequency';
import AnomalySubscriptionThresholdExpression from './AnomalySubscriptionThresholdExpression';

/**
 * The AnomalySubscription model module.
 * @module model/AnomalySubscription
 * @version 2017-10-25
 */
class AnomalySubscription {
    /**
     * Constructs a new <code>AnomalySubscription</code>.
     * &lt;p&gt;An &lt;code&gt;AnomalySubscription&lt;/code&gt; resource (also referred to as an alert subscription) sends notifications about specific anomalies that meet an alerting criteria defined by you.&lt;/p&gt; &lt;p&gt;You can specify the frequency of the alerts and the subscribers to notify.&lt;/p&gt; &lt;p&gt;Anomaly subscriptions can be associated with one or more &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalyMonitor.html\&quot;&gt; &lt;code&gt;AnomalyMonitor&lt;/code&gt; &lt;/a&gt; resources, and they only send notifications about anomalies detected by those associated monitors. You can also configure a threshold to further control which anomalies are included in the notifications.&lt;/p&gt; &lt;p&gt;Anomalies that don’t exceed the chosen threshold and therefore don’t trigger notifications from an anomaly subscription will still be available on the console and from the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetAnomalies.html\&quot;&gt; &lt;code&gt;GetAnomalies&lt;/code&gt; &lt;/a&gt; API.&lt;/p&gt;
     * @alias module:model/AnomalySubscription
     * @param monitorArnList {Array} 
     * @param subscribers {Array} 
     * @param frequency {module:model/AnomalySubscriptionFrequency} 
     * @param subscriptionName {String} 
     */
    constructor(monitorArnList, subscribers, frequency, subscriptionName) { 
        
        AnomalySubscription.initialize(this, monitorArnList, subscribers, frequency, subscriptionName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, monitorArnList, subscribers, frequency, subscriptionName) { 
        obj['MonitorArnList'] = monitorArnList;
        obj['Subscribers'] = subscribers;
        obj['Frequency'] = frequency;
        obj['SubscriptionName'] = subscriptionName;
    }

    /**
     * Constructs a <code>AnomalySubscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnomalySubscription} obj Optional instance to populate.
     * @return {module:model/AnomalySubscription} The populated <code>AnomalySubscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnomalySubscription();

            if (data.hasOwnProperty('SubscriptionArn')) {
                obj['SubscriptionArn'] = ApiClient.convertToType(data['SubscriptionArn'], 'String');
            }
            if (data.hasOwnProperty('AccountId')) {
                obj['AccountId'] = ApiClient.convertToType(data['AccountId'], 'String');
            }
            if (data.hasOwnProperty('MonitorArnList')) {
                obj['MonitorArnList'] = ApiClient.convertToType(data['MonitorArnList'], Array);
            }
            if (data.hasOwnProperty('Subscribers')) {
                obj['Subscribers'] = ApiClient.convertToType(data['Subscribers'], Array);
            }
            if (data.hasOwnProperty('Threshold')) {
                obj['Threshold'] = ApiClient.convertToType(data['Threshold'], 'Number');
            }
            if (data.hasOwnProperty('Frequency')) {
                obj['Frequency'] = ApiClient.convertToType(data['Frequency'], AnomalySubscriptionFrequency);
            }
            if (data.hasOwnProperty('SubscriptionName')) {
                obj['SubscriptionName'] = ApiClient.convertToType(data['SubscriptionName'], 'String');
            }
            if (data.hasOwnProperty('ThresholdExpression')) {
                obj['ThresholdExpression'] = AnomalySubscriptionThresholdExpression.constructFromObject(data['ThresholdExpression']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnomalySubscription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnomalySubscription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AnomalySubscription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `SubscriptionArn`
        if (data['SubscriptionArn']) { // data not null
          String.validateJSON(data['SubscriptionArn']);
        }
        // validate the optional field `AccountId`
        if (data['AccountId']) { // data not null
          String.validateJSON(data['AccountId']);
        }
        // validate the optional field `MonitorArnList`
        if (data['MonitorArnList']) { // data not null
          Array.validateJSON(data['MonitorArnList']);
        }
        // validate the optional field `Subscribers`
        if (data['Subscribers']) { // data not null
          Array.validateJSON(data['Subscribers']);
        }
        // validate the optional field `Threshold`
        if (data['Threshold']) { // data not null
          Number.validateJSON(data['Threshold']);
        }
        // validate the optional field `Frequency`
        if (data['Frequency']) { // data not null
          AnomalySubscriptionFrequency.validateJSON(data['Frequency']);
        }
        // validate the optional field `SubscriptionName`
        if (data['SubscriptionName']) { // data not null
          String.validateJSON(data['SubscriptionName']);
        }
        // validate the optional field `ThresholdExpression`
        if (data['ThresholdExpression']) { // data not null
          AnomalySubscriptionThresholdExpression.validateJSON(data['ThresholdExpression']);
        }

        return true;
    }


}

AnomalySubscription.RequiredProperties = ["MonitorArnList", "Subscribers", "Frequency", "SubscriptionName"];

/**
 * @member {String} SubscriptionArn
 */
AnomalySubscription.prototype['SubscriptionArn'] = undefined;

/**
 * @member {String} AccountId
 */
AnomalySubscription.prototype['AccountId'] = undefined;

/**
 * @member {Array} MonitorArnList
 */
AnomalySubscription.prototype['MonitorArnList'] = undefined;

/**
 * @member {Array} Subscribers
 */
AnomalySubscription.prototype['Subscribers'] = undefined;

/**
 * @member {Number} Threshold
 */
AnomalySubscription.prototype['Threshold'] = undefined;

/**
 * @member {module:model/AnomalySubscriptionFrequency} Frequency
 */
AnomalySubscription.prototype['Frequency'] = undefined;

/**
 * @member {String} SubscriptionName
 */
AnomalySubscription.prototype['SubscriptionName'] = undefined;

/**
 * @member {module:model/AnomalySubscriptionThresholdExpression} ThresholdExpression
 */
AnomalySubscription.prototype['ThresholdExpression'] = undefined;






export default AnomalySubscription;

