/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCostExplorerService);
  }
}(this, function(expect, AwsCostExplorerService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCostExplorerService.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createAnomalyMonitor', function() {
      it('should call createAnomalyMonitor successfully', function(done) {
        //uncomment below and update the code to test createAnomalyMonitor
        //instance.createAnomalyMonitor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAnomalySubscription', function() {
      it('should call createAnomalySubscription successfully', function(done) {
        //uncomment below and update the code to test createAnomalySubscription
        //instance.createAnomalySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCostCategoryDefinition', function() {
      it('should call createCostCategoryDefinition successfully', function(done) {
        //uncomment below and update the code to test createCostCategoryDefinition
        //instance.createCostCategoryDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAnomalyMonitor', function() {
      it('should call deleteAnomalyMonitor successfully', function(done) {
        //uncomment below and update the code to test deleteAnomalyMonitor
        //instance.deleteAnomalyMonitor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAnomalySubscription', function() {
      it('should call deleteAnomalySubscription successfully', function(done) {
        //uncomment below and update the code to test deleteAnomalySubscription
        //instance.deleteAnomalySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCostCategoryDefinition', function() {
      it('should call deleteCostCategoryDefinition successfully', function(done) {
        //uncomment below and update the code to test deleteCostCategoryDefinition
        //instance.deleteCostCategoryDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeCostCategoryDefinition', function() {
      it('should call describeCostCategoryDefinition successfully', function(done) {
        //uncomment below and update the code to test describeCostCategoryDefinition
        //instance.describeCostCategoryDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnomalies', function() {
      it('should call getAnomalies successfully', function(done) {
        //uncomment below and update the code to test getAnomalies
        //instance.getAnomalies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnomalyMonitors', function() {
      it('should call getAnomalyMonitors successfully', function(done) {
        //uncomment below and update the code to test getAnomalyMonitors
        //instance.getAnomalyMonitors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnomalySubscriptions', function() {
      it('should call getAnomalySubscriptions successfully', function(done) {
        //uncomment below and update the code to test getAnomalySubscriptions
        //instance.getAnomalySubscriptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCostAndUsage', function() {
      it('should call getCostAndUsage successfully', function(done) {
        //uncomment below and update the code to test getCostAndUsage
        //instance.getCostAndUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCostAndUsageWithResources', function() {
      it('should call getCostAndUsageWithResources successfully', function(done) {
        //uncomment below and update the code to test getCostAndUsageWithResources
        //instance.getCostAndUsageWithResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCostCategories', function() {
      it('should call getCostCategories successfully', function(done) {
        //uncomment below and update the code to test getCostCategories
        //instance.getCostCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCostForecast', function() {
      it('should call getCostForecast successfully', function(done) {
        //uncomment below and update the code to test getCostForecast
        //instance.getCostForecast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDimensionValues', function() {
      it('should call getDimensionValues successfully', function(done) {
        //uncomment below and update the code to test getDimensionValues
        //instance.getDimensionValues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReservationCoverage', function() {
      it('should call getReservationCoverage successfully', function(done) {
        //uncomment below and update the code to test getReservationCoverage
        //instance.getReservationCoverage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReservationPurchaseRecommendation', function() {
      it('should call getReservationPurchaseRecommendation successfully', function(done) {
        //uncomment below and update the code to test getReservationPurchaseRecommendation
        //instance.getReservationPurchaseRecommendation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReservationUtilization', function() {
      it('should call getReservationUtilization successfully', function(done) {
        //uncomment below and update the code to test getReservationUtilization
        //instance.getReservationUtilization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRightsizingRecommendation', function() {
      it('should call getRightsizingRecommendation successfully', function(done) {
        //uncomment below and update the code to test getRightsizingRecommendation
        //instance.getRightsizingRecommendation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSavingsPlanPurchaseRecommendationDetails', function() {
      it('should call getSavingsPlanPurchaseRecommendationDetails successfully', function(done) {
        //uncomment below and update the code to test getSavingsPlanPurchaseRecommendationDetails
        //instance.getSavingsPlanPurchaseRecommendationDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSavingsPlansCoverage', function() {
      it('should call getSavingsPlansCoverage successfully', function(done) {
        //uncomment below and update the code to test getSavingsPlansCoverage
        //instance.getSavingsPlansCoverage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSavingsPlansPurchaseRecommendation', function() {
      it('should call getSavingsPlansPurchaseRecommendation successfully', function(done) {
        //uncomment below and update the code to test getSavingsPlansPurchaseRecommendation
        //instance.getSavingsPlansPurchaseRecommendation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSavingsPlansUtilization', function() {
      it('should call getSavingsPlansUtilization successfully', function(done) {
        //uncomment below and update the code to test getSavingsPlansUtilization
        //instance.getSavingsPlansUtilization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSavingsPlansUtilizationDetails', function() {
      it('should call getSavingsPlansUtilizationDetails successfully', function(done) {
        //uncomment below and update the code to test getSavingsPlansUtilizationDetails
        //instance.getSavingsPlansUtilizationDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTags', function() {
      it('should call getTags successfully', function(done) {
        //uncomment below and update the code to test getTags
        //instance.getTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUsageForecast', function() {
      it('should call getUsageForecast successfully', function(done) {
        //uncomment below and update the code to test getUsageForecast
        //instance.getUsageForecast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCostAllocationTags', function() {
      it('should call listCostAllocationTags successfully', function(done) {
        //uncomment below and update the code to test listCostAllocationTags
        //instance.listCostAllocationTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCostCategoryDefinitions', function() {
      it('should call listCostCategoryDefinitions successfully', function(done) {
        //uncomment below and update the code to test listCostCategoryDefinitions
        //instance.listCostCategoryDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSavingsPlansPurchaseRecommendationGeneration', function() {
      it('should call listSavingsPlansPurchaseRecommendationGeneration successfully', function(done) {
        //uncomment below and update the code to test listSavingsPlansPurchaseRecommendationGeneration
        //instance.listSavingsPlansPurchaseRecommendationGeneration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('provideAnomalyFeedback', function() {
      it('should call provideAnomalyFeedback successfully', function(done) {
        //uncomment below and update the code to test provideAnomalyFeedback
        //instance.provideAnomalyFeedback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startSavingsPlansPurchaseRecommendationGeneration', function() {
      it('should call startSavingsPlansPurchaseRecommendationGeneration successfully', function(done) {
        //uncomment below and update the code to test startSavingsPlansPurchaseRecommendationGeneration
        //instance.startSavingsPlansPurchaseRecommendationGeneration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAnomalyMonitor', function() {
      it('should call updateAnomalyMonitor successfully', function(done) {
        //uncomment below and update the code to test updateAnomalyMonitor
        //instance.updateAnomalyMonitor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAnomalySubscription', function() {
      it('should call updateAnomalySubscription successfully', function(done) {
        //uncomment below and update the code to test updateAnomalySubscription
        //instance.updateAnomalySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCostAllocationTagsStatus', function() {
      it('should call updateCostAllocationTagsStatus successfully', function(done) {
        //uncomment below and update the code to test updateCostAllocationTagsStatus
        //instance.updateCostAllocationTagsStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCostCategoryDefinition', function() {
      it('should call updateCostCategoryDefinition successfully', function(done) {
        //uncomment below and update the code to test updateCostCategoryDefinition
        //instance.updateCostCategoryDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
