/*
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ReservationUtilizationGroupUtilization
 */
public class ReservationUtilizationGroupUtilizationTest {
    private final ReservationUtilizationGroupUtilization model = new ReservationUtilizationGroupUtilization();

    /**
     * Model tests for ReservationUtilizationGroupUtilization
     */
    @Test
    public void testReservationUtilizationGroupUtilization() {
        // TODO: test ReservationUtilizationGroupUtilization
    }

    /**
     * Test the property 'utilizationPercentage'
     */
    @Test
    public void utilizationPercentageTest() {
        // TODO: test utilizationPercentage
    }

    /**
     * Test the property 'utilizationPercentageInUnits'
     */
    @Test
    public void utilizationPercentageInUnitsTest() {
        // TODO: test utilizationPercentageInUnits
    }

    /**
     * Test the property 'purchasedHours'
     */
    @Test
    public void purchasedHoursTest() {
        // TODO: test purchasedHours
    }

    /**
     * Test the property 'purchasedUnits'
     */
    @Test
    public void purchasedUnitsTest() {
        // TODO: test purchasedUnits
    }

    /**
     * Test the property 'totalActualHours'
     */
    @Test
    public void totalActualHoursTest() {
        // TODO: test totalActualHours
    }

    /**
     * Test the property 'totalActualUnits'
     */
    @Test
    public void totalActualUnitsTest() {
        // TODO: test totalActualUnits
    }

    /**
     * Test the property 'unusedHours'
     */
    @Test
    public void unusedHoursTest() {
        // TODO: test unusedHours
    }

    /**
     * Test the property 'unusedUnits'
     */
    @Test
    public void unusedUnitsTest() {
        // TODO: test unusedUnits
    }

    /**
     * Test the property 'onDemandCostOfRIHoursUsed'
     */
    @Test
    public void onDemandCostOfRIHoursUsedTest() {
        // TODO: test onDemandCostOfRIHoursUsed
    }

    /**
     * Test the property 'netRISavings'
     */
    @Test
    public void netRISavingsTest() {
        // TODO: test netRISavings
    }

    /**
     * Test the property 'totalPotentialRISavings'
     */
    @Test
    public void totalPotentialRISavingsTest() {
        // TODO: test totalPotentialRISavings
    }

    /**
     * Test the property 'amortizedUpfrontFee'
     */
    @Test
    public void amortizedUpfrontFeeTest() {
        // TODO: test amortizedUpfrontFee
    }

    /**
     * Test the property 'amortizedRecurringFee'
     */
    @Test
    public void amortizedRecurringFeeTest() {
        // TODO: test amortizedRecurringFee
    }

    /**
     * Test the property 'totalAmortizedFee'
     */
    @Test
    public void totalAmortizedFeeTest() {
        // TODO: test totalAmortizedFee
    }

    /**
     * Test the property 'riCostForUnusedHours'
     */
    @Test
    public void riCostForUnusedHoursTest() {
        // TODO: test riCostForUnusedHours
    }

    /**
     * Test the property 'realizedSavings'
     */
    @Test
    public void realizedSavingsTest() {
        // TODO: test realizedSavings
    }

    /**
     * Test the property 'unrealizedSavings'
     */
    @Test
    public void unrealizedSavingsTest() {
        // TODO: test unrealizedSavings
    }

}
