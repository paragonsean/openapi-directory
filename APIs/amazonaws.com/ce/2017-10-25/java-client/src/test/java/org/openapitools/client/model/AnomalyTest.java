/*
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AnomalyAnomalyScore;
import org.openapitools.client.model.AnomalyFeedbackType;
import org.openapitools.client.model.AnomalyImpact;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Anomaly
 */
public class AnomalyTest {
    private final Anomaly model = new Anomaly();

    /**
     * Model tests for Anomaly
     */
    @Test
    public void testAnomaly() {
        // TODO: test Anomaly
    }

    /**
     * Test the property 'anomalyId'
     */
    @Test
    public void anomalyIdTest() {
        // TODO: test anomalyId
    }

    /**
     * Test the property 'anomalyStartDate'
     */
    @Test
    public void anomalyStartDateTest() {
        // TODO: test anomalyStartDate
    }

    /**
     * Test the property 'anomalyEndDate'
     */
    @Test
    public void anomalyEndDateTest() {
        // TODO: test anomalyEndDate
    }

    /**
     * Test the property 'dimensionValue'
     */
    @Test
    public void dimensionValueTest() {
        // TODO: test dimensionValue
    }

    /**
     * Test the property 'rootCauses'
     */
    @Test
    public void rootCausesTest() {
        // TODO: test rootCauses
    }

    /**
     * Test the property 'anomalyScore'
     */
    @Test
    public void anomalyScoreTest() {
        // TODO: test anomalyScore
    }

    /**
     * Test the property 'impact'
     */
    @Test
    public void impactTest() {
        // TODO: test impact
    }

    /**
     * Test the property 'monitorArn'
     */
    @Test
    public void monitorArnTest() {
        // TODO: test monitorArn
    }

    /**
     * Test the property 'feedback'
     */
    @Test
    public void feedbackTest() {
        // TODO: test feedback
    }

}
