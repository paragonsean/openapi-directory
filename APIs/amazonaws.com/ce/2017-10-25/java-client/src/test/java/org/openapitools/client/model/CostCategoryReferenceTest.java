/*
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CostCategoryReference
 */
public class CostCategoryReferenceTest {
    private final CostCategoryReference model = new CostCategoryReference();

    /**
     * Model tests for CostCategoryReference
     */
    @Test
    public void testCostCategoryReference() {
        // TODO: test CostCategoryReference
    }

    /**
     * Test the property 'costCategoryArn'
     */
    @Test
    public void costCategoryArnTest() {
        // TODO: test costCategoryArn
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'effectiveStart'
     */
    @Test
    public void effectiveStartTest() {
        // TODO: test effectiveStart
    }

    /**
     * Test the property 'effectiveEnd'
     */
    @Test
    public void effectiveEndTest() {
        // TODO: test effectiveEnd
    }

    /**
     * Test the property 'numberOfRules'
     */
    @Test
    public void numberOfRulesTest() {
        // TODO: test numberOfRules
    }

    /**
     * Test the property 'processingStatus'
     */
    @Test
    public void processingStatusTest() {
        // TODO: test processingStatus
    }

    /**
     * Test the property 'values'
     */
    @Test
    public void valuesTest() {
        // TODO: test values
    }

    /**
     * Test the property 'defaultValue'
     */
    @Test
    public void defaultValueTest() {
        // TODO: test defaultValue
    }

}
