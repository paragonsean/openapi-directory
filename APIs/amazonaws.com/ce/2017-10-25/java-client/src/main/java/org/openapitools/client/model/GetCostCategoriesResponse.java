/*
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetCostCategoriesResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:27.831158-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetCostCategoriesResponse {
  public static final String SERIALIZED_NAME_NEXT_PAGE_TOKEN = "NextPageToken";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_TOKEN)
  private String nextPageToken;

  public static final String SERIALIZED_NAME_COST_CATEGORY_NAMES = "CostCategoryNames";
  @SerializedName(SERIALIZED_NAME_COST_CATEGORY_NAMES)
  private List costCategoryNames;

  public static final String SERIALIZED_NAME_COST_CATEGORY_VALUES = "CostCategoryValues";
  @SerializedName(SERIALIZED_NAME_COST_CATEGORY_VALUES)
  private List costCategoryValues;

  public static final String SERIALIZED_NAME_RETURN_SIZE = "ReturnSize";
  @SerializedName(SERIALIZED_NAME_RETURN_SIZE)
  private Integer returnSize;

  public static final String SERIALIZED_NAME_TOTAL_SIZE = "TotalSize";
  @SerializedName(SERIALIZED_NAME_TOTAL_SIZE)
  private Integer totalSize;

  public GetCostCategoriesResponse() {
  }

  public GetCostCategoriesResponse nextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
    return this;
  }

  /**
   * Get nextPageToken
   * @return nextPageToken
   */
  @javax.annotation.Nullable
  public String getNextPageToken() {
    return nextPageToken;
  }

  public void setNextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
  }


  public GetCostCategoriesResponse costCategoryNames(List costCategoryNames) {
    this.costCategoryNames = costCategoryNames;
    return this;
  }

  /**
   * Get costCategoryNames
   * @return costCategoryNames
   */
  @javax.annotation.Nullable
  public List getCostCategoryNames() {
    return costCategoryNames;
  }

  public void setCostCategoryNames(List costCategoryNames) {
    this.costCategoryNames = costCategoryNames;
  }


  public GetCostCategoriesResponse costCategoryValues(List costCategoryValues) {
    this.costCategoryValues = costCategoryValues;
    return this;
  }

  /**
   * Get costCategoryValues
   * @return costCategoryValues
   */
  @javax.annotation.Nullable
  public List getCostCategoryValues() {
    return costCategoryValues;
  }

  public void setCostCategoryValues(List costCategoryValues) {
    this.costCategoryValues = costCategoryValues;
  }


  public GetCostCategoriesResponse returnSize(Integer returnSize) {
    this.returnSize = returnSize;
    return this;
  }

  /**
   * Get returnSize
   * @return returnSize
   */
  @javax.annotation.Nonnull
  public Integer getReturnSize() {
    return returnSize;
  }

  public void setReturnSize(Integer returnSize) {
    this.returnSize = returnSize;
  }


  public GetCostCategoriesResponse totalSize(Integer totalSize) {
    this.totalSize = totalSize;
    return this;
  }

  /**
   * Get totalSize
   * @return totalSize
   */
  @javax.annotation.Nonnull
  public Integer getTotalSize() {
    return totalSize;
  }

  public void setTotalSize(Integer totalSize) {
    this.totalSize = totalSize;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCostCategoriesResponse getCostCategoriesResponse = (GetCostCategoriesResponse) o;
    return Objects.equals(this.nextPageToken, getCostCategoriesResponse.nextPageToken) &&
        Objects.equals(this.costCategoryNames, getCostCategoriesResponse.costCategoryNames) &&
        Objects.equals(this.costCategoryValues, getCostCategoriesResponse.costCategoryValues) &&
        Objects.equals(this.returnSize, getCostCategoriesResponse.returnSize) &&
        Objects.equals(this.totalSize, getCostCategoriesResponse.totalSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextPageToken, costCategoryNames, costCategoryValues, returnSize, totalSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCostCategoriesResponse {\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("    costCategoryNames: ").append(toIndentedString(costCategoryNames)).append("\n");
    sb.append("    costCategoryValues: ").append(toIndentedString(costCategoryValues)).append("\n");
    sb.append("    returnSize: ").append(toIndentedString(returnSize)).append("\n");
    sb.append("    totalSize: ").append(toIndentedString(totalSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("NextPageToken");
    openapiFields.add("CostCategoryNames");
    openapiFields.add("CostCategoryValues");
    openapiFields.add("ReturnSize");
    openapiFields.add("TotalSize");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ReturnSize");
    openapiRequiredFields.add("TotalSize");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetCostCategoriesResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetCostCategoriesResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetCostCategoriesResponse is not found in the empty JSON string", GetCostCategoriesResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetCostCategoriesResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetCostCategoriesResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetCostCategoriesResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `NextPageToken`
      if (jsonObj.get("NextPageToken") != null && !jsonObj.get("NextPageToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextPageToken"));
      }
      // validate the optional field `CostCategoryNames`
      if (jsonObj.get("CostCategoryNames") != null && !jsonObj.get("CostCategoryNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CostCategoryNames"));
      }
      // validate the optional field `CostCategoryValues`
      if (jsonObj.get("CostCategoryValues") != null && !jsonObj.get("CostCategoryValues").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CostCategoryValues"));
      }
      // validate the required field `ReturnSize`
      Integer.validateJsonElement(jsonObj.get("ReturnSize"));
      // validate the required field `TotalSize`
      Integer.validateJsonElement(jsonObj.get("TotalSize"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetCostCategoriesResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetCostCategoriesResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetCostCategoriesResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetCostCategoriesResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetCostCategoriesResponse>() {
           @Override
           public void write(JsonWriter out, GetCostCategoriesResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetCostCategoriesResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetCostCategoriesResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetCostCategoriesResponse
   * @throws IOException if the JSON string is invalid with respect to GetCostCategoriesResponse
   */
  public static GetCostCategoriesResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetCostCategoriesResponse.class);
  }

  /**
   * Convert an instance of GetCostCategoriesResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

