/*
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountScope;
import org.openapitools.client.model.LookbackPeriodInDays;
import org.openapitools.client.model.PaymentOption;
import org.openapitools.client.model.SavingsPlansPurchaseRecommendationSavingsPlansPurchaseRecommendationSummary;
import org.openapitools.client.model.SupportedSavingsPlansType;
import org.openapitools.client.model.TermInYears;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:27.831158-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation {
  public static final String SERIALIZED_NAME_ACCOUNT_SCOPE = "AccountScope";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SCOPE)
  private AccountScope accountScope;

  public static final String SERIALIZED_NAME_SAVINGS_PLANS_TYPE = "SavingsPlansType";
  @SerializedName(SERIALIZED_NAME_SAVINGS_PLANS_TYPE)
  private SupportedSavingsPlansType savingsPlansType;

  public static final String SERIALIZED_NAME_TERM_IN_YEARS = "TermInYears";
  @SerializedName(SERIALIZED_NAME_TERM_IN_YEARS)
  private TermInYears termInYears;

  public static final String SERIALIZED_NAME_PAYMENT_OPTION = "PaymentOption";
  @SerializedName(SERIALIZED_NAME_PAYMENT_OPTION)
  private PaymentOption paymentOption;

  public static final String SERIALIZED_NAME_LOOKBACK_PERIOD_IN_DAYS = "LookbackPeriodInDays";
  @SerializedName(SERIALIZED_NAME_LOOKBACK_PERIOD_IN_DAYS)
  private LookbackPeriodInDays lookbackPeriodInDays;

  public static final String SERIALIZED_NAME_SAVINGS_PLANS_PURCHASE_RECOMMENDATION_DETAILS = "SavingsPlansPurchaseRecommendationDetails";
  @SerializedName(SERIALIZED_NAME_SAVINGS_PLANS_PURCHASE_RECOMMENDATION_DETAILS)
  private List savingsPlansPurchaseRecommendationDetails;

  public static final String SERIALIZED_NAME_SAVINGS_PLANS_PURCHASE_RECOMMENDATION_SUMMARY = "SavingsPlansPurchaseRecommendationSummary";
  @SerializedName(SERIALIZED_NAME_SAVINGS_PLANS_PURCHASE_RECOMMENDATION_SUMMARY)
  private SavingsPlansPurchaseRecommendationSavingsPlansPurchaseRecommendationSummary savingsPlansPurchaseRecommendationSummary;

  public GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation() {
  }

  public GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation accountScope(AccountScope accountScope) {
    this.accountScope = accountScope;
    return this;
  }

  /**
   * Get accountScope
   * @return accountScope
   */
  @javax.annotation.Nullable
  public AccountScope getAccountScope() {
    return accountScope;
  }

  public void setAccountScope(AccountScope accountScope) {
    this.accountScope = accountScope;
  }


  public GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation savingsPlansType(SupportedSavingsPlansType savingsPlansType) {
    this.savingsPlansType = savingsPlansType;
    return this;
  }

  /**
   * Get savingsPlansType
   * @return savingsPlansType
   */
  @javax.annotation.Nullable
  public SupportedSavingsPlansType getSavingsPlansType() {
    return savingsPlansType;
  }

  public void setSavingsPlansType(SupportedSavingsPlansType savingsPlansType) {
    this.savingsPlansType = savingsPlansType;
  }


  public GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation termInYears(TermInYears termInYears) {
    this.termInYears = termInYears;
    return this;
  }

  /**
   * Get termInYears
   * @return termInYears
   */
  @javax.annotation.Nullable
  public TermInYears getTermInYears() {
    return termInYears;
  }

  public void setTermInYears(TermInYears termInYears) {
    this.termInYears = termInYears;
  }


  public GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation paymentOption(PaymentOption paymentOption) {
    this.paymentOption = paymentOption;
    return this;
  }

  /**
   * Get paymentOption
   * @return paymentOption
   */
  @javax.annotation.Nullable
  public PaymentOption getPaymentOption() {
    return paymentOption;
  }

  public void setPaymentOption(PaymentOption paymentOption) {
    this.paymentOption = paymentOption;
  }


  public GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation lookbackPeriodInDays(LookbackPeriodInDays lookbackPeriodInDays) {
    this.lookbackPeriodInDays = lookbackPeriodInDays;
    return this;
  }

  /**
   * Get lookbackPeriodInDays
   * @return lookbackPeriodInDays
   */
  @javax.annotation.Nullable
  public LookbackPeriodInDays getLookbackPeriodInDays() {
    return lookbackPeriodInDays;
  }

  public void setLookbackPeriodInDays(LookbackPeriodInDays lookbackPeriodInDays) {
    this.lookbackPeriodInDays = lookbackPeriodInDays;
  }


  public GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation savingsPlansPurchaseRecommendationDetails(List savingsPlansPurchaseRecommendationDetails) {
    this.savingsPlansPurchaseRecommendationDetails = savingsPlansPurchaseRecommendationDetails;
    return this;
  }

  /**
   * Get savingsPlansPurchaseRecommendationDetails
   * @return savingsPlansPurchaseRecommendationDetails
   */
  @javax.annotation.Nullable
  public List getSavingsPlansPurchaseRecommendationDetails() {
    return savingsPlansPurchaseRecommendationDetails;
  }

  public void setSavingsPlansPurchaseRecommendationDetails(List savingsPlansPurchaseRecommendationDetails) {
    this.savingsPlansPurchaseRecommendationDetails = savingsPlansPurchaseRecommendationDetails;
  }


  public GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation savingsPlansPurchaseRecommendationSummary(SavingsPlansPurchaseRecommendationSavingsPlansPurchaseRecommendationSummary savingsPlansPurchaseRecommendationSummary) {
    this.savingsPlansPurchaseRecommendationSummary = savingsPlansPurchaseRecommendationSummary;
    return this;
  }

  /**
   * Get savingsPlansPurchaseRecommendationSummary
   * @return savingsPlansPurchaseRecommendationSummary
   */
  @javax.annotation.Nullable
  public SavingsPlansPurchaseRecommendationSavingsPlansPurchaseRecommendationSummary getSavingsPlansPurchaseRecommendationSummary() {
    return savingsPlansPurchaseRecommendationSummary;
  }

  public void setSavingsPlansPurchaseRecommendationSummary(SavingsPlansPurchaseRecommendationSavingsPlansPurchaseRecommendationSummary savingsPlansPurchaseRecommendationSummary) {
    this.savingsPlansPurchaseRecommendationSummary = savingsPlansPurchaseRecommendationSummary;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation getSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation = (GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation) o;
    return Objects.equals(this.accountScope, getSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.accountScope) &&
        Objects.equals(this.savingsPlansType, getSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.savingsPlansType) &&
        Objects.equals(this.termInYears, getSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.termInYears) &&
        Objects.equals(this.paymentOption, getSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.paymentOption) &&
        Objects.equals(this.lookbackPeriodInDays, getSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.lookbackPeriodInDays) &&
        Objects.equals(this.savingsPlansPurchaseRecommendationDetails, getSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.savingsPlansPurchaseRecommendationDetails) &&
        Objects.equals(this.savingsPlansPurchaseRecommendationSummary, getSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.savingsPlansPurchaseRecommendationSummary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountScope, savingsPlansType, termInYears, paymentOption, lookbackPeriodInDays, savingsPlansPurchaseRecommendationDetails, savingsPlansPurchaseRecommendationSummary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation {\n");
    sb.append("    accountScope: ").append(toIndentedString(accountScope)).append("\n");
    sb.append("    savingsPlansType: ").append(toIndentedString(savingsPlansType)).append("\n");
    sb.append("    termInYears: ").append(toIndentedString(termInYears)).append("\n");
    sb.append("    paymentOption: ").append(toIndentedString(paymentOption)).append("\n");
    sb.append("    lookbackPeriodInDays: ").append(toIndentedString(lookbackPeriodInDays)).append("\n");
    sb.append("    savingsPlansPurchaseRecommendationDetails: ").append(toIndentedString(savingsPlansPurchaseRecommendationDetails)).append("\n");
    sb.append("    savingsPlansPurchaseRecommendationSummary: ").append(toIndentedString(savingsPlansPurchaseRecommendationSummary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccountScope");
    openapiFields.add("SavingsPlansType");
    openapiFields.add("TermInYears");
    openapiFields.add("PaymentOption");
    openapiFields.add("LookbackPeriodInDays");
    openapiFields.add("SavingsPlansPurchaseRecommendationDetails");
    openapiFields.add("SavingsPlansPurchaseRecommendationSummary");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation is not found in the empty JSON string", GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AccountScope`
      if (jsonObj.get("AccountScope") != null && !jsonObj.get("AccountScope").isJsonNull()) {
        AccountScope.validateJsonElement(jsonObj.get("AccountScope"));
      }
      // validate the optional field `SavingsPlansType`
      if (jsonObj.get("SavingsPlansType") != null && !jsonObj.get("SavingsPlansType").isJsonNull()) {
        SupportedSavingsPlansType.validateJsonElement(jsonObj.get("SavingsPlansType"));
      }
      // validate the optional field `TermInYears`
      if (jsonObj.get("TermInYears") != null && !jsonObj.get("TermInYears").isJsonNull()) {
        TermInYears.validateJsonElement(jsonObj.get("TermInYears"));
      }
      // validate the optional field `PaymentOption`
      if (jsonObj.get("PaymentOption") != null && !jsonObj.get("PaymentOption").isJsonNull()) {
        PaymentOption.validateJsonElement(jsonObj.get("PaymentOption"));
      }
      // validate the optional field `LookbackPeriodInDays`
      if (jsonObj.get("LookbackPeriodInDays") != null && !jsonObj.get("LookbackPeriodInDays").isJsonNull()) {
        LookbackPeriodInDays.validateJsonElement(jsonObj.get("LookbackPeriodInDays"));
      }
      // validate the optional field `SavingsPlansPurchaseRecommendationDetails`
      if (jsonObj.get("SavingsPlansPurchaseRecommendationDetails") != null && !jsonObj.get("SavingsPlansPurchaseRecommendationDetails").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SavingsPlansPurchaseRecommendationDetails"));
      }
      // validate the optional field `SavingsPlansPurchaseRecommendationSummary`
      if (jsonObj.get("SavingsPlansPurchaseRecommendationSummary") != null && !jsonObj.get("SavingsPlansPurchaseRecommendationSummary").isJsonNull()) {
        SavingsPlansPurchaseRecommendationSavingsPlansPurchaseRecommendationSummary.validateJsonElement(jsonObj.get("SavingsPlansPurchaseRecommendationSummary"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.class));

       return (TypeAdapter<T>) new TypeAdapter<GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation>() {
           @Override
           public void write(JsonWriter out, GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation
   * @throws IOException if the JSON string is invalid with respect to GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation
   */
  public static GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation.class);
  }

  /**
   * Convert an instance of GetSavingsPlansPurchaseRecommendationResponseSavingsPlansPurchaseRecommendation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

