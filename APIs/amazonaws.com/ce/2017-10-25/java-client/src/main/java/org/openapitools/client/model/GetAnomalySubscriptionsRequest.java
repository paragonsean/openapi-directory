/*
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetAnomalySubscriptionsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:27.831158-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetAnomalySubscriptionsRequest {
  public static final String SERIALIZED_NAME_SUBSCRIPTION_ARN_LIST = "SubscriptionArnList";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_ARN_LIST)
  private List subscriptionArnList;

  public static final String SERIALIZED_NAME_MONITOR_ARN = "MonitorArn";
  @SerializedName(SERIALIZED_NAME_MONITOR_ARN)
  private String monitorArn;

  public static final String SERIALIZED_NAME_NEXT_PAGE_TOKEN = "NextPageToken";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_TOKEN)
  private String nextPageToken;

  public static final String SERIALIZED_NAME_MAX_RESULTS = "MaxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public GetAnomalySubscriptionsRequest() {
  }

  public GetAnomalySubscriptionsRequest subscriptionArnList(List subscriptionArnList) {
    this.subscriptionArnList = subscriptionArnList;
    return this;
  }

  /**
   * Get subscriptionArnList
   * @return subscriptionArnList
   */
  @javax.annotation.Nullable
  public List getSubscriptionArnList() {
    return subscriptionArnList;
  }

  public void setSubscriptionArnList(List subscriptionArnList) {
    this.subscriptionArnList = subscriptionArnList;
  }


  public GetAnomalySubscriptionsRequest monitorArn(String monitorArn) {
    this.monitorArn = monitorArn;
    return this;
  }

  /**
   * Get monitorArn
   * @return monitorArn
   */
  @javax.annotation.Nullable
  public String getMonitorArn() {
    return monitorArn;
  }

  public void setMonitorArn(String monitorArn) {
    this.monitorArn = monitorArn;
  }


  public GetAnomalySubscriptionsRequest nextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
    return this;
  }

  /**
   * Get nextPageToken
   * @return nextPageToken
   */
  @javax.annotation.Nullable
  public String getNextPageToken() {
    return nextPageToken;
  }

  public void setNextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
  }


  public GetAnomalySubscriptionsRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * Get maxResults
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAnomalySubscriptionsRequest getAnomalySubscriptionsRequest = (GetAnomalySubscriptionsRequest) o;
    return Objects.equals(this.subscriptionArnList, getAnomalySubscriptionsRequest.subscriptionArnList) &&
        Objects.equals(this.monitorArn, getAnomalySubscriptionsRequest.monitorArn) &&
        Objects.equals(this.nextPageToken, getAnomalySubscriptionsRequest.nextPageToken) &&
        Objects.equals(this.maxResults, getAnomalySubscriptionsRequest.maxResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subscriptionArnList, monitorArn, nextPageToken, maxResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAnomalySubscriptionsRequest {\n");
    sb.append("    subscriptionArnList: ").append(toIndentedString(subscriptionArnList)).append("\n");
    sb.append("    monitorArn: ").append(toIndentedString(monitorArn)).append("\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SubscriptionArnList");
    openapiFields.add("MonitorArn");
    openapiFields.add("NextPageToken");
    openapiFields.add("MaxResults");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAnomalySubscriptionsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAnomalySubscriptionsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAnomalySubscriptionsRequest is not found in the empty JSON string", GetAnomalySubscriptionsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAnomalySubscriptionsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAnomalySubscriptionsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `SubscriptionArnList`
      if (jsonObj.get("SubscriptionArnList") != null && !jsonObj.get("SubscriptionArnList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SubscriptionArnList"));
      }
      // validate the optional field `MonitorArn`
      if (jsonObj.get("MonitorArn") != null && !jsonObj.get("MonitorArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MonitorArn"));
      }
      // validate the optional field `NextPageToken`
      if (jsonObj.get("NextPageToken") != null && !jsonObj.get("NextPageToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextPageToken"));
      }
      // validate the optional field `MaxResults`
      if (jsonObj.get("MaxResults") != null && !jsonObj.get("MaxResults").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxResults"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAnomalySubscriptionsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAnomalySubscriptionsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAnomalySubscriptionsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAnomalySubscriptionsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAnomalySubscriptionsRequest>() {
           @Override
           public void write(JsonWriter out, GetAnomalySubscriptionsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAnomalySubscriptionsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAnomalySubscriptionsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAnomalySubscriptionsRequest
   * @throws IOException if the JSON string is invalid with respect to GetAnomalySubscriptionsRequest
   */
  public static GetAnomalySubscriptionsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAnomalySubscriptionsRequest.class);
  }

  /**
   * Convert an instance of GetAnomalySubscriptionsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

