openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>You can use the Cost Explorer API to programmatically query your\
    \ cost and usage data. You can query for aggregated data such as total monthly\
    \ costs or total daily usage. You can also query for granular data. This might\
    \ include the number of daily write operations for Amazon DynamoDB database tables\
    \ in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer\
    \ API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code>\
    \ </p> </li> </ul> <p>For information about the costs that are associated with\
    \ the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\"\
    >Amazon Web Services Cost Management Pricing</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Cost Explorer Service
  version: 2017-10-25
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: ce
  x-aws-signingName: ce
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ce-2017-10-25.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/ce/
servers:
- description: The general AWS Cost Explorer multi-region endpoint
  url: http://ce.us-east-1.amazonaws.com
- description: The general AWS Cost Explorer multi-region endpoint
  url: https://ce.us-east-1.amazonaws.com
- description: The general AWS Cost Explorer endpoint for China (Beijing) and China
    (Ningxia)
  url: http://ce.cn-northwest-1.amazonaws.com.cn
- description: The general AWS Cost Explorer endpoint for China (Beijing) and China
    (Ningxia)
  url: https://ce.cn-northwest-1.amazonaws.com.cn
security:
- hmac: []
paths:
  /#X-Amz-Target=AWSInsightsIndexService.CreateAnomalyMonitor:
    post:
      description: 'Creates a new cost anomaly detection monitor with the requested
        type and monitor specification. '
      operationId: CreateAnomalyMonitor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.CreateAnomalyMonitor
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnomalyMonitorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAnomalyMonitorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.CreateAnomalySubscription:
    post:
      description: 'Adds an alert subscription to a cost anomaly detection monitor.
        You can use each subscription to define subscribers with email or SNS notifications.
        Email subscribers can set an absolute or percentage threshold and a time frequency
        for receiving notifications. '
      operationId: CreateAnomalySubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.CreateAnomalySubscription
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnomalySubscriptionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAnomalySubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownMonitorException'
          description: UnknownMonitorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.CreateCostCategoryDefinition:
    post:
      description: Creates a new Cost Category with the requested name and rules.
      operationId: CreateCostCategoryDefinition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.CreateCostCategoryDefinition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCostCategoryDefinitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCostCategoryDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.DeleteAnomalyMonitor:
    post:
      description: 'Deletes a cost anomaly monitor. '
      operationId: DeleteAnomalyMonitor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.DeleteAnomalyMonitor
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAnomalyMonitorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAnomalyMonitorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownMonitorException'
          description: UnknownMonitorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.DeleteAnomalySubscription:
    post:
      description: 'Deletes a cost anomaly subscription. '
      operationId: DeleteAnomalySubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.DeleteAnomalySubscription
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAnomalySubscriptionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAnomalySubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownSubscriptionException'
          description: UnknownSubscriptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.DeleteCostCategoryDefinition:
    post:
      description: Deletes a Cost Category. Expenses from this month going forward
        will no longer be categorized with this Cost Category.
      operationId: DeleteCostCategoryDefinition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.DeleteCostCategoryDefinition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCostCategoryDefinitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCostCategoryDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.DescribeCostCategoryDefinition:
    post:
      description: "<p>Returns the name, Amazon Resource Name (ARN), rules, definition,\
        \ and effective dates of a Cost Category that's defined in the account.</p>\
        \ <p>You have the option to use <code>EffectiveOn</code> to return a Cost\
        \ Category that's active on a specific date. If there's no <code>EffectiveOn</code>\
        \ specified, you see a Cost Category that's effective on the current date.\
        \ If Cost Category is still effective, <code>EffectiveEnd</code> is omitted\
        \ in the response. </p>"
      operationId: DescribeCostCategoryDefinition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.DescribeCostCategoryDefinition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCostCategoryDefinitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCostCategoryDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetAnomalies:
    post:
      description: Retrieves all of the cost anomalies detected on your account during
        the time period that's specified by the <code>DateInterval</code> object.
        Anomalies are available for up to 90 days.
      operationId: GetAnomalies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetAnomalies
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAnomaliesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnomaliesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetAnomalyMonitors:
    post:
      description: 'Retrieves the cost anomaly monitor definitions for your account.
        You can filter using a list of cost anomaly monitor Amazon Resource Names
        (ARNs). '
      operationId: GetAnomalyMonitors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetAnomalyMonitors
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAnomalyMonitorsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnomalyMonitorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownMonitorException'
          description: UnknownMonitorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetAnomalySubscriptions:
    post:
      description: 'Retrieves the cost anomaly subscription objects for your account.
        You can filter using a list of cost anomaly monitor Amazon Resource Names
        (ARNs). '
      operationId: GetAnomalySubscriptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetAnomalySubscriptions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAnomalySubscriptionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnomalySubscriptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownSubscriptionException'
          description: UnknownSubscriptionException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetCostAndUsage:
    post:
      description: "<p>Retrieves cost and usage metrics for your account. You can\
        \ specify which cost and usage-related metric that you want the request to\
        \ return. For example, you can specify <code>BlendedCosts</code> or <code>UsageQuantity</code>.\
        \ You can also filter and group your data by various dimensions, such as <code>SERVICE</code>\
        \ or <code>AZ</code>, in a specific time range. For a complete list of valid\
        \ dimensions, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html\"\
        >GetDimensionValues</a> operation. Management account in an organization in\
        \ Organizations have access to all member accounts.</p> <p>For information\
        \ about filter limitations, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/billing-limits.html\"\
        >Quotas and restrictions</a> in the <i>Billing and Cost Management User Guide</i>.</p>"
      operationId: GetCostAndUsage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetCostAndUsage
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCostAndUsageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCostAndUsageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillExpirationException'
          description: BillExpirationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestChangedException'
          description: RequestChangedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetCostAndUsageWithResources:
    post:
      description: "<p>Retrieves cost and usage metrics with resources for your account.\
        \ You can specify which cost and usage-related metric, such as <code>BlendedCosts</code>\
        \ or <code>UsageQuantity</code>, that you want the request to return. You\
        \ can also filter and group your data by various dimensions, such as <code>SERVICE</code>\
        \ or <code>AZ</code>, in a specific time range. For a complete list of valid\
        \ dimensions, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html\"\
        >GetDimensionValues</a> operation. Management account in an organization in\
        \ Organizations have access to all member accounts. This API is currently\
        \ available for the Amazon Elastic Compute Cloud – Compute service only.</p>\
        \ <note> <p>This is an opt-in only feature. You can enable this feature from\
        \ the Cost Explorer Settings page. For information about how to access the\
        \ Settings page, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/ce-access.html\"\
        >Controlling Access for Cost Explorer</a> in the <i>Billing and Cost Management\
        \ User Guide</i>.</p> </note>"
      operationId: GetCostAndUsageWithResources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetCostAndUsageWithResources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCostAndUsageWithResourcesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCostAndUsageWithResourcesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillExpirationException'
          description: BillExpirationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestChangedException'
          description: RequestChangedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetCostCategories:
    post:
      description: "<p>Retrieves an array of Cost Category names and values incurred\
        \ cost.</p> <note> <p>If some Cost Category names and values are not associated\
        \ with any cost, they will not be returned by this API.</p> </note>"
      operationId: GetCostCategories
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetCostCategories
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCostCategoriesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCostCategoriesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillExpirationException'
          description: BillExpirationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestChangedException'
          description: RequestChangedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetCostForecast:
    post:
      description: "Retrieves a forecast for how much Amazon Web Services predicts\
        \ that you will spend over the forecast time period that you select, based\
        \ on your past costs. "
      operationId: GetCostForecast
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetCostForecast
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCostForecastRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCostForecastResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetDimensionValues:
    post:
      description: 'Retrieves all available filter values for a specified filter over
        a period of time. You can search the dimension values for an arbitrary string. '
      operationId: GetDimensionValues
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetDimensionValues
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDimensionValuesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDimensionValuesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillExpirationException'
          description: BillExpirationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestChangedException'
          description: RequestChangedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetReservationCoverage:
    post:
      description: "<p>Retrieves the reservation coverage for your account, which\
        \ you can use to see how much of your Amazon Elastic Compute Cloud, Amazon\
        \ ElastiCache, Amazon Relational Database Service, or Amazon Redshift usage\
        \ is covered by a reservation. An organization's management account can see\
        \ the coverage of the associated member accounts. This supports dimensions,\
        \ Cost Categories, and nested expressions. For any time period, you can filter\
        \ data about reservation usage by the following dimensions:</p> <ul> <li>\
        \ <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p> </li> <li> <p>DATABASE_ENGINE</p>\
        \ </li> <li> <p>DEPLOYMENT_OPTION</p> </li> <li> <p>INSTANCE_TYPE</p> </li>\
        \ <li> <p>LINKED_ACCOUNT</p> </li> <li> <p>OPERATING_SYSTEM</p> </li> <li>\
        \ <p>PLATFORM</p> </li> <li> <p>REGION</p> </li> <li> <p>SERVICE</p> </li>\
        \ <li> <p>TAG</p> </li> <li> <p>TENANCY</p> </li> </ul> <p>To determine valid\
        \ values for a dimension, use the <code>GetDimensionValues</code> operation.\
        \ </p>"
      operationId: GetReservationCoverage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetReservationCoverage
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReservationCoverageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationCoverageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetReservationPurchaseRecommendation:
    post:
      description: "<p>Gets recommendations for reservation purchases. These recommendations\
        \ might help you to reduce your costs. Reservations provide a discounted hourly\
        \ rate (up to 75%) compared to On-Demand pricing.</p> <p>Amazon Web Services\
        \ generates your recommendations by identifying your On-Demand usage during\
        \ a specific time period and collecting your usage into categories that are\
        \ eligible for a reservation. After Amazon Web Services has these categories,\
        \ it simulates every combination of reservations in each category of usage\
        \ to identify the best number of each type of Reserved Instance (RI) to purchase\
        \ to maximize your estimated savings. </p> <p>For example, Amazon Web Services\
        \ automatically aggregates your Amazon EC2 Linux, shared tenancy, and c4 family\
        \ usage in the US West (Oregon) Region and recommends that you buy size-flexible\
        \ regional reservations to apply to the c4 family usage. Amazon Web Services\
        \ recommends the smallest size instance in an instance family. This makes\
        \ it easier to purchase a size-flexible Reserved Instance (RI). Amazon Web\
        \ Services also shows the equal number of normalized units. This way, you\
        \ can purchase any instance size that you want. For this example, your RI\
        \ recommendation is for <code>c4.large</code> because that is the smallest\
        \ size instance in the c4 instance family.</p>"
      operationId: GetReservationPurchaseRecommendation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetReservationPurchaseRecommendation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReservationPurchaseRecommendationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationPurchaseRecommendationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetReservationUtilization:
    post:
      description: "Retrieves the reservation utilization for your account. Management\
        \ account in an organization have access to member accounts. You can filter\
        \ data by dimensions in a time period. You can use <code>GetDimensionValues</code>\
        \ to determine the possible dimension values. Currently, you can group only\
        \ by <code>SUBSCRIPTION_ID</code>. "
      operationId: GetReservationUtilization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetReservationUtilization
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReservationUtilizationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationUtilizationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetRightsizingRecommendation:
    post:
      description: "<p>Creates recommendations that help you save cost by identifying\
        \ idle and underutilized Amazon EC2 instances.</p> <p>Recommendations are\
        \ generated to either downsize or terminate instances, along with providing\
        \ savings detail and metrics. For more information about calculation and function,\
        \ see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/ce-rightsizing.html\"\
        >Optimizing Your Cost with Rightsizing Recommendations</a> in the <i>Billing\
        \ and Cost Management User Guide</i>.</p>"
      operationId: GetRightsizingRecommendation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetRightsizingRecommendation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRightsizingRecommendationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRightsizingRecommendationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlanPurchaseRecommendationDetails:
    post:
      description: "Retrieves the details for a Savings Plan recommendation. These\
        \ details include the hourly data-points that construct the new cost, coverage,\
        \ and utilization charts."
      operationId: GetSavingsPlanPurchaseRecommendationDetails
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetSavingsPlanPurchaseRecommendationDetails
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSavingsPlanPurchaseRecommendationDetailsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsPlanPurchaseRecommendationDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansCoverage:
    post:
      description: "<p>Retrieves the Savings Plans covered for your account. This\
        \ enables you to see how much of your cost is covered by a Savings Plan. An\
        \ organization’s management account can see the coverage of the associated\
        \ member accounts. This supports dimensions, Cost Categories, and nested expressions.\
        \ For any time period, you can filter data for Savings Plans usage with the\
        \ following dimensions:</p> <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p>\
        \ </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>SERVICE</code>\
        \ </p> </li> <li> <p> <code>INSTANCE_FAMILY</code> </p> </li> </ul> <p>To\
        \ determine valid values for a dimension, use the <code>GetDimensionValues</code>\
        \ operation.</p>"
      operationId: GetSavingsPlansCoverage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetSavingsPlansCoverage
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSavingsPlansCoverageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsPlansCoverageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation:
    post:
      description: "Retrieves the Savings Plans recommendations for your account.\
        \ First use <code>StartSavingsPlansPurchaseRecommendationGeneration</code>\
        \ to generate a new set of recommendations, and then use <code>GetSavingsPlansPurchaseRecommendation</code>\
        \ to retrieve them."
      operationId: GetSavingsPlansPurchaseRecommendation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSavingsPlansPurchaseRecommendationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsPlansPurchaseRecommendationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilization:
    post:
      description: <p>Retrieves the Savings Plans utilization for your account across
        date ranges with daily or monthly granularity. Management account in an organization
        have access to member accounts. You can use <code>GetDimensionValues</code>
        in <code>SAVINGS_PLANS</code> to determine the possible dimension values.</p>
        <note> <p>You can't group by any dimension values for <code>GetSavingsPlansUtilization</code>.</p>
        </note>
      operationId: GetSavingsPlansUtilization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetSavingsPlansUtilization
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSavingsPlansUtilizationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsPlansUtilizationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilizationDetails:
    post:
      description: "<p>Retrieves attribute data along with aggregate utilization and\
        \ savings data for a given time period. This doesn't support granular or grouped\
        \ data (daily/monthly) in response. You can't retrieve data by dates in a\
        \ single response similar to <code>GetSavingsPlanUtilization</code>, but you\
        \ have the option to make multiple calls to <code>GetSavingsPlanUtilizationDetails</code>\
        \ by providing individual dates. You can use <code>GetDimensionValues</code>\
        \ in <code>SAVINGS_PLANS</code> to determine the possible dimension values.</p>\
        \ <note> <p> <code>GetSavingsPlanUtilizationDetails</code> internally groups\
        \ data by <code>SavingsPlansArn</code>.</p> </note>"
      operationId: GetSavingsPlansUtilizationDetails
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetSavingsPlansUtilizationDetails
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSavingsPlansUtilizationDetailsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsPlansUtilizationDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetTags:
    post:
      description: 'Queries for available tag keys and tag values for a specified
        period. You can search the tag values for an arbitrary string. '
      operationId: GetTags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTagsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillExpirationException'
          description: BillExpirationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestChangedException'
          description: RequestChangedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.GetUsageForecast:
    post:
      description: "Retrieves a forecast for how much Amazon Web Services predicts\
        \ that you will use over the forecast time period that you select, based on\
        \ your past usage. "
      operationId: GetUsageForecast
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.GetUsageForecast
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUsageForecastRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsageForecastResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnresolvableUsageUnitException'
          description: UnresolvableUsageUnitException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.ListCostAllocationTags:
    post:
      description: "Get a list of cost allocation tags. All inputs in the API are\
        \ optional and serve as filters. By default, all cost allocation tags are\
        \ returned. "
      operationId: ListCostAllocationTags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.ListCostAllocationTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCostAllocationTagsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCostAllocationTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.ListCostCategoryDefinitions:
    post:
      description: "Returns the name, Amazon Resource Name (ARN), <code>NumberOfRules</code>\
        \ and effective dates of all Cost Categories defined in the account. You have\
        \ the option to use <code>EffectiveOn</code> to return a list of Cost Categories\
        \ that were active on a specific date. If there is no <code>EffectiveOn</code>\
        \ specified, you’ll see Cost Categories that are effective on the current\
        \ date. If Cost Category is still effective, <code>EffectiveEnd</code> is\
        \ omitted in the response. <code>ListCostCategoryDefinitions</code> supports\
        \ pagination. The request can have a <code>MaxResults</code> range up to 100."
      operationId: ListCostCategoryDefinitions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.ListCostCategoryDefinitions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCostCategoryDefinitionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCostCategoryDefinitionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.ListSavingsPlansPurchaseRecommendationGeneration:
    post:
      description: Retrieves a list of your historical recommendation generations
        within the past 30 days.
      operationId: ListSavingsPlansPurchaseRecommendationGeneration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.ListSavingsPlansPurchaseRecommendationGeneration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSavingsPlansPurchaseRecommendationGenerationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSavingsPlansPurchaseRecommendationGenerationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.ListTagsForResource:
    post:
      description: 'Returns a list of resource tags associated with the resource specified
        by the Amazon Resource Name (ARN). '
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.ProvideAnomalyFeedback:
    post:
      description: 'Modifies the feedback property of a given cost anomaly. '
      operationId: ProvideAnomalyFeedback
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.ProvideAnomalyFeedback
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvideAnomalyFeedbackRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvideAnomalyFeedbackResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.StartSavingsPlansPurchaseRecommendationGeneration:
    post:
      description: <p>Requests a Savings Plans recommendation generation. This enables
        you to calculate a fresh set of Savings Plans recommendations that takes your
        latest usage data and current Savings Plans inventory into account. You can
        refresh Savings Plans recommendations up to three times daily for a consolidated
        billing family.</p> <note> <p> <code>StartSavingsPlansPurchaseRecommendationGeneration</code>
        has no request syntax because no input parameters are needed to support this
        operation.</p> </note>
      operationId: StartSavingsPlansPurchaseRecommendationGeneration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.StartSavingsPlansPurchaseRecommendationGeneration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSavingsPlansPurchaseRecommendationGenerationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSavingsPlansPurchaseRecommendationGenerationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationExistsException'
          description: GenerationExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
          description: DataUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.TagResource:
    post:
      description: "<p>An API operation for adding one or more tags (key-value pairs)\
        \ to a resource.</p> <p>You can use the <code>TagResource</code> operation\
        \ with a resource that already has tags. If you specify a new tag key for\
        \ the resource, this tag is appended to the list of tags associated with the\
        \ resource. If you specify a tag key that is already associated with the resource,\
        \ the new tag value you specify replaces the previous value for that tag.</p>\
        \ <p>Although the maximum number of array members is 200, user-tag maximum\
        \ is 50. The remaining are reserved for Amazon Web Services use.</p>"
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.UntagResource:
    post:
      description: 'Removes one or more tags from a resource. Specify only tag keys
        in your request. Don''t specify the value. '
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.UpdateAnomalyMonitor:
    post:
      description: "Updates an existing cost anomaly monitor. The changes made are\
        \ applied going forward, and doesn't change anomalies detected in the past. "
      operationId: UpdateAnomalyMonitor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.UpdateAnomalyMonitor
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAnomalyMonitorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAnomalyMonitorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownMonitorException'
          description: UnknownMonitorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.UpdateAnomalySubscription:
    post:
      description: <p>Updates an existing cost anomaly subscription. Specify the fields
        that you want to update. Omitted fields are unchanged.</p> <note> <p>The JSON
        below describes the generic construct for each type. See <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_UpdateAnomalySubscription.html#API_UpdateAnomalySubscription_RequestParameters">Request
        Parameters</a> for possible values as they apply to <code>AnomalySubscription</code>.</p>
        </note>
      operationId: UpdateAnomalySubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.UpdateAnomalySubscription
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAnomalySubscriptionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAnomalySubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownMonitorException'
          description: UnknownMonitorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownSubscriptionException'
          description: UnknownSubscriptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.UpdateCostAllocationTagsStatus:
    post:
      description: "Updates status for cost allocation tags in bulk, with maximum\
        \ batch size of 20. If the tag status that's updated is the same as the existing\
        \ tag status, the request doesn't fail. Instead, it doesn't have any effect\
        \ on the tag status (for example, activating the active tag). "
      operationId: UpdateCostAllocationTagsStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.UpdateCostAllocationTagsStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCostAllocationTagsStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCostAllocationTagsStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSInsightsIndexService.UpdateCostCategoryDefinition:
    post:
      description: Updates an existing Cost Category. Changes made to the Cost Category
        rules will be used to categorize the current month’s expenses and future expenses.
        This won’t change categorization for the previous months.
      operationId: UpdateCostCategoryDefinition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSInsightsIndexService.UpdateCostCategoryDefinition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCostCategoryDefinitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCostCategoryDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateAnomalyMonitorResponse:
      example:
        MonitorArn: ""
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The unique identifier of your newly created cost anomaly
              detection monitor.
      required:
      - MonitorArn
      type: object
    CreateAnomalyMonitorRequest:
      example:
        ResourceTags: ""
        AnomalyMonitor:
          LastUpdatedDate: ""
          CreationDate: ""
          LastEvaluatedDate: ""
          MonitorType: ""
          MonitorArn: ""
          MonitorName: ""
          MonitorSpecification:
            Not:
              Not: null
              Or: ""
              And: ""
              Dimensions:
                MatchOptions: ""
                Values: ""
                Key: ""
              CostCategories:
                MatchOptions: ""
                Values: ""
                Key: Key
              Tags:
                MatchOptions: ""
                Values: ""
                Key: ""
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          MonitorDimension: ""
          DimensionalValueCount: ""
      properties:
        AnomalyMonitor:
          $ref: '#/components/schemas/CreateAnomalyMonitorRequest_AnomalyMonitor'
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: "<p>An optional list of tags to associate with the specified\
              \ <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalyMonitor.html\"\
              > <code>AnomalyMonitor</code> </a>. You can use resource tags to control\
              \ access to your <code>monitor</code> using IAM policies.</p> <p>Each\
              \ tag consists of a key and a value, and each key must be unique for\
              \ the resource. The following restrictions apply to resource tags:</p>\
              \ <ul> <li> <p>Although the maximum number of array members is 200,\
              \ you can assign a maximum of 50 user-tags to one resource. The remaining\
              \ are reserved for Amazon Web Services use</p> </li> <li> <p>The maximum\
              \ length of a key is 128 characters</p> </li> <li> <p>The maximum length\
              \ of a value is 256 characters</p> </li> <li> <p>Keys and values can\
              \ only contain alphanumeric characters, spaces, and any of the following:\
              \ <code>_.:/=+@-</code> </p> </li> <li> <p>Keys and values are case\
              \ sensitive</p> </li> <li> <p>Keys and values are trimmed for any leading\
              \ or trailing whitespaces</p> </li> <li> <p>Don’t use <code>aws:</code>\
              \ as a prefix for your keys. This prefix is reserved for Amazon Web\
              \ Services use</p> </li> </ul>"
      required:
      - AnomalyMonitor
      title: CreateAnomalyMonitorRequest
      type: object
    LimitExceededException: {}
    CreateAnomalySubscriptionResponse:
      example:
        SubscriptionArn: ""
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The unique identifier of your newly created cost anomaly
              subscription. '
      required:
      - SubscriptionArn
      type: object
    CreateAnomalySubscriptionRequest:
      example:
        ResourceTags: ""
        AnomalySubscription:
          MonitorArnList: ""
          AccountId: ""
          Frequency: ""
          SubscriptionName: ""
          Subscribers: ""
          SubscriptionArn: ""
          Threshold: ""
          ThresholdExpression:
            Not:
              Not: null
              Or: ""
              And: ""
              Dimensions:
                MatchOptions: ""
                Values: ""
                Key: ""
              CostCategories:
                MatchOptions: ""
                Values: ""
                Key: Key
              Tags:
                MatchOptions: ""
                Values: ""
                Key: ""
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
      properties:
        AnomalySubscription:
          $ref: '#/components/schemas/CreateAnomalySubscriptionRequest_AnomalySubscription'
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: "<p>An optional list of tags to associate with the specified\
              \ <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalySubscription.html\"\
              > <code>AnomalySubscription</code> </a>. You can use resource tags to\
              \ control access to your <code>subscription</code> using IAM policies.</p>\
              \ <p>Each tag consists of a key and a value, and each key must be unique\
              \ for the resource. The following restrictions apply to resource tags:</p>\
              \ <ul> <li> <p>Although the maximum number of array members is 200,\
              \ you can assign a maximum of 50 user-tags to one resource. The remaining\
              \ are reserved for Amazon Web Services use</p> </li> <li> <p>The maximum\
              \ length of a key is 128 characters</p> </li> <li> <p>The maximum length\
              \ of a value is 256 characters</p> </li> <li> <p>Keys and values can\
              \ only contain alphanumeric characters, spaces, and any of the following:\
              \ <code>_.:/=+@-</code> </p> </li> <li> <p>Keys and values are case\
              \ sensitive</p> </li> <li> <p>Keys and values are trimmed for any leading\
              \ or trailing whitespaces</p> </li> <li> <p>Don’t use <code>aws:</code>\
              \ as a prefix for your keys. This prefix is reserved for Amazon Web\
              \ Services use</p> </li> </ul>"
      required:
      - AnomalySubscription
      title: CreateAnomalySubscriptionRequest
      type: object
    UnknownMonitorException: {}
    CreateCostCategoryDefinitionResponse:
      example:
        CostCategoryArn: ""
        EffectiveStart: ""
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The unique identifier for your newly created Cost Category. '
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The Cost Category's effective start date. It can only be
              a billing start date (first day of the month).
      type: object
    CreateCostCategoryDefinitionRequest:
      example:
        DefaultValue: DefaultValue
        ResourceTags: ""
        EffectiveStart: ""
        SplitChargeRules: ""
        RuleVersion: CostCategoryExpression.v1
        Rules: ""
        Name: Name
      properties:
        Name:
          description: The unique name of the Cost Category.
          maxLength: 50
          minLength: 1
          type: string
          x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: "The Cost Category's effective start date. It can only be\
              \ a billing start date (first day of the month). If the date isn't provided,\
              \ it's the first day of the current month. Dates can't be before the\
              \ previous twelve months, or in the future."
        RuleVersion:
          $ref: '#/components/schemas/CostCategoryRuleVersion'
        Rules:
          allOf:
          - $ref: '#/components/schemas/CostCategoryRulesList'
          - description: "The Cost Category rules used to categorize costs. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CostCategoryRule.html\"\
              >CostCategoryRule</a>."
        DefaultValue:
          description: The default value for the cost category.
          maxLength: 50
          minLength: 1
          type: string
          x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
        SplitChargeRules:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRulesList'
          - description: ' The split charge rules used to allocate your charges between
              your Cost Category values. '
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: "<p>An optional list of tags to associate with the specified\
              \ <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CostCategory.html\"\
              > <code>CostCategory</code> </a>. You can use resource tags to control\
              \ access to your <code>cost category</code> using IAM policies.</p>\
              \ <p>Each tag consists of a key and a value, and each key must be unique\
              \ for the resource. The following restrictions apply to resource tags:</p>\
              \ <ul> <li> <p>Although the maximum number of array members is 200,\
              \ you can assign a maximum of 50 user-tags to one resource. The remaining\
              \ are reserved for Amazon Web Services use</p> </li> <li> <p>The maximum\
              \ length of a key is 128 characters</p> </li> <li> <p>The maximum length\
              \ of a value is 256 characters</p> </li> <li> <p>Keys and values can\
              \ only contain alphanumeric characters, spaces, and any of the following:\
              \ <code>_.:/=+@-</code> </p> </li> <li> <p>Keys and values are case\
              \ sensitive</p> </li> <li> <p>Keys and values are trimmed for any leading\
              \ or trailing whitespaces</p> </li> <li> <p>Don’t use <code>aws:</code>\
              \ as a prefix for your keys. This prefix is reserved for Amazon Web\
              \ Services use</p> </li> </ul>"
      required:
      - Name
      - RuleVersion
      - Rules
      title: CreateCostCategoryDefinitionRequest
      type: object
    ServiceQuotaExceededException: {}
    DeleteAnomalyMonitorResponse:
      properties: {}
      type: object
    DeleteAnomalyMonitorRequest:
      example:
        MonitorArn: ""
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The unique identifier of the cost anomaly monitor that you
              want to delete. '
      required:
      - MonitorArn
      title: DeleteAnomalyMonitorRequest
      type: object
    DeleteAnomalySubscriptionResponse:
      properties: {}
      type: object
    DeleteAnomalySubscriptionRequest:
      example:
        SubscriptionArn: ""
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The unique identifier of the cost anomaly subscription that
              you want to delete. '
      required:
      - SubscriptionArn
      title: DeleteAnomalySubscriptionRequest
      type: object
    UnknownSubscriptionException: {}
    DeleteCostCategoryDefinitionResponse:
      example:
        CostCategoryArn: ""
        EffectiveEnd: ""
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The unique identifier for your Cost Category. '
        EffectiveEnd:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: 'The effective end date of the Cost Category as a result
              of deleting it. No costs after this date is categorized by the deleted
              Cost Category. '
      type: object
    DeleteCostCategoryDefinitionRequest:
      example:
        CostCategoryArn: ""
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The unique identifier for your Cost Category. '
      required:
      - CostCategoryArn
      title: DeleteCostCategoryDefinitionRequest
      type: object
    ResourceNotFoundException: {}
    DescribeCostCategoryDefinitionResponse:
      example:
        CostCategory:
          CostCategoryArn: ""
          EffectiveEnd: ""
          DefaultValue: DefaultValue
          EffectiveStart: ""
          SplitChargeRules: ""
          RuleVersion: CostCategoryExpression.v1
          Rules: ""
          ProcessingStatus: ""
          Name: Name
      properties:
        CostCategory:
          $ref: '#/components/schemas/CostCategory'
      type: object
    DescribeCostCategoryDefinitionRequest:
      example:
        CostCategoryArn: ""
        EffectiveOn: ""
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The unique identifier for your Cost Category. '
        EffectiveOn:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: 'The date when the Cost Category was effective. '
      required:
      - CostCategoryArn
      title: DescribeCostCategoryDefinitionRequest
      type: object
    GetAnomaliesResponse:
      example:
        NextPageToken: ""
        Anomalies: ""
      properties:
        Anomalies:
          allOf:
          - $ref: '#/components/schemas/Anomalies'
          - description: 'A list of cost anomalies. '
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: 'The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size. '
      required:
      - Anomalies
      type: object
    GetAnomaliesRequest:
      example:
        TotalImpact:
          StartValue: ""
          EndValue: ""
          NumericOperator: ""
        Feedback: ""
        MonitorArn: ""
        NextPageToken: ""
        MaxResults: ""
        DateInterval:
          StartDate: ""
          EndDate: ""
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'Retrieves all of the cost anomalies detected for a specific
              cost anomaly monitor Amazon Resource Name (ARN). '
        DateInterval:
          $ref: '#/components/schemas/GetAnomaliesRequest_DateInterval'
        Feedback:
          allOf:
          - $ref: '#/components/schemas/AnomalyFeedbackType'
          - description: 'Filters anomaly results by the feedback field on the anomaly
              object. '
        TotalImpact:
          $ref: '#/components/schemas/GetAnomaliesRequest_TotalImpact'
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: 'The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size. '
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: 'The number of entries a paginated response contains. '
      required:
      - DateInterval
      title: GetAnomaliesRequest
      type: object
    InvalidNextTokenException: {}
    GetAnomalyMonitorsResponse:
      example:
        NextPageToken: ""
        AnomalyMonitors: ""
      properties:
        AnomalyMonitors:
          allOf:
          - $ref: '#/components/schemas/AnomalyMonitors'
          - description: 'A list of cost anomaly monitors that includes the detailed
              metadata for each monitor. '
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: 'The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size. '
      required:
      - AnomalyMonitors
      type: object
    GetAnomalyMonitorsRequest:
      example:
        MonitorArnList: ""
        NextPageToken: ""
        MaxResults: ""
      properties:
        MonitorArnList:
          allOf:
          - $ref: '#/components/schemas/Values'
          - description: 'A list of cost anomaly monitor ARNs. '
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: 'The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size. '
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: 'The number of entries that a paginated response contains. '
      title: GetAnomalyMonitorsRequest
      type: object
    GetAnomalySubscriptionsResponse:
      example:
        AnomalySubscriptions: ""
        NextPageToken: ""
      properties:
        AnomalySubscriptions:
          allOf:
          - $ref: '#/components/schemas/AnomalySubscriptions'
          - description: 'A list of cost anomaly subscriptions that includes the detailed
              metadata for each one. '
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: 'The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size. '
      required:
      - AnomalySubscriptions
      type: object
    GetAnomalySubscriptionsRequest:
      example:
        MonitorArn: ""
        NextPageToken: ""
        SubscriptionArnList: ""
        MaxResults: ""
      properties:
        SubscriptionArnList:
          allOf:
          - $ref: '#/components/schemas/Values'
          - description: 'A list of cost anomaly subscription ARNs. '
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'Cost anomaly monitor ARNs. '
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: 'The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size. '
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: 'The number of entries a paginated response contains. '
      title: GetAnomalySubscriptionsRequest
      type: object
    GetCostAndUsageResponse:
      example:
        GroupDefinitions: ""
        ResultsByTime: ""
        NextPageToken: ""
        DimensionValueAttributes: ""
      properties:
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
        GroupDefinitions:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: The groups that are specified by the <code>Filter</code>
              or <code>GroupBy</code> parameters in the request.
        ResultsByTime:
          allOf:
          - $ref: '#/components/schemas/ResultsByTime'
          - description: The time period that's covered by the results in the response.
        DimensionValueAttributes:
          allOf:
          - $ref: '#/components/schemas/DimensionValuesWithAttributesList'
          - description: "The attributes that apply to a specific dimension value.\
              \ For example, if the value is a linked account, the attribute is that\
              \ account name."
      type: object
    GetCostAndUsageRequest:
      example:
        Metrics: ""
        GroupBy: ""
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        NextPageToken: ""
        Granularity: ""
      properties:
        TimePeriod:
          $ref: '#/components/schemas/GetCostAndUsageRequest_TimePeriod'
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: "Sets the Amazon Web Services cost granularity to <code>MONTHLY</code>\
              \ or <code>DAILY</code>, or <code>HOURLY</code>. If <code>Granularity</code>\
              \ isn't set, the response object doesn't include the <code>Granularity</code>,\
              \ either <code>MONTHLY</code> or <code>DAILY</code>, or <code>HOURLY</code>. "
        Filter:
          $ref: '#/components/schemas/GetCostAndUsageRequest_Filter'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MetricNames'
          - description: "<p>Which metrics are returned in the query. For more information\
              \ about blended and unblended rates, see <a href=\"http://aws.amazon.com/premiumsupport/knowledge-center/blended-rates-intro/\"\
              >Why does the \"blended\" annotation appear on some line items in my\
              \ bill?</a>. </p> <p>Valid values are <code>AmortizedCost</code>, <code>BlendedCost</code>,\
              \ <code>NetAmortizedCost</code>, <code>NetUnblendedCost</code>, <code>NormalizedUsageAmount</code>,\
              \ <code>UnblendedCost</code>, and <code>UsageQuantity</code>. </p> <note>\
              \ <p>If you return the <code>UsageQuantity</code> metric, the service\
              \ aggregates all usage numbers without taking into account the units.\
              \ For example, if you aggregate <code>usageQuantity</code> across all\
              \ of Amazon EC2, the results aren't meaningful because Amazon EC2 compute\
              \ hours and data transfer are measured in different units (for example,\
              \ hours and GB). To get more meaningful <code>UsageQuantity</code> metrics,\
              \ filter by <code>UsageType</code> or <code>UsageTypeGroups</code>.\
              \ </p> </note> <p> <code>Metrics</code> is required for <code>GetCostAndUsage</code>\
              \ requests.</p>"
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: "<p>You can group Amazon Web Services costs using up to two\
              \ different groups, either dimensions, tag keys, cost categories, or\
              \ any two group by types.</p> <p>Valid values for the <code>DIMENSION</code>\
              \ type are <code>AZ</code>, <code>INSTANCE_TYPE</code>, <code>LEGAL_ENTITY_NAME</code>,\
              \ <code>INVOICING_ENTITY</code>, <code>LINKED_ACCOUNT</code>, <code>OPERATION</code>,\
              \ <code>PLATFORM</code>, <code>PURCHASE_TYPE</code>, <code>SERVICE</code>,\
              \ <code>TENANCY</code>, <code>RECORD_TYPE</code>, and <code>USAGE_TYPE</code>.</p>\
              \ <p>When you group by the <code>TAG</code> type and include a valid\
              \ tag key, you get all tag values, including empty strings.</p>"
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
      required:
      - Granularity
      - Metrics
      - TimePeriod
      title: GetCostAndUsageRequest
      type: object
    BillExpirationException: {}
    DataUnavailableException: {}
    RequestChangedException: {}
    GetCostAndUsageWithResourcesResponse:
      example:
        GroupDefinitions: ""
        ResultsByTime: ""
        NextPageToken: ""
        DimensionValueAttributes: ""
      properties:
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
        GroupDefinitions:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: The groups that are specified by the <code>Filter</code>
              or <code>GroupBy</code> parameters in the request.
        ResultsByTime:
          allOf:
          - $ref: '#/components/schemas/ResultsByTime'
          - description: The time period that's covered by the results in the response.
        DimensionValueAttributes:
          allOf:
          - $ref: '#/components/schemas/DimensionValuesWithAttributesList'
          - description: "The attributes that apply to a specific dimension value.\
              \ For example, if the value is a linked account, the attribute is that\
              \ account name."
      type: object
    GetCostAndUsageWithResourcesRequest:
      example:
        Metrics: ""
        GroupBy: ""
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        NextPageToken: ""
        Granularity: ""
      properties:
        TimePeriod:
          $ref: '#/components/schemas/GetCostAndUsageWithResourcesRequest_TimePeriod'
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: "Sets the Amazon Web Services cost granularity to <code>MONTHLY</code>,\
              \ <code>DAILY</code>, or <code>HOURLY</code>. If <code>Granularity</code>\
              \ isn't set, the response object doesn't include the <code>Granularity</code>,\
              \ <code>MONTHLY</code>, <code>DAILY</code>, or <code>HOURLY</code>. "
        Filter:
          $ref: '#/components/schemas/GetCostAndUsageWithResourcesRequest_Filter'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MetricNames'
          - description: "<p>Which metrics are returned in the query. For more information\
              \ about blended and unblended rates, see <a href=\"http://aws.amazon.com/premiumsupport/knowledge-center/blended-rates-intro/\"\
              >Why does the \"blended\" annotation appear on some line items in my\
              \ bill?</a>. </p> <p>Valid values are <code>AmortizedCost</code>, <code>BlendedCost</code>,\
              \ <code>NetAmortizedCost</code>, <code>NetUnblendedCost</code>, <code>NormalizedUsageAmount</code>,\
              \ <code>UnblendedCost</code>, and <code>UsageQuantity</code>. </p> <note>\
              \ <p>If you return the <code>UsageQuantity</code> metric, the service\
              \ aggregates all usage numbers without taking the units into account.\
              \ For example, if you aggregate <code>usageQuantity</code> across all\
              \ of Amazon EC2, the results aren't meaningful because Amazon EC2 compute\
              \ hours and data transfer are measured in different units (for example,\
              \ hour or GB). To get more meaningful <code>UsageQuantity</code> metrics,\
              \ filter by <code>UsageType</code> or <code>UsageTypeGroups</code>.\
              \ </p> </note> <p> <code>Metrics</code> is required for <code>GetCostAndUsageWithResources</code>\
              \ requests.</p>"
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: "You can group Amazon Web Services costs using up to two\
              \ different groups: <code>DIMENSION</code>, <code>TAG</code>, <code>COST_CATEGORY</code>."
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
      required:
      - Filter
      - Granularity
      - TimePeriod
      title: GetCostAndUsageWithResourcesRequest
      type: object
    GetCostCategoriesResponse:
      example:
        CostCategoryNames: ""
        CostCategoryValues: ""
        ReturnSize: ""
        NextPageToken: ""
        TotalSize: ""
      properties:
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: "If the number of objects that are still available for retrieval\
              \ exceeds the quota, Amazon Web Services returns a NextPageToken value\
              \ in the response. To retrieve the next batch of objects, provide the\
              \ marker from the prior call in your next request."
        CostCategoryNames:
          allOf:
          - $ref: '#/components/schemas/CostCategoryNamesList'
          - description: The names of the Cost Categories.
        CostCategoryValues:
          allOf:
          - $ref: '#/components/schemas/CostCategoryValuesList'
          - description: "<p>The Cost Category values.</p> <p>If the <code>CostCategoryName</code>\
              \ key isn't specified in the request, the <code>CostCategoryValues</code>\
              \ fields aren't returned. </p>"
        ReturnSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The number of objects that are returned.
        TotalSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The total number of objects.
      required:
      - ReturnSize
      - TotalSize
      type: object
    GetCostCategoriesRequest:
      example:
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        CostCategoryName: CostCategoryName
        SortBy: ""
        NextPageToken: ""
        MaxResults: ""
        SearchString: ""
      properties:
        SearchString:
          allOf:
          - $ref: '#/components/schemas/SearchString'
          - description: "<p>The value that you want to search the filter values for.</p>\
              \ <p>If you don't specify a <code>CostCategoryName</code>, <code>SearchString</code>\
              \ is used to filter Cost Category names that match the <code>SearchString</code>\
              \ pattern. If you specify a <code>CostCategoryName</code>, <code>SearchString</code>\
              \ is used to filter Cost Category values that match the <code>SearchString</code>\
              \ pattern.</p>"
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
        CostCategoryName:
          description: The unique name of the Cost Category.
          maxLength: 50
          minLength: 1
          type: string
          x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
        Filter:
          $ref: '#/components/schemas/Expression'
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortDefinitions'
          - description: "<p>The value that you sort the data by.</p> <p>The key represents\
              \ the cost and usage metrics. The following values are supported:</p>\
              \ <ul> <li> <p> <code>BlendedCost</code> </p> </li> <li> <p> <code>UnblendedCost</code>\
              \ </p> </li> <li> <p> <code>AmortizedCost</code> </p> </li> <li> <p>\
              \ <code>NetAmortizedCost</code> </p> </li> <li> <p> <code>NetUnblendedCost</code>\
              \ </p> </li> <li> <p> <code>UsageQuantity</code> </p> </li> <li> <p>\
              \ <code>NormalizedUsageAmount</code> </p> </li> </ul> <p>The supported\
              \ key values for the <code>SortOrder</code> value are <code>ASCENDING</code>\
              \ and <code>DESCENDING</code>.</p> <p>When you use the <code>SortBy</code>\
              \ value, the <code>NextPageToken</code> and <code>SearchString</code>\
              \ key values aren't supported.</p>"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "<p>This field is only used when the <code>SortBy</code>\
              \ value is provided in the request.</p> <p>The maximum number of objects\
              \ that are returned for this request. If <code>MaxResults</code> isn't\
              \ specified with the <code>SortBy</code> value, the request returns\
              \ 1000 results as the default value for this parameter.</p> <p>For <code>GetCostCategories</code>,\
              \ MaxResults has an upper quota of 1000.</p>"
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: "If the number of objects that are still available for retrieval\
              \ exceeds the quota, Amazon Web Services returns a NextPageToken value\
              \ in the response. To retrieve the next batch of objects, provide the\
              \ NextPageToken from the previous call in your next request."
      required:
      - TimePeriod
      title: GetCostCategoriesRequest
      type: object
    GetCostForecastResponse:
      example:
        Total:
          Amount: ""
          Unit: ""
        ForecastResultsByTime: ""
      properties:
        Total:
          $ref: '#/components/schemas/GetCostForecastResponse_Total'
        ForecastResultsByTime:
          allOf:
          - $ref: '#/components/schemas/ForecastResultsByTime'
          - description: "The forecasts for your query, in order. For <code>DAILY</code>\
              \ forecasts, this is a list of days. For <code>MONTHLY</code> forecasts,\
              \ this is a list of months."
      type: object
    GetCostForecastRequest:
      example:
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        Metric: ""
        Granularity: ""
        PredictionIntervalLevel: ""
      properties:
        TimePeriod:
          $ref: '#/components/schemas/GetCostForecastRequest_TimePeriod'
        Metric:
          allOf:
          - $ref: '#/components/schemas/Metric'
          - description: "<p>Which metric Cost Explorer uses to create your forecast.\
              \ For more information about blended and unblended rates, see <a href=\"\
              http://aws.amazon.com/premiumsupport/knowledge-center/blended-rates-intro/\"\
              >Why does the \"blended\" annotation appear on some line items in my\
              \ bill?</a>. </p> <p>Valid values for a <code>GetCostForecast</code>\
              \ call are the following:</p> <ul> <li> <p>AMORTIZED_COST</p> </li>\
              \ <li> <p>BLENDED_COST</p> </li> <li> <p>NET_AMORTIZED_COST</p> </li>\
              \ <li> <p>NET_UNBLENDED_COST</p> </li> <li> <p>UNBLENDED_COST</p> </li>\
              \ </ul>"
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: <p>How granular you want the forecast to be. You can get
              3 months of <code>DAILY</code> forecasts or 12 months of <code>MONTHLY</code>
              forecasts.</p> <p>The <code>GetCostForecast</code> operation supports
              only <code>DAILY</code> and <code>MONTHLY</code> granularities.</p>
        Filter:
          $ref: '#/components/schemas/GetCostForecastRequest_Filter'
        PredictionIntervalLevel:
          allOf:
          - $ref: '#/components/schemas/PredictionIntervalLevel'
          - description: "Cost Explorer always returns the mean forecast as a single\
              \ point. You can request a prediction interval around the mean by specifying\
              \ a confidence level. The higher the confidence level, the more confident\
              \ Cost Explorer is about the actual value falling in the prediction\
              \ interval. Higher confidence levels result in wider prediction intervals."
      required:
      - Granularity
      - Metric
      - TimePeriod
      title: GetCostForecastRequest
      type: object
    GetDimensionValuesResponse:
      example:
        ReturnSize: ""
        DimensionValues: ""
        NextPageToken: ""
        TotalSize: ""
      properties:
        DimensionValues:
          allOf:
          - $ref: '#/components/schemas/DimensionValuesWithAttributesList'
          - description: "<p>The filters that you used to filter your request. Some\
              \ dimensions are available only for a specific context.</p> <p>If you\
              \ set the context to <code>COST_AND_USAGE</code>, you can use the following\
              \ dimensions for searching:</p> <ul> <li> <p>AZ - The Availability Zone.\
              \ An example is <code>us-east-1a</code>.</p> </li> <li> <p>DATABASE_ENGINE\
              \ - The Amazon Relational Database Service database. Examples are Aurora\
              \ or MySQL.</p> </li> <li> <p>INSTANCE_TYPE - The type of Amazon EC2\
              \ instance. An example is <code>m4.xlarge</code>.</p> </li> <li> <p>LEGAL_ENTITY_NAME\
              \ - The name of the organization that sells you Amazon Web Services\
              \ services, such as Amazon Web Services.</p> </li> <li> <p>LINKED_ACCOUNT\
              \ - The description in the attribute map that includes the full name\
              \ of the member account. The value field contains the Amazon Web Services\
              \ ID of the member account.</p> </li> <li> <p>OPERATING_SYSTEM - The\
              \ operating system. Examples are Windows or Linux.</p> </li> <li> <p>OPERATION\
              \ - The action performed. Examples include <code>RunInstance</code>\
              \ and <code>CreateBucket</code>.</p> </li> <li> <p>PLATFORM - The Amazon\
              \ EC2 operating system. Examples are Windows or Linux.</p> </li> <li>\
              \ <p>PURCHASE_TYPE - The reservation type of the purchase to which this\
              \ usage is related. Examples include On-Demand Instances and Standard\
              \ Reserved Instances.</p> </li> <li> <p>SERVICE - The Amazon Web Services\
              \ service such as Amazon DynamoDB.</p> </li> <li> <p>USAGE_TYPE - The\
              \ type of usage. An example is DataTransfer-In-Bytes. The response for\
              \ the <code>GetDimensionValues</code> operation includes a unit attribute.\
              \ Examples include GB and Hrs.</p> </li> <li> <p>USAGE_TYPE_GROUP -\
              \ The grouping of common usage types. An example is Amazon EC2: CloudWatch\
              \ – Alarms. The response for this operation includes a unit attribute.</p>\
              \ </li> <li> <p>RECORD_TYPE - The different types of charges such as\
              \ RI fees, usage costs, tax refunds, and credits.</p> </li> <li> <p>RESOURCE_ID\
              \ - The unique identifier of the resource. ResourceId is an opt-in feature\
              \ only available for last 14 days for EC2-Compute Service. You can opt-in\
              \ by enabling <code>Hourly</code> and <code>Resource Level Data</code>\
              \ in Cost Management Console preferences.</p> </li> </ul> <p>If you\
              \ set the context to <code>RESERVATIONS</code>, you can use the following\
              \ dimensions for searching:</p> <ul> <li> <p>AZ - The Availability Zone.\
              \ An example is <code>us-east-1a</code>.</p> </li> <li> <p>CACHE_ENGINE\
              \ - The Amazon ElastiCache operating system. Examples are Windows or\
              \ Linux.</p> </li> <li> <p>DEPLOYMENT_OPTION - The scope of Amazon Relational\
              \ Database Service deployments. Valid values are <code>SingleAZ</code>\
              \ and <code>MultiAZ</code>.</p> </li> <li> <p>INSTANCE_TYPE - The type\
              \ of Amazon EC2 instance. An example is <code>m4.xlarge</code>.</p>\
              \ </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map\
              \ that includes the full name of the member account. The value field\
              \ contains the Amazon Web Services ID of the member account.</p> </li>\
              \ <li> <p>PLATFORM - The Amazon EC2 operating system. Examples are Windows\
              \ or Linux.</p> </li> <li> <p>REGION - The Amazon Web Services Region.</p>\
              \ </li> <li> <p>SCOPE (Utilization only) - The scope of a Reserved Instance\
              \ (RI). Values are regional or a single Availability Zone.</p> </li>\
              \ <li> <p>TAG (Coverage only) - The tags that are associated with a\
              \ Reserved Instance (RI).</p> </li> <li> <p>TENANCY - The tenancy of\
              \ a resource. Examples are shared or dedicated.</p> </li> </ul> <p>If\
              \ you set the context to <code>SAVINGS_PLANS</code>, you can use the\
              \ following dimensions for searching:</p> <ul> <li> <p>SAVINGS_PLANS_TYPE\
              \ - Type of Savings Plans (EC2 Instance or Compute)</p> </li> <li> <p>PAYMENT_OPTION\
              \ - Payment option for the given Savings Plans (for example, All Upfront)</p>\
              \ </li> <li> <p>REGION - The Amazon Web Services Region.</p> </li> <li>\
              \ <p>INSTANCE_TYPE_FAMILY - The family of instances (For example, <code>m5</code>)</p>\
              \ </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map\
              \ that includes the full name of the member account. The value field\
              \ contains the Amazon Web Services ID of the member account.</p> </li>\
              \ <li> <p>SAVINGS_PLAN_ARN - The unique identifier for your Savings\
              \ Plan</p> </li> </ul>"
        ReturnSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The number of results that Amazon Web Services returned at
              one time.
        TotalSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The total number of search results.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
      required:
      - DimensionValues
      - ReturnSize
      - TotalSize
      type: object
    GetDimensionValuesRequest:
      example:
        Context: ""
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        SortBy: ""
        NextPageToken: ""
        MaxResults: ""
        Dimension: ""
        SearchString: ""
      properties:
        SearchString:
          allOf:
          - $ref: '#/components/schemas/SearchString'
          - description: The value that you want to search the filter values for.
        TimePeriod:
          $ref: '#/components/schemas/GetDimensionValuesRequest_TimePeriod'
        Dimension:
          allOf:
          - $ref: '#/components/schemas/Dimension'
          - description: "The name of the dimension. Each <code>Dimension</code> is\
              \ available for a different <code>Context</code>. For more information,\
              \ see <code>Context</code>. <code>LINK_ACCOUNT_NAME</code> and <code>SERVICE_CODE</code>\
              \ can only be used in <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/AAPI_CostCategoryRule.html\"\
              >CostCategoryRule</a>. "
        Context:
          allOf:
          - $ref: '#/components/schemas/Context'
          - description: "<p>The context for the call to <code>GetDimensionValues</code>.\
              \ This can be <code>RESERVATIONS</code> or <code>COST_AND_USAGE</code>.\
              \ The default value is <code>COST_AND_USAGE</code>. If the context is\
              \ set to <code>RESERVATIONS</code>, the resulting dimension values can\
              \ be used in the <code>GetReservationUtilization</code> operation. If\
              \ the context is set to <code>COST_AND_USAGE</code>, the resulting dimension\
              \ values can be used in the <code>GetCostAndUsage</code> operation.</p>\
              \ <p>If you set the context to <code>COST_AND_USAGE</code>, you can\
              \ use the following dimensions for searching:</p> <ul> <li> <p>AZ -\
              \ The Availability Zone. An example is <code>us-east-1a</code>.</p>\
              \ </li> <li> <p>BILLING_ENTITY - The Amazon Web Services seller that\
              \ your account is with. Possible values are the following:</p> <p>-\
              \ Amazon Web Services(Amazon Web Services): The entity that sells Amazon\
              \ Web Services.</p> <p>- AISPL (Amazon Internet Services Pvt. Ltd.):\
              \ The local Indian entity that's an acting reseller for Amazon Web Services\
              \ in India.</p> <p>- Amazon Web Services Marketplace: The entity that\
              \ supports the sale of solutions that are built on Amazon Web Services\
              \ by third-party software providers.</p> </li> <li> <p>CACHE_ENGINE\
              \ - The Amazon ElastiCache operating system. Examples are Windows or\
              \ Linux.</p> </li> <li> <p>DEPLOYMENT_OPTION - The scope of Amazon Relational\
              \ Database Service deployments. Valid values are <code>SingleAZ</code>\
              \ and <code>MultiAZ</code>.</p> </li> <li> <p>DATABASE_ENGINE - The\
              \ Amazon Relational Database Service database. Examples are Aurora or\
              \ MySQL.</p> </li> <li> <p>INSTANCE_TYPE - The type of Amazon EC2 instance.\
              \ An example is <code>m4.xlarge</code>.</p> </li> <li> <p>INSTANCE_TYPE_FAMILY\
              \ - A family of instance types optimized to fit different use cases.\
              \ Examples are <code>Compute Optimized</code> (for example, <code>C4</code>,\
              \ <code>C5</code>, <code>C6g</code>, and <code>C7g</code>), <code>Memory\
              \ Optimization</code> (for example, <code>R4</code>, <code>R5n</code>,\
              \ <code>R5b</code>, and <code>R6g</code>).</p> </li> <li> <p>INVOICING_ENTITY\
              \ - The name of the entity that issues the Amazon Web Services invoice.</p>\
              \ </li> <li> <p>LEGAL_ENTITY_NAME - The name of the organization that\
              \ sells you Amazon Web Services services, such as Amazon Web Services.</p>\
              \ </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map\
              \ that includes the full name of the member account. The value field\
              \ contains the Amazon Web Services ID of the member account.</p> </li>\
              \ <li> <p>OPERATING_SYSTEM - The operating system. Examples are Windows\
              \ or Linux.</p> </li> <li> <p>OPERATION - The action performed. Examples\
              \ include <code>RunInstance</code> and <code>CreateBucket</code>.</p>\
              \ </li> <li> <p>PLATFORM - The Amazon EC2 operating system. Examples\
              \ are Windows or Linux.</p> </li> <li> <p>PURCHASE_TYPE - The reservation\
              \ type of the purchase that this usage is related to. Examples include\
              \ On-Demand Instances and Standard Reserved Instances.</p> </li> <li>\
              \ <p>RESERVATION_ID - The unique identifier for an Amazon Web Services\
              \ Reservation Instance.</p> </li> <li> <p>SAVINGS_PLAN_ARN - The unique\
              \ identifier for your Savings Plans.</p> </li> <li> <p>SAVINGS_PLANS_TYPE\
              \ - Type of Savings Plans (EC2 Instance or Compute).</p> </li> <li>\
              \ <p>SERVICE - The Amazon Web Services service such as Amazon DynamoDB.</p>\
              \ </li> <li> <p>TENANCY - The tenancy of a resource. Examples are shared\
              \ or dedicated.</p> </li> <li> <p>USAGE_TYPE - The type of usage. An\
              \ example is DataTransfer-In-Bytes. The response for the <code>GetDimensionValues</code>\
              \ operation includes a unit attribute. Examples include GB and Hrs.</p>\
              \ </li> <li> <p>USAGE_TYPE_GROUP - The grouping of common usage types.\
              \ An example is Amazon EC2: CloudWatch – Alarms. The response for this\
              \ operation includes a unit attribute.</p> </li> <li> <p>REGION - The\
              \ Amazon Web Services Region.</p> </li> <li> <p>RECORD_TYPE - The different\
              \ types of charges such as Reserved Instance (RI) fees, usage costs,\
              \ tax refunds, and credits.</p> </li> <li> <p>RESOURCE_ID - The unique\
              \ identifier of the resource. ResourceId is an opt-in feature only available\
              \ for last 14 days for EC2-Compute Service.</p> </li> </ul> <p>If you\
              \ set the context to <code>RESERVATIONS</code>, you can use the following\
              \ dimensions for searching:</p> <ul> <li> <p>AZ - The Availability Zone.\
              \ An example is <code>us-east-1a</code>.</p> </li> <li> <p>CACHE_ENGINE\
              \ - The Amazon ElastiCache operating system. Examples are Windows or\
              \ Linux.</p> </li> <li> <p>DEPLOYMENT_OPTION - The scope of Amazon Relational\
              \ Database Service deployments. Valid values are <code>SingleAZ</code>\
              \ and <code>MultiAZ</code>.</p> </li> <li> <p>INSTANCE_TYPE - The type\
              \ of Amazon EC2 instance. An example is <code>m4.xlarge</code>.</p>\
              \ </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map\
              \ that includes the full name of the member account. The value field\
              \ contains the Amazon Web Services ID of the member account.</p> </li>\
              \ <li> <p>PLATFORM - The Amazon EC2 operating system. Examples are Windows\
              \ or Linux.</p> </li> <li> <p>REGION - The Amazon Web Services Region.</p>\
              \ </li> <li> <p>SCOPE (Utilization only) - The scope of a Reserved Instance\
              \ (RI). Values are regional or a single Availability Zone.</p> </li>\
              \ <li> <p>TAG (Coverage only) - The tags that are associated with a\
              \ Reserved Instance (RI).</p> </li> <li> <p>TENANCY - The tenancy of\
              \ a resource. Examples are shared or dedicated.</p> </li> </ul> <p>If\
              \ you set the context to <code>SAVINGS_PLANS</code>, you can use the\
              \ following dimensions for searching:</p> <ul> <li> <p>SAVINGS_PLANS_TYPE\
              \ - Type of Savings Plans (EC2 Instance or Compute)</p> </li> <li> <p>PAYMENT_OPTION\
              \ - The payment option for the given Savings Plans (for example, All\
              \ Upfront)</p> </li> <li> <p>REGION - The Amazon Web Services Region.</p>\
              \ </li> <li> <p>INSTANCE_TYPE_FAMILY - The family of instances (For\
              \ example, <code>m5</code>)</p> </li> <li> <p>LINKED_ACCOUNT - The description\
              \ in the attribute map that includes the full name of the member account.\
              \ The value field contains the Amazon Web Services ID of the member\
              \ account.</p> </li> <li> <p>SAVINGS_PLAN_ARN - The unique identifier\
              \ for your Savings Plans.</p> </li> </ul>"
        Filter:
          $ref: '#/components/schemas/Expression'
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortDefinitions'
          - description: "<p>The value that you want to sort the data by.</p> <p>The\
              \ key represents cost and usage metrics. The following values are supported:</p>\
              \ <ul> <li> <p> <code>BlendedCost</code> </p> </li> <li> <p> <code>UnblendedCost</code>\
              \ </p> </li> <li> <p> <code>AmortizedCost</code> </p> </li> <li> <p>\
              \ <code>NetAmortizedCost</code> </p> </li> <li> <p> <code>NetUnblendedCost</code>\
              \ </p> </li> <li> <p> <code>UsageQuantity</code> </p> </li> <li> <p>\
              \ <code>NormalizedUsageAmount</code> </p> </li> </ul> <p>The supported\
              \ values for the <code>SortOrder</code> key are <code>ASCENDING</code>\
              \ or <code>DESCENDING</code>.</p> <p>When you specify a <code>SortBy</code>\
              \ paramater, the context must be <code>COST_AND_USAGE</code>. Further,\
              \ when using <code>SortBy</code>, <code>NextPageToken</code> and <code>SearchString</code>\
              \ aren't supported.</p>"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "<p>This field is only used when SortBy is provided in the\
              \ request. The maximum number of objects that are returned for this\
              \ request. If MaxResults isn't specified with SortBy, the request returns\
              \ 1000 results as the default value for this parameter.</p> <p>For <code>GetDimensionValues</code>,\
              \ MaxResults has an upper limit of 1000.</p>"
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
      required:
      - Dimension
      - TimePeriod
      title: GetDimensionValuesRequest
      type: object
    GetReservationCoverageResponse:
      example:
        CoveragesByTime: ""
        NextPageToken: ""
        Total:
          CoverageHours:
            TotalRunningHours: ""
            CoverageHoursPercentage: ""
            OnDemandHours: ""
            ReservedHours: ""
          CoverageCost:
            OnDemandCost: ""
          CoverageNormalizedUnits:
            TotalRunningNormalizedUnits: ""
            ReservedNormalizedUnits: ""
            OnDemandNormalizedUnits: ""
            CoverageNormalizedUnitsPercentage: ""
      properties:
        CoveragesByTime:
          allOf:
          - $ref: '#/components/schemas/CoveragesByTime'
          - description: The amount of time that your reservations covered.
        Total:
          $ref: '#/components/schemas/GetReservationCoverageResponse_Total'
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
      required:
      - CoveragesByTime
      type: object
    GetReservationCoverageRequest:
      description: You can use the following request parameters to query for how much
        of your instance usage a reservation covered.
      example:
        Metrics: ""
        GroupBy: ""
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        NextPageToken: ""
        SortBy:
          SortOrder: ""
          Key: ""
        MaxResults: ""
        Granularity: ""
      properties:
        TimePeriod:
          $ref: '#/components/schemas/GetReservationCoverageRequest_TimePeriod'
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: <p>You can group the data by the following attributes:</p>
              <ul> <li> <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p> </li> <li> <p>DATABASE_ENGINE</p>
              </li> <li> <p>DEPLOYMENT_OPTION</p> </li> <li> <p>INSTANCE_TYPE</p>
              </li> <li> <p>INVOICING_ENTITY</p> </li> <li> <p>LINKED_ACCOUNT</p>
              </li> <li> <p>OPERATING_SYSTEM</p> </li> <li> <p>PLATFORM</p> </li>
              <li> <p>REGION</p> </li> <li> <p>TENANCY</p> </li> </ul>
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: "<p>The granularity of the Amazon Web Services cost data\
              \ for the reservation. Valid values are <code>MONTHLY</code> and <code>DAILY</code>.</p>\
              \ <p>If <code>GroupBy</code> is set, <code>Granularity</code> can't\
              \ be set. If <code>Granularity</code> isn't set, the response object\
              \ doesn't include <code>Granularity</code>, either <code>MONTHLY</code>\
              \ or <code>DAILY</code>.</p> <p>The <code>GetReservationCoverage</code>\
              \ operation supports only <code>DAILY</code> and <code>MONTHLY</code>\
              \ granularities.</p>"
        Filter:
          $ref: '#/components/schemas/GetReservationCoverageRequest_Filter'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MetricNames'
          - description: "<p>The measurement that you want your reservation coverage\
              \ reported in.</p> <p>Valid values are <code>Hour</code>, <code>Unit</code>,\
              \ and <code>Cost</code>. You can use multiple values in a request.</p>"
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        SortBy:
          $ref: '#/components/schemas/GetReservationCoverageRequest_SortBy'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of objects that you returned for this\
              \ request. If more objects are available, in the response, Amazon Web\
              \ Services provides a NextPageToken value that you can use in a subsequent\
              \ call to get the next batch of objects."
      required:
      - TimePeriod
      title: GetReservationCoverageRequest
      type: object
    GetReservationPurchaseRecommendationResponse:
      example:
        Recommendations: ""
        NextPageToken: ""
        Metadata:
          RecommendationId: ""
          GenerationTimestamp: ""
      properties:
        Metadata:
          $ref: '#/components/schemas/GetReservationPurchaseRecommendationResponse_Metadata'
        Recommendations:
          allOf:
          - $ref: '#/components/schemas/ReservationPurchaseRecommendations'
          - description: Recommendations for reservations to purchase.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The pagination token for the next set of retrievable results.
      type: object
    GetReservationPurchaseRecommendationRequest:
      example:
        ServiceSpecification:
          EC2Specification:
            OfferingClass: ""
        AccountId: ""
        PageSize: ""
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        LookbackPeriodInDays: ""
        NextPageToken: ""
        Service: ""
        PaymentOption: ""
        TermInYears: ""
        AccountScope: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The account ID that''s associated with the recommendation. '
        Service:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The specific service that you want recommendations for.
        Filter:
          $ref: '#/components/schemas/Expression'
        AccountScope:
          allOf:
          - $ref: '#/components/schemas/AccountScope'
          - description: "The account scope that you want your recommendations for.\
              \ Amazon Web Services calculates recommendations including the management\
              \ account and member accounts if the value is set to <code>PAYER</code>.\
              \ If the value is <code>LINKED</code>, recommendations are calculated\
              \ for individual member accounts only."
        LookbackPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/LookbackPeriodInDays'
          - description: The number of previous days that you want Amazon Web Services
              to consider when it calculates your recommendations.
        TermInYears:
          allOf:
          - $ref: '#/components/schemas/TermInYears'
          - description: The reservation term that you want recommendations for.
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/PaymentOption'
          - description: The reservation purchase option that you want recommendations
              for.
        ServiceSpecification:
          $ref: '#/components/schemas/GetReservationPurchaseRecommendationRequest_ServiceSpecification'
        PageSize:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of recommendations that you want returned in a
              single response object.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The pagination token that indicates the next set of results
              that you want to retrieve.
      required:
      - Service
      title: GetReservationPurchaseRecommendationRequest
      type: object
    GetReservationUtilizationResponse:
      example:
        UtilizationsByTime: ""
        NextPageToken: ""
        Total:
          PurchasedHours: ""
          RICostForUnusedHours: ""
          UtilizationPercentageInUnits: ""
          PurchasedUnits: ""
          UnusedHours: ""
          UnrealizedSavings: ""
          TotalActualHours: ""
          AmortizedUpfrontFee: ""
          OnDemandCostOfRIHoursUsed: ""
          AmortizedRecurringFee: ""
          RealizedSavings: ""
          NetRISavings: ""
          UtilizationPercentage: ""
          TotalPotentialRISavings: ""
          TotalAmortizedFee: ""
          TotalActualUnits: ""
          UnusedUnits: ""
      properties:
        UtilizationsByTime:
          allOf:
          - $ref: '#/components/schemas/UtilizationsByTime'
          - description: The amount of time that you used your Reserved Instances
              (RIs).
        Total:
          $ref: '#/components/schemas/GetReservationUtilizationResponse_Total'
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
      required:
      - UtilizationsByTime
      type: object
    GetReservationUtilizationRequest:
      example:
        GroupBy: ""
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        SortBy:
          SortOrder: ""
          Key: ""
        NextPageToken: ""
        MaxResults: ""
        Granularity: ""
      properties:
        TimePeriod:
          $ref: '#/components/schemas/GetReservationUtilizationRequest_TimePeriod'
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: Groups only by <code>SUBSCRIPTION_ID</code>. Metadata is
              included.
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: "<p>If <code>GroupBy</code> is set, <code>Granularity</code>\
              \ can't be set. If <code>Granularity</code> isn't set, the response\
              \ object doesn't include <code>Granularity</code>, either <code>MONTHLY</code>\
              \ or <code>DAILY</code>. If both <code>GroupBy</code> and <code>Granularity</code>\
              \ aren't set, <code>GetReservationUtilization</code> defaults to <code>DAILY</code>.</p>\
              \ <p>The <code>GetReservationUtilization</code> operation supports only\
              \ <code>DAILY</code> and <code>MONTHLY</code> granularities.</p>"
        Filter:
          $ref: '#/components/schemas/GetReservationUtilizationRequest_Filter'
        SortBy:
          $ref: '#/components/schemas/GetReservationUtilizationRequest_SortBy'
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of objects that you returned for this\
              \ request. If more objects are available, in the response, Amazon Web\
              \ Services provides a NextPageToken value that you can use in a subsequent\
              \ call to get the next batch of objects."
      required:
      - TimePeriod
      title: GetReservationUtilizationRequest
      type: object
    GetRightsizingRecommendationResponse:
      example:
        RightsizingRecommendations: ""
        Configuration:
          BenefitsConsidered: ""
          RecommendationTarget: ""
        NextPageToken: ""
        Metadata:
          LookbackPeriodInDays: ""
          RecommendationId: ""
          AdditionalMetadata: ""
          GenerationTimestamp: ""
        Summary:
          TotalRecommendationCount: ""
          SavingsCurrencyCode: ""
          SavingsPercentage: ""
          EstimatedTotalMonthlySavingsAmount: ""
      properties:
        Metadata:
          $ref: '#/components/schemas/GetRightsizingRecommendationResponse_Metadata'
        Summary:
          $ref: '#/components/schemas/GetRightsizingRecommendationResponse_Summary'
        RightsizingRecommendations:
          allOf:
          - $ref: '#/components/schemas/RightsizingRecommendationList'
          - description: Recommendations to rightsize resources.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results.
        Configuration:
          $ref: '#/components/schemas/GetRightsizingRecommendationResponse_Configuration'
      type: object
    GetRightsizingRecommendationRequest:
      example:
        Configuration:
          BenefitsConsidered: ""
          RecommendationTarget: ""
        PageSize: ""
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        NextPageToken: ""
        Service: ""
      properties:
        Filter:
          $ref: '#/components/schemas/Expression'
        Configuration:
          $ref: '#/components/schemas/GetRightsizingRecommendationResponse_Configuration'
        Service:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The specific service that you want recommendations for. The
              only valid value for <code>GetRightsizingRecommendation</code> is "<code>AmazonEC2</code>".
        PageSize:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of recommendations that you want returned in a
              single response object.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The pagination token that indicates the next set of results
              that you want to retrieve.
      required:
      - Service
      title: GetRightsizingRecommendationRequest
      type: object
    GetSavingsPlanPurchaseRecommendationDetailsResponse:
      example:
        RecommendationDetailData:
          EstimatedSPCost: ""
          AccountId: ""
          ExistingHourlyCommitment: ""
          EstimatedOnDemandCost: ""
          EstimatedOnDemandCostWithCurrentCommitment: ""
          LookbackPeriodInDays: ""
          CurrentMinimumHourlyOnDemandSpend: ""
          EstimatedAverageCoverage: ""
          LatestUsageTimestamp: LatestUsageTimestamp
          TermInYears: ""
          EstimatedMonthlySavingsAmount: ""
          CurrencyCode: ""
          EstimatedROI: ""
          CurrentAverageHourlyOnDemandSpend: ""
          EstimatedSavingsAmount: ""
          PaymentOption: ""
          MetricsOverLookbackPeriod: ""
          HourlyCommitmentToPurchase: ""
          UpfrontCost: ""
          OfferingId: ""
          CurrentAverageCoverage: ""
          EstimatedSavingsPercentage: ""
          EstimatedAverageUtilization: ""
          InstanceFamily: ""
          SavingsPlansType: ""
          CurrentMaximumHourlyOnDemandSpend: ""
          AccountScope: ""
          Region: ""
          GenerationTimestamp: GenerationTimestamp
        RecommendationDetailId: ""
      properties:
        RecommendationDetailId:
          allOf:
          - $ref: '#/components/schemas/RecommendationDetailId'
          - description: The ID that is associated with the Savings Plan recommendation.
        RecommendationDetailData:
          $ref: '#/components/schemas/GetSavingsPlanPurchaseRecommendationDetailsResponse_RecommendationDetailData'
      type: object
    GetSavingsPlanPurchaseRecommendationDetailsRequest:
      example:
        RecommendationDetailId: ""
      properties:
        RecommendationDetailId:
          allOf:
          - $ref: '#/components/schemas/RecommendationDetailId'
          - description: The ID that is associated with the Savings Plan recommendation.
      required:
      - RecommendationDetailId
      title: GetSavingsPlanPurchaseRecommendationDetailsRequest
      type: object
    GetSavingsPlansCoverageResponse:
      example:
        NextToken: ""
        SavingsPlansCoverages: ""
      properties:
        SavingsPlansCoverages:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansCoverages'
          - description: The amount of spend that your Savings Plans covered.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
      required:
      - SavingsPlansCoverages
      type: object
    GetSavingsPlansCoverageRequest:
      example:
        Metrics: ""
        GroupBy: ""
        NextToken: ""
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        SortBy:
          SortOrder: ""
          Key: ""
        MaxResults: ""
        Granularity: ""
      properties:
        TimePeriod:
          $ref: '#/components/schemas/GetSavingsPlansCoverageRequest_TimePeriod'
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: "You can group the data using the attributes <code>INSTANCE_FAMILY</code>,\
              \ <code>REGION</code>, or <code>SERVICE</code>."
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: <p>The granularity of the Amazon Web Services cost data for
              your Savings Plans. <code>Granularity</code> can't be set if <code>GroupBy</code>
              is set.</p> <p>The <code>GetSavingsPlansCoverage</code> operation supports
              only <code>DAILY</code> and <code>MONTHLY</code> granularities.</p>
        Filter:
          $ref: '#/components/schemas/GetSavingsPlansCoverageRequest_Filter'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MetricNames'
          - description: The measurement that you want your Savings Plans coverage
              reported in. The only valid value is <code>SpendCoveredBySavingsPlans</code>.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The number of items to be returned in a response. The default\
              \ is <code>20</code>, with a minimum value of <code>1</code>."
        SortBy:
          $ref: '#/components/schemas/GetSavingsPlansCoverageRequest_SortBy'
      required:
      - TimePeriod
      title: GetSavingsPlansCoverageRequest
      type: object
    GetSavingsPlansPurchaseRecommendationResponse:
      example:
        SavingsPlansPurchaseRecommendation:
          SavingsPlansPurchaseRecommendationSummary:
            CurrencyCode: ""
            EstimatedSavingsPercentage: ""
            EstimatedTotalCost: ""
            TotalRecommendationCount: ""
            EstimatedROI: ""
            EstimatedSavingsAmount: ""
            EstimatedOnDemandCostWithCurrentCommitment: ""
            CurrentOnDemandSpend: ""
            HourlyCommitmentToPurchase: ""
            DailyCommitmentToPurchase: ""
            EstimatedMonthlySavingsAmount: ""
          SavingsPlansType: ""
          LookbackPeriodInDays: ""
          SavingsPlansPurchaseRecommendationDetails: ""
          PaymentOption: ""
          TermInYears: ""
          AccountScope: ""
        NextPageToken: ""
        Metadata:
          RecommendationId: ""
          AdditionalMetadata: ""
          GenerationTimestamp: ""
      properties:
        Metadata:
          $ref: '#/components/schemas/GetSavingsPlansPurchaseRecommendationResponse_Metadata'
        SavingsPlansPurchaseRecommendation:
          $ref: '#/components/schemas/GetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation'
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
      type: object
    GetSavingsPlansPurchaseRecommendationRequest:
      example:
        PageSize: ""
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        SavingsPlansType: ""
        NextPageToken: ""
        LookbackPeriodInDays: ""
        PaymentOption: ""
        TermInYears: ""
        AccountScope: ""
      properties:
        SavingsPlansType:
          allOf:
          - $ref: '#/components/schemas/SupportedSavingsPlansType'
          - description: The Savings Plans recommendation type that's requested.
        TermInYears:
          allOf:
          - $ref: '#/components/schemas/TermInYears'
          - description: The savings plan recommendation term that's used to generate
              these recommendations.
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/PaymentOption'
          - description: The payment option that's used to generate these recommendations.
        AccountScope:
          allOf:
          - $ref: '#/components/schemas/AccountScope'
          - description: "The account scope that you want your recommendations for.\
              \ Amazon Web Services calculates recommendations including the management\
              \ account and member accounts if the value is set to <code>PAYER</code>.\
              \ If the value is <code>LINKED</code>, recommendations are calculated\
              \ for individual member accounts only."
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of recommendations that you want returned in a
              single response object.
        LookbackPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/LookbackPeriodInDays'
          - description: The lookback period that's used to generate the recommendation.
        Filter:
          $ref: '#/components/schemas/GetSavingsPlansPurchaseRecommendationRequest_Filter'
      required:
      - LookbackPeriodInDays
      - PaymentOption
      - SavingsPlansType
      - TermInYears
      title: GetSavingsPlansPurchaseRecommendationRequest
      type: object
    GetSavingsPlansUtilizationResponse:
      example:
        SavingsPlansUtilizationsByTime: ""
        Total:
          AmortizedCommitment:
            TotalAmortizedCommitment: ""
            AmortizedUpfrontCommitment: ""
            AmortizedRecurringCommitment: ""
          Savings:
            NetSavings: ""
            OnDemandCostEquivalent: ""
          Utilization:
            UnusedCommitment: ""
            TotalCommitment: ""
            UsedCommitment: ""
            UtilizationPercentage: ""
      properties:
        SavingsPlansUtilizationsByTime:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansUtilizationsByTime'
          - description: The amount of cost/commitment that you used your Savings
              Plans. You can use it to specify date ranges.
        Total:
          $ref: '#/components/schemas/GetSavingsPlansUtilizationResponse_Total'
      required:
      - Total
      type: object
    GetSavingsPlansUtilizationRequest:
      example:
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        SortBy:
          SortOrder: ""
          Key: ""
        Granularity: ""
      properties:
        TimePeriod:
          $ref: '#/components/schemas/GetSavingsPlansCoverageRequest_TimePeriod'
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: <p>The granularity of the Amazon Web Services utillization
              data for your Savings Plans.</p> <p>The <code>GetSavingsPlansUtilization</code>
              operation supports only <code>DAILY</code> and <code>MONTHLY</code>
              granularities.</p>
        Filter:
          $ref: '#/components/schemas/GetSavingsPlansUtilizationRequest_Filter'
        SortBy:
          $ref: '#/components/schemas/GetSavingsPlansUtilizationRequest_SortBy'
      required:
      - TimePeriod
      title: GetSavingsPlansUtilizationRequest
      type: object
    GetSavingsPlansUtilizationDetailsResponse:
      example:
        NextToken: ""
        SavingsPlansUtilizationDetails: ""
        TimePeriod:
          Start: ""
          End: ""
        Total:
          AmortizedCommitment:
            TotalAmortizedCommitment: ""
            AmortizedUpfrontCommitment: ""
            AmortizedRecurringCommitment: ""
          Savings:
            NetSavings: ""
            OnDemandCostEquivalent: ""
          Utilization:
            UnusedCommitment: ""
            TotalCommitment: ""
            UsedCommitment: ""
            UtilizationPercentage: ""
      properties:
        SavingsPlansUtilizationDetails:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansUtilizationDetails'
          - description: Retrieves a single daily or monthly Savings Plans utilization
              rate and details for your account.
        Total:
          $ref: '#/components/schemas/GetSavingsPlansUtilizationDetailsResponse_Total'
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
      required:
      - SavingsPlansUtilizationDetails
      - TimePeriod
      type: object
    GetSavingsPlansUtilizationDetailsRequest:
      example:
        NextToken: ""
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        SortBy:
          SortOrder: ""
          Key: ""
        MaxResults: ""
        DataType: ""
      properties:
        TimePeriod:
          $ref: '#/components/schemas/GetSavingsPlansCoverageRequest_TimePeriod'
        Filter:
          $ref: '#/components/schemas/GetSavingsPlansUtilizationDetailsRequest_Filter'
        DataType:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansDataTypes'
          - description: The data type.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The number of items to be returned in a response. The default\
              \ is <code>20</code>, with a minimum value of <code>1</code>."
        SortBy:
          $ref: '#/components/schemas/GetSavingsPlansUtilizationDetailsRequest_SortBy'
      required:
      - TimePeriod
      title: GetSavingsPlansUtilizationDetailsRequest
      type: object
    GetTagsResponse:
      example:
        ReturnSize: ""
        NextPageToken: ""
        TotalSize: ""
        Tags: ""
      properties:
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags that match your request.
        ReturnSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The number of query results that Amazon Web Services returns
              at a time.
        TotalSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The total number of query results.
      required:
      - ReturnSize
      - Tags
      - TotalSize
      type: object
    GetTagsRequest:
      example:
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        SortBy: ""
        NextPageToken: ""
        MaxResults: ""
        TagKey: ""
        SearchString: ""
      properties:
        SearchString:
          allOf:
          - $ref: '#/components/schemas/SearchString'
          - description: The value that you want to search for.
        TimePeriod:
          $ref: '#/components/schemas/GetTagsRequest_TimePeriod'
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key of the tag that you want to return values for.
        Filter:
          $ref: '#/components/schemas/Expression'
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortDefinitions'
          - description: "<p>The value that you want to sort the data by.</p> <p>The\
              \ key represents cost and usage metrics. The following values are supported:</p>\
              \ <ul> <li> <p> <code>BlendedCost</code> </p> </li> <li> <p> <code>UnblendedCost</code>\
              \ </p> </li> <li> <p> <code>AmortizedCost</code> </p> </li> <li> <p>\
              \ <code>NetAmortizedCost</code> </p> </li> <li> <p> <code>NetUnblendedCost</code>\
              \ </p> </li> <li> <p> <code>UsageQuantity</code> </p> </li> <li> <p>\
              \ <code>NormalizedUsageAmount</code> </p> </li> </ul> <p>The supported\
              \ values for <code>SortOrder</code> are <code>ASCENDING</code> and <code>DESCENDING</code>.</p>\
              \ <p>When you use <code>SortBy</code>, <code>NextPageToken</code> and\
              \ <code>SearchString</code> aren't supported.</p>"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "<p>This field is only used when SortBy is provided in the\
              \ request. The maximum number of objects that are returned for this\
              \ request. If MaxResults isn't specified with SortBy, the request returns\
              \ 1000 results as the default value for this parameter.</p> <p>For <code>GetTags</code>,\
              \ MaxResults has an upper quota of 1000.</p>"
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
      required:
      - TimePeriod
      title: GetTagsRequest
      type: object
    GetUsageForecastResponse:
      example:
        Total:
          Amount: ""
          Unit: ""
        ForecastResultsByTime: ""
      properties:
        Total:
          $ref: '#/components/schemas/GetUsageForecastResponse_Total'
        ForecastResultsByTime:
          allOf:
          - $ref: '#/components/schemas/ForecastResultsByTime'
          - description: "The forecasts for your query, in order. For <code>DAILY</code>\
              \ forecasts, this is a list of days. For <code>MONTHLY</code> forecasts,\
              \ this is a list of months."
      type: object
    GetUsageForecastRequest:
      example:
        Filter:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        TimePeriod:
          Start: ""
          End: ""
        Metric: ""
        Granularity: ""
        PredictionIntervalLevel: ""
      properties:
        TimePeriod:
          $ref: '#/components/schemas/GetUsageForecastRequest_TimePeriod'
        Metric:
          allOf:
          - $ref: '#/components/schemas/Metric'
          - description: <p>Which metric Cost Explorer uses to create your forecast.</p>
              <p>Valid values for a <code>GetUsageForecast</code> call are the following:</p>
              <ul> <li> <p>USAGE_QUANTITY</p> </li> <li> <p>NORMALIZED_USAGE_AMOUNT</p>
              </li> </ul>
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: <p>How granular you want the forecast to be. You can get
              3 months of <code>DAILY</code> forecasts or 12 months of <code>MONTHLY</code>
              forecasts.</p> <p>The <code>GetUsageForecast</code> operation supports
              only <code>DAILY</code> and <code>MONTHLY</code> granularities.</p>
        Filter:
          $ref: '#/components/schemas/GetUsageForecastRequest_Filter'
        PredictionIntervalLevel:
          allOf:
          - $ref: '#/components/schemas/PredictionIntervalLevel'
          - description: "Amazon Web Services Cost Explorer always returns the mean\
              \ forecast as a single point. You can request a prediction interval\
              \ around the mean by specifying a confidence level. The higher the confidence\
              \ level, the more confident Cost Explorer is about the actual value\
              \ falling in the prediction interval. Higher confidence levels result\
              \ in wider prediction intervals."
      required:
      - Granularity
      - Metric
      - TimePeriod
      title: GetUsageForecastRequest
      type: object
    UnresolvableUsageUnitException: {}
    ListCostAllocationTagsResponse:
      example:
        CostAllocationTags: ""
        NextToken: ""
      properties:
        CostAllocationTags:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagList'
          - description: 'A list of cost allocation tags that includes the detailed
              metadata for each one. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: 'The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size. '
      type: object
    ListCostAllocationTagsRequest:
      example:
        Status: ""
        Type: ""
        NextToken: ""
        MaxResults: ""
        TagKeys: ""
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagStatus'
          - description: 'The status of cost allocation tag keys that are returned
              for this request. '
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagKeyList'
          - description: 'The list of cost allocation tag keys that are returned for
              this request. '
        Type:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagType'
          - description: "The type of <code>CostAllocationTag</code> object that are\
              \ returned for this request. The <code>AWSGenerated</code> type tags\
              \ are tags that Amazon Web Services defines and applies to support Amazon\
              \ Web Services resources for cost allocation purposes. The <code>UserDefined</code>\
              \ type tags are tags that you define, create, and apply to resources. "
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: 'The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size. '
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagsMaxResults'
          - description: "The maximum number of objects that are returned for this\
              \ request. By default, the request returns 100 results. "
      title: ListCostAllocationTagsRequest
      type: object
    ListCostCategoryDefinitionsResponse:
      example:
        NextToken: ""
        CostCategoryReferences: ""
      properties:
        CostCategoryReferences:
          allOf:
          - $ref: '#/components/schemas/CostCategoryReferencesList'
          - description: 'A reference to a Cost Category that contains enough information
              to identify the Cost Category. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: 'The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size. '
      type: object
    ListCostCategoryDefinitionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        EffectiveOn: ""
      properties:
        EffectiveOn:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: 'The date when the Cost Category was effective. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: 'The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size. '
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CostCategoryMaxResults'
          - description: 'The number of entries a paginated response contains. '
      title: ListCostCategoryDefinitionsRequest
      type: object
    ListSavingsPlansPurchaseRecommendationGenerationResponse:
      example:
        GenerationSummaryList: ""
        NextPageToken: ""
      properties:
        GenerationSummaryList:
          allOf:
          - $ref: '#/components/schemas/GenerationSummaryList'
          - description: The list of historical recommendation generations.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results.
      type: object
    ListSavingsPlansPurchaseRecommendationGenerationRequest:
      example:
        RecommendationIds: ""
        PageSize: ""
        NextPageToken: ""
        GenerationStatus: ""
      properties:
        GenerationStatus:
          allOf:
          - $ref: '#/components/schemas/GenerationStatus'
          - description: The status of the recommendation generation.
        RecommendationIds:
          allOf:
          - $ref: '#/components/schemas/RecommendationIdList'
          - description: The IDs for each specific recommendation.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of recommendations that you want returned in a
              single response object.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results.
      title: ListSavingsPlansPurchaseRecommendationGenerationRequest
      type: object
    ListTagsForResourceResponse:
      example:
        ResourceTags: ""
      properties:
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: 'A list of tag key value pairs that are associated with the
              resource. '
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the resource. For a list\
              \ of supported resources, see <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_ResourceTag.html\"\
              >ResourceTag</a>."
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    ProvideAnomalyFeedbackResponse:
      example:
        AnomalyId: ""
      properties:
        AnomalyId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The ID of the modified cost anomaly. '
      required:
      - AnomalyId
      type: object
    ProvideAnomalyFeedbackRequest:
      example:
        AnomalyId: ""
        Feedback: ""
      properties:
        AnomalyId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'A cost anomaly ID. '
        Feedback:
          allOf:
          - $ref: '#/components/schemas/AnomalyFeedbackType'
          - description: 'Describes whether the cost anomaly was a planned activity
              or you considered it an anomaly. '
      required:
      - AnomalyId
      - Feedback
      title: ProvideAnomalyFeedbackRequest
      type: object
    StartSavingsPlansPurchaseRecommendationGenerationResponse:
      example:
        GenerationStartedTime: ""
        RecommendationId: ""
        EstimatedCompletionTime: ""
      properties:
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          - description: The ID for this specific recommendation.
        GenerationStartedTime:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The start time of the recommendation generation.
        EstimatedCompletionTime:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The estimated time for when the recommendation generation
              will complete.
      type: object
    StartSavingsPlansPurchaseRecommendationGenerationRequest:
      properties: {}
      title: StartSavingsPlansPurchaseRecommendationGenerationRequest
      type: object
    GenerationExistsException: {}
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        ResourceTags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the resource. For a list\
              \ of supported resources, see <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_ResourceTag.html\"\
              >ResourceTag</a>. "
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: "<p> A list of tag key-value pairs to be added to the resource.</p>\
              \ <p>Each tag consists of a key and a value, and each key must be unique\
              \ for the resource. The following restrictions apply to resource tags:</p>\
              \ <ul> <li> <p>Although the maximum number of array members is 200,\
              \ you can assign a maximum of 50 user-tags to one resource. The remaining\
              \ are reserved for Amazon Web Services use</p> </li> <li> <p>The maximum\
              \ length of a key is 128 characters</p> </li> <li> <p>The maximum length\
              \ of a value is 256 characters</p> </li> <li> <p>Keys and values can\
              \ only contain alphanumeric characters, spaces, and any of the following:\
              \ <code>_.:/=+@-</code> </p> </li> <li> <p>Keys and values are case\
              \ sensitive</p> </li> <li> <p>Keys and values are trimmed for any leading\
              \ or trailing whitespaces</p> </li> <li> <p>Don’t use <code>aws:</code>\
              \ as a prefix for your keys. This prefix is reserved for Amazon Web\
              \ Services use</p> </li> </ul>"
      required:
      - ResourceArn
      - ResourceTags
      title: TagResourceRequest
      type: object
    TooManyTagsException: {}
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        ResourceTagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the resource. For a list\
              \ of supported resources, see <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_ResourceTag.html\"\
              >ResourceTag</a>. "
        ResourceTagKeys:
          allOf:
          - $ref: '#/components/schemas/ResourceTagKeyList'
          - description: "A list of tag keys associated with tags that need to be\
              \ removed from the resource. If you specify a tag key that doesn't exist,\
              \ it's ignored. Although the maximum number of array members is 200,\
              \ user-tag maximum is 50. The remaining are reserved for Amazon Web\
              \ Services use. "
      required:
      - ResourceArn
      - ResourceTagKeys
      title: UntagResourceRequest
      type: object
    UpdateAnomalyMonitorResponse:
      example:
        MonitorArn: ""
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'A cost anomaly monitor ARN. '
      required:
      - MonitorArn
      type: object
    UpdateAnomalyMonitorRequest:
      example:
        MonitorArn: ""
        MonitorName: ""
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'Cost anomaly monitor Amazon Resource Names (ARNs). '
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The new name for the cost anomaly monitor. '
      required:
      - MonitorArn
      title: UpdateAnomalyMonitorRequest
      type: object
    UpdateAnomalySubscriptionResponse:
      example:
        SubscriptionArn: ""
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'A cost anomaly subscription ARN. '
      required:
      - SubscriptionArn
      type: object
    UpdateAnomalySubscriptionRequest:
      example:
        MonitorArnList: ""
        Frequency: ""
        SubscriptionName: ""
        Subscribers: ""
        SubscriptionArn: ""
        Threshold: ""
        ThresholdExpression:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'A cost anomaly subscription Amazon Resource Name (ARN). '
        Threshold:
          allOf:
          - $ref: '#/components/schemas/NullableNonNegativeDouble'
          - deprecated: true
            description: "<p>(deprecated)</p> <p>The update to the threshold value\
              \ for receiving notifications. </p> <p>This field has been deprecated.\
              \ To update a threshold, use ThresholdExpression. Continued use of Threshold\
              \ will be treated as shorthand syntax for a ThresholdExpression.</p>\
              \ <p>You can specify either Threshold or ThresholdExpression, but not\
              \ both.</p>Threshold has been deprecated in favor of ThresholdExpression"
        Frequency:
          allOf:
          - $ref: '#/components/schemas/AnomalySubscriptionFrequency'
          - description: 'The update to the frequency value that subscribers receive
              notifications. '
        MonitorArnList:
          allOf:
          - $ref: '#/components/schemas/MonitorArnList'
          - description: 'A list of cost anomaly monitor ARNs. '
        Subscribers:
          allOf:
          - $ref: '#/components/schemas/Subscribers'
          - description: 'The update to the subscriber list. '
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The new name of the subscription. '
        ThresholdExpression:
          $ref: '#/components/schemas/UpdateAnomalySubscriptionRequest_ThresholdExpression'
      required:
      - SubscriptionArn
      title: UpdateAnomalySubscriptionRequest
      type: object
    UpdateCostAllocationTagsStatusResponse:
      example:
        Errors: ""
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/UpdateCostAllocationTagsStatusErrors'
          - description: "A list of <code>UpdateCostAllocationTagsStatusError</code>\
              \ objects with error details about each cost allocation tag that can't\
              \ be updated. If there's no failure, an empty array returns. "
      type: object
    UpdateCostAllocationTagsStatusRequest:
      example:
        CostAllocationTagsStatus: ""
      properties:
        CostAllocationTagsStatus:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagStatusList'
          - description: 'The list of <code>CostAllocationTagStatusEntry</code> objects
              that are used to update cost allocation tags status for this request. '
      required:
      - CostAllocationTagsStatus
      title: UpdateCostAllocationTagsStatusRequest
      type: object
    UpdateCostCategoryDefinitionResponse:
      example:
        CostCategoryArn: ""
        EffectiveStart: ""
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The unique identifier for your Cost Category. '
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The Cost Category's effective start date. It can only be
              a billing start date (first day of the month).
      type: object
    UpdateCostCategoryDefinitionRequest:
      example:
        CostCategoryArn: ""
        DefaultValue: DefaultValue
        EffectiveStart: ""
        SplitChargeRules: ""
        RuleVersion: CostCategoryExpression.v1
        Rules: ""
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique identifier for your Cost Category.
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: "The Cost Category's effective start date. It can only be\
              \ a billing start date (first day of the month). If the date isn't provided,\
              \ it's the first day of the current month. Dates can't be before the\
              \ previous twelve months, or in the future."
        RuleVersion:
          $ref: '#/components/schemas/CostCategoryRuleVersion'
        Rules:
          allOf:
          - $ref: '#/components/schemas/CostCategoryRulesList'
          - description: "The <code>Expression</code> object used to categorize costs.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CostCategoryRule.html\"\
              >CostCategoryRule </a>. "
        DefaultValue:
          description: The default value for the cost category.
          maxLength: 50
          minLength: 1
          type: string
          x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
        SplitChargeRules:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRulesList'
          - description: ' The split charge rules used to allocate your charges between
              your Cost Category values. '
      required:
      - CostCategoryArn
      - RuleVersion
      - Rules
      title: UpdateCostCategoryDefinitionRequest
      type: object
    AccountScope:
      enum:
      - PAYER
      - LINKED
      type: string
    AmortizedRecurringFee:
      type: string
    AmortizedUpfrontFee:
      type: string
    Anomaly:
      description: 'An unusual cost pattern. This consists of the detailed metadata
        and the current status of the anomaly object. '
      properties:
        AnomalyId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The unique identifier for the anomaly. '
        AnomalyStartDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: 'The first day the anomaly is detected. '
        AnomalyEndDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: 'The last day the anomaly is detected. '
        DimensionValue:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The dimension for the anomaly (for example, an Amazon Web\
              \ Service in a service monitor). "
        RootCauses:
          allOf:
          - $ref: '#/components/schemas/RootCauses'
          - description: 'The list of identified root causes for the anomaly. '
        AnomalyScore:
          $ref: '#/components/schemas/Anomaly_AnomalyScore'
        Impact:
          $ref: '#/components/schemas/Anomaly_Impact'
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The Amazon Resource Name (ARN) for the cost monitor that
              generated this anomaly. '
        Feedback:
          allOf:
          - $ref: '#/components/schemas/AnomalyFeedbackType'
          - description: 'The feedback value. '
      required:
      - AnomalyId
      - AnomalyScore
      - Impact
      - MonitorArn
      type: object
    Anomalies:
      items:
        $ref: '#/components/schemas/Anomaly'
      type: array
    GenericString:
      maxLength: 1024
      minLength: 0
      pattern: "[\\S\\s]*"
      type: string
    YearMonthDay:
      maxLength: 40
      minLength: 0
      pattern: "(\\d{4}-\\d{2}-\\d{2})(T\\d{2}:\\d{2}:\\d{2}Z)?"
      type: string
    RootCauses:
      items:
        $ref: '#/components/schemas/RootCause'
      type: array
    AnomalyScore:
      description: 'Quantifies the anomaly. The higher score means that it''s more
        anomalous. '
      properties:
        MaxScore:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: 'The maximum score that''s observed during the <code>AnomalyDateInterval</code>. '
        CurrentScore:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: 'The last observed score. '
      required:
      - CurrentScore
      - MaxScore
      type: object
    Impact:
      description: 'The dollar value of the anomaly. '
      properties:
        MaxImpact:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: The maximum dollar value that's observed for an anomaly.
        TotalImpact:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: The cumulative dollar difference between the total actual
              spend and total expected spend. It is calculated as <code>TotalActualSpend
              - TotalExpectedSpend</code>.
        TotalActualSpend:
          allOf:
          - $ref: '#/components/schemas/NullableNonNegativeDouble'
          - description: The cumulative dollar amount that was actually spent during
              the anomaly.
        TotalExpectedSpend:
          allOf:
          - $ref: '#/components/schemas/NullableNonNegativeDouble'
          - description: The cumulative dollar amount that was expected to be spent
              during the anomaly. It is calculated using advanced machine learning
              models to determine the typical spending pattern based on historical
              data for a customer.
        TotalImpactPercentage:
          allOf:
          - $ref: '#/components/schemas/NullableNonNegativeDouble'
          - description: "The cumulative percentage difference between the total actual\
              \ spend and total expected spend. It is calculated as <code>(TotalImpact\
              \ / TotalExpectedSpend) * 100</code>. When <code>TotalExpectedSpend</code>\
              \ is zero, this field is omitted. Expected spend can be zero in situations\
              \ such as when you start to use a service for the first time."
      required:
      - MaxImpact
      type: object
    AnomalyFeedbackType:
      enum:
      - "YES"
      - "NO"
      - PLANNED_ACTIVITY
      type: string
    AnomalyDateInterval:
      description: 'The time period for an anomaly. '
      properties:
        StartDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: 'The first date an anomaly was observed. '
        EndDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: 'The last date an anomaly was observed. '
      required:
      - StartDate
      type: object
    MonitorType:
      enum:
      - DIMENSIONAL
      - CUSTOM
      type: string
    MonitorDimension:
      enum:
      - SERVICE
      type: string
    Expression:
      description: "<p>Use <code>Expression</code> to filter in various Cost Explorer\
        \ APIs.</p> <p>Not all <code>Expression</code> types are supported in each\
        \ API. Refer to the documentation for each specific API to see what is supported.</p>\
        \ <p>There are two patterns:</p> <ul> <li> <p>Simple dimension values.</p>\
        \ <ul> <li> <p>There are three types of simple dimension values: <code>CostCategories</code>,\
        \ <code>Tags</code>, and <code>Dimensions</code>.</p> <ul> <li> <p>Specify\
        \ the <code>CostCategories</code> field to define a filter that acts on Cost\
        \ Categories.</p> </li> <li> <p>Specify the <code>Tags</code> field to define\
        \ a filter that acts on Cost Allocation Tags.</p> </li> <li> <p>Specify the\
        \ <code>Dimensions</code> field to define a filter that acts on the <a href=\"\
        https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html\"\
        > <code>DimensionValues</code> </a>.</p> </li> </ul> </li> <li> <p>For each\
        \ filter type, you can set the dimension name and values for the filters that\
        \ you plan to use.</p> <ul> <li> <p>For example, you can filter for <code>REGION==us-east-1\
        \ OR REGION==us-west-1</code>. For <code>GetRightsizingRecommendation</code>,\
        \ the Region is a full name (for example, <code>REGION==US East (N. Virginia)</code>.</p>\
        \ </li> <li> <p>The corresponding <code>Expression</code> for this example\
        \ is as follows: <code>{ \"Dimensions\": { \"Key\": \"REGION\", \"Values\"\
        : [ \"us-east-1\", \"us-west-1\" ] } }</code> </p> </li> <li> <p>As shown\
        \ in the previous example, lists of dimension values are combined with <code>OR</code>\
        \ when applying the filter.</p> </li> </ul> </li> <li> <p>You can also set\
        \ different match options to further control how the filter behaves. Not all\
        \ APIs support match options. Refer to the documentation for each specific\
        \ API to see what is supported.</p> <ul> <li> <p>For example, you can filter\
        \ for linked account names that start with \"a\".</p> </li> <li> <p>The corresponding\
        \ <code>Expression</code> for this example is as follows: <code>{ \"Dimensions\"\
        : { \"Key\": \"LINKED_ACCOUNT_NAME\", \"MatchOptions\": [ \"STARTS_WITH\"\
        \ ], \"Values\": [ \"a\" ] } }</code> </p> </li> </ul> </li> </ul> </li> <li>\
        \ <p>Compound <code>Expression</code> types with logical operations.</p> <ul>\
        \ <li> <p>You can use multiple <code>Expression</code> types and the logical\
        \ operators <code>AND/OR/NOT</code> to create a list of one or more <code>Expression</code>\
        \ objects. By doing this, you can filter by more advanced options.</p> </li>\
        \ <li> <p>For example, you can filter by <code>((REGION == us-east-1 OR REGION\
        \ == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)</code>.</p>\
        \ </li> <li> <p>The corresponding <code>Expression</code> for this example\
        \ is as follows: <code>{ \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\"\
        : \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\":\
        \ { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\"\
        : { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] } </code>\
        \ </p> </li> </ul> <note> <p>Because each <code>Expression</code> can have\
        \ only one operator, the service returns an error if more than one is specified.\
        \ The following example shows an <code>Expression</code> object that creates\
        \ an error: <code> { \"And\": [ ... ], \"Dimensions\": { \"Key\": \"USAGE_TYPE\"\
        , \"Values\": [ \"DataTransfer\" ] } } </code> </p> <p>The following is an\
        \ example of the corresponding error message: <code>\"Expression has more\
        \ than one roots. Only one root operator is allowed for each expression: And,\
        \ Or, Not, Dimensions, Tags, CostCategories\"</code> </p> </note> </li> </ul>\
        \ <note> <p>For the <code>GetRightsizingRecommendation</code> action, a combination\
        \ of OR and NOT isn't supported. OR isn't supported between different dimensions,\
        \ or dimensions and tags. NOT operators aren't supported. Dimensions are also\
        \ limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p>\
        \ <p>For the <code>GetReservationPurchaseRecommendation</code> action, only\
        \ NOT is supported. AND and OR aren't supported. Dimensions are limited to\
        \ <code>LINKED_ACCOUNT</code>.</p> </note>"
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
      properties:
        Or:
          allOf:
          - $ref: '#/components/schemas/Expressions'
          - description: Return results that match either <code>Dimension</code> object.
        And:
          allOf:
          - $ref: '#/components/schemas/Expressions'
          - description: Return results that match both <code>Dimension</code> objects.
        Not:
          $ref: '#/components/schemas/Expression_Not'
        Dimensions:
          $ref: '#/components/schemas/Expression_Dimensions'
        Tags:
          $ref: '#/components/schemas/Expression_Tags'
        CostCategories:
          $ref: '#/components/schemas/Expression_CostCategories'
      type: object
    NonNegativeInteger:
      minimum: 0
      type: integer
    AnomalyMonitor:
      description: 'This object continuously inspects your account''s cost data for
        anomalies. It''s based on <code>MonitorType</code> and <code>MonitorSpecification</code>.
        The content consists of detailed metadata and the current status of the monitor
        object. '
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The Amazon Resource Name (ARN) value. '
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The name of the monitor. '
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: 'The date when the monitor was created. '
        LastUpdatedDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: 'The date when the monitor was last updated. '
        LastEvaluatedDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: 'The date when the monitor last evaluated for anomalies. '
        MonitorType:
          allOf:
          - $ref: '#/components/schemas/MonitorType'
          - description: 'The possible type values. '
        MonitorDimension:
          allOf:
          - $ref: '#/components/schemas/MonitorDimension'
          - description: 'The dimensions to evaluate. '
        MonitorSpecification:
          $ref: '#/components/schemas/Expression'
        DimensionalValueCount:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: 'The value for evaluated dimensions. '
      required:
      - MonitorName
      - MonitorType
      type: object
    AnomalyMonitors:
      items:
        $ref: '#/components/schemas/AnomalyMonitor'
      type: array
    GenericDouble:
      format: double
      type: number
    MonitorArnList:
      items:
        $ref: '#/components/schemas/Arn'
      type: array
    Subscribers:
      items:
        $ref: '#/components/schemas/Subscriber'
      type: array
    NullableNonNegativeDouble:
      format: double
      minimum: 0
      type: number
    AnomalySubscriptionFrequency:
      enum:
      - DAILY
      - IMMEDIATE
      - WEEKLY
      type: string
    AnomalySubscription:
      description: "<p>An <code>AnomalySubscription</code> resource (also referred\
        \ to as an alert subscription) sends notifications about specific anomalies\
        \ that meet an alerting criteria defined by you.</p> <p>You can specify the\
        \ frequency of the alerts and the subscribers to notify.</p> <p>Anomaly subscriptions\
        \ can be associated with one or more <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalyMonitor.html\"\
        > <code>AnomalyMonitor</code> </a> resources, and they only send notifications\
        \ about anomalies detected by those associated monitors. You can also configure\
        \ a threshold to further control which anomalies are included in the notifications.</p>\
        \ <p>Anomalies that don’t exceed the chosen threshold and therefore don’t\
        \ trigger notifications from an anomaly subscription will still be available\
        \ on the console and from the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetAnomalies.html\"\
        > <code>GetAnomalies</code> </a> API.</p>"
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The <code>AnomalySubscription</code> Amazon Resource Name
              (ARN). '
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'Your unique account identifier. '
        MonitorArnList:
          allOf:
          - $ref: '#/components/schemas/MonitorArnList'
          - description: 'A list of cost anomaly monitors. '
        Subscribers:
          allOf:
          - $ref: '#/components/schemas/Subscribers'
          - description: 'A list of subscribers to notify. '
        Threshold:
          allOf:
          - $ref: '#/components/schemas/NullableNonNegativeDouble'
          - deprecated: true
            description: "<p>(deprecated)</p> <p>An absolute dollar value that must\
              \ be exceeded by the anomaly's total impact (see <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Impact.html\"\
              >Impact</a> for more details) for an anomaly notification to be generated.</p>\
              \ <p>This field has been deprecated. To specify a threshold, use ThresholdExpression.\
              \ Continued use of Threshold will be treated as shorthand syntax for\
              \ a ThresholdExpression.</p> <p>One of Threshold or ThresholdExpression\
              \ is required for this resource. You cannot specify both.</p>Threshold\
              \ has been deprecated in favor of ThresholdExpression"
        Frequency:
          allOf:
          - $ref: '#/components/schemas/AnomalySubscriptionFrequency'
          - description: "The frequency that anomaly notifications are sent. Notifications\
              \ are sent either over email (for DAILY and WEEKLY frequencies) or SNS\
              \ (for IMMEDIATE frequency). For more information, see <a href=\"https://docs.aws.amazon.com/cost-management/latest/userguide/ad-SNS.html\"\
              >Creating an Amazon SNS topic for anomaly notifications</a>."
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The name for the subscription. '
        ThresholdExpression:
          $ref: '#/components/schemas/AnomalySubscription_ThresholdExpression'
      required:
      - Frequency
      - MonitorArnList
      - Subscribers
      - SubscriptionName
      type: object
    AnomalySubscriptions:
      items:
        $ref: '#/components/schemas/AnomalySubscription'
      type: array
    Arn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws[-a-z0-9]*:[a-z0-9]+:[-a-z0-9]*:[0-9]{12}:[-a-zA-Z0-9/:_]+"
      type: string
    AttributeType:
      type: string
    AttributeValue:
      type: string
    Attributes:
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      type: object
    Context:
      enum:
      - COST_AND_USAGE
      - RESERVATIONS
      - SAVINGS_PLANS
      type: string
    TagKey:
      maxLength: 1024
      minLength: 0
      pattern: "[\\S\\s]*"
      type: string
    CostAllocationTagType:
      enum:
      - AWSGenerated
      - UserDefined
      type: string
    CostAllocationTagStatus:
      enum:
      - Active
      - Inactive
      type: string
    CostAllocationTag:
      description: 'The cost allocation tag structure. This includes detailed metadata
        for the <code>CostAllocationTag</code> object. '
      properties:
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: 'The key for the cost allocation tag. '
        Type:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagType'
          - description: "The type of cost allocation tag. You can use <code>AWSGenerated</code>\
              \ or <code>UserDefined</code> type tags. <code>AWSGenerated</code> type\
              \ tags are tags that Amazon Web Services defines and applies to support\
              \ Amazon Web Services resources for cost allocation purposes. <code>UserDefined</code>\
              \ type tags are tags that you define, create, and apply to resources. "
        Status:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagStatus'
          - description: 'The status of a cost allocation tag. '
      required:
      - Status
      - TagKey
      - Type
      type: object
    CostAllocationTagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 100
      minItems: 1
      type: array
    CostAllocationTagList:
      items:
        $ref: '#/components/schemas/CostAllocationTag'
      maxItems: 100
      minItems: 0
      type: array
    CostAllocationTagStatusEntry:
      description: 'The cost allocation tag status. The status of a key can either
        be active or inactive. '
      properties:
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: 'The key for the cost allocation tag. '
        Status:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagStatus'
          - description: 'The status of a cost allocation tag. '
      required:
      - Status
      - TagKey
      type: object
    CostAllocationTagStatusList:
      items:
        $ref: '#/components/schemas/CostAllocationTagStatusEntry'
      maxItems: 20
      minItems: 1
      type: array
    CostAllocationTagsMaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    ZonedDateTime:
      description: The period of time that you want the usage and costs for.
      maxLength: 25
      minLength: 20
      pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(([+-]\\d\\d:\\d\\d)|Z)$"
      type: string
    CostCategoryName:
      description: The unique name of the Cost Category.
      maxLength: 50
      minLength: 1
      type: string
      x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
    CostCategoryRuleVersion:
      description: The rule schema version in this particular Cost Category.
      enum:
      - CostCategoryExpression.v1
      type: string
    CostCategoryRulesList:
      items:
        $ref: '#/components/schemas/CostCategoryRule'
      maxItems: 500
      minItems: 1
      type: array
    CostCategorySplitChargeRulesList:
      items:
        $ref: '#/components/schemas/CostCategorySplitChargeRule'
      maxItems: 10
      minItems: 1
      type: array
    CostCategoryProcessingStatusList:
      items:
        $ref: '#/components/schemas/CostCategoryProcessingStatus'
      type: array
    CostCategoryValue:
      description: The default value for the cost category.
      maxLength: 50
      minLength: 1
      type: string
      x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
    CostCategory:
      description: The structure of Cost Categories. This includes detailed metadata
        and the set of rules for the <code>CostCategory</code> object.
      example:
        CostCategoryArn: ""
        EffectiveEnd: ""
        DefaultValue: DefaultValue
        EffectiveStart: ""
        SplitChargeRules: ""
        RuleVersion: CostCategoryExpression.v1
        Rules: ""
        ProcessingStatus: ""
        Name: Name
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The unique identifier for your Cost Category. '
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The effective start date of your Cost Category.
        EffectiveEnd:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The effective end date of your Cost Category.
        Name:
          description: The unique name of the Cost Category.
          maxLength: 50
          minLength: 1
          type: string
          x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
        RuleVersion:
          $ref: '#/components/schemas/CostCategoryRuleVersion'
        Rules:
          allOf:
          - $ref: '#/components/schemas/CostCategoryRulesList'
          - description: "The rules are processed in order. If there are multiple\
              \ rules that match the line item, then the first rule to match is used\
              \ to determine that Cost Category value. "
        SplitChargeRules:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRulesList'
          - description: ' The split charge rules that are used to allocate your charges
              between your Cost Category values. '
        ProcessingStatus:
          allOf:
          - $ref: '#/components/schemas/CostCategoryProcessingStatusList'
          - description: 'The list of processing statuses for Cost Management products
              for a specific cost category. '
        DefaultValue:
          description: The default value for the cost category.
          maxLength: 50
          minLength: 1
          type: string
          x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
      required:
      - CostCategoryArn
      - EffectiveStart
      - Name
      - RuleVersion
      - Rules
      type: object
    CostCategoryInheritedValueDimensionName:
      enum:
      - LINKED_ACCOUNT_NAME
      - TAG
      type: string
    CostCategoryInheritedValueDimension:
      description: "When you create or update a cost category, you can define the\
        \ <code>CostCategoryRule</code> rule type as <code>INHERITED_VALUE</code>.\
        \ This rule type adds the flexibility to define a rule that dynamically inherits\
        \ the cost category value from the dimension value that's defined by <code>CostCategoryInheritedValueDimension</code>.\
        \ For example, suppose that you want to dynamically group costs that are based\
        \ on the value of a specific tag key. First, choose an inherited value rule\
        \ type, and then choose the tag dimension and specify the tag key to use."
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/CostCategoryInheritedValueDimensionName'
          - description: "<p>The name of the dimension that's used to group costs.</p>\
              \ <p>If you specify <code>LINKED_ACCOUNT_NAME</code>, the cost category\
              \ value is based on account name. If you specify <code>TAG</code>, the\
              \ cost category value is based on the value of the specified tag key.</p>"
        DimensionKey:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The key to extract cost category values.
      type: object
    CostCategoryMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    CostCategoryNamesList:
      items:
        $ref: '#/components/schemas/CostCategoryName'
      type: array
    CostCategoryStatusComponent:
      enum:
      - COST_EXPLORER
      type: string
    CostCategoryStatus:
      enum:
      - PROCESSING
      - APPLIED
      type: string
    CostCategoryProcessingStatus:
      description: 'The list of processing statuses for Cost Management products for
        a specific cost category. '
      properties:
        Component:
          allOf:
          - $ref: '#/components/schemas/CostCategoryStatusComponent'
          - description: 'The Cost Management product name of the applied status. '
        Status:
          allOf:
          - $ref: '#/components/schemas/CostCategoryStatus'
          - description: 'The process status for a specific cost category. '
      type: object
    CostCategoryValuesList:
      items:
        $ref: '#/components/schemas/CostCategoryValue'
      type: array
    CostCategoryReference:
      description: <p>A reference to a Cost Category containing only enough information
        to identify the Cost Category.</p> <p>You can use this information to retrieve
        the full Cost Category information using <code>DescribeCostCategory</code>.</p>
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The unique identifier for your Cost Category. '
        Name:
          description: The unique name of the Cost Category.
          maxLength: 50
          minLength: 1
          type: string
          x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The Cost Category's effective start date.
        EffectiveEnd:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The Cost Category's effective end date.
        NumberOfRules:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: 'The number of rules that are associated with a specific
              Cost Category. '
        ProcessingStatus:
          allOf:
          - $ref: '#/components/schemas/CostCategoryProcessingStatusList'
          - description: 'The list of processing statuses for Cost Management products
              for a specific cost category. '
        Values:
          allOf:
          - $ref: '#/components/schemas/CostCategoryValuesList'
          - description: 'A list of unique cost category values in a specific cost
              category. '
        DefaultValue:
          description: The default value for the cost category.
          maxLength: 50
          minLength: 1
          type: string
          x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
      type: object
    CostCategoryReferencesList:
      items:
        $ref: '#/components/schemas/CostCategoryReference'
      type: array
    CostCategoryRuleType:
      enum:
      - REGULAR
      - INHERITED_VALUE
      type: string
    CostCategoryRule:
      description: "Rules are processed in order. If there are multiple rules that\
        \ match the line item, then the first rule to match is used to determine that\
        \ Cost Category value."
      properties:
        Value:
          description: The default value for the cost category.
          maxLength: 50
          minLength: 1
          type: string
          x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
        Rule:
          $ref: '#/components/schemas/CostCategoryRule_Rule'
        InheritedValue:
          $ref: '#/components/schemas/CostCategoryRule_InheritedValue'
        Type:
          allOf:
          - $ref: '#/components/schemas/CostCategoryRuleType'
          - description: "You can define the <code>CostCategoryRule</code> rule type\
              \ as either <code>REGULAR</code> or <code>INHERITED_VALUE</code>. The\
              \ <code>INHERITED_VALUE</code> rule type adds the flexibility to define\
              \ a rule that dynamically inherits the cost category value. This value\
              \ is from the dimension value that's defined by <code>CostCategoryInheritedValueDimension</code>.\
              \ For example, suppose that you want to costs to be dynamically grouped\
              \ based on the value of a specific tag key. First, choose an inherited\
              \ value rule type, and then choose the tag dimension and specify the\
              \ tag key to use."
      type: object
    CostCategorySplitChargeMethod:
      enum:
      - FIXED
      - PROPORTIONAL
      - EVEN
      type: string
    CostCategorySplitChargeRuleTargetsList:
      items:
        $ref: '#/components/schemas/GenericString'
      maxItems: 500
      minItems: 1
      type: array
    CostCategorySplitChargeRuleParametersList:
      items:
        $ref: '#/components/schemas/CostCategorySplitChargeRuleParameter'
      maxItems: 10
      minItems: 1
      type: array
    CostCategorySplitChargeRule:
      description: 'Use the split charge rule to split the cost of one Cost Category
        value across several other target values. '
      properties:
        Source:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The Cost Category value that you want to split. That value\
              \ can't be used as a source or a target in other split charge rules.\
              \ To indicate uncategorized costs, you can use an empty string as the\
              \ source."
        Targets:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRuleTargetsList'
          - description: 'The Cost Category values that you want to split costs across.
              These values can''t be used as a source in other split charge rules. '
        Method:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeMethod'
          - description: <p>The method that's used to define how to split your source
              costs across your targets. </p> <p> <code>Proportional</code> - Allocates
              charges across your targets based on the proportional weighted cost
              of each target.</p> <p> <code>Fixed</code> - Allocates charges across
              your targets based on your defined allocation percentage.</p> <p>&gt;<code>Even</code>
              - Allocates costs evenly across all targets.</p>
        Parameters:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRuleParametersList'
          - description: 'The parameters for a split charge method. This is only required
              for the <code>FIXED</code> method. '
      required:
      - Method
      - Source
      - Targets
      type: object
    CostCategorySplitChargeRuleParameterType:
      enum:
      - ALLOCATION_PERCENTAGES
      type: string
    CostCategorySplitChargeRuleParameterValuesList:
      items:
        $ref: '#/components/schemas/GenericString'
      maxItems: 500
      minItems: 1
      type: array
    CostCategorySplitChargeRuleParameter:
      description: 'The parameters for a split charge method. '
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRuleParameterType'
          - description: 'The parameter type. '
        Values:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRuleParameterValuesList'
          - description: 'The parameter values. '
      required:
      - Type
      - Values
      type: object
    Values:
      items:
        $ref: '#/components/schemas/Value'
      type: array
    MatchOptions:
      items:
        $ref: '#/components/schemas/MatchOption'
      type: array
    CostCategoryValues:
      description: "<p>The Cost Categories values used for filtering the costs.</p>\
        \ <p>If <code>Values</code> and <code>Key</code> are not specified, the <code>ABSENT</code>\
        \ <code>MatchOption</code> is applied to all Cost Categories. That is, it\
        \ filters on resources that aren't mapped to any Cost Categories.</p> <p>If\
        \ <code>Values</code> is provided and <code>Key</code> isn't specified, the\
        \ <code>ABSENT</code> <code>MatchOption</code> is applied to the Cost Categories\
        \ <code>Key</code> only. That is, it filters on resources without the given\
        \ Cost Categories key.</p>"
      properties:
        Key:
          description: The unique name of the Cost Category.
          maxLength: 50
          minLength: 1
          type: string
          x-pattern: "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
        Values:
          allOf:
          - $ref: '#/components/schemas/Values'
          - description: The specific value of the Cost Category.
        MatchOptions:
          allOf:
          - $ref: '#/components/schemas/MatchOptions'
          - description: 'The match options that you can use to filter your results.
              MatchOptions is only applicable for actions related to cost category.
              The default values for <code>MatchOptions</code> is <code>EQUALS</code>
              and <code>CASE_SENSITIVE</code>. '
      type: object
    CoverageHours:
      description: How long a running instance either used a reservation or was On-Demand.
      properties:
        OnDemandHours:
          allOf:
          - $ref: '#/components/schemas/OnDemandHours'
          - description: The number of instance running hours that On-Demand Instances
              covered.
        ReservedHours:
          allOf:
          - $ref: '#/components/schemas/ReservedHours'
          - description: The number of instance running hours that reservations covered.
        TotalRunningHours:
          allOf:
          - $ref: '#/components/schemas/TotalRunningHours'
          - description: "The total instance usage, in hours."
        CoverageHoursPercentage:
          allOf:
          - $ref: '#/components/schemas/CoverageHoursPercentage'
          - description: The percentage of instance hours that a reservation covered.
      type: object
    CoverageNormalizedUnits:
      description: "<p>The amount of instance usage, in normalized units. You can\
        \ use normalized units to see your EC2 usage for multiple sizes of instances\
        \ in a uniform way. For example, suppose that you run an xlarge instance and\
        \ a 2xlarge instance. If you run both instances for the same amount of time,\
        \ the 2xlarge instance uses twice as much of your reservation as the xlarge\
        \ instance, even though both instances show only one instance-hour. When you\
        \ use normalized units instead of instance-hours, the xlarge instance used\
        \ 8 normalized units, and the 2xlarge instance used 16 normalized units.</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html\"\
        >Modifying Reserved Instances</a> in the <i>Amazon Elastic Compute Cloud User\
        \ Guide for Linux Instances</i>.</p>"
      properties:
        OnDemandNormalizedUnits:
          allOf:
          - $ref: '#/components/schemas/OnDemandNormalizedUnits'
          - description: The number of normalized units that are covered by On-Demand
              Instances instead of a reservation.
        ReservedNormalizedUnits:
          allOf:
          - $ref: '#/components/schemas/ReservedNormalizedUnits'
          - description: The number of normalized units that a reservation covers.
        TotalRunningNormalizedUnits:
          allOf:
          - $ref: '#/components/schemas/TotalRunningNormalizedUnits'
          - description: The total number of normalized units that you used.
        CoverageNormalizedUnitsPercentage:
          allOf:
          - $ref: '#/components/schemas/CoverageNormalizedUnitsPercentage'
          - description: The percentage of your used instance normalized units that
              a reservation covers.
      type: object
    CoverageCost:
      description: How much it costs to run an instance.
      properties:
        OnDemandCost:
          allOf:
          - $ref: '#/components/schemas/OnDemandCost'
          - description: How much an On-Demand Instance costs.
      type: object
    Coverage:
      description: The amount of instance usage that a reservation covered.
      properties:
        CoverageHours:
          $ref: '#/components/schemas/Coverage_CoverageHours'
        CoverageNormalizedUnits:
          $ref: '#/components/schemas/Coverage_CoverageNormalizedUnits'
        CoverageCost:
          $ref: '#/components/schemas/Coverage_CoverageCost'
      type: object
    DateInterval:
      description: 'The time period of the request. '
      example:
        Start: ""
        End: ""
      properties:
        Start:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: "The beginning of the time period. The start date is inclusive.\
              \ For example, if <code>start</code> is <code>2017-01-01</code>, Amazon\
              \ Web Services retrieves cost and usage data starting at <code>2017-01-01</code>\
              \ up to the end date. The start date must be equal to or no later than\
              \ the current date to avoid a validation error."
        End:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: "The end of the time period. The end date is exclusive. For\
              \ example, if <code>end</code> is <code>2017-05-01</code>, Amazon Web\
              \ Services retrieves cost and usage data from the start date up to,\
              \ but not including, <code>2017-05-01</code>."
      required:
      - End
      - Start
      type: object
    ReservationCoverageGroups:
      items:
        $ref: '#/components/schemas/ReservationCoverageGroup'
      type: array
    CoverageByTime:
      description: "Reservation coverage for a specified period, in hours."
      properties:
        TimePeriod:
          $ref: '#/components/schemas/CoverageByTime_TimePeriod'
        Groups:
          allOf:
          - $ref: '#/components/schemas/ReservationCoverageGroups'
          - description: The groups of instances that the reservation covered.
        Total:
          $ref: '#/components/schemas/CoverageByTime_Total'
      type: object
    OnDemandCost:
      type: string
    OnDemandHours:
      type: string
    ReservedHours:
      type: string
    TotalRunningHours:
      type: string
    CoverageHoursPercentage:
      type: string
    OnDemandNormalizedUnits:
      type: string
    ReservedNormalizedUnits:
      type: string
    TotalRunningNormalizedUnits:
      type: string
    CoverageNormalizedUnitsPercentage:
      type: string
    CoveragesByTime:
      items:
        $ref: '#/components/schemas/CoverageByTime'
      type: array
    ResourceTagList:
      items:
        $ref: '#/components/schemas/ResourceTag'
      maxItems: 200
      minItems: 0
      type: array
    TagValuesList:
      items:
        $ref: '#/components/schemas/TagValues'
      type: array
    ResourceDetails:
      description: Details for the resource.
      properties:
        EC2ResourceDetails:
          $ref: '#/components/schemas/ResourceDetails_EC2ResourceDetails'
      type: object
    ResourceUtilization:
      description: 'Resource utilization of current resource. '
      properties:
        EC2ResourceUtilization:
          $ref: '#/components/schemas/ResourceUtilization_EC2ResourceUtilization'
      type: object
    CurrentInstance:
      description: Context about the current instance.
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Resource ID of the current instance.
        InstanceName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name that you given an instance. This field shows as
              blank if you haven't given the instance a name.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagValuesList'
          - description: Cost allocation resource tags that are applied to the instance.
        ResourceDetails:
          $ref: '#/components/schemas/CurrentInstance_ResourceDetails'
        ResourceUtilization:
          $ref: '#/components/schemas/CurrentInstance_ResourceUtilization'
        ReservationCoveredHoursInLookbackPeriod:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of hours during the lookback period that's covered
              by reservations.
        SavingsPlansCoveredHoursInLookbackPeriod:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of hours during the lookback period that's covered
              by Savings Plans.
        OnDemandHoursInLookbackPeriod:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of hours during the lookback period that's billed
              at On-Demand rates.
        TotalRunningHoursInLookbackPeriod:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The total number of hours that the instance ran during the
              lookback period.
        MonthlyCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The current On-Demand cost of operating this instance on
              a monthly basis.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to calculate
              the costs for this instance.
      type: object
    Dimension:
      enum:
      - AZ
      - INSTANCE_TYPE
      - LINKED_ACCOUNT
      - LINKED_ACCOUNT_NAME
      - OPERATION
      - PURCHASE_TYPE
      - REGION
      - SERVICE
      - SERVICE_CODE
      - USAGE_TYPE
      - USAGE_TYPE_GROUP
      - RECORD_TYPE
      - OPERATING_SYSTEM
      - TENANCY
      - SCOPE
      - PLATFORM
      - SUBSCRIPTION_ID
      - LEGAL_ENTITY_NAME
      - DEPLOYMENT_OPTION
      - DATABASE_ENGINE
      - CACHE_ENGINE
      - INSTANCE_TYPE_FAMILY
      - BILLING_ENTITY
      - RESERVATION_ID
      - RESOURCE_ID
      - RIGHTSIZING_TYPE
      - SAVINGS_PLANS_TYPE
      - SAVINGS_PLAN_ARN
      - PAYMENT_OPTION
      - AGREEMENT_END_DATE_TIME_AFTER
      - AGREEMENT_END_DATE_TIME_BEFORE
      - INVOICING_ENTITY
      - ANOMALY_TOTAL_IMPACT_ABSOLUTE
      - ANOMALY_TOTAL_IMPACT_PERCENTAGE
      type: string
    DimensionValues:
      description: The metadata that you can use to filter and group your results.
        You can use <code>GetDimensionValues</code> to find specific values.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/Dimension'
          - description: "<p>The names of the metadata types that you can use to filter\
              \ and group your results. For example, <code>AZ</code> returns a list\
              \ of Availability Zones.</p> <p>Not all dimensions are supported in\
              \ each API. Refer to the documentation for each specific API to see\
              \ what is supported.</p> <p> <code>LINK_ACCOUNT_NAME</code> and <code>SERVICE_CODE</code>\
              \ can only be used in <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CostCategoryRule.html\"\
              >CostCategoryRule</a>.</p> <p> <code>ANOMALY_TOTAL_IMPACT_ABSOLUTE</code>\
              \ and <code>ANOMALY_TOTAL_IMPACT_PERCENTAGE</code> can only be used\
              \ in <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalySubscription.html\"\
              >AnomalySubscriptions</a>.</p>"
        Values:
          allOf:
          - $ref: '#/components/schemas/Values'
          - description: The metadata values that you can use to filter and group
              your results. You can use <code>GetDimensionValues</code> to find specific
              values.
        MatchOptions:
          allOf:
          - $ref: '#/components/schemas/MatchOptions'
          - description: <p>The match options that you can use to filter your results.</p>
              <p> <code>MatchOptions</code> is only applicable for actions related
              to Cost Category and Anomaly Subscriptions. Refer to the documentation
              for each specific API to see what is supported.</p> <p>The default values
              for <code>MatchOptions</code> are <code>EQUALS</code> and <code>CASE_SENSITIVE</code>.</p>
      type: object
    Value:
      maxLength: 1024
      minLength: 0
      pattern: "[\\S\\s]*"
      type: string
    DimensionValuesWithAttributes:
      description: The metadata of a specific type that you can use to filter and
        group your results. You can use <code>GetDimensionValues</code> to find specific
        values.
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          - description: The value of a dimension with a specific attribute.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: The attribute that applies to a specific <code>Dimension</code>.
      type: object
    DimensionValuesWithAttributesList:
      items:
        $ref: '#/components/schemas/DimensionValuesWithAttributes'
      type: array
    DiskResourceUtilization:
      description: 'The field that contains a list of disk (local storage) metrics
        that are associated with the current instance. '
      properties:
        DiskReadOpsPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The maximum number of read operations per second. '
        DiskWriteOpsPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The maximum number of write operations per second. '
        DiskReadBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The maximum read throughput operations per second. '
        DiskWriteBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The maximum write throughput operations per second. '
      type: object
    EBSResourceUtilization:
      description: 'The EBS field that contains a list of EBS metrics that are associated
        with the current instance. '
      properties:
        EbsReadOpsPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The maximum number of read operations per second. '
        EbsWriteOpsPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The maximum number of write operations per second. '
        EbsReadBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The maximum size of read operations per second '
        EbsWriteBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The maximum size of write operations per second. '
      type: object
    GenericBoolean:
      type: boolean
    EC2InstanceDetails:
      description: Details about the Amazon EC2 instances that Amazon Web Services
        recommends that you purchase.
      properties:
        Family:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The instance family of the recommended reservation.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The type of instance that Amazon Web Services recommends.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the recommended reservation.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Availability Zone of the recommended reservation.
        Platform:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The platform of the recommended reservation. The platform\
              \ is the specific combination of operating system, license model, and\
              \ software on an instance."
        Tenancy:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Determines whether the recommended reservation is dedicated
              or shared.
        CurrentGeneration:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: 'Determines whether the recommendation is for a current-generation
              instance. '
        SizeFlexEligible:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommended reservation is size flexible.
      type: object
    EC2ResourceDetails:
      description: Details on the Amazon EC2 Resource.
      properties:
        HourlyOnDemandRate:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The hourly public On-Demand rate for the instance type.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The type of Amazon Web Services instance.
        Platform:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The platform of the Amazon Web Services instance. The platform\
              \ is the specific combination of operating system, license model, and\
              \ software on an instance."
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the instance.
        Sku:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The SKU of the product.
        Memory:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The memory capacity of the Amazon Web Services instance.
        NetworkPerformance:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The network performance capacity of the Amazon Web Services
              instance.
        Storage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The disk storage of the Amazon Web Services instance. This
              doesn't include EBS storage.
        Vcpu:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of VCPU cores in the Amazon Web Services instance
              type.
      type: object
    NetworkResourceUtilization:
      description: 'The network field that contains a list of network metrics that
        are associated with the current instance. '
      properties:
        NetworkInBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The network inbound throughput utilization measured in Bytes
              per second (Bps). '
        NetworkOutBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The network outbound throughput utilization measured in
              Bytes per second (Bps). '
        NetworkPacketsInPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The network inbound packets that are measured in packets
              per second. '
        NetworkPacketsOutPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The network outbound packets that are measured in packets
              per second. '
      type: object
    EC2ResourceUtilization:
      description: 'Utilization metrics for the instance. '
      properties:
        MaxCpuUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum observed or expected CPU utilization of the instance.
        MaxMemoryUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum observed or expected memory utilization of the
              instance.
        MaxStorageUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum observed or expected storage utilization of the
              instance. This doesn't include EBS storage.
        EBSResourceUtilization:
          $ref: '#/components/schemas/EC2ResourceUtilization_EBSResourceUtilization'
        DiskResourceUtilization:
          $ref: '#/components/schemas/EC2ResourceUtilization_DiskResourceUtilization'
        NetworkResourceUtilization:
          $ref: '#/components/schemas/EC2ResourceUtilization_NetworkResourceUtilization'
      type: object
    OfferingClass:
      enum:
      - STANDARD
      - CONVERTIBLE
      type: string
    EC2Specification:
      description: The Amazon EC2 hardware specifications that you want Amazon Web
        Services to provide recommendations for.
      properties:
        OfferingClass:
          allOf:
          - $ref: '#/components/schemas/OfferingClass'
          - description: Indicates whether you want a recommendation for standard
              or convertible reservations.
      type: object
    ESInstanceDetails:
      description: Details about the Amazon OpenSearch Service instances that Amazon
        Web Services recommends that you purchase.
      properties:
        InstanceClass:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The class of instance that Amazon Web Services recommends.
        InstanceSize:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The size of instance that Amazon Web Services recommends.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the recommended reservation.
        CurrentGeneration:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommendation is for a current-generation
              instance.
        SizeFlexEligible:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommended reservation is size flexible.
      type: object
    ElastiCacheInstanceDetails:
      description: Details about the Amazon ElastiCache instances that Amazon Web
        Services recommends that you purchase.
      properties:
        Family:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The instance family of the recommended reservation.
        NodeType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The type of node that Amazon Web Services recommends.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the recommended reservation.
        ProductDescription:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The description of the recommended reservation.
        CurrentGeneration:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommendation is for a current generation
              instance.
        SizeFlexEligible:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommended reservation is size flexible.
      type: object
    Entity:
      type: string
    ErrorMessage:
      type: string
    Estimated:
      type: boolean
    Expressions:
      items:
        $ref: '#/components/schemas/Expression'
      type: array
    TagValues:
      description: "<p>The values that are available for a tag.</p> <p>If <code>Values</code>\
        \ and <code>Key</code> aren't specified, the <code>ABSENT</code> <code>MatchOption</code>\
        \ is applied to all tags. That is, it's filtered on resources with no tags.</p>\
        \ <p>If <code>Key</code> is provided and <code>Values</code> isn't specified,\
        \ the <code>ABSENT</code> <code>MatchOption</code> is applied to the tag <code>Key</code>\
        \ only. That is, it's filtered on resources without the given tag key.</p>"
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key for the tag.
        Values:
          allOf:
          - $ref: '#/components/schemas/Values'
          - description: The specific value of the tag.
        MatchOptions:
          allOf:
          - $ref: '#/components/schemas/MatchOptions'
          - description: The match options that you can use to filter your results.
              <code>MatchOptions</code> is only applicable for actions related to
              Cost Category. The default values for <code>MatchOptions</code> are
              <code>EQUALS</code> and <code>CASE_SENSITIVE</code>.
      type: object
    FindingReasonCode:
      enum:
      - CPU_OVER_PROVISIONED
      - CPU_UNDER_PROVISIONED
      - MEMORY_OVER_PROVISIONED
      - MEMORY_UNDER_PROVISIONED
      - EBS_THROUGHPUT_OVER_PROVISIONED
      - EBS_THROUGHPUT_UNDER_PROVISIONED
      - EBS_IOPS_OVER_PROVISIONED
      - EBS_IOPS_UNDER_PROVISIONED
      - NETWORK_BANDWIDTH_OVER_PROVISIONED
      - NETWORK_BANDWIDTH_UNDER_PROVISIONED
      - NETWORK_PPS_OVER_PROVISIONED
      - NETWORK_PPS_UNDER_PROVISIONED
      - DISK_IOPS_OVER_PROVISIONED
      - DISK_IOPS_UNDER_PROVISIONED
      - DISK_THROUGHPUT_OVER_PROVISIONED
      - DISK_THROUGHPUT_UNDER_PROVISIONED
      type: string
    FindingReasonCodes:
      items:
        $ref: '#/components/schemas/FindingReasonCode'
      type: array
    ForecastResult:
      description: The forecast that's created for your query.
      properties:
        TimePeriod:
          $ref: '#/components/schemas/ForecastResult_TimePeriod'
        MeanValue:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The mean value of the forecast.
        PredictionIntervalLowerBound:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The lower limit for the prediction interval. '
        PredictionIntervalUpperBound:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The upper limit for the prediction interval. '
      type: object
    ForecastResultsByTime:
      items:
        $ref: '#/components/schemas/ForecastResult'
      type: array
    GenerationStatus:
      enum:
      - SUCCEEDED
      - PROCESSING
      - FAILED
      type: string
    RecommendationId:
      maxLength: 36
      minLength: 36
      pattern: "^[\\S\\s]{8}-[\\S\\s]{4}-[\\S\\s]{4}-[\\S\\s]{4}-[\\S\\s]{12}$"
      type: string
    GenerationSummary:
      description: The summary of the Savings Plans recommendation generation.
      properties:
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          - description: Indicates the ID for this specific recommendation.
        GenerationStatus:
          allOf:
          - $ref: '#/components/schemas/GenerationStatus'
          - description: "Indicates whether the recommendation generation succeeded,\
              \ is processing, or failed."
        GenerationStartedTime:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: Indicates the start time of the recommendation generation.
        GenerationCompletionTime:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: Indicates the completion time of the recommendation generation.
        EstimatedCompletionTime:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: Indicates the estimated time for when the recommendation
              generation will complete.
      type: object
    GenerationSummaryList:
      items:
        $ref: '#/components/schemas/GenerationSummary'
      type: array
    TotalImpactFilter:
      description: 'Filters cost anomalies based on the total impact. '
      properties:
        NumericOperator:
          allOf:
          - $ref: '#/components/schemas/NumericOperator'
          - description: 'The comparing value that''s used in the filter. '
        StartValue:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: 'The lower bound dollar value that''s used in the filter. '
        EndValue:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: 'The upper bound dollar value that''s used in the filter. '
      required:
      - NumericOperator
      - StartValue
      type: object
    NextPageToken:
      maxLength: 8192
      minLength: 0
      pattern: "[\\S\\s]*"
      type: string
    PageSize:
      type: integer
    Granularity:
      enum:
      - DAILY
      - MONTHLY
      - HOURLY
      type: string
    MetricNames:
      items:
        $ref: '#/components/schemas/MetricName'
      type: array
    GroupDefinitions:
      items:
        $ref: '#/components/schemas/GroupDefinition'
      type: array
    ResultsByTime:
      items:
        $ref: '#/components/schemas/ResultByTime'
      type: array
    SearchString:
      maxLength: 1024
      minLength: 0
      pattern: "[\\S\\s]*"
      type: string
    SortDefinitions:
      items:
        $ref: '#/components/schemas/SortDefinition'
      type: array
    MaxResults:
      minimum: 1
      type: integer
    Metric:
      enum:
      - BLENDED_COST
      - UNBLENDED_COST
      - AMORTIZED_COST
      - NET_UNBLENDED_COST
      - NET_AMORTIZED_COST
      - USAGE_QUANTITY
      - NORMALIZED_USAGE_AMOUNT
      type: string
    PredictionIntervalLevel:
      maximum: 99
      minimum: 51
      type: integer
    MetricValue:
      description: The aggregated value for a metric.
      properties:
        Amount:
          allOf:
          - $ref: '#/components/schemas/MetricAmount'
          - description: The actual number that represents the metric.
        Unit:
          allOf:
          - $ref: '#/components/schemas/MetricUnit'
          - description: The unit that the metric is given in.
      type: object
    SortDefinition:
      description: The details for how to sort the data.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/SortDefinitionKey'
          - description: The key that's used to sort the data.
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order that's used to sort the data.
      required:
      - Key
      type: object
    LookbackPeriodInDays:
      enum:
      - SEVEN_DAYS
      - THIRTY_DAYS
      - SIXTY_DAYS
      type: string
    TermInYears:
      enum:
      - ONE_YEAR
      - THREE_YEARS
      type: string
    PaymentOption:
      enum:
      - NO_UPFRONT
      - PARTIAL_UPFRONT
      - ALL_UPFRONT
      - LIGHT_UTILIZATION
      - MEDIUM_UTILIZATION
      - HEAVY_UTILIZATION
      type: string
    ServiceSpecification:
      description: Hardware specifications for the service that you want recommendations
        for.
      properties:
        EC2Specification:
          $ref: '#/components/schemas/ServiceSpecification_EC2Specification'
      type: object
    ReservationPurchaseRecommendationMetadata:
      description: "Information about this specific recommendation, such as the timestamp\
        \ for when Amazon Web Services made a specific recommendation."
      properties:
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The ID for this specific recommendation.
        GenerationTimestamp:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The timestamp for when Amazon Web Services made this recommendation.
      type: object
    ReservationPurchaseRecommendations:
      items:
        $ref: '#/components/schemas/ReservationPurchaseRecommendation'
      type: array
    UtilizationsByTime:
      items:
        $ref: '#/components/schemas/UtilizationByTime'
      type: array
    ReservationAggregates:
      description: The aggregated numbers for your reservation usage.
      properties:
        UtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/UtilizationPercentage'
          - description: The percentage of reservation time that you used.
        UtilizationPercentageInUnits:
          allOf:
          - $ref: '#/components/schemas/UtilizationPercentageInUnits'
          - description: "The percentage of Amazon EC2 reservation time that you used.\
              \ It's converted to normalized units. Normalized units are available\
              \ only for Amazon EC2 usage after November 11, 2017."
        PurchasedHours:
          allOf:
          - $ref: '#/components/schemas/PurchasedHours'
          - description: How many reservation hours that you purchased.
        PurchasedUnits:
          allOf:
          - $ref: '#/components/schemas/PurchasedUnits'
          - description: "The number of Amazon EC2 reservation hours that you purchased.\
              \ It's converted to normalized units. Normalized units are available\
              \ only for Amazon EC2 usage after November 11, 2017."
        TotalActualHours:
          allOf:
          - $ref: '#/components/schemas/TotalActualHours'
          - description: The total number of reservation hours that you used.
        TotalActualUnits:
          allOf:
          - $ref: '#/components/schemas/TotalActualUnits'
          - description: "The total number of Amazon EC2 reservation hours that you\
              \ used. It's converted to normalized units. Normalized units are available\
              \ only for Amazon EC2 usage after November 11, 2017."
        UnusedHours:
          allOf:
          - $ref: '#/components/schemas/UnusedHours'
          - description: The number of reservation hours that you didn't use.
        UnusedUnits:
          allOf:
          - $ref: '#/components/schemas/UnusedUnits'
          - description: "The number of Amazon EC2 reservation hours that you didn't\
              \ use. It's converted to normalized units. Normalized units are available\
              \ only for Amazon EC2 usage after November 11, 2017."
        OnDemandCostOfRIHoursUsed:
          allOf:
          - $ref: '#/components/schemas/OnDemandCostOfRIHoursUsed'
          - description: How much your reservation costs if charged On-Demand rates.
        NetRISavings:
          allOf:
          - $ref: '#/components/schemas/NetRISavings'
          - description: How much you saved due to purchasing and utilizing reservation.
              Amazon Web Services calculates this by subtracting <code>TotalAmortizedFee</code>
              from <code>OnDemandCostOfRIHoursUsed</code>.
        TotalPotentialRISavings:
          allOf:
          - $ref: '#/components/schemas/TotalPotentialRISavings'
          - description: How much you might save if you use your entire reservation.
        AmortizedUpfrontFee:
          allOf:
          - $ref: '#/components/schemas/AmortizedUpfrontFee'
          - description: The upfront cost of your reservation. It's amortized over
              the reservation period.
        AmortizedRecurringFee:
          allOf:
          - $ref: '#/components/schemas/AmortizedRecurringFee'
          - description: The monthly cost of your reservation. It's amortized over
              the reservation period.
        TotalAmortizedFee:
          allOf:
          - $ref: '#/components/schemas/TotalAmortizedFee'
          - description: The total cost of your reservation. It's amortized over the
              reservation period.
        RICostForUnusedHours:
          allOf:
          - $ref: '#/components/schemas/RICostForUnusedHours'
          - description: The cost of unused hours for your reservation.
        RealizedSavings:
          allOf:
          - $ref: '#/components/schemas/RealizedSavings'
          - description: The realized savings because of purchasing and using a reservation.
        UnrealizedSavings:
          allOf:
          - $ref: '#/components/schemas/UnrealizedSavings'
          - description: The unrealized savings because of purchasing and using a
              reservation.
      type: object
    RightsizingRecommendationConfiguration:
      description: "You can use <code>RightsizingRecommendationConfiguration</code>\
        \ to customize recommendations across two attributes. You can choose to view\
        \ recommendations for instances within the same instance families or across\
        \ different instance families. You can also choose to view your estimated\
        \ savings that are associated with recommendations with consideration of existing\
        \ Savings Plans or Reserved Instance (RI) benefits, or neither. "
      properties:
        RecommendationTarget:
          allOf:
          - $ref: '#/components/schemas/RecommendationTarget'
          - description: 'The option to see recommendations within the same instance
              family or recommendations for instances across other families. The default
              value is <code>SAME_INSTANCE_FAMILY</code>. '
        BenefitsConsidered:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: 'The option to consider RI or Savings Plans discount benefits
              in your savings calculation. The default value is <code>TRUE</code>. '
      required:
      - BenefitsConsidered
      - RecommendationTarget
      type: object
    RightsizingRecommendationMetadata:
      description: Metadata for this recommendation set.
      properties:
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The ID for this specific recommendation.
        GenerationTimestamp:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The timestamp for when Amazon Web Services made this recommendation.
        LookbackPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/LookbackPeriodInDays'
          - description: The number of days of previous usage that Amazon Web Services
              considers when making this recommendation.
        AdditionalMetadata:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Additional metadata that might be applicable to the recommendation.
      type: object
    RightsizingRecommendationSummary:
      description: 'The summary of rightsizing recommendations '
      properties:
        TotalRecommendationCount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The total number of instance recommendations.
        EstimatedTotalMonthlySavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The estimated total savings resulting from modifications,\
              \ on a monthly basis."
        SavingsCurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to calculate
              the savings.
        SavingsPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: ' The savings percentage based on the recommended modifications.
              It''s relative to the total On-Demand costs that are associated with
              these instances.'
      type: object
    RightsizingRecommendationList:
      items:
        $ref: '#/components/schemas/RightsizingRecommendation'
      type: array
    RecommendationDetailId:
      maxLength: 36
      minLength: 36
      pattern: "^[\\S\\s]{8}-[\\S\\s]{4}-[\\S\\s]{4}-[\\S\\s]{4}-[\\S\\s]{12}$"
      type: string
    RecommendationDetailData:
      description: The details and metrics for the given recommendation.
      properties:
        AccountScope:
          allOf:
          - $ref: '#/components/schemas/AccountScope'
          - description: "The account scope that you want your recommendations for.\
              \ Amazon Web Services calculates recommendations including the management\
              \ account and member accounts if the value is set to PAYER. If the value\
              \ is LINKED, recommendations are calculated for individual member accounts\
              \ only."
        LookbackPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/LookbackPeriodInDays'
          - description: How many days of previous usage that Amazon Web Services
              considers when making this recommendation.
        SavingsPlansType:
          allOf:
          - $ref: '#/components/schemas/SupportedSavingsPlansType'
          - description: The requested Savings Plan recommendation type.
        TermInYears:
          allOf:
          - $ref: '#/components/schemas/TermInYears'
          - description: The term of the commitment in years.
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/PaymentOption'
          - description: "The payment option for the commitment (for example, All\
              \ Upfront or No Upfront)."
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The AccountID that the recommendation is generated for.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to generate
              the recommendation and present potential savings.
        InstanceFamily:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The instance family of the recommended Savings Plan.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The region the recommendation is generated for.
        OfferingId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The unique ID that's used to distinguish Savings Plans from
              one another.
        GenerationTimestamp:
          description: The period of time that you want the usage and costs for.
          maxLength: 25
          minLength: 20
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(([+-]\\d\\d:\\d\\d)|Z)$"
          type: string
        LatestUsageTimestamp:
          description: The period of time that you want the usage and costs for.
          maxLength: 25
          minLength: 20
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(([+-]\\d\\d:\\d\\d)|Z)$"
          type: string
        CurrentAverageHourlyOnDemandSpend:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The average value of hourly On-Demand spend over the lookback
              period of the applicable usage type.
        CurrentMaximumHourlyOnDemandSpend:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The highest value of hourly On-Demand spend over the lookback
              period of the applicable usage type.
        CurrentMinimumHourlyOnDemandSpend:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The lowest value of hourly On-Demand spend over the lookback
              period of the applicable usage type.
        EstimatedAverageUtilization:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated utilization of the recommended Savings Plan.
        EstimatedMonthlySavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated monthly savings amount based on the recommended
              Savings Plan.
        EstimatedOnDemandCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The remaining On-Demand cost estimated to not be covered\
              \ by the recommended Savings Plan, over the length of the lookback period."
        EstimatedOnDemandCostWithCurrentCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The estimated On-Demand costs you expect with no additional\
              \ commitment, based on your usage of the selected time period and the\
              \ Savings Plan you own."
        EstimatedROI:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated return on investment that's based on the recommended
              Savings Plan that you purchased. This is calculated as estimatedSavingsAmount/estimatedSPCost*100.
        EstimatedSPCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The cost of the recommended Savings Plan over the length
              of the lookback period.
        EstimatedSavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated savings amount that's based on the recommended
              Savings Plan over the length of the lookback period.
        EstimatedSavingsPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated savings percentage relative to the total cost
              of applicable On-Demand usage over the lookback period.
        ExistingHourlyCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The existing hourly commitment for the Savings Plan type.
        HourlyCommitmentToPurchase:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The recommended hourly commitment level for the Savings Plan
              type and the configuration that's based on the usage during the lookback
              period.
        UpfrontCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The upfront cost of the recommended Savings Plan, based\
              \ on the selected payment option."
        CurrentAverageCoverage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The average value of hourly coverage over the lookback period.
        EstimatedAverageCoverage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated coverage of the recommended Savings Plan.
        MetricsOverLookbackPeriod:
          allOf:
          - $ref: '#/components/schemas/MetricsOverLookbackPeriod'
          - description: "The related hourly cost, coverage, and utilization metrics\
              \ over the lookback period."
      type: object
    SavingsPlansCoverages:
      items:
        $ref: '#/components/schemas/SavingsPlansCoverage'
      type: array
    SupportedSavingsPlansType:
      enum:
      - COMPUTE_SP
      - EC2_INSTANCE_SP
      - SAGEMAKER_SP
      type: string
    SavingsPlansPurchaseRecommendationMetadata:
      description: Metadata about your Savings Plans Purchase Recommendations.
      properties:
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The unique identifier for the recommendation set.
        GenerationTimestamp:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The timestamp that shows when the recommendations were generated.
        AdditionalMetadata:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Additional metadata that might be applicable to the recommendation.
      type: object
    SavingsPlansPurchaseRecommendation:
      description: "Contains your request parameters, Savings Plan Recommendations\
        \ Summary, and Details."
      properties:
        AccountScope:
          allOf:
          - $ref: '#/components/schemas/AccountScope'
          - description: "The account scope that you want your recommendations for.\
              \ Amazon Web Services calculates recommendations that include the management\
              \ account and member accounts if the value is set to <code>PAYER</code>.\
              \ If the value is <code>LINKED</code>, recommendations are calculated\
              \ for individual member accounts only."
        SavingsPlansType:
          allOf:
          - $ref: '#/components/schemas/SupportedSavingsPlansType'
          - description: The requested Savings Plans recommendation type.
        TermInYears:
          allOf:
          - $ref: '#/components/schemas/TermInYears'
          - description: The Savings Plans recommendation term in years. It's used
              to generate the recommendation.
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/PaymentOption'
          - description: The payment option that's used to generate the recommendation.
        LookbackPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/LookbackPeriodInDays'
          - description: The lookback period in days that's used to generate the recommendation.
        SavingsPlansPurchaseRecommendationDetails:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationDetailList'
          - description: Details for the Savings Plans that we recommend that you
              purchase to cover existing Savings Plans eligible workloads.
        SavingsPlansPurchaseRecommendationSummary:
          $ref: '#/components/schemas/SavingsPlansPurchaseRecommendation_SavingsPlansPurchaseRecommendationSummary'
      type: object
    SavingsPlansDataTypes:
      items:
        $ref: '#/components/schemas/SavingsPlansDataType'
      type: array
    SavingsPlansUtilizationDetails:
      items:
        $ref: '#/components/schemas/SavingsPlansUtilizationDetail'
      type: array
    SavingsPlansUtilizationAggregates:
      description: The aggregated utilization metrics for your Savings Plans usage.
      properties:
        Utilization:
          $ref: '#/components/schemas/SavingsPlansUtilizationAggregates_Utilization'
        Savings:
          $ref: '#/components/schemas/SavingsPlansUtilizationAggregates_Savings'
        AmortizedCommitment:
          $ref: '#/components/schemas/SavingsPlansUtilizationAggregates_AmortizedCommitment'
      required:
      - Utilization
      type: object
    SavingsPlansUtilizationsByTime:
      items:
        $ref: '#/components/schemas/SavingsPlansUtilizationByTime'
      type: array
    TagList:
      items:
        $ref: '#/components/schemas/Entity'
      type: array
    Keys:
      items:
        $ref: '#/components/schemas/Key'
      type: array
    Metrics:
      additionalProperties:
        $ref: '#/components/schemas/MetricValue'
      type: object
    Group:
      description: One level of grouped data in the results.
      properties:
        Keys:
          allOf:
          - $ref: '#/components/schemas/Keys'
          - description: The keys that are included in this group.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/Metrics'
          - description: The metrics that are included in this group.
      type: object
    GroupDefinitionType:
      enum:
      - DIMENSION
      - TAG
      - COST_CATEGORY
      type: string
    GroupDefinitionKey:
      maxLength: 1024
      minLength: 0
      pattern: "[\\S\\s]*"
      type: string
    GroupDefinition:
      description: Represents a group when you specify a group by criteria or in the
        response to a query with a specific grouping.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitionType'
          - description: The string that represents the type of group.
        Key:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitionKey'
          - description: The string that represents a key for a specified group.
      type: object
    Groups:
      items:
        $ref: '#/components/schemas/Group'
      type: array
    RDSInstanceDetails:
      description: Details about the Amazon RDS instances that Amazon Web Services
        recommends that you purchase.
      properties:
        Family:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The instance family of the recommended reservation.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The type of instance that Amazon Web Services recommends.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the recommended reservation.
        DatabaseEngine:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The database engine that the recommended reservation supports.
        DatabaseEdition:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The database edition that the recommended reservation supports.
        DeploymentOption:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Determines whether the recommendation is for a reservation
              in a single Availability Zone or a reservation with a backup in a second
              Availability Zone.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The license model that the recommended reservation supports.
        CurrentGeneration:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: 'Determines whether the recommendation is for a current-generation
              instance. '
        SizeFlexEligible:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommended reservation is size flexible.
      type: object
    RedshiftInstanceDetails:
      description: Details about the Amazon Redshift instances that Amazon Web Services
        recommends that you purchase.
      properties:
        Family:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The instance family of the recommended reservation.
        NodeType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The type of node that Amazon Web Services recommends.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the recommended reservation.
        CurrentGeneration:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommendation is for a current-generation
              instance.
        SizeFlexEligible:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommended reservation is size flexible.
      type: object
    InstanceDetails:
      description: Details about the instances that Amazon Web Services recommends
        that you purchase.
      properties:
        EC2InstanceDetails:
          $ref: '#/components/schemas/InstanceDetails_EC2InstanceDetails'
        RDSInstanceDetails:
          $ref: '#/components/schemas/InstanceDetails_RDSInstanceDetails'
        RedshiftInstanceDetails:
          $ref: '#/components/schemas/InstanceDetails_RedshiftInstanceDetails'
        ElastiCacheInstanceDetails:
          $ref: '#/components/schemas/InstanceDetails_ElastiCacheInstanceDetails'
        ESInstanceDetails:
          $ref: '#/components/schemas/InstanceDetails_ESInstanceDetails'
      type: object
    Key:
      type: string
    RecommendationIdList:
      items:
        $ref: '#/components/schemas/RecommendationId'
      type: array
    MatchOption:
      enum:
      - EQUALS
      - ABSENT
      - STARTS_WITH
      - ENDS_WITH
      - CONTAINS
      - CASE_SENSITIVE
      - CASE_INSENSITIVE
      - GREATER_THAN_OR_EQUAL
      type: string
    MetricAmount:
      type: string
    MetricName:
      maxLength: 1024
      minLength: 0
      pattern: "[\\S\\s]*"
      type: string
    MetricUnit:
      type: string
    RecommendationDetailHourlyMetrics:
      description: 'Contains the hourly metrics for the given recommendation over
        the lookback period. '
      properties:
        StartTime:
          description: The period of time that you want the usage and costs for.
          maxLength: 25
          minLength: 20
          pattern: "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(([+-]\\d\\d:\\d\\d)|Z)$"
          type: string
        EstimatedOnDemandCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The remaining On-Demand cost estimated to not be covered\
              \ by the recommended Savings Plan, over the length of the lookback period."
        CurrentCoverage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The current amount of Savings Plans eligible usage that the
              Savings Plan covered.
        EstimatedCoverage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated coverage amount based on the recommended Savings
              Plan.
        EstimatedNewCommitmentUtilization:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated utilization for the recommended Savings Plan.
      type: object
    MetricsOverLookbackPeriod:
      items:
        $ref: '#/components/schemas/RecommendationDetailHourlyMetrics'
      type: array
    TargetInstancesList:
      items:
        $ref: '#/components/schemas/TargetInstance'
      type: array
    ModifyRecommendationDetail:
      description: Details for the modification recommendation.
      properties:
        TargetInstances:
          allOf:
          - $ref: '#/components/schemas/TargetInstancesList'
          - description: Determines whether this instance type is the Amazon Web Services
              default recommendation.
      type: object
    NetRISavings:
      type: string
    NumericOperator:
      enum:
      - EQUAL
      - GREATER_THAN_OR_EQUAL
      - LESS_THAN_OR_EQUAL
      - GREATER_THAN
      - LESS_THAN
      - BETWEEN
      type: string
    OnDemandCostOfRIHoursUsed:
      type: string
    PlatformDifference:
      enum:
      - HYPERVISOR
      - NETWORK_INTERFACE
      - STORAGE_INTERFACE
      - INSTANCE_STORE_AVAILABILITY
      - VIRTUALIZATION_TYPE
      type: string
    PlatformDifferences:
      items:
        $ref: '#/components/schemas/PlatformDifference'
      type: array
    PurchasedHours:
      type: string
    PurchasedUnits:
      type: string
    RICostForUnusedHours:
      type: string
    RealizedSavings:
      type: string
    RecommendationTarget:
      enum:
      - SAME_INSTANCE_FAMILY
      - CROSS_INSTANCE_FAMILY
      type: string
    UtilizationPercentage:
      type: string
    UtilizationPercentageInUnits:
      type: string
    TotalActualHours:
      type: string
    TotalActualUnits:
      type: string
    UnusedHours:
      type: string
    UnusedUnits:
      type: string
    TotalPotentialRISavings:
      type: string
    TotalAmortizedFee:
      type: string
    UnrealizedSavings:
      type: string
    ReservationCoverageGroup:
      description: A group of reservations that share a set of attributes.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: The attributes for this group of reservations.
        Coverage:
          $ref: '#/components/schemas/ReservationCoverageGroup_Coverage'
      type: object
    ReservationGroupKey:
      type: string
    ReservationGroupValue:
      type: string
    ReservationPurchaseRecommendationDetails:
      items:
        $ref: '#/components/schemas/ReservationPurchaseRecommendationDetail'
      type: array
    ReservationPurchaseRecommendationSummary:
      description: "A summary about this recommendation, such as the currency code,\
        \ the amount that Amazon Web Services estimates that you could save, and the\
        \ total amount of reservation to purchase."
      properties:
        TotalEstimatedMonthlySavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The total amount that Amazon Web Services estimates that
              this recommendation could save you in a month.
        TotalEstimatedMonthlySavingsPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The total amount that Amazon Web Services estimates that\
              \ this recommendation could save you in a month, as a percentage of\
              \ your costs."
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code used for this recommendation.
      type: object
    ReservationPurchaseRecommendation:
      description: A specific reservation that Amazon Web Services recommends for
        purchase.
      properties:
        AccountScope:
          allOf:
          - $ref: '#/components/schemas/AccountScope'
          - description: "The account scope that Amazon Web Services recommends that\
              \ you purchase this instance for. For example, you can purchase this\
              \ reservation for an entire organization in Amazon Web Services Organizations."
        LookbackPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/LookbackPeriodInDays'
          - description: How many days of previous usage that Amazon Web Services
              considers when making this recommendation.
        TermInYears:
          allOf:
          - $ref: '#/components/schemas/TermInYears'
          - description: "The term of the reservation that you want recommendations\
              \ for, in years."
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/PaymentOption'
          - description: "The payment option for the reservation (for example, <code>AllUpfront</code>\
              \ or <code>NoUpfront</code>)."
        ServiceSpecification:
          $ref: '#/components/schemas/ReservationPurchaseRecommendation_ServiceSpecification'
        RecommendationDetails:
          allOf:
          - $ref: '#/components/schemas/ReservationPurchaseRecommendationDetails'
          - description: Details about the recommended purchases.
        RecommendationSummary:
          $ref: '#/components/schemas/ReservationPurchaseRecommendation_RecommendationSummary'
      type: object
    ReservationPurchaseRecommendationDetail:
      description: Details about your recommended reservation purchase.
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The account that this Reserved Instance (RI) recommendation
              is for.
        InstanceDetails:
          $ref: '#/components/schemas/ReservationPurchaseRecommendationDetail_InstanceDetails'
        RecommendedNumberOfInstancesToPurchase:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of instances that Amazon Web Services recommends
              that you purchase.
        RecommendedNormalizedUnitsToPurchase:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of normalized units that Amazon Web Services recommends
              that you purchase.
        MinimumNumberOfInstancesUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The minimum number of instances that you used in an hour
              during the historical period. Amazon Web Services uses this to calculate
              your recommended reservation purchases.
        MinimumNormalizedUnitsUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The minimum number of normalized units that you used in an
              hour during the historical period. Amazon Web Services uses this to
              calculate your recommended reservation purchases.
        MaximumNumberOfInstancesUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum number of instances that you used in an hour
              during the historical period. Amazon Web Services uses this to calculate
              your recommended reservation purchases.
        MaximumNormalizedUnitsUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum number of normalized units that you used in an
              hour during the historical period. Amazon Web Services uses this to
              calculate your recommended reservation purchases.
        AverageNumberOfInstancesUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The average number of instances that you used in an hour
              during the historical period. Amazon Web Services uses this to calculate
              your recommended reservation purchases.
        AverageNormalizedUnitsUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The average number of normalized units that you used in an
              hour during the historical period. Amazon Web Services uses this to
              calculate your recommended reservation purchases.
        AverageUtilization:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The average utilization of your instances. Amazon Web Services
              uses this to calculate your recommended reservation purchases.
        EstimatedBreakEvenInMonths:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "How long Amazon Web Services estimates that it takes for\
              \ this instance to start saving you money, in months."
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to calculate
              the costs for this instance.
        EstimatedMonthlySavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much Amazon Web Services estimates that this specific
              recommendation might save you in a month.
        EstimatedMonthlySavingsPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "How much Amazon Web Services estimates that this specific\
              \ recommendation might save you in a month, as a percentage of your\
              \ overall costs."
        EstimatedMonthlyOnDemandCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much Amazon Web Services estimates that you spend on
              On-Demand Instances in a month.
        EstimatedReservationCostForLookbackPeriod:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much Amazon Web Services estimates that you might spend
              for all usage during the specified historical period if you had a reservation.
        UpfrontCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much purchasing this instance costs you upfront.
        RecurringStandardMonthlyCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much purchasing this instance costs you on a monthly
              basis.
      type: object
    ReservationUtilizationGroup:
      description: A group of reservations that share a set of attributes.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ReservationGroupKey'
          - description: The key for a specific reservation attribute.
        Value:
          allOf:
          - $ref: '#/components/schemas/ReservationGroupValue'
          - description: The value of a specific reservation attribute.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: The attributes for this group of reservations.
        Utilization:
          $ref: '#/components/schemas/ReservationUtilizationGroup_Utilization'
      type: object
    ReservationUtilizationGroups:
      items:
        $ref: '#/components/schemas/ReservationUtilizationGroup'
      type: array
    ResourceTagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    ResourceTagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    ResourceTag:
      description: "<p>The tag structure that contains a tag key and value. </p> <note>\
        \ <p>Tagging is supported only for the following Cost Explorer resource types:\
        \ <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalyMonitor.html\"\
        > <code>AnomalyMonitor</code> </a>, <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalySubscription.html\"\
        > <code>AnomalySubscription</code> </a>, <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CostCategory.html\"\
        > <code>CostCategory</code> </a>.</p> </note>"
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ResourceTagKey'
          - description: 'The key that''s associated with the tag. '
        Value:
          allOf:
          - $ref: '#/components/schemas/ResourceTagValue'
          - description: 'The value that''s associated with the tag. '
      required:
      - Key
      - Value
      type: object
    ResourceTagKeyList:
      items:
        $ref: '#/components/schemas/ResourceTagKey'
      maxItems: 200
      minItems: 0
      type: array
    ResultByTime:
      description: The result that's associated with a time period.
      properties:
        TimePeriod:
          $ref: '#/components/schemas/ResultByTime_TimePeriod'
        Total:
          allOf:
          - $ref: '#/components/schemas/Metrics'
          - description: The total amount of cost or usage accrued during the time
              period.
        Groups:
          allOf:
          - $ref: '#/components/schemas/Groups'
          - description: The groups that this time period includes.
        Estimated:
          allOf:
          - $ref: '#/components/schemas/Estimated'
          - description: Determines whether the result is estimated.
      type: object
    RightsizingType:
      enum:
      - TERMINATE
      - MODIFY
      type: string
    TerminateRecommendationDetail:
      description: 'Details on termination recommendation. '
      properties:
        EstimatedMonthlySavings:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The estimated savings that result from modification, on\
              \ a monthly basis."
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to calculate
              the costs for this instance.
      type: object
    RightsizingRecommendation:
      description: Recommendations to rightsize resources.
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The account that this recommendation is for.
        CurrentInstance:
          $ref: '#/components/schemas/RightsizingRecommendation_CurrentInstance'
        RightsizingType:
          allOf:
          - $ref: '#/components/schemas/RightsizingType'
          - description: A recommendation to either terminate or modify the resource.
        ModifyRecommendationDetail:
          $ref: '#/components/schemas/RightsizingRecommendation_ModifyRecommendationDetail'
        TerminateRecommendationDetail:
          $ref: '#/components/schemas/RightsizingRecommendation_TerminateRecommendationDetail'
        FindingReasonCodes:
          allOf:
          - $ref: '#/components/schemas/FindingReasonCodes'
          - description: "The list of possible reasons why the recommendation is generated,\
              \ such as under- or over-utilization of specific metrics (for example,\
              \ CPU, Memory, Network). "
      type: object
    RootCause:
      description: "The combination of Amazon Web Service, linked account, linked\
        \ account name, Region, and usage type where a cost anomaly is observed. The\
        \ linked account name will only be available when the account name can be\
        \ identified."
      properties:
        Service:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The Amazon Web Service name that''s associated with the
              cost anomaly. '
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The Amazon Web Services Region that''s associated with the
              cost anomaly. '
        LinkedAccount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The member account value that''s associated with the cost
              anomaly. '
        UsageType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The <code>UsageType</code> value that''s associated with
              the cost anomaly. '
        LinkedAccountName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The member account name value that's associated with the
              cost anomaly.
      type: object
    SavingsPlanArn:
      type: string
    SavingsPlansAmortizedCommitment:
      description: The amortized amount of Savings Plans purchased in a specific account
        during a specific time interval.
      properties:
        AmortizedRecurringCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amortized amount of your Savings Plans commitment that
              was purchased with either a <code>Partial</code> or a <code>NoUpfront</code>.
        AmortizedUpfrontCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amortized amount of your Savings Plans commitment that
              was purchased with an <code>Upfront</code> or <code>PartialUpfront</code>
              Savings Plans.
        TotalAmortizedCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The total amortized amount of your Savings Plans commitment,\
              \ regardless of your Savings Plans purchase method. "
      type: object
    SavingsPlansCoverageData:
      description: "Specific coverage percentage, On-Demand costs, and spend covered\
        \ by Savings Plans, and total Savings Plans costs for an account."
      properties:
        SpendCoveredBySavingsPlans:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amount of your Amazon Web Services usage that's covered
              by a Savings Plans.
        OnDemandCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The cost of your Amazon Web Services usage at the public
              On-Demand rate.
        TotalCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The total cost of your Amazon Web Services usage, regardless\
              \ of your purchase option."
        CoveragePercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The percentage of your existing Savings Plans covered usage,\
              \ divided by all of your eligible Savings Plans usage in an account\
              \ (or set of accounts)."
      type: object
    SavingsPlansCoverage:
      description: The amount of Savings Plans eligible usage that's covered by Savings
        Plans. All calculations consider the On-Demand equivalent of your Savings
        Plans usage.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: The attribute that applies to a specific <code>Dimension</code>.
        Coverage:
          $ref: '#/components/schemas/SavingsPlansCoverage_Coverage'
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
      type: object
    SavingsPlansDataType:
      enum:
      - ATTRIBUTES
      - UTILIZATION
      - AMORTIZED_COMMITMENT
      - SAVINGS
      type: string
    SavingsPlansDetails:
      description: The attribute details on a specific Savings Plan.
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A collection of Amazon Web Services resources in a geographic
              area. Each Amazon Web Services Region is isolated and independent of
              the other Regions.
        InstanceFamily:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A group of instance types that Savings Plans applies to.
        OfferingId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The unique ID that's used to distinguish Savings Plans from
              one another.
      type: object
    SavingsPlansPurchaseRecommendationDetailList:
      items:
        $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationDetail'
      type: array
    SavingsPlansPurchaseRecommendationSummary:
      description: Summary metrics for your Savings Plans Purchase Recommendations.
      properties:
        EstimatedROI:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated return on investment that's based on the recommended
              Savings Plans and estimated savings.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to generate
              the recommendations and present potential savings.
        EstimatedTotalCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The estimated total cost of the usage after purchasing the\
              \ recommended Savings Plans. This is a sum of the cost of Savings Plans\
              \ during this term, and the remaining On-Demand usage."
        CurrentOnDemandSpend:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The current total on demand spend of the applicable usage
              types over the lookback period.
        EstimatedSavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The estimated total savings over the lookback period, based\
              \ on the purchase of the recommended Savings Plans."
        TotalRecommendationCount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The aggregate number of Savings Plans recommendations that
              exist for your account.
        DailyCommitmentToPurchase:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The recommended Savings Plans cost on a daily (24 hourly)
              basis.
        HourlyCommitmentToPurchase:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The recommended hourly commitment that's based on the recommendation
              parameters.
        EstimatedSavingsPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The estimated savings relative to the total cost of On-Demand\
              \ usage, over the lookback period. This is calculated as <code>estimatedSavingsAmount</code>/\
              \ <code>CurrentOnDemandSpend</code>*100."
        EstimatedMonthlySavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated monthly savings amount that's based on the
              recommended Savings Plans purchase.
        EstimatedOnDemandCostWithCurrentCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The estimated On-Demand costs you expect with no additional
              commitment. It''s based on your usage of the selected time period and
              the Savings Plans you own. '
      type: object
    SavingsPlansPurchaseRecommendationDetail:
      description: Details for your recommended Savings Plans.
      properties:
        SavingsPlansDetails:
          $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationDetail_SavingsPlansDetails'
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The <code>AccountID</code> the recommendation is generated
              for.
        UpfrontCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The upfront cost of the recommended Savings Plans, based\
              \ on the selected payment option."
        EstimatedROI:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated return on investment that's based on the recommended
              Savings Plans that you purchased. This is calculated as <code>estimatedSavingsAmount</code>/
              <code>estimatedSPCost</code>*100.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to generate
              the recommendations and present potential savings.
        EstimatedSPCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The cost of the recommended Savings Plans over the length
              of the lookback period.
        EstimatedOnDemandCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The remaining On-Demand cost estimated to not be covered\
              \ by the recommended Savings Plans, over the length of the lookback\
              \ period."
        EstimatedOnDemandCostWithCurrentCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: " The estimated On-Demand costs you expect with no additional\
              \ commitment, based on your usage of the selected time period and the\
              \ Savings Plans you own. "
        EstimatedSavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated savings amount that's based on the recommended
              Savings Plans over the length of the lookback period.
        EstimatedSavingsPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated savings percentage relative to the total cost
              of applicable On-Demand usage over the lookback period.
        HourlyCommitmentToPurchase:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The recommended hourly commitment level for the Savings Plans
              type and the configuration that's based on the usage during the lookback
              period.
        EstimatedAverageUtilization:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated utilization of the recommended Savings Plans.
        EstimatedMonthlySavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated monthly savings amount based on the recommended
              Savings Plans.
        CurrentMinimumHourlyOnDemandSpend:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The lowest value of hourly On-Demand spend over the lookback
              period of the applicable usage type.
        CurrentMaximumHourlyOnDemandSpend:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The highest value of hourly On-Demand spend over the lookback
              period of the applicable usage type.
        CurrentAverageHourlyOnDemandSpend:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The average value of hourly On-Demand spend over the lookback
              period of the applicable usage type.
        RecommendationDetailId:
          allOf:
          - $ref: '#/components/schemas/RecommendationDetailId'
          - description: Contains detailed information about a specific Savings Plan
              recommendation.
      type: object
    SavingsPlansSavings:
      description: "The amount of savings that you're accumulating, against the public\
        \ On-Demand rate of the usage accrued in an account."
      properties:
        NetSavings:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The savings amount that you're accumulating for the usage\
              \ that's covered by a Savings Plans, when compared to the On-Demand\
              \ equivalent of the same usage."
        OnDemandCostEquivalent:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much the amount that the usage would have cost if it
              was accrued at the On-Demand rate.
      type: object
    SavingsPlansUtilization:
      description: The measurement of how well you're using your existing Savings
        Plans.
      properties:
        TotalCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The total amount of Savings Plans commitment that's been
              purchased in an account (or set of accounts).
        UsedCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amount of your Savings Plans commitment that was consumed
              from Savings Plans eligible usage in a specific period.
        UnusedCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amount of your Savings Plans commitment that wasn't consumed
              from Savings Plans eligible usage in a specific period.
        UtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amount of <code>UsedCommitment</code> divided by the
              <code>TotalCommitment</code> for your Savings Plans.
      type: object
    SavingsPlansUtilizationByTime:
      description: The amount of Savings Plans utilization (in hours).
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
        Utilization:
          $ref: '#/components/schemas/SavingsPlansUtilizationAggregates_Utilization'
        Savings:
          $ref: '#/components/schemas/SavingsPlansUtilizationAggregates_Savings'
        AmortizedCommitment:
          $ref: '#/components/schemas/SavingsPlansUtilizationAggregates_AmortizedCommitment'
      required:
      - TimePeriod
      - Utilization
      type: object
    SavingsPlansUtilizationDetail:
      description: 'A single daily or monthly Savings Plans utilization rate and details
        for your account. A management account in an organization have access to member
        accounts. You can use <code>GetDimensionValues</code> to determine the possible
        dimension values. '
      properties:
        SavingsPlanArn:
          allOf:
          - $ref: '#/components/schemas/SavingsPlanArn'
          - description: The unique Amazon Resource Name (ARN) for a particular Savings
              Plan.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: The attribute that applies to a specific <code>Dimension</code>.
        Utilization:
          $ref: '#/components/schemas/SavingsPlansUtilizationAggregates_Utilization'
        Savings:
          $ref: '#/components/schemas/SavingsPlansUtilizationDetail_Savings'
        AmortizedCommitment:
          $ref: '#/components/schemas/SavingsPlansUtilizationDetail_AmortizedCommitment'
      type: object
    SortDefinitionKey:
      maxLength: 1024
      minLength: 0
      pattern: "[\\S\\s]*"
      type: string
    SortOrder:
      enum:
      - ASCENDING
      - DESCENDING
      type: string
    SubscriberAddress:
      maxLength: 302
      minLength: 6
      pattern: "(^[a-zA-Z0-9.!#$%&'*+=?^_‘{|}~-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$)|(^arn:(aws[a-zA-Z-]*):sns:[a-zA-Z0-9-]+:[0-9]{12}:[a-zA-Z0-9_-]+(\\\
        .fifo)?$)"
      type: string
    SubscriberType:
      enum:
      - EMAIL
      - SNS
      type: string
    SubscriberStatus:
      enum:
      - CONFIRMED
      - DECLINED
      type: string
    Subscriber:
      description: 'The recipient of <code>AnomalySubscription</code> notifications. '
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/SubscriberAddress'
          - description: 'The email address or SNS Amazon Resource Name (ARN). This
              depends on the <code>Type</code>. '
        Type:
          allOf:
          - $ref: '#/components/schemas/SubscriberType'
          - description: 'The notification delivery channel. '
        Status:
          allOf:
          - $ref: '#/components/schemas/SubscriberStatus'
          - description: 'Indicates if the subscriber accepts the notifications. '
      type: object
    TargetInstance:
      description: Details on recommended instance.
      properties:
        EstimatedMonthlyCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The expected cost to operate this instance type on a monthly
              basis.
        EstimatedMonthlySavings:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The estimated savings that result from modification, on\
              \ a monthly basis."
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to calculate
              the costs for this instance.
        DefaultTargetInstance:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether this recommendation is the defaulted Amazon
              Web Services recommendation.
        ResourceDetails:
          $ref: '#/components/schemas/TargetInstance_ResourceDetails'
        ExpectedResourceUtilization:
          $ref: '#/components/schemas/TargetInstance_ExpectedResourceUtilization'
        PlatformDifferences:
          allOf:
          - $ref: '#/components/schemas/PlatformDifferences'
          - description: 'Explains the actions that you might need to take to successfully
              migrate your workloads from the current instance type to the recommended
              instance type. '
      type: object
    UpdateCostAllocationTagsStatusError:
      description: 'Gives a detailed description of the result of an action. It''s
        on each cost allocation tag entry in the request. '
      properties:
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: 'The key for the cost allocation tag. '
        Code:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'An error code representing why the action failed on this
              entry. '
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: 'A message explaining why the action failed on this entry. '
      type: object
    UpdateCostAllocationTagsStatusErrors:
      items:
        $ref: '#/components/schemas/UpdateCostAllocationTagsStatusError'
      maxItems: 20
      minItems: 0
      type: array
    UtilizationByTime:
      description: "The amount of utilization, in hours."
      properties:
        TimePeriod:
          $ref: '#/components/schemas/UtilizationByTime_TimePeriod'
        Groups:
          allOf:
          - $ref: '#/components/schemas/ReservationUtilizationGroups'
          - description: The groups that this utilization result uses.
        Total:
          $ref: '#/components/schemas/UtilizationByTime_Total'
      type: object
    CreateAnomalyMonitorRequest_AnomalyMonitor:
      allOf:
      - $ref: '#/components/schemas/AnomalyMonitor'
      - description: The cost anomaly detection monitor object that you want to create.
      example:
        LastUpdatedDate: ""
        CreationDate: ""
        LastEvaluatedDate: ""
        MonitorType: ""
        MonitorArn: ""
        MonitorName: ""
        MonitorSpecification:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        MonitorDimension: ""
        DimensionalValueCount: ""
    CreateAnomalySubscriptionRequest_AnomalySubscription:
      allOf:
      - $ref: '#/components/schemas/AnomalySubscription'
      - description: 'The cost anomaly subscription object that you want to create. '
      example:
        MonitorArnList: ""
        AccountId: ""
        Frequency: ""
        SubscriptionName: ""
        Subscribers: ""
        SubscriptionArn: ""
        Threshold: ""
        ThresholdExpression:
          Not:
            Not: null
            Or: ""
            And: ""
            Dimensions:
              MatchOptions: ""
              Values: ""
              Key: ""
            CostCategories:
              MatchOptions: ""
              Values: ""
              Key: Key
            Tags:
              MatchOptions: ""
              Values: ""
              Key: ""
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
    GetAnomaliesRequest_DateInterval:
      allOf:
      - $ref: '#/components/schemas/AnomalyDateInterval'
      - description: 'Assigns the start and end dates for retrieving cost anomalies.
          The returned anomaly object will have an <code>AnomalyEndDate</code> in
          the specified time range. '
      example:
        StartDate: ""
        EndDate: ""
    GetAnomaliesRequest_TotalImpact:
      allOf:
      - $ref: '#/components/schemas/TotalImpactFilter'
      - description: "Filters anomaly results by the total impact field on the anomaly\
          \ object. For example, you can filter anomalies <code>GREATER_THAN 200.00</code>\
          \ to retrieve anomalies, with an estimated dollar impact greater than 200. "
      example:
        StartValue: ""
        EndValue: ""
        NumericOperator: ""
    GetCostAndUsageRequest_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: "Sets the start date and end date for retrieving Amazon Web Services\
          \ costs. The start date is inclusive, but the end date is exclusive. For\
          \ example, if <code>start</code> is <code>2017-01-01</code> and <code>end</code>\
          \ is <code>2017-05-01</code>, then the cost and usage data is retrieved\
          \ from <code>2017-01-01</code> up to and including <code>2017-04-30</code>\
          \ but not including <code>2017-05-01</code>."
      example:
        Start: ""
        End: ""
    GetCostAndUsageRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: "<p>Filters Amazon Web Services costs by different dimensions.\
          \ For example, you can specify <code>SERVICE</code> and <code>LINKED_ACCOUNT</code>\
          \ and get the costs that are associated with that account's usage of that\
          \ service. You can nest <code>Expression</code> objects to define any combination\
          \ of dimension filters. For more information, see <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\"\
          >Expression</a>. </p> <p>Valid values for <code>MatchOptions</code> for\
          \ <code>Dimensions</code> are <code>EQUALS</code> and <code>CASE_SENSITIVE</code>.</p>\
          \ <p>Valid values for <code>MatchOptions</code> for <code>CostCategories</code>\
          \ and <code>Tags</code> are <code>EQUALS</code>, <code>ABSENT</code>, and\
          \ <code>CASE_SENSITIVE</code>. Default values are <code>EQUALS</code> and\
          \ <code>CASE_SENSITIVE</code>.</p>"
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    GetCostAndUsageWithResourcesRequest_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: "Sets the start and end dates for retrieving Amazon Web Services\
          \ costs. The range must be within the last 14 days (the start date cannot\
          \ be earlier than 14 days ago). The start date is inclusive, but the end\
          \ date is exclusive. For example, if <code>start</code> is <code>2017-01-01</code>\
          \ and <code>end</code> is <code>2017-05-01</code>, then the cost and usage\
          \ data is retrieved from <code>2017-01-01</code> up to and including <code>2017-04-30</code>\
          \ but not including <code>2017-05-01</code>."
      example:
        Start: ""
        End: ""
    GetCostAndUsageWithResourcesRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: "<p>Filters Amazon Web Services costs by different dimensions.\
          \ For example, you can specify <code>SERVICE</code> and <code>LINKED_ACCOUNT</code>\
          \ and get the costs that are associated with that account's usage of that\
          \ service. You can nest <code>Expression</code> objects to define any combination\
          \ of dimension filters. For more information, see <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\"\
          >Expression</a>. </p> <p>The <code>GetCostAndUsageWithResources</code> operation\
          \ requires that you either group by or filter by a <code>ResourceId</code>.\
          \ It requires the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\"\
          >Expression</a> <code>\"SERVICE = Amazon Elastic Compute Cloud - Compute\"\
          </code> in the filter.</p> <p>Valid values for <code>MatchOptions</code>\
          \ for <code>Dimensions</code> are <code>EQUALS</code> and <code>CASE_SENSITIVE</code>.</p>\
          \ <p>Valid values for <code>MatchOptions</code> for <code>CostCategories</code>\
          \ and <code>Tags</code> are <code>EQUALS</code>, <code>ABSENT</code>, and\
          \ <code>CASE_SENSITIVE</code>. Default values are <code>EQUALS</code> and\
          \ <code>CASE_SENSITIVE</code>.</p>"
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    GetCostForecastResponse_Total:
      allOf:
      - $ref: '#/components/schemas/MetricValue'
      - description: "How much you are forecasted to spend over the forecast period,\
          \ in <code>USD</code>."
      example:
        Amount: ""
        Unit: ""
    GetCostForecastRequest_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: The period of time that you want the forecast to cover. The start
          date must be equal to or no later than the current date to avoid a validation
          error.
      example:
        Start: ""
        End: ""
    GetCostForecastRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: <p>The filters that you want to use to filter your forecast.
          The <code>GetCostForecast</code> API supports filtering by the following
          dimensions:</p> <ul> <li> <p> <code>AZ</code> </p> </li> <li> <p> <code>INSTANCE_TYPE</code>
          </p> </li> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>LINKED_ACCOUNT_NAME</code>
          </p> </li> <li> <p> <code>OPERATION</code> </p> </li> <li> <p> <code>PURCHASE_TYPE</code>
          </p> </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>SERVICE</code>
          </p> </li> <li> <p> <code>USAGE_TYPE</code> </p> </li> <li> <p> <code>USAGE_TYPE_GROUP</code>
          </p> </li> <li> <p> <code>RECORD_TYPE</code> </p> </li> <li> <p> <code>OPERATING_SYSTEM</code>
          </p> </li> <li> <p> <code>TENANCY</code> </p> </li> <li> <p> <code>SCOPE</code>
          </p> </li> <li> <p> <code>PLATFORM</code> </p> </li> <li> <p> <code>SUBSCRIPTION_ID</code>
          </p> </li> <li> <p> <code>LEGAL_ENTITY_NAME</code> </p> </li> <li> <p> <code>DEPLOYMENT_OPTION</code>
          </p> </li> <li> <p> <code>DATABASE_ENGINE</code> </p> </li> <li> <p> <code>INSTANCE_TYPE_FAMILY</code>
          </p> </li> <li> <p> <code>BILLING_ENTITY</code> </p> </li> <li> <p> <code>RESERVATION_ID</code>
          </p> </li> <li> <p> <code>SAVINGS_PLAN_ARN</code> </p> </li> </ul>
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    GetDimensionValuesRequest_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: "The start date and end date for retrieving the dimension values.\
          \ The start date is inclusive, but the end date is exclusive. For example,\
          \ if <code>start</code> is <code>2017-01-01</code> and <code>end</code>\
          \ is <code>2017-05-01</code>, then the cost and usage data is retrieved\
          \ from <code>2017-01-01</code> up to and including <code>2017-04-30</code>\
          \ but not including <code>2017-05-01</code>."
      example:
        Start: ""
        End: ""
    GetReservationCoverageResponse_Total:
      allOf:
      - $ref: '#/components/schemas/Coverage'
      - description: The total amount of instance usage that a reservation covered.
      example:
        CoverageHours:
          TotalRunningHours: ""
          CoverageHoursPercentage: ""
          OnDemandHours: ""
          ReservedHours: ""
        CoverageCost:
          OnDemandCost: ""
        CoverageNormalizedUnits:
          TotalRunningNormalizedUnits: ""
          ReservedNormalizedUnits: ""
          OnDemandNormalizedUnits: ""
          CoverageNormalizedUnitsPercentage: ""
    GetReservationCoverageRequest_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: "The start and end dates of the period that you want to retrieve\
          \ data about reservation coverage for. You can retrieve data for a maximum\
          \ of 13 months: the last 12 months and the current month. The start date\
          \ is inclusive, but the end date is exclusive. For example, if <code>start</code>\
          \ is <code>2017-01-01</code> and <code>end</code> is <code>2017-05-01</code>,\
          \ then the cost and usage data is retrieved from <code>2017-01-01</code>\
          \ up to and including <code>2017-04-30</code> but not including <code>2017-05-01</code>. "
      example:
        Start: ""
        End: ""
    GetReservationCoverageRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: "<p>Filters utilization data by dimensions. You can filter by\
          \ the following dimensions:</p> <ul> <li> <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p>\
          \ </li> <li> <p>DATABASE_ENGINE</p> </li> <li> <p>DEPLOYMENT_OPTION</p>\
          \ </li> <li> <p>INSTANCE_TYPE</p> </li> <li> <p>LINKED_ACCOUNT</p> </li>\
          \ <li> <p>OPERATING_SYSTEM</p> </li> <li> <p>PLATFORM</p> </li> <li> <p>REGION</p>\
          \ </li> <li> <p>SERVICE</p> </li> <li> <p>TAG</p> </li> <li> <p>TENANCY</p>\
          \ </li> </ul> <p> <code>GetReservationCoverage</code> uses the same <a href=\"\
          https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\"\
          >Expression</a> object as the other operations, but only <code>AND</code>\
          \ is supported among each dimension. You can nest only one level deep. If\
          \ there are multiple values for a dimension, they are OR'd together.</p>\
          \ <p>If you don't provide a <code>SERVICE</code> filter, Cost Explorer defaults\
          \ to EC2.</p> <p>Cost category is also supported.</p>"
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    GetReservationCoverageRequest_SortBy:
      allOf:
      - $ref: '#/components/schemas/SortDefinition'
      - description: <p>The value by which you want to sort the data.</p> <p>The following
          values are supported for <code>Key</code>:</p> <ul> <li> <p> <code>OnDemandCost</code>
          </p> </li> <li> <p> <code>CoverageHoursPercentage</code> </p> </li> <li>
          <p> <code>OnDemandHours</code> </p> </li> <li> <p> <code>ReservedHours</code>
          </p> </li> <li> <p> <code>TotalRunningHours</code> </p> </li> <li> <p> <code>CoverageNormalizedUnitsPercentage</code>
          </p> </li> <li> <p> <code>OnDemandNormalizedUnits</code> </p> </li> <li>
          <p> <code>ReservedNormalizedUnits</code> </p> </li> <li> <p> <code>TotalRunningNormalizedUnits</code>
          </p> </li> <li> <p> <code>Time</code> </p> </li> </ul> <p>Supported values
          for <code>SortOrder</code> are <code>ASCENDING</code> or <code>DESCENDING</code>.</p>
      example:
        SortOrder: ""
        Key: ""
    GetReservationPurchaseRecommendationResponse_Metadata:
      allOf:
      - $ref: '#/components/schemas/ReservationPurchaseRecommendationMetadata'
      - description: "Information about this specific recommendation call, such as\
          \ the time stamp for when Cost Explorer generated this recommendation."
      example:
        RecommendationId: ""
        GenerationTimestamp: ""
    GetReservationPurchaseRecommendationRequest_ServiceSpecification:
      allOf:
      - $ref: '#/components/schemas/ServiceSpecification'
      - description: "The hardware specifications for the service instances that you\
          \ want recommendations for, such as standard or convertible Amazon EC2 instances."
      example:
        EC2Specification:
          OfferingClass: ""
    GetReservationUtilizationResponse_Total:
      allOf:
      - $ref: '#/components/schemas/ReservationAggregates'
      - description: The total amount of time that you used your Reserved Instances
          (RIs).
      example:
        PurchasedHours: ""
        RICostForUnusedHours: ""
        UtilizationPercentageInUnits: ""
        PurchasedUnits: ""
        UnusedHours: ""
        UnrealizedSavings: ""
        TotalActualHours: ""
        AmortizedUpfrontFee: ""
        OnDemandCostOfRIHoursUsed: ""
        AmortizedRecurringFee: ""
        RealizedSavings: ""
        NetRISavings: ""
        UtilizationPercentage: ""
        TotalPotentialRISavings: ""
        TotalAmortizedFee: ""
        TotalActualUnits: ""
        UnusedUnits: ""
    GetReservationUtilizationRequest_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: "Sets the start and end dates for retrieving Reserved Instance\
          \ (RI) utilization. The start date is inclusive, but the end date is exclusive.\
          \ For example, if <code>start</code> is <code>2017-01-01</code> and <code>end</code>\
          \ is <code>2017-05-01</code>, then the cost and usage data is retrieved\
          \ from <code>2017-01-01</code> up to and including <code>2017-04-30</code>\
          \ but not including <code>2017-05-01</code>. "
      example:
        Start: ""
        End: ""
    GetReservationUtilizationRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: "<p>Filters utilization data by dimensions. You can filter by\
          \ the following dimensions:</p> <ul> <li> <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p>\
          \ </li> <li> <p>DEPLOYMENT_OPTION</p> </li> <li> <p>INSTANCE_TYPE</p> </li>\
          \ <li> <p>LINKED_ACCOUNT</p> </li> <li> <p>OPERATING_SYSTEM</p> </li> <li>\
          \ <p>PLATFORM</p> </li> <li> <p>REGION</p> </li> <li> <p>SERVICE</p> </li>\
          \ <li> <p>SCOPE</p> </li> <li> <p>TENANCY</p> </li> </ul> <p> <code>GetReservationUtilization</code>\
          \ uses the same <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\"\
          >Expression</a> object as the other operations, but only <code>AND</code>\
          \ is supported among each dimension, and nesting is supported up to only\
          \ one level deep. If there are multiple values for a dimension, they are\
          \ OR'd together.</p>"
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    GetReservationUtilizationRequest_SortBy:
      allOf:
      - $ref: '#/components/schemas/SortDefinition'
      - description: <p>The value that you want to sort the data by.</p> <p>The following
          values are supported for <code>Key</code>:</p> <ul> <li> <p> <code>UtilizationPercentage</code>
          </p> </li> <li> <p> <code>UtilizationPercentageInUnits</code> </p> </li>
          <li> <p> <code>PurchasedHours</code> </p> </li> <li> <p> <code>PurchasedUnits</code>
          </p> </li> <li> <p> <code>TotalActualHours</code> </p> </li> <li> <p> <code>TotalActualUnits</code>
          </p> </li> <li> <p> <code>UnusedHours</code> </p> </li> <li> <p> <code>UnusedUnits</code>
          </p> </li> <li> <p> <code>OnDemandCostOfRIHoursUsed</code> </p> </li> <li>
          <p> <code>NetRISavings</code> </p> </li> <li> <p> <code>TotalPotentialRISavings</code>
          </p> </li> <li> <p> <code>AmortizedUpfrontFee</code> </p> </li> <li> <p>
          <code>AmortizedRecurringFee</code> </p> </li> <li> <p> <code>TotalAmortizedFee</code>
          </p> </li> <li> <p> <code>RICostForUnusedHours</code> </p> </li> <li> <p>
          <code>RealizedSavings</code> </p> </li> <li> <p> <code>UnrealizedSavings</code>
          </p> </li> </ul> <p>The supported values for <code>SortOrder</code> are
          <code>ASCENDING</code> and <code>DESCENDING</code>.</p>
      example:
        SortOrder: ""
        Key: ""
    GetRightsizingRecommendationResponse_Metadata:
      allOf:
      - $ref: '#/components/schemas/RightsizingRecommendationMetadata'
      - description: Information regarding this specific recommendation set.
      example:
        LookbackPeriodInDays: ""
        RecommendationId: ""
        AdditionalMetadata: ""
        GenerationTimestamp: ""
    GetRightsizingRecommendationResponse_Summary:
      allOf:
      - $ref: '#/components/schemas/RightsizingRecommendationSummary'
      - description: Summary of this recommendation set.
      example:
        TotalRecommendationCount: ""
        SavingsCurrencyCode: ""
        SavingsPercentage: ""
        EstimatedTotalMonthlySavingsAmount: ""
    GetRightsizingRecommendationResponse_Configuration:
      allOf:
      - $ref: '#/components/schemas/RightsizingRecommendationConfiguration'
      - description: "You can use Configuration to customize recommendations across\
          \ two attributes. You can choose to view recommendations for instances within\
          \ the same instance families or across different instance families. You\
          \ can also choose to view your estimated savings that are associated with\
          \ recommendations with consideration of existing Savings Plans or RI benefits,\
          \ or neither. "
      example:
        BenefitsConsidered: ""
        RecommendationTarget: ""
    GetSavingsPlanPurchaseRecommendationDetailsResponse_RecommendationDetailData:
      allOf:
      - $ref: '#/components/schemas/RecommendationDetailData'
      - description: Contains detailed information about a specific Savings Plan recommendation.
      example:
        EstimatedSPCost: ""
        AccountId: ""
        ExistingHourlyCommitment: ""
        EstimatedOnDemandCost: ""
        EstimatedOnDemandCostWithCurrentCommitment: ""
        LookbackPeriodInDays: ""
        CurrentMinimumHourlyOnDemandSpend: ""
        EstimatedAverageCoverage: ""
        LatestUsageTimestamp: LatestUsageTimestamp
        TermInYears: ""
        EstimatedMonthlySavingsAmount: ""
        CurrencyCode: ""
        EstimatedROI: ""
        CurrentAverageHourlyOnDemandSpend: ""
        EstimatedSavingsAmount: ""
        PaymentOption: ""
        MetricsOverLookbackPeriod: ""
        HourlyCommitmentToPurchase: ""
        UpfrontCost: ""
        OfferingId: ""
        CurrentAverageCoverage: ""
        EstimatedSavingsPercentage: ""
        EstimatedAverageUtilization: ""
        InstanceFamily: ""
        SavingsPlansType: ""
        CurrentMaximumHourlyOnDemandSpend: ""
        AccountScope: ""
        Region: ""
        GenerationTimestamp: GenerationTimestamp
    GetSavingsPlansCoverageRequest_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: "The time period that you want the usage and costs for. The <code>Start</code>\
          \ date must be within 13 months. The <code>End</code> date must be after\
          \ the <code>Start</code> date, and before the current date. Future dates\
          \ can't be used as an <code>End</code> date."
      example:
        Start: ""
        End: ""
    GetSavingsPlansCoverageRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: "<p>Filters Savings Plans coverage data by dimensions. You can\
          \ filter data for Savings Plans usage with the following dimensions:</p>\
          \ <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>REGION</code>\
          \ </p> </li> <li> <p> <code>SERVICE</code> </p> </li> <li> <p> <code>INSTANCE_FAMILY</code>\
          \ </p> </li> </ul> <p> <code>GetSavingsPlansCoverage</code> uses the same\
          \ <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\"\
          >Expression</a> object as the other operations, but only <code>AND</code>\
          \ is supported among each dimension. If there are multiple values for a\
          \ dimension, they are OR'd together.</p> <p>Cost category is also supported.</p>"
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    GetSavingsPlansCoverageRequest_SortBy:
      allOf:
      - $ref: '#/components/schemas/SortDefinition'
      - description: <p>The value that you want to sort the data by.</p> <p>The following
          values are supported for <code>Key</code>:</p> <ul> <li> <p> <code>SpendCoveredBySavingsPlan</code>
          </p> </li> <li> <p> <code>OnDemandCost</code> </p> </li> <li> <p> <code>CoveragePercentage</code>
          </p> </li> <li> <p> <code>TotalCost</code> </p> </li> <li> <p> <code>InstanceFamily</code>
          </p> </li> <li> <p> <code>Region</code> </p> </li> <li> <p> <code>Service</code>
          </p> </li> </ul> <p>The supported values for <code>SortOrder</code> are
          <code>ASCENDING</code> and <code>DESCENDING</code>.</p>
      example:
        SortOrder: ""
        Key: ""
    GetSavingsPlansPurchaseRecommendationResponse_Metadata:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationMetadata'
      - description: Information that regards this specific recommendation set.
      example:
        RecommendationId: ""
        AdditionalMetadata: ""
        GenerationTimestamp: ""
    GetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansPurchaseRecommendation'
      - description: "Contains your request parameters, Savings Plan Recommendations\
          \ Summary, and Details."
      example:
        SavingsPlansPurchaseRecommendationSummary:
          CurrencyCode: ""
          EstimatedSavingsPercentage: ""
          EstimatedTotalCost: ""
          TotalRecommendationCount: ""
          EstimatedROI: ""
          EstimatedSavingsAmount: ""
          EstimatedOnDemandCostWithCurrentCommitment: ""
          CurrentOnDemandSpend: ""
          HourlyCommitmentToPurchase: ""
          DailyCommitmentToPurchase: ""
          EstimatedMonthlySavingsAmount: ""
        SavingsPlansType: ""
        LookbackPeriodInDays: ""
        SavingsPlansPurchaseRecommendationDetails: ""
        PaymentOption: ""
        TermInYears: ""
        AccountScope: ""
    GetSavingsPlansPurchaseRecommendationRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: "<p>You can filter your recommendations by Account ID with the\
          \ <code>LINKED_ACCOUNT</code> dimension. To filter your recommendations\
          \ by Account ID, specify <code>Key</code> as <code>LINKED_ACCOUNT</code>\
          \ and <code>Value</code> as the comma-separated Acount ID(s) that you want\
          \ to see Savings Plans purchase recommendations for.</p> <p>For GetSavingsPlansPurchaseRecommendation,\
          \ the <code>Filter</code> doesn't include <code>CostCategories</code> or\
          \ <code>Tags</code>. It only includes <code>Dimensions</code>. With <code>Dimensions</code>,\
          \ <code>Key</code> must be <code>LINKED_ACCOUNT</code> and <code>Value</code>\
          \ can be a single Account ID or multiple comma-separated Account IDs that\
          \ you want to see Savings Plans Purchase Recommendations for. <code>AND</code>\
          \ and <code>OR</code> operators are not supported.</p>"
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    GetSavingsPlansUtilizationResponse_Total:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansUtilizationAggregates'
      - description: "The total amount of cost/commitment that you used your Savings\
          \ Plans, regardless of date ranges."
      example:
        AmortizedCommitment:
          TotalAmortizedCommitment: ""
          AmortizedUpfrontCommitment: ""
          AmortizedRecurringCommitment: ""
        Savings:
          NetSavings: ""
          OnDemandCostEquivalent: ""
        Utilization:
          UnusedCommitment: ""
          TotalCommitment: ""
          UsedCommitment: ""
          UtilizationPercentage: ""
    GetSavingsPlansUtilizationRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: "<p>Filters Savings Plans utilization coverage data for active\
          \ Savings Plans dimensions. You can filter data with the following dimensions:</p>\
          \ <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>SAVINGS_PLAN_ARN</code>\
          \ </p> </li> <li> <p> <code>SAVINGS_PLANS_TYPE</code> </p> </li> <li> <p>\
          \ <code>REGION</code> </p> </li> <li> <p> <code>PAYMENT_OPTION</code> </p>\
          \ </li> <li> <p> <code>INSTANCE_TYPE_FAMILY</code> </p> </li> </ul> <p>\
          \ <code>GetSavingsPlansUtilization</code> uses the same <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\"\
          >Expression</a> object as the other operations, but only <code>AND</code>\
          \ is supported among each dimension.</p>"
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    GetSavingsPlansUtilizationRequest_SortBy:
      allOf:
      - $ref: '#/components/schemas/SortDefinition'
      - description: <p>The value that you want to sort the data by.</p> <p>The following
          values are supported for <code>Key</code>:</p> <ul> <li> <p> <code>UtilizationPercentage</code>
          </p> </li> <li> <p> <code>TotalCommitment</code> </p> </li> <li> <p> <code>UsedCommitment</code>
          </p> </li> <li> <p> <code>UnusedCommitment</code> </p> </li> <li> <p> <code>NetSavings</code>
          </p> </li> </ul> <p>The supported values for <code>SortOrder</code> are
          <code>ASCENDING</code> and <code>DESCENDING</code>.</p>
      example:
        SortOrder: ""
        Key: ""
    GetSavingsPlansUtilizationDetailsResponse_Total:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansUtilizationAggregates'
      - description: "The total Savings Plans utilization, regardless of time period."
      example:
        AmortizedCommitment:
          TotalAmortizedCommitment: ""
          AmortizedUpfrontCommitment: ""
          AmortizedRecurringCommitment: ""
        Savings:
          NetSavings: ""
          OnDemandCostEquivalent: ""
        Utilization:
          UnusedCommitment: ""
          TotalCommitment: ""
          UsedCommitment: ""
          UtilizationPercentage: ""
    GetSavingsPlansUtilizationDetailsRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: "<p>Filters Savings Plans utilization coverage data for active\
          \ Savings Plans dimensions. You can filter data with the following dimensions:</p>\
          \ <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>SAVINGS_PLAN_ARN</code>\
          \ </p> </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>PAYMENT_OPTION</code>\
          \ </p> </li> <li> <p> <code>INSTANCE_TYPE_FAMILY</code> </p> </li> </ul>\
          \ <p> <code>GetSavingsPlansUtilizationDetails</code> uses the same <a href=\"\
          https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\"\
          >Expression</a> object as the other operations, but only <code>AND</code>\
          \ is supported among each dimension.</p>"
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    GetSavingsPlansUtilizationDetailsRequest_SortBy:
      allOf:
      - $ref: '#/components/schemas/SortDefinition'
      - description: <p>The value that you want to sort the data by.</p> <p>The following
          values are supported for <code>Key</code>:</p> <ul> <li> <p> <code>UtilizationPercentage</code>
          </p> </li> <li> <p> <code>TotalCommitment</code> </p> </li> <li> <p> <code>UsedCommitment</code>
          </p> </li> <li> <p> <code>UnusedCommitment</code> </p> </li> <li> <p> <code>NetSavings</code>
          </p> </li> <li> <p> <code>AmortizedRecurringCommitment</code> </p> </li>
          <li> <p> <code>AmortizedUpfrontCommitment</code> </p> </li> </ul> <p>The
          supported values for <code>SortOrder</code> are <code>ASCENDING</code> and
          <code>DESCENDING</code>.</p>
      example:
        SortOrder: ""
        Key: ""
    GetTagsRequest_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: "The start and end dates for retrieving the dimension values.\
          \ The start date is inclusive, but the end date is exclusive. For example,\
          \ if <code>start</code> is <code>2017-01-01</code> and <code>end</code>\
          \ is <code>2017-05-01</code>, then the cost and usage data is retrieved\
          \ from <code>2017-01-01</code> up to and including <code>2017-04-30</code>\
          \ but not including <code>2017-05-01</code>."
      example:
        Start: ""
        End: ""
    GetUsageForecastResponse_Total:
      allOf:
      - $ref: '#/components/schemas/MetricValue'
      - description: How much you're forecasted to use over the forecast period.
      example:
        Amount: ""
        Unit: ""
    GetUsageForecastRequest_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: "The start and end dates of the period that you want to retrieve\
          \ usage forecast for. The start date is included in the period, but the\
          \ end date isn't included in the period. For example, if <code>start</code>\
          \ is <code>2017-01-01</code> and <code>end</code> is <code>2017-05-01</code>,\
          \ then the cost and usage data is retrieved from <code>2017-01-01</code>\
          \ up to and including <code>2017-04-30</code> but not including <code>2017-05-01</code>.\
          \ The start date must be equal to or later than the current date to avoid\
          \ a validation error."
      example:
        Start: ""
        End: ""
    GetUsageForecastRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: <p>The filters that you want to use to filter your forecast.
          The <code>GetUsageForecast</code> API supports filtering by the following
          dimensions:</p> <ul> <li> <p> <code>AZ</code> </p> </li> <li> <p> <code>INSTANCE_TYPE</code>
          </p> </li> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>LINKED_ACCOUNT_NAME</code>
          </p> </li> <li> <p> <code>OPERATION</code> </p> </li> <li> <p> <code>PURCHASE_TYPE</code>
          </p> </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>SERVICE</code>
          </p> </li> <li> <p> <code>USAGE_TYPE</code> </p> </li> <li> <p> <code>USAGE_TYPE_GROUP</code>
          </p> </li> <li> <p> <code>RECORD_TYPE</code> </p> </li> <li> <p> <code>OPERATING_SYSTEM</code>
          </p> </li> <li> <p> <code>TENANCY</code> </p> </li> <li> <p> <code>SCOPE</code>
          </p> </li> <li> <p> <code>PLATFORM</code> </p> </li> <li> <p> <code>SUBSCRIPTION_ID</code>
          </p> </li> <li> <p> <code>LEGAL_ENTITY_NAME</code> </p> </li> <li> <p> <code>DEPLOYMENT_OPTION</code>
          </p> </li> <li> <p> <code>DATABASE_ENGINE</code> </p> </li> <li> <p> <code>INSTANCE_TYPE_FAMILY</code>
          </p> </li> <li> <p> <code>BILLING_ENTITY</code> </p> </li> <li> <p> <code>RESERVATION_ID</code>
          </p> </li> <li> <p> <code>SAVINGS_PLAN_ARN</code> </p> </li> </ul>
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    UpdateAnomalySubscriptionRequest_ThresholdExpression:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: "<p>The update to the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\"\
          >Expression</a> object used to specify the anomalies that you want to generate\
          \ alerts for. This supports dimensions and nested expressions. The supported\
          \ dimensions are <code>ANOMALY_TOTAL_IMPACT_ABSOLUTE</code> and <code>ANOMALY_TOTAL_IMPACT_PERCENTAGE</code>,\
          \ corresponding to an anomaly’s TotalImpact and TotalImpactPercentage, respectively\
          \ (see <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Impact.html\"\
          >Impact</a> for more details). The supported nested expression types are\
          \ <code>AND</code> and <code>OR</code>. The match option <code>GREATER_THAN_OR_EQUAL</code>\
          \ is required. Values must be numbers between 0 and 10,000,000,000 in string\
          \ format.</p> <p>You can specify either Threshold or ThresholdExpression,\
          \ but not both.</p> <p>The following are examples of valid ThresholdExpressions:</p>\
          \ <ul> <li> <p>Absolute threshold: <code>{ \"Dimensions\": { \"Key\": \"\
          ANOMALY_TOTAL_IMPACT_ABSOLUTE\", \"MatchOptions\": [ \"GREATER_THAN_OR_EQUAL\"\
          \ ], \"Values\": [ \"100\" ] } }</code> </p> </li> <li> <p>Percentage threshold:\
          \ <code>{ \"Dimensions\": { \"Key\": \"ANOMALY_TOTAL_IMPACT_PERCENTAGE\"\
          , \"MatchOptions\": [ \"GREATER_THAN_OR_EQUAL\" ], \"Values\": [ \"100\"\
          \ ] } }</code> </p> </li> <li> <p> <code>AND</code> two thresholds together:\
          \ <code>{ \"And\": [ { \"Dimensions\": { \"Key\": \"ANOMALY_TOTAL_IMPACT_ABSOLUTE\"\
          , \"MatchOptions\": [ \"GREATER_THAN_OR_EQUAL\" ], \"Values\": [ \"100\"\
          \ ] } }, { \"Dimensions\": { \"Key\": \"ANOMALY_TOTAL_IMPACT_PERCENTAGE\"\
          , \"MatchOptions\": [ \"GREATER_THAN_OR_EQUAL\" ], \"Values\": [ \"100\"\
          \ ] } } ] }</code> </p> </li> <li> <p> <code>OR</code> two thresholds together:\
          \ <code>{ \"Or\": [ { \"Dimensions\": { \"Key\": \"ANOMALY_TOTAL_IMPACT_ABSOLUTE\"\
          , \"MatchOptions\": [ \"GREATER_THAN_OR_EQUAL\" ], \"Values\": [ \"100\"\
          \ ] } }, { \"Dimensions\": { \"Key\": \"ANOMALY_TOTAL_IMPACT_PERCENTAGE\"\
          , \"MatchOptions\": [ \"GREATER_THAN_OR_EQUAL\" ], \"Values\": [ \"100\"\
          \ ] } } ] }</code> </p> </li> </ul>"
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    Anomaly_AnomalyScore:
      allOf:
      - $ref: '#/components/schemas/AnomalyScore'
      - description: 'The latest and maximum score for the anomaly. '
    Anomaly_Impact:
      allOf:
      - $ref: '#/components/schemas/Impact'
      - description: 'The dollar impact for the anomaly. '
    Expression_Not:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: Return results that don't match a <code>Dimension</code> object.
      example:
        Not: null
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    Expression_Dimensions:
      allOf:
      - $ref: '#/components/schemas/DimensionValues'
      - description: The specific <code>Dimension</code> to use for <code>Expression</code>.
      example:
        MatchOptions: ""
        Values: ""
        Key: ""
    Expression_Tags:
      allOf:
      - $ref: '#/components/schemas/TagValues'
      - description: The specific <code>Tag</code> to use for <code>Expression</code>.
      example:
        MatchOptions: ""
        Values: ""
        Key: ""
    Expression_CostCategories:
      allOf:
      - $ref: '#/components/schemas/CostCategoryValues'
      - description: The filter that's based on <code>CostCategory</code> values.
      example:
        MatchOptions: ""
        Values: ""
        Key: Key
    AnomalySubscription_ThresholdExpression:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: "<p>An <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\"\
          >Expression</a> object used to specify the anomalies that you want to generate\
          \ alerts for. This supports dimensions and nested expressions. The supported\
          \ dimensions are <code>ANOMALY_TOTAL_IMPACT_ABSOLUTE</code> and <code>ANOMALY_TOTAL_IMPACT_PERCENTAGE</code>,\
          \ corresponding to an anomaly’s TotalImpact and TotalImpactPercentage, respectively\
          \ (see <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Impact.html\"\
          >Impact</a> for more details). The supported nested expression types are\
          \ <code>AND</code> and <code>OR</code>. The match option <code>GREATER_THAN_OR_EQUAL</code>\
          \ is required. Values must be numbers between 0 and 10,000,000,000 in string\
          \ format.</p> <p>One of Threshold or ThresholdExpression is required for\
          \ this resource. You cannot specify both.</p> <p>The following are examples\
          \ of valid ThresholdExpressions:</p> <ul> <li> <p>Absolute threshold: <code>{\
          \ \"Dimensions\": { \"Key\": \"ANOMALY_TOTAL_IMPACT_ABSOLUTE\", \"MatchOptions\"\
          : [ \"GREATER_THAN_OR_EQUAL\" ], \"Values\": [ \"100\" ] } }</code> </p>\
          \ </li> <li> <p>Percentage threshold: <code>{ \"Dimensions\": { \"Key\"\
          : \"ANOMALY_TOTAL_IMPACT_PERCENTAGE\", \"MatchOptions\": [ \"GREATER_THAN_OR_EQUAL\"\
          \ ], \"Values\": [ \"100\" ] } }</code> </p> </li> <li> <p> <code>AND</code>\
          \ two thresholds together: <code>{ \"And\": [ { \"Dimensions\": { \"Key\"\
          : \"ANOMALY_TOTAL_IMPACT_ABSOLUTE\", \"MatchOptions\": [ \"GREATER_THAN_OR_EQUAL\"\
          \ ], \"Values\": [ \"100\" ] } }, { \"Dimensions\": { \"Key\": \"ANOMALY_TOTAL_IMPACT_PERCENTAGE\"\
          , \"MatchOptions\": [ \"GREATER_THAN_OR_EQUAL\" ], \"Values\": [ \"100\"\
          \ ] } } ] }</code> </p> </li> <li> <p> <code>OR</code> two thresholds together:\
          \ <code>{ \"Or\": [ { \"Dimensions\": { \"Key\": \"ANOMALY_TOTAL_IMPACT_ABSOLUTE\"\
          , \"MatchOptions\": [ \"GREATER_THAN_OR_EQUAL\" ], \"Values\": [ \"100\"\
          \ ] } }, { \"Dimensions\": { \"Key\": \"ANOMALY_TOTAL_IMPACT_PERCENTAGE\"\
          , \"MatchOptions\": [ \"GREATER_THAN_OR_EQUAL\" ], \"Values\": [ \"100\"\
          \ ] } } ] }</code> </p> </li> </ul>"
      example:
        Not:
          Not: null
          Or: ""
          And: ""
          Dimensions:
            MatchOptions: ""
            Values: ""
            Key: ""
          CostCategories:
            MatchOptions: ""
            Values: ""
            Key: Key
          Tags:
            MatchOptions: ""
            Values: ""
            Key: ""
        Or: ""
        And: ""
        Dimensions:
          MatchOptions: ""
          Values: ""
          Key: ""
        CostCategories:
          MatchOptions: ""
          Values: ""
          Key: Key
        Tags:
          MatchOptions: ""
          Values: ""
          Key: ""
    CostCategoryRule_Rule:
      allOf:
      - $ref: '#/components/schemas/Expression'
      - description: "<p>An <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\"\
          >Expression</a> object used to categorize costs. This supports dimensions,\
          \ tags, and nested expressions. Currently the only dimensions supported\
          \ are <code>LINKED_ACCOUNT</code>, <code>SERVICE_CODE</code>, <code>RECORD_TYPE</code>,\
          \ <code>LINKED_ACCOUNT_NAME</code>, <code>REGION</code>, and <code>USAGE_TYPE</code>.</p>\
          \ <p> <code>RECORD_TYPE</code> is a dimension used for Cost Explorer APIs,\
          \ and is also supported for Cost Category expressions. This dimension uses\
          \ different terms, depending on whether you're using the console or API/JSON\
          \ editor. For a detailed comparison, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/manage-cost-categories.html#cost-categories-terms\"\
          >Term Comparisons</a> in the <i>Billing and Cost Management User Guide</i>.</p>"
    CostCategoryRule_InheritedValue:
      allOf:
      - $ref: '#/components/schemas/CostCategoryInheritedValueDimension'
      - description: The value the line item is categorized as if the line item contains
          the matched dimension.
    Coverage_CoverageHours:
      allOf:
      - $ref: '#/components/schemas/CoverageHours'
      - description: "The amount of instance usage that the reservation covered, in\
          \ hours."
      example:
        TotalRunningHours: ""
        CoverageHoursPercentage: ""
        OnDemandHours: ""
        ReservedHours: ""
    Coverage_CoverageNormalizedUnits:
      allOf:
      - $ref: '#/components/schemas/CoverageNormalizedUnits'
      - description: "The amount of instance usage that the reservation covered, in\
          \ normalized units."
      example:
        TotalRunningNormalizedUnits: ""
        ReservedNormalizedUnits: ""
        OnDemandNormalizedUnits: ""
        CoverageNormalizedUnitsPercentage: ""
    Coverage_CoverageCost:
      allOf:
      - $ref: '#/components/schemas/CoverageCost'
      - description: The amount of cost that the reservation covered.
      example:
        OnDemandCost: ""
    CoverageByTime_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: The period that this coverage was used over.
    CoverageByTime_Total:
      allOf:
      - $ref: '#/components/schemas/Coverage'
      - description: "The total reservation coverage, in hours."
    ResourceDetails_EC2ResourceDetails:
      allOf:
      - $ref: '#/components/schemas/EC2ResourceDetails'
      - description: Details for the Amazon EC2 resource.
    ResourceUtilization_EC2ResourceUtilization:
      allOf:
      - $ref: '#/components/schemas/EC2ResourceUtilization'
      - description: 'The utilization of current Amazon EC2 instance. '
    CurrentInstance_ResourceDetails:
      allOf:
      - $ref: '#/components/schemas/ResourceDetails'
      - description: Details about the resource and utilization.
    CurrentInstance_ResourceUtilization:
      allOf:
      - $ref: '#/components/schemas/ResourceUtilization'
      - description: Utilization information of the current instance during the lookback
          period.
    EC2ResourceUtilization_EBSResourceUtilization:
      allOf:
      - $ref: '#/components/schemas/EBSResourceUtilization'
      - description: 'The EBS field that contains a list of EBS metrics that are associated
          with the current instance. '
    EC2ResourceUtilization_DiskResourceUtilization:
      allOf:
      - $ref: '#/components/schemas/DiskResourceUtilization'
      - description: 'The field that contains a list of disk (local storage) metrics
          that are associated with the current instance. '
    EC2ResourceUtilization_NetworkResourceUtilization:
      allOf:
      - $ref: '#/components/schemas/NetworkResourceUtilization'
      - description: 'The network field that contains a list of network metrics that
          are associated with the current instance. '
    ForecastResult_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: The period of time that the forecast covers.
    ServiceSpecification_EC2Specification:
      allOf:
      - $ref: '#/components/schemas/EC2Specification'
      - description: The Amazon EC2 hardware specifications that you want Amazon Web
          Services to provide recommendations for.
      example:
        OfferingClass: ""
    SavingsPlansPurchaseRecommendation_SavingsPlansPurchaseRecommendationSummary:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationSummary'
      - description: 'Summary metrics for your Savings Plans Recommendations. '
      example:
        CurrencyCode: ""
        EstimatedSavingsPercentage: ""
        EstimatedTotalCost: ""
        TotalRecommendationCount: ""
        EstimatedROI: ""
        EstimatedSavingsAmount: ""
        EstimatedOnDemandCostWithCurrentCommitment: ""
        CurrentOnDemandSpend: ""
        HourlyCommitmentToPurchase: ""
        DailyCommitmentToPurchase: ""
        EstimatedMonthlySavingsAmount: ""
    SavingsPlansUtilizationAggregates_Utilization:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansUtilization'
      - description: A ratio of your effectiveness of using existing Savings Plans
          to apply to workloads that are Savings Plans eligible.
      example:
        UnusedCommitment: ""
        TotalCommitment: ""
        UsedCommitment: ""
        UtilizationPercentage: ""
    SavingsPlansUtilizationAggregates_Savings:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansSavings'
      - description: The amount that's saved by using existing Savings Plans. Savings
          returns both net savings from Savings Plans and also the <code>onDemandCostEquivalent</code>
          of the Savings Plans when considering the utilization rate.
      example:
        NetSavings: ""
        OnDemandCostEquivalent: ""
    SavingsPlansUtilizationAggregates_AmortizedCommitment:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansAmortizedCommitment'
      - description: The total amortized commitment for a Savings Plans. This includes
          the sum of the upfront and recurring Savings Plans fees.
      example:
        TotalAmortizedCommitment: ""
        AmortizedUpfrontCommitment: ""
        AmortizedRecurringCommitment: ""
    InstanceDetails_EC2InstanceDetails:
      allOf:
      - $ref: '#/components/schemas/EC2InstanceDetails'
      - description: The Amazon EC2 instances that Amazon Web Services recommends
          that you purchase.
    InstanceDetails_RDSInstanceDetails:
      allOf:
      - $ref: '#/components/schemas/RDSInstanceDetails'
      - description: The Amazon RDS instances that Amazon Web Services recommends
          that you purchase.
    InstanceDetails_RedshiftInstanceDetails:
      allOf:
      - $ref: '#/components/schemas/RedshiftInstanceDetails'
      - description: The Amazon Redshift instances that Amazon Web Services recommends
          that you purchase.
    InstanceDetails_ElastiCacheInstanceDetails:
      allOf:
      - $ref: '#/components/schemas/ElastiCacheInstanceDetails'
      - description: The ElastiCache instances that Amazon Web Services recommends
          that you purchase.
    InstanceDetails_ESInstanceDetails:
      allOf:
      - $ref: '#/components/schemas/ESInstanceDetails'
      - description: The Amazon OpenSearch Service instances that Amazon Web Services
          recommends that you purchase.
    ReservationCoverageGroup_Coverage:
      allOf:
      - $ref: '#/components/schemas/Coverage'
      - description: How much instance usage this group of reservations covered.
    ReservationPurchaseRecommendation_ServiceSpecification:
      allOf:
      - $ref: '#/components/schemas/ServiceSpecification'
      - description: Hardware specifications for the service that you want recommendations
          for.
    ReservationPurchaseRecommendation_RecommendationSummary:
      allOf:
      - $ref: '#/components/schemas/ReservationPurchaseRecommendationSummary'
      - description: A summary about the recommended purchase.
    ReservationPurchaseRecommendationDetail_InstanceDetails:
      allOf:
      - $ref: '#/components/schemas/InstanceDetails'
      - description: Details about the instances that Amazon Web Services recommends
          that you purchase.
    ReservationUtilizationGroup_Utilization:
      allOf:
      - $ref: '#/components/schemas/ReservationAggregates'
      - description: How much you used this group of reservations.
    ResultByTime_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: The time period that the result covers.
    RightsizingRecommendation_CurrentInstance:
      allOf:
      - $ref: '#/components/schemas/CurrentInstance'
      - description: Context regarding the current instance.
    RightsizingRecommendation_ModifyRecommendationDetail:
      allOf:
      - $ref: '#/components/schemas/ModifyRecommendationDetail'
      - description: 'The details for the modification recommendations. '
    RightsizingRecommendation_TerminateRecommendationDetail:
      allOf:
      - $ref: '#/components/schemas/TerminateRecommendationDetail'
      - description: The details for termination recommendations.
    SavingsPlansCoverage_Coverage:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansCoverageData'
      - description: The amount of Savings Plans eligible usage that the Savings Plans
          covered.
    SavingsPlansPurchaseRecommendationDetail_SavingsPlansDetails:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansDetails'
      - description: Details for your recommended Savings Plans.
    SavingsPlansUtilizationDetail_Savings:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansSavings'
      - description: The amount saved by using existing Savings Plans. Savings returns
          both net savings from savings plans and also the <code>onDemandCostEquivalent</code>
          of the Savings Plans when considering the utilization rate.
    SavingsPlansUtilizationDetail_AmortizedCommitment:
      allOf:
      - $ref: '#/components/schemas/SavingsPlansAmortizedCommitment'
      - description: The total amortized commitment for a Savings Plans. Includes
          the sum of the upfront and recurring Savings Plans fees.
    TargetInstance_ResourceDetails:
      allOf:
      - $ref: '#/components/schemas/ResourceDetails'
      - description: 'Details on the target instance type. '
    TargetInstance_ExpectedResourceUtilization:
      allOf:
      - $ref: '#/components/schemas/ResourceUtilization'
      - description: The expected utilization metrics for target instance type.
    UtilizationByTime_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/DateInterval'
      - description: The period of time that this utilization was used for.
    UtilizationByTime_Total:
      allOf:
      - $ref: '#/components/schemas/ReservationAggregates'
      - description: The total number of reservation hours that were used.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

