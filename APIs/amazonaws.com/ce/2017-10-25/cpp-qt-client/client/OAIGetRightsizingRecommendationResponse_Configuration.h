/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetRightsizingRecommendationResponse_Configuration.h
 *
 * 
 */

#ifndef OAIGetRightsizingRecommendationResponse_Configuration_H
#define OAIGetRightsizingRecommendationResponse_Configuration_H

#include <QJsonObject>

#include "OAIRecommendationTarget.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetRightsizingRecommendationResponse_Configuration : public OAIObject {
public:
    OAIGetRightsizingRecommendationResponse_Configuration();
    OAIGetRightsizingRecommendationResponse_Configuration(QString json);
    ~OAIGetRightsizingRecommendationResponse_Configuration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRecommendationTarget getRecommendationTarget() const;
    void setRecommendationTarget(const OAIRecommendationTarget &recommendation_target);
    bool is_recommendation_target_Set() const;
    bool is_recommendation_target_Valid() const;

    bool getBenefitsConsidered() const;
    void setBenefitsConsidered(const bool &benefits_considered);
    bool is_benefits_considered_Set() const;
    bool is_benefits_considered_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRecommendationTarget m_recommendation_target;
    bool m_recommendation_target_isSet;
    bool m_recommendation_target_isValid;

    bool m_benefits_considered;
    bool m_benefits_considered_isSet;
    bool m_benefits_considered_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetRightsizingRecommendationResponse_Configuration)

#endif // OAIGetRightsizingRecommendationResponse_Configuration_H
