/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetCostAndUsageResponse.h
 *
 * 
 */

#ifndef OAIGetCostAndUsageResponse_H
#define OAIGetCostAndUsageResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetCostAndUsageResponse : public OAIObject {
public:
    OAIGetCostAndUsageResponse();
    OAIGetCostAndUsageResponse(QString json);
    ~OAIGetCostAndUsageResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList getGroupDefinitions() const;
    void setGroupDefinitions(const QList &group_definitions);
    bool is_group_definitions_Set() const;
    bool is_group_definitions_Valid() const;

    QList getResultsByTime() const;
    void setResultsByTime(const QList &results_by_time);
    bool is_results_by_time_Set() const;
    bool is_results_by_time_Valid() const;

    QList getDimensionValueAttributes() const;
    void setDimensionValueAttributes(const QList &dimension_value_attributes);
    bool is_dimension_value_attributes_Set() const;
    bool is_dimension_value_attributes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList m_group_definitions;
    bool m_group_definitions_isSet;
    bool m_group_definitions_isValid;

    QList m_results_by_time;
    bool m_results_by_time_isSet;
    bool m_results_by_time_isValid;

    QList m_dimension_value_attributes;
    bool m_dimension_value_attributes_isSet;
    bool m_dimension_value_attributes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetCostAndUsageResponse)

#endif // OAIGetCostAndUsageResponse_H
