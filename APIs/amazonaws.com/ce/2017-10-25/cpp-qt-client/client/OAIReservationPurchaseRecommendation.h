/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReservationPurchaseRecommendation.h
 *
 * A specific reservation that Amazon Web Services recommends for purchase.
 */

#ifndef OAIReservationPurchaseRecommendation_H
#define OAIReservationPurchaseRecommendation_H

#include <QJsonObject>

#include "OAIAccountScope.h"
#include "OAILookbackPeriodInDays.h"
#include "OAIPaymentOption.h"
#include "OAIReservationPurchaseRecommendation_RecommendationSummary.h"
#include "OAIReservationPurchaseRecommendation_ServiceSpecification.h"
#include "OAITermInYears.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReservationPurchaseRecommendation_ServiceSpecification;
class OAIReservationPurchaseRecommendation_RecommendationSummary;

class OAIReservationPurchaseRecommendation : public OAIObject {
public:
    OAIReservationPurchaseRecommendation();
    OAIReservationPurchaseRecommendation(QString json);
    ~OAIReservationPurchaseRecommendation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccountScope getAccountScope() const;
    void setAccountScope(const OAIAccountScope &account_scope);
    bool is_account_scope_Set() const;
    bool is_account_scope_Valid() const;

    OAILookbackPeriodInDays getLookbackPeriodInDays() const;
    void setLookbackPeriodInDays(const OAILookbackPeriodInDays &lookback_period_in_days);
    bool is_lookback_period_in_days_Set() const;
    bool is_lookback_period_in_days_Valid() const;

    OAITermInYears getTermInYears() const;
    void setTermInYears(const OAITermInYears &term_in_years);
    bool is_term_in_years_Set() const;
    bool is_term_in_years_Valid() const;

    OAIPaymentOption getPaymentOption() const;
    void setPaymentOption(const OAIPaymentOption &payment_option);
    bool is_payment_option_Set() const;
    bool is_payment_option_Valid() const;

    OAIReservationPurchaseRecommendation_ServiceSpecification getServiceSpecification() const;
    void setServiceSpecification(const OAIReservationPurchaseRecommendation_ServiceSpecification &service_specification);
    bool is_service_specification_Set() const;
    bool is_service_specification_Valid() const;

    QList getRecommendationDetails() const;
    void setRecommendationDetails(const QList &recommendation_details);
    bool is_recommendation_details_Set() const;
    bool is_recommendation_details_Valid() const;

    OAIReservationPurchaseRecommendation_RecommendationSummary getRecommendationSummary() const;
    void setRecommendationSummary(const OAIReservationPurchaseRecommendation_RecommendationSummary &recommendation_summary);
    bool is_recommendation_summary_Set() const;
    bool is_recommendation_summary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccountScope m_account_scope;
    bool m_account_scope_isSet;
    bool m_account_scope_isValid;

    OAILookbackPeriodInDays m_lookback_period_in_days;
    bool m_lookback_period_in_days_isSet;
    bool m_lookback_period_in_days_isValid;

    OAITermInYears m_term_in_years;
    bool m_term_in_years_isSet;
    bool m_term_in_years_isValid;

    OAIPaymentOption m_payment_option;
    bool m_payment_option_isSet;
    bool m_payment_option_isValid;

    OAIReservationPurchaseRecommendation_ServiceSpecification m_service_specification;
    bool m_service_specification_isSet;
    bool m_service_specification_isValid;

    QList m_recommendation_details;
    bool m_recommendation_details_isSet;
    bool m_recommendation_details_isValid;

    OAIReservationPurchaseRecommendation_RecommendationSummary m_recommendation_summary;
    bool m_recommendation_summary_isSet;
    bool m_recommendation_summary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReservationPurchaseRecommendation)

#endif // OAIReservationPurchaseRecommendation_H
