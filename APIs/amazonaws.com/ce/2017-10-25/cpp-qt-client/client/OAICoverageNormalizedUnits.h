/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICoverageNormalizedUnits.h
 *
 * &lt;p&gt;The amount of instance usage, in normalized units. You can use normalized units to see your EC2 usage for multiple sizes of instances in a uniform way. For example, suppose that you run an xlarge instance and a 2xlarge instance. If you run both instances for the same amount of time, the 2xlarge instance uses twice as much of your reservation as the xlarge instance, even though both instances show only one instance-hour. When you use normalized units instead of instance-hours, the xlarge instance used 8 normalized units, and the 2xlarge instance used 16 normalized units.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html\&quot;&gt;Modifying Reserved Instances&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Compute Cloud User Guide for Linux Instances&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAICoverageNormalizedUnits_H
#define OAICoverageNormalizedUnits_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICoverageNormalizedUnits : public OAIObject {
public:
    OAICoverageNormalizedUnits();
    OAICoverageNormalizedUnits(QString json);
    ~OAICoverageNormalizedUnits() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOnDemandNormalizedUnits() const;
    void setOnDemandNormalizedUnits(const QString &on_demand_normalized_units);
    bool is_on_demand_normalized_units_Set() const;
    bool is_on_demand_normalized_units_Valid() const;

    QString getReservedNormalizedUnits() const;
    void setReservedNormalizedUnits(const QString &reserved_normalized_units);
    bool is_reserved_normalized_units_Set() const;
    bool is_reserved_normalized_units_Valid() const;

    QString getTotalRunningNormalizedUnits() const;
    void setTotalRunningNormalizedUnits(const QString &total_running_normalized_units);
    bool is_total_running_normalized_units_Set() const;
    bool is_total_running_normalized_units_Valid() const;

    QString getCoverageNormalizedUnitsPercentage() const;
    void setCoverageNormalizedUnitsPercentage(const QString &coverage_normalized_units_percentage);
    bool is_coverage_normalized_units_percentage_Set() const;
    bool is_coverage_normalized_units_percentage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_on_demand_normalized_units;
    bool m_on_demand_normalized_units_isSet;
    bool m_on_demand_normalized_units_isValid;

    QString m_reserved_normalized_units;
    bool m_reserved_normalized_units_isSet;
    bool m_reserved_normalized_units_isValid;

    QString m_total_running_normalized_units;
    bool m_total_running_normalized_units_isSet;
    bool m_total_running_normalized_units_isValid;

    QString m_coverage_normalized_units_percentage;
    bool m_coverage_normalized_units_percentage_isSet;
    bool m_coverage_normalized_units_percentage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICoverageNormalizedUnits)

#endif // OAICoverageNormalizedUnits_H
