/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResultByTime.h
 *
 * The result that&#39;s associated with a time period.
 */

#ifndef OAIResultByTime_H
#define OAIResultByTime_H

#include <QJsonObject>

#include "OAIResultByTime_TimePeriod.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResultByTime_TimePeriod;

class OAIResultByTime : public OAIObject {
public:
    OAIResultByTime();
    OAIResultByTime(QString json);
    ~OAIResultByTime() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResultByTime_TimePeriod getTimePeriod() const;
    void setTimePeriod(const OAIResultByTime_TimePeriod &time_period);
    bool is_time_period_Set() const;
    bool is_time_period_Valid() const;

    QMap getTotal() const;
    void setTotal(const QMap &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QList getGroups() const;
    void setGroups(const QList &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    bool getEstimated() const;
    void setEstimated(const bool &estimated);
    bool is_estimated_Set() const;
    bool is_estimated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResultByTime_TimePeriod m_time_period;
    bool m_time_period_isSet;
    bool m_time_period_isValid;

    QMap m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QList m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;

    bool m_estimated;
    bool m_estimated_isSet;
    bool m_estimated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResultByTime)

#endif // OAIResultByTime_H
