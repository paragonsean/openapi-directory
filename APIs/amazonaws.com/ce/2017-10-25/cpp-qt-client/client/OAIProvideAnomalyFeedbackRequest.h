/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvideAnomalyFeedbackRequest.h
 *
 * 
 */

#ifndef OAIProvideAnomalyFeedbackRequest_H
#define OAIProvideAnomalyFeedbackRequest_H

#include <QJsonObject>

#include "OAIAnomalyFeedbackType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProvideAnomalyFeedbackRequest : public OAIObject {
public:
    OAIProvideAnomalyFeedbackRequest();
    OAIProvideAnomalyFeedbackRequest(QString json);
    ~OAIProvideAnomalyFeedbackRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnomalyId() const;
    void setAnomalyId(const QString &anomaly_id);
    bool is_anomaly_id_Set() const;
    bool is_anomaly_id_Valid() const;

    OAIAnomalyFeedbackType getFeedback() const;
    void setFeedback(const OAIAnomalyFeedbackType &feedback);
    bool is_feedback_Set() const;
    bool is_feedback_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_anomaly_id;
    bool m_anomaly_id_isSet;
    bool m_anomaly_id_isValid;

    OAIAnomalyFeedbackType m_feedback;
    bool m_feedback_isSet;
    bool m_feedback_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvideAnomalyFeedbackRequest)

#endif // OAIProvideAnomalyFeedbackRequest_H
