/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnomaly_AnomalyScore.h
 *
 * 
 */

#ifndef OAIAnomaly_AnomalyScore_H
#define OAIAnomaly_AnomalyScore_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnomaly_AnomalyScore : public OAIObject {
public:
    OAIAnomaly_AnomalyScore();
    OAIAnomaly_AnomalyScore(QString json);
    ~OAIAnomaly_AnomalyScore() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getMaxScore() const;
    void setMaxScore(const double &max_score);
    bool is_max_score_Set() const;
    bool is_max_score_Valid() const;

    double getCurrentScore() const;
    void setCurrentScore(const double &current_score);
    bool is_current_score_Set() const;
    bool is_current_score_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_max_score;
    bool m_max_score_isSet;
    bool m_max_score_isValid;

    double m_current_score;
    bool m_current_score_isSet;
    bool m_current_score_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnomaly_AnomalyScore)

#endif // OAIAnomaly_AnomalyScore_H
