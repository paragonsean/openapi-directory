/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetSavingsPlansCoverageResponse.h
 *
 * 
 */

#ifndef OAIGetSavingsPlansCoverageResponse_H
#define OAIGetSavingsPlansCoverageResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetSavingsPlansCoverageResponse : public OAIObject {
public:
    OAIGetSavingsPlansCoverageResponse();
    OAIGetSavingsPlansCoverageResponse(QString json);
    ~OAIGetSavingsPlansCoverageResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getSavingsPlansCoverages() const;
    void setSavingsPlansCoverages(const QList &savings_plans_coverages);
    bool is_savings_plans_coverages_Set() const;
    bool is_savings_plans_coverages_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_savings_plans_coverages;
    bool m_savings_plans_coverages_isSet;
    bool m_savings_plans_coverages_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetSavingsPlansCoverageResponse)

#endif // OAIGetSavingsPlansCoverageResponse_H
