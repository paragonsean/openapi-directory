/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetSavingsPlansPurchaseRecommendationResponse.h
 *
 * 
 */

#ifndef OAIGetSavingsPlansPurchaseRecommendationResponse_H
#define OAIGetSavingsPlansPurchaseRecommendationResponse_H

#include <QJsonObject>

#include "OAIGetSavingsPlansPurchaseRecommendationResponse_Metadata.h"
#include "OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetSavingsPlansPurchaseRecommendationResponse_Metadata;
class OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation;

class OAIGetSavingsPlansPurchaseRecommendationResponse : public OAIObject {
public:
    OAIGetSavingsPlansPurchaseRecommendationResponse();
    OAIGetSavingsPlansPurchaseRecommendationResponse(QString json);
    ~OAIGetSavingsPlansPurchaseRecommendationResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetSavingsPlansPurchaseRecommendationResponse_Metadata getMetadata() const;
    void setMetadata(const OAIGetSavingsPlansPurchaseRecommendationResponse_Metadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation getSavingsPlansPurchaseRecommendation() const;
    void setSavingsPlansPurchaseRecommendation(const OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation &savings_plans_purchase_recommendation);
    bool is_savings_plans_purchase_recommendation_Set() const;
    bool is_savings_plans_purchase_recommendation_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetSavingsPlansPurchaseRecommendationResponse_Metadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation m_savings_plans_purchase_recommendation;
    bool m_savings_plans_purchase_recommendation_isSet;
    bool m_savings_plans_purchase_recommendation_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetSavingsPlansPurchaseRecommendationResponse)

#endif // OAIGetSavingsPlansPurchaseRecommendationResponse_H
