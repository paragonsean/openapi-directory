/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICostCategorySplitChargeRule.h
 *
 * Use the split charge rule to split the cost of one Cost Category value across several other target values. 
 */

#ifndef OAICostCategorySplitChargeRule_H
#define OAICostCategorySplitChargeRule_H

#include <QJsonObject>

#include "OAICostCategorySplitChargeMethod.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICostCategorySplitChargeRule : public OAIObject {
public:
    OAICostCategorySplitChargeRule();
    OAICostCategorySplitChargeRule(QString json);
    ~OAICostCategorySplitChargeRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QList getTargets() const;
    void setTargets(const QList &targets);
    bool is_targets_Set() const;
    bool is_targets_Valid() const;

    OAICostCategorySplitChargeMethod getMethod() const;
    void setMethod(const OAICostCategorySplitChargeMethod &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    QList getParameters() const;
    void setParameters(const QList &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QList m_targets;
    bool m_targets_isSet;
    bool m_targets_isValid;

    OAICostCategorySplitChargeMethod m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    QList m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICostCategorySplitChargeRule)

#endif // OAICostCategorySplitChargeRule_H
