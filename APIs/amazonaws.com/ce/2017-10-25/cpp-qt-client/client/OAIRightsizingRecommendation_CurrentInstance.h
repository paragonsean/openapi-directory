/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRightsizingRecommendation_CurrentInstance.h
 *
 * 
 */

#ifndef OAIRightsizingRecommendation_CurrentInstance_H
#define OAIRightsizingRecommendation_CurrentInstance_H

#include <QJsonObject>

#include "OAICurrentInstance_ResourceDetails.h"
#include "OAICurrentInstance_ResourceUtilization.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICurrentInstance_ResourceDetails;
class OAICurrentInstance_ResourceUtilization;

class OAIRightsizingRecommendation_CurrentInstance : public OAIObject {
public:
    OAIRightsizingRecommendation_CurrentInstance();
    OAIRightsizingRecommendation_CurrentInstance(QString json);
    ~OAIRightsizingRecommendation_CurrentInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getResourceId() const;
    void setResourceId(const QString &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QString getInstanceName() const;
    void setInstanceName(const QString &instance_name);
    bool is_instance_name_Set() const;
    bool is_instance_name_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAICurrentInstance_ResourceDetails getResourceDetails() const;
    void setResourceDetails(const OAICurrentInstance_ResourceDetails &resource_details);
    bool is_resource_details_Set() const;
    bool is_resource_details_Valid() const;

    OAICurrentInstance_ResourceUtilization getResourceUtilization() const;
    void setResourceUtilization(const OAICurrentInstance_ResourceUtilization &resource_utilization);
    bool is_resource_utilization_Set() const;
    bool is_resource_utilization_Valid() const;

    QString getReservationCoveredHoursInLookbackPeriod() const;
    void setReservationCoveredHoursInLookbackPeriod(const QString &reservation_covered_hours_in_lookback_period);
    bool is_reservation_covered_hours_in_lookback_period_Set() const;
    bool is_reservation_covered_hours_in_lookback_period_Valid() const;

    QString getSavingsPlansCoveredHoursInLookbackPeriod() const;
    void setSavingsPlansCoveredHoursInLookbackPeriod(const QString &savings_plans_covered_hours_in_lookback_period);
    bool is_savings_plans_covered_hours_in_lookback_period_Set() const;
    bool is_savings_plans_covered_hours_in_lookback_period_Valid() const;

    QString getOnDemandHoursInLookbackPeriod() const;
    void setOnDemandHoursInLookbackPeriod(const QString &on_demand_hours_in_lookback_period);
    bool is_on_demand_hours_in_lookback_period_Set() const;
    bool is_on_demand_hours_in_lookback_period_Valid() const;

    QString getTotalRunningHoursInLookbackPeriod() const;
    void setTotalRunningHoursInLookbackPeriod(const QString &total_running_hours_in_lookback_period);
    bool is_total_running_hours_in_lookback_period_Set() const;
    bool is_total_running_hours_in_lookback_period_Valid() const;

    QString getMonthlyCost() const;
    void setMonthlyCost(const QString &monthly_cost);
    bool is_monthly_cost_Set() const;
    bool is_monthly_cost_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QString m_instance_name;
    bool m_instance_name_isSet;
    bool m_instance_name_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAICurrentInstance_ResourceDetails m_resource_details;
    bool m_resource_details_isSet;
    bool m_resource_details_isValid;

    OAICurrentInstance_ResourceUtilization m_resource_utilization;
    bool m_resource_utilization_isSet;
    bool m_resource_utilization_isValid;

    QString m_reservation_covered_hours_in_lookback_period;
    bool m_reservation_covered_hours_in_lookback_period_isSet;
    bool m_reservation_covered_hours_in_lookback_period_isValid;

    QString m_savings_plans_covered_hours_in_lookback_period;
    bool m_savings_plans_covered_hours_in_lookback_period_isSet;
    bool m_savings_plans_covered_hours_in_lookback_period_isValid;

    QString m_on_demand_hours_in_lookback_period;
    bool m_on_demand_hours_in_lookback_period_isSet;
    bool m_on_demand_hours_in_lookback_period_isValid;

    QString m_total_running_hours_in_lookback_period;
    bool m_total_running_hours_in_lookback_period_isSet;
    bool m_total_running_hours_in_lookback_period_isValid;

    QString m_monthly_cost;
    bool m_monthly_cost_isSet;
    bool m_monthly_cost_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRightsizingRecommendation_CurrentInstance)

#endif // OAIRightsizingRecommendation_CurrentInstance_H
