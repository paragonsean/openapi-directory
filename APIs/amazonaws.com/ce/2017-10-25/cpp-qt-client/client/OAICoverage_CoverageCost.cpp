/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICoverage_CoverageCost.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICoverage_CoverageCost::OAICoverage_CoverageCost(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICoverage_CoverageCost::OAICoverage_CoverageCost() {
    this->initializeModel();
}

OAICoverage_CoverageCost::~OAICoverage_CoverageCost() {}

void OAICoverage_CoverageCost::initializeModel() {

    m_on_demand_cost_isSet = false;
    m_on_demand_cost_isValid = false;
}

void OAICoverage_CoverageCost::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICoverage_CoverageCost::fromJsonObject(QJsonObject json) {

    m_on_demand_cost_isValid = ::OpenAPI::fromJsonValue(m_on_demand_cost, json[QString("OnDemandCost")]);
    m_on_demand_cost_isSet = !json[QString("OnDemandCost")].isNull() && m_on_demand_cost_isValid;
}

QString OAICoverage_CoverageCost::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICoverage_CoverageCost::asJsonObject() const {
    QJsonObject obj;
    if (m_on_demand_cost_isSet) {
        obj.insert(QString("OnDemandCost"), ::OpenAPI::toJsonValue(m_on_demand_cost));
    }
    return obj;
}

QString OAICoverage_CoverageCost::getOnDemandCost() const {
    return m_on_demand_cost;
}
void OAICoverage_CoverageCost::setOnDemandCost(const QString &on_demand_cost) {
    m_on_demand_cost = on_demand_cost;
    m_on_demand_cost_isSet = true;
}

bool OAICoverage_CoverageCost::is_on_demand_cost_Set() const{
    return m_on_demand_cost_isSet;
}

bool OAICoverage_CoverageCost::is_on_demand_cost_Valid() const{
    return m_on_demand_cost_isValid;
}

bool OAICoverage_CoverageCost::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_on_demand_cost_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICoverage_CoverageCost::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
