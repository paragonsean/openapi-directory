/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRightsizingRecommendation_TerminateRecommendationDetail.h
 *
 * 
 */

#ifndef OAIRightsizingRecommendation_TerminateRecommendationDetail_H
#define OAIRightsizingRecommendation_TerminateRecommendationDetail_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRightsizingRecommendation_TerminateRecommendationDetail : public OAIObject {
public:
    OAIRightsizingRecommendation_TerminateRecommendationDetail();
    OAIRightsizingRecommendation_TerminateRecommendationDetail(QString json);
    ~OAIRightsizingRecommendation_TerminateRecommendationDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEstimatedMonthlySavings() const;
    void setEstimatedMonthlySavings(const QString &estimated_monthly_savings);
    bool is_estimated_monthly_savings_Set() const;
    bool is_estimated_monthly_savings_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_estimated_monthly_savings;
    bool m_estimated_monthly_savings_isSet;
    bool m_estimated_monthly_savings_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRightsizingRecommendation_TerminateRecommendationDetail)

#endif // OAIRightsizingRecommendation_TerminateRecommendationDetail_H
