/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEC2ResourceUtilization_DiskResourceUtilization.h
 *
 * 
 */

#ifndef OAIEC2ResourceUtilization_DiskResourceUtilization_H
#define OAIEC2ResourceUtilization_DiskResourceUtilization_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEC2ResourceUtilization_DiskResourceUtilization : public OAIObject {
public:
    OAIEC2ResourceUtilization_DiskResourceUtilization();
    OAIEC2ResourceUtilization_DiskResourceUtilization(QString json);
    ~OAIEC2ResourceUtilization_DiskResourceUtilization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDiskReadOpsPerSecond() const;
    void setDiskReadOpsPerSecond(const QString &disk_read_ops_per_second);
    bool is_disk_read_ops_per_second_Set() const;
    bool is_disk_read_ops_per_second_Valid() const;

    QString getDiskWriteOpsPerSecond() const;
    void setDiskWriteOpsPerSecond(const QString &disk_write_ops_per_second);
    bool is_disk_write_ops_per_second_Set() const;
    bool is_disk_write_ops_per_second_Valid() const;

    QString getDiskReadBytesPerSecond() const;
    void setDiskReadBytesPerSecond(const QString &disk_read_bytes_per_second);
    bool is_disk_read_bytes_per_second_Set() const;
    bool is_disk_read_bytes_per_second_Valid() const;

    QString getDiskWriteBytesPerSecond() const;
    void setDiskWriteBytesPerSecond(const QString &disk_write_bytes_per_second);
    bool is_disk_write_bytes_per_second_Set() const;
    bool is_disk_write_bytes_per_second_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_disk_read_ops_per_second;
    bool m_disk_read_ops_per_second_isSet;
    bool m_disk_read_ops_per_second_isValid;

    QString m_disk_write_ops_per_second;
    bool m_disk_write_ops_per_second_isSet;
    bool m_disk_write_ops_per_second_isValid;

    QString m_disk_read_bytes_per_second;
    bool m_disk_read_bytes_per_second_isSet;
    bool m_disk_read_bytes_per_second_isValid;

    QString m_disk_write_bytes_per_second;
    bool m_disk_write_bytes_per_second_isSet;
    bool m_disk_write_bytes_per_second_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEC2ResourceUtilization_DiskResourceUtilization)

#endif // OAIEC2ResourceUtilization_DiskResourceUtilization_H
