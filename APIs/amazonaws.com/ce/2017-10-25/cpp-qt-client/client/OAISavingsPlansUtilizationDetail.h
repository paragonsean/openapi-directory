/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISavingsPlansUtilizationDetail.h
 *
 * A single daily or monthly Savings Plans utilization rate and details for your account. A management account in an organization have access to member accounts. You can use &lt;code&gt;GetDimensionValues&lt;/code&gt; to determine the possible dimension values. 
 */

#ifndef OAISavingsPlansUtilizationDetail_H
#define OAISavingsPlansUtilizationDetail_H

#include <QJsonObject>

#include "OAISavingsPlansUtilizationAggregates_Utilization.h"
#include "OAISavingsPlansUtilizationDetail_AmortizedCommitment.h"
#include "OAISavingsPlansUtilizationDetail_Savings.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISavingsPlansUtilizationAggregates_Utilization;
class OAISavingsPlansUtilizationDetail_Savings;
class OAISavingsPlansUtilizationDetail_AmortizedCommitment;

class OAISavingsPlansUtilizationDetail : public OAIObject {
public:
    OAISavingsPlansUtilizationDetail();
    OAISavingsPlansUtilizationDetail(QString json);
    ~OAISavingsPlansUtilizationDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSavingsPlanArn() const;
    void setSavingsPlanArn(const QString &savings_plan_arn);
    bool is_savings_plan_arn_Set() const;
    bool is_savings_plan_arn_Valid() const;

    QMap getAttributes() const;
    void setAttributes(const QMap &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    OAISavingsPlansUtilizationAggregates_Utilization getUtilization() const;
    void setUtilization(const OAISavingsPlansUtilizationAggregates_Utilization &utilization);
    bool is_utilization_Set() const;
    bool is_utilization_Valid() const;

    OAISavingsPlansUtilizationDetail_Savings getSavings() const;
    void setSavings(const OAISavingsPlansUtilizationDetail_Savings &savings);
    bool is_savings_Set() const;
    bool is_savings_Valid() const;

    OAISavingsPlansUtilizationDetail_AmortizedCommitment getAmortizedCommitment() const;
    void setAmortizedCommitment(const OAISavingsPlansUtilizationDetail_AmortizedCommitment &amortized_commitment);
    bool is_amortized_commitment_Set() const;
    bool is_amortized_commitment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_savings_plan_arn;
    bool m_savings_plan_arn_isSet;
    bool m_savings_plan_arn_isValid;

    QMap m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    OAISavingsPlansUtilizationAggregates_Utilization m_utilization;
    bool m_utilization_isSet;
    bool m_utilization_isValid;

    OAISavingsPlansUtilizationDetail_Savings m_savings;
    bool m_savings_isSet;
    bool m_savings_isValid;

    OAISavingsPlansUtilizationDetail_AmortizedCommitment m_amortized_commitment;
    bool m_amortized_commitment_isSet;
    bool m_amortized_commitment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISavingsPlansUtilizationDetail)

#endif // OAISavingsPlansUtilizationDetail_H
