/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICostCategoryRule_InheritedValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICostCategoryRule_InheritedValue::OAICostCategoryRule_InheritedValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICostCategoryRule_InheritedValue::OAICostCategoryRule_InheritedValue() {
    this->initializeModel();
}

OAICostCategoryRule_InheritedValue::~OAICostCategoryRule_InheritedValue() {}

void OAICostCategoryRule_InheritedValue::initializeModel() {

    m_dimension_name_isSet = false;
    m_dimension_name_isValid = false;

    m_dimension_key_isSet = false;
    m_dimension_key_isValid = false;
}

void OAICostCategoryRule_InheritedValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICostCategoryRule_InheritedValue::fromJsonObject(QJsonObject json) {

    m_dimension_name_isValid = ::OpenAPI::fromJsonValue(m_dimension_name, json[QString("DimensionName")]);
    m_dimension_name_isSet = !json[QString("DimensionName")].isNull() && m_dimension_name_isValid;

    m_dimension_key_isValid = ::OpenAPI::fromJsonValue(m_dimension_key, json[QString("DimensionKey")]);
    m_dimension_key_isSet = !json[QString("DimensionKey")].isNull() && m_dimension_key_isValid;
}

QString OAICostCategoryRule_InheritedValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICostCategoryRule_InheritedValue::asJsonObject() const {
    QJsonObject obj;
    if (m_dimension_name.isSet()) {
        obj.insert(QString("DimensionName"), ::OpenAPI::toJsonValue(m_dimension_name));
    }
    if (m_dimension_key_isSet) {
        obj.insert(QString("DimensionKey"), ::OpenAPI::toJsonValue(m_dimension_key));
    }
    return obj;
}

OAICostCategoryInheritedValueDimensionName OAICostCategoryRule_InheritedValue::getDimensionName() const {
    return m_dimension_name;
}
void OAICostCategoryRule_InheritedValue::setDimensionName(const OAICostCategoryInheritedValueDimensionName &dimension_name) {
    m_dimension_name = dimension_name;
    m_dimension_name_isSet = true;
}

bool OAICostCategoryRule_InheritedValue::is_dimension_name_Set() const{
    return m_dimension_name_isSet;
}

bool OAICostCategoryRule_InheritedValue::is_dimension_name_Valid() const{
    return m_dimension_name_isValid;
}

QString OAICostCategoryRule_InheritedValue::getDimensionKey() const {
    return m_dimension_key;
}
void OAICostCategoryRule_InheritedValue::setDimensionKey(const QString &dimension_key) {
    m_dimension_key = dimension_key;
    m_dimension_key_isSet = true;
}

bool OAICostCategoryRule_InheritedValue::is_dimension_key_Set() const{
    return m_dimension_key_isSet;
}

bool OAICostCategoryRule_InheritedValue::is_dimension_key_Valid() const{
    return m_dimension_key_isValid;
}

bool OAICostCategoryRule_InheritedValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimension_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimension_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICostCategoryRule_InheritedValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
