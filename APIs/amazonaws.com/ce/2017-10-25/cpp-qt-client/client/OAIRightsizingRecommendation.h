/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRightsizingRecommendation.h
 *
 * Recommendations to rightsize resources.
 */

#ifndef OAIRightsizingRecommendation_H
#define OAIRightsizingRecommendation_H

#include <QJsonObject>

#include "OAIRightsizingRecommendation_CurrentInstance.h"
#include "OAIRightsizingRecommendation_ModifyRecommendationDetail.h"
#include "OAIRightsizingRecommendation_TerminateRecommendationDetail.h"
#include "OAIRightsizingType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRightsizingRecommendation_CurrentInstance;
class OAIRightsizingRecommendation_ModifyRecommendationDetail;
class OAIRightsizingRecommendation_TerminateRecommendationDetail;

class OAIRightsizingRecommendation : public OAIObject {
public:
    OAIRightsizingRecommendation();
    OAIRightsizingRecommendation(QString json);
    ~OAIRightsizingRecommendation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    OAIRightsizingRecommendation_CurrentInstance getCurrentInstance() const;
    void setCurrentInstance(const OAIRightsizingRecommendation_CurrentInstance &current_instance);
    bool is_current_instance_Set() const;
    bool is_current_instance_Valid() const;

    OAIRightsizingType getRightsizingType() const;
    void setRightsizingType(const OAIRightsizingType &rightsizing_type);
    bool is_rightsizing_type_Set() const;
    bool is_rightsizing_type_Valid() const;

    OAIRightsizingRecommendation_ModifyRecommendationDetail getModifyRecommendationDetail() const;
    void setModifyRecommendationDetail(const OAIRightsizingRecommendation_ModifyRecommendationDetail &modify_recommendation_detail);
    bool is_modify_recommendation_detail_Set() const;
    bool is_modify_recommendation_detail_Valid() const;

    OAIRightsizingRecommendation_TerminateRecommendationDetail getTerminateRecommendationDetail() const;
    void setTerminateRecommendationDetail(const OAIRightsizingRecommendation_TerminateRecommendationDetail &terminate_recommendation_detail);
    bool is_terminate_recommendation_detail_Set() const;
    bool is_terminate_recommendation_detail_Valid() const;

    QList getFindingReasonCodes() const;
    void setFindingReasonCodes(const QList &finding_reason_codes);
    bool is_finding_reason_codes_Set() const;
    bool is_finding_reason_codes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    OAIRightsizingRecommendation_CurrentInstance m_current_instance;
    bool m_current_instance_isSet;
    bool m_current_instance_isValid;

    OAIRightsizingType m_rightsizing_type;
    bool m_rightsizing_type_isSet;
    bool m_rightsizing_type_isValid;

    OAIRightsizingRecommendation_ModifyRecommendationDetail m_modify_recommendation_detail;
    bool m_modify_recommendation_detail_isSet;
    bool m_modify_recommendation_detail_isValid;

    OAIRightsizingRecommendation_TerminateRecommendationDetail m_terminate_recommendation_detail;
    bool m_terminate_recommendation_detail_isSet;
    bool m_terminate_recommendation_detail_isValid;

    QList m_finding_reason_codes;
    bool m_finding_reason_codes_isSet;
    bool m_finding_reason_codes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRightsizingRecommendation)

#endif // OAIRightsizingRecommendation_H
