/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeCostCategoryDefinitionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeCostCategoryDefinitionRequest::OAIDescribeCostCategoryDefinitionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeCostCategoryDefinitionRequest::OAIDescribeCostCategoryDefinitionRequest() {
    this->initializeModel();
}

OAIDescribeCostCategoryDefinitionRequest::~OAIDescribeCostCategoryDefinitionRequest() {}

void OAIDescribeCostCategoryDefinitionRequest::initializeModel() {

    m_cost_category_arn_isSet = false;
    m_cost_category_arn_isValid = false;

    m_effective_on_isSet = false;
    m_effective_on_isValid = false;
}

void OAIDescribeCostCategoryDefinitionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeCostCategoryDefinitionRequest::fromJsonObject(QJsonObject json) {

    m_cost_category_arn_isValid = ::OpenAPI::fromJsonValue(m_cost_category_arn, json[QString("CostCategoryArn")]);
    m_cost_category_arn_isSet = !json[QString("CostCategoryArn")].isNull() && m_cost_category_arn_isValid;

    m_effective_on_isValid = ::OpenAPI::fromJsonValue(m_effective_on, json[QString("EffectiveOn")]);
    m_effective_on_isSet = !json[QString("EffectiveOn")].isNull() && m_effective_on_isValid;
}

QString OAIDescribeCostCategoryDefinitionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeCostCategoryDefinitionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_category_arn_isSet) {
        obj.insert(QString("CostCategoryArn"), ::OpenAPI::toJsonValue(m_cost_category_arn));
    }
    if (m_effective_on_isSet) {
        obj.insert(QString("EffectiveOn"), ::OpenAPI::toJsonValue(m_effective_on));
    }
    return obj;
}

QString OAIDescribeCostCategoryDefinitionRequest::getCostCategoryArn() const {
    return m_cost_category_arn;
}
void OAIDescribeCostCategoryDefinitionRequest::setCostCategoryArn(const QString &cost_category_arn) {
    m_cost_category_arn = cost_category_arn;
    m_cost_category_arn_isSet = true;
}

bool OAIDescribeCostCategoryDefinitionRequest::is_cost_category_arn_Set() const{
    return m_cost_category_arn_isSet;
}

bool OAIDescribeCostCategoryDefinitionRequest::is_cost_category_arn_Valid() const{
    return m_cost_category_arn_isValid;
}

QString OAIDescribeCostCategoryDefinitionRequest::getEffectiveOn() const {
    return m_effective_on;
}
void OAIDescribeCostCategoryDefinitionRequest::setEffectiveOn(const QString &effective_on) {
    m_effective_on = effective_on;
    m_effective_on_isSet = true;
}

bool OAIDescribeCostCategoryDefinitionRequest::is_effective_on_Set() const{
    return m_effective_on_isSet;
}

bool OAIDescribeCostCategoryDefinitionRequest::is_effective_on_Valid() const{
    return m_effective_on_isValid;
}

bool OAIDescribeCostCategoryDefinitionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_category_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_on_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeCostCategoryDefinitionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_cost_category_arn_isValid && true;
}

} // namespace OpenAPI
