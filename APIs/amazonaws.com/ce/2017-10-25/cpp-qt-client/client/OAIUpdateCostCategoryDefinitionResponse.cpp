/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateCostCategoryDefinitionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateCostCategoryDefinitionResponse::OAIUpdateCostCategoryDefinitionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateCostCategoryDefinitionResponse::OAIUpdateCostCategoryDefinitionResponse() {
    this->initializeModel();
}

OAIUpdateCostCategoryDefinitionResponse::~OAIUpdateCostCategoryDefinitionResponse() {}

void OAIUpdateCostCategoryDefinitionResponse::initializeModel() {

    m_cost_category_arn_isSet = false;
    m_cost_category_arn_isValid = false;

    m_effective_start_isSet = false;
    m_effective_start_isValid = false;
}

void OAIUpdateCostCategoryDefinitionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateCostCategoryDefinitionResponse::fromJsonObject(QJsonObject json) {

    m_cost_category_arn_isValid = ::OpenAPI::fromJsonValue(m_cost_category_arn, json[QString("CostCategoryArn")]);
    m_cost_category_arn_isSet = !json[QString("CostCategoryArn")].isNull() && m_cost_category_arn_isValid;

    m_effective_start_isValid = ::OpenAPI::fromJsonValue(m_effective_start, json[QString("EffectiveStart")]);
    m_effective_start_isSet = !json[QString("EffectiveStart")].isNull() && m_effective_start_isValid;
}

QString OAIUpdateCostCategoryDefinitionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateCostCategoryDefinitionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_category_arn_isSet) {
        obj.insert(QString("CostCategoryArn"), ::OpenAPI::toJsonValue(m_cost_category_arn));
    }
    if (m_effective_start_isSet) {
        obj.insert(QString("EffectiveStart"), ::OpenAPI::toJsonValue(m_effective_start));
    }
    return obj;
}

QString OAIUpdateCostCategoryDefinitionResponse::getCostCategoryArn() const {
    return m_cost_category_arn;
}
void OAIUpdateCostCategoryDefinitionResponse::setCostCategoryArn(const QString &cost_category_arn) {
    m_cost_category_arn = cost_category_arn;
    m_cost_category_arn_isSet = true;
}

bool OAIUpdateCostCategoryDefinitionResponse::is_cost_category_arn_Set() const{
    return m_cost_category_arn_isSet;
}

bool OAIUpdateCostCategoryDefinitionResponse::is_cost_category_arn_Valid() const{
    return m_cost_category_arn_isValid;
}

QString OAIUpdateCostCategoryDefinitionResponse::getEffectiveStart() const {
    return m_effective_start;
}
void OAIUpdateCostCategoryDefinitionResponse::setEffectiveStart(const QString &effective_start) {
    m_effective_start = effective_start;
    m_effective_start_isSet = true;
}

bool OAIUpdateCostCategoryDefinitionResponse::is_effective_start_Set() const{
    return m_effective_start_isSet;
}

bool OAIUpdateCostCategoryDefinitionResponse::is_effective_start_Valid() const{
    return m_effective_start_isValid;
}

bool OAIUpdateCostCategoryDefinitionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_category_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_start_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateCostCategoryDefinitionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
