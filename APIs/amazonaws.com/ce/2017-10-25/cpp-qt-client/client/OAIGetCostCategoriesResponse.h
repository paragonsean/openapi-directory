/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetCostCategoriesResponse.h
 *
 * 
 */

#ifndef OAIGetCostCategoriesResponse_H
#define OAIGetCostCategoriesResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetCostCategoriesResponse : public OAIObject {
public:
    OAIGetCostCategoriesResponse();
    OAIGetCostCategoriesResponse(QString json);
    ~OAIGetCostCategoriesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList getCostCategoryNames() const;
    void setCostCategoryNames(const QList &cost_category_names);
    bool is_cost_category_names_Set() const;
    bool is_cost_category_names_Valid() const;

    QList getCostCategoryValues() const;
    void setCostCategoryValues(const QList &cost_category_values);
    bool is_cost_category_values_Set() const;
    bool is_cost_category_values_Valid() const;

    qint32 getReturnSize() const;
    void setReturnSize(const qint32 &return_size);
    bool is_return_size_Set() const;
    bool is_return_size_Valid() const;

    qint32 getTotalSize() const;
    void setTotalSize(const qint32 &total_size);
    bool is_total_size_Set() const;
    bool is_total_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList m_cost_category_names;
    bool m_cost_category_names_isSet;
    bool m_cost_category_names_isValid;

    QList m_cost_category_values;
    bool m_cost_category_values_isSet;
    bool m_cost_category_values_isValid;

    qint32 m_return_size;
    bool m_return_size_isSet;
    bool m_return_size_isValid;

    qint32 m_total_size;
    bool m_total_size_isSet;
    bool m_total_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetCostCategoriesResponse)

#endif // OAIGetCostCategoriesResponse_H
