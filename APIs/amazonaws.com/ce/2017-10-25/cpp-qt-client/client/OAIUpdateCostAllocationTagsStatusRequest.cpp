/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateCostAllocationTagsStatusRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateCostAllocationTagsStatusRequest::OAIUpdateCostAllocationTagsStatusRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateCostAllocationTagsStatusRequest::OAIUpdateCostAllocationTagsStatusRequest() {
    this->initializeModel();
}

OAIUpdateCostAllocationTagsStatusRequest::~OAIUpdateCostAllocationTagsStatusRequest() {}

void OAIUpdateCostAllocationTagsStatusRequest::initializeModel() {

    m_cost_allocation_tags_status_isSet = false;
    m_cost_allocation_tags_status_isValid = false;
}

void OAIUpdateCostAllocationTagsStatusRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateCostAllocationTagsStatusRequest::fromJsonObject(QJsonObject json) {

    m_cost_allocation_tags_status_isValid = ::OpenAPI::fromJsonValue(m_cost_allocation_tags_status, json[QString("CostAllocationTagsStatus")]);
    m_cost_allocation_tags_status_isSet = !json[QString("CostAllocationTagsStatus")].isNull() && m_cost_allocation_tags_status_isValid;
}

QString OAIUpdateCostAllocationTagsStatusRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateCostAllocationTagsStatusRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_allocation_tags_status.isSet()) {
        obj.insert(QString("CostAllocationTagsStatus"), ::OpenAPI::toJsonValue(m_cost_allocation_tags_status));
    }
    return obj;
}

QList OAIUpdateCostAllocationTagsStatusRequest::getCostAllocationTagsStatus() const {
    return m_cost_allocation_tags_status;
}
void OAIUpdateCostAllocationTagsStatusRequest::setCostAllocationTagsStatus(const QList &cost_allocation_tags_status) {
    m_cost_allocation_tags_status = cost_allocation_tags_status;
    m_cost_allocation_tags_status_isSet = true;
}

bool OAIUpdateCostAllocationTagsStatusRequest::is_cost_allocation_tags_status_Set() const{
    return m_cost_allocation_tags_status_isSet;
}

bool OAIUpdateCostAllocationTagsStatusRequest::is_cost_allocation_tags_status_Valid() const{
    return m_cost_allocation_tags_status_isValid;
}

bool OAIUpdateCostAllocationTagsStatusRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_allocation_tags_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateCostAllocationTagsStatusRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_cost_allocation_tags_status_isValid && true;
}

} // namespace OpenAPI
