/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetReservationCoverageResponse.h
 *
 * 
 */

#ifndef OAIGetReservationCoverageResponse_H
#define OAIGetReservationCoverageResponse_H

#include <QJsonObject>

#include "OAIGetReservationCoverageResponse_Total.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetReservationCoverageResponse_Total;

class OAIGetReservationCoverageResponse : public OAIObject {
public:
    OAIGetReservationCoverageResponse();
    OAIGetReservationCoverageResponse(QString json);
    ~OAIGetReservationCoverageResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getCoveragesByTime() const;
    void setCoveragesByTime(const QList &coverages_by_time);
    bool is_coverages_by_time_Set() const;
    bool is_coverages_by_time_Valid() const;

    OAIGetReservationCoverageResponse_Total getTotal() const;
    void setTotal(const OAIGetReservationCoverageResponse_Total &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_coverages_by_time;
    bool m_coverages_by_time_isSet;
    bool m_coverages_by_time_isValid;

    OAIGetReservationCoverageResponse_Total m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetReservationCoverageResponse)

#endif // OAIGetReservationCoverageResponse_H
