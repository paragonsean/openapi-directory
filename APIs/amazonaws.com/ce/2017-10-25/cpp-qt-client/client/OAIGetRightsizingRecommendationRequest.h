/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetRightsizingRecommendationRequest.h
 *
 * 
 */

#ifndef OAIGetRightsizingRecommendationRequest_H
#define OAIGetRightsizingRecommendationRequest_H

#include <QJsonObject>

#include "OAIExpression.h"
#include "OAIGetRightsizingRecommendationResponse_Configuration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExpression;
class OAIGetRightsizingRecommendationResponse_Configuration;

class OAIGetRightsizingRecommendationRequest : public OAIObject {
public:
    OAIGetRightsizingRecommendationRequest();
    OAIGetRightsizingRecommendationRequest(QString json);
    ~OAIGetRightsizingRecommendationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExpression getFilter() const;
    void setFilter(const OAIExpression &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    OAIGetRightsizingRecommendationResponse_Configuration getConfiguration() const;
    void setConfiguration(const OAIGetRightsizingRecommendationResponse_Configuration &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    QString getService() const;
    void setService(const QString &service);
    bool is_service_Set() const;
    bool is_service_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExpression m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    OAIGetRightsizingRecommendationResponse_Configuration m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    QString m_service;
    bool m_service_isSet;
    bool m_service_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetRightsizingRecommendationRequest)

#endif // OAIGetRightsizingRecommendationRequest_H
