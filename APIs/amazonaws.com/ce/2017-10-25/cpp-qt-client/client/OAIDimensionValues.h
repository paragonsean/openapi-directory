/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDimensionValues.h
 *
 * The metadata that you can use to filter and group your results. You can use &lt;code&gt;GetDimensionValues&lt;/code&gt; to find specific values.
 */

#ifndef OAIDimensionValues_H
#define OAIDimensionValues_H

#include <QJsonObject>

#include "OAIDimension.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDimensionValues : public OAIObject {
public:
    OAIDimensionValues();
    OAIDimensionValues(QString json);
    ~OAIDimensionValues() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDimension getKey() const;
    void setKey(const OAIDimension &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QList getValues() const;
    void setValues(const QList &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    QList getMatchOptions() const;
    void setMatchOptions(const QList &match_options);
    bool is_match_options_Set() const;
    bool is_match_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDimension m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QList m_values;
    bool m_values_isSet;
    bool m_values_isValid;

    QList m_match_options;
    bool m_match_options_isSet;
    bool m_match_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDimensionValues)

#endif // OAIDimensionValues_H
