/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation.h
 *
 * 
 */

#ifndef OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation_H
#define OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation_H

#include <QJsonObject>

#include "OAIAccountScope.h"
#include "OAILookbackPeriodInDays.h"
#include "OAIPaymentOption.h"
#include "OAISavingsPlansPurchaseRecommendation_SavingsPlansPurchaseRecommendationSummary.h"
#include "OAISupportedSavingsPlansType.h"
#include "OAITermInYears.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISavingsPlansPurchaseRecommendation_SavingsPlansPurchaseRecommendationSummary;

class OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation : public OAIObject {
public:
    OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation();
    OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation(QString json);
    ~OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccountScope getAccountScope() const;
    void setAccountScope(const OAIAccountScope &account_scope);
    bool is_account_scope_Set() const;
    bool is_account_scope_Valid() const;

    OAISupportedSavingsPlansType getSavingsPlansType() const;
    void setSavingsPlansType(const OAISupportedSavingsPlansType &savings_plans_type);
    bool is_savings_plans_type_Set() const;
    bool is_savings_plans_type_Valid() const;

    OAITermInYears getTermInYears() const;
    void setTermInYears(const OAITermInYears &term_in_years);
    bool is_term_in_years_Set() const;
    bool is_term_in_years_Valid() const;

    OAIPaymentOption getPaymentOption() const;
    void setPaymentOption(const OAIPaymentOption &payment_option);
    bool is_payment_option_Set() const;
    bool is_payment_option_Valid() const;

    OAILookbackPeriodInDays getLookbackPeriodInDays() const;
    void setLookbackPeriodInDays(const OAILookbackPeriodInDays &lookback_period_in_days);
    bool is_lookback_period_in_days_Set() const;
    bool is_lookback_period_in_days_Valid() const;

    QList getSavingsPlansPurchaseRecommendationDetails() const;
    void setSavingsPlansPurchaseRecommendationDetails(const QList &savings_plans_purchase_recommendation_details);
    bool is_savings_plans_purchase_recommendation_details_Set() const;
    bool is_savings_plans_purchase_recommendation_details_Valid() const;

    OAISavingsPlansPurchaseRecommendation_SavingsPlansPurchaseRecommendationSummary getSavingsPlansPurchaseRecommendationSummary() const;
    void setSavingsPlansPurchaseRecommendationSummary(const OAISavingsPlansPurchaseRecommendation_SavingsPlansPurchaseRecommendationSummary &savings_plans_purchase_recommendation_summary);
    bool is_savings_plans_purchase_recommendation_summary_Set() const;
    bool is_savings_plans_purchase_recommendation_summary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccountScope m_account_scope;
    bool m_account_scope_isSet;
    bool m_account_scope_isValid;

    OAISupportedSavingsPlansType m_savings_plans_type;
    bool m_savings_plans_type_isSet;
    bool m_savings_plans_type_isValid;

    OAITermInYears m_term_in_years;
    bool m_term_in_years_isSet;
    bool m_term_in_years_isValid;

    OAIPaymentOption m_payment_option;
    bool m_payment_option_isSet;
    bool m_payment_option_isValid;

    OAILookbackPeriodInDays m_lookback_period_in_days;
    bool m_lookback_period_in_days_isSet;
    bool m_lookback_period_in_days_isValid;

    QList m_savings_plans_purchase_recommendation_details;
    bool m_savings_plans_purchase_recommendation_details_isSet;
    bool m_savings_plans_purchase_recommendation_details_isValid;

    OAISavingsPlansPurchaseRecommendation_SavingsPlansPurchaseRecommendationSummary m_savings_plans_purchase_recommendation_summary;
    bool m_savings_plans_purchase_recommendation_summary_isSet;
    bool m_savings_plans_purchase_recommendation_summary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation)

#endif // OAIGetSavingsPlansPurchaseRecommendationResponse_SavingsPlansPurchaseRecommendation_H
