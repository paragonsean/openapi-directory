/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecommendationDetailData.h
 *
 * The details and metrics for the given recommendation.
 */

#ifndef OAIRecommendationDetailData_H
#define OAIRecommendationDetailData_H

#include <QJsonObject>

#include "OAIAccountScope.h"
#include "OAILookbackPeriodInDays.h"
#include "OAIPaymentOption.h"
#include "OAISupportedSavingsPlansType.h"
#include "OAITermInYears.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRecommendationDetailData : public OAIObject {
public:
    OAIRecommendationDetailData();
    OAIRecommendationDetailData(QString json);
    ~OAIRecommendationDetailData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccountScope getAccountScope() const;
    void setAccountScope(const OAIAccountScope &account_scope);
    bool is_account_scope_Set() const;
    bool is_account_scope_Valid() const;

    OAILookbackPeriodInDays getLookbackPeriodInDays() const;
    void setLookbackPeriodInDays(const OAILookbackPeriodInDays &lookback_period_in_days);
    bool is_lookback_period_in_days_Set() const;
    bool is_lookback_period_in_days_Valid() const;

    OAISupportedSavingsPlansType getSavingsPlansType() const;
    void setSavingsPlansType(const OAISupportedSavingsPlansType &savings_plans_type);
    bool is_savings_plans_type_Set() const;
    bool is_savings_plans_type_Valid() const;

    OAITermInYears getTermInYears() const;
    void setTermInYears(const OAITermInYears &term_in_years);
    bool is_term_in_years_Set() const;
    bool is_term_in_years_Valid() const;

    OAIPaymentOption getPaymentOption() const;
    void setPaymentOption(const OAIPaymentOption &payment_option);
    bool is_payment_option_Set() const;
    bool is_payment_option_Valid() const;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getInstanceFamily() const;
    void setInstanceFamily(const QString &instance_family);
    bool is_instance_family_Set() const;
    bool is_instance_family_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getOfferingId() const;
    void setOfferingId(const QString &offering_id);
    bool is_offering_id_Set() const;
    bool is_offering_id_Valid() const;

    QString getGenerationTimestamp() const;
    void setGenerationTimestamp(const QString &generation_timestamp);
    bool is_generation_timestamp_Set() const;
    bool is_generation_timestamp_Valid() const;

    QString getLatestUsageTimestamp() const;
    void setLatestUsageTimestamp(const QString &latest_usage_timestamp);
    bool is_latest_usage_timestamp_Set() const;
    bool is_latest_usage_timestamp_Valid() const;

    QString getCurrentAverageHourlyOnDemandSpend() const;
    void setCurrentAverageHourlyOnDemandSpend(const QString &current_average_hourly_on_demand_spend);
    bool is_current_average_hourly_on_demand_spend_Set() const;
    bool is_current_average_hourly_on_demand_spend_Valid() const;

    QString getCurrentMaximumHourlyOnDemandSpend() const;
    void setCurrentMaximumHourlyOnDemandSpend(const QString &current_maximum_hourly_on_demand_spend);
    bool is_current_maximum_hourly_on_demand_spend_Set() const;
    bool is_current_maximum_hourly_on_demand_spend_Valid() const;

    QString getCurrentMinimumHourlyOnDemandSpend() const;
    void setCurrentMinimumHourlyOnDemandSpend(const QString &current_minimum_hourly_on_demand_spend);
    bool is_current_minimum_hourly_on_demand_spend_Set() const;
    bool is_current_minimum_hourly_on_demand_spend_Valid() const;

    QString getEstimatedAverageUtilization() const;
    void setEstimatedAverageUtilization(const QString &estimated_average_utilization);
    bool is_estimated_average_utilization_Set() const;
    bool is_estimated_average_utilization_Valid() const;

    QString getEstimatedMonthlySavingsAmount() const;
    void setEstimatedMonthlySavingsAmount(const QString &estimated_monthly_savings_amount);
    bool is_estimated_monthly_savings_amount_Set() const;
    bool is_estimated_monthly_savings_amount_Valid() const;

    QString getEstimatedOnDemandCost() const;
    void setEstimatedOnDemandCost(const QString &estimated_on_demand_cost);
    bool is_estimated_on_demand_cost_Set() const;
    bool is_estimated_on_demand_cost_Valid() const;

    QString getEstimatedOnDemandCostWithCurrentCommitment() const;
    void setEstimatedOnDemandCostWithCurrentCommitment(const QString &estimated_on_demand_cost_with_current_commitment);
    bool is_estimated_on_demand_cost_with_current_commitment_Set() const;
    bool is_estimated_on_demand_cost_with_current_commitment_Valid() const;

    QString getEstimatedRoi() const;
    void setEstimatedRoi(const QString &estimated_roi);
    bool is_estimated_roi_Set() const;
    bool is_estimated_roi_Valid() const;

    QString getEstimatedSpCost() const;
    void setEstimatedSpCost(const QString &estimated_sp_cost);
    bool is_estimated_sp_cost_Set() const;
    bool is_estimated_sp_cost_Valid() const;

    QString getEstimatedSavingsAmount() const;
    void setEstimatedSavingsAmount(const QString &estimated_savings_amount);
    bool is_estimated_savings_amount_Set() const;
    bool is_estimated_savings_amount_Valid() const;

    QString getEstimatedSavingsPercentage() const;
    void setEstimatedSavingsPercentage(const QString &estimated_savings_percentage);
    bool is_estimated_savings_percentage_Set() const;
    bool is_estimated_savings_percentage_Valid() const;

    QString getExistingHourlyCommitment() const;
    void setExistingHourlyCommitment(const QString &existing_hourly_commitment);
    bool is_existing_hourly_commitment_Set() const;
    bool is_existing_hourly_commitment_Valid() const;

    QString getHourlyCommitmentToPurchase() const;
    void setHourlyCommitmentToPurchase(const QString &hourly_commitment_to_purchase);
    bool is_hourly_commitment_to_purchase_Set() const;
    bool is_hourly_commitment_to_purchase_Valid() const;

    QString getUpfrontCost() const;
    void setUpfrontCost(const QString &upfront_cost);
    bool is_upfront_cost_Set() const;
    bool is_upfront_cost_Valid() const;

    QString getCurrentAverageCoverage() const;
    void setCurrentAverageCoverage(const QString &current_average_coverage);
    bool is_current_average_coverage_Set() const;
    bool is_current_average_coverage_Valid() const;

    QString getEstimatedAverageCoverage() const;
    void setEstimatedAverageCoverage(const QString &estimated_average_coverage);
    bool is_estimated_average_coverage_Set() const;
    bool is_estimated_average_coverage_Valid() const;

    QList getMetricsOverLookbackPeriod() const;
    void setMetricsOverLookbackPeriod(const QList &metrics_over_lookback_period);
    bool is_metrics_over_lookback_period_Set() const;
    bool is_metrics_over_lookback_period_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccountScope m_account_scope;
    bool m_account_scope_isSet;
    bool m_account_scope_isValid;

    OAILookbackPeriodInDays m_lookback_period_in_days;
    bool m_lookback_period_in_days_isSet;
    bool m_lookback_period_in_days_isValid;

    OAISupportedSavingsPlansType m_savings_plans_type;
    bool m_savings_plans_type_isSet;
    bool m_savings_plans_type_isValid;

    OAITermInYears m_term_in_years;
    bool m_term_in_years_isSet;
    bool m_term_in_years_isValid;

    OAIPaymentOption m_payment_option;
    bool m_payment_option_isSet;
    bool m_payment_option_isValid;

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_instance_family;
    bool m_instance_family_isSet;
    bool m_instance_family_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_offering_id;
    bool m_offering_id_isSet;
    bool m_offering_id_isValid;

    QString m_generation_timestamp;
    bool m_generation_timestamp_isSet;
    bool m_generation_timestamp_isValid;

    QString m_latest_usage_timestamp;
    bool m_latest_usage_timestamp_isSet;
    bool m_latest_usage_timestamp_isValid;

    QString m_current_average_hourly_on_demand_spend;
    bool m_current_average_hourly_on_demand_spend_isSet;
    bool m_current_average_hourly_on_demand_spend_isValid;

    QString m_current_maximum_hourly_on_demand_spend;
    bool m_current_maximum_hourly_on_demand_spend_isSet;
    bool m_current_maximum_hourly_on_demand_spend_isValid;

    QString m_current_minimum_hourly_on_demand_spend;
    bool m_current_minimum_hourly_on_demand_spend_isSet;
    bool m_current_minimum_hourly_on_demand_spend_isValid;

    QString m_estimated_average_utilization;
    bool m_estimated_average_utilization_isSet;
    bool m_estimated_average_utilization_isValid;

    QString m_estimated_monthly_savings_amount;
    bool m_estimated_monthly_savings_amount_isSet;
    bool m_estimated_monthly_savings_amount_isValid;

    QString m_estimated_on_demand_cost;
    bool m_estimated_on_demand_cost_isSet;
    bool m_estimated_on_demand_cost_isValid;

    QString m_estimated_on_demand_cost_with_current_commitment;
    bool m_estimated_on_demand_cost_with_current_commitment_isSet;
    bool m_estimated_on_demand_cost_with_current_commitment_isValid;

    QString m_estimated_roi;
    bool m_estimated_roi_isSet;
    bool m_estimated_roi_isValid;

    QString m_estimated_sp_cost;
    bool m_estimated_sp_cost_isSet;
    bool m_estimated_sp_cost_isValid;

    QString m_estimated_savings_amount;
    bool m_estimated_savings_amount_isSet;
    bool m_estimated_savings_amount_isValid;

    QString m_estimated_savings_percentage;
    bool m_estimated_savings_percentage_isSet;
    bool m_estimated_savings_percentage_isValid;

    QString m_existing_hourly_commitment;
    bool m_existing_hourly_commitment_isSet;
    bool m_existing_hourly_commitment_isValid;

    QString m_hourly_commitment_to_purchase;
    bool m_hourly_commitment_to_purchase_isSet;
    bool m_hourly_commitment_to_purchase_isValid;

    QString m_upfront_cost;
    bool m_upfront_cost_isSet;
    bool m_upfront_cost_isValid;

    QString m_current_average_coverage;
    bool m_current_average_coverage_isSet;
    bool m_current_average_coverage_isValid;

    QString m_estimated_average_coverage;
    bool m_estimated_average_coverage_isSet;
    bool m_estimated_average_coverage_isValid;

    QList m_metrics_over_lookback_period;
    bool m_metrics_over_lookback_period_isSet;
    bool m_metrics_over_lookback_period_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecommendationDetailData)

#endif // OAIRecommendationDetailData_H
