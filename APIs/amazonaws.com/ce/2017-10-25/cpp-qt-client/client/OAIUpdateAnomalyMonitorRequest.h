/**
 * AWS Cost Explorer Service
 * <p>You can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about the costs that are associated with the Cost Explorer API, see <a href=\"http://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateAnomalyMonitorRequest.h
 *
 * 
 */

#ifndef OAIUpdateAnomalyMonitorRequest_H
#define OAIUpdateAnomalyMonitorRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateAnomalyMonitorRequest : public OAIObject {
public:
    OAIUpdateAnomalyMonitorRequest();
    OAIUpdateAnomalyMonitorRequest(QString json);
    ~OAIUpdateAnomalyMonitorRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMonitorArn() const;
    void setMonitorArn(const QString &monitor_arn);
    bool is_monitor_arn_Set() const;
    bool is_monitor_arn_Valid() const;

    QString getMonitorName() const;
    void setMonitorName(const QString &monitor_name);
    bool is_monitor_name_Set() const;
    bool is_monitor_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_monitor_arn;
    bool m_monitor_arn_isSet;
    bool m_monitor_arn_isValid;

    QString m_monitor_name;
    bool m_monitor_name_isSet;
    bool m_monitor_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateAnomalyMonitorRequest)

#endif // OAIUpdateAnomalyMonitorRequest_H
