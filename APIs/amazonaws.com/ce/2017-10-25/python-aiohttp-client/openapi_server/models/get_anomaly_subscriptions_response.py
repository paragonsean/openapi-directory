# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetAnomalySubscriptionsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, anomaly_subscriptions: List=None, next_page_token: str=None):
        """GetAnomalySubscriptionsResponse - a model defined in OpenAPI

        :param anomaly_subscriptions: The anomaly_subscriptions of this GetAnomalySubscriptionsResponse.
        :param next_page_token: The next_page_token of this GetAnomalySubscriptionsResponse.
        """
        self.openapi_types = {
            'anomaly_subscriptions': List,
            'next_page_token': str
        }

        self.attribute_map = {
            'anomaly_subscriptions': 'AnomalySubscriptions',
            'next_page_token': 'NextPageToken'
        }

        self._anomaly_subscriptions = anomaly_subscriptions
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAnomalySubscriptionsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAnomalySubscriptionsResponse of this GetAnomalySubscriptionsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def anomaly_subscriptions(self):
        """Gets the anomaly_subscriptions of this GetAnomalySubscriptionsResponse.


        :return: The anomaly_subscriptions of this GetAnomalySubscriptionsResponse.
        :rtype: List
        """
        return self._anomaly_subscriptions

    @anomaly_subscriptions.setter
    def anomaly_subscriptions(self, anomaly_subscriptions):
        """Sets the anomaly_subscriptions of this GetAnomalySubscriptionsResponse.


        :param anomaly_subscriptions: The anomaly_subscriptions of this GetAnomalySubscriptionsResponse.
        :type anomaly_subscriptions: List
        """
        if anomaly_subscriptions is None:
            raise ValueError("Invalid value for `anomaly_subscriptions`, must not be `None`")

        self._anomaly_subscriptions = anomaly_subscriptions

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GetAnomalySubscriptionsResponse.


        :return: The next_page_token of this GetAnomalySubscriptionsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GetAnomalySubscriptionsResponse.


        :param next_page_token: The next_page_token of this GetAnomalySubscriptionsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
