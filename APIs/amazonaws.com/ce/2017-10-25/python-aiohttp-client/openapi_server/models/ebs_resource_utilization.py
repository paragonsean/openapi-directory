# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EBSResourceUtilization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ebs_read_ops_per_second: str=None, ebs_write_ops_per_second: str=None, ebs_read_bytes_per_second: str=None, ebs_write_bytes_per_second: str=None):
        """EBSResourceUtilization - a model defined in OpenAPI

        :param ebs_read_ops_per_second: The ebs_read_ops_per_second of this EBSResourceUtilization.
        :param ebs_write_ops_per_second: The ebs_write_ops_per_second of this EBSResourceUtilization.
        :param ebs_read_bytes_per_second: The ebs_read_bytes_per_second of this EBSResourceUtilization.
        :param ebs_write_bytes_per_second: The ebs_write_bytes_per_second of this EBSResourceUtilization.
        """
        self.openapi_types = {
            'ebs_read_ops_per_second': str,
            'ebs_write_ops_per_second': str,
            'ebs_read_bytes_per_second': str,
            'ebs_write_bytes_per_second': str
        }

        self.attribute_map = {
            'ebs_read_ops_per_second': 'EbsReadOpsPerSecond',
            'ebs_write_ops_per_second': 'EbsWriteOpsPerSecond',
            'ebs_read_bytes_per_second': 'EbsReadBytesPerSecond',
            'ebs_write_bytes_per_second': 'EbsWriteBytesPerSecond'
        }

        self._ebs_read_ops_per_second = ebs_read_ops_per_second
        self._ebs_write_ops_per_second = ebs_write_ops_per_second
        self._ebs_read_bytes_per_second = ebs_read_bytes_per_second
        self._ebs_write_bytes_per_second = ebs_write_bytes_per_second

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EBSResourceUtilization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EBSResourceUtilization of this EBSResourceUtilization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ebs_read_ops_per_second(self):
        """Gets the ebs_read_ops_per_second of this EBSResourceUtilization.


        :return: The ebs_read_ops_per_second of this EBSResourceUtilization.
        :rtype: str
        """
        return self._ebs_read_ops_per_second

    @ebs_read_ops_per_second.setter
    def ebs_read_ops_per_second(self, ebs_read_ops_per_second):
        """Sets the ebs_read_ops_per_second of this EBSResourceUtilization.


        :param ebs_read_ops_per_second: The ebs_read_ops_per_second of this EBSResourceUtilization.
        :type ebs_read_ops_per_second: str
        """

        self._ebs_read_ops_per_second = ebs_read_ops_per_second

    @property
    def ebs_write_ops_per_second(self):
        """Gets the ebs_write_ops_per_second of this EBSResourceUtilization.


        :return: The ebs_write_ops_per_second of this EBSResourceUtilization.
        :rtype: str
        """
        return self._ebs_write_ops_per_second

    @ebs_write_ops_per_second.setter
    def ebs_write_ops_per_second(self, ebs_write_ops_per_second):
        """Sets the ebs_write_ops_per_second of this EBSResourceUtilization.


        :param ebs_write_ops_per_second: The ebs_write_ops_per_second of this EBSResourceUtilization.
        :type ebs_write_ops_per_second: str
        """

        self._ebs_write_ops_per_second = ebs_write_ops_per_second

    @property
    def ebs_read_bytes_per_second(self):
        """Gets the ebs_read_bytes_per_second of this EBSResourceUtilization.


        :return: The ebs_read_bytes_per_second of this EBSResourceUtilization.
        :rtype: str
        """
        return self._ebs_read_bytes_per_second

    @ebs_read_bytes_per_second.setter
    def ebs_read_bytes_per_second(self, ebs_read_bytes_per_second):
        """Sets the ebs_read_bytes_per_second of this EBSResourceUtilization.


        :param ebs_read_bytes_per_second: The ebs_read_bytes_per_second of this EBSResourceUtilization.
        :type ebs_read_bytes_per_second: str
        """

        self._ebs_read_bytes_per_second = ebs_read_bytes_per_second

    @property
    def ebs_write_bytes_per_second(self):
        """Gets the ebs_write_bytes_per_second of this EBSResourceUtilization.


        :return: The ebs_write_bytes_per_second of this EBSResourceUtilization.
        :rtype: str
        """
        return self._ebs_write_bytes_per_second

    @ebs_write_bytes_per_second.setter
    def ebs_write_bytes_per_second(self, ebs_write_bytes_per_second):
        """Sets the ebs_write_bytes_per_second of this EBSResourceUtilization.


        :param ebs_write_bytes_per_second: The ebs_write_bytes_per_second of this EBSResourceUtilization.
        :type ebs_write_bytes_per_second: str
        """

        self._ebs_write_bytes_per_second = ebs_write_bytes_per_second
