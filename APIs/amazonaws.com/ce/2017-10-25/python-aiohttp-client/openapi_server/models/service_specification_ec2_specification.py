# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.offering_class import OfferingClass
from openapi_server import util


class ServiceSpecificationEC2Specification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offering_class: OfferingClass=None):
        """ServiceSpecificationEC2Specification - a model defined in OpenAPI

        :param offering_class: The offering_class of this ServiceSpecificationEC2Specification.
        """
        self.openapi_types = {
            'offering_class': OfferingClass
        }

        self.attribute_map = {
            'offering_class': 'OfferingClass'
        }

        self._offering_class = offering_class

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceSpecificationEC2Specification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceSpecification_EC2Specification of this ServiceSpecificationEC2Specification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offering_class(self):
        """Gets the offering_class of this ServiceSpecificationEC2Specification.


        :return: The offering_class of this ServiceSpecificationEC2Specification.
        :rtype: OfferingClass
        """
        return self._offering_class

    @offering_class.setter
    def offering_class(self, offering_class):
        """Sets the offering_class of this ServiceSpecificationEC2Specification.


        :param offering_class: The offering_class of this ServiceSpecificationEC2Specification.
        :type offering_class: OfferingClass
        """

        self._offering_class = offering_class
