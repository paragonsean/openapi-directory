# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Group(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keys: List=None, metrics: Dict=None):
        """Group - a model defined in OpenAPI

        :param keys: The keys of this Group.
        :param metrics: The metrics of this Group.
        """
        self.openapi_types = {
            'keys': List,
            'metrics': Dict
        }

        self.attribute_map = {
            'keys': 'Keys',
            'metrics': 'Metrics'
        }

        self._keys = keys
        self._metrics = metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Group':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Group of this Group.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keys(self):
        """Gets the keys of this Group.


        :return: The keys of this Group.
        :rtype: List
        """
        return self._keys

    @keys.setter
    def keys(self, keys):
        """Sets the keys of this Group.


        :param keys: The keys of this Group.
        :type keys: List
        """

        self._keys = keys

    @property
    def metrics(self):
        """Gets the metrics of this Group.


        :return: The metrics of this Group.
        :rtype: Dict
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this Group.


        :param metrics: The metrics of this Group.
        :type metrics: Dict
        """

        self._metrics = metrics
