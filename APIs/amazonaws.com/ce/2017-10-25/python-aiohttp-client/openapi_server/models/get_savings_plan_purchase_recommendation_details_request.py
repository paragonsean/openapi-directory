# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetSavingsPlanPurchaseRecommendationDetailsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recommendation_detail_id: str=None):
        """GetSavingsPlanPurchaseRecommendationDetailsRequest - a model defined in OpenAPI

        :param recommendation_detail_id: The recommendation_detail_id of this GetSavingsPlanPurchaseRecommendationDetailsRequest.
        """
        self.openapi_types = {
            'recommendation_detail_id': str
        }

        self.attribute_map = {
            'recommendation_detail_id': 'RecommendationDetailId'
        }

        self._recommendation_detail_id = recommendation_detail_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSavingsPlanPurchaseRecommendationDetailsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSavingsPlanPurchaseRecommendationDetailsRequest of this GetSavingsPlanPurchaseRecommendationDetailsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recommendation_detail_id(self):
        """Gets the recommendation_detail_id of this GetSavingsPlanPurchaseRecommendationDetailsRequest.


        :return: The recommendation_detail_id of this GetSavingsPlanPurchaseRecommendationDetailsRequest.
        :rtype: str
        """
        return self._recommendation_detail_id

    @recommendation_detail_id.setter
    def recommendation_detail_id(self, recommendation_detail_id):
        """Sets the recommendation_detail_id of this GetSavingsPlanPurchaseRecommendationDetailsRequest.


        :param recommendation_detail_id: The recommendation_detail_id of this GetSavingsPlanPurchaseRecommendationDetailsRequest.
        :type recommendation_detail_id: str
        """
        if recommendation_detail_id is None:
            raise ValueError("Invalid value for `recommendation_detail_id`, must not be `None`")

        self._recommendation_detail_id = recommendation_detail_id
