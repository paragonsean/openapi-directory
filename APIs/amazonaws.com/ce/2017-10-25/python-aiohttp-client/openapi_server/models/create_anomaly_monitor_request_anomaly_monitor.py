# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.expression import Expression
from openapi_server.models.monitor_dimension import MonitorDimension
from openapi_server.models.monitor_type import MonitorType
from openapi_server import util


class CreateAnomalyMonitorRequestAnomalyMonitor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, monitor_arn: str=None, monitor_name: str=None, creation_date: str=None, last_updated_date: str=None, last_evaluated_date: str=None, monitor_type: MonitorType=None, monitor_dimension: MonitorDimension=None, monitor_specification: Expression=None, dimensional_value_count: int=None):
        """CreateAnomalyMonitorRequestAnomalyMonitor - a model defined in OpenAPI

        :param monitor_arn: The monitor_arn of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :param monitor_name: The monitor_name of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :param creation_date: The creation_date of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :param last_updated_date: The last_updated_date of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :param last_evaluated_date: The last_evaluated_date of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :param monitor_type: The monitor_type of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :param monitor_dimension: The monitor_dimension of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :param monitor_specification: The monitor_specification of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :param dimensional_value_count: The dimensional_value_count of this CreateAnomalyMonitorRequestAnomalyMonitor.
        """
        self.openapi_types = {
            'monitor_arn': str,
            'monitor_name': str,
            'creation_date': str,
            'last_updated_date': str,
            'last_evaluated_date': str,
            'monitor_type': MonitorType,
            'monitor_dimension': MonitorDimension,
            'monitor_specification': Expression,
            'dimensional_value_count': int
        }

        self.attribute_map = {
            'monitor_arn': 'MonitorArn',
            'monitor_name': 'MonitorName',
            'creation_date': 'CreationDate',
            'last_updated_date': 'LastUpdatedDate',
            'last_evaluated_date': 'LastEvaluatedDate',
            'monitor_type': 'MonitorType',
            'monitor_dimension': 'MonitorDimension',
            'monitor_specification': 'MonitorSpecification',
            'dimensional_value_count': 'DimensionalValueCount'
        }

        self._monitor_arn = monitor_arn
        self._monitor_name = monitor_name
        self._creation_date = creation_date
        self._last_updated_date = last_updated_date
        self._last_evaluated_date = last_evaluated_date
        self._monitor_type = monitor_type
        self._monitor_dimension = monitor_dimension
        self._monitor_specification = monitor_specification
        self._dimensional_value_count = dimensional_value_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAnomalyMonitorRequestAnomalyMonitor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAnomalyMonitorRequest_AnomalyMonitor of this CreateAnomalyMonitorRequestAnomalyMonitor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitor_arn(self):
        """Gets the monitor_arn of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :return: The monitor_arn of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :rtype: str
        """
        return self._monitor_arn

    @monitor_arn.setter
    def monitor_arn(self, monitor_arn):
        """Sets the monitor_arn of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :param monitor_arn: The monitor_arn of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :type monitor_arn: str
        """

        self._monitor_arn = monitor_arn

    @property
    def monitor_name(self):
        """Gets the monitor_name of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :return: The monitor_name of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :rtype: str
        """
        return self._monitor_name

    @monitor_name.setter
    def monitor_name(self, monitor_name):
        """Sets the monitor_name of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :param monitor_name: The monitor_name of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :type monitor_name: str
        """
        if monitor_name is None:
            raise ValueError("Invalid value for `monitor_name`, must not be `None`")

        self._monitor_name = monitor_name

    @property
    def creation_date(self):
        """Gets the creation_date of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :return: The creation_date of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :param creation_date: The creation_date of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def last_updated_date(self):
        """Gets the last_updated_date of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :return: The last_updated_date of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :rtype: str
        """
        return self._last_updated_date

    @last_updated_date.setter
    def last_updated_date(self, last_updated_date):
        """Sets the last_updated_date of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :param last_updated_date: The last_updated_date of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :type last_updated_date: str
        """

        self._last_updated_date = last_updated_date

    @property
    def last_evaluated_date(self):
        """Gets the last_evaluated_date of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :return: The last_evaluated_date of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :rtype: str
        """
        return self._last_evaluated_date

    @last_evaluated_date.setter
    def last_evaluated_date(self, last_evaluated_date):
        """Sets the last_evaluated_date of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :param last_evaluated_date: The last_evaluated_date of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :type last_evaluated_date: str
        """

        self._last_evaluated_date = last_evaluated_date

    @property
    def monitor_type(self):
        """Gets the monitor_type of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :return: The monitor_type of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :rtype: MonitorType
        """
        return self._monitor_type

    @monitor_type.setter
    def monitor_type(self, monitor_type):
        """Sets the monitor_type of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :param monitor_type: The monitor_type of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :type monitor_type: MonitorType
        """
        if monitor_type is None:
            raise ValueError("Invalid value for `monitor_type`, must not be `None`")

        self._monitor_type = monitor_type

    @property
    def monitor_dimension(self):
        """Gets the monitor_dimension of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :return: The monitor_dimension of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :rtype: MonitorDimension
        """
        return self._monitor_dimension

    @monitor_dimension.setter
    def monitor_dimension(self, monitor_dimension):
        """Sets the monitor_dimension of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :param monitor_dimension: The monitor_dimension of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :type monitor_dimension: MonitorDimension
        """

        self._monitor_dimension = monitor_dimension

    @property
    def monitor_specification(self):
        """Gets the monitor_specification of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :return: The monitor_specification of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :rtype: Expression
        """
        return self._monitor_specification

    @monitor_specification.setter
    def monitor_specification(self, monitor_specification):
        """Sets the monitor_specification of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :param monitor_specification: The monitor_specification of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :type monitor_specification: Expression
        """

        self._monitor_specification = monitor_specification

    @property
    def dimensional_value_count(self):
        """Gets the dimensional_value_count of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :return: The dimensional_value_count of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :rtype: int
        """
        return self._dimensional_value_count

    @dimensional_value_count.setter
    def dimensional_value_count(self, dimensional_value_count):
        """Sets the dimensional_value_count of this CreateAnomalyMonitorRequestAnomalyMonitor.


        :param dimensional_value_count: The dimensional_value_count of this CreateAnomalyMonitorRequestAnomalyMonitor.
        :type dimensional_value_count: int
        """

        self._dimensional_value_count = dimensional_value_count
