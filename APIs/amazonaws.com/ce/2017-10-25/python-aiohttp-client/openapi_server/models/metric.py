# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Metric(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    BLENDED_COST = 'BLENDED_COST'
    UNBLENDED_COST = 'UNBLENDED_COST'
    AMORTIZED_COST = 'AMORTIZED_COST'
    NET_UNBLENDED_COST = 'NET_UNBLENDED_COST'
    NET_AMORTIZED_COST = 'NET_AMORTIZED_COST'
    USAGE_QUANTITY = 'USAGE_QUANTITY'
    NORMALIZED_USAGE_AMOUNT = 'NORMALIZED_USAGE_AMOUNT'

    def __init__(self):
        """Metric - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Metric':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Metric of this Metric.
        """
        return util.deserialize_model(dikt, cls)
