# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CoverageHours(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, on_demand_hours: str=None, reserved_hours: str=None, total_running_hours: str=None, coverage_hours_percentage: str=None):
        """CoverageHours - a model defined in OpenAPI

        :param on_demand_hours: The on_demand_hours of this CoverageHours.
        :param reserved_hours: The reserved_hours of this CoverageHours.
        :param total_running_hours: The total_running_hours of this CoverageHours.
        :param coverage_hours_percentage: The coverage_hours_percentage of this CoverageHours.
        """
        self.openapi_types = {
            'on_demand_hours': str,
            'reserved_hours': str,
            'total_running_hours': str,
            'coverage_hours_percentage': str
        }

        self.attribute_map = {
            'on_demand_hours': 'OnDemandHours',
            'reserved_hours': 'ReservedHours',
            'total_running_hours': 'TotalRunningHours',
            'coverage_hours_percentage': 'CoverageHoursPercentage'
        }

        self._on_demand_hours = on_demand_hours
        self._reserved_hours = reserved_hours
        self._total_running_hours = total_running_hours
        self._coverage_hours_percentage = coverage_hours_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CoverageHours':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CoverageHours of this CoverageHours.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def on_demand_hours(self):
        """Gets the on_demand_hours of this CoverageHours.


        :return: The on_demand_hours of this CoverageHours.
        :rtype: str
        """
        return self._on_demand_hours

    @on_demand_hours.setter
    def on_demand_hours(self, on_demand_hours):
        """Sets the on_demand_hours of this CoverageHours.


        :param on_demand_hours: The on_demand_hours of this CoverageHours.
        :type on_demand_hours: str
        """

        self._on_demand_hours = on_demand_hours

    @property
    def reserved_hours(self):
        """Gets the reserved_hours of this CoverageHours.


        :return: The reserved_hours of this CoverageHours.
        :rtype: str
        """
        return self._reserved_hours

    @reserved_hours.setter
    def reserved_hours(self, reserved_hours):
        """Sets the reserved_hours of this CoverageHours.


        :param reserved_hours: The reserved_hours of this CoverageHours.
        :type reserved_hours: str
        """

        self._reserved_hours = reserved_hours

    @property
    def total_running_hours(self):
        """Gets the total_running_hours of this CoverageHours.


        :return: The total_running_hours of this CoverageHours.
        :rtype: str
        """
        return self._total_running_hours

    @total_running_hours.setter
    def total_running_hours(self, total_running_hours):
        """Sets the total_running_hours of this CoverageHours.


        :param total_running_hours: The total_running_hours of this CoverageHours.
        :type total_running_hours: str
        """

        self._total_running_hours = total_running_hours

    @property
    def coverage_hours_percentage(self):
        """Gets the coverage_hours_percentage of this CoverageHours.


        :return: The coverage_hours_percentage of this CoverageHours.
        :rtype: str
        """
        return self._coverage_hours_percentage

    @coverage_hours_percentage.setter
    def coverage_hours_percentage(self, coverage_hours_percentage):
        """Sets the coverage_hours_percentage of this CoverageHours.


        :param coverage_hours_percentage: The coverage_hours_percentage of this CoverageHours.
        :type coverage_hours_percentage: str
        """

        self._coverage_hours_percentage = coverage_hours_percentage
