# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.coverage_coverage_cost import CoverageCoverageCost
from openapi_server.models.coverage_coverage_hours import CoverageCoverageHours
from openapi_server.models.coverage_coverage_normalized_units import CoverageCoverageNormalizedUnits
from openapi_server import util


class GetReservationCoverageResponseTotal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, coverage_hours: CoverageCoverageHours=None, coverage_normalized_units: CoverageCoverageNormalizedUnits=None, coverage_cost: CoverageCoverageCost=None):
        """GetReservationCoverageResponseTotal - a model defined in OpenAPI

        :param coverage_hours: The coverage_hours of this GetReservationCoverageResponseTotal.
        :param coverage_normalized_units: The coverage_normalized_units of this GetReservationCoverageResponseTotal.
        :param coverage_cost: The coverage_cost of this GetReservationCoverageResponseTotal.
        """
        self.openapi_types = {
            'coverage_hours': CoverageCoverageHours,
            'coverage_normalized_units': CoverageCoverageNormalizedUnits,
            'coverage_cost': CoverageCoverageCost
        }

        self.attribute_map = {
            'coverage_hours': 'CoverageHours',
            'coverage_normalized_units': 'CoverageNormalizedUnits',
            'coverage_cost': 'CoverageCost'
        }

        self._coverage_hours = coverage_hours
        self._coverage_normalized_units = coverage_normalized_units
        self._coverage_cost = coverage_cost

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetReservationCoverageResponseTotal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetReservationCoverageResponse_Total of this GetReservationCoverageResponseTotal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def coverage_hours(self):
        """Gets the coverage_hours of this GetReservationCoverageResponseTotal.


        :return: The coverage_hours of this GetReservationCoverageResponseTotal.
        :rtype: CoverageCoverageHours
        """
        return self._coverage_hours

    @coverage_hours.setter
    def coverage_hours(self, coverage_hours):
        """Sets the coverage_hours of this GetReservationCoverageResponseTotal.


        :param coverage_hours: The coverage_hours of this GetReservationCoverageResponseTotal.
        :type coverage_hours: CoverageCoverageHours
        """

        self._coverage_hours = coverage_hours

    @property
    def coverage_normalized_units(self):
        """Gets the coverage_normalized_units of this GetReservationCoverageResponseTotal.


        :return: The coverage_normalized_units of this GetReservationCoverageResponseTotal.
        :rtype: CoverageCoverageNormalizedUnits
        """
        return self._coverage_normalized_units

    @coverage_normalized_units.setter
    def coverage_normalized_units(self, coverage_normalized_units):
        """Sets the coverage_normalized_units of this GetReservationCoverageResponseTotal.


        :param coverage_normalized_units: The coverage_normalized_units of this GetReservationCoverageResponseTotal.
        :type coverage_normalized_units: CoverageCoverageNormalizedUnits
        """

        self._coverage_normalized_units = coverage_normalized_units

    @property
    def coverage_cost(self):
        """Gets the coverage_cost of this GetReservationCoverageResponseTotal.


        :return: The coverage_cost of this GetReservationCoverageResponseTotal.
        :rtype: CoverageCoverageCost
        """
        return self._coverage_cost

    @coverage_cost.setter
    def coverage_cost(self, coverage_cost):
        """Sets the coverage_cost of this GetReservationCoverageResponseTotal.


        :param coverage_cost: The coverage_cost of this GetReservationCoverageResponseTotal.
        :type coverage_cost: CoverageCoverageCost
        """

        self._coverage_cost = coverage_cost
