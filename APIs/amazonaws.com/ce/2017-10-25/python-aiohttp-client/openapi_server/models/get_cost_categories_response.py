# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCostCategoriesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, cost_category_names: List=None, cost_category_values: List=None, return_size: int=None, total_size: int=None):
        """GetCostCategoriesResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this GetCostCategoriesResponse.
        :param cost_category_names: The cost_category_names of this GetCostCategoriesResponse.
        :param cost_category_values: The cost_category_values of this GetCostCategoriesResponse.
        :param return_size: The return_size of this GetCostCategoriesResponse.
        :param total_size: The total_size of this GetCostCategoriesResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'cost_category_names': List,
            'cost_category_values': List,
            'return_size': int,
            'total_size': int
        }

        self.attribute_map = {
            'next_page_token': 'NextPageToken',
            'cost_category_names': 'CostCategoryNames',
            'cost_category_values': 'CostCategoryValues',
            'return_size': 'ReturnSize',
            'total_size': 'TotalSize'
        }

        self._next_page_token = next_page_token
        self._cost_category_names = cost_category_names
        self._cost_category_values = cost_category_values
        self._return_size = return_size
        self._total_size = total_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCostCategoriesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCostCategoriesResponse of this GetCostCategoriesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GetCostCategoriesResponse.


        :return: The next_page_token of this GetCostCategoriesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GetCostCategoriesResponse.


        :param next_page_token: The next_page_token of this GetCostCategoriesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def cost_category_names(self):
        """Gets the cost_category_names of this GetCostCategoriesResponse.


        :return: The cost_category_names of this GetCostCategoriesResponse.
        :rtype: List
        """
        return self._cost_category_names

    @cost_category_names.setter
    def cost_category_names(self, cost_category_names):
        """Sets the cost_category_names of this GetCostCategoriesResponse.


        :param cost_category_names: The cost_category_names of this GetCostCategoriesResponse.
        :type cost_category_names: List
        """

        self._cost_category_names = cost_category_names

    @property
    def cost_category_values(self):
        """Gets the cost_category_values of this GetCostCategoriesResponse.


        :return: The cost_category_values of this GetCostCategoriesResponse.
        :rtype: List
        """
        return self._cost_category_values

    @cost_category_values.setter
    def cost_category_values(self, cost_category_values):
        """Sets the cost_category_values of this GetCostCategoriesResponse.


        :param cost_category_values: The cost_category_values of this GetCostCategoriesResponse.
        :type cost_category_values: List
        """

        self._cost_category_values = cost_category_values

    @property
    def return_size(self):
        """Gets the return_size of this GetCostCategoriesResponse.


        :return: The return_size of this GetCostCategoriesResponse.
        :rtype: int
        """
        return self._return_size

    @return_size.setter
    def return_size(self, return_size):
        """Sets the return_size of this GetCostCategoriesResponse.


        :param return_size: The return_size of this GetCostCategoriesResponse.
        :type return_size: int
        """
        if return_size is None:
            raise ValueError("Invalid value for `return_size`, must not be `None`")

        self._return_size = return_size

    @property
    def total_size(self):
        """Gets the total_size of this GetCostCategoriesResponse.


        :return: The total_size of this GetCostCategoriesResponse.
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size):
        """Sets the total_size of this GetCostCategoriesResponse.


        :param total_size: The total_size of this GetCostCategoriesResponse.
        :type total_size: int
        """
        if total_size is None:
            raise ValueError("Invalid value for `total_size`, must not be `None`")

        self._total_size = total_size
