# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MatchOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    EQUALS = 'EQUALS'
    ABSENT = 'ABSENT'
    STARTS_WITH = 'STARTS_WITH'
    ENDS_WITH = 'ENDS_WITH'
    CONTAINS = 'CONTAINS'
    CASE_SENSITIVE = 'CASE_SENSITIVE'
    CASE_INSENSITIVE = 'CASE_INSENSITIVE'
    GREATER_THAN_OR_EQUAL = 'GREATER_THAN_OR_EQUAL'

    def __init__(self):
        """MatchOption - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatchOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MatchOption of this MatchOption.
        """
        return util.deserialize_model(dikt, cls)
