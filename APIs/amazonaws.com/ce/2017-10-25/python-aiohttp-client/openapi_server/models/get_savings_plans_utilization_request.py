# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_savings_plans_coverage_request_time_period import GetSavingsPlansCoverageRequestTimePeriod
from openapi_server.models.get_savings_plans_utilization_request_filter import GetSavingsPlansUtilizationRequestFilter
from openapi_server.models.get_savings_plans_utilization_request_sort_by import GetSavingsPlansUtilizationRequestSortBy
from openapi_server.models.granularity import Granularity
from openapi_server import util


class GetSavingsPlansUtilizationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, time_period: GetSavingsPlansCoverageRequestTimePeriod=None, granularity: Granularity=None, filter: GetSavingsPlansUtilizationRequestFilter=None, sort_by: GetSavingsPlansUtilizationRequestSortBy=None):
        """GetSavingsPlansUtilizationRequest - a model defined in OpenAPI

        :param time_period: The time_period of this GetSavingsPlansUtilizationRequest.
        :param granularity: The granularity of this GetSavingsPlansUtilizationRequest.
        :param filter: The filter of this GetSavingsPlansUtilizationRequest.
        :param sort_by: The sort_by of this GetSavingsPlansUtilizationRequest.
        """
        self.openapi_types = {
            'time_period': GetSavingsPlansCoverageRequestTimePeriod,
            'granularity': Granularity,
            'filter': GetSavingsPlansUtilizationRequestFilter,
            'sort_by': GetSavingsPlansUtilizationRequestSortBy
        }

        self.attribute_map = {
            'time_period': 'TimePeriod',
            'granularity': 'Granularity',
            'filter': 'Filter',
            'sort_by': 'SortBy'
        }

        self._time_period = time_period
        self._granularity = granularity
        self._filter = filter
        self._sort_by = sort_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSavingsPlansUtilizationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSavingsPlansUtilizationRequest of this GetSavingsPlansUtilizationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_period(self):
        """Gets the time_period of this GetSavingsPlansUtilizationRequest.


        :return: The time_period of this GetSavingsPlansUtilizationRequest.
        :rtype: GetSavingsPlansCoverageRequestTimePeriod
        """
        return self._time_period

    @time_period.setter
    def time_period(self, time_period):
        """Sets the time_period of this GetSavingsPlansUtilizationRequest.


        :param time_period: The time_period of this GetSavingsPlansUtilizationRequest.
        :type time_period: GetSavingsPlansCoverageRequestTimePeriod
        """
        if time_period is None:
            raise ValueError("Invalid value for `time_period`, must not be `None`")

        self._time_period = time_period

    @property
    def granularity(self):
        """Gets the granularity of this GetSavingsPlansUtilizationRequest.


        :return: The granularity of this GetSavingsPlansUtilizationRequest.
        :rtype: Granularity
        """
        return self._granularity

    @granularity.setter
    def granularity(self, granularity):
        """Sets the granularity of this GetSavingsPlansUtilizationRequest.


        :param granularity: The granularity of this GetSavingsPlansUtilizationRequest.
        :type granularity: Granularity
        """

        self._granularity = granularity

    @property
    def filter(self):
        """Gets the filter of this GetSavingsPlansUtilizationRequest.


        :return: The filter of this GetSavingsPlansUtilizationRequest.
        :rtype: GetSavingsPlansUtilizationRequestFilter
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GetSavingsPlansUtilizationRequest.


        :param filter: The filter of this GetSavingsPlansUtilizationRequest.
        :type filter: GetSavingsPlansUtilizationRequestFilter
        """

        self._filter = filter

    @property
    def sort_by(self):
        """Gets the sort_by of this GetSavingsPlansUtilizationRequest.


        :return: The sort_by of this GetSavingsPlansUtilizationRequest.
        :rtype: GetSavingsPlansUtilizationRequestSortBy
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this GetSavingsPlansUtilizationRequest.


        :param sort_by: The sort_by of this GetSavingsPlansUtilizationRequest.
        :type sort_by: GetSavingsPlansUtilizationRequestSortBy
        """

        self._sort_by = sort_by
