# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FindingReasonCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CPU_OVER_PROVISIONED = 'CPU_OVER_PROVISIONED'
    CPU_UNDER_PROVISIONED = 'CPU_UNDER_PROVISIONED'
    MEMORY_OVER_PROVISIONED = 'MEMORY_OVER_PROVISIONED'
    MEMORY_UNDER_PROVISIONED = 'MEMORY_UNDER_PROVISIONED'
    EBS_THROUGHPUT_OVER_PROVISIONED = 'EBS_THROUGHPUT_OVER_PROVISIONED'
    EBS_THROUGHPUT_UNDER_PROVISIONED = 'EBS_THROUGHPUT_UNDER_PROVISIONED'
    EBS_IOPS_OVER_PROVISIONED = 'EBS_IOPS_OVER_PROVISIONED'
    EBS_IOPS_UNDER_PROVISIONED = 'EBS_IOPS_UNDER_PROVISIONED'
    NETWORK_BANDWIDTH_OVER_PROVISIONED = 'NETWORK_BANDWIDTH_OVER_PROVISIONED'
    NETWORK_BANDWIDTH_UNDER_PROVISIONED = 'NETWORK_BANDWIDTH_UNDER_PROVISIONED'
    NETWORK_PPS_OVER_PROVISIONED = 'NETWORK_PPS_OVER_PROVISIONED'
    NETWORK_PPS_UNDER_PROVISIONED = 'NETWORK_PPS_UNDER_PROVISIONED'
    DISK_IOPS_OVER_PROVISIONED = 'DISK_IOPS_OVER_PROVISIONED'
    DISK_IOPS_UNDER_PROVISIONED = 'DISK_IOPS_UNDER_PROVISIONED'
    DISK_THROUGHPUT_OVER_PROVISIONED = 'DISK_THROUGHPUT_OVER_PROVISIONED'
    DISK_THROUGHPUT_UNDER_PROVISIONED = 'DISK_THROUGHPUT_UNDER_PROVISIONED'

    def __init__(self):
        """FindingReasonCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindingReasonCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FindingReasonCode of this FindingReasonCode.
        """
        return util.deserialize_model(dikt, cls)
