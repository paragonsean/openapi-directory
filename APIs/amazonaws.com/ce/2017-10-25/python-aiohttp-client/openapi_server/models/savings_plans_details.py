# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SavingsPlansDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, region: str=None, instance_family: str=None, offering_id: str=None):
        """SavingsPlansDetails - a model defined in OpenAPI

        :param region: The region of this SavingsPlansDetails.
        :param instance_family: The instance_family of this SavingsPlansDetails.
        :param offering_id: The offering_id of this SavingsPlansDetails.
        """
        self.openapi_types = {
            'region': str,
            'instance_family': str,
            'offering_id': str
        }

        self.attribute_map = {
            'region': 'Region',
            'instance_family': 'InstanceFamily',
            'offering_id': 'OfferingId'
        }

        self._region = region
        self._instance_family = instance_family
        self._offering_id = offering_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SavingsPlansDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SavingsPlansDetails of this SavingsPlansDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def region(self):
        """Gets the region of this SavingsPlansDetails.


        :return: The region of this SavingsPlansDetails.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this SavingsPlansDetails.


        :param region: The region of this SavingsPlansDetails.
        :type region: str
        """

        self._region = region

    @property
    def instance_family(self):
        """Gets the instance_family of this SavingsPlansDetails.


        :return: The instance_family of this SavingsPlansDetails.
        :rtype: str
        """
        return self._instance_family

    @instance_family.setter
    def instance_family(self, instance_family):
        """Sets the instance_family of this SavingsPlansDetails.


        :param instance_family: The instance_family of this SavingsPlansDetails.
        :type instance_family: str
        """

        self._instance_family = instance_family

    @property
    def offering_id(self):
        """Gets the offering_id of this SavingsPlansDetails.


        :return: The offering_id of this SavingsPlansDetails.
        :rtype: str
        """
        return self._offering_id

    @offering_id.setter
    def offering_id(self, offering_id):
        """Sets the offering_id of this SavingsPlansDetails.


        :param offering_id: The offering_id of this SavingsPlansDetails.
        :type offering_id: str
        """

        self._offering_id = offering_id
