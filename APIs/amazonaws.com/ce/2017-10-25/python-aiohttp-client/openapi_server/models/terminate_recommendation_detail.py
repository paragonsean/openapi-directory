# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TerminateRecommendationDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, estimated_monthly_savings: str=None, currency_code: str=None):
        """TerminateRecommendationDetail - a model defined in OpenAPI

        :param estimated_monthly_savings: The estimated_monthly_savings of this TerminateRecommendationDetail.
        :param currency_code: The currency_code of this TerminateRecommendationDetail.
        """
        self.openapi_types = {
            'estimated_monthly_savings': str,
            'currency_code': str
        }

        self.attribute_map = {
            'estimated_monthly_savings': 'EstimatedMonthlySavings',
            'currency_code': 'CurrencyCode'
        }

        self._estimated_monthly_savings = estimated_monthly_savings
        self._currency_code = currency_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminateRecommendationDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminateRecommendationDetail of this TerminateRecommendationDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def estimated_monthly_savings(self):
        """Gets the estimated_monthly_savings of this TerminateRecommendationDetail.


        :return: The estimated_monthly_savings of this TerminateRecommendationDetail.
        :rtype: str
        """
        return self._estimated_monthly_savings

    @estimated_monthly_savings.setter
    def estimated_monthly_savings(self, estimated_monthly_savings):
        """Sets the estimated_monthly_savings of this TerminateRecommendationDetail.


        :param estimated_monthly_savings: The estimated_monthly_savings of this TerminateRecommendationDetail.
        :type estimated_monthly_savings: str
        """

        self._estimated_monthly_savings = estimated_monthly_savings

    @property
    def currency_code(self):
        """Gets the currency_code of this TerminateRecommendationDetail.


        :return: The currency_code of this TerminateRecommendationDetail.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this TerminateRecommendationDetail.


        :param currency_code: The currency_code of this TerminateRecommendationDetail.
        :type currency_code: str
        """

        self._currency_code = currency_code
