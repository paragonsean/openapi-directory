# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_specification_ec2_specification import ServiceSpecificationEC2Specification
from openapi_server import util


class ServiceSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ec2_specification: ServiceSpecificationEC2Specification=None):
        """ServiceSpecification - a model defined in OpenAPI

        :param ec2_specification: The ec2_specification of this ServiceSpecification.
        """
        self.openapi_types = {
            'ec2_specification': ServiceSpecificationEC2Specification
        }

        self.attribute_map = {
            'ec2_specification': 'EC2Specification'
        }

        self._ec2_specification = ec2_specification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceSpecification of this ServiceSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ec2_specification(self):
        """Gets the ec2_specification of this ServiceSpecification.


        :return: The ec2_specification of this ServiceSpecification.
        :rtype: ServiceSpecificationEC2Specification
        """
        return self._ec2_specification

    @ec2_specification.setter
    def ec2_specification(self, ec2_specification):
        """Sets the ec2_specification of this ServiceSpecification.


        :param ec2_specification: The ec2_specification of this ServiceSpecification.
        :type ec2_specification: ServiceSpecificationEC2Specification
        """

        self._ec2_specification = ec2_specification
