# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.forecast_result_time_period import ForecastResultTimePeriod
from openapi_server import util


class ForecastResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, time_period: ForecastResultTimePeriod=None, mean_value: str=None, prediction_interval_lower_bound: str=None, prediction_interval_upper_bound: str=None):
        """ForecastResult - a model defined in OpenAPI

        :param time_period: The time_period of this ForecastResult.
        :param mean_value: The mean_value of this ForecastResult.
        :param prediction_interval_lower_bound: The prediction_interval_lower_bound of this ForecastResult.
        :param prediction_interval_upper_bound: The prediction_interval_upper_bound of this ForecastResult.
        """
        self.openapi_types = {
            'time_period': ForecastResultTimePeriod,
            'mean_value': str,
            'prediction_interval_lower_bound': str,
            'prediction_interval_upper_bound': str
        }

        self.attribute_map = {
            'time_period': 'TimePeriod',
            'mean_value': 'MeanValue',
            'prediction_interval_lower_bound': 'PredictionIntervalLowerBound',
            'prediction_interval_upper_bound': 'PredictionIntervalUpperBound'
        }

        self._time_period = time_period
        self._mean_value = mean_value
        self._prediction_interval_lower_bound = prediction_interval_lower_bound
        self._prediction_interval_upper_bound = prediction_interval_upper_bound

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForecastResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ForecastResult of this ForecastResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_period(self):
        """Gets the time_period of this ForecastResult.


        :return: The time_period of this ForecastResult.
        :rtype: ForecastResultTimePeriod
        """
        return self._time_period

    @time_period.setter
    def time_period(self, time_period):
        """Sets the time_period of this ForecastResult.


        :param time_period: The time_period of this ForecastResult.
        :type time_period: ForecastResultTimePeriod
        """

        self._time_period = time_period

    @property
    def mean_value(self):
        """Gets the mean_value of this ForecastResult.


        :return: The mean_value of this ForecastResult.
        :rtype: str
        """
        return self._mean_value

    @mean_value.setter
    def mean_value(self, mean_value):
        """Sets the mean_value of this ForecastResult.


        :param mean_value: The mean_value of this ForecastResult.
        :type mean_value: str
        """

        self._mean_value = mean_value

    @property
    def prediction_interval_lower_bound(self):
        """Gets the prediction_interval_lower_bound of this ForecastResult.


        :return: The prediction_interval_lower_bound of this ForecastResult.
        :rtype: str
        """
        return self._prediction_interval_lower_bound

    @prediction_interval_lower_bound.setter
    def prediction_interval_lower_bound(self, prediction_interval_lower_bound):
        """Sets the prediction_interval_lower_bound of this ForecastResult.


        :param prediction_interval_lower_bound: The prediction_interval_lower_bound of this ForecastResult.
        :type prediction_interval_lower_bound: str
        """

        self._prediction_interval_lower_bound = prediction_interval_lower_bound

    @property
    def prediction_interval_upper_bound(self):
        """Gets the prediction_interval_upper_bound of this ForecastResult.


        :return: The prediction_interval_upper_bound of this ForecastResult.
        :rtype: str
        """
        return self._prediction_interval_upper_bound

    @prediction_interval_upper_bound.setter
    def prediction_interval_upper_bound(self, prediction_interval_upper_bound):
        """Sets the prediction_interval_upper_bound of this ForecastResult.


        :param prediction_interval_upper_bound: The prediction_interval_upper_bound of this ForecastResult.
        :type prediction_interval_upper_bound: str
        """

        self._prediction_interval_upper_bound = prediction_interval_upper_bound
