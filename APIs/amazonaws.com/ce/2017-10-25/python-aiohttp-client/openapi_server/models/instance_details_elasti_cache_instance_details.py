# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceDetailsElastiCacheInstanceDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, family: str=None, node_type: str=None, region: str=None, product_description: str=None, current_generation: bool=None, size_flex_eligible: bool=None):
        """InstanceDetailsElastiCacheInstanceDetails - a model defined in OpenAPI

        :param family: The family of this InstanceDetailsElastiCacheInstanceDetails.
        :param node_type: The node_type of this InstanceDetailsElastiCacheInstanceDetails.
        :param region: The region of this InstanceDetailsElastiCacheInstanceDetails.
        :param product_description: The product_description of this InstanceDetailsElastiCacheInstanceDetails.
        :param current_generation: The current_generation of this InstanceDetailsElastiCacheInstanceDetails.
        :param size_flex_eligible: The size_flex_eligible of this InstanceDetailsElastiCacheInstanceDetails.
        """
        self.openapi_types = {
            'family': str,
            'node_type': str,
            'region': str,
            'product_description': str,
            'current_generation': bool,
            'size_flex_eligible': bool
        }

        self.attribute_map = {
            'family': 'Family',
            'node_type': 'NodeType',
            'region': 'Region',
            'product_description': 'ProductDescription',
            'current_generation': 'CurrentGeneration',
            'size_flex_eligible': 'SizeFlexEligible'
        }

        self._family = family
        self._node_type = node_type
        self._region = region
        self._product_description = product_description
        self._current_generation = current_generation
        self._size_flex_eligible = size_flex_eligible

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceDetailsElastiCacheInstanceDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceDetails_ElastiCacheInstanceDetails of this InstanceDetailsElastiCacheInstanceDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def family(self):
        """Gets the family of this InstanceDetailsElastiCacheInstanceDetails.


        :return: The family of this InstanceDetailsElastiCacheInstanceDetails.
        :rtype: str
        """
        return self._family

    @family.setter
    def family(self, family):
        """Sets the family of this InstanceDetailsElastiCacheInstanceDetails.


        :param family: The family of this InstanceDetailsElastiCacheInstanceDetails.
        :type family: str
        """

        self._family = family

    @property
    def node_type(self):
        """Gets the node_type of this InstanceDetailsElastiCacheInstanceDetails.


        :return: The node_type of this InstanceDetailsElastiCacheInstanceDetails.
        :rtype: str
        """
        return self._node_type

    @node_type.setter
    def node_type(self, node_type):
        """Sets the node_type of this InstanceDetailsElastiCacheInstanceDetails.


        :param node_type: The node_type of this InstanceDetailsElastiCacheInstanceDetails.
        :type node_type: str
        """

        self._node_type = node_type

    @property
    def region(self):
        """Gets the region of this InstanceDetailsElastiCacheInstanceDetails.


        :return: The region of this InstanceDetailsElastiCacheInstanceDetails.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this InstanceDetailsElastiCacheInstanceDetails.


        :param region: The region of this InstanceDetailsElastiCacheInstanceDetails.
        :type region: str
        """

        self._region = region

    @property
    def product_description(self):
        """Gets the product_description of this InstanceDetailsElastiCacheInstanceDetails.


        :return: The product_description of this InstanceDetailsElastiCacheInstanceDetails.
        :rtype: str
        """
        return self._product_description

    @product_description.setter
    def product_description(self, product_description):
        """Sets the product_description of this InstanceDetailsElastiCacheInstanceDetails.


        :param product_description: The product_description of this InstanceDetailsElastiCacheInstanceDetails.
        :type product_description: str
        """

        self._product_description = product_description

    @property
    def current_generation(self):
        """Gets the current_generation of this InstanceDetailsElastiCacheInstanceDetails.


        :return: The current_generation of this InstanceDetailsElastiCacheInstanceDetails.
        :rtype: bool
        """
        return self._current_generation

    @current_generation.setter
    def current_generation(self, current_generation):
        """Sets the current_generation of this InstanceDetailsElastiCacheInstanceDetails.


        :param current_generation: The current_generation of this InstanceDetailsElastiCacheInstanceDetails.
        :type current_generation: bool
        """

        self._current_generation = current_generation

    @property
    def size_flex_eligible(self):
        """Gets the size_flex_eligible of this InstanceDetailsElastiCacheInstanceDetails.


        :return: The size_flex_eligible of this InstanceDetailsElastiCacheInstanceDetails.
        :rtype: bool
        """
        return self._size_flex_eligible

    @size_flex_eligible.setter
    def size_flex_eligible(self, size_flex_eligible):
        """Sets the size_flex_eligible of this InstanceDetailsElastiCacheInstanceDetails.


        :param size_flex_eligible: The size_flex_eligible of this InstanceDetailsElastiCacheInstanceDetails.
        :type size_flex_eligible: bool
        """

        self._size_flex_eligible = size_flex_eligible
