# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateCostCategoryDefinitionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_category_arn: str=None, effective_start: str=None):
        """CreateCostCategoryDefinitionResponse - a model defined in OpenAPI

        :param cost_category_arn: The cost_category_arn of this CreateCostCategoryDefinitionResponse.
        :param effective_start: The effective_start of this CreateCostCategoryDefinitionResponse.
        """
        self.openapi_types = {
            'cost_category_arn': str,
            'effective_start': str
        }

        self.attribute_map = {
            'cost_category_arn': 'CostCategoryArn',
            'effective_start': 'EffectiveStart'
        }

        self._cost_category_arn = cost_category_arn
        self._effective_start = effective_start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCostCategoryDefinitionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCostCategoryDefinitionResponse of this CreateCostCategoryDefinitionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_category_arn(self):
        """Gets the cost_category_arn of this CreateCostCategoryDefinitionResponse.


        :return: The cost_category_arn of this CreateCostCategoryDefinitionResponse.
        :rtype: str
        """
        return self._cost_category_arn

    @cost_category_arn.setter
    def cost_category_arn(self, cost_category_arn):
        """Sets the cost_category_arn of this CreateCostCategoryDefinitionResponse.


        :param cost_category_arn: The cost_category_arn of this CreateCostCategoryDefinitionResponse.
        :type cost_category_arn: str
        """

        self._cost_category_arn = cost_category_arn

    @property
    def effective_start(self):
        """Gets the effective_start of this CreateCostCategoryDefinitionResponse.


        :return: The effective_start of this CreateCostCategoryDefinitionResponse.
        :rtype: str
        """
        return self._effective_start

    @effective_start.setter
    def effective_start(self, effective_start):
        """Sets the effective_start of this CreateCostCategoryDefinitionResponse.


        :param effective_start: The effective_start of this CreateCostCategoryDefinitionResponse.
        :type effective_start: str
        """

        self._effective_start = effective_start
