# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SavingsPlansCoverageData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, spend_covered_by_savings_plans: str=None, on_demand_cost: str=None, total_cost: str=None, coverage_percentage: str=None):
        """SavingsPlansCoverageData - a model defined in OpenAPI

        :param spend_covered_by_savings_plans: The spend_covered_by_savings_plans of this SavingsPlansCoverageData.
        :param on_demand_cost: The on_demand_cost of this SavingsPlansCoverageData.
        :param total_cost: The total_cost of this SavingsPlansCoverageData.
        :param coverage_percentage: The coverage_percentage of this SavingsPlansCoverageData.
        """
        self.openapi_types = {
            'spend_covered_by_savings_plans': str,
            'on_demand_cost': str,
            'total_cost': str,
            'coverage_percentage': str
        }

        self.attribute_map = {
            'spend_covered_by_savings_plans': 'SpendCoveredBySavingsPlans',
            'on_demand_cost': 'OnDemandCost',
            'total_cost': 'TotalCost',
            'coverage_percentage': 'CoveragePercentage'
        }

        self._spend_covered_by_savings_plans = spend_covered_by_savings_plans
        self._on_demand_cost = on_demand_cost
        self._total_cost = total_cost
        self._coverage_percentage = coverage_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SavingsPlansCoverageData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SavingsPlansCoverageData of this SavingsPlansCoverageData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def spend_covered_by_savings_plans(self):
        """Gets the spend_covered_by_savings_plans of this SavingsPlansCoverageData.


        :return: The spend_covered_by_savings_plans of this SavingsPlansCoverageData.
        :rtype: str
        """
        return self._spend_covered_by_savings_plans

    @spend_covered_by_savings_plans.setter
    def spend_covered_by_savings_plans(self, spend_covered_by_savings_plans):
        """Sets the spend_covered_by_savings_plans of this SavingsPlansCoverageData.


        :param spend_covered_by_savings_plans: The spend_covered_by_savings_plans of this SavingsPlansCoverageData.
        :type spend_covered_by_savings_plans: str
        """

        self._spend_covered_by_savings_plans = spend_covered_by_savings_plans

    @property
    def on_demand_cost(self):
        """Gets the on_demand_cost of this SavingsPlansCoverageData.


        :return: The on_demand_cost of this SavingsPlansCoverageData.
        :rtype: str
        """
        return self._on_demand_cost

    @on_demand_cost.setter
    def on_demand_cost(self, on_demand_cost):
        """Sets the on_demand_cost of this SavingsPlansCoverageData.


        :param on_demand_cost: The on_demand_cost of this SavingsPlansCoverageData.
        :type on_demand_cost: str
        """

        self._on_demand_cost = on_demand_cost

    @property
    def total_cost(self):
        """Gets the total_cost of this SavingsPlansCoverageData.


        :return: The total_cost of this SavingsPlansCoverageData.
        :rtype: str
        """
        return self._total_cost

    @total_cost.setter
    def total_cost(self, total_cost):
        """Sets the total_cost of this SavingsPlansCoverageData.


        :param total_cost: The total_cost of this SavingsPlansCoverageData.
        :type total_cost: str
        """

        self._total_cost = total_cost

    @property
    def coverage_percentage(self):
        """Gets the coverage_percentage of this SavingsPlansCoverageData.


        :return: The coverage_percentage of this SavingsPlansCoverageData.
        :rtype: str
        """
        return self._coverage_percentage

    @coverage_percentage.setter
    def coverage_percentage(self, coverage_percentage):
        """Sets the coverage_percentage of this SavingsPlansCoverageData.


        :param coverage_percentage: The coverage_percentage of this SavingsPlansCoverageData.
        :type coverage_percentage: str
        """

        self._coverage_percentage = coverage_percentage
