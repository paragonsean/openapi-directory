# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CoverageCost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, on_demand_cost: str=None):
        """CoverageCost - a model defined in OpenAPI

        :param on_demand_cost: The on_demand_cost of this CoverageCost.
        """
        self.openapi_types = {
            'on_demand_cost': str
        }

        self.attribute_map = {
            'on_demand_cost': 'OnDemandCost'
        }

        self._on_demand_cost = on_demand_cost

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CoverageCost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CoverageCost of this CoverageCost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def on_demand_cost(self):
        """Gets the on_demand_cost of this CoverageCost.


        :return: The on_demand_cost of this CoverageCost.
        :rtype: str
        """
        return self._on_demand_cost

    @on_demand_cost.setter
    def on_demand_cost(self, on_demand_cost):
        """Sets the on_demand_cost of this CoverageCost.


        :param on_demand_cost: The on_demand_cost of this CoverageCost.
        :type on_demand_cost: str
        """

        self._on_demand_cost = on_demand_cost
