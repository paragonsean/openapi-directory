# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cost_category import CostCategory
from openapi_server import util


class DescribeCostCategoryDefinitionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_category: CostCategory=None):
        """DescribeCostCategoryDefinitionResponse - a model defined in OpenAPI

        :param cost_category: The cost_category of this DescribeCostCategoryDefinitionResponse.
        """
        self.openapi_types = {
            'cost_category': CostCategory
        }

        self.attribute_map = {
            'cost_category': 'CostCategory'
        }

        self._cost_category = cost_category

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeCostCategoryDefinitionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeCostCategoryDefinitionResponse of this DescribeCostCategoryDefinitionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_category(self):
        """Gets the cost_category of this DescribeCostCategoryDefinitionResponse.


        :return: The cost_category of this DescribeCostCategoryDefinitionResponse.
        :rtype: CostCategory
        """
        return self._cost_category

    @cost_category.setter
    def cost_category(self, cost_category):
        """Sets the cost_category of this DescribeCostCategoryDefinitionResponse.


        :param cost_category: The cost_category of this DescribeCostCategoryDefinitionResponse.
        :type cost_category: CostCategory
        """

        self._cost_category = cost_category
