# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReservationAggregates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, utilization_percentage: str=None, utilization_percentage_in_units: str=None, purchased_hours: str=None, purchased_units: str=None, total_actual_hours: str=None, total_actual_units: str=None, unused_hours: str=None, unused_units: str=None, on_demand_cost_of_ri_hours_used: str=None, net_ri_savings: str=None, total_potential_ri_savings: str=None, amortized_upfront_fee: str=None, amortized_recurring_fee: str=None, total_amortized_fee: str=None, ri_cost_for_unused_hours: str=None, realized_savings: str=None, unrealized_savings: str=None):
        """ReservationAggregates - a model defined in OpenAPI

        :param utilization_percentage: The utilization_percentage of this ReservationAggregates.
        :param utilization_percentage_in_units: The utilization_percentage_in_units of this ReservationAggregates.
        :param purchased_hours: The purchased_hours of this ReservationAggregates.
        :param purchased_units: The purchased_units of this ReservationAggregates.
        :param total_actual_hours: The total_actual_hours of this ReservationAggregates.
        :param total_actual_units: The total_actual_units of this ReservationAggregates.
        :param unused_hours: The unused_hours of this ReservationAggregates.
        :param unused_units: The unused_units of this ReservationAggregates.
        :param on_demand_cost_of_ri_hours_used: The on_demand_cost_of_ri_hours_used of this ReservationAggregates.
        :param net_ri_savings: The net_ri_savings of this ReservationAggregates.
        :param total_potential_ri_savings: The total_potential_ri_savings of this ReservationAggregates.
        :param amortized_upfront_fee: The amortized_upfront_fee of this ReservationAggregates.
        :param amortized_recurring_fee: The amortized_recurring_fee of this ReservationAggregates.
        :param total_amortized_fee: The total_amortized_fee of this ReservationAggregates.
        :param ri_cost_for_unused_hours: The ri_cost_for_unused_hours of this ReservationAggregates.
        :param realized_savings: The realized_savings of this ReservationAggregates.
        :param unrealized_savings: The unrealized_savings of this ReservationAggregates.
        """
        self.openapi_types = {
            'utilization_percentage': str,
            'utilization_percentage_in_units': str,
            'purchased_hours': str,
            'purchased_units': str,
            'total_actual_hours': str,
            'total_actual_units': str,
            'unused_hours': str,
            'unused_units': str,
            'on_demand_cost_of_ri_hours_used': str,
            'net_ri_savings': str,
            'total_potential_ri_savings': str,
            'amortized_upfront_fee': str,
            'amortized_recurring_fee': str,
            'total_amortized_fee': str,
            'ri_cost_for_unused_hours': str,
            'realized_savings': str,
            'unrealized_savings': str
        }

        self.attribute_map = {
            'utilization_percentage': 'UtilizationPercentage',
            'utilization_percentage_in_units': 'UtilizationPercentageInUnits',
            'purchased_hours': 'PurchasedHours',
            'purchased_units': 'PurchasedUnits',
            'total_actual_hours': 'TotalActualHours',
            'total_actual_units': 'TotalActualUnits',
            'unused_hours': 'UnusedHours',
            'unused_units': 'UnusedUnits',
            'on_demand_cost_of_ri_hours_used': 'OnDemandCostOfRIHoursUsed',
            'net_ri_savings': 'NetRISavings',
            'total_potential_ri_savings': 'TotalPotentialRISavings',
            'amortized_upfront_fee': 'AmortizedUpfrontFee',
            'amortized_recurring_fee': 'AmortizedRecurringFee',
            'total_amortized_fee': 'TotalAmortizedFee',
            'ri_cost_for_unused_hours': 'RICostForUnusedHours',
            'realized_savings': 'RealizedSavings',
            'unrealized_savings': 'UnrealizedSavings'
        }

        self._utilization_percentage = utilization_percentage
        self._utilization_percentage_in_units = utilization_percentage_in_units
        self._purchased_hours = purchased_hours
        self._purchased_units = purchased_units
        self._total_actual_hours = total_actual_hours
        self._total_actual_units = total_actual_units
        self._unused_hours = unused_hours
        self._unused_units = unused_units
        self._on_demand_cost_of_ri_hours_used = on_demand_cost_of_ri_hours_used
        self._net_ri_savings = net_ri_savings
        self._total_potential_ri_savings = total_potential_ri_savings
        self._amortized_upfront_fee = amortized_upfront_fee
        self._amortized_recurring_fee = amortized_recurring_fee
        self._total_amortized_fee = total_amortized_fee
        self._ri_cost_for_unused_hours = ri_cost_for_unused_hours
        self._realized_savings = realized_savings
        self._unrealized_savings = unrealized_savings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReservationAggregates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReservationAggregates of this ReservationAggregates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def utilization_percentage(self):
        """Gets the utilization_percentage of this ReservationAggregates.


        :return: The utilization_percentage of this ReservationAggregates.
        :rtype: str
        """
        return self._utilization_percentage

    @utilization_percentage.setter
    def utilization_percentage(self, utilization_percentage):
        """Sets the utilization_percentage of this ReservationAggregates.


        :param utilization_percentage: The utilization_percentage of this ReservationAggregates.
        :type utilization_percentage: str
        """

        self._utilization_percentage = utilization_percentage

    @property
    def utilization_percentage_in_units(self):
        """Gets the utilization_percentage_in_units of this ReservationAggregates.


        :return: The utilization_percentage_in_units of this ReservationAggregates.
        :rtype: str
        """
        return self._utilization_percentage_in_units

    @utilization_percentage_in_units.setter
    def utilization_percentage_in_units(self, utilization_percentage_in_units):
        """Sets the utilization_percentage_in_units of this ReservationAggregates.


        :param utilization_percentage_in_units: The utilization_percentage_in_units of this ReservationAggregates.
        :type utilization_percentage_in_units: str
        """

        self._utilization_percentage_in_units = utilization_percentage_in_units

    @property
    def purchased_hours(self):
        """Gets the purchased_hours of this ReservationAggregates.


        :return: The purchased_hours of this ReservationAggregates.
        :rtype: str
        """
        return self._purchased_hours

    @purchased_hours.setter
    def purchased_hours(self, purchased_hours):
        """Sets the purchased_hours of this ReservationAggregates.


        :param purchased_hours: The purchased_hours of this ReservationAggregates.
        :type purchased_hours: str
        """

        self._purchased_hours = purchased_hours

    @property
    def purchased_units(self):
        """Gets the purchased_units of this ReservationAggregates.


        :return: The purchased_units of this ReservationAggregates.
        :rtype: str
        """
        return self._purchased_units

    @purchased_units.setter
    def purchased_units(self, purchased_units):
        """Sets the purchased_units of this ReservationAggregates.


        :param purchased_units: The purchased_units of this ReservationAggregates.
        :type purchased_units: str
        """

        self._purchased_units = purchased_units

    @property
    def total_actual_hours(self):
        """Gets the total_actual_hours of this ReservationAggregates.


        :return: The total_actual_hours of this ReservationAggregates.
        :rtype: str
        """
        return self._total_actual_hours

    @total_actual_hours.setter
    def total_actual_hours(self, total_actual_hours):
        """Sets the total_actual_hours of this ReservationAggregates.


        :param total_actual_hours: The total_actual_hours of this ReservationAggregates.
        :type total_actual_hours: str
        """

        self._total_actual_hours = total_actual_hours

    @property
    def total_actual_units(self):
        """Gets the total_actual_units of this ReservationAggregates.


        :return: The total_actual_units of this ReservationAggregates.
        :rtype: str
        """
        return self._total_actual_units

    @total_actual_units.setter
    def total_actual_units(self, total_actual_units):
        """Sets the total_actual_units of this ReservationAggregates.


        :param total_actual_units: The total_actual_units of this ReservationAggregates.
        :type total_actual_units: str
        """

        self._total_actual_units = total_actual_units

    @property
    def unused_hours(self):
        """Gets the unused_hours of this ReservationAggregates.


        :return: The unused_hours of this ReservationAggregates.
        :rtype: str
        """
        return self._unused_hours

    @unused_hours.setter
    def unused_hours(self, unused_hours):
        """Sets the unused_hours of this ReservationAggregates.


        :param unused_hours: The unused_hours of this ReservationAggregates.
        :type unused_hours: str
        """

        self._unused_hours = unused_hours

    @property
    def unused_units(self):
        """Gets the unused_units of this ReservationAggregates.


        :return: The unused_units of this ReservationAggregates.
        :rtype: str
        """
        return self._unused_units

    @unused_units.setter
    def unused_units(self, unused_units):
        """Sets the unused_units of this ReservationAggregates.


        :param unused_units: The unused_units of this ReservationAggregates.
        :type unused_units: str
        """

        self._unused_units = unused_units

    @property
    def on_demand_cost_of_ri_hours_used(self):
        """Gets the on_demand_cost_of_ri_hours_used of this ReservationAggregates.


        :return: The on_demand_cost_of_ri_hours_used of this ReservationAggregates.
        :rtype: str
        """
        return self._on_demand_cost_of_ri_hours_used

    @on_demand_cost_of_ri_hours_used.setter
    def on_demand_cost_of_ri_hours_used(self, on_demand_cost_of_ri_hours_used):
        """Sets the on_demand_cost_of_ri_hours_used of this ReservationAggregates.


        :param on_demand_cost_of_ri_hours_used: The on_demand_cost_of_ri_hours_used of this ReservationAggregates.
        :type on_demand_cost_of_ri_hours_used: str
        """

        self._on_demand_cost_of_ri_hours_used = on_demand_cost_of_ri_hours_used

    @property
    def net_ri_savings(self):
        """Gets the net_ri_savings of this ReservationAggregates.


        :return: The net_ri_savings of this ReservationAggregates.
        :rtype: str
        """
        return self._net_ri_savings

    @net_ri_savings.setter
    def net_ri_savings(self, net_ri_savings):
        """Sets the net_ri_savings of this ReservationAggregates.


        :param net_ri_savings: The net_ri_savings of this ReservationAggregates.
        :type net_ri_savings: str
        """

        self._net_ri_savings = net_ri_savings

    @property
    def total_potential_ri_savings(self):
        """Gets the total_potential_ri_savings of this ReservationAggregates.


        :return: The total_potential_ri_savings of this ReservationAggregates.
        :rtype: str
        """
        return self._total_potential_ri_savings

    @total_potential_ri_savings.setter
    def total_potential_ri_savings(self, total_potential_ri_savings):
        """Sets the total_potential_ri_savings of this ReservationAggregates.


        :param total_potential_ri_savings: The total_potential_ri_savings of this ReservationAggregates.
        :type total_potential_ri_savings: str
        """

        self._total_potential_ri_savings = total_potential_ri_savings

    @property
    def amortized_upfront_fee(self):
        """Gets the amortized_upfront_fee of this ReservationAggregates.


        :return: The amortized_upfront_fee of this ReservationAggregates.
        :rtype: str
        """
        return self._amortized_upfront_fee

    @amortized_upfront_fee.setter
    def amortized_upfront_fee(self, amortized_upfront_fee):
        """Sets the amortized_upfront_fee of this ReservationAggregates.


        :param amortized_upfront_fee: The amortized_upfront_fee of this ReservationAggregates.
        :type amortized_upfront_fee: str
        """

        self._amortized_upfront_fee = amortized_upfront_fee

    @property
    def amortized_recurring_fee(self):
        """Gets the amortized_recurring_fee of this ReservationAggregates.


        :return: The amortized_recurring_fee of this ReservationAggregates.
        :rtype: str
        """
        return self._amortized_recurring_fee

    @amortized_recurring_fee.setter
    def amortized_recurring_fee(self, amortized_recurring_fee):
        """Sets the amortized_recurring_fee of this ReservationAggregates.


        :param amortized_recurring_fee: The amortized_recurring_fee of this ReservationAggregates.
        :type amortized_recurring_fee: str
        """

        self._amortized_recurring_fee = amortized_recurring_fee

    @property
    def total_amortized_fee(self):
        """Gets the total_amortized_fee of this ReservationAggregates.


        :return: The total_amortized_fee of this ReservationAggregates.
        :rtype: str
        """
        return self._total_amortized_fee

    @total_amortized_fee.setter
    def total_amortized_fee(self, total_amortized_fee):
        """Sets the total_amortized_fee of this ReservationAggregates.


        :param total_amortized_fee: The total_amortized_fee of this ReservationAggregates.
        :type total_amortized_fee: str
        """

        self._total_amortized_fee = total_amortized_fee

    @property
    def ri_cost_for_unused_hours(self):
        """Gets the ri_cost_for_unused_hours of this ReservationAggregates.


        :return: The ri_cost_for_unused_hours of this ReservationAggregates.
        :rtype: str
        """
        return self._ri_cost_for_unused_hours

    @ri_cost_for_unused_hours.setter
    def ri_cost_for_unused_hours(self, ri_cost_for_unused_hours):
        """Sets the ri_cost_for_unused_hours of this ReservationAggregates.


        :param ri_cost_for_unused_hours: The ri_cost_for_unused_hours of this ReservationAggregates.
        :type ri_cost_for_unused_hours: str
        """

        self._ri_cost_for_unused_hours = ri_cost_for_unused_hours

    @property
    def realized_savings(self):
        """Gets the realized_savings of this ReservationAggregates.


        :return: The realized_savings of this ReservationAggregates.
        :rtype: str
        """
        return self._realized_savings

    @realized_savings.setter
    def realized_savings(self, realized_savings):
        """Sets the realized_savings of this ReservationAggregates.


        :param realized_savings: The realized_savings of this ReservationAggregates.
        :type realized_savings: str
        """

        self._realized_savings = realized_savings

    @property
    def unrealized_savings(self):
        """Gets the unrealized_savings of this ReservationAggregates.


        :return: The unrealized_savings of this ReservationAggregates.
        :rtype: str
        """
        return self._unrealized_savings

    @unrealized_savings.setter
    def unrealized_savings(self, unrealized_savings):
        """Sets the unrealized_savings of this ReservationAggregates.


        :param unrealized_savings: The unrealized_savings of this ReservationAggregates.
        :type unrealized_savings: str
        """

        self._unrealized_savings = unrealized_savings
