# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SavingsPlansUtilization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_commitment: str=None, used_commitment: str=None, unused_commitment: str=None, utilization_percentage: str=None):
        """SavingsPlansUtilization - a model defined in OpenAPI

        :param total_commitment: The total_commitment of this SavingsPlansUtilization.
        :param used_commitment: The used_commitment of this SavingsPlansUtilization.
        :param unused_commitment: The unused_commitment of this SavingsPlansUtilization.
        :param utilization_percentage: The utilization_percentage of this SavingsPlansUtilization.
        """
        self.openapi_types = {
            'total_commitment': str,
            'used_commitment': str,
            'unused_commitment': str,
            'utilization_percentage': str
        }

        self.attribute_map = {
            'total_commitment': 'TotalCommitment',
            'used_commitment': 'UsedCommitment',
            'unused_commitment': 'UnusedCommitment',
            'utilization_percentage': 'UtilizationPercentage'
        }

        self._total_commitment = total_commitment
        self._used_commitment = used_commitment
        self._unused_commitment = unused_commitment
        self._utilization_percentage = utilization_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SavingsPlansUtilization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SavingsPlansUtilization of this SavingsPlansUtilization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_commitment(self):
        """Gets the total_commitment of this SavingsPlansUtilization.


        :return: The total_commitment of this SavingsPlansUtilization.
        :rtype: str
        """
        return self._total_commitment

    @total_commitment.setter
    def total_commitment(self, total_commitment):
        """Sets the total_commitment of this SavingsPlansUtilization.


        :param total_commitment: The total_commitment of this SavingsPlansUtilization.
        :type total_commitment: str
        """

        self._total_commitment = total_commitment

    @property
    def used_commitment(self):
        """Gets the used_commitment of this SavingsPlansUtilization.


        :return: The used_commitment of this SavingsPlansUtilization.
        :rtype: str
        """
        return self._used_commitment

    @used_commitment.setter
    def used_commitment(self, used_commitment):
        """Sets the used_commitment of this SavingsPlansUtilization.


        :param used_commitment: The used_commitment of this SavingsPlansUtilization.
        :type used_commitment: str
        """

        self._used_commitment = used_commitment

    @property
    def unused_commitment(self):
        """Gets the unused_commitment of this SavingsPlansUtilization.


        :return: The unused_commitment of this SavingsPlansUtilization.
        :rtype: str
        """
        return self._unused_commitment

    @unused_commitment.setter
    def unused_commitment(self, unused_commitment):
        """Sets the unused_commitment of this SavingsPlansUtilization.


        :param unused_commitment: The unused_commitment of this SavingsPlansUtilization.
        :type unused_commitment: str
        """

        self._unused_commitment = unused_commitment

    @property
    def utilization_percentage(self):
        """Gets the utilization_percentage of this SavingsPlansUtilization.


        :return: The utilization_percentage of this SavingsPlansUtilization.
        :rtype: str
        """
        return self._utilization_percentage

    @utilization_percentage.setter
    def utilization_percentage(self, utilization_percentage):
        """Sets the utilization_percentage of this SavingsPlansUtilization.


        :param utilization_percentage: The utilization_percentage of this SavingsPlansUtilization.
        :type utilization_percentage: str
        """

        self._utilization_percentage = utilization_percentage
