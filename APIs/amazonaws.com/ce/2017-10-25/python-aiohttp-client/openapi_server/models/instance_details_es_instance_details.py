# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceDetailsESInstanceDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_class: str=None, instance_size: str=None, region: str=None, current_generation: bool=None, size_flex_eligible: bool=None):
        """InstanceDetailsESInstanceDetails - a model defined in OpenAPI

        :param instance_class: The instance_class of this InstanceDetailsESInstanceDetails.
        :param instance_size: The instance_size of this InstanceDetailsESInstanceDetails.
        :param region: The region of this InstanceDetailsESInstanceDetails.
        :param current_generation: The current_generation of this InstanceDetailsESInstanceDetails.
        :param size_flex_eligible: The size_flex_eligible of this InstanceDetailsESInstanceDetails.
        """
        self.openapi_types = {
            'instance_class': str,
            'instance_size': str,
            'region': str,
            'current_generation': bool,
            'size_flex_eligible': bool
        }

        self.attribute_map = {
            'instance_class': 'InstanceClass',
            'instance_size': 'InstanceSize',
            'region': 'Region',
            'current_generation': 'CurrentGeneration',
            'size_flex_eligible': 'SizeFlexEligible'
        }

        self._instance_class = instance_class
        self._instance_size = instance_size
        self._region = region
        self._current_generation = current_generation
        self._size_flex_eligible = size_flex_eligible

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceDetailsESInstanceDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceDetails_ESInstanceDetails of this InstanceDetailsESInstanceDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_class(self):
        """Gets the instance_class of this InstanceDetailsESInstanceDetails.


        :return: The instance_class of this InstanceDetailsESInstanceDetails.
        :rtype: str
        """
        return self._instance_class

    @instance_class.setter
    def instance_class(self, instance_class):
        """Sets the instance_class of this InstanceDetailsESInstanceDetails.


        :param instance_class: The instance_class of this InstanceDetailsESInstanceDetails.
        :type instance_class: str
        """

        self._instance_class = instance_class

    @property
    def instance_size(self):
        """Gets the instance_size of this InstanceDetailsESInstanceDetails.


        :return: The instance_size of this InstanceDetailsESInstanceDetails.
        :rtype: str
        """
        return self._instance_size

    @instance_size.setter
    def instance_size(self, instance_size):
        """Sets the instance_size of this InstanceDetailsESInstanceDetails.


        :param instance_size: The instance_size of this InstanceDetailsESInstanceDetails.
        :type instance_size: str
        """

        self._instance_size = instance_size

    @property
    def region(self):
        """Gets the region of this InstanceDetailsESInstanceDetails.


        :return: The region of this InstanceDetailsESInstanceDetails.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this InstanceDetailsESInstanceDetails.


        :param region: The region of this InstanceDetailsESInstanceDetails.
        :type region: str
        """

        self._region = region

    @property
    def current_generation(self):
        """Gets the current_generation of this InstanceDetailsESInstanceDetails.


        :return: The current_generation of this InstanceDetailsESInstanceDetails.
        :rtype: bool
        """
        return self._current_generation

    @current_generation.setter
    def current_generation(self, current_generation):
        """Sets the current_generation of this InstanceDetailsESInstanceDetails.


        :param current_generation: The current_generation of this InstanceDetailsESInstanceDetails.
        :type current_generation: bool
        """

        self._current_generation = current_generation

    @property
    def size_flex_eligible(self):
        """Gets the size_flex_eligible of this InstanceDetailsESInstanceDetails.


        :return: The size_flex_eligible of this InstanceDetailsESInstanceDetails.
        :rtype: bool
        """
        return self._size_flex_eligible

    @size_flex_eligible.setter
    def size_flex_eligible(self, size_flex_eligible):
        """Sets the size_flex_eligible of this InstanceDetailsESInstanceDetails.


        :param size_flex_eligible: The size_flex_eligible of this InstanceDetailsESInstanceDetails.
        :type size_flex_eligible: bool
        """

        self._size_flex_eligible = size_flex_eligible
