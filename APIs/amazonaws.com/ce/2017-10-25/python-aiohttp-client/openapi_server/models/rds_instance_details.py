# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RDSInstanceDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, family: str=None, instance_type: str=None, region: str=None, database_engine: str=None, database_edition: str=None, deployment_option: str=None, license_model: str=None, current_generation: bool=None, size_flex_eligible: bool=None):
        """RDSInstanceDetails - a model defined in OpenAPI

        :param family: The family of this RDSInstanceDetails.
        :param instance_type: The instance_type of this RDSInstanceDetails.
        :param region: The region of this RDSInstanceDetails.
        :param database_engine: The database_engine of this RDSInstanceDetails.
        :param database_edition: The database_edition of this RDSInstanceDetails.
        :param deployment_option: The deployment_option of this RDSInstanceDetails.
        :param license_model: The license_model of this RDSInstanceDetails.
        :param current_generation: The current_generation of this RDSInstanceDetails.
        :param size_flex_eligible: The size_flex_eligible of this RDSInstanceDetails.
        """
        self.openapi_types = {
            'family': str,
            'instance_type': str,
            'region': str,
            'database_engine': str,
            'database_edition': str,
            'deployment_option': str,
            'license_model': str,
            'current_generation': bool,
            'size_flex_eligible': bool
        }

        self.attribute_map = {
            'family': 'Family',
            'instance_type': 'InstanceType',
            'region': 'Region',
            'database_engine': 'DatabaseEngine',
            'database_edition': 'DatabaseEdition',
            'deployment_option': 'DeploymentOption',
            'license_model': 'LicenseModel',
            'current_generation': 'CurrentGeneration',
            'size_flex_eligible': 'SizeFlexEligible'
        }

        self._family = family
        self._instance_type = instance_type
        self._region = region
        self._database_engine = database_engine
        self._database_edition = database_edition
        self._deployment_option = deployment_option
        self._license_model = license_model
        self._current_generation = current_generation
        self._size_flex_eligible = size_flex_eligible

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RDSInstanceDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RDSInstanceDetails of this RDSInstanceDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def family(self):
        """Gets the family of this RDSInstanceDetails.


        :return: The family of this RDSInstanceDetails.
        :rtype: str
        """
        return self._family

    @family.setter
    def family(self, family):
        """Sets the family of this RDSInstanceDetails.


        :param family: The family of this RDSInstanceDetails.
        :type family: str
        """

        self._family = family

    @property
    def instance_type(self):
        """Gets the instance_type of this RDSInstanceDetails.


        :return: The instance_type of this RDSInstanceDetails.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this RDSInstanceDetails.


        :param instance_type: The instance_type of this RDSInstanceDetails.
        :type instance_type: str
        """

        self._instance_type = instance_type

    @property
    def region(self):
        """Gets the region of this RDSInstanceDetails.


        :return: The region of this RDSInstanceDetails.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this RDSInstanceDetails.


        :param region: The region of this RDSInstanceDetails.
        :type region: str
        """

        self._region = region

    @property
    def database_engine(self):
        """Gets the database_engine of this RDSInstanceDetails.


        :return: The database_engine of this RDSInstanceDetails.
        :rtype: str
        """
        return self._database_engine

    @database_engine.setter
    def database_engine(self, database_engine):
        """Sets the database_engine of this RDSInstanceDetails.


        :param database_engine: The database_engine of this RDSInstanceDetails.
        :type database_engine: str
        """

        self._database_engine = database_engine

    @property
    def database_edition(self):
        """Gets the database_edition of this RDSInstanceDetails.


        :return: The database_edition of this RDSInstanceDetails.
        :rtype: str
        """
        return self._database_edition

    @database_edition.setter
    def database_edition(self, database_edition):
        """Sets the database_edition of this RDSInstanceDetails.


        :param database_edition: The database_edition of this RDSInstanceDetails.
        :type database_edition: str
        """

        self._database_edition = database_edition

    @property
    def deployment_option(self):
        """Gets the deployment_option of this RDSInstanceDetails.


        :return: The deployment_option of this RDSInstanceDetails.
        :rtype: str
        """
        return self._deployment_option

    @deployment_option.setter
    def deployment_option(self, deployment_option):
        """Sets the deployment_option of this RDSInstanceDetails.


        :param deployment_option: The deployment_option of this RDSInstanceDetails.
        :type deployment_option: str
        """

        self._deployment_option = deployment_option

    @property
    def license_model(self):
        """Gets the license_model of this RDSInstanceDetails.


        :return: The license_model of this RDSInstanceDetails.
        :rtype: str
        """
        return self._license_model

    @license_model.setter
    def license_model(self, license_model):
        """Sets the license_model of this RDSInstanceDetails.


        :param license_model: The license_model of this RDSInstanceDetails.
        :type license_model: str
        """

        self._license_model = license_model

    @property
    def current_generation(self):
        """Gets the current_generation of this RDSInstanceDetails.


        :return: The current_generation of this RDSInstanceDetails.
        :rtype: bool
        """
        return self._current_generation

    @current_generation.setter
    def current_generation(self, current_generation):
        """Sets the current_generation of this RDSInstanceDetails.


        :param current_generation: The current_generation of this RDSInstanceDetails.
        :type current_generation: bool
        """

        self._current_generation = current_generation

    @property
    def size_flex_eligible(self):
        """Gets the size_flex_eligible of this RDSInstanceDetails.


        :return: The size_flex_eligible of this RDSInstanceDetails.
        :rtype: bool
        """
        return self._size_flex_eligible

    @size_flex_eligible.setter
    def size_flex_eligible(self, size_flex_eligible):
        """Sets the size_flex_eligible of this RDSInstanceDetails.


        :param size_flex_eligible: The size_flex_eligible of this RDSInstanceDetails.
        :type size_flex_eligible: bool
        """

        self._size_flex_eligible = size_flex_eligible
