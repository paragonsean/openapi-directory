# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_savings_plans_coverage_request_filter import GetSavingsPlansCoverageRequestFilter
from openapi_server.models.get_savings_plans_coverage_request_sort_by import GetSavingsPlansCoverageRequestSortBy
from openapi_server.models.get_savings_plans_coverage_request_time_period import GetSavingsPlansCoverageRequestTimePeriod
from openapi_server.models.granularity import Granularity
from openapi_server import util


class GetSavingsPlansCoverageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, time_period: GetSavingsPlansCoverageRequestTimePeriod=None, group_by: List=None, granularity: Granularity=None, filter: GetSavingsPlansCoverageRequestFilter=None, metrics: List=None, next_token: str=None, max_results: int=None, sort_by: GetSavingsPlansCoverageRequestSortBy=None):
        """GetSavingsPlansCoverageRequest - a model defined in OpenAPI

        :param time_period: The time_period of this GetSavingsPlansCoverageRequest.
        :param group_by: The group_by of this GetSavingsPlansCoverageRequest.
        :param granularity: The granularity of this GetSavingsPlansCoverageRequest.
        :param filter: The filter of this GetSavingsPlansCoverageRequest.
        :param metrics: The metrics of this GetSavingsPlansCoverageRequest.
        :param next_token: The next_token of this GetSavingsPlansCoverageRequest.
        :param max_results: The max_results of this GetSavingsPlansCoverageRequest.
        :param sort_by: The sort_by of this GetSavingsPlansCoverageRequest.
        """
        self.openapi_types = {
            'time_period': GetSavingsPlansCoverageRequestTimePeriod,
            'group_by': List,
            'granularity': Granularity,
            'filter': GetSavingsPlansCoverageRequestFilter,
            'metrics': List,
            'next_token': str,
            'max_results': int,
            'sort_by': GetSavingsPlansCoverageRequestSortBy
        }

        self.attribute_map = {
            'time_period': 'TimePeriod',
            'group_by': 'GroupBy',
            'granularity': 'Granularity',
            'filter': 'Filter',
            'metrics': 'Metrics',
            'next_token': 'NextToken',
            'max_results': 'MaxResults',
            'sort_by': 'SortBy'
        }

        self._time_period = time_period
        self._group_by = group_by
        self._granularity = granularity
        self._filter = filter
        self._metrics = metrics
        self._next_token = next_token
        self._max_results = max_results
        self._sort_by = sort_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSavingsPlansCoverageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSavingsPlansCoverageRequest of this GetSavingsPlansCoverageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_period(self):
        """Gets the time_period of this GetSavingsPlansCoverageRequest.


        :return: The time_period of this GetSavingsPlansCoverageRequest.
        :rtype: GetSavingsPlansCoverageRequestTimePeriod
        """
        return self._time_period

    @time_period.setter
    def time_period(self, time_period):
        """Sets the time_period of this GetSavingsPlansCoverageRequest.


        :param time_period: The time_period of this GetSavingsPlansCoverageRequest.
        :type time_period: GetSavingsPlansCoverageRequestTimePeriod
        """
        if time_period is None:
            raise ValueError("Invalid value for `time_period`, must not be `None`")

        self._time_period = time_period

    @property
    def group_by(self):
        """Gets the group_by of this GetSavingsPlansCoverageRequest.


        :return: The group_by of this GetSavingsPlansCoverageRequest.
        :rtype: List
        """
        return self._group_by

    @group_by.setter
    def group_by(self, group_by):
        """Sets the group_by of this GetSavingsPlansCoverageRequest.


        :param group_by: The group_by of this GetSavingsPlansCoverageRequest.
        :type group_by: List
        """

        self._group_by = group_by

    @property
    def granularity(self):
        """Gets the granularity of this GetSavingsPlansCoverageRequest.


        :return: The granularity of this GetSavingsPlansCoverageRequest.
        :rtype: Granularity
        """
        return self._granularity

    @granularity.setter
    def granularity(self, granularity):
        """Sets the granularity of this GetSavingsPlansCoverageRequest.


        :param granularity: The granularity of this GetSavingsPlansCoverageRequest.
        :type granularity: Granularity
        """

        self._granularity = granularity

    @property
    def filter(self):
        """Gets the filter of this GetSavingsPlansCoverageRequest.


        :return: The filter of this GetSavingsPlansCoverageRequest.
        :rtype: GetSavingsPlansCoverageRequestFilter
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GetSavingsPlansCoverageRequest.


        :param filter: The filter of this GetSavingsPlansCoverageRequest.
        :type filter: GetSavingsPlansCoverageRequestFilter
        """

        self._filter = filter

    @property
    def metrics(self):
        """Gets the metrics of this GetSavingsPlansCoverageRequest.


        :return: The metrics of this GetSavingsPlansCoverageRequest.
        :rtype: List
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this GetSavingsPlansCoverageRequest.


        :param metrics: The metrics of this GetSavingsPlansCoverageRequest.
        :type metrics: List
        """

        self._metrics = metrics

    @property
    def next_token(self):
        """Gets the next_token of this GetSavingsPlansCoverageRequest.


        :return: The next_token of this GetSavingsPlansCoverageRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetSavingsPlansCoverageRequest.


        :param next_token: The next_token of this GetSavingsPlansCoverageRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this GetSavingsPlansCoverageRequest.


        :return: The max_results of this GetSavingsPlansCoverageRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this GetSavingsPlansCoverageRequest.


        :param max_results: The max_results of this GetSavingsPlansCoverageRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def sort_by(self):
        """Gets the sort_by of this GetSavingsPlansCoverageRequest.


        :return: The sort_by of this GetSavingsPlansCoverageRequest.
        :rtype: GetSavingsPlansCoverageRequestSortBy
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this GetSavingsPlansCoverageRequest.


        :param sort_by: The sort_by of this GetSavingsPlansCoverageRequest.
        :type sort_by: GetSavingsPlansCoverageRequestSortBy
        """

        self._sort_by = sort_by
