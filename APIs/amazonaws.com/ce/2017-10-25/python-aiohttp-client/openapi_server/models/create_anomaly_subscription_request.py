# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_anomaly_subscription_request_anomaly_subscription import CreateAnomalySubscriptionRequestAnomalySubscription
from openapi_server import util


class CreateAnomalySubscriptionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, anomaly_subscription: CreateAnomalySubscriptionRequestAnomalySubscription=None, resource_tags: List=None):
        """CreateAnomalySubscriptionRequest - a model defined in OpenAPI

        :param anomaly_subscription: The anomaly_subscription of this CreateAnomalySubscriptionRequest.
        :param resource_tags: The resource_tags of this CreateAnomalySubscriptionRequest.
        """
        self.openapi_types = {
            'anomaly_subscription': CreateAnomalySubscriptionRequestAnomalySubscription,
            'resource_tags': List
        }

        self.attribute_map = {
            'anomaly_subscription': 'AnomalySubscription',
            'resource_tags': 'ResourceTags'
        }

        self._anomaly_subscription = anomaly_subscription
        self._resource_tags = resource_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAnomalySubscriptionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAnomalySubscriptionRequest of this CreateAnomalySubscriptionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def anomaly_subscription(self):
        """Gets the anomaly_subscription of this CreateAnomalySubscriptionRequest.


        :return: The anomaly_subscription of this CreateAnomalySubscriptionRequest.
        :rtype: CreateAnomalySubscriptionRequestAnomalySubscription
        """
        return self._anomaly_subscription

    @anomaly_subscription.setter
    def anomaly_subscription(self, anomaly_subscription):
        """Sets the anomaly_subscription of this CreateAnomalySubscriptionRequest.


        :param anomaly_subscription: The anomaly_subscription of this CreateAnomalySubscriptionRequest.
        :type anomaly_subscription: CreateAnomalySubscriptionRequestAnomalySubscription
        """
        if anomaly_subscription is None:
            raise ValueError("Invalid value for `anomaly_subscription`, must not be `None`")

        self._anomaly_subscription = anomaly_subscription

    @property
    def resource_tags(self):
        """Gets the resource_tags of this CreateAnomalySubscriptionRequest.


        :return: The resource_tags of this CreateAnomalySubscriptionRequest.
        :rtype: List
        """
        return self._resource_tags

    @resource_tags.setter
    def resource_tags(self, resource_tags):
        """Sets the resource_tags of this CreateAnomalySubscriptionRequest.


        :param resource_tags: The resource_tags of this CreateAnomalySubscriptionRequest.
        :type resource_tags: List
        """

        self._resource_tags = resource_tags
