# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cost_allocation_tag_status import CostAllocationTagStatus
from openapi_server.models.cost_allocation_tag_type import CostAllocationTagType
from openapi_server import util


class ListCostAllocationTagsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: CostAllocationTagStatus=None, tag_keys: List=None, type: CostAllocationTagType=None, next_token: str=None, max_results: int=None):
        """ListCostAllocationTagsRequest - a model defined in OpenAPI

        :param status: The status of this ListCostAllocationTagsRequest.
        :param tag_keys: The tag_keys of this ListCostAllocationTagsRequest.
        :param type: The type of this ListCostAllocationTagsRequest.
        :param next_token: The next_token of this ListCostAllocationTagsRequest.
        :param max_results: The max_results of this ListCostAllocationTagsRequest.
        """
        self.openapi_types = {
            'status': CostAllocationTagStatus,
            'tag_keys': List,
            'type': CostAllocationTagType,
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'status': 'Status',
            'tag_keys': 'TagKeys',
            'type': 'Type',
            'next_token': 'NextToken',
            'max_results': 'MaxResults'
        }

        self._status = status
        self._tag_keys = tag_keys
        self._type = type
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCostAllocationTagsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCostAllocationTagsRequest of this ListCostAllocationTagsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this ListCostAllocationTagsRequest.


        :return: The status of this ListCostAllocationTagsRequest.
        :rtype: CostAllocationTagStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ListCostAllocationTagsRequest.


        :param status: The status of this ListCostAllocationTagsRequest.
        :type status: CostAllocationTagStatus
        """

        self._status = status

    @property
    def tag_keys(self):
        """Gets the tag_keys of this ListCostAllocationTagsRequest.


        :return: The tag_keys of this ListCostAllocationTagsRequest.
        :rtype: List
        """
        return self._tag_keys

    @tag_keys.setter
    def tag_keys(self, tag_keys):
        """Sets the tag_keys of this ListCostAllocationTagsRequest.


        :param tag_keys: The tag_keys of this ListCostAllocationTagsRequest.
        :type tag_keys: List
        """

        self._tag_keys = tag_keys

    @property
    def type(self):
        """Gets the type of this ListCostAllocationTagsRequest.


        :return: The type of this ListCostAllocationTagsRequest.
        :rtype: CostAllocationTagType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ListCostAllocationTagsRequest.


        :param type: The type of this ListCostAllocationTagsRequest.
        :type type: CostAllocationTagType
        """

        self._type = type

    @property
    def next_token(self):
        """Gets the next_token of this ListCostAllocationTagsRequest.


        :return: The next_token of this ListCostAllocationTagsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListCostAllocationTagsRequest.


        :param next_token: The next_token of this ListCostAllocationTagsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListCostAllocationTagsRequest.


        :return: The max_results of this ListCostAllocationTagsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListCostAllocationTagsRequest.


        :param max_results: The max_results of this ListCostAllocationTagsRequest.
        :type max_results: int
        """

        self._max_results = max_results
