# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EC2ResourceUtilizationNetworkResourceUtilization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network_in_bytes_per_second: str=None, network_out_bytes_per_second: str=None, network_packets_in_per_second: str=None, network_packets_out_per_second: str=None):
        """EC2ResourceUtilizationNetworkResourceUtilization - a model defined in OpenAPI

        :param network_in_bytes_per_second: The network_in_bytes_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        :param network_out_bytes_per_second: The network_out_bytes_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        :param network_packets_in_per_second: The network_packets_in_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        :param network_packets_out_per_second: The network_packets_out_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        """
        self.openapi_types = {
            'network_in_bytes_per_second': str,
            'network_out_bytes_per_second': str,
            'network_packets_in_per_second': str,
            'network_packets_out_per_second': str
        }

        self.attribute_map = {
            'network_in_bytes_per_second': 'NetworkInBytesPerSecond',
            'network_out_bytes_per_second': 'NetworkOutBytesPerSecond',
            'network_packets_in_per_second': 'NetworkPacketsInPerSecond',
            'network_packets_out_per_second': 'NetworkPacketsOutPerSecond'
        }

        self._network_in_bytes_per_second = network_in_bytes_per_second
        self._network_out_bytes_per_second = network_out_bytes_per_second
        self._network_packets_in_per_second = network_packets_in_per_second
        self._network_packets_out_per_second = network_packets_out_per_second

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EC2ResourceUtilizationNetworkResourceUtilization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EC2ResourceUtilization_NetworkResourceUtilization of this EC2ResourceUtilizationNetworkResourceUtilization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network_in_bytes_per_second(self):
        """Gets the network_in_bytes_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.


        :return: The network_in_bytes_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        :rtype: str
        """
        return self._network_in_bytes_per_second

    @network_in_bytes_per_second.setter
    def network_in_bytes_per_second(self, network_in_bytes_per_second):
        """Sets the network_in_bytes_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.


        :param network_in_bytes_per_second: The network_in_bytes_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        :type network_in_bytes_per_second: str
        """

        self._network_in_bytes_per_second = network_in_bytes_per_second

    @property
    def network_out_bytes_per_second(self):
        """Gets the network_out_bytes_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.


        :return: The network_out_bytes_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        :rtype: str
        """
        return self._network_out_bytes_per_second

    @network_out_bytes_per_second.setter
    def network_out_bytes_per_second(self, network_out_bytes_per_second):
        """Sets the network_out_bytes_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.


        :param network_out_bytes_per_second: The network_out_bytes_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        :type network_out_bytes_per_second: str
        """

        self._network_out_bytes_per_second = network_out_bytes_per_second

    @property
    def network_packets_in_per_second(self):
        """Gets the network_packets_in_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.


        :return: The network_packets_in_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        :rtype: str
        """
        return self._network_packets_in_per_second

    @network_packets_in_per_second.setter
    def network_packets_in_per_second(self, network_packets_in_per_second):
        """Sets the network_packets_in_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.


        :param network_packets_in_per_second: The network_packets_in_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        :type network_packets_in_per_second: str
        """

        self._network_packets_in_per_second = network_packets_in_per_second

    @property
    def network_packets_out_per_second(self):
        """Gets the network_packets_out_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.


        :return: The network_packets_out_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        :rtype: str
        """
        return self._network_packets_out_per_second

    @network_packets_out_per_second.setter
    def network_packets_out_per_second(self, network_packets_out_per_second):
        """Sets the network_packets_out_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.


        :param network_packets_out_per_second: The network_packets_out_per_second of this EC2ResourceUtilizationNetworkResourceUtilization.
        :type network_packets_out_per_second: str
        """

        self._network_packets_out_per_second = network_packets_out_per_second
