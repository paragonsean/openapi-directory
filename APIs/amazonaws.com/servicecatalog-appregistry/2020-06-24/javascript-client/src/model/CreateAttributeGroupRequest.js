/**
 * AWS Service Catalog App Registry
 *  Amazon Web Services Service Catalog AppRegistry enables organizations to understand the application context of their Amazon Web Services resources. AppRegistry provides a repository of your applications, their resources, and the application metadata that you use within your enterprise.
 *
 * The version of the OpenAPI document: 2020-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateAttributeGroupRequest model module.
 * @module model/CreateAttributeGroupRequest
 * @version 2020-06-24
 */
class CreateAttributeGroupRequest {
    /**
     * Constructs a new <code>CreateAttributeGroupRequest</code>.
     * @alias module:model/CreateAttributeGroupRequest
     * @param name {String} The name of the attribute group.
     * @param attributes {String} A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.
     * @param clientToken {String} A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.
     */
    constructor(name, attributes, clientToken) { 
        
        CreateAttributeGroupRequest.initialize(this, name, attributes, clientToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, attributes, clientToken) { 
        obj['name'] = name;
        obj['attributes'] = attributes;
        obj['clientToken'] = clientToken;
    }

    /**
     * Constructs a <code>CreateAttributeGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAttributeGroupRequest} obj Optional instance to populate.
     * @return {module:model/CreateAttributeGroupRequest} The populated <code>CreateAttributeGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAttributeGroupRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAttributeGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAttributeGroupRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAttributeGroupRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['attributes'] && !(typeof data['attributes'] === 'string' || data['attributes'] instanceof String)) {
            throw new Error("Expected the field `attributes` to be a primitive type in the JSON string but got " + data['attributes']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }

        return true;
    }


}

CreateAttributeGroupRequest.RequiredProperties = ["name", "attributes", "clientToken"];

/**
 * The name of the attribute group.
 * @member {String} name
 */
CreateAttributeGroupRequest.prototype['name'] = undefined;

/**
 * The description of the attribute group that the user provides.
 * @member {String} description
 */
CreateAttributeGroupRequest.prototype['description'] = undefined;

/**
 * A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.
 * @member {String} attributes
 */
CreateAttributeGroupRequest.prototype['attributes'] = undefined;

/**
 * Key-value pairs you can use to associate with the attribute group.
 * @member {Object.<String, String>} tags
 */
CreateAttributeGroupRequest.prototype['tags'] = undefined;

/**
 * A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.
 * @member {String} clientToken
 */
CreateAttributeGroupRequest.prototype['clientToken'] = undefined;






export default CreateAttributeGroupRequest;

