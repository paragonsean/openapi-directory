/**
 * AWS Service Catalog App Registry
 *  Amazon Web Services Service Catalog AppRegistry enables organizations to understand the application context of their Amazon Web Services resources. AppRegistry provides a repository of your applications, their resources, and the application metadata that you use within your enterprise.
 *
 * The version of the OpenAPI document: 2020-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsServiceCatalogAppRegistry);
  }
}(this, function(expect, AwsServiceCatalogAppRegistry) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsServiceCatalogAppRegistry.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('associateAttributeGroup', function() {
      it('should call associateAttributeGroup successfully', function(done) {
        //uncomment below and update the code to test associateAttributeGroup
        //instance.associateAttributeGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateResource', function() {
      it('should call associateResource successfully', function(done) {
        //uncomment below and update the code to test associateResource
        //instance.associateResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createApplication', function() {
      it('should call createApplication successfully', function(done) {
        //uncomment below and update the code to test createApplication
        //instance.createApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAttributeGroup', function() {
      it('should call createAttributeGroup successfully', function(done) {
        //uncomment below and update the code to test createAttributeGroup
        //instance.createAttributeGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteApplication', function() {
      it('should call deleteApplication successfully', function(done) {
        //uncomment below and update the code to test deleteApplication
        //instance.deleteApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAttributeGroup', function() {
      it('should call deleteAttributeGroup successfully', function(done) {
        //uncomment below and update the code to test deleteAttributeGroup
        //instance.deleteAttributeGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateAttributeGroup', function() {
      it('should call disassociateAttributeGroup successfully', function(done) {
        //uncomment below and update the code to test disassociateAttributeGroup
        //instance.disassociateAttributeGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateResource', function() {
      it('should call disassociateResource successfully', function(done) {
        //uncomment below and update the code to test disassociateResource
        //instance.disassociateResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApplication', function() {
      it('should call getApplication successfully', function(done) {
        //uncomment below and update the code to test getApplication
        //instance.getApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAssociatedResource', function() {
      it('should call getAssociatedResource successfully', function(done) {
        //uncomment below and update the code to test getAssociatedResource
        //instance.getAssociatedResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttributeGroup', function() {
      it('should call getAttributeGroup successfully', function(done) {
        //uncomment below and update the code to test getAttributeGroup
        //instance.getAttributeGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConfiguration', function() {
      it('should call getConfiguration successfully', function(done) {
        //uncomment below and update the code to test getConfiguration
        //instance.getConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listApplications', function() {
      it('should call listApplications successfully', function(done) {
        //uncomment below and update the code to test listApplications
        //instance.listApplications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssociatedAttributeGroups', function() {
      it('should call listAssociatedAttributeGroups successfully', function(done) {
        //uncomment below and update the code to test listAssociatedAttributeGroups
        //instance.listAssociatedAttributeGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssociatedResources', function() {
      it('should call listAssociatedResources successfully', function(done) {
        //uncomment below and update the code to test listAssociatedResources
        //instance.listAssociatedResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAttributeGroups', function() {
      it('should call listAttributeGroups successfully', function(done) {
        //uncomment below and update the code to test listAttributeGroups
        //instance.listAttributeGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAttributeGroupsForApplication', function() {
      it('should call listAttributeGroupsForApplication successfully', function(done) {
        //uncomment below and update the code to test listAttributeGroupsForApplication
        //instance.listAttributeGroupsForApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putConfiguration', function() {
      it('should call putConfiguration successfully', function(done) {
        //uncomment below and update the code to test putConfiguration
        //instance.putConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('syncResource', function() {
      it('should call syncResource successfully', function(done) {
        //uncomment below and update the code to test syncResource
        //instance.syncResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateApplication', function() {
      it('should call updateApplication successfully', function(done) {
        //uncomment below and update the code to test updateApplication
        //instance.updateApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAttributeGroup', function() {
      it('should call updateAttributeGroup successfully', function(done) {
        //uncomment below and update the code to test updateAttributeGroup
        //instance.updateAttributeGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
