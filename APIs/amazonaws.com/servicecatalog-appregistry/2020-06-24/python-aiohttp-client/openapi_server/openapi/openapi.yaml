openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: " Amazon Web Services Service Catalog AppRegistry enables organizations\
    \ to understand the application context of their Amazon Web Services resources.\
    \ AppRegistry provides a repository of your applications, their resources, and\
    \ the application metadata that you use within your enterprise."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Service Catalog App Registry
  version: 2020-06-24
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: servicecatalog-appregistry
  x-aws-signingName: servicecatalog
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/servicecatalog-appregistry-2020-06-24.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/servicecatalog-appregistry/
servers:
- description: The AppRegistry multi-region endpoint
  url: "http://servicecatalog-appregistry.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AppRegistry multi-region endpoint
  url: "https://servicecatalog-appregistry.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AppRegistry endpoint for China (Beijing) and China (Ningxia)
  url: "http://servicecatalog-appregistry.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AppRegistry endpoint for China (Beijing) and China (Ningxia)
  url: "https://servicecatalog-appregistry.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /applications:
    get:
      description: Retrieves a list of all of your applications. Results are paginated.
      operationId: list_applications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The token to use to get the next page of results after a previous
          API call. '
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2024
          minLength: 1
          pattern: "[A-Za-z0-9+/=]+"
          type: string
        style: form
      - description: "The upper bound of the number of results to return (cannot exceed\
          \ 25). If this parameter is omitted, it defaults to 25. This value is optional."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new application that is the top-level node in a hierarchy
        of related cloud resource abstractions.
      operationId: create_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /applications/{application}:
    delete:
      description: "Deletes an application that is specified either by its application\
        \ ID, name, or ARN. All associated attribute groups and resources must be\
        \ disassociated from it before deleting an application."
      operationId: delete_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The name, ID, or ARN of the application. "
        explode: false
        in: path
        name: application
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/applications/[-.\\w]+)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: " Retrieves metadata information about one of your applications.\
        \ The application can be specified by its ARN, ID, or name (which is unique\
        \ within one account in one region at a given point in time). Specify by ARN\
        \ or ID in automated workflows if you want to make sure that the exact same\
        \ application is returned or a <code>ResourceNotFoundException</code> is thrown,\
        \ avoiding the ABA addressing problem. "
      operationId: get_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The name, ID, or ARN of the application. "
        explode: false
        in: path
        name: application
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/applications/[-.\\w]+)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: Updates an existing application with new attributes.
      operationId: update_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The name, ID, or ARN of the application that will be updated. "
        explode: false
        in: path
        name: application
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/applications/[-.\\w]+)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /applications/{application}/attribute-group-details:
    get:
      description: Lists the details of all attribute groups associated with a specific
        application. The results display in pages.
      operationId: list_attribute_groups_for_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ID of the application.
        explode: false
        in: path
        name: application
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/applications/[-.\\w]+)"
          type: string
        style: simple
      - description: This token retrieves the next page of results after a previous
          API call.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2024
          minLength: 1
          pattern: "[A-Za-z0-9+/=]+"
          type: string
        style: form
      - description: "The upper bound of the number of results to return. The value\
          \ cannot exceed 25. If you omit this parameter, it defaults to 25. This\
          \ value is optional."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttributeGroupsForApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{application}/attribute-groups:
    get:
      description: Lists all attribute groups that are associated with specified application.
        Results are paginated.
      operationId: list_associated_attribute_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ID of the application.
        explode: false
        in: path
        name: application
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/applications/[-.\\w]+)"
          type: string
        style: simple
      - description: 'The token to use to get the next page of results after a previous
          API call. '
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2024
          minLength: 1
          pattern: "[A-Za-z0-9+/=]+"
          type: string
        style: form
      - description: "The upper bound of the number of results to return (cannot exceed\
          \ 25). If this parameter is omitted, it defaults to 25. This value is optional."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociatedAttributeGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{application}/attribute-groups/{attributeGroup}:
    delete:
      description: Disassociates an attribute group from an application to remove
        the extra attributes contained in the attribute group from the application's
        metadata. This operation reverts <code>AssociateAttributeGroup</code>.
      operationId: disassociate_attribute_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The name, ID, or ARN of the application. "
        explode: false
        in: path
        name: application
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/applications/[-.\\w]+)"
          type: string
        style: simple
      - description: " The name, ID, or ARN of the attribute group that holds the\
          \ attributes to describe the application. "
        explode: false
        in: path
        name: attributeGroup
        required: true
        schema:
          maxLength: 512
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/attribute-groups/[-.\\w]+)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateAttributeGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "Associates an attribute group with an application to augment the\
        \ application's metadata with the group's attributes. This feature enables\
        \ applications to be described with user-defined details that are machine-readable,\
        \ such as third-party integrations."
      operationId: associate_attribute_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The name, ID, or ARN of the application. "
        explode: false
        in: path
        name: application
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/applications/[-.\\w]+)"
          type: string
        style: simple
      - description: " The name, ID, or ARN of the attribute group that holds the\
          \ attributes to describe the application. "
        explode: false
        in: path
        name: attributeGroup
        required: true
        schema:
          maxLength: 512
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/attribute-groups/[-.\\w]+)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateAttributeGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{application}/resources:
    get:
      description: "<p> Lists all of the resources that are associated with the specified\
        \ application. Results are paginated. </p> <note> <p> If you share an application,\
        \ and a consumer account associates a tag query to the application, all of\
        \ the users who can access the application can also view the tag values in\
        \ all accounts that are associated with it using this API. </p> </note>"
      operationId: list_associated_resources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The name, ID, or ARN of the application. "
        explode: false
        in: path
        name: application
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/applications/[-.\\w]+)"
          type: string
        style: simple
      - description: 'The token to use to get the next page of results after a previous
          API call. '
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2024
          minLength: 1
          pattern: "[A-Za-z0-9+/=]+"
          type: string
        style: form
      - description: "The upper bound of the number of results to return (cannot exceed\
          \ 25). If this parameter is omitted, it defaults to 25. This value is optional."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociatedResourcesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{application}/resources/{resourceType}/{resource}:
    delete:
      description: Disassociates a resource from application. Both the resource and
        the application can be specified either by ID or name.
      operationId: disassociate_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ID of the application.
        explode: false
        in: path
        name: application
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/applications/[-.\\w]+)"
          type: string
        style: simple
      - description: The type of the resource that is being disassociated.
        explode: false
        in: path
        name: resourceType
        required: true
        schema:
          enum:
          - CFN_STACK
          - RESOURCE_TAG_VALUE
          type: string
        style: simple
      - description: The name or ID of the resource.
        explode: false
        in: path
        name: resource
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: \S+
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Gets the resource associated with the application.
      operationId: get_associated_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The name, ID, or ARN of the application. "
        explode: false
        in: path
        name: application
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/applications/[-.\\w]+)"
          type: string
        style: simple
      - description: The type of resource associated with the application.
        explode: false
        in: path
        name: resourceType
        required: true
        schema:
          enum:
          - CFN_STACK
          - RESOURCE_TAG_VALUE
          type: string
        style: simple
      - description: The name or ID of the resource associated with the application.
        explode: false
        in: path
        name: resource
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: \S+
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssociatedResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: " Associates a resource with an application. The resource can be\
        \ specified by its ARN or name. The application can be specified by ARN, ID,\
        \ or name. "
      operationId: associate_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The name, ID, or ARN of the application. "
        explode: false
        in: path
        name: application
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/applications/[-.\\w]+)"
          type: string
        style: simple
      - description: The type of resource of which the application will be associated.
        explode: false
        in: path
        name: resourceType
        required: true
        schema:
          enum:
          - CFN_STACK
          - RESOURCE_TAG_VALUE
          type: string
        style: simple
      - description: The name or ID of the resource of which the application will
          be associated.
        explode: false
        in: path
        name: resource
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: \S+
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /attribute-groups:
    get:
      description: Lists all attribute groups which you have access to. Results are
        paginated.
      operationId: list_attribute_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The token to use to get the next page of results after a previous
          API call. '
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2024
          minLength: 1
          pattern: "[A-Za-z0-9+/=]+"
          type: string
        style: form
      - description: "The upper bound of the number of results to return (cannot exceed\
          \ 25). If this parameter is omitted, it defaults to 25. This value is optional."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttributeGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new attribute group as a container for user-defined attributes.
        This feature enables users to have full control over their cloud application's
        metadata in a rich machine-readable format to facilitate integration with
        automated workflows and third-party tools.
      operationId: create_attribute_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAttributeGroup_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAttributeGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /attribute-groups/{attributeGroup}:
    delete:
      description: "Deletes an attribute group, specified either by its attribute\
        \ group ID, name, or ARN."
      operationId: delete_attribute_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The name, ID, or ARN of the attribute group that holds the\
          \ attributes to describe the application. "
        explode: false
        in: path
        name: attributeGroup
        required: true
        schema:
          maxLength: 512
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/attribute-groups/[-.\\w]+)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAttributeGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: " Retrieves an attribute group by its ARN, ID, or name. The attribute\
        \ group can be specified by its ARN, ID, or name. "
      operationId: get_attribute_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The name, ID, or ARN of the attribute group that holds the\
          \ attributes to describe the application. "
        explode: false
        in: path
        name: attributeGroup
        required: true
        schema:
          maxLength: 512
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/attribute-groups/[-.\\w]+)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAttributeGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: 'Updates an existing attribute group with new details. '
      operationId: update_attribute_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The name, ID, or ARN of the attribute group that holds the\
          \ attributes to describe the application. "
        explode: false
        in: path
        name: attributeGroup
        required: true
        schema:
          maxLength: 512
          minLength: 1
          pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
            d:\\d{12}:/attribute-groups/[-.\\w]+)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAttributeGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAttributeGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /configuration:
    get:
      description: ' Retrieves a <code>TagKey</code> configuration from an account. '
      operationId: get_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: ' Associates a <code>TagKey</code> configuration to an account. '
      operationId: put_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sync/{resourceType}/{resource}:
    post:
      description: "<p>Syncs the resource with current AppRegistry records.</p> <p>Specifically,\
        \ the resource’s AppRegistry system tags sync with its associated application.\
        \ We remove the resource's AppRegistry system tags if it does not associate\
        \ with the application. The caller must have permissions to read and update\
        \ the resource.</p>"
      operationId: sync_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The type of resource of which the application will be associated.
        explode: false
        in: path
        name: resourceType
        required: true
        schema:
          enum:
          - CFN_STACK
          - RESOURCE_TAG_VALUE
          type: string
        style: simple
      - description: "An entity you can work with and specify with a name or ID. Examples\
          \ include an Amazon EC2 instance, an Amazon Web Services CloudFormation\
          \ stack, or an Amazon S3 bucket."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: \S+
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags/{resourceArn}:
    get:
      description: Lists all of the tags on the resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon resource name (ARN) that specifies the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\\
            d{1})?:(\\d{12})?:(.*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Assigns one or more tags (key-value pairs) to the specified\
        \ resource.</p> <p>Each tag consists of a key and an optional value. If a\
        \ tag with the same key is already associated with the resource, this action\
        \ updates its value.</p> <p>This operation returns an empty response if the\
        \ call was successful.</p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon resource name (ARN) that specifies the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\\
            d{1})?:(\\d{12})?:(.*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: <p>Removes tags from a resource.</p> <p>This operation returns
        an empty response if the call was successful.</p>
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon resource name (ARN) that specifies the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\\
            d{1})?:(\\d{12})?:(.*)"
          type: string
        style: simple
      - description: A list of the tag keys to remove from the specified resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateAttributeGroupResponse:
      example:
        attributeGroupArn: ""
        applicationArn: ""
      properties:
        applicationArn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          - description: The Amazon resource name (ARN) of the application that was
              augmented with attributes.
          title: applicationArn
        attributeGroupArn:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupArn'
          - description: The Amazon resource name (ARN) of the attribute group that
              contains the application's new attributes.
          title: attributeGroupArn
      title: AssociateAttributeGroupResponse
      type: object
    ResourceNotFoundException: {}
    ValidationException: {}
    InternalServerException: {}
    ServiceQuotaExceededException: {}
    ConflictException: {}
    AssociateResourceResponse:
      example:
        applicationArn: ""
        resourceArn: ""
      properties:
        applicationArn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          - description: The Amazon resource name (ARN) of the application that was
              augmented with attributes.
          title: applicationArn
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon resource name (ARN) that specifies the resource.
          title: resourceArn
      title: AssociateResourceResponse
      type: object
    ThrottlingException: {}
    CreateApplicationResponse:
      example:
        application:
          creationTime: ""
          name: ""
          description: ""
          id: ""
          arn: ""
          lastUpdateTime: ""
          tags: ""
      properties:
        application:
          $ref: '#/components/schemas/CreateApplicationResponse_application'
      title: CreateApplicationResponse
      type: object
    TagValue:
      maxLength: 256
      pattern: "[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*"
      title: TagValue
      type: string
    CreateAttributeGroupResponse:
      example:
        attributeGroup:
          creationTime: ""
          name: ""
          description: ""
          id: ""
          arn: ""
          lastUpdateTime: ""
          tags: ""
      properties:
        attributeGroup:
          $ref: '#/components/schemas/CreateAttributeGroupResponse_attributeGroup'
      title: CreateAttributeGroupResponse
      type: object
    DeleteApplicationResponse:
      example:
        application:
          creationTime: ""
          name: ""
          description: ""
          id: ""
          arn: ""
          lastUpdateTime: ""
      properties:
        application:
          $ref: '#/components/schemas/DeleteApplicationResponse_application'
      title: DeleteApplicationResponse
      type: object
    DeleteAttributeGroupResponse:
      example:
        attributeGroup:
          creationTime: ""
          createdBy: ""
          name: ""
          description: ""
          id: ""
          arn: ""
          lastUpdateTime: ""
      properties:
        attributeGroup:
          $ref: '#/components/schemas/DeleteAttributeGroupResponse_attributeGroup'
      title: DeleteAttributeGroupResponse
      type: object
    DisassociateAttributeGroupResponse:
      example:
        attributeGroupArn: ""
        applicationArn: ""
      properties:
        applicationArn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          - description: The Amazon resource name (ARN) that specifies the application.
          title: applicationArn
        attributeGroupArn:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupArn'
          - description: The Amazon resource name (ARN) that specifies the attribute
              group.
          title: attributeGroupArn
      title: DisassociateAttributeGroupResponse
      type: object
    DisassociateResourceResponse:
      example:
        applicationArn: ""
        resourceArn: ""
      properties:
        applicationArn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          - description: The Amazon resource name (ARN) that specifies the application.
          title: applicationArn
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon resource name (ARN) that specifies the resource.
          title: resourceArn
      title: DisassociateResourceResponse
      type: object
    GetApplicationResponse:
      example:
        associatedResourceCount: ""
        creationTime: ""
        name: ""
        description: ""
        id: ""
        arn: ""
        integrations:
          resourceGroup:
            errorMessage: ""
            state: ""
            arn: ""
        lastUpdateTime: ""
        tags: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The identifier of the application.
          title: id
        arn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          - description: The Amazon resource name (ARN) that specifies the application
              across services.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the application. The name must be unique in the
              region in which you are creating the application.
          title: name
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the application.
          title: description
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO-8601 formatted timestamp of the moment when the application
              was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO-8601 formatted timestamp of the moment when the application
              was last updated.
          title: lastUpdateTime
        associatedResourceCount:
          allOf:
          - $ref: '#/components/schemas/AssociationCount'
          - description: The number of top-level resources that were registered as
              part of this application.
          title: associatedResourceCount
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs associated with the application.
          title: tags
        integrations:
          $ref: '#/components/schemas/GetApplicationResponse_integrations'
      title: GetApplicationResponse
      type: object
    GetAssociatedResourceResponse:
      example:
        resource:
          associationTime: ""
          name: ""
          arn: ""
          integrations:
            resourceGroup:
              errorMessage: ""
              state: ""
              arn: ""
      properties:
        resource:
          $ref: '#/components/schemas/GetAssociatedResourceResponse_resource'
      title: GetAssociatedResourceResponse
      type: object
    GetAttributeGroupResponse:
      example:
        creationTime: ""
        createdBy: ""
        name: ""
        description: ""
        attributes: ""
        id: ""
        arn: ""
        lastUpdateTime: ""
        tags: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupId'
          - description: The identifier of the attribute group.
          title: id
        arn:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupArn'
          - description: The Amazon resource name (ARN) that specifies the attribute
              group across services.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the attribute group.
          title: name
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the attribute group that the user provides.
          title: description
        attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: A JSON string in the form of nested key-value pairs that
              represent the attributes in the group and describes an application and
              its components.
          title: attributes
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO-8601 formatted timestamp of the moment the attribute
              group was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO-8601 formatted timestamp of the moment the attribute
              group was last updated. This time is the same as the creationTime for
              a newly created attribute group.
          title: lastUpdateTime
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs associated with the attribute group.
          title: tags
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          - description: The service principal that created the attribute group.
          title: createdBy
      title: GetAttributeGroupResponse
      type: object
    GetConfigurationResponse:
      example:
        configuration:
          tagQueryConfiguration:
            tagKey: ""
      properties:
        configuration:
          $ref: '#/components/schemas/GetConfigurationResponse_configuration'
      title: GetConfigurationResponse
      type: object
    ListApplicationsResponse:
      example:
        nextToken: ""
        applications: ""
      properties:
        applications:
          allOf:
          - $ref: '#/components/schemas/ApplicationSummaries'
          - description: This list of applications.
          title: applications
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'The token to use to get the next page of results after a
              previous API call. '
          title: nextToken
      title: ListApplicationsResponse
      type: object
    ListAssociatedAttributeGroupsResponse:
      example:
        nextToken: ""
        attributeGroups: ""
      properties:
        attributeGroups:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupIds'
          - description: A list of attribute group IDs.
          title: attributeGroups
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'The token to use to get the next page of results after a
              previous API call. '
          title: nextToken
      title: ListAssociatedAttributeGroupsResponse
      type: object
    ListAssociatedResourcesResponse:
      example:
        nextToken: ""
        resources: ""
      properties:
        resources:
          allOf:
          - $ref: '#/components/schemas/Resources'
          - description: Information about the resources.
          title: resources
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'The token to use to get the next page of results after a
              previous API call. '
          title: nextToken
      title: ListAssociatedResourcesResponse
      type: object
    ListAttributeGroupsResponse:
      example:
        nextToken: ""
        attributeGroups: ""
      properties:
        attributeGroups:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupSummaries'
          - description: This list of attribute groups.
          title: attributeGroups
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'The token to use to get the next page of results after a
              previous API call. '
          title: nextToken
      title: ListAttributeGroupsResponse
      type: object
    ListAttributeGroupsForApplicationResponse:
      example:
        nextToken: ""
        attributeGroupsDetails: ""
      properties:
        attributeGroupsDetails:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupDetailsList'
          - description: ' The details related to a specific attribute group. '
          title: attributeGroupsDetails
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to get the next page of results after a
              previous API call.
          title: nextToken
      title: ListAttributeGroupsForApplicationResponse
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags on the resource.
          title: tags
      title: ListTagsForResourceResponse
      type: object
    TagQueryConfiguration:
      description: ' The definition of <code>tagQuery</code>. Specifies which resources
        are associated with an application. '
      properties:
        tagKey:
          allOf:
          - $ref: '#/components/schemas/TagKeyConfig'
          - description: ' Condition in the IAM policy that associates resources to
              an application. '
          title: tagKey
      title: TagQueryConfiguration
      type: object
    SyncResourceResponse:
      example:
        actionTaken: ""
        applicationArn: ""
        resourceArn: ""
      properties:
        applicationArn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          - description: The Amazon resource name (ARN) that specifies the application.
          title: applicationArn
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon resource name (ARN) that specifies the resource.
          title: resourceArn
        actionTaken:
          allOf:
          - $ref: '#/components/schemas/SyncAction'
          - description: "The results of the output if an application is associated\
              \ with an ARN value, which could be <code>syncStarted</code> or None."
          title: actionTaken
      title: SyncResourceResponse
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z+-=._:/]+"
      title: TagKey
      type: string
    UpdateApplicationResponse:
      example:
        application:
          creationTime: ""
          name: ""
          description: ""
          id: ""
          arn: ""
          lastUpdateTime: ""
          tags: ""
      properties:
        application:
          $ref: '#/components/schemas/UpdateApplicationResponse_application'
      title: UpdateApplicationResponse
      type: object
    UpdateAttributeGroupResponse:
      example:
        attributeGroup:
          creationTime: ""
          name: ""
          description: ""
          id: ""
          arn: ""
          lastUpdateTime: ""
          tags: ""
      properties:
        attributeGroup:
          $ref: '#/components/schemas/UpdateAttributeGroupResponse_attributeGroup'
      title: UpdateAttributeGroupResponse
      type: object
    AppRegistryConfiguration:
      description: ' Includes all of the AppRegistry settings. '
      properties:
        tagQueryConfiguration:
          $ref: '#/components/schemas/PutConfiguration_request_configuration_tagQueryConfiguration'
      title: AppRegistryConfiguration
      type: object
    ApplicationId:
      maxLength: 26
      minLength: 26
      pattern: "[a-z0-9]+"
      type: string
    ApplicationArn:
      pattern: "arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:/applications/[a-z0-9]+"
      type: string
    Name:
      maxLength: 256
      minLength: 1
      pattern: "[-.\\w]+"
      type: string
    Description:
      maxLength: 1024
      type: string
    Timestamp:
      format: date-time
      type: string
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 0
      type: object
    Application:
      description: Represents a Amazon Web Services Service Catalog AppRegistry application
        that is the top-level node in a hierarchy of related cloud resource abstractions.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The identifier of the application.
          title: id
        arn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          - description: The Amazon resource name (ARN) that specifies the application
              across services.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the application. The name must be unique in the
              region in which you are creating the application.
          title: name
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the application.
          title: description
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO-8601 formatted timestamp of the moment when the application
              was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The ISO-8601 formatted timestamp of the moment when the
              application was last updated.'
          title: lastUpdateTime
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs you can use to associate with the application.
          title: tags
      title: Application
      type: object
    ApplicationSpecifier:
      maxLength: 256
      minLength: 1
      pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
        d:\\d{12}:/applications/[-.\\w]+)"
      type: string
    ApplicationSummary:
      description: Summary of a Amazon Web Services Service Catalog AppRegistry application.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The identifier of the application.
          title: id
        arn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          - description: The Amazon resource name (ARN) that specifies the application
              across services.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the application. The name must be unique in the
              region in which you are creating the application.
          title: name
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the application.
          title: description
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO-8601 formatted timestamp of the moment when the application
              was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The ISO-8601 formatted timestamp of the moment when the
              application was last updated.'
          title: lastUpdateTime
      title: ApplicationSummary
      type: object
    ApplicationSummaries:
      items:
        $ref: '#/components/schemas/ApplicationSummary'
      type: array
    Arn:
      maxLength: 1600
      minLength: 1
      pattern: "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\\
        d{1})?:(\\d{12})?:(.*)"
      type: string
    AttributeGroupSpecifier:
      maxLength: 512
      minLength: 1
      pattern: "([-.\\w]+)|(arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\\
        d:\\d{12}:/attribute-groups/[-.\\w]+)"
      type: string
    AssociateAttributeGroupRequest:
      properties: {}
      title: AssociateAttributeGroupRequest
      type: object
    AttributeGroupArn:
      pattern: "arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:/attribute-groups/[-.\\\
        w]+"
      type: string
    ResourceType:
      enum:
      - CFN_STACK
      - RESOURCE_TAG_VALUE
      title: ResourceType
      type: string
    ResourceSpecifier:
      maxLength: 256
      minLength: 1
      pattern: \S+
      type: string
    AssociateResourceRequest:
      properties: {}
      title: AssociateResourceRequest
      type: object
    AssociationCount:
      minimum: 0
      type: integer
    AttributeGroupId:
      maxLength: 256
      minLength: 1
      pattern: "[-.\\w]+"
      title: AttributeGroupId
      type: string
    AttributeGroup:
      description: Represents a Amazon Web Services Service Catalog AppRegistry attribute
        group that is rich metadata which describes an application and its components.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupId'
          - description: The globally unique attribute group identifier of the attribute
              group.
          title: id
        arn:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupArn'
          - description: The Amazon resource name (ARN) that specifies the attribute
              group across services.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the attribute group.
          title: name
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the attribute group that the user provides.
          title: description
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO-8601 formatted timestamp of the moment the attribute
              group was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO-8601 formatted timestamp of the moment the attribute
              group was last updated. This time is the same as the creationTime for
              a newly created attribute group.
          title: lastUpdateTime
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs you can use to associate with the attribute
              group.
          title: tags
      title: AttributeGroup
      type: object
    CreatedBy:
      maxLength: 128
      minLength: 1
      pattern: "^(?!-)([a-z0-9-]+\\.)+(aws\\.internal|amazonaws\\.com(\\.cn)?)$"
      type: string
    AttributeGroupDetails:
      description: ' The details related to a specific AttributeGroup. '
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupId'
          - description: The unique identifier of the attribute group.
          title: id
        arn:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupArn'
          - description: The Amazon resource name (ARN) that specifies the attribute
              group.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - deprecated: true
            description: <important> <p> This field is no longer supported. We recommend
              you don't use the field when using <code>ListAttributeGroupsForApplication</code>.
              </p> </important> <p> The name of the attribute group. </p>This field
              is deprecated. We recommend not using the field when using ListAttributeGroupsForApplication.
          title: name
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          - description: The service principal that created the attribute group.
          title: createdBy
      title: AttributeGroupDetails
      type: object
    AttributeGroupDetailsList:
      items:
        $ref: '#/components/schemas/AttributeGroupDetails'
      type: array
    AttributeGroupIds:
      items:
        $ref: '#/components/schemas/AttributeGroupId'
      type: array
    AttributeGroupSummary:
      description: Summary of a Amazon Web Services Service Catalog AppRegistry attribute
        group.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupId'
          - description: The globally unique attribute group identifier of the attribute
              group.
          title: id
        arn:
          allOf:
          - $ref: '#/components/schemas/AttributeGroupArn'
          - description: The Amazon resource name (ARN) that specifies the attribute
              group across services.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the attribute group.
          title: name
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the attribute group that the user provides.
          title: description
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO-8601 formatted timestamp of the moment the attribute
              group was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO-8601 formatted timestamp of the moment the attribute
              group was last updated. This time is the same as the creationTime for
              a newly created attribute group.
          title: lastUpdateTime
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          - description: The service principal that created the attribute group.
          title: createdBy
      title: AttributeGroupSummary
      type: object
    AttributeGroupSummaries:
      items:
        $ref: '#/components/schemas/AttributeGroupSummary'
      type: array
    Attributes:
      maxLength: 8000
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
      type: string
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      type: string
    CreateApplicationRequest:
      example:
        clientToken: ""
        name: ""
        description: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the application. The name must be unique in the
              region in which you are creating the application.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the application.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs you can use to associate with the application.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If you retry a request that completed successfully using the same\
              \ client token and the same parameters, the retry succeeds without performing\
              \ any further actions. If you retry a successful request using the same\
              \ client token, but one or more of the parameters are different, the\
              \ retry fails."
      required:
      - clientToken
      - name
      title: CreateApplicationRequest
      type: object
    CreateAttributeGroupRequest:
      example:
        clientToken: ""
        name: ""
        description: ""
        attributes: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the attribute group.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the attribute group that the user provides.
        attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: A JSON string in the form of nested key-value pairs that
              represent the attributes in the group and describes an application and
              its components.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs you can use to associate with the attribute
              group.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If you retry a request that completed successfully using the same\
              \ client token and the same parameters, the retry succeeds without performing\
              \ any further actions. If you retry a successful request using the same\
              \ client token, but one or more of the parameters are different, the\
              \ retry fails."
      required:
      - attributes
      - clientToken
      - name
      title: CreateAttributeGroupRequest
      type: object
    DeleteApplicationRequest:
      properties: {}
      title: DeleteApplicationRequest
      type: object
    DeleteAttributeGroupRequest:
      properties: {}
      title: DeleteAttributeGroupRequest
      type: object
    DisassociateAttributeGroupRequest:
      properties: {}
      title: DisassociateAttributeGroupRequest
      type: object
    DisassociateResourceRequest:
      properties: {}
      title: DisassociateResourceRequest
      type: object
    GetApplicationRequest:
      properties: {}
      title: GetApplicationRequest
      type: object
    Integrations:
      description: ' The information about the service integration.'
      properties:
        resourceGroup:
          $ref: '#/components/schemas/Integrations_resourceGroup'
      title: Integrations
      type: object
    GetAssociatedResourceRequest:
      properties: {}
      title: GetAssociatedResourceRequest
      type: object
    Resource:
      description: ' The information about the resource.'
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceSpecifier'
          - description: The name of the resource.
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/StackArn'
          - description: The Amazon resource name (ARN) of the resource.
          title: arn
        associationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the resource was associated with the application.
          title: associationTime
        integrations:
          $ref: '#/components/schemas/Resource_integrations'
      title: Resource
      type: object
    GetAttributeGroupRequest:
      properties: {}
      title: GetAttributeGroupRequest
      type: object
    ResourceGroup:
      description: The information about the resource group integration.
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/ResourceGroupState'
          - description: <p>The state of the propagation process for the resource
              group. The states includes:</p> <p> <code>CREATING </code>if the resource
              group is in the process of being created.</p> <p> <code>CREATE_COMPLETE</code>
              if the resource group was created successfully.</p> <p> <code>CREATE_FAILED</code>
              if the resource group failed to be created.</p> <p> <code>UPDATING</code>
              if the resource group is in the process of being updated.</p> <p> <code>UPDATE_COMPLETE</code>
              if the resource group updated successfully.</p> <p> <code>UPDATE_FAILED</code>
              if the resource group could not update successfully.</p>
          title: state
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon resource name (ARN) of the resource group.
          title: arn
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message that generates when the propagation process
              for the resource group fails.
          title: errorMessage
      title: ResourceGroup
      type: object
    NextToken:
      maxLength: 2024
      minLength: 1
      pattern: "[A-Za-z0-9+/=]+"
      type: string
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ListApplicationsRequest:
      properties: {}
      title: ListApplicationsRequest
      type: object
    ListAssociatedAttributeGroupsRequest:
      properties: {}
      title: ListAssociatedAttributeGroupsRequest
      type: object
    ListAssociatedResourcesRequest:
      properties: {}
      title: ListAssociatedResourcesRequest
      type: object
    Resources:
      items:
        $ref: '#/components/schemas/ResourceInfo'
      type: array
    ListAttributeGroupsForApplicationRequest:
      properties: {}
      title: ListAttributeGroupsForApplicationRequest
      type: object
    ListAttributeGroupsRequest:
      properties: {}
      title: ListAttributeGroupsRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    PutConfigurationRequest:
      example:
        configuration:
          tagQueryConfiguration:
            tagKey: ""
      properties:
        configuration:
          $ref: '#/components/schemas/PutConfigurationRequest_configuration'
      required:
      - configuration
      title: PutConfigurationRequest
      type: object
    StackArn:
      pattern: "arn:aws[-a-z]*:cloudformation:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:stack/[a-zA-Z][-A-Za-z0-9]{0,127}/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}"
      type: string
    ResourceIntegrations:
      description: The service integration information about the resource.
      properties:
        resourceGroup:
          $ref: '#/components/schemas/ResourceIntegrations_resourceGroup'
      title: ResourceIntegrations
      type: object
    ResourceDetails:
      description: ' The details related to the resource. '
      properties:
        tagValue:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value of the tag.
          title: tagValue
      title: ResourceDetails
      type: object
    ResourceGroupState:
      enum:
      - CREATING
      - CREATE_COMPLETE
      - CREATE_FAILED
      - UPDATING
      - UPDATE_COMPLETE
      - UPDATE_FAILED
      title: ResourceGroupState
      type: string
    String:
      type: string
    ResourceInfo:
      description: The information about the resource.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceSpecifier'
          - description: The name of the resource.
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon resource name (ARN) that specifies the resource
              across services.
          title: arn
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: ' Provides information about the Service Catalog App Registry
              resource type. '
          title: resourceType
        resourceDetails:
          $ref: '#/components/schemas/ResourceInfo_resourceDetails'
      title: ResourceInfo
      type: object
    SyncAction:
      enum:
      - START_SYNC
      - NO_ACTION
      title: SyncAction
      type: string
    SyncResourceRequest:
      properties: {}
      title: SyncResourceRequest
      type: object
    TagKeyConfig:
      maxLength: 128
      minLength: 0
      pattern: "^(?!\\s+$)[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*"
      type: string
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The new or modified tags for the resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateApplicationRequest:
      example:
        name: ""
        description: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - deprecated: true
            description: "Deprecated: The new name of the application. The name must\
              \ be unique in the region in which you are updating the application.\
              \ Please do not use this field as we have stopped supporting name updates.Name\
              \ update for application is deprecated."
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The new description of the application.
      title: UpdateApplicationRequest
      type: object
    UpdateAttributeGroupRequest:
      example:
        name: ""
        description: ""
        attributes: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - deprecated: true
            description: "Deprecated: The new name of the attribute group. The name\
              \ must be unique in the region in which you are updating the attribute\
              \ group. Please do not use this field as we have stopped supporting\
              \ name updates.Name update for attribute group is deprecated."
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the attribute group that the user provides.
        attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: A JSON string in the form of nested key-value pairs that
              represent the attributes in the group and describes an application and
              its components.
      title: UpdateAttributeGroupRequest
      type: object
    CreateApplication_request:
      properties:
        name:
          description: The name of the application. The name must be unique in the
            region in which you are creating the application.
          maxLength: 256
          minLength: 1
          pattern: "[-.\\w]+"
          title: name
          type: string
        description:
          description: The description of the application.
          maxLength: 1024
          title: description
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Key-value pairs you can use to associate with the application.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
        clientToken:
          description: "A unique identifier that you provide to ensure idempotency.\
            \ If you retry a request that completed successfully using the same client\
            \ token and the same parameters, the retry succeeds without performing\
            \ any further actions. If you retry a successful request using the same\
            \ client token, but one or more of the parameters are different, the retry\
            \ fails."
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
          title: clientToken
          type: string
      required:
      - clientToken
      - name
      title: CreateApplication_request
      type: object
    CreateAttributeGroup_request:
      properties:
        name:
          description: The name of the attribute group.
          maxLength: 256
          minLength: 1
          pattern: "[-.\\w]+"
          title: name
          type: string
        description:
          description: The description of the attribute group that the user provides.
          maxLength: 1024
          title: description
          type: string
        attributes:
          description: A JSON string in the form of nested key-value pairs that represent
            the attributes in the group and describes an application and its components.
          maxLength: 8000
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
          title: attributes
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Key-value pairs you can use to associate with the attribute
            group.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
        clientToken:
          description: "A unique identifier that you provide to ensure idempotency.\
            \ If you retry a request that completed successfully using the same client\
            \ token and the same parameters, the retry succeeds without performing\
            \ any further actions. If you retry a successful request using the same\
            \ client token, but one or more of the parameters are different, the retry\
            \ fails."
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
          title: clientToken
          type: string
      required:
      - attributes
      - clientToken
      - name
      title: CreateAttributeGroup_request
      type: object
    UpdateApplication_request:
      properties:
        name:
          description: "Deprecated: The new name of the application. The name must\
            \ be unique in the region in which you are updating the application. Please\
            \ do not use this field as we have stopped supporting name updates."
          maxLength: 256
          minLength: 1
          pattern: "[-.\\w]+"
          title: name
          type: string
        description:
          description: The new description of the application.
          maxLength: 1024
          title: description
          type: string
      title: UpdateApplication_request
      type: object
    UpdateAttributeGroup_request:
      properties:
        name:
          description: "Deprecated: The new name of the attribute group. The name\
            \ must be unique in the region in which you are updating the attribute\
            \ group. Please do not use this field as we have stopped supporting name\
            \ updates."
          maxLength: 256
          minLength: 1
          pattern: "[-.\\w]+"
          title: name
          type: string
        description:
          description: The description of the attribute group that the user provides.
          maxLength: 1024
          title: description
          type: string
        attributes:
          description: A JSON string in the form of nested key-value pairs that represent
            the attributes in the group and describes an application and its components.
          maxLength: 8000
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
          title: attributes
          type: string
      title: UpdateAttributeGroup_request
      type: object
    PutConfiguration_request_configuration_tagQueryConfiguration:
      allOf:
      - $ref: '#/components/schemas/TagQueryConfiguration'
      - description: ' Includes the definition of a <code>tagQuery</code>. '
      example:
        tagKey: ""
      title: PutConfiguration_request_configuration_tagQueryConfiguration
    PutConfiguration_request_configuration:
      description: ' Includes all of the AppRegistry settings. '
      properties:
        tagQueryConfiguration:
          $ref: '#/components/schemas/PutConfiguration_request_configuration_tagQueryConfiguration'
      title: PutConfiguration_request_configuration
      type: object
    PutConfiguration_request:
      properties:
        configuration:
          $ref: '#/components/schemas/PutConfiguration_request_configuration'
      required:
      - configuration
      title: PutConfiguration_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The new or modified tags for the resource.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    CreateApplicationResponse_application:
      allOf:
      - $ref: '#/components/schemas/Application'
      - description: Information about the application.
      example:
        creationTime: ""
        name: ""
        description: ""
        id: ""
        arn: ""
        lastUpdateTime: ""
        tags: ""
      title: CreateApplicationResponse_application
    CreateAttributeGroupResponse_attributeGroup:
      allOf:
      - $ref: '#/components/schemas/AttributeGroup'
      - description: Information about the attribute group.
      example:
        creationTime: ""
        name: ""
        description: ""
        id: ""
        arn: ""
        lastUpdateTime: ""
        tags: ""
      title: CreateAttributeGroupResponse_attributeGroup
    DeleteApplicationResponse_application:
      allOf:
      - $ref: '#/components/schemas/ApplicationSummary'
      - description: Information about the deleted application.
      example:
        creationTime: ""
        name: ""
        description: ""
        id: ""
        arn: ""
        lastUpdateTime: ""
      title: DeleteApplicationResponse_application
    DeleteAttributeGroupResponse_attributeGroup:
      allOf:
      - $ref: '#/components/schemas/AttributeGroupSummary'
      - description: Information about the deleted attribute group.
      example:
        creationTime: ""
        createdBy: ""
        name: ""
        description: ""
        id: ""
        arn: ""
        lastUpdateTime: ""
      title: DeleteAttributeGroupResponse_attributeGroup
    GetApplicationResponse_integrations:
      allOf:
      - $ref: '#/components/schemas/Integrations'
      - description: " The information about the integration of the application with\
          \ other services, such as Resource Groups. "
      example:
        resourceGroup:
          errorMessage: ""
          state: ""
          arn: ""
      title: GetApplicationResponse_integrations
    GetAssociatedResourceResponse_resource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - description: The resource associated with the application.
      example:
        associationTime: ""
        name: ""
        arn: ""
        integrations:
          resourceGroup:
            errorMessage: ""
            state: ""
            arn: ""
      title: GetAssociatedResourceResponse_resource
    GetConfigurationResponse_configuration:
      allOf:
      - $ref: '#/components/schemas/AppRegistryConfiguration'
      - description: ' Retrieves <code>TagKey</code> configuration from an account. '
      example:
        tagQueryConfiguration:
          tagKey: ""
      title: GetConfigurationResponse_configuration
    UpdateApplicationResponse_application:
      allOf:
      - $ref: '#/components/schemas/Application'
      - description: The updated information of the application.
      example:
        creationTime: ""
        name: ""
        description: ""
        id: ""
        arn: ""
        lastUpdateTime: ""
        tags: ""
      title: UpdateApplicationResponse_application
    UpdateAttributeGroupResponse_attributeGroup:
      allOf:
      - $ref: '#/components/schemas/AttributeGroup'
      - description: The updated information of the attribute group.
      example:
        creationTime: ""
        name: ""
        description: ""
        id: ""
        arn: ""
        lastUpdateTime: ""
        tags: ""
      title: UpdateAttributeGroupResponse_attributeGroup
    Integrations_resourceGroup:
      allOf:
      - $ref: '#/components/schemas/ResourceGroup'
      - description: ' The information about the resource group integration.'
      example:
        errorMessage: ""
        state: ""
        arn: ""
      title: Integrations_resourceGroup
    Resource_integrations:
      allOf:
      - $ref: '#/components/schemas/ResourceIntegrations'
      - description: 'The service integration information about the resource. '
      example:
        resourceGroup:
          errorMessage: ""
          state: ""
          arn: ""
      title: Resource_integrations
    PutConfigurationRequest_configuration:
      allOf:
      - $ref: '#/components/schemas/AppRegistryConfiguration'
      - description: ' Associates a <code>TagKey</code> configuration to an account. '
      example:
        tagQueryConfiguration:
          tagKey: ""
      title: PutConfigurationRequest_configuration
    ResourceIntegrations_resourceGroup:
      allOf:
      - $ref: '#/components/schemas/ResourceGroup'
      - description: The information about the integration of Resource Groups.
      example:
        errorMessage: ""
        state: ""
        arn: ""
      title: ResourceIntegrations_resourceGroup
    ResourceInfo_resourceDetails:
      allOf:
      - $ref: '#/components/schemas/ResourceDetails'
      - description: ' The details related to the resource. '
      title: ResourceInfo_resourceDetails
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
