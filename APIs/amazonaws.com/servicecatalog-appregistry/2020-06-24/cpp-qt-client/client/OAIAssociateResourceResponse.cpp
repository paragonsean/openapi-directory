/**
 * AWS Service Catalog App Registry
 *  Amazon Web Services Service Catalog AppRegistry enables organizations to understand the application context of their Amazon Web Services resources. AppRegistry provides a repository of your applications, their resources, and the application metadata that you use within your enterprise.
 *
 * The version of the OpenAPI document: 2020-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociateResourceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociateResourceResponse::OAIAssociateResourceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociateResourceResponse::OAIAssociateResourceResponse() {
    this->initializeModel();
}

OAIAssociateResourceResponse::~OAIAssociateResourceResponse() {}

void OAIAssociateResourceResponse::initializeModel() {

    m_application_arn_isSet = false;
    m_application_arn_isValid = false;

    m_resource_arn_isSet = false;
    m_resource_arn_isValid = false;
}

void OAIAssociateResourceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociateResourceResponse::fromJsonObject(QJsonObject json) {

    m_application_arn_isValid = ::OpenAPI::fromJsonValue(m_application_arn, json[QString("applicationArn")]);
    m_application_arn_isSet = !json[QString("applicationArn")].isNull() && m_application_arn_isValid;

    m_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_arn, json[QString("resourceArn")]);
    m_resource_arn_isSet = !json[QString("resourceArn")].isNull() && m_resource_arn_isValid;
}

QString OAIAssociateResourceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociateResourceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_application_arn_isSet) {
        obj.insert(QString("applicationArn"), ::OpenAPI::toJsonValue(m_application_arn));
    }
    if (m_resource_arn_isSet) {
        obj.insert(QString("resourceArn"), ::OpenAPI::toJsonValue(m_resource_arn));
    }
    return obj;
}

QString OAIAssociateResourceResponse::getApplicationArn() const {
    return m_application_arn;
}
void OAIAssociateResourceResponse::setApplicationArn(const QString &application_arn) {
    m_application_arn = application_arn;
    m_application_arn_isSet = true;
}

bool OAIAssociateResourceResponse::is_application_arn_Set() const{
    return m_application_arn_isSet;
}

bool OAIAssociateResourceResponse::is_application_arn_Valid() const{
    return m_application_arn_isValid;
}

QString OAIAssociateResourceResponse::getResourceArn() const {
    return m_resource_arn;
}
void OAIAssociateResourceResponse::setResourceArn(const QString &resource_arn) {
    m_resource_arn = resource_arn;
    m_resource_arn_isSet = true;
}

bool OAIAssociateResourceResponse::is_resource_arn_Set() const{
    return m_resource_arn_isSet;
}

bool OAIAssociateResourceResponse::is_resource_arn_Valid() const{
    return m_resource_arn_isValid;
}

bool OAIAssociateResourceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociateResourceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
