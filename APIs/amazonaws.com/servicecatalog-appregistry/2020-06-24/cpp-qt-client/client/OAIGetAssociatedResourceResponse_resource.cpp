/**
 * AWS Service Catalog App Registry
 *  Amazon Web Services Service Catalog AppRegistry enables organizations to understand the application context of their Amazon Web Services resources. AppRegistry provides a repository of your applications, their resources, and the application metadata that you use within your enterprise.
 *
 * The version of the OpenAPI document: 2020-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAssociatedResourceResponse_resource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAssociatedResourceResponse_resource::OAIGetAssociatedResourceResponse_resource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAssociatedResourceResponse_resource::OAIGetAssociatedResourceResponse_resource() {
    this->initializeModel();
}

OAIGetAssociatedResourceResponse_resource::~OAIGetAssociatedResourceResponse_resource() {}

void OAIGetAssociatedResourceResponse_resource::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_association_time_isSet = false;
    m_association_time_isValid = false;

    m_integrations_isSet = false;
    m_integrations_isValid = false;
}

void OAIGetAssociatedResourceResponse_resource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAssociatedResourceResponse_resource::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_association_time_isValid = ::OpenAPI::fromJsonValue(m_association_time, json[QString("associationTime")]);
    m_association_time_isSet = !json[QString("associationTime")].isNull() && m_association_time_isValid;

    m_integrations_isValid = ::OpenAPI::fromJsonValue(m_integrations, json[QString("integrations")]);
    m_integrations_isSet = !json[QString("integrations")].isNull() && m_integrations_isValid;
}

QString OAIGetAssociatedResourceResponse_resource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAssociatedResourceResponse_resource::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_association_time_isSet) {
        obj.insert(QString("associationTime"), ::OpenAPI::toJsonValue(m_association_time));
    }
    if (m_integrations.isSet()) {
        obj.insert(QString("integrations"), ::OpenAPI::toJsonValue(m_integrations));
    }
    return obj;
}

QString OAIGetAssociatedResourceResponse_resource::getName() const {
    return m_name;
}
void OAIGetAssociatedResourceResponse_resource::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetAssociatedResourceResponse_resource::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetAssociatedResourceResponse_resource::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGetAssociatedResourceResponse_resource::getArn() const {
    return m_arn;
}
void OAIGetAssociatedResourceResponse_resource::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIGetAssociatedResourceResponse_resource::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIGetAssociatedResourceResponse_resource::is_arn_Valid() const{
    return m_arn_isValid;
}

QDateTime OAIGetAssociatedResourceResponse_resource::getAssociationTime() const {
    return m_association_time;
}
void OAIGetAssociatedResourceResponse_resource::setAssociationTime(const QDateTime &association_time) {
    m_association_time = association_time;
    m_association_time_isSet = true;
}

bool OAIGetAssociatedResourceResponse_resource::is_association_time_Set() const{
    return m_association_time_isSet;
}

bool OAIGetAssociatedResourceResponse_resource::is_association_time_Valid() const{
    return m_association_time_isValid;
}

OAIResource_integrations OAIGetAssociatedResourceResponse_resource::getIntegrations() const {
    return m_integrations;
}
void OAIGetAssociatedResourceResponse_resource::setIntegrations(const OAIResource_integrations &integrations) {
    m_integrations = integrations;
    m_integrations_isSet = true;
}

bool OAIGetAssociatedResourceResponse_resource::is_integrations_Set() const{
    return m_integrations_isSet;
}

bool OAIGetAssociatedResourceResponse_resource::is_integrations_Valid() const{
    return m_integrations_isValid;
}

bool OAIGetAssociatedResourceResponse_resource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_association_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_integrations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAssociatedResourceResponse_resource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
