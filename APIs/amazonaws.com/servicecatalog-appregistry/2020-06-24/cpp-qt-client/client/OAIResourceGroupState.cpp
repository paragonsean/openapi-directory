/**
 * AWS Service Catalog App Registry
 *  Amazon Web Services Service Catalog AppRegistry enables organizations to understand the application context of their Amazon Web Services resources. AppRegistry provides a repository of your applications, their resources, and the application metadata that you use within your enterprise.
 *
 * The version of the OpenAPI document: 2020-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceGroupState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceGroupState::OAIResourceGroupState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceGroupState::OAIResourceGroupState() {
    this->initializeModel();
}

OAIResourceGroupState::~OAIResourceGroupState() {}

void OAIResourceGroupState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIResourceGroupState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIResourceGroupState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CREATING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIResourceGroupState::CREATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CREATE_COMPLETE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIResourceGroupState::CREATE_COMPLETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CREATE_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIResourceGroupState::CREATE_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UPDATING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIResourceGroupState::UPDATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UPDATE_COMPLETE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIResourceGroupState::UPDATE_COMPLETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UPDATE_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIResourceGroupState::UPDATE_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIResourceGroupState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIResourceGroupState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIResourceGroupState::CREATING:
            val = "CREATING";
            break;
        case eOAIResourceGroupState::CREATE_COMPLETE:
            val = "CREATE_COMPLETE";
            break;
        case eOAIResourceGroupState::CREATE_FAILED:
            val = "CREATE_FAILED";
            break;
        case eOAIResourceGroupState::UPDATING:
            val = "UPDATING";
            break;
        case eOAIResourceGroupState::UPDATE_COMPLETE:
            val = "UPDATE_COMPLETE";
            break;
        case eOAIResourceGroupState::UPDATE_FAILED:
            val = "UPDATE_FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIResourceGroupState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIResourceGroupState::eOAIResourceGroupState OAIResourceGroupState::getValue() const {
    return m_value;
}

void OAIResourceGroupState::setValue(const OAIResourceGroupState::eOAIResourceGroupState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIResourceGroupState::isSet() const {
    
    return m_value_isSet;
}

bool OAIResourceGroupState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
