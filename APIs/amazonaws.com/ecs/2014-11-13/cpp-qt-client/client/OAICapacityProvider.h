/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICapacityProvider.h
 *
 * The details for a capacity provider.
 */

#ifndef OAICapacityProvider_H
#define OAICapacityProvider_H

#include <QJsonObject>

#include "OAICapacityProviderStatus.h"
#include "OAICapacityProviderUpdateStatus.h"
#include "OAICapacityProvider_autoScalingGroupProvider.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICapacityProvider_autoScalingGroupProvider;

class OAICapacityProvider : public OAIObject {
public:
    OAICapacityProvider();
    OAICapacityProvider(QString json);
    ~OAICapacityProvider() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCapacityProviderArn() const;
    void setCapacityProviderArn(const QString &capacity_provider_arn);
    bool is_capacity_provider_arn_Set() const;
    bool is_capacity_provider_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICapacityProviderStatus getStatus() const;
    void setStatus(const OAICapacityProviderStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAICapacityProvider_autoScalingGroupProvider getAutoScalingGroupProvider() const;
    void setAutoScalingGroupProvider(const OAICapacityProvider_autoScalingGroupProvider &auto_scaling_group_provider);
    bool is_auto_scaling_group_provider_Set() const;
    bool is_auto_scaling_group_provider_Valid() const;

    OAICapacityProviderUpdateStatus getUpdateStatus() const;
    void setUpdateStatus(const OAICapacityProviderUpdateStatus &update_status);
    bool is_update_status_Set() const;
    bool is_update_status_Valid() const;

    QString getUpdateStatusReason() const;
    void setUpdateStatusReason(const QString &update_status_reason);
    bool is_update_status_reason_Set() const;
    bool is_update_status_reason_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_capacity_provider_arn;
    bool m_capacity_provider_arn_isSet;
    bool m_capacity_provider_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICapacityProviderStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAICapacityProvider_autoScalingGroupProvider m_auto_scaling_group_provider;
    bool m_auto_scaling_group_provider_isSet;
    bool m_auto_scaling_group_provider_isValid;

    OAICapacityProviderUpdateStatus m_update_status;
    bool m_update_status_isSet;
    bool m_update_status_isValid;

    QString m_update_status_reason;
    bool m_update_status_reason_isSet;
    bool m_update_status_reason_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICapacityProvider)

#endif // OAICapacityProvider_H
