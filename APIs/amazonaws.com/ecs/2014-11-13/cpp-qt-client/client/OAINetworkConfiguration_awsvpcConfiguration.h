/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkConfiguration_awsvpcConfiguration.h
 *
 * 
 */

#ifndef OAINetworkConfiguration_awsvpcConfiguration_H
#define OAINetworkConfiguration_awsvpcConfiguration_H

#include <QJsonObject>

#include "OAIAssignPublicIp.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkConfiguration_awsvpcConfiguration : public OAIObject {
public:
    OAINetworkConfiguration_awsvpcConfiguration();
    OAINetworkConfiguration_awsvpcConfiguration(QString json);
    ~OAINetworkConfiguration_awsvpcConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getSubnets() const;
    void setSubnets(const QList &subnets);
    bool is_subnets_Set() const;
    bool is_subnets_Valid() const;

    QList getSecurityGroups() const;
    void setSecurityGroups(const QList &security_groups);
    bool is_security_groups_Set() const;
    bool is_security_groups_Valid() const;

    OAIAssignPublicIp getAssignPublicIp() const;
    void setAssignPublicIp(const OAIAssignPublicIp &assign_public_ip);
    bool is_assign_public_ip_Set() const;
    bool is_assign_public_ip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_subnets;
    bool m_subnets_isSet;
    bool m_subnets_isValid;

    QList m_security_groups;
    bool m_security_groups_isSet;
    bool m_security_groups_isValid;

    OAIAssignPublicIp m_assign_public_ip;
    bool m_assign_public_ip_isSet;
    bool m_assign_public_ip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkConfiguration_awsvpcConfiguration)

#endif // OAINetworkConfiguration_awsvpcConfiguration_H
