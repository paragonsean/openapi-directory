/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogConfiguration.h
 *
 * &lt;p&gt;The log configuration for the container. This parameter maps to &lt;code&gt;LogConfig&lt;/code&gt; in the &lt;a href&#x3D;\&quot;https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\&quot;&gt;Create a container&lt;/a&gt; section of the &lt;a href&#x3D;\&quot;https://docs.docker.com/engine/api/v1.35/\&quot;&gt;Docker Remote API&lt;/a&gt; and the &lt;code&gt;--log-driver&lt;/code&gt; option to &lt;a href&#x3D;\&quot;https://docs.docker.com/engine/reference/commandline/run/\&quot;&gt; &lt;code&gt;docker run&lt;/code&gt; &lt;/a&gt;.&lt;/p&gt; &lt;p&gt;By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see &lt;a href&#x3D;\&quot;https://docs.docker.com/engine/admin/logging/overview/\&quot;&gt;Configure logging drivers&lt;/a&gt; in the Docker documentation.&lt;/p&gt; &lt;p&gt;Understand the following when specifying a log configuration for your containers.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent.&lt;/p&gt; &lt;p&gt;For tasks on Fargate, the supported log drivers are &lt;code&gt;awslogs&lt;/code&gt;, &lt;code&gt;splunk&lt;/code&gt;, and &lt;code&gt;awsfirelens&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For tasks hosted on Amazon EC2 instances, the supported log drivers are &lt;code&gt;awslogs&lt;/code&gt;, &lt;code&gt;fluentd&lt;/code&gt;, &lt;code&gt;gelf&lt;/code&gt;, &lt;code&gt;json-file&lt;/code&gt;, &lt;code&gt;journald&lt;/code&gt;, &lt;code&gt;logentries&lt;/code&gt;,&lt;code&gt;syslog&lt;/code&gt;, &lt;code&gt;splunk&lt;/code&gt;, and &lt;code&gt;awsfirelens&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the &lt;code&gt;ECS_AVAILABLE_LOGGING_DRIVERS&lt;/code&gt; environment variable before containers placed on that instance can use these log configuration options. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html\&quot;&gt;Amazon ECS container agent configuration&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Container Service Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For tasks that are on Fargate, because you don&#39;t have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */

#ifndef OAILogConfiguration_H
#define OAILogConfiguration_H

#include <QJsonObject>

#include "OAILogDriver.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILogConfiguration : public OAIObject {
public:
    OAILogConfiguration();
    OAILogConfiguration(QString json);
    ~OAILogConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILogDriver getLogDriver() const;
    void setLogDriver(const OAILogDriver &log_driver);
    bool is_log_driver_Set() const;
    bool is_log_driver_Valid() const;

    QMap getOptions() const;
    void setOptions(const QMap &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    QList getSecretOptions() const;
    void setSecretOptions(const QList &secret_options);
    bool is_secret_options_Set() const;
    bool is_secret_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILogDriver m_log_driver;
    bool m_log_driver_isSet;
    bool m_log_driver_isValid;

    QMap m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    QList m_secret_options;
    bool m_secret_options_isSet;
    bool m_secret_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogConfiguration)

#endif // OAILogConfiguration_H
