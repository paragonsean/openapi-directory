/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateContainerInstancesStateResponse.h
 *
 * 
 */

#ifndef OAIUpdateContainerInstancesStateResponse_H
#define OAIUpdateContainerInstancesStateResponse_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateContainerInstancesStateResponse : public OAIObject {
public:
    OAIUpdateContainerInstancesStateResponse();
    OAIUpdateContainerInstancesStateResponse(QString json);
    ~OAIUpdateContainerInstancesStateResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getContainerInstances() const;
    void setContainerInstances(const QList &container_instances);
    bool is_container_instances_Set() const;
    bool is_container_instances_Valid() const;

    QList getFailures() const;
    void setFailures(const QList &failures);
    bool is_failures_Set() const;
    bool is_failures_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_container_instances;
    bool m_container_instances_isSet;
    bool m_container_instances_isValid;

    QList m_failures;
    bool m_failures_isSet;
    bool m_failures_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateContainerInstancesStateResponse)

#endif // OAIUpdateContainerInstancesStateResponse_H
