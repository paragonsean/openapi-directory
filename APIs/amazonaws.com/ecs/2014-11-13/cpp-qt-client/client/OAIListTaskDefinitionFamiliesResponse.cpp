/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTaskDefinitionFamiliesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTaskDefinitionFamiliesResponse::OAIListTaskDefinitionFamiliesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTaskDefinitionFamiliesResponse::OAIListTaskDefinitionFamiliesResponse() {
    this->initializeModel();
}

OAIListTaskDefinitionFamiliesResponse::~OAIListTaskDefinitionFamiliesResponse() {}

void OAIListTaskDefinitionFamiliesResponse::initializeModel() {

    m_families_isSet = false;
    m_families_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListTaskDefinitionFamiliesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTaskDefinitionFamiliesResponse::fromJsonObject(QJsonObject json) {

    m_families_isValid = ::OpenAPI::fromJsonValue(m_families, json[QString("families")]);
    m_families_isSet = !json[QString("families")].isNull() && m_families_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListTaskDefinitionFamiliesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTaskDefinitionFamiliesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_families.isSet()) {
        obj.insert(QString("families"), ::OpenAPI::toJsonValue(m_families));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListTaskDefinitionFamiliesResponse::getFamilies() const {
    return m_families;
}
void OAIListTaskDefinitionFamiliesResponse::setFamilies(const QList &families) {
    m_families = families;
    m_families_isSet = true;
}

bool OAIListTaskDefinitionFamiliesResponse::is_families_Set() const{
    return m_families_isSet;
}

bool OAIListTaskDefinitionFamiliesResponse::is_families_Valid() const{
    return m_families_isValid;
}

QString OAIListTaskDefinitionFamiliesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListTaskDefinitionFamiliesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListTaskDefinitionFamiliesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListTaskDefinitionFamiliesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListTaskDefinitionFamiliesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_families.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTaskDefinitionFamiliesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
