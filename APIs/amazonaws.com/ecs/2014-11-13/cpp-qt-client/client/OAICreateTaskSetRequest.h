/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateTaskSetRequest.h
 *
 * 
 */

#ifndef OAICreateTaskSetRequest_H
#define OAICreateTaskSetRequest_H

#include <QJsonObject>

#include "OAICreateTaskSetRequest_networkConfiguration.h"
#include "OAICreateTaskSetRequest_scale.h"
#include "OAILaunchType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateTaskSetRequest_networkConfiguration;
class OAICreateTaskSetRequest_scale;

class OAICreateTaskSetRequest : public OAIObject {
public:
    OAICreateTaskSetRequest();
    OAICreateTaskSetRequest(QString json);
    ~OAICreateTaskSetRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getService() const;
    void setService(const QString &service);
    bool is_service_Set() const;
    bool is_service_Valid() const;

    QString getCluster() const;
    void setCluster(const QString &cluster);
    bool is_cluster_Set() const;
    bool is_cluster_Valid() const;

    QString getExternalId() const;
    void setExternalId(const QString &external_id);
    bool is_external_id_Set() const;
    bool is_external_id_Valid() const;

    QString getTaskDefinition() const;
    void setTaskDefinition(const QString &task_definition);
    bool is_task_definition_Set() const;
    bool is_task_definition_Valid() const;

    OAICreateTaskSetRequest_networkConfiguration getNetworkConfiguration() const;
    void setNetworkConfiguration(const OAICreateTaskSetRequest_networkConfiguration &network_configuration);
    bool is_network_configuration_Set() const;
    bool is_network_configuration_Valid() const;

    QList getLoadBalancers() const;
    void setLoadBalancers(const QList &load_balancers);
    bool is_load_balancers_Set() const;
    bool is_load_balancers_Valid() const;

    QList getServiceRegistries() const;
    void setServiceRegistries(const QList &service_registries);
    bool is_service_registries_Set() const;
    bool is_service_registries_Valid() const;

    OAILaunchType getLaunchType() const;
    void setLaunchType(const OAILaunchType &launch_type);
    bool is_launch_type_Set() const;
    bool is_launch_type_Valid() const;

    QList getCapacityProviderStrategy() const;
    void setCapacityProviderStrategy(const QList &capacity_provider_strategy);
    bool is_capacity_provider_strategy_Set() const;
    bool is_capacity_provider_strategy_Valid() const;

    QString getPlatformVersion() const;
    void setPlatformVersion(const QString &platform_version);
    bool is_platform_version_Set() const;
    bool is_platform_version_Valid() const;

    OAICreateTaskSetRequest_scale getScale() const;
    void setScale(const OAICreateTaskSetRequest_scale &scale);
    bool is_scale_Set() const;
    bool is_scale_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_service;
    bool m_service_isSet;
    bool m_service_isValid;

    QString m_cluster;
    bool m_cluster_isSet;
    bool m_cluster_isValid;

    QString m_external_id;
    bool m_external_id_isSet;
    bool m_external_id_isValid;

    QString m_task_definition;
    bool m_task_definition_isSet;
    bool m_task_definition_isValid;

    OAICreateTaskSetRequest_networkConfiguration m_network_configuration;
    bool m_network_configuration_isSet;
    bool m_network_configuration_isValid;

    QList m_load_balancers;
    bool m_load_balancers_isSet;
    bool m_load_balancers_isValid;

    QList m_service_registries;
    bool m_service_registries_isSet;
    bool m_service_registries_isValid;

    OAILaunchType m_launch_type;
    bool m_launch_type_isSet;
    bool m_launch_type_isValid;

    QList m_capacity_provider_strategy;
    bool m_capacity_provider_strategy_isSet;
    bool m_capacity_provider_strategy_isValid;

    QString m_platform_version;
    bool m_platform_version_isSet;
    bool m_platform_version_isValid;

    OAICreateTaskSetRequest_scale m_scale;
    bool m_scale_isSet;
    bool m_scale_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateTaskSetRequest)

#endif // OAICreateTaskSetRequest_H
