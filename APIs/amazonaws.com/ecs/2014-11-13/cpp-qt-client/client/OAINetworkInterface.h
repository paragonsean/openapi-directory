/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkInterface.h
 *
 * An object representing the elastic network interface for tasks that use the &lt;code&gt;awsvpc&lt;/code&gt; network mode.
 */

#ifndef OAINetworkInterface_H
#define OAINetworkInterface_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkInterface : public OAIObject {
public:
    OAINetworkInterface();
    OAINetworkInterface(QString json);
    ~OAINetworkInterface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttachmentId() const;
    void setAttachmentId(const QString &attachment_id);
    bool is_attachment_id_Set() const;
    bool is_attachment_id_Valid() const;

    QString getPrivateIpv4Address() const;
    void setPrivateIpv4Address(const QString &private_ipv4_address);
    bool is_private_ipv4_address_Set() const;
    bool is_private_ipv4_address_Valid() const;

    QString getIpv6Address() const;
    void setIpv6Address(const QString &ipv6_address);
    bool is_ipv6_address_Set() const;
    bool is_ipv6_address_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attachment_id;
    bool m_attachment_id_isSet;
    bool m_attachment_id_isValid;

    QString m_private_ipv4_address;
    bool m_private_ipv4_address_isSet;
    bool m_private_ipv4_address_isValid;

    QString m_ipv6_address;
    bool m_ipv6_address_isSet;
    bool m_ipv6_address_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkInterface)

#endif // OAINetworkInterface_H
