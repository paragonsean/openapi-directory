/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManagedAgent.h
 *
 * Details about the managed agent status for the container.
 */

#ifndef OAIManagedAgent_H
#define OAIManagedAgent_H

#include <QJsonObject>

#include "OAIManagedAgentName.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIManagedAgent : public OAIObject {
public:
    OAIManagedAgent();
    OAIManagedAgent(QString json);
    ~OAIManagedAgent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getLastStartedAt() const;
    void setLastStartedAt(const QDateTime &last_started_at);
    bool is_last_started_at_Set() const;
    bool is_last_started_at_Valid() const;

    OAIManagedAgentName getName() const;
    void setName(const OAIManagedAgentName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getLastStatus() const;
    void setLastStatus(const QString &last_status);
    bool is_last_status_Set() const;
    bool is_last_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_last_started_at;
    bool m_last_started_at_isSet;
    bool m_last_started_at_isValid;

    OAIManagedAgentName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_last_status;
    bool m_last_status_isSet;
    bool m_last_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManagedAgent)

#endif // OAIManagedAgent_H
