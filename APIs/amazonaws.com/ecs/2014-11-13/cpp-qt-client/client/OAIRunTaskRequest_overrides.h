/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunTaskRequest_overrides.h
 *
 * 
 */

#ifndef OAIRunTaskRequest_overrides_H
#define OAIRunTaskRequest_overrides_H

#include <QJsonObject>

#include "OAITaskOverride_ephemeralStorage.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITaskOverride_ephemeralStorage;

class OAIRunTaskRequest_overrides : public OAIObject {
public:
    OAIRunTaskRequest_overrides();
    OAIRunTaskRequest_overrides(QString json);
    ~OAIRunTaskRequest_overrides() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getContainerOverrides() const;
    void setContainerOverrides(const QList &container_overrides);
    bool is_container_overrides_Set() const;
    bool is_container_overrides_Valid() const;

    QString getCpu() const;
    void setCpu(const QString &cpu);
    bool is_cpu_Set() const;
    bool is_cpu_Valid() const;

    QList getInferenceAcceleratorOverrides() const;
    void setInferenceAcceleratorOverrides(const QList &inference_accelerator_overrides);
    bool is_inference_accelerator_overrides_Set() const;
    bool is_inference_accelerator_overrides_Valid() const;

    QString getExecutionRoleArn() const;
    void setExecutionRoleArn(const QString &execution_role_arn);
    bool is_execution_role_arn_Set() const;
    bool is_execution_role_arn_Valid() const;

    QString getMemory() const;
    void setMemory(const QString &memory);
    bool is_memory_Set() const;
    bool is_memory_Valid() const;

    QString getTaskRoleArn() const;
    void setTaskRoleArn(const QString &task_role_arn);
    bool is_task_role_arn_Set() const;
    bool is_task_role_arn_Valid() const;

    OAITaskOverride_ephemeralStorage getEphemeralStorage() const;
    void setEphemeralStorage(const OAITaskOverride_ephemeralStorage &ephemeral_storage);
    bool is_ephemeral_storage_Set() const;
    bool is_ephemeral_storage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_container_overrides;
    bool m_container_overrides_isSet;
    bool m_container_overrides_isValid;

    QString m_cpu;
    bool m_cpu_isSet;
    bool m_cpu_isValid;

    QList m_inference_accelerator_overrides;
    bool m_inference_accelerator_overrides_isSet;
    bool m_inference_accelerator_overrides_isValid;

    QString m_execution_role_arn;
    bool m_execution_role_arn_isSet;
    bool m_execution_role_arn_isValid;

    QString m_memory;
    bool m_memory_isSet;
    bool m_memory_isValid;

    QString m_task_role_arn;
    bool m_task_role_arn_isSet;
    bool m_task_role_arn_isValid;

    OAITaskOverride_ephemeralStorage m_ephemeral_storage;
    bool m_ephemeral_storage_isSet;
    bool m_ephemeral_storage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunTaskRequest_overrides)

#endif // OAIRunTaskRequest_overrides_H
