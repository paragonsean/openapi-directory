/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFSxWindowsFileServerVolumeConfiguration.h
 *
 * &lt;p&gt;This parameter is specified when you&#39;re using &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html\&quot;&gt;Amazon FSx for Windows File Server&lt;/a&gt; file system for task storage.&lt;/p&gt; &lt;p&gt;For more information and the input format, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html\&quot;&gt;Amazon FSx for Windows File Server volumes&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Container Service Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIFSxWindowsFileServerVolumeConfiguration_H
#define OAIFSxWindowsFileServerVolumeConfiguration_H

#include <QJsonObject>

#include "OAIFSxWindowsFileServerVolumeConfiguration_authorizationConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFSxWindowsFileServerVolumeConfiguration_authorizationConfig;

class OAIFSxWindowsFileServerVolumeConfiguration : public OAIObject {
public:
    OAIFSxWindowsFileServerVolumeConfiguration();
    OAIFSxWindowsFileServerVolumeConfiguration(QString json);
    ~OAIFSxWindowsFileServerVolumeConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    QString getRootDirectory() const;
    void setRootDirectory(const QString &root_directory);
    bool is_root_directory_Set() const;
    bool is_root_directory_Valid() const;

    OAIFSxWindowsFileServerVolumeConfiguration_authorizationConfig getAuthorizationConfig() const;
    void setAuthorizationConfig(const OAIFSxWindowsFileServerVolumeConfiguration_authorizationConfig &authorization_config);
    bool is_authorization_config_Set() const;
    bool is_authorization_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    QString m_root_directory;
    bool m_root_directory_isSet;
    bool m_root_directory_isValid;

    OAIFSxWindowsFileServerVolumeConfiguration_authorizationConfig m_authorization_config;
    bool m_authorization_config_isSet;
    bool m_authorization_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFSxWindowsFileServerVolumeConfiguration)

#endif // OAIFSxWindowsFileServerVolumeConfiguration_H
