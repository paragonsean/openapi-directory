/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateCapacityProviderRequest_autoScalingGroupProvider.h
 *
 * 
 */

#ifndef OAIUpdateCapacityProviderRequest_autoScalingGroupProvider_H
#define OAIUpdateCapacityProviderRequest_autoScalingGroupProvider_H

#include <QJsonObject>

#include "OAIAutoScalingGroupProviderUpdate_managedScaling.h"
#include "OAIManagedTerminationProtection.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAutoScalingGroupProviderUpdate_managedScaling;

class OAIUpdateCapacityProviderRequest_autoScalingGroupProvider : public OAIObject {
public:
    OAIUpdateCapacityProviderRequest_autoScalingGroupProvider();
    OAIUpdateCapacityProviderRequest_autoScalingGroupProvider(QString json);
    ~OAIUpdateCapacityProviderRequest_autoScalingGroupProvider() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAutoScalingGroupProviderUpdate_managedScaling getManagedScaling() const;
    void setManagedScaling(const OAIAutoScalingGroupProviderUpdate_managedScaling &managed_scaling);
    bool is_managed_scaling_Set() const;
    bool is_managed_scaling_Valid() const;

    OAIManagedTerminationProtection getManagedTerminationProtection() const;
    void setManagedTerminationProtection(const OAIManagedTerminationProtection &managed_termination_protection);
    bool is_managed_termination_protection_Set() const;
    bool is_managed_termination_protection_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAutoScalingGroupProviderUpdate_managedScaling m_managed_scaling;
    bool m_managed_scaling_isSet;
    bool m_managed_scaling_isValid;

    OAIManagedTerminationProtection m_managed_termination_protection;
    bool m_managed_termination_protection_isSet;
    bool m_managed_termination_protection_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateCapacityProviderRequest_autoScalingGroupProvider)

#endif // OAIUpdateCapacityProviderRequest_autoScalingGroupProvider_H
