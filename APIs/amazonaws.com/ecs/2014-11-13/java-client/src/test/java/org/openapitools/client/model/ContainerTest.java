/*
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.HealthStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Container
 */
public class ContainerTest {
    private final Container model = new Container();

    /**
     * Model tests for Container
     */
    @Test
    public void testContainer() {
        // TODO: test Container
    }

    /**
     * Test the property 'containerArn'
     */
    @Test
    public void containerArnTest() {
        // TODO: test containerArn
    }

    /**
     * Test the property 'taskArn'
     */
    @Test
    public void taskArnTest() {
        // TODO: test taskArn
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'image'
     */
    @Test
    public void imageTest() {
        // TODO: test image
    }

    /**
     * Test the property 'imageDigest'
     */
    @Test
    public void imageDigestTest() {
        // TODO: test imageDigest
    }

    /**
     * Test the property 'runtimeId'
     */
    @Test
    public void runtimeIdTest() {
        // TODO: test runtimeId
    }

    /**
     * Test the property 'lastStatus'
     */
    @Test
    public void lastStatusTest() {
        // TODO: test lastStatus
    }

    /**
     * Test the property 'exitCode'
     */
    @Test
    public void exitCodeTest() {
        // TODO: test exitCode
    }

    /**
     * Test the property 'reason'
     */
    @Test
    public void reasonTest() {
        // TODO: test reason
    }

    /**
     * Test the property 'networkBindings'
     */
    @Test
    public void networkBindingsTest() {
        // TODO: test networkBindings
    }

    /**
     * Test the property 'networkInterfaces'
     */
    @Test
    public void networkInterfacesTest() {
        // TODO: test networkInterfaces
    }

    /**
     * Test the property 'healthStatus'
     */
    @Test
    public void healthStatusTest() {
        // TODO: test healthStatus
    }

    /**
     * Test the property 'managedAgents'
     */
    @Test
    public void managedAgentsTest() {
        // TODO: test managedAgents
    }

    /**
     * Test the property 'cpu'
     */
    @Test
    public void cpuTest() {
        // TODO: test cpu
    }

    /**
     * Test the property 'memory'
     */
    @Test
    public void memoryTest() {
        // TODO: test memory
    }

    /**
     * Test the property 'memoryReservation'
     */
    @Test
    public void memoryReservationTest() {
        // TODO: test memoryReservation
    }

    /**
     * Test the property 'gpuIds'
     */
    @Test
    public void gpuIdsTest() {
        // TODO: test gpuIds
    }

}
