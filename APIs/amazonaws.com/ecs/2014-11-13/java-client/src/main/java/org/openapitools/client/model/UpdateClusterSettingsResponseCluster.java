/*
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ClusterServiceConnectDefaults;
import org.openapitools.client.model.UpdateClusterRequestConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateClusterSettingsResponseCluster
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:17.720344-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateClusterSettingsResponseCluster {
  public static final String SERIALIZED_NAME_CLUSTER_ARN = "clusterArn";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ARN)
  private String clusterArn;

  public static final String SERIALIZED_NAME_CLUSTER_NAME = "clusterName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAME)
  private String clusterName;

  public static final String SERIALIZED_NAME_CONFIGURATION = "configuration";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION)
  private UpdateClusterRequestConfiguration _configuration;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_REGISTERED_CONTAINER_INSTANCES_COUNT = "registeredContainerInstancesCount";
  @SerializedName(SERIALIZED_NAME_REGISTERED_CONTAINER_INSTANCES_COUNT)
  private Integer registeredContainerInstancesCount;

  public static final String SERIALIZED_NAME_RUNNING_TASKS_COUNT = "runningTasksCount";
  @SerializedName(SERIALIZED_NAME_RUNNING_TASKS_COUNT)
  private Integer runningTasksCount;

  public static final String SERIALIZED_NAME_PENDING_TASKS_COUNT = "pendingTasksCount";
  @SerializedName(SERIALIZED_NAME_PENDING_TASKS_COUNT)
  private Integer pendingTasksCount;

  public static final String SERIALIZED_NAME_ACTIVE_SERVICES_COUNT = "activeServicesCount";
  @SerializedName(SERIALIZED_NAME_ACTIVE_SERVICES_COUNT)
  private Integer activeServicesCount;

  public static final String SERIALIZED_NAME_STATISTICS = "statistics";
  @SerializedName(SERIALIZED_NAME_STATISTICS)
  private List statistics;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_SETTINGS = "settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private List settings;

  public static final String SERIALIZED_NAME_CAPACITY_PROVIDERS = "capacityProviders";
  @SerializedName(SERIALIZED_NAME_CAPACITY_PROVIDERS)
  private List capacityProviders;

  public static final String SERIALIZED_NAME_DEFAULT_CAPACITY_PROVIDER_STRATEGY = "defaultCapacityProviderStrategy";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CAPACITY_PROVIDER_STRATEGY)
  private List defaultCapacityProviderStrategy;

  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private List attachments;

  public static final String SERIALIZED_NAME_ATTACHMENTS_STATUS = "attachmentsStatus";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS_STATUS)
  private String attachmentsStatus;

  public static final String SERIALIZED_NAME_SERVICE_CONNECT_DEFAULTS = "serviceConnectDefaults";
  @SerializedName(SERIALIZED_NAME_SERVICE_CONNECT_DEFAULTS)
  private ClusterServiceConnectDefaults serviceConnectDefaults;

  public UpdateClusterSettingsResponseCluster() {
  }

  public UpdateClusterSettingsResponseCluster clusterArn(String clusterArn) {
    this.clusterArn = clusterArn;
    return this;
  }

  /**
   * Get clusterArn
   * @return clusterArn
   */
  @javax.annotation.Nullable
  public String getClusterArn() {
    return clusterArn;
  }

  public void setClusterArn(String clusterArn) {
    this.clusterArn = clusterArn;
  }


  public UpdateClusterSettingsResponseCluster clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

  /**
   * Get clusterName
   * @return clusterName
   */
  @javax.annotation.Nullable
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }


  public UpdateClusterSettingsResponseCluster _configuration(UpdateClusterRequestConfiguration _configuration) {
    this._configuration = _configuration;
    return this;
  }

  /**
   * Get _configuration
   * @return _configuration
   */
  @javax.annotation.Nullable
  public UpdateClusterRequestConfiguration getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(UpdateClusterRequestConfiguration _configuration) {
    this._configuration = _configuration;
  }


  public UpdateClusterSettingsResponseCluster status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public UpdateClusterSettingsResponseCluster registeredContainerInstancesCount(Integer registeredContainerInstancesCount) {
    this.registeredContainerInstancesCount = registeredContainerInstancesCount;
    return this;
  }

  /**
   * Get registeredContainerInstancesCount
   * @return registeredContainerInstancesCount
   */
  @javax.annotation.Nullable
  public Integer getRegisteredContainerInstancesCount() {
    return registeredContainerInstancesCount;
  }

  public void setRegisteredContainerInstancesCount(Integer registeredContainerInstancesCount) {
    this.registeredContainerInstancesCount = registeredContainerInstancesCount;
  }


  public UpdateClusterSettingsResponseCluster runningTasksCount(Integer runningTasksCount) {
    this.runningTasksCount = runningTasksCount;
    return this;
  }

  /**
   * Get runningTasksCount
   * @return runningTasksCount
   */
  @javax.annotation.Nullable
  public Integer getRunningTasksCount() {
    return runningTasksCount;
  }

  public void setRunningTasksCount(Integer runningTasksCount) {
    this.runningTasksCount = runningTasksCount;
  }


  public UpdateClusterSettingsResponseCluster pendingTasksCount(Integer pendingTasksCount) {
    this.pendingTasksCount = pendingTasksCount;
    return this;
  }

  /**
   * Get pendingTasksCount
   * @return pendingTasksCount
   */
  @javax.annotation.Nullable
  public Integer getPendingTasksCount() {
    return pendingTasksCount;
  }

  public void setPendingTasksCount(Integer pendingTasksCount) {
    this.pendingTasksCount = pendingTasksCount;
  }


  public UpdateClusterSettingsResponseCluster activeServicesCount(Integer activeServicesCount) {
    this.activeServicesCount = activeServicesCount;
    return this;
  }

  /**
   * Get activeServicesCount
   * @return activeServicesCount
   */
  @javax.annotation.Nullable
  public Integer getActiveServicesCount() {
    return activeServicesCount;
  }

  public void setActiveServicesCount(Integer activeServicesCount) {
    this.activeServicesCount = activeServicesCount;
  }


  public UpdateClusterSettingsResponseCluster statistics(List statistics) {
    this.statistics = statistics;
    return this;
  }

  /**
   * Get statistics
   * @return statistics
   */
  @javax.annotation.Nullable
  public List getStatistics() {
    return statistics;
  }

  public void setStatistics(List statistics) {
    this.statistics = statistics;
  }


  public UpdateClusterSettingsResponseCluster tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public UpdateClusterSettingsResponseCluster settings(List settings) {
    this.settings = settings;
    return this;
  }

  /**
   * Get settings
   * @return settings
   */
  @javax.annotation.Nullable
  public List getSettings() {
    return settings;
  }

  public void setSettings(List settings) {
    this.settings = settings;
  }


  public UpdateClusterSettingsResponseCluster capacityProviders(List capacityProviders) {
    this.capacityProviders = capacityProviders;
    return this;
  }

  /**
   * Get capacityProviders
   * @return capacityProviders
   */
  @javax.annotation.Nullable
  public List getCapacityProviders() {
    return capacityProviders;
  }

  public void setCapacityProviders(List capacityProviders) {
    this.capacityProviders = capacityProviders;
  }


  public UpdateClusterSettingsResponseCluster defaultCapacityProviderStrategy(List defaultCapacityProviderStrategy) {
    this.defaultCapacityProviderStrategy = defaultCapacityProviderStrategy;
    return this;
  }

  /**
   * Get defaultCapacityProviderStrategy
   * @return defaultCapacityProviderStrategy
   */
  @javax.annotation.Nullable
  public List getDefaultCapacityProviderStrategy() {
    return defaultCapacityProviderStrategy;
  }

  public void setDefaultCapacityProviderStrategy(List defaultCapacityProviderStrategy) {
    this.defaultCapacityProviderStrategy = defaultCapacityProviderStrategy;
  }


  public UpdateClusterSettingsResponseCluster attachments(List attachments) {
    this.attachments = attachments;
    return this;
  }

  /**
   * Get attachments
   * @return attachments
   */
  @javax.annotation.Nullable
  public List getAttachments() {
    return attachments;
  }

  public void setAttachments(List attachments) {
    this.attachments = attachments;
  }


  public UpdateClusterSettingsResponseCluster attachmentsStatus(String attachmentsStatus) {
    this.attachmentsStatus = attachmentsStatus;
    return this;
  }

  /**
   * Get attachmentsStatus
   * @return attachmentsStatus
   */
  @javax.annotation.Nullable
  public String getAttachmentsStatus() {
    return attachmentsStatus;
  }

  public void setAttachmentsStatus(String attachmentsStatus) {
    this.attachmentsStatus = attachmentsStatus;
  }


  public UpdateClusterSettingsResponseCluster serviceConnectDefaults(ClusterServiceConnectDefaults serviceConnectDefaults) {
    this.serviceConnectDefaults = serviceConnectDefaults;
    return this;
  }

  /**
   * Get serviceConnectDefaults
   * @return serviceConnectDefaults
   */
  @javax.annotation.Nullable
  public ClusterServiceConnectDefaults getServiceConnectDefaults() {
    return serviceConnectDefaults;
  }

  public void setServiceConnectDefaults(ClusterServiceConnectDefaults serviceConnectDefaults) {
    this.serviceConnectDefaults = serviceConnectDefaults;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateClusterSettingsResponseCluster updateClusterSettingsResponseCluster = (UpdateClusterSettingsResponseCluster) o;
    return Objects.equals(this.clusterArn, updateClusterSettingsResponseCluster.clusterArn) &&
        Objects.equals(this.clusterName, updateClusterSettingsResponseCluster.clusterName) &&
        Objects.equals(this._configuration, updateClusterSettingsResponseCluster._configuration) &&
        Objects.equals(this.status, updateClusterSettingsResponseCluster.status) &&
        Objects.equals(this.registeredContainerInstancesCount, updateClusterSettingsResponseCluster.registeredContainerInstancesCount) &&
        Objects.equals(this.runningTasksCount, updateClusterSettingsResponseCluster.runningTasksCount) &&
        Objects.equals(this.pendingTasksCount, updateClusterSettingsResponseCluster.pendingTasksCount) &&
        Objects.equals(this.activeServicesCount, updateClusterSettingsResponseCluster.activeServicesCount) &&
        Objects.equals(this.statistics, updateClusterSettingsResponseCluster.statistics) &&
        Objects.equals(this.tags, updateClusterSettingsResponseCluster.tags) &&
        Objects.equals(this.settings, updateClusterSettingsResponseCluster.settings) &&
        Objects.equals(this.capacityProviders, updateClusterSettingsResponseCluster.capacityProviders) &&
        Objects.equals(this.defaultCapacityProviderStrategy, updateClusterSettingsResponseCluster.defaultCapacityProviderStrategy) &&
        Objects.equals(this.attachments, updateClusterSettingsResponseCluster.attachments) &&
        Objects.equals(this.attachmentsStatus, updateClusterSettingsResponseCluster.attachmentsStatus) &&
        Objects.equals(this.serviceConnectDefaults, updateClusterSettingsResponseCluster.serviceConnectDefaults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterArn, clusterName, _configuration, status, registeredContainerInstancesCount, runningTasksCount, pendingTasksCount, activeServicesCount, statistics, tags, settings, capacityProviders, defaultCapacityProviderStrategy, attachments, attachmentsStatus, serviceConnectDefaults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateClusterSettingsResponseCluster {\n");
    sb.append("    clusterArn: ").append(toIndentedString(clusterArn)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    registeredContainerInstancesCount: ").append(toIndentedString(registeredContainerInstancesCount)).append("\n");
    sb.append("    runningTasksCount: ").append(toIndentedString(runningTasksCount)).append("\n");
    sb.append("    pendingTasksCount: ").append(toIndentedString(pendingTasksCount)).append("\n");
    sb.append("    activeServicesCount: ").append(toIndentedString(activeServicesCount)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    capacityProviders: ").append(toIndentedString(capacityProviders)).append("\n");
    sb.append("    defaultCapacityProviderStrategy: ").append(toIndentedString(defaultCapacityProviderStrategy)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    attachmentsStatus: ").append(toIndentedString(attachmentsStatus)).append("\n");
    sb.append("    serviceConnectDefaults: ").append(toIndentedString(serviceConnectDefaults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clusterArn");
    openapiFields.add("clusterName");
    openapiFields.add("configuration");
    openapiFields.add("status");
    openapiFields.add("registeredContainerInstancesCount");
    openapiFields.add("runningTasksCount");
    openapiFields.add("pendingTasksCount");
    openapiFields.add("activeServicesCount");
    openapiFields.add("statistics");
    openapiFields.add("tags");
    openapiFields.add("settings");
    openapiFields.add("capacityProviders");
    openapiFields.add("defaultCapacityProviderStrategy");
    openapiFields.add("attachments");
    openapiFields.add("attachmentsStatus");
    openapiFields.add("serviceConnectDefaults");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateClusterSettingsResponseCluster
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateClusterSettingsResponseCluster.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateClusterSettingsResponseCluster is not found in the empty JSON string", UpdateClusterSettingsResponseCluster.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateClusterSettingsResponseCluster.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateClusterSettingsResponseCluster` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `clusterArn`
      if (jsonObj.get("clusterArn") != null && !jsonObj.get("clusterArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clusterArn"));
      }
      // validate the optional field `clusterName`
      if (jsonObj.get("clusterName") != null && !jsonObj.get("clusterName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clusterName"));
      }
      // validate the optional field `configuration`
      if (jsonObj.get("configuration") != null && !jsonObj.get("configuration").isJsonNull()) {
        UpdateClusterRequestConfiguration.validateJsonElement(jsonObj.get("configuration"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `registeredContainerInstancesCount`
      if (jsonObj.get("registeredContainerInstancesCount") != null && !jsonObj.get("registeredContainerInstancesCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("registeredContainerInstancesCount"));
      }
      // validate the optional field `runningTasksCount`
      if (jsonObj.get("runningTasksCount") != null && !jsonObj.get("runningTasksCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("runningTasksCount"));
      }
      // validate the optional field `pendingTasksCount`
      if (jsonObj.get("pendingTasksCount") != null && !jsonObj.get("pendingTasksCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("pendingTasksCount"));
      }
      // validate the optional field `activeServicesCount`
      if (jsonObj.get("activeServicesCount") != null && !jsonObj.get("activeServicesCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("activeServicesCount"));
      }
      // validate the optional field `statistics`
      if (jsonObj.get("statistics") != null && !jsonObj.get("statistics").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("statistics"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `settings`
      if (jsonObj.get("settings") != null && !jsonObj.get("settings").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("settings"));
      }
      // validate the optional field `capacityProviders`
      if (jsonObj.get("capacityProviders") != null && !jsonObj.get("capacityProviders").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("capacityProviders"));
      }
      // validate the optional field `defaultCapacityProviderStrategy`
      if (jsonObj.get("defaultCapacityProviderStrategy") != null && !jsonObj.get("defaultCapacityProviderStrategy").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("defaultCapacityProviderStrategy"));
      }
      // validate the optional field `attachments`
      if (jsonObj.get("attachments") != null && !jsonObj.get("attachments").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("attachments"));
      }
      // validate the optional field `attachmentsStatus`
      if (jsonObj.get("attachmentsStatus") != null && !jsonObj.get("attachmentsStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("attachmentsStatus"));
      }
      // validate the optional field `serviceConnectDefaults`
      if (jsonObj.get("serviceConnectDefaults") != null && !jsonObj.get("serviceConnectDefaults").isJsonNull()) {
        ClusterServiceConnectDefaults.validateJsonElement(jsonObj.get("serviceConnectDefaults"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateClusterSettingsResponseCluster.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateClusterSettingsResponseCluster' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateClusterSettingsResponseCluster> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateClusterSettingsResponseCluster.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateClusterSettingsResponseCluster>() {
           @Override
           public void write(JsonWriter out, UpdateClusterSettingsResponseCluster value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateClusterSettingsResponseCluster read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateClusterSettingsResponseCluster given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateClusterSettingsResponseCluster
   * @throws IOException if the JSON string is invalid with respect to UpdateClusterSettingsResponseCluster
   */
  public static UpdateClusterSettingsResponseCluster fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateClusterSettingsResponseCluster.class);
  }

  /**
   * Convert an instance of UpdateClusterSettingsResponseCluster to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

