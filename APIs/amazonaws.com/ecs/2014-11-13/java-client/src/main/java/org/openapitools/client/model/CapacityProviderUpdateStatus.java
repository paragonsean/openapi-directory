/*
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets CapacityProviderUpdateStatus
 */
@JsonAdapter(CapacityProviderUpdateStatus.Adapter.class)
public enum CapacityProviderUpdateStatus {
  
  DELETE_IN_PROGRESS("DELETE_IN_PROGRESS"),
  
  DELETE_COMPLETE("DELETE_COMPLETE"),
  
  DELETE_FAILED("DELETE_FAILED"),
  
  UPDATE_IN_PROGRESS("UPDATE_IN_PROGRESS"),
  
  UPDATE_COMPLETE("UPDATE_COMPLETE"),
  
  UPDATE_FAILED("UPDATE_FAILED");

  private String value;

  CapacityProviderUpdateStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CapacityProviderUpdateStatus fromValue(String value) {
    for (CapacityProviderUpdateStatus b : CapacityProviderUpdateStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CapacityProviderUpdateStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final CapacityProviderUpdateStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CapacityProviderUpdateStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CapacityProviderUpdateStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    CapacityProviderUpdateStatus.fromValue(value);
  }
}

