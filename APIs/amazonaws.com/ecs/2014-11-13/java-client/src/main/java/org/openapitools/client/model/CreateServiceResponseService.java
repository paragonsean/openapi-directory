/*
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateServiceRequestDeploymentConfiguration;
import org.openapitools.client.model.LaunchType;
import org.openapitools.client.model.PropagateTags;
import org.openapitools.client.model.SchedulingStrategy;
import org.openapitools.client.model.ServiceDeploymentController;
import org.openapitools.client.model.StartTaskRequestNetworkConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateServiceResponseService
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:17.720344-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateServiceResponseService {
  public static final String SERIALIZED_NAME_SERVICE_ARN = "serviceArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ARN)
  private String serviceArn;

  public static final String SERIALIZED_NAME_SERVICE_NAME = "serviceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  private String serviceName;

  public static final String SERIALIZED_NAME_CLUSTER_ARN = "clusterArn";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ARN)
  private String clusterArn;

  public static final String SERIALIZED_NAME_LOAD_BALANCERS = "loadBalancers";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCERS)
  private List loadBalancers;

  public static final String SERIALIZED_NAME_SERVICE_REGISTRIES = "serviceRegistries";
  @SerializedName(SERIALIZED_NAME_SERVICE_REGISTRIES)
  private List serviceRegistries;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_DESIRED_COUNT = "desiredCount";
  @SerializedName(SERIALIZED_NAME_DESIRED_COUNT)
  private Integer desiredCount;

  public static final String SERIALIZED_NAME_RUNNING_COUNT = "runningCount";
  @SerializedName(SERIALIZED_NAME_RUNNING_COUNT)
  private Integer runningCount;

  public static final String SERIALIZED_NAME_PENDING_COUNT = "pendingCount";
  @SerializedName(SERIALIZED_NAME_PENDING_COUNT)
  private Integer pendingCount;

  public static final String SERIALIZED_NAME_LAUNCH_TYPE = "launchType";
  @SerializedName(SERIALIZED_NAME_LAUNCH_TYPE)
  private LaunchType launchType;

  public static final String SERIALIZED_NAME_CAPACITY_PROVIDER_STRATEGY = "capacityProviderStrategy";
  @SerializedName(SERIALIZED_NAME_CAPACITY_PROVIDER_STRATEGY)
  private List capacityProviderStrategy;

  public static final String SERIALIZED_NAME_PLATFORM_VERSION = "platformVersion";
  @SerializedName(SERIALIZED_NAME_PLATFORM_VERSION)
  private String platformVersion;

  public static final String SERIALIZED_NAME_PLATFORM_FAMILY = "platformFamily";
  @SerializedName(SERIALIZED_NAME_PLATFORM_FAMILY)
  private String platformFamily;

  public static final String SERIALIZED_NAME_TASK_DEFINITION = "taskDefinition";
  @SerializedName(SERIALIZED_NAME_TASK_DEFINITION)
  private String taskDefinition;

  public static final String SERIALIZED_NAME_DEPLOYMENT_CONFIGURATION = "deploymentConfiguration";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_CONFIGURATION)
  private CreateServiceRequestDeploymentConfiguration deploymentConfiguration;

  public static final String SERIALIZED_NAME_TASK_SETS = "taskSets";
  @SerializedName(SERIALIZED_NAME_TASK_SETS)
  private List taskSets;

  public static final String SERIALIZED_NAME_DEPLOYMENTS = "deployments";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENTS)
  private List deployments;

  public static final String SERIALIZED_NAME_ROLE_ARN = "roleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_EVENTS = "events";
  @SerializedName(SERIALIZED_NAME_EVENTS)
  private List events;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_PLACEMENT_CONSTRAINTS = "placementConstraints";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_CONSTRAINTS)
  private List placementConstraints;

  public static final String SERIALIZED_NAME_PLACEMENT_STRATEGY = "placementStrategy";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_STRATEGY)
  private List placementStrategy;

  public static final String SERIALIZED_NAME_NETWORK_CONFIGURATION = "networkConfiguration";
  @SerializedName(SERIALIZED_NAME_NETWORK_CONFIGURATION)
  private StartTaskRequestNetworkConfiguration networkConfiguration;

  public static final String SERIALIZED_NAME_HEALTH_CHECK_GRACE_PERIOD_SECONDS = "healthCheckGracePeriodSeconds";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK_GRACE_PERIOD_SECONDS)
  private Integer healthCheckGracePeriodSeconds;

  public static final String SERIALIZED_NAME_SCHEDULING_STRATEGY = "schedulingStrategy";
  @SerializedName(SERIALIZED_NAME_SCHEDULING_STRATEGY)
  private SchedulingStrategy schedulingStrategy;

  public static final String SERIALIZED_NAME_DEPLOYMENT_CONTROLLER = "deploymentController";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_CONTROLLER)
  private ServiceDeploymentController deploymentController;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_ENABLE_E_C_S_MANAGED_TAGS = "enableECSManagedTags";
  @SerializedName(SERIALIZED_NAME_ENABLE_E_C_S_MANAGED_TAGS)
  private Boolean enableECSManagedTags;

  public static final String SERIALIZED_NAME_PROPAGATE_TAGS = "propagateTags";
  @SerializedName(SERIALIZED_NAME_PROPAGATE_TAGS)
  private PropagateTags propagateTags;

  public static final String SERIALIZED_NAME_ENABLE_EXECUTE_COMMAND = "enableExecuteCommand";
  @SerializedName(SERIALIZED_NAME_ENABLE_EXECUTE_COMMAND)
  private Boolean enableExecuteCommand;

  public CreateServiceResponseService() {
  }

  public CreateServiceResponseService serviceArn(String serviceArn) {
    this.serviceArn = serviceArn;
    return this;
  }

  /**
   * Get serviceArn
   * @return serviceArn
   */
  @javax.annotation.Nullable
  public String getServiceArn() {
    return serviceArn;
  }

  public void setServiceArn(String serviceArn) {
    this.serviceArn = serviceArn;
  }


  public CreateServiceResponseService serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * Get serviceName
   * @return serviceName
   */
  @javax.annotation.Nullable
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }


  public CreateServiceResponseService clusterArn(String clusterArn) {
    this.clusterArn = clusterArn;
    return this;
  }

  /**
   * Get clusterArn
   * @return clusterArn
   */
  @javax.annotation.Nullable
  public String getClusterArn() {
    return clusterArn;
  }

  public void setClusterArn(String clusterArn) {
    this.clusterArn = clusterArn;
  }


  public CreateServiceResponseService loadBalancers(List loadBalancers) {
    this.loadBalancers = loadBalancers;
    return this;
  }

  /**
   * Get loadBalancers
   * @return loadBalancers
   */
  @javax.annotation.Nullable
  public List getLoadBalancers() {
    return loadBalancers;
  }

  public void setLoadBalancers(List loadBalancers) {
    this.loadBalancers = loadBalancers;
  }


  public CreateServiceResponseService serviceRegistries(List serviceRegistries) {
    this.serviceRegistries = serviceRegistries;
    return this;
  }

  /**
   * Get serviceRegistries
   * @return serviceRegistries
   */
  @javax.annotation.Nullable
  public List getServiceRegistries() {
    return serviceRegistries;
  }

  public void setServiceRegistries(List serviceRegistries) {
    this.serviceRegistries = serviceRegistries;
  }


  public CreateServiceResponseService status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public CreateServiceResponseService desiredCount(Integer desiredCount) {
    this.desiredCount = desiredCount;
    return this;
  }

  /**
   * Get desiredCount
   * @return desiredCount
   */
  @javax.annotation.Nullable
  public Integer getDesiredCount() {
    return desiredCount;
  }

  public void setDesiredCount(Integer desiredCount) {
    this.desiredCount = desiredCount;
  }


  public CreateServiceResponseService runningCount(Integer runningCount) {
    this.runningCount = runningCount;
    return this;
  }

  /**
   * Get runningCount
   * @return runningCount
   */
  @javax.annotation.Nullable
  public Integer getRunningCount() {
    return runningCount;
  }

  public void setRunningCount(Integer runningCount) {
    this.runningCount = runningCount;
  }


  public CreateServiceResponseService pendingCount(Integer pendingCount) {
    this.pendingCount = pendingCount;
    return this;
  }

  /**
   * Get pendingCount
   * @return pendingCount
   */
  @javax.annotation.Nullable
  public Integer getPendingCount() {
    return pendingCount;
  }

  public void setPendingCount(Integer pendingCount) {
    this.pendingCount = pendingCount;
  }


  public CreateServiceResponseService launchType(LaunchType launchType) {
    this.launchType = launchType;
    return this;
  }

  /**
   * Get launchType
   * @return launchType
   */
  @javax.annotation.Nullable
  public LaunchType getLaunchType() {
    return launchType;
  }

  public void setLaunchType(LaunchType launchType) {
    this.launchType = launchType;
  }


  public CreateServiceResponseService capacityProviderStrategy(List capacityProviderStrategy) {
    this.capacityProviderStrategy = capacityProviderStrategy;
    return this;
  }

  /**
   * Get capacityProviderStrategy
   * @return capacityProviderStrategy
   */
  @javax.annotation.Nullable
  public List getCapacityProviderStrategy() {
    return capacityProviderStrategy;
  }

  public void setCapacityProviderStrategy(List capacityProviderStrategy) {
    this.capacityProviderStrategy = capacityProviderStrategy;
  }


  public CreateServiceResponseService platformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
    return this;
  }

  /**
   * Get platformVersion
   * @return platformVersion
   */
  @javax.annotation.Nullable
  public String getPlatformVersion() {
    return platformVersion;
  }

  public void setPlatformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
  }


  public CreateServiceResponseService platformFamily(String platformFamily) {
    this.platformFamily = platformFamily;
    return this;
  }

  /**
   * Get platformFamily
   * @return platformFamily
   */
  @javax.annotation.Nullable
  public String getPlatformFamily() {
    return platformFamily;
  }

  public void setPlatformFamily(String platformFamily) {
    this.platformFamily = platformFamily;
  }


  public CreateServiceResponseService taskDefinition(String taskDefinition) {
    this.taskDefinition = taskDefinition;
    return this;
  }

  /**
   * Get taskDefinition
   * @return taskDefinition
   */
  @javax.annotation.Nullable
  public String getTaskDefinition() {
    return taskDefinition;
  }

  public void setTaskDefinition(String taskDefinition) {
    this.taskDefinition = taskDefinition;
  }


  public CreateServiceResponseService deploymentConfiguration(CreateServiceRequestDeploymentConfiguration deploymentConfiguration) {
    this.deploymentConfiguration = deploymentConfiguration;
    return this;
  }

  /**
   * Get deploymentConfiguration
   * @return deploymentConfiguration
   */
  @javax.annotation.Nullable
  public CreateServiceRequestDeploymentConfiguration getDeploymentConfiguration() {
    return deploymentConfiguration;
  }

  public void setDeploymentConfiguration(CreateServiceRequestDeploymentConfiguration deploymentConfiguration) {
    this.deploymentConfiguration = deploymentConfiguration;
  }


  public CreateServiceResponseService taskSets(List taskSets) {
    this.taskSets = taskSets;
    return this;
  }

  /**
   * Get taskSets
   * @return taskSets
   */
  @javax.annotation.Nullable
  public List getTaskSets() {
    return taskSets;
  }

  public void setTaskSets(List taskSets) {
    this.taskSets = taskSets;
  }


  public CreateServiceResponseService deployments(List deployments) {
    this.deployments = deployments;
    return this;
  }

  /**
   * Get deployments
   * @return deployments
   */
  @javax.annotation.Nullable
  public List getDeployments() {
    return deployments;
  }

  public void setDeployments(List deployments) {
    this.deployments = deployments;
  }


  public CreateServiceResponseService roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public CreateServiceResponseService events(List events) {
    this.events = events;
    return this;
  }

  /**
   * Get events
   * @return events
   */
  @javax.annotation.Nullable
  public List getEvents() {
    return events;
  }

  public void setEvents(List events) {
    this.events = events;
  }


  public CreateServiceResponseService createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public CreateServiceResponseService placementConstraints(List placementConstraints) {
    this.placementConstraints = placementConstraints;
    return this;
  }

  /**
   * Get placementConstraints
   * @return placementConstraints
   */
  @javax.annotation.Nullable
  public List getPlacementConstraints() {
    return placementConstraints;
  }

  public void setPlacementConstraints(List placementConstraints) {
    this.placementConstraints = placementConstraints;
  }


  public CreateServiceResponseService placementStrategy(List placementStrategy) {
    this.placementStrategy = placementStrategy;
    return this;
  }

  /**
   * Get placementStrategy
   * @return placementStrategy
   */
  @javax.annotation.Nullable
  public List getPlacementStrategy() {
    return placementStrategy;
  }

  public void setPlacementStrategy(List placementStrategy) {
    this.placementStrategy = placementStrategy;
  }


  public CreateServiceResponseService networkConfiguration(StartTaskRequestNetworkConfiguration networkConfiguration) {
    this.networkConfiguration = networkConfiguration;
    return this;
  }

  /**
   * Get networkConfiguration
   * @return networkConfiguration
   */
  @javax.annotation.Nullable
  public StartTaskRequestNetworkConfiguration getNetworkConfiguration() {
    return networkConfiguration;
  }

  public void setNetworkConfiguration(StartTaskRequestNetworkConfiguration networkConfiguration) {
    this.networkConfiguration = networkConfiguration;
  }


  public CreateServiceResponseService healthCheckGracePeriodSeconds(Integer healthCheckGracePeriodSeconds) {
    this.healthCheckGracePeriodSeconds = healthCheckGracePeriodSeconds;
    return this;
  }

  /**
   * Get healthCheckGracePeriodSeconds
   * @return healthCheckGracePeriodSeconds
   */
  @javax.annotation.Nullable
  public Integer getHealthCheckGracePeriodSeconds() {
    return healthCheckGracePeriodSeconds;
  }

  public void setHealthCheckGracePeriodSeconds(Integer healthCheckGracePeriodSeconds) {
    this.healthCheckGracePeriodSeconds = healthCheckGracePeriodSeconds;
  }


  public CreateServiceResponseService schedulingStrategy(SchedulingStrategy schedulingStrategy) {
    this.schedulingStrategy = schedulingStrategy;
    return this;
  }

  /**
   * Get schedulingStrategy
   * @return schedulingStrategy
   */
  @javax.annotation.Nullable
  public SchedulingStrategy getSchedulingStrategy() {
    return schedulingStrategy;
  }

  public void setSchedulingStrategy(SchedulingStrategy schedulingStrategy) {
    this.schedulingStrategy = schedulingStrategy;
  }


  public CreateServiceResponseService deploymentController(ServiceDeploymentController deploymentController) {
    this.deploymentController = deploymentController;
    return this;
  }

  /**
   * Get deploymentController
   * @return deploymentController
   */
  @javax.annotation.Nullable
  public ServiceDeploymentController getDeploymentController() {
    return deploymentController;
  }

  public void setDeploymentController(ServiceDeploymentController deploymentController) {
    this.deploymentController = deploymentController;
  }


  public CreateServiceResponseService tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateServiceResponseService createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public CreateServiceResponseService enableECSManagedTags(Boolean enableECSManagedTags) {
    this.enableECSManagedTags = enableECSManagedTags;
    return this;
  }

  /**
   * Get enableECSManagedTags
   * @return enableECSManagedTags
   */
  @javax.annotation.Nullable
  public Boolean getEnableECSManagedTags() {
    return enableECSManagedTags;
  }

  public void setEnableECSManagedTags(Boolean enableECSManagedTags) {
    this.enableECSManagedTags = enableECSManagedTags;
  }


  public CreateServiceResponseService propagateTags(PropagateTags propagateTags) {
    this.propagateTags = propagateTags;
    return this;
  }

  /**
   * Get propagateTags
   * @return propagateTags
   */
  @javax.annotation.Nullable
  public PropagateTags getPropagateTags() {
    return propagateTags;
  }

  public void setPropagateTags(PropagateTags propagateTags) {
    this.propagateTags = propagateTags;
  }


  public CreateServiceResponseService enableExecuteCommand(Boolean enableExecuteCommand) {
    this.enableExecuteCommand = enableExecuteCommand;
    return this;
  }

  /**
   * Get enableExecuteCommand
   * @return enableExecuteCommand
   */
  @javax.annotation.Nullable
  public Boolean getEnableExecuteCommand() {
    return enableExecuteCommand;
  }

  public void setEnableExecuteCommand(Boolean enableExecuteCommand) {
    this.enableExecuteCommand = enableExecuteCommand;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateServiceResponseService createServiceResponseService = (CreateServiceResponseService) o;
    return Objects.equals(this.serviceArn, createServiceResponseService.serviceArn) &&
        Objects.equals(this.serviceName, createServiceResponseService.serviceName) &&
        Objects.equals(this.clusterArn, createServiceResponseService.clusterArn) &&
        Objects.equals(this.loadBalancers, createServiceResponseService.loadBalancers) &&
        Objects.equals(this.serviceRegistries, createServiceResponseService.serviceRegistries) &&
        Objects.equals(this.status, createServiceResponseService.status) &&
        Objects.equals(this.desiredCount, createServiceResponseService.desiredCount) &&
        Objects.equals(this.runningCount, createServiceResponseService.runningCount) &&
        Objects.equals(this.pendingCount, createServiceResponseService.pendingCount) &&
        Objects.equals(this.launchType, createServiceResponseService.launchType) &&
        Objects.equals(this.capacityProviderStrategy, createServiceResponseService.capacityProviderStrategy) &&
        Objects.equals(this.platformVersion, createServiceResponseService.platformVersion) &&
        Objects.equals(this.platformFamily, createServiceResponseService.platformFamily) &&
        Objects.equals(this.taskDefinition, createServiceResponseService.taskDefinition) &&
        Objects.equals(this.deploymentConfiguration, createServiceResponseService.deploymentConfiguration) &&
        Objects.equals(this.taskSets, createServiceResponseService.taskSets) &&
        Objects.equals(this.deployments, createServiceResponseService.deployments) &&
        Objects.equals(this.roleArn, createServiceResponseService.roleArn) &&
        Objects.equals(this.events, createServiceResponseService.events) &&
        Objects.equals(this.createdAt, createServiceResponseService.createdAt) &&
        Objects.equals(this.placementConstraints, createServiceResponseService.placementConstraints) &&
        Objects.equals(this.placementStrategy, createServiceResponseService.placementStrategy) &&
        Objects.equals(this.networkConfiguration, createServiceResponseService.networkConfiguration) &&
        Objects.equals(this.healthCheckGracePeriodSeconds, createServiceResponseService.healthCheckGracePeriodSeconds) &&
        Objects.equals(this.schedulingStrategy, createServiceResponseService.schedulingStrategy) &&
        Objects.equals(this.deploymentController, createServiceResponseService.deploymentController) &&
        Objects.equals(this.tags, createServiceResponseService.tags) &&
        Objects.equals(this.createdBy, createServiceResponseService.createdBy) &&
        Objects.equals(this.enableECSManagedTags, createServiceResponseService.enableECSManagedTags) &&
        Objects.equals(this.propagateTags, createServiceResponseService.propagateTags) &&
        Objects.equals(this.enableExecuteCommand, createServiceResponseService.enableExecuteCommand);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceArn, serviceName, clusterArn, loadBalancers, serviceRegistries, status, desiredCount, runningCount, pendingCount, launchType, capacityProviderStrategy, platformVersion, platformFamily, taskDefinition, deploymentConfiguration, taskSets, deployments, roleArn, events, createdAt, placementConstraints, placementStrategy, networkConfiguration, healthCheckGracePeriodSeconds, schedulingStrategy, deploymentController, tags, createdBy, enableECSManagedTags, propagateTags, enableExecuteCommand);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateServiceResponseService {\n");
    sb.append("    serviceArn: ").append(toIndentedString(serviceArn)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    clusterArn: ").append(toIndentedString(clusterArn)).append("\n");
    sb.append("    loadBalancers: ").append(toIndentedString(loadBalancers)).append("\n");
    sb.append("    serviceRegistries: ").append(toIndentedString(serviceRegistries)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    desiredCount: ").append(toIndentedString(desiredCount)).append("\n");
    sb.append("    runningCount: ").append(toIndentedString(runningCount)).append("\n");
    sb.append("    pendingCount: ").append(toIndentedString(pendingCount)).append("\n");
    sb.append("    launchType: ").append(toIndentedString(launchType)).append("\n");
    sb.append("    capacityProviderStrategy: ").append(toIndentedString(capacityProviderStrategy)).append("\n");
    sb.append("    platformVersion: ").append(toIndentedString(platformVersion)).append("\n");
    sb.append("    platformFamily: ").append(toIndentedString(platformFamily)).append("\n");
    sb.append("    taskDefinition: ").append(toIndentedString(taskDefinition)).append("\n");
    sb.append("    deploymentConfiguration: ").append(toIndentedString(deploymentConfiguration)).append("\n");
    sb.append("    taskSets: ").append(toIndentedString(taskSets)).append("\n");
    sb.append("    deployments: ").append(toIndentedString(deployments)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    placementConstraints: ").append(toIndentedString(placementConstraints)).append("\n");
    sb.append("    placementStrategy: ").append(toIndentedString(placementStrategy)).append("\n");
    sb.append("    networkConfiguration: ").append(toIndentedString(networkConfiguration)).append("\n");
    sb.append("    healthCheckGracePeriodSeconds: ").append(toIndentedString(healthCheckGracePeriodSeconds)).append("\n");
    sb.append("    schedulingStrategy: ").append(toIndentedString(schedulingStrategy)).append("\n");
    sb.append("    deploymentController: ").append(toIndentedString(deploymentController)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    enableECSManagedTags: ").append(toIndentedString(enableECSManagedTags)).append("\n");
    sb.append("    propagateTags: ").append(toIndentedString(propagateTags)).append("\n");
    sb.append("    enableExecuteCommand: ").append(toIndentedString(enableExecuteCommand)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("serviceArn");
    openapiFields.add("serviceName");
    openapiFields.add("clusterArn");
    openapiFields.add("loadBalancers");
    openapiFields.add("serviceRegistries");
    openapiFields.add("status");
    openapiFields.add("desiredCount");
    openapiFields.add("runningCount");
    openapiFields.add("pendingCount");
    openapiFields.add("launchType");
    openapiFields.add("capacityProviderStrategy");
    openapiFields.add("platformVersion");
    openapiFields.add("platformFamily");
    openapiFields.add("taskDefinition");
    openapiFields.add("deploymentConfiguration");
    openapiFields.add("taskSets");
    openapiFields.add("deployments");
    openapiFields.add("roleArn");
    openapiFields.add("events");
    openapiFields.add("createdAt");
    openapiFields.add("placementConstraints");
    openapiFields.add("placementStrategy");
    openapiFields.add("networkConfiguration");
    openapiFields.add("healthCheckGracePeriodSeconds");
    openapiFields.add("schedulingStrategy");
    openapiFields.add("deploymentController");
    openapiFields.add("tags");
    openapiFields.add("createdBy");
    openapiFields.add("enableECSManagedTags");
    openapiFields.add("propagateTags");
    openapiFields.add("enableExecuteCommand");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateServiceResponseService
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateServiceResponseService.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateServiceResponseService is not found in the empty JSON string", CreateServiceResponseService.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateServiceResponseService.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateServiceResponseService` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `serviceArn`
      if (jsonObj.get("serviceArn") != null && !jsonObj.get("serviceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceArn"));
      }
      // validate the optional field `serviceName`
      if (jsonObj.get("serviceName") != null && !jsonObj.get("serviceName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceName"));
      }
      // validate the optional field `clusterArn`
      if (jsonObj.get("clusterArn") != null && !jsonObj.get("clusterArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clusterArn"));
      }
      // validate the optional field `loadBalancers`
      if (jsonObj.get("loadBalancers") != null && !jsonObj.get("loadBalancers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("loadBalancers"));
      }
      // validate the optional field `serviceRegistries`
      if (jsonObj.get("serviceRegistries") != null && !jsonObj.get("serviceRegistries").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("serviceRegistries"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `desiredCount`
      if (jsonObj.get("desiredCount") != null && !jsonObj.get("desiredCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("desiredCount"));
      }
      // validate the optional field `runningCount`
      if (jsonObj.get("runningCount") != null && !jsonObj.get("runningCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("runningCount"));
      }
      // validate the optional field `pendingCount`
      if (jsonObj.get("pendingCount") != null && !jsonObj.get("pendingCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("pendingCount"));
      }
      // validate the optional field `launchType`
      if (jsonObj.get("launchType") != null && !jsonObj.get("launchType").isJsonNull()) {
        LaunchType.validateJsonElement(jsonObj.get("launchType"));
      }
      // validate the optional field `capacityProviderStrategy`
      if (jsonObj.get("capacityProviderStrategy") != null && !jsonObj.get("capacityProviderStrategy").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("capacityProviderStrategy"));
      }
      // validate the optional field `platformVersion`
      if (jsonObj.get("platformVersion") != null && !jsonObj.get("platformVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("platformVersion"));
      }
      // validate the optional field `platformFamily`
      if (jsonObj.get("platformFamily") != null && !jsonObj.get("platformFamily").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("platformFamily"));
      }
      // validate the optional field `taskDefinition`
      if (jsonObj.get("taskDefinition") != null && !jsonObj.get("taskDefinition").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("taskDefinition"));
      }
      // validate the optional field `deploymentConfiguration`
      if (jsonObj.get("deploymentConfiguration") != null && !jsonObj.get("deploymentConfiguration").isJsonNull()) {
        CreateServiceRequestDeploymentConfiguration.validateJsonElement(jsonObj.get("deploymentConfiguration"));
      }
      // validate the optional field `taskSets`
      if (jsonObj.get("taskSets") != null && !jsonObj.get("taskSets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("taskSets"));
      }
      // validate the optional field `deployments`
      if (jsonObj.get("deployments") != null && !jsonObj.get("deployments").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("deployments"));
      }
      // validate the optional field `roleArn`
      if (jsonObj.get("roleArn") != null && !jsonObj.get("roleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("roleArn"));
      }
      // validate the optional field `events`
      if (jsonObj.get("events") != null && !jsonObj.get("events").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("events"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `placementConstraints`
      if (jsonObj.get("placementConstraints") != null && !jsonObj.get("placementConstraints").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("placementConstraints"));
      }
      // validate the optional field `placementStrategy`
      if (jsonObj.get("placementStrategy") != null && !jsonObj.get("placementStrategy").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("placementStrategy"));
      }
      // validate the optional field `networkConfiguration`
      if (jsonObj.get("networkConfiguration") != null && !jsonObj.get("networkConfiguration").isJsonNull()) {
        StartTaskRequestNetworkConfiguration.validateJsonElement(jsonObj.get("networkConfiguration"));
      }
      // validate the optional field `healthCheckGracePeriodSeconds`
      if (jsonObj.get("healthCheckGracePeriodSeconds") != null && !jsonObj.get("healthCheckGracePeriodSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("healthCheckGracePeriodSeconds"));
      }
      // validate the optional field `schedulingStrategy`
      if (jsonObj.get("schedulingStrategy") != null && !jsonObj.get("schedulingStrategy").isJsonNull()) {
        SchedulingStrategy.validateJsonElement(jsonObj.get("schedulingStrategy"));
      }
      // validate the optional field `deploymentController`
      if (jsonObj.get("deploymentController") != null && !jsonObj.get("deploymentController").isJsonNull()) {
        ServiceDeploymentController.validateJsonElement(jsonObj.get("deploymentController"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("createdBy"));
      }
      // validate the optional field `enableECSManagedTags`
      if (jsonObj.get("enableECSManagedTags") != null && !jsonObj.get("enableECSManagedTags").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("enableECSManagedTags"));
      }
      // validate the optional field `propagateTags`
      if (jsonObj.get("propagateTags") != null && !jsonObj.get("propagateTags").isJsonNull()) {
        PropagateTags.validateJsonElement(jsonObj.get("propagateTags"));
      }
      // validate the optional field `enableExecuteCommand`
      if (jsonObj.get("enableExecuteCommand") != null && !jsonObj.get("enableExecuteCommand").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("enableExecuteCommand"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateServiceResponseService.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateServiceResponseService' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateServiceResponseService> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateServiceResponseService.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateServiceResponseService>() {
           @Override
           public void write(JsonWriter out, CreateServiceResponseService value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateServiceResponseService read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateServiceResponseService given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateServiceResponseService
   * @throws IOException if the JSON string is invalid with respect to CreateServiceResponseService
   */
  public static CreateServiceResponseService fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateServiceResponseService.class);
  }

  /**
   * Convert an instance of CreateServiceResponseService to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

