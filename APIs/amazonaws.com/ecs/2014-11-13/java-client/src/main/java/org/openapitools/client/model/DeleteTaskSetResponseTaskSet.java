/*
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LaunchType;
import org.openapitools.client.model.StabilityStatus;
import org.openapitools.client.model.TaskSetNetworkConfiguration;
import org.openapitools.client.model.TaskSetScale;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DeleteTaskSetResponseTaskSet
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:17.720344-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeleteTaskSetResponseTaskSet {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TASK_SET_ARN = "taskSetArn";
  @SerializedName(SERIALIZED_NAME_TASK_SET_ARN)
  private String taskSetArn;

  public static final String SERIALIZED_NAME_SERVICE_ARN = "serviceArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ARN)
  private String serviceArn;

  public static final String SERIALIZED_NAME_CLUSTER_ARN = "clusterArn";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ARN)
  private String clusterArn;

  public static final String SERIALIZED_NAME_STARTED_BY = "startedBy";
  @SerializedName(SERIALIZED_NAME_STARTED_BY)
  private String startedBy;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TASK_DEFINITION = "taskDefinition";
  @SerializedName(SERIALIZED_NAME_TASK_DEFINITION)
  private String taskDefinition;

  public static final String SERIALIZED_NAME_COMPUTED_DESIRED_COUNT = "computedDesiredCount";
  @SerializedName(SERIALIZED_NAME_COMPUTED_DESIRED_COUNT)
  private Integer computedDesiredCount;

  public static final String SERIALIZED_NAME_PENDING_COUNT = "pendingCount";
  @SerializedName(SERIALIZED_NAME_PENDING_COUNT)
  private Integer pendingCount;

  public static final String SERIALIZED_NAME_RUNNING_COUNT = "runningCount";
  @SerializedName(SERIALIZED_NAME_RUNNING_COUNT)
  private Integer runningCount;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_LAUNCH_TYPE = "launchType";
  @SerializedName(SERIALIZED_NAME_LAUNCH_TYPE)
  private LaunchType launchType;

  public static final String SERIALIZED_NAME_CAPACITY_PROVIDER_STRATEGY = "capacityProviderStrategy";
  @SerializedName(SERIALIZED_NAME_CAPACITY_PROVIDER_STRATEGY)
  private List capacityProviderStrategy;

  public static final String SERIALIZED_NAME_PLATFORM_VERSION = "platformVersion";
  @SerializedName(SERIALIZED_NAME_PLATFORM_VERSION)
  private String platformVersion;

  public static final String SERIALIZED_NAME_PLATFORM_FAMILY = "platformFamily";
  @SerializedName(SERIALIZED_NAME_PLATFORM_FAMILY)
  private String platformFamily;

  public static final String SERIALIZED_NAME_NETWORK_CONFIGURATION = "networkConfiguration";
  @SerializedName(SERIALIZED_NAME_NETWORK_CONFIGURATION)
  private TaskSetNetworkConfiguration networkConfiguration;

  public static final String SERIALIZED_NAME_LOAD_BALANCERS = "loadBalancers";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCERS)
  private List loadBalancers;

  public static final String SERIALIZED_NAME_SERVICE_REGISTRIES = "serviceRegistries";
  @SerializedName(SERIALIZED_NAME_SERVICE_REGISTRIES)
  private List serviceRegistries;

  public static final String SERIALIZED_NAME_SCALE = "scale";
  @SerializedName(SERIALIZED_NAME_SCALE)
  private TaskSetScale scale;

  public static final String SERIALIZED_NAME_STABILITY_STATUS = "stabilityStatus";
  @SerializedName(SERIALIZED_NAME_STABILITY_STATUS)
  private StabilityStatus stabilityStatus;

  public static final String SERIALIZED_NAME_STABILITY_STATUS_AT = "stabilityStatusAt";
  @SerializedName(SERIALIZED_NAME_STABILITY_STATUS_AT)
  private OffsetDateTime stabilityStatusAt;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public DeleteTaskSetResponseTaskSet() {
  }

  public DeleteTaskSetResponseTaskSet id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public DeleteTaskSetResponseTaskSet taskSetArn(String taskSetArn) {
    this.taskSetArn = taskSetArn;
    return this;
  }

  /**
   * Get taskSetArn
   * @return taskSetArn
   */
  @javax.annotation.Nullable
  public String getTaskSetArn() {
    return taskSetArn;
  }

  public void setTaskSetArn(String taskSetArn) {
    this.taskSetArn = taskSetArn;
  }


  public DeleteTaskSetResponseTaskSet serviceArn(String serviceArn) {
    this.serviceArn = serviceArn;
    return this;
  }

  /**
   * Get serviceArn
   * @return serviceArn
   */
  @javax.annotation.Nullable
  public String getServiceArn() {
    return serviceArn;
  }

  public void setServiceArn(String serviceArn) {
    this.serviceArn = serviceArn;
  }


  public DeleteTaskSetResponseTaskSet clusterArn(String clusterArn) {
    this.clusterArn = clusterArn;
    return this;
  }

  /**
   * Get clusterArn
   * @return clusterArn
   */
  @javax.annotation.Nullable
  public String getClusterArn() {
    return clusterArn;
  }

  public void setClusterArn(String clusterArn) {
    this.clusterArn = clusterArn;
  }


  public DeleteTaskSetResponseTaskSet startedBy(String startedBy) {
    this.startedBy = startedBy;
    return this;
  }

  /**
   * Get startedBy
   * @return startedBy
   */
  @javax.annotation.Nullable
  public String getStartedBy() {
    return startedBy;
  }

  public void setStartedBy(String startedBy) {
    this.startedBy = startedBy;
  }


  public DeleteTaskSetResponseTaskSet externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

  /**
   * Get externalId
   * @return externalId
   */
  @javax.annotation.Nullable
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public DeleteTaskSetResponseTaskSet status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public DeleteTaskSetResponseTaskSet taskDefinition(String taskDefinition) {
    this.taskDefinition = taskDefinition;
    return this;
  }

  /**
   * Get taskDefinition
   * @return taskDefinition
   */
  @javax.annotation.Nullable
  public String getTaskDefinition() {
    return taskDefinition;
  }

  public void setTaskDefinition(String taskDefinition) {
    this.taskDefinition = taskDefinition;
  }


  public DeleteTaskSetResponseTaskSet computedDesiredCount(Integer computedDesiredCount) {
    this.computedDesiredCount = computedDesiredCount;
    return this;
  }

  /**
   * Get computedDesiredCount
   * @return computedDesiredCount
   */
  @javax.annotation.Nullable
  public Integer getComputedDesiredCount() {
    return computedDesiredCount;
  }

  public void setComputedDesiredCount(Integer computedDesiredCount) {
    this.computedDesiredCount = computedDesiredCount;
  }


  public DeleteTaskSetResponseTaskSet pendingCount(Integer pendingCount) {
    this.pendingCount = pendingCount;
    return this;
  }

  /**
   * Get pendingCount
   * @return pendingCount
   */
  @javax.annotation.Nullable
  public Integer getPendingCount() {
    return pendingCount;
  }

  public void setPendingCount(Integer pendingCount) {
    this.pendingCount = pendingCount;
  }


  public DeleteTaskSetResponseTaskSet runningCount(Integer runningCount) {
    this.runningCount = runningCount;
    return this;
  }

  /**
   * Get runningCount
   * @return runningCount
   */
  @javax.annotation.Nullable
  public Integer getRunningCount() {
    return runningCount;
  }

  public void setRunningCount(Integer runningCount) {
    this.runningCount = runningCount;
  }


  public DeleteTaskSetResponseTaskSet createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DeleteTaskSetResponseTaskSet updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public DeleteTaskSetResponseTaskSet launchType(LaunchType launchType) {
    this.launchType = launchType;
    return this;
  }

  /**
   * Get launchType
   * @return launchType
   */
  @javax.annotation.Nullable
  public LaunchType getLaunchType() {
    return launchType;
  }

  public void setLaunchType(LaunchType launchType) {
    this.launchType = launchType;
  }


  public DeleteTaskSetResponseTaskSet capacityProviderStrategy(List capacityProviderStrategy) {
    this.capacityProviderStrategy = capacityProviderStrategy;
    return this;
  }

  /**
   * Get capacityProviderStrategy
   * @return capacityProviderStrategy
   */
  @javax.annotation.Nullable
  public List getCapacityProviderStrategy() {
    return capacityProviderStrategy;
  }

  public void setCapacityProviderStrategy(List capacityProviderStrategy) {
    this.capacityProviderStrategy = capacityProviderStrategy;
  }


  public DeleteTaskSetResponseTaskSet platformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
    return this;
  }

  /**
   * Get platformVersion
   * @return platformVersion
   */
  @javax.annotation.Nullable
  public String getPlatformVersion() {
    return platformVersion;
  }

  public void setPlatformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
  }


  public DeleteTaskSetResponseTaskSet platformFamily(String platformFamily) {
    this.platformFamily = platformFamily;
    return this;
  }

  /**
   * Get platformFamily
   * @return platformFamily
   */
  @javax.annotation.Nullable
  public String getPlatformFamily() {
    return platformFamily;
  }

  public void setPlatformFamily(String platformFamily) {
    this.platformFamily = platformFamily;
  }


  public DeleteTaskSetResponseTaskSet networkConfiguration(TaskSetNetworkConfiguration networkConfiguration) {
    this.networkConfiguration = networkConfiguration;
    return this;
  }

  /**
   * Get networkConfiguration
   * @return networkConfiguration
   */
  @javax.annotation.Nullable
  public TaskSetNetworkConfiguration getNetworkConfiguration() {
    return networkConfiguration;
  }

  public void setNetworkConfiguration(TaskSetNetworkConfiguration networkConfiguration) {
    this.networkConfiguration = networkConfiguration;
  }


  public DeleteTaskSetResponseTaskSet loadBalancers(List loadBalancers) {
    this.loadBalancers = loadBalancers;
    return this;
  }

  /**
   * Get loadBalancers
   * @return loadBalancers
   */
  @javax.annotation.Nullable
  public List getLoadBalancers() {
    return loadBalancers;
  }

  public void setLoadBalancers(List loadBalancers) {
    this.loadBalancers = loadBalancers;
  }


  public DeleteTaskSetResponseTaskSet serviceRegistries(List serviceRegistries) {
    this.serviceRegistries = serviceRegistries;
    return this;
  }

  /**
   * Get serviceRegistries
   * @return serviceRegistries
   */
  @javax.annotation.Nullable
  public List getServiceRegistries() {
    return serviceRegistries;
  }

  public void setServiceRegistries(List serviceRegistries) {
    this.serviceRegistries = serviceRegistries;
  }


  public DeleteTaskSetResponseTaskSet scale(TaskSetScale scale) {
    this.scale = scale;
    return this;
  }

  /**
   * Get scale
   * @return scale
   */
  @javax.annotation.Nullable
  public TaskSetScale getScale() {
    return scale;
  }

  public void setScale(TaskSetScale scale) {
    this.scale = scale;
  }


  public DeleteTaskSetResponseTaskSet stabilityStatus(StabilityStatus stabilityStatus) {
    this.stabilityStatus = stabilityStatus;
    return this;
  }

  /**
   * Get stabilityStatus
   * @return stabilityStatus
   */
  @javax.annotation.Nullable
  public StabilityStatus getStabilityStatus() {
    return stabilityStatus;
  }

  public void setStabilityStatus(StabilityStatus stabilityStatus) {
    this.stabilityStatus = stabilityStatus;
  }


  public DeleteTaskSetResponseTaskSet stabilityStatusAt(OffsetDateTime stabilityStatusAt) {
    this.stabilityStatusAt = stabilityStatusAt;
    return this;
  }

  /**
   * Get stabilityStatusAt
   * @return stabilityStatusAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStabilityStatusAt() {
    return stabilityStatusAt;
  }

  public void setStabilityStatusAt(OffsetDateTime stabilityStatusAt) {
    this.stabilityStatusAt = stabilityStatusAt;
  }


  public DeleteTaskSetResponseTaskSet tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteTaskSetResponseTaskSet deleteTaskSetResponseTaskSet = (DeleteTaskSetResponseTaskSet) o;
    return Objects.equals(this.id, deleteTaskSetResponseTaskSet.id) &&
        Objects.equals(this.taskSetArn, deleteTaskSetResponseTaskSet.taskSetArn) &&
        Objects.equals(this.serviceArn, deleteTaskSetResponseTaskSet.serviceArn) &&
        Objects.equals(this.clusterArn, deleteTaskSetResponseTaskSet.clusterArn) &&
        Objects.equals(this.startedBy, deleteTaskSetResponseTaskSet.startedBy) &&
        Objects.equals(this.externalId, deleteTaskSetResponseTaskSet.externalId) &&
        Objects.equals(this.status, deleteTaskSetResponseTaskSet.status) &&
        Objects.equals(this.taskDefinition, deleteTaskSetResponseTaskSet.taskDefinition) &&
        Objects.equals(this.computedDesiredCount, deleteTaskSetResponseTaskSet.computedDesiredCount) &&
        Objects.equals(this.pendingCount, deleteTaskSetResponseTaskSet.pendingCount) &&
        Objects.equals(this.runningCount, deleteTaskSetResponseTaskSet.runningCount) &&
        Objects.equals(this.createdAt, deleteTaskSetResponseTaskSet.createdAt) &&
        Objects.equals(this.updatedAt, deleteTaskSetResponseTaskSet.updatedAt) &&
        Objects.equals(this.launchType, deleteTaskSetResponseTaskSet.launchType) &&
        Objects.equals(this.capacityProviderStrategy, deleteTaskSetResponseTaskSet.capacityProviderStrategy) &&
        Objects.equals(this.platformVersion, deleteTaskSetResponseTaskSet.platformVersion) &&
        Objects.equals(this.platformFamily, deleteTaskSetResponseTaskSet.platformFamily) &&
        Objects.equals(this.networkConfiguration, deleteTaskSetResponseTaskSet.networkConfiguration) &&
        Objects.equals(this.loadBalancers, deleteTaskSetResponseTaskSet.loadBalancers) &&
        Objects.equals(this.serviceRegistries, deleteTaskSetResponseTaskSet.serviceRegistries) &&
        Objects.equals(this.scale, deleteTaskSetResponseTaskSet.scale) &&
        Objects.equals(this.stabilityStatus, deleteTaskSetResponseTaskSet.stabilityStatus) &&
        Objects.equals(this.stabilityStatusAt, deleteTaskSetResponseTaskSet.stabilityStatusAt) &&
        Objects.equals(this.tags, deleteTaskSetResponseTaskSet.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, taskSetArn, serviceArn, clusterArn, startedBy, externalId, status, taskDefinition, computedDesiredCount, pendingCount, runningCount, createdAt, updatedAt, launchType, capacityProviderStrategy, platformVersion, platformFamily, networkConfiguration, loadBalancers, serviceRegistries, scale, stabilityStatus, stabilityStatusAt, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteTaskSetResponseTaskSet {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    taskSetArn: ").append(toIndentedString(taskSetArn)).append("\n");
    sb.append("    serviceArn: ").append(toIndentedString(serviceArn)).append("\n");
    sb.append("    clusterArn: ").append(toIndentedString(clusterArn)).append("\n");
    sb.append("    startedBy: ").append(toIndentedString(startedBy)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    taskDefinition: ").append(toIndentedString(taskDefinition)).append("\n");
    sb.append("    computedDesiredCount: ").append(toIndentedString(computedDesiredCount)).append("\n");
    sb.append("    pendingCount: ").append(toIndentedString(pendingCount)).append("\n");
    sb.append("    runningCount: ").append(toIndentedString(runningCount)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    launchType: ").append(toIndentedString(launchType)).append("\n");
    sb.append("    capacityProviderStrategy: ").append(toIndentedString(capacityProviderStrategy)).append("\n");
    sb.append("    platformVersion: ").append(toIndentedString(platformVersion)).append("\n");
    sb.append("    platformFamily: ").append(toIndentedString(platformFamily)).append("\n");
    sb.append("    networkConfiguration: ").append(toIndentedString(networkConfiguration)).append("\n");
    sb.append("    loadBalancers: ").append(toIndentedString(loadBalancers)).append("\n");
    sb.append("    serviceRegistries: ").append(toIndentedString(serviceRegistries)).append("\n");
    sb.append("    scale: ").append(toIndentedString(scale)).append("\n");
    sb.append("    stabilityStatus: ").append(toIndentedString(stabilityStatus)).append("\n");
    sb.append("    stabilityStatusAt: ").append(toIndentedString(stabilityStatusAt)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("taskSetArn");
    openapiFields.add("serviceArn");
    openapiFields.add("clusterArn");
    openapiFields.add("startedBy");
    openapiFields.add("externalId");
    openapiFields.add("status");
    openapiFields.add("taskDefinition");
    openapiFields.add("computedDesiredCount");
    openapiFields.add("pendingCount");
    openapiFields.add("runningCount");
    openapiFields.add("createdAt");
    openapiFields.add("updatedAt");
    openapiFields.add("launchType");
    openapiFields.add("capacityProviderStrategy");
    openapiFields.add("platformVersion");
    openapiFields.add("platformFamily");
    openapiFields.add("networkConfiguration");
    openapiFields.add("loadBalancers");
    openapiFields.add("serviceRegistries");
    openapiFields.add("scale");
    openapiFields.add("stabilityStatus");
    openapiFields.add("stabilityStatusAt");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeleteTaskSetResponseTaskSet
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeleteTaskSetResponseTaskSet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeleteTaskSetResponseTaskSet is not found in the empty JSON string", DeleteTaskSetResponseTaskSet.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeleteTaskSetResponseTaskSet.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeleteTaskSetResponseTaskSet` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("id"));
      }
      // validate the optional field `taskSetArn`
      if (jsonObj.get("taskSetArn") != null && !jsonObj.get("taskSetArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("taskSetArn"));
      }
      // validate the optional field `serviceArn`
      if (jsonObj.get("serviceArn") != null && !jsonObj.get("serviceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceArn"));
      }
      // validate the optional field `clusterArn`
      if (jsonObj.get("clusterArn") != null && !jsonObj.get("clusterArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clusterArn"));
      }
      // validate the optional field `startedBy`
      if (jsonObj.get("startedBy") != null && !jsonObj.get("startedBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("startedBy"));
      }
      // validate the optional field `externalId`
      if (jsonObj.get("externalId") != null && !jsonObj.get("externalId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("externalId"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `taskDefinition`
      if (jsonObj.get("taskDefinition") != null && !jsonObj.get("taskDefinition").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("taskDefinition"));
      }
      // validate the optional field `computedDesiredCount`
      if (jsonObj.get("computedDesiredCount") != null && !jsonObj.get("computedDesiredCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("computedDesiredCount"));
      }
      // validate the optional field `pendingCount`
      if (jsonObj.get("pendingCount") != null && !jsonObj.get("pendingCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("pendingCount"));
      }
      // validate the optional field `runningCount`
      if (jsonObj.get("runningCount") != null && !jsonObj.get("runningCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("runningCount"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `updatedAt`
      if (jsonObj.get("updatedAt") != null && !jsonObj.get("updatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("updatedAt"));
      }
      // validate the optional field `launchType`
      if (jsonObj.get("launchType") != null && !jsonObj.get("launchType").isJsonNull()) {
        LaunchType.validateJsonElement(jsonObj.get("launchType"));
      }
      // validate the optional field `capacityProviderStrategy`
      if (jsonObj.get("capacityProviderStrategy") != null && !jsonObj.get("capacityProviderStrategy").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("capacityProviderStrategy"));
      }
      // validate the optional field `platformVersion`
      if (jsonObj.get("platformVersion") != null && !jsonObj.get("platformVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("platformVersion"));
      }
      // validate the optional field `platformFamily`
      if (jsonObj.get("platformFamily") != null && !jsonObj.get("platformFamily").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("platformFamily"));
      }
      // validate the optional field `networkConfiguration`
      if (jsonObj.get("networkConfiguration") != null && !jsonObj.get("networkConfiguration").isJsonNull()) {
        TaskSetNetworkConfiguration.validateJsonElement(jsonObj.get("networkConfiguration"));
      }
      // validate the optional field `loadBalancers`
      if (jsonObj.get("loadBalancers") != null && !jsonObj.get("loadBalancers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("loadBalancers"));
      }
      // validate the optional field `serviceRegistries`
      if (jsonObj.get("serviceRegistries") != null && !jsonObj.get("serviceRegistries").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("serviceRegistries"));
      }
      // validate the optional field `scale`
      if (jsonObj.get("scale") != null && !jsonObj.get("scale").isJsonNull()) {
        TaskSetScale.validateJsonElement(jsonObj.get("scale"));
      }
      // validate the optional field `stabilityStatus`
      if (jsonObj.get("stabilityStatus") != null && !jsonObj.get("stabilityStatus").isJsonNull()) {
        StabilityStatus.validateJsonElement(jsonObj.get("stabilityStatus"));
      }
      // validate the optional field `stabilityStatusAt`
      if (jsonObj.get("stabilityStatusAt") != null && !jsonObj.get("stabilityStatusAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("stabilityStatusAt"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeleteTaskSetResponseTaskSet.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeleteTaskSetResponseTaskSet' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeleteTaskSetResponseTaskSet> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeleteTaskSetResponseTaskSet.class));

       return (TypeAdapter<T>) new TypeAdapter<DeleteTaskSetResponseTaskSet>() {
           @Override
           public void write(JsonWriter out, DeleteTaskSetResponseTaskSet value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeleteTaskSetResponseTaskSet read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeleteTaskSetResponseTaskSet given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeleteTaskSetResponseTaskSet
   * @throws IOException if the JSON string is invalid with respect to DeleteTaskSetResponseTaskSet
   */
  public static DeleteTaskSetResponseTaskSet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeleteTaskSetResponseTaskSet.class);
  }

  /**
   * Convert an instance of DeleteTaskSetResponseTaskSet to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

