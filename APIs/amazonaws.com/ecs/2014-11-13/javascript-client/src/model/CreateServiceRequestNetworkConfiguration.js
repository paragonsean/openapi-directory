/**
 * Amazon EC2 Container Service
 * <fullname>Amazon Elastic Container Service</fullname> <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service. It makes it easy to run, stop, and manage Docker containers. You can host your cluster on a serverless infrastructure that's managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises) instances that you manage.</p> <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API calls. This makes it easy to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. With Amazon ECS, you don't need to operate your own cluster management and configuration management systems. You also don't need to worry about scaling your management infrastructure.</p>
 *
 * The version of the OpenAPI document: 2014-11-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworkConfiguration from './NetworkConfiguration';
import NetworkConfigurationAwsvpcConfiguration from './NetworkConfigurationAwsvpcConfiguration';

/**
 * The CreateServiceRequestNetworkConfiguration model module.
 * @module model/CreateServiceRequestNetworkConfiguration
 * @version 2014-11-13
 */
class CreateServiceRequestNetworkConfiguration {
    /**
     * Constructs a new <code>CreateServiceRequestNetworkConfiguration</code>.
     * @alias module:model/CreateServiceRequestNetworkConfiguration
     * @implements module:model/NetworkConfiguration
     */
    constructor() { 
        NetworkConfiguration.initialize(this);
        CreateServiceRequestNetworkConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateServiceRequestNetworkConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateServiceRequestNetworkConfiguration} obj Optional instance to populate.
     * @return {module:model/CreateServiceRequestNetworkConfiguration} The populated <code>CreateServiceRequestNetworkConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateServiceRequestNetworkConfiguration();
            NetworkConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('awsvpcConfiguration')) {
                obj['awsvpcConfiguration'] = NetworkConfigurationAwsvpcConfiguration.constructFromObject(data['awsvpcConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateServiceRequestNetworkConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateServiceRequestNetworkConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `awsvpcConfiguration`
        if (data['awsvpcConfiguration']) { // data not null
          NetworkConfigurationAwsvpcConfiguration.validateJSON(data['awsvpcConfiguration']);
        }

        return true;
    }


}



/**
 * @member {module:model/NetworkConfigurationAwsvpcConfiguration} awsvpcConfiguration
 */
CreateServiceRequestNetworkConfiguration.prototype['awsvpcConfiguration'] = undefined;


// Implement NetworkConfiguration interface:
/**
 * @member {module:model/NetworkConfigurationAwsvpcConfiguration} awsvpcConfiguration
 */
NetworkConfiguration.prototype['awsvpcConfiguration'] = undefined;




export default CreateServiceRequestNetworkConfiguration;

