# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_cluster_request_configuration import CreateClusterRequestConfiguration
from openapi_server.models.create_cluster_request_service_connect_defaults import CreateClusterRequestServiceConnectDefaults
from openapi_server import util


class CreateClusterRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_name: str=None, tags: List=None, settings: List=None, configuration: CreateClusterRequestConfiguration=None, capacity_providers: List=None, default_capacity_provider_strategy: List=None, service_connect_defaults: CreateClusterRequestServiceConnectDefaults=None):
        """CreateClusterRequest - a model defined in OpenAPI

        :param cluster_name: The cluster_name of this CreateClusterRequest.
        :param tags: The tags of this CreateClusterRequest.
        :param settings: The settings of this CreateClusterRequest.
        :param configuration: The configuration of this CreateClusterRequest.
        :param capacity_providers: The capacity_providers of this CreateClusterRequest.
        :param default_capacity_provider_strategy: The default_capacity_provider_strategy of this CreateClusterRequest.
        :param service_connect_defaults: The service_connect_defaults of this CreateClusterRequest.
        """
        self.openapi_types = {
            'cluster_name': str,
            'tags': List,
            'settings': List,
            'configuration': CreateClusterRequestConfiguration,
            'capacity_providers': List,
            'default_capacity_provider_strategy': List,
            'service_connect_defaults': CreateClusterRequestServiceConnectDefaults
        }

        self.attribute_map = {
            'cluster_name': 'clusterName',
            'tags': 'tags',
            'settings': 'settings',
            'configuration': 'configuration',
            'capacity_providers': 'capacityProviders',
            'default_capacity_provider_strategy': 'defaultCapacityProviderStrategy',
            'service_connect_defaults': 'serviceConnectDefaults'
        }

        self._cluster_name = cluster_name
        self._tags = tags
        self._settings = settings
        self._configuration = configuration
        self._capacity_providers = capacity_providers
        self._default_capacity_provider_strategy = default_capacity_provider_strategy
        self._service_connect_defaults = service_connect_defaults

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateClusterRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateClusterRequest of this CreateClusterRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_name(self):
        """Gets the cluster_name of this CreateClusterRequest.


        :return: The cluster_name of this CreateClusterRequest.
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this CreateClusterRequest.


        :param cluster_name: The cluster_name of this CreateClusterRequest.
        :type cluster_name: str
        """

        self._cluster_name = cluster_name

    @property
    def tags(self):
        """Gets the tags of this CreateClusterRequest.


        :return: The tags of this CreateClusterRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateClusterRequest.


        :param tags: The tags of this CreateClusterRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def settings(self):
        """Gets the settings of this CreateClusterRequest.


        :return: The settings of this CreateClusterRequest.
        :rtype: List
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this CreateClusterRequest.


        :param settings: The settings of this CreateClusterRequest.
        :type settings: List
        """

        self._settings = settings

    @property
    def configuration(self):
        """Gets the configuration of this CreateClusterRequest.


        :return: The configuration of this CreateClusterRequest.
        :rtype: CreateClusterRequestConfiguration
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this CreateClusterRequest.


        :param configuration: The configuration of this CreateClusterRequest.
        :type configuration: CreateClusterRequestConfiguration
        """

        self._configuration = configuration

    @property
    def capacity_providers(self):
        """Gets the capacity_providers of this CreateClusterRequest.


        :return: The capacity_providers of this CreateClusterRequest.
        :rtype: List
        """
        return self._capacity_providers

    @capacity_providers.setter
    def capacity_providers(self, capacity_providers):
        """Sets the capacity_providers of this CreateClusterRequest.


        :param capacity_providers: The capacity_providers of this CreateClusterRequest.
        :type capacity_providers: List
        """

        self._capacity_providers = capacity_providers

    @property
    def default_capacity_provider_strategy(self):
        """Gets the default_capacity_provider_strategy of this CreateClusterRequest.


        :return: The default_capacity_provider_strategy of this CreateClusterRequest.
        :rtype: List
        """
        return self._default_capacity_provider_strategy

    @default_capacity_provider_strategy.setter
    def default_capacity_provider_strategy(self, default_capacity_provider_strategy):
        """Sets the default_capacity_provider_strategy of this CreateClusterRequest.


        :param default_capacity_provider_strategy: The default_capacity_provider_strategy of this CreateClusterRequest.
        :type default_capacity_provider_strategy: List
        """

        self._default_capacity_provider_strategy = default_capacity_provider_strategy

    @property
    def service_connect_defaults(self):
        """Gets the service_connect_defaults of this CreateClusterRequest.


        :return: The service_connect_defaults of this CreateClusterRequest.
        :rtype: CreateClusterRequestServiceConnectDefaults
        """
        return self._service_connect_defaults

    @service_connect_defaults.setter
    def service_connect_defaults(self, service_connect_defaults):
        """Sets the service_connect_defaults of this CreateClusterRequest.


        :param service_connect_defaults: The service_connect_defaults of this CreateClusterRequest.
        :type service_connect_defaults: CreateClusterRequestServiceConnectDefaults
        """

        self._service_connect_defaults = service_connect_defaults
