# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DiscoverPollEndpointResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint: str=None, telemetry_endpoint: str=None, service_connect_endpoint: str=None):
        """DiscoverPollEndpointResponse - a model defined in OpenAPI

        :param endpoint: The endpoint of this DiscoverPollEndpointResponse.
        :param telemetry_endpoint: The telemetry_endpoint of this DiscoverPollEndpointResponse.
        :param service_connect_endpoint: The service_connect_endpoint of this DiscoverPollEndpointResponse.
        """
        self.openapi_types = {
            'endpoint': str,
            'telemetry_endpoint': str,
            'service_connect_endpoint': str
        }

        self.attribute_map = {
            'endpoint': 'endpoint',
            'telemetry_endpoint': 'telemetryEndpoint',
            'service_connect_endpoint': 'serviceConnectEndpoint'
        }

        self._endpoint = endpoint
        self._telemetry_endpoint = telemetry_endpoint
        self._service_connect_endpoint = service_connect_endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiscoverPollEndpointResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiscoverPollEndpointResponse of this DiscoverPollEndpointResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint(self):
        """Gets the endpoint of this DiscoverPollEndpointResponse.


        :return: The endpoint of this DiscoverPollEndpointResponse.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this DiscoverPollEndpointResponse.


        :param endpoint: The endpoint of this DiscoverPollEndpointResponse.
        :type endpoint: str
        """

        self._endpoint = endpoint

    @property
    def telemetry_endpoint(self):
        """Gets the telemetry_endpoint of this DiscoverPollEndpointResponse.


        :return: The telemetry_endpoint of this DiscoverPollEndpointResponse.
        :rtype: str
        """
        return self._telemetry_endpoint

    @telemetry_endpoint.setter
    def telemetry_endpoint(self, telemetry_endpoint):
        """Sets the telemetry_endpoint of this DiscoverPollEndpointResponse.


        :param telemetry_endpoint: The telemetry_endpoint of this DiscoverPollEndpointResponse.
        :type telemetry_endpoint: str
        """

        self._telemetry_endpoint = telemetry_endpoint

    @property
    def service_connect_endpoint(self):
        """Gets the service_connect_endpoint of this DiscoverPollEndpointResponse.


        :return: The service_connect_endpoint of this DiscoverPollEndpointResponse.
        :rtype: str
        """
        return self._service_connect_endpoint

    @service_connect_endpoint.setter
    def service_connect_endpoint(self, service_connect_endpoint):
        """Sets the service_connect_endpoint of this DiscoverPollEndpointResponse.


        :param service_connect_endpoint: The service_connect_endpoint of this DiscoverPollEndpointResponse.
        :type service_connect_endpoint: str
        """

        self._service_connect_endpoint = service_connect_endpoint
