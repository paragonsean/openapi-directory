# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.desired_status import DesiredStatus
from openapi_server.models.launch_type import LaunchType
from openapi_server import util


class ListTasksRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster: str=None, container_instance: str=None, family: str=None, next_token: str=None, max_results: int=None, started_by: str=None, service_name: str=None, desired_status: DesiredStatus=None, launch_type: LaunchType=None):
        """ListTasksRequest - a model defined in OpenAPI

        :param cluster: The cluster of this ListTasksRequest.
        :param container_instance: The container_instance of this ListTasksRequest.
        :param family: The family of this ListTasksRequest.
        :param next_token: The next_token of this ListTasksRequest.
        :param max_results: The max_results of this ListTasksRequest.
        :param started_by: The started_by of this ListTasksRequest.
        :param service_name: The service_name of this ListTasksRequest.
        :param desired_status: The desired_status of this ListTasksRequest.
        :param launch_type: The launch_type of this ListTasksRequest.
        """
        self.openapi_types = {
            'cluster': str,
            'container_instance': str,
            'family': str,
            'next_token': str,
            'max_results': int,
            'started_by': str,
            'service_name': str,
            'desired_status': DesiredStatus,
            'launch_type': LaunchType
        }

        self.attribute_map = {
            'cluster': 'cluster',
            'container_instance': 'containerInstance',
            'family': 'family',
            'next_token': 'nextToken',
            'max_results': 'maxResults',
            'started_by': 'startedBy',
            'service_name': 'serviceName',
            'desired_status': 'desiredStatus',
            'launch_type': 'launchType'
        }

        self._cluster = cluster
        self._container_instance = container_instance
        self._family = family
        self._next_token = next_token
        self._max_results = max_results
        self._started_by = started_by
        self._service_name = service_name
        self._desired_status = desired_status
        self._launch_type = launch_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTasksRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTasksRequest of this ListTasksRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this ListTasksRequest.


        :return: The cluster of this ListTasksRequest.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this ListTasksRequest.


        :param cluster: The cluster of this ListTasksRequest.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def container_instance(self):
        """Gets the container_instance of this ListTasksRequest.


        :return: The container_instance of this ListTasksRequest.
        :rtype: str
        """
        return self._container_instance

    @container_instance.setter
    def container_instance(self, container_instance):
        """Sets the container_instance of this ListTasksRequest.


        :param container_instance: The container_instance of this ListTasksRequest.
        :type container_instance: str
        """

        self._container_instance = container_instance

    @property
    def family(self):
        """Gets the family of this ListTasksRequest.


        :return: The family of this ListTasksRequest.
        :rtype: str
        """
        return self._family

    @family.setter
    def family(self, family):
        """Sets the family of this ListTasksRequest.


        :param family: The family of this ListTasksRequest.
        :type family: str
        """

        self._family = family

    @property
    def next_token(self):
        """Gets the next_token of this ListTasksRequest.


        :return: The next_token of this ListTasksRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListTasksRequest.


        :param next_token: The next_token of this ListTasksRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListTasksRequest.


        :return: The max_results of this ListTasksRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListTasksRequest.


        :param max_results: The max_results of this ListTasksRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def started_by(self):
        """Gets the started_by of this ListTasksRequest.


        :return: The started_by of this ListTasksRequest.
        :rtype: str
        """
        return self._started_by

    @started_by.setter
    def started_by(self, started_by):
        """Sets the started_by of this ListTasksRequest.


        :param started_by: The started_by of this ListTasksRequest.
        :type started_by: str
        """

        self._started_by = started_by

    @property
    def service_name(self):
        """Gets the service_name of this ListTasksRequest.


        :return: The service_name of this ListTasksRequest.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ListTasksRequest.


        :param service_name: The service_name of this ListTasksRequest.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def desired_status(self):
        """Gets the desired_status of this ListTasksRequest.


        :return: The desired_status of this ListTasksRequest.
        :rtype: DesiredStatus
        """
        return self._desired_status

    @desired_status.setter
    def desired_status(self, desired_status):
        """Sets the desired_status of this ListTasksRequest.


        :param desired_status: The desired_status of this ListTasksRequest.
        :type desired_status: DesiredStatus
        """

        self._desired_status = desired_status

    @property
    def launch_type(self):
        """Gets the launch_type of this ListTasksRequest.


        :return: The launch_type of this ListTasksRequest.
        :rtype: LaunchType
        """
        return self._launch_type

    @launch_type.setter
    def launch_type(self, launch_type):
        """Sets the launch_type of this ListTasksRequest.


        :param launch_type: The launch_type of this ListTasksRequest.
        :type launch_type: LaunchType
        """

        self._launch_type = launch_type
