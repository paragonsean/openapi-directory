# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transport_protocol import TransportProtocol
from openapi_server import util


class NetworkBinding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bind_ip: str=None, container_port: int=None, host_port: int=None, protocol: TransportProtocol=None, container_port_range: str=None, host_port_range: str=None):
        """NetworkBinding - a model defined in OpenAPI

        :param bind_ip: The bind_ip of this NetworkBinding.
        :param container_port: The container_port of this NetworkBinding.
        :param host_port: The host_port of this NetworkBinding.
        :param protocol: The protocol of this NetworkBinding.
        :param container_port_range: The container_port_range of this NetworkBinding.
        :param host_port_range: The host_port_range of this NetworkBinding.
        """
        self.openapi_types = {
            'bind_ip': str,
            'container_port': int,
            'host_port': int,
            'protocol': TransportProtocol,
            'container_port_range': str,
            'host_port_range': str
        }

        self.attribute_map = {
            'bind_ip': 'bindIP',
            'container_port': 'containerPort',
            'host_port': 'hostPort',
            'protocol': 'protocol',
            'container_port_range': 'containerPortRange',
            'host_port_range': 'hostPortRange'
        }

        self._bind_ip = bind_ip
        self._container_port = container_port
        self._host_port = host_port
        self._protocol = protocol
        self._container_port_range = container_port_range
        self._host_port_range = host_port_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkBinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkBinding of this NetworkBinding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bind_ip(self):
        """Gets the bind_ip of this NetworkBinding.


        :return: The bind_ip of this NetworkBinding.
        :rtype: str
        """
        return self._bind_ip

    @bind_ip.setter
    def bind_ip(self, bind_ip):
        """Sets the bind_ip of this NetworkBinding.


        :param bind_ip: The bind_ip of this NetworkBinding.
        :type bind_ip: str
        """

        self._bind_ip = bind_ip

    @property
    def container_port(self):
        """Gets the container_port of this NetworkBinding.


        :return: The container_port of this NetworkBinding.
        :rtype: int
        """
        return self._container_port

    @container_port.setter
    def container_port(self, container_port):
        """Sets the container_port of this NetworkBinding.


        :param container_port: The container_port of this NetworkBinding.
        :type container_port: int
        """

        self._container_port = container_port

    @property
    def host_port(self):
        """Gets the host_port of this NetworkBinding.


        :return: The host_port of this NetworkBinding.
        :rtype: int
        """
        return self._host_port

    @host_port.setter
    def host_port(self, host_port):
        """Sets the host_port of this NetworkBinding.


        :param host_port: The host_port of this NetworkBinding.
        :type host_port: int
        """

        self._host_port = host_port

    @property
    def protocol(self):
        """Gets the protocol of this NetworkBinding.


        :return: The protocol of this NetworkBinding.
        :rtype: TransportProtocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this NetworkBinding.


        :param protocol: The protocol of this NetworkBinding.
        :type protocol: TransportProtocol
        """

        self._protocol = protocol

    @property
    def container_port_range(self):
        """Gets the container_port_range of this NetworkBinding.


        :return: The container_port_range of this NetworkBinding.
        :rtype: str
        """
        return self._container_port_range

    @container_port_range.setter
    def container_port_range(self, container_port_range):
        """Sets the container_port_range of this NetworkBinding.


        :param container_port_range: The container_port_range of this NetworkBinding.
        :type container_port_range: str
        """

        self._container_port_range = container_port_range

    @property
    def host_port_range(self):
        """Gets the host_port_range of this NetworkBinding.


        :return: The host_port_range of this NetworkBinding.
        :rtype: str
        """
        return self._host_port_range

    @host_port_range.setter
    def host_port_range(self, host_port_range):
        """Sets the host_port_range of this NetworkBinding.


        :param host_port_range: The host_port_range of this NetworkBinding.
        :type host_port_range: str
        """

        self._host_port_range = host_port_range
