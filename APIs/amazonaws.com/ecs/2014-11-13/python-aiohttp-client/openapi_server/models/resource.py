# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Resource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, type: str=None, double_value: float=None, long_value: int=None, integer_value: int=None, string_set_value: List=None):
        """Resource - a model defined in OpenAPI

        :param name: The name of this Resource.
        :param type: The type of this Resource.
        :param double_value: The double_value of this Resource.
        :param long_value: The long_value of this Resource.
        :param integer_value: The integer_value of this Resource.
        :param string_set_value: The string_set_value of this Resource.
        """
        self.openapi_types = {
            'name': str,
            'type': str,
            'double_value': float,
            'long_value': int,
            'integer_value': int,
            'string_set_value': List
        }

        self.attribute_map = {
            'name': 'name',
            'type': 'type',
            'double_value': 'doubleValue',
            'long_value': 'longValue',
            'integer_value': 'integerValue',
            'string_set_value': 'stringSetValue'
        }

        self._name = name
        self._type = type
        self._double_value = double_value
        self._long_value = long_value
        self._integer_value = integer_value
        self._string_set_value = string_set_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Resource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Resource of this Resource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Resource.


        :return: The name of this Resource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Resource.


        :param name: The name of this Resource.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this Resource.


        :return: The type of this Resource.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Resource.


        :param type: The type of this Resource.
        :type type: str
        """

        self._type = type

    @property
    def double_value(self):
        """Gets the double_value of this Resource.


        :return: The double_value of this Resource.
        :rtype: float
        """
        return self._double_value

    @double_value.setter
    def double_value(self, double_value):
        """Sets the double_value of this Resource.


        :param double_value: The double_value of this Resource.
        :type double_value: float
        """

        self._double_value = double_value

    @property
    def long_value(self):
        """Gets the long_value of this Resource.


        :return: The long_value of this Resource.
        :rtype: int
        """
        return self._long_value

    @long_value.setter
    def long_value(self, long_value):
        """Sets the long_value of this Resource.


        :param long_value: The long_value of this Resource.
        :type long_value: int
        """

        self._long_value = long_value

    @property
    def integer_value(self):
        """Gets the integer_value of this Resource.


        :return: The integer_value of this Resource.
        :rtype: int
        """
        return self._integer_value

    @integer_value.setter
    def integer_value(self, integer_value):
        """Sets the integer_value of this Resource.


        :param integer_value: The integer_value of this Resource.
        :type integer_value: int
        """

        self._integer_value = integer_value

    @property
    def string_set_value(self):
        """Gets the string_set_value of this Resource.


        :return: The string_set_value of this Resource.
        :rtype: List
        """
        return self._string_set_value

    @string_set_value.setter
    def string_set_value(self, string_set_value):
        """Sets the string_set_value of this Resource.


        :param string_set_value: The string_set_value of this Resource.
        :type string_set_value: List
        """

        self._string_set_value = string_set_value
