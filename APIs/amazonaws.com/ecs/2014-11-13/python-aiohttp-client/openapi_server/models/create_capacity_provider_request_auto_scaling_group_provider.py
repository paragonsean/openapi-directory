# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_scaling_group_provider_managed_scaling import AutoScalingGroupProviderManagedScaling
from openapi_server.models.managed_termination_protection import ManagedTerminationProtection
from openapi_server import util


class CreateCapacityProviderRequestAutoScalingGroupProvider(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_scaling_group_arn: str=None, managed_scaling: AutoScalingGroupProviderManagedScaling=None, managed_termination_protection: ManagedTerminationProtection=None):
        """CreateCapacityProviderRequestAutoScalingGroupProvider - a model defined in OpenAPI

        :param auto_scaling_group_arn: The auto_scaling_group_arn of this CreateCapacityProviderRequestAutoScalingGroupProvider.
        :param managed_scaling: The managed_scaling of this CreateCapacityProviderRequestAutoScalingGroupProvider.
        :param managed_termination_protection: The managed_termination_protection of this CreateCapacityProviderRequestAutoScalingGroupProvider.
        """
        self.openapi_types = {
            'auto_scaling_group_arn': str,
            'managed_scaling': AutoScalingGroupProviderManagedScaling,
            'managed_termination_protection': ManagedTerminationProtection
        }

        self.attribute_map = {
            'auto_scaling_group_arn': 'autoScalingGroupArn',
            'managed_scaling': 'managedScaling',
            'managed_termination_protection': 'managedTerminationProtection'
        }

        self._auto_scaling_group_arn = auto_scaling_group_arn
        self._managed_scaling = managed_scaling
        self._managed_termination_protection = managed_termination_protection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCapacityProviderRequestAutoScalingGroupProvider':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCapacityProviderRequest_autoScalingGroupProvider of this CreateCapacityProviderRequestAutoScalingGroupProvider.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_scaling_group_arn(self):
        """Gets the auto_scaling_group_arn of this CreateCapacityProviderRequestAutoScalingGroupProvider.


        :return: The auto_scaling_group_arn of this CreateCapacityProviderRequestAutoScalingGroupProvider.
        :rtype: str
        """
        return self._auto_scaling_group_arn

    @auto_scaling_group_arn.setter
    def auto_scaling_group_arn(self, auto_scaling_group_arn):
        """Sets the auto_scaling_group_arn of this CreateCapacityProviderRequestAutoScalingGroupProvider.


        :param auto_scaling_group_arn: The auto_scaling_group_arn of this CreateCapacityProviderRequestAutoScalingGroupProvider.
        :type auto_scaling_group_arn: str
        """
        if auto_scaling_group_arn is None:
            raise ValueError("Invalid value for `auto_scaling_group_arn`, must not be `None`")

        self._auto_scaling_group_arn = auto_scaling_group_arn

    @property
    def managed_scaling(self):
        """Gets the managed_scaling of this CreateCapacityProviderRequestAutoScalingGroupProvider.


        :return: The managed_scaling of this CreateCapacityProviderRequestAutoScalingGroupProvider.
        :rtype: AutoScalingGroupProviderManagedScaling
        """
        return self._managed_scaling

    @managed_scaling.setter
    def managed_scaling(self, managed_scaling):
        """Sets the managed_scaling of this CreateCapacityProviderRequestAutoScalingGroupProvider.


        :param managed_scaling: The managed_scaling of this CreateCapacityProviderRequestAutoScalingGroupProvider.
        :type managed_scaling: AutoScalingGroupProviderManagedScaling
        """

        self._managed_scaling = managed_scaling

    @property
    def managed_termination_protection(self):
        """Gets the managed_termination_protection of this CreateCapacityProviderRequestAutoScalingGroupProvider.


        :return: The managed_termination_protection of this CreateCapacityProviderRequestAutoScalingGroupProvider.
        :rtype: ManagedTerminationProtection
        """
        return self._managed_termination_protection

    @managed_termination_protection.setter
    def managed_termination_protection(self, managed_termination_protection):
        """Sets the managed_termination_protection of this CreateCapacityProviderRequestAutoScalingGroupProvider.


        :param managed_termination_protection: The managed_termination_protection of this CreateCapacityProviderRequestAutoScalingGroupProvider.
        :type managed_termination_protection: ManagedTerminationProtection
        """

        self._managed_termination_protection = managed_termination_protection
