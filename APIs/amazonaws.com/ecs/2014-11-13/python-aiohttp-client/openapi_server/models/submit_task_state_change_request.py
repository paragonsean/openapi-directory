# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubmitTaskStateChangeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster: str=None, task: str=None, status: str=None, reason: str=None, containers: List=None, attachments: List=None, managed_agents: List=None, pull_started_at: datetime=None, pull_stopped_at: datetime=None, execution_stopped_at: datetime=None):
        """SubmitTaskStateChangeRequest - a model defined in OpenAPI

        :param cluster: The cluster of this SubmitTaskStateChangeRequest.
        :param task: The task of this SubmitTaskStateChangeRequest.
        :param status: The status of this SubmitTaskStateChangeRequest.
        :param reason: The reason of this SubmitTaskStateChangeRequest.
        :param containers: The containers of this SubmitTaskStateChangeRequest.
        :param attachments: The attachments of this SubmitTaskStateChangeRequest.
        :param managed_agents: The managed_agents of this SubmitTaskStateChangeRequest.
        :param pull_started_at: The pull_started_at of this SubmitTaskStateChangeRequest.
        :param pull_stopped_at: The pull_stopped_at of this SubmitTaskStateChangeRequest.
        :param execution_stopped_at: The execution_stopped_at of this SubmitTaskStateChangeRequest.
        """
        self.openapi_types = {
            'cluster': str,
            'task': str,
            'status': str,
            'reason': str,
            'containers': List,
            'attachments': List,
            'managed_agents': List,
            'pull_started_at': datetime,
            'pull_stopped_at': datetime,
            'execution_stopped_at': datetime
        }

        self.attribute_map = {
            'cluster': 'cluster',
            'task': 'task',
            'status': 'status',
            'reason': 'reason',
            'containers': 'containers',
            'attachments': 'attachments',
            'managed_agents': 'managedAgents',
            'pull_started_at': 'pullStartedAt',
            'pull_stopped_at': 'pullStoppedAt',
            'execution_stopped_at': 'executionStoppedAt'
        }

        self._cluster = cluster
        self._task = task
        self._status = status
        self._reason = reason
        self._containers = containers
        self._attachments = attachments
        self._managed_agents = managed_agents
        self._pull_started_at = pull_started_at
        self._pull_stopped_at = pull_stopped_at
        self._execution_stopped_at = execution_stopped_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubmitTaskStateChangeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubmitTaskStateChangeRequest of this SubmitTaskStateChangeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this SubmitTaskStateChangeRequest.


        :return: The cluster of this SubmitTaskStateChangeRequest.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this SubmitTaskStateChangeRequest.


        :param cluster: The cluster of this SubmitTaskStateChangeRequest.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def task(self):
        """Gets the task of this SubmitTaskStateChangeRequest.


        :return: The task of this SubmitTaskStateChangeRequest.
        :rtype: str
        """
        return self._task

    @task.setter
    def task(self, task):
        """Sets the task of this SubmitTaskStateChangeRequest.


        :param task: The task of this SubmitTaskStateChangeRequest.
        :type task: str
        """

        self._task = task

    @property
    def status(self):
        """Gets the status of this SubmitTaskStateChangeRequest.


        :return: The status of this SubmitTaskStateChangeRequest.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SubmitTaskStateChangeRequest.


        :param status: The status of this SubmitTaskStateChangeRequest.
        :type status: str
        """

        self._status = status

    @property
    def reason(self):
        """Gets the reason of this SubmitTaskStateChangeRequest.


        :return: The reason of this SubmitTaskStateChangeRequest.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this SubmitTaskStateChangeRequest.


        :param reason: The reason of this SubmitTaskStateChangeRequest.
        :type reason: str
        """

        self._reason = reason

    @property
    def containers(self):
        """Gets the containers of this SubmitTaskStateChangeRequest.


        :return: The containers of this SubmitTaskStateChangeRequest.
        :rtype: List
        """
        return self._containers

    @containers.setter
    def containers(self, containers):
        """Sets the containers of this SubmitTaskStateChangeRequest.


        :param containers: The containers of this SubmitTaskStateChangeRequest.
        :type containers: List
        """

        self._containers = containers

    @property
    def attachments(self):
        """Gets the attachments of this SubmitTaskStateChangeRequest.


        :return: The attachments of this SubmitTaskStateChangeRequest.
        :rtype: List
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this SubmitTaskStateChangeRequest.


        :param attachments: The attachments of this SubmitTaskStateChangeRequest.
        :type attachments: List
        """

        self._attachments = attachments

    @property
    def managed_agents(self):
        """Gets the managed_agents of this SubmitTaskStateChangeRequest.


        :return: The managed_agents of this SubmitTaskStateChangeRequest.
        :rtype: List
        """
        return self._managed_agents

    @managed_agents.setter
    def managed_agents(self, managed_agents):
        """Sets the managed_agents of this SubmitTaskStateChangeRequest.


        :param managed_agents: The managed_agents of this SubmitTaskStateChangeRequest.
        :type managed_agents: List
        """

        self._managed_agents = managed_agents

    @property
    def pull_started_at(self):
        """Gets the pull_started_at of this SubmitTaskStateChangeRequest.


        :return: The pull_started_at of this SubmitTaskStateChangeRequest.
        :rtype: datetime
        """
        return self._pull_started_at

    @pull_started_at.setter
    def pull_started_at(self, pull_started_at):
        """Sets the pull_started_at of this SubmitTaskStateChangeRequest.


        :param pull_started_at: The pull_started_at of this SubmitTaskStateChangeRequest.
        :type pull_started_at: datetime
        """

        self._pull_started_at = pull_started_at

    @property
    def pull_stopped_at(self):
        """Gets the pull_stopped_at of this SubmitTaskStateChangeRequest.


        :return: The pull_stopped_at of this SubmitTaskStateChangeRequest.
        :rtype: datetime
        """
        return self._pull_stopped_at

    @pull_stopped_at.setter
    def pull_stopped_at(self, pull_stopped_at):
        """Sets the pull_stopped_at of this SubmitTaskStateChangeRequest.


        :param pull_stopped_at: The pull_stopped_at of this SubmitTaskStateChangeRequest.
        :type pull_stopped_at: datetime
        """

        self._pull_stopped_at = pull_stopped_at

    @property
    def execution_stopped_at(self):
        """Gets the execution_stopped_at of this SubmitTaskStateChangeRequest.


        :return: The execution_stopped_at of this SubmitTaskStateChangeRequest.
        :rtype: datetime
        """
        return self._execution_stopped_at

    @execution_stopped_at.setter
    def execution_stopped_at(self, execution_stopped_at):
        """Sets the execution_stopped_at of this SubmitTaskStateChangeRequest.


        :param execution_stopped_at: The execution_stopped_at of this SubmitTaskStateChangeRequest.
        :type execution_stopped_at: datetime
        """

        self._execution_stopped_at = execution_stopped_at
