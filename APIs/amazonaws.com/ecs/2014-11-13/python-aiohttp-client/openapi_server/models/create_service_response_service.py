# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_service_request_deployment_configuration import CreateServiceRequestDeploymentConfiguration
from openapi_server.models.launch_type import LaunchType
from openapi_server.models.propagate_tags import PropagateTags
from openapi_server.models.scheduling_strategy import SchedulingStrategy
from openapi_server.models.service_deployment_controller import ServiceDeploymentController
from openapi_server.models.start_task_request_network_configuration import StartTaskRequestNetworkConfiguration
from openapi_server import util


class CreateServiceResponseService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_arn: str=None, service_name: str=None, cluster_arn: str=None, load_balancers: List=None, service_registries: List=None, status: str=None, desired_count: int=None, running_count: int=None, pending_count: int=None, launch_type: LaunchType=None, capacity_provider_strategy: List=None, platform_version: str=None, platform_family: str=None, task_definition: str=None, deployment_configuration: CreateServiceRequestDeploymentConfiguration=None, task_sets: List=None, deployments: List=None, role_arn: str=None, events: List=None, created_at: datetime=None, placement_constraints: List=None, placement_strategy: List=None, network_configuration: StartTaskRequestNetworkConfiguration=None, health_check_grace_period_seconds: int=None, scheduling_strategy: SchedulingStrategy=None, deployment_controller: ServiceDeploymentController=None, tags: List=None, created_by: str=None, enable_ecs_managed_tags: bool=None, propagate_tags: PropagateTags=None, enable_execute_command: bool=None):
        """CreateServiceResponseService - a model defined in OpenAPI

        :param service_arn: The service_arn of this CreateServiceResponseService.
        :param service_name: The service_name of this CreateServiceResponseService.
        :param cluster_arn: The cluster_arn of this CreateServiceResponseService.
        :param load_balancers: The load_balancers of this CreateServiceResponseService.
        :param service_registries: The service_registries of this CreateServiceResponseService.
        :param status: The status of this CreateServiceResponseService.
        :param desired_count: The desired_count of this CreateServiceResponseService.
        :param running_count: The running_count of this CreateServiceResponseService.
        :param pending_count: The pending_count of this CreateServiceResponseService.
        :param launch_type: The launch_type of this CreateServiceResponseService.
        :param capacity_provider_strategy: The capacity_provider_strategy of this CreateServiceResponseService.
        :param platform_version: The platform_version of this CreateServiceResponseService.
        :param platform_family: The platform_family of this CreateServiceResponseService.
        :param task_definition: The task_definition of this CreateServiceResponseService.
        :param deployment_configuration: The deployment_configuration of this CreateServiceResponseService.
        :param task_sets: The task_sets of this CreateServiceResponseService.
        :param deployments: The deployments of this CreateServiceResponseService.
        :param role_arn: The role_arn of this CreateServiceResponseService.
        :param events: The events of this CreateServiceResponseService.
        :param created_at: The created_at of this CreateServiceResponseService.
        :param placement_constraints: The placement_constraints of this CreateServiceResponseService.
        :param placement_strategy: The placement_strategy of this CreateServiceResponseService.
        :param network_configuration: The network_configuration of this CreateServiceResponseService.
        :param health_check_grace_period_seconds: The health_check_grace_period_seconds of this CreateServiceResponseService.
        :param scheduling_strategy: The scheduling_strategy of this CreateServiceResponseService.
        :param deployment_controller: The deployment_controller of this CreateServiceResponseService.
        :param tags: The tags of this CreateServiceResponseService.
        :param created_by: The created_by of this CreateServiceResponseService.
        :param enable_ecs_managed_tags: The enable_ecs_managed_tags of this CreateServiceResponseService.
        :param propagate_tags: The propagate_tags of this CreateServiceResponseService.
        :param enable_execute_command: The enable_execute_command of this CreateServiceResponseService.
        """
        self.openapi_types = {
            'service_arn': str,
            'service_name': str,
            'cluster_arn': str,
            'load_balancers': List,
            'service_registries': List,
            'status': str,
            'desired_count': int,
            'running_count': int,
            'pending_count': int,
            'launch_type': LaunchType,
            'capacity_provider_strategy': List,
            'platform_version': str,
            'platform_family': str,
            'task_definition': str,
            'deployment_configuration': CreateServiceRequestDeploymentConfiguration,
            'task_sets': List,
            'deployments': List,
            'role_arn': str,
            'events': List,
            'created_at': datetime,
            'placement_constraints': List,
            'placement_strategy': List,
            'network_configuration': StartTaskRequestNetworkConfiguration,
            'health_check_grace_period_seconds': int,
            'scheduling_strategy': SchedulingStrategy,
            'deployment_controller': ServiceDeploymentController,
            'tags': List,
            'created_by': str,
            'enable_ecs_managed_tags': bool,
            'propagate_tags': PropagateTags,
            'enable_execute_command': bool
        }

        self.attribute_map = {
            'service_arn': 'serviceArn',
            'service_name': 'serviceName',
            'cluster_arn': 'clusterArn',
            'load_balancers': 'loadBalancers',
            'service_registries': 'serviceRegistries',
            'status': 'status',
            'desired_count': 'desiredCount',
            'running_count': 'runningCount',
            'pending_count': 'pendingCount',
            'launch_type': 'launchType',
            'capacity_provider_strategy': 'capacityProviderStrategy',
            'platform_version': 'platformVersion',
            'platform_family': 'platformFamily',
            'task_definition': 'taskDefinition',
            'deployment_configuration': 'deploymentConfiguration',
            'task_sets': 'taskSets',
            'deployments': 'deployments',
            'role_arn': 'roleArn',
            'events': 'events',
            'created_at': 'createdAt',
            'placement_constraints': 'placementConstraints',
            'placement_strategy': 'placementStrategy',
            'network_configuration': 'networkConfiguration',
            'health_check_grace_period_seconds': 'healthCheckGracePeriodSeconds',
            'scheduling_strategy': 'schedulingStrategy',
            'deployment_controller': 'deploymentController',
            'tags': 'tags',
            'created_by': 'createdBy',
            'enable_ecs_managed_tags': 'enableECSManagedTags',
            'propagate_tags': 'propagateTags',
            'enable_execute_command': 'enableExecuteCommand'
        }

        self._service_arn = service_arn
        self._service_name = service_name
        self._cluster_arn = cluster_arn
        self._load_balancers = load_balancers
        self._service_registries = service_registries
        self._status = status
        self._desired_count = desired_count
        self._running_count = running_count
        self._pending_count = pending_count
        self._launch_type = launch_type
        self._capacity_provider_strategy = capacity_provider_strategy
        self._platform_version = platform_version
        self._platform_family = platform_family
        self._task_definition = task_definition
        self._deployment_configuration = deployment_configuration
        self._task_sets = task_sets
        self._deployments = deployments
        self._role_arn = role_arn
        self._events = events
        self._created_at = created_at
        self._placement_constraints = placement_constraints
        self._placement_strategy = placement_strategy
        self._network_configuration = network_configuration
        self._health_check_grace_period_seconds = health_check_grace_period_seconds
        self._scheduling_strategy = scheduling_strategy
        self._deployment_controller = deployment_controller
        self._tags = tags
        self._created_by = created_by
        self._enable_ecs_managed_tags = enable_ecs_managed_tags
        self._propagate_tags = propagate_tags
        self._enable_execute_command = enable_execute_command

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateServiceResponseService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateServiceResponse_service of this CreateServiceResponseService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_arn(self):
        """Gets the service_arn of this CreateServiceResponseService.


        :return: The service_arn of this CreateServiceResponseService.
        :rtype: str
        """
        return self._service_arn

    @service_arn.setter
    def service_arn(self, service_arn):
        """Sets the service_arn of this CreateServiceResponseService.


        :param service_arn: The service_arn of this CreateServiceResponseService.
        :type service_arn: str
        """

        self._service_arn = service_arn

    @property
    def service_name(self):
        """Gets the service_name of this CreateServiceResponseService.


        :return: The service_name of this CreateServiceResponseService.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this CreateServiceResponseService.


        :param service_name: The service_name of this CreateServiceResponseService.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def cluster_arn(self):
        """Gets the cluster_arn of this CreateServiceResponseService.


        :return: The cluster_arn of this CreateServiceResponseService.
        :rtype: str
        """
        return self._cluster_arn

    @cluster_arn.setter
    def cluster_arn(self, cluster_arn):
        """Sets the cluster_arn of this CreateServiceResponseService.


        :param cluster_arn: The cluster_arn of this CreateServiceResponseService.
        :type cluster_arn: str
        """

        self._cluster_arn = cluster_arn

    @property
    def load_balancers(self):
        """Gets the load_balancers of this CreateServiceResponseService.


        :return: The load_balancers of this CreateServiceResponseService.
        :rtype: List
        """
        return self._load_balancers

    @load_balancers.setter
    def load_balancers(self, load_balancers):
        """Sets the load_balancers of this CreateServiceResponseService.


        :param load_balancers: The load_balancers of this CreateServiceResponseService.
        :type load_balancers: List
        """

        self._load_balancers = load_balancers

    @property
    def service_registries(self):
        """Gets the service_registries of this CreateServiceResponseService.


        :return: The service_registries of this CreateServiceResponseService.
        :rtype: List
        """
        return self._service_registries

    @service_registries.setter
    def service_registries(self, service_registries):
        """Sets the service_registries of this CreateServiceResponseService.


        :param service_registries: The service_registries of this CreateServiceResponseService.
        :type service_registries: List
        """

        self._service_registries = service_registries

    @property
    def status(self):
        """Gets the status of this CreateServiceResponseService.


        :return: The status of this CreateServiceResponseService.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateServiceResponseService.


        :param status: The status of this CreateServiceResponseService.
        :type status: str
        """

        self._status = status

    @property
    def desired_count(self):
        """Gets the desired_count of this CreateServiceResponseService.


        :return: The desired_count of this CreateServiceResponseService.
        :rtype: int
        """
        return self._desired_count

    @desired_count.setter
    def desired_count(self, desired_count):
        """Sets the desired_count of this CreateServiceResponseService.


        :param desired_count: The desired_count of this CreateServiceResponseService.
        :type desired_count: int
        """

        self._desired_count = desired_count

    @property
    def running_count(self):
        """Gets the running_count of this CreateServiceResponseService.


        :return: The running_count of this CreateServiceResponseService.
        :rtype: int
        """
        return self._running_count

    @running_count.setter
    def running_count(self, running_count):
        """Sets the running_count of this CreateServiceResponseService.


        :param running_count: The running_count of this CreateServiceResponseService.
        :type running_count: int
        """

        self._running_count = running_count

    @property
    def pending_count(self):
        """Gets the pending_count of this CreateServiceResponseService.


        :return: The pending_count of this CreateServiceResponseService.
        :rtype: int
        """
        return self._pending_count

    @pending_count.setter
    def pending_count(self, pending_count):
        """Sets the pending_count of this CreateServiceResponseService.


        :param pending_count: The pending_count of this CreateServiceResponseService.
        :type pending_count: int
        """

        self._pending_count = pending_count

    @property
    def launch_type(self):
        """Gets the launch_type of this CreateServiceResponseService.


        :return: The launch_type of this CreateServiceResponseService.
        :rtype: LaunchType
        """
        return self._launch_type

    @launch_type.setter
    def launch_type(self, launch_type):
        """Sets the launch_type of this CreateServiceResponseService.


        :param launch_type: The launch_type of this CreateServiceResponseService.
        :type launch_type: LaunchType
        """

        self._launch_type = launch_type

    @property
    def capacity_provider_strategy(self):
        """Gets the capacity_provider_strategy of this CreateServiceResponseService.


        :return: The capacity_provider_strategy of this CreateServiceResponseService.
        :rtype: List
        """
        return self._capacity_provider_strategy

    @capacity_provider_strategy.setter
    def capacity_provider_strategy(self, capacity_provider_strategy):
        """Sets the capacity_provider_strategy of this CreateServiceResponseService.


        :param capacity_provider_strategy: The capacity_provider_strategy of this CreateServiceResponseService.
        :type capacity_provider_strategy: List
        """

        self._capacity_provider_strategy = capacity_provider_strategy

    @property
    def platform_version(self):
        """Gets the platform_version of this CreateServiceResponseService.


        :return: The platform_version of this CreateServiceResponseService.
        :rtype: str
        """
        return self._platform_version

    @platform_version.setter
    def platform_version(self, platform_version):
        """Sets the platform_version of this CreateServiceResponseService.


        :param platform_version: The platform_version of this CreateServiceResponseService.
        :type platform_version: str
        """

        self._platform_version = platform_version

    @property
    def platform_family(self):
        """Gets the platform_family of this CreateServiceResponseService.


        :return: The platform_family of this CreateServiceResponseService.
        :rtype: str
        """
        return self._platform_family

    @platform_family.setter
    def platform_family(self, platform_family):
        """Sets the platform_family of this CreateServiceResponseService.


        :param platform_family: The platform_family of this CreateServiceResponseService.
        :type platform_family: str
        """

        self._platform_family = platform_family

    @property
    def task_definition(self):
        """Gets the task_definition of this CreateServiceResponseService.


        :return: The task_definition of this CreateServiceResponseService.
        :rtype: str
        """
        return self._task_definition

    @task_definition.setter
    def task_definition(self, task_definition):
        """Sets the task_definition of this CreateServiceResponseService.


        :param task_definition: The task_definition of this CreateServiceResponseService.
        :type task_definition: str
        """

        self._task_definition = task_definition

    @property
    def deployment_configuration(self):
        """Gets the deployment_configuration of this CreateServiceResponseService.


        :return: The deployment_configuration of this CreateServiceResponseService.
        :rtype: CreateServiceRequestDeploymentConfiguration
        """
        return self._deployment_configuration

    @deployment_configuration.setter
    def deployment_configuration(self, deployment_configuration):
        """Sets the deployment_configuration of this CreateServiceResponseService.


        :param deployment_configuration: The deployment_configuration of this CreateServiceResponseService.
        :type deployment_configuration: CreateServiceRequestDeploymentConfiguration
        """

        self._deployment_configuration = deployment_configuration

    @property
    def task_sets(self):
        """Gets the task_sets of this CreateServiceResponseService.


        :return: The task_sets of this CreateServiceResponseService.
        :rtype: List
        """
        return self._task_sets

    @task_sets.setter
    def task_sets(self, task_sets):
        """Sets the task_sets of this CreateServiceResponseService.


        :param task_sets: The task_sets of this CreateServiceResponseService.
        :type task_sets: List
        """

        self._task_sets = task_sets

    @property
    def deployments(self):
        """Gets the deployments of this CreateServiceResponseService.


        :return: The deployments of this CreateServiceResponseService.
        :rtype: List
        """
        return self._deployments

    @deployments.setter
    def deployments(self, deployments):
        """Sets the deployments of this CreateServiceResponseService.


        :param deployments: The deployments of this CreateServiceResponseService.
        :type deployments: List
        """

        self._deployments = deployments

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateServiceResponseService.


        :return: The role_arn of this CreateServiceResponseService.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateServiceResponseService.


        :param role_arn: The role_arn of this CreateServiceResponseService.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def events(self):
        """Gets the events of this CreateServiceResponseService.


        :return: The events of this CreateServiceResponseService.
        :rtype: List
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this CreateServiceResponseService.


        :param events: The events of this CreateServiceResponseService.
        :type events: List
        """

        self._events = events

    @property
    def created_at(self):
        """Gets the created_at of this CreateServiceResponseService.


        :return: The created_at of this CreateServiceResponseService.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CreateServiceResponseService.


        :param created_at: The created_at of this CreateServiceResponseService.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def placement_constraints(self):
        """Gets the placement_constraints of this CreateServiceResponseService.


        :return: The placement_constraints of this CreateServiceResponseService.
        :rtype: List
        """
        return self._placement_constraints

    @placement_constraints.setter
    def placement_constraints(self, placement_constraints):
        """Sets the placement_constraints of this CreateServiceResponseService.


        :param placement_constraints: The placement_constraints of this CreateServiceResponseService.
        :type placement_constraints: List
        """

        self._placement_constraints = placement_constraints

    @property
    def placement_strategy(self):
        """Gets the placement_strategy of this CreateServiceResponseService.


        :return: The placement_strategy of this CreateServiceResponseService.
        :rtype: List
        """
        return self._placement_strategy

    @placement_strategy.setter
    def placement_strategy(self, placement_strategy):
        """Sets the placement_strategy of this CreateServiceResponseService.


        :param placement_strategy: The placement_strategy of this CreateServiceResponseService.
        :type placement_strategy: List
        """

        self._placement_strategy = placement_strategy

    @property
    def network_configuration(self):
        """Gets the network_configuration of this CreateServiceResponseService.


        :return: The network_configuration of this CreateServiceResponseService.
        :rtype: StartTaskRequestNetworkConfiguration
        """
        return self._network_configuration

    @network_configuration.setter
    def network_configuration(self, network_configuration):
        """Sets the network_configuration of this CreateServiceResponseService.


        :param network_configuration: The network_configuration of this CreateServiceResponseService.
        :type network_configuration: StartTaskRequestNetworkConfiguration
        """

        self._network_configuration = network_configuration

    @property
    def health_check_grace_period_seconds(self):
        """Gets the health_check_grace_period_seconds of this CreateServiceResponseService.


        :return: The health_check_grace_period_seconds of this CreateServiceResponseService.
        :rtype: int
        """
        return self._health_check_grace_period_seconds

    @health_check_grace_period_seconds.setter
    def health_check_grace_period_seconds(self, health_check_grace_period_seconds):
        """Sets the health_check_grace_period_seconds of this CreateServiceResponseService.


        :param health_check_grace_period_seconds: The health_check_grace_period_seconds of this CreateServiceResponseService.
        :type health_check_grace_period_seconds: int
        """

        self._health_check_grace_period_seconds = health_check_grace_period_seconds

    @property
    def scheduling_strategy(self):
        """Gets the scheduling_strategy of this CreateServiceResponseService.


        :return: The scheduling_strategy of this CreateServiceResponseService.
        :rtype: SchedulingStrategy
        """
        return self._scheduling_strategy

    @scheduling_strategy.setter
    def scheduling_strategy(self, scheduling_strategy):
        """Sets the scheduling_strategy of this CreateServiceResponseService.


        :param scheduling_strategy: The scheduling_strategy of this CreateServiceResponseService.
        :type scheduling_strategy: SchedulingStrategy
        """

        self._scheduling_strategy = scheduling_strategy

    @property
    def deployment_controller(self):
        """Gets the deployment_controller of this CreateServiceResponseService.


        :return: The deployment_controller of this CreateServiceResponseService.
        :rtype: ServiceDeploymentController
        """
        return self._deployment_controller

    @deployment_controller.setter
    def deployment_controller(self, deployment_controller):
        """Sets the deployment_controller of this CreateServiceResponseService.


        :param deployment_controller: The deployment_controller of this CreateServiceResponseService.
        :type deployment_controller: ServiceDeploymentController
        """

        self._deployment_controller = deployment_controller

    @property
    def tags(self):
        """Gets the tags of this CreateServiceResponseService.


        :return: The tags of this CreateServiceResponseService.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateServiceResponseService.


        :param tags: The tags of this CreateServiceResponseService.
        :type tags: List
        """

        self._tags = tags

    @property
    def created_by(self):
        """Gets the created_by of this CreateServiceResponseService.


        :return: The created_by of this CreateServiceResponseService.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this CreateServiceResponseService.


        :param created_by: The created_by of this CreateServiceResponseService.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def enable_ecs_managed_tags(self):
        """Gets the enable_ecs_managed_tags of this CreateServiceResponseService.


        :return: The enable_ecs_managed_tags of this CreateServiceResponseService.
        :rtype: bool
        """
        return self._enable_ecs_managed_tags

    @enable_ecs_managed_tags.setter
    def enable_ecs_managed_tags(self, enable_ecs_managed_tags):
        """Sets the enable_ecs_managed_tags of this CreateServiceResponseService.


        :param enable_ecs_managed_tags: The enable_ecs_managed_tags of this CreateServiceResponseService.
        :type enable_ecs_managed_tags: bool
        """

        self._enable_ecs_managed_tags = enable_ecs_managed_tags

    @property
    def propagate_tags(self):
        """Gets the propagate_tags of this CreateServiceResponseService.


        :return: The propagate_tags of this CreateServiceResponseService.
        :rtype: PropagateTags
        """
        return self._propagate_tags

    @propagate_tags.setter
    def propagate_tags(self, propagate_tags):
        """Sets the propagate_tags of this CreateServiceResponseService.


        :param propagate_tags: The propagate_tags of this CreateServiceResponseService.
        :type propagate_tags: PropagateTags
        """

        self._propagate_tags = propagate_tags

    @property
    def enable_execute_command(self):
        """Gets the enable_execute_command of this CreateServiceResponseService.


        :return: The enable_execute_command of this CreateServiceResponseService.
        :rtype: bool
        """
        return self._enable_execute_command

    @enable_execute_command.setter
    def enable_execute_command(self, enable_execute_command):
        """Sets the enable_execute_command of this CreateServiceResponseService.


        :param enable_execute_command: The enable_execute_command of this CreateServiceResponseService.
        :type enable_execute_command: bool
        """

        self._enable_execute_command = enable_execute_command
