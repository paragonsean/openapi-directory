# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CapacityProviderStrategyItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capacity_provider: str=None, weight: int=None, base: int=None):
        """CapacityProviderStrategyItem - a model defined in OpenAPI

        :param capacity_provider: The capacity_provider of this CapacityProviderStrategyItem.
        :param weight: The weight of this CapacityProviderStrategyItem.
        :param base: The base of this CapacityProviderStrategyItem.
        """
        self.openapi_types = {
            'capacity_provider': str,
            'weight': int,
            'base': int
        }

        self.attribute_map = {
            'capacity_provider': 'capacityProvider',
            'weight': 'weight',
            'base': 'base'
        }

        self._capacity_provider = capacity_provider
        self._weight = weight
        self._base = base

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CapacityProviderStrategyItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CapacityProviderStrategyItem of this CapacityProviderStrategyItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capacity_provider(self):
        """Gets the capacity_provider of this CapacityProviderStrategyItem.


        :return: The capacity_provider of this CapacityProviderStrategyItem.
        :rtype: str
        """
        return self._capacity_provider

    @capacity_provider.setter
    def capacity_provider(self, capacity_provider):
        """Sets the capacity_provider of this CapacityProviderStrategyItem.


        :param capacity_provider: The capacity_provider of this CapacityProviderStrategyItem.
        :type capacity_provider: str
        """
        if capacity_provider is None:
            raise ValueError("Invalid value for `capacity_provider`, must not be `None`")

        self._capacity_provider = capacity_provider

    @property
    def weight(self):
        """Gets the weight of this CapacityProviderStrategyItem.


        :return: The weight of this CapacityProviderStrategyItem.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this CapacityProviderStrategyItem.


        :param weight: The weight of this CapacityProviderStrategyItem.
        :type weight: int
        """

        self._weight = weight

    @property
    def base(self):
        """Gets the base of this CapacityProviderStrategyItem.


        :return: The base of this CapacityProviderStrategyItem.
        :rtype: int
        """
        return self._base

    @base.setter
    def base(self, base):
        """Sets the base of this CapacityProviderStrategyItem.


        :param base: The base of this CapacityProviderStrategyItem.
        :type base: int
        """

        self._base = base
