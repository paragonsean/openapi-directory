# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.efs_authorization_config_iam import EFSAuthorizationConfigIAM
from openapi_server import util


class EFSVolumeConfigurationAuthorizationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_point_id: str=None, iam: EFSAuthorizationConfigIAM=None):
        """EFSVolumeConfigurationAuthorizationConfig - a model defined in OpenAPI

        :param access_point_id: The access_point_id of this EFSVolumeConfigurationAuthorizationConfig.
        :param iam: The iam of this EFSVolumeConfigurationAuthorizationConfig.
        """
        self.openapi_types = {
            'access_point_id': str,
            'iam': EFSAuthorizationConfigIAM
        }

        self.attribute_map = {
            'access_point_id': 'accessPointId',
            'iam': 'iam'
        }

        self._access_point_id = access_point_id
        self._iam = iam

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EFSVolumeConfigurationAuthorizationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EFSVolumeConfiguration_authorizationConfig of this EFSVolumeConfigurationAuthorizationConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_point_id(self):
        """Gets the access_point_id of this EFSVolumeConfigurationAuthorizationConfig.


        :return: The access_point_id of this EFSVolumeConfigurationAuthorizationConfig.
        :rtype: str
        """
        return self._access_point_id

    @access_point_id.setter
    def access_point_id(self, access_point_id):
        """Sets the access_point_id of this EFSVolumeConfigurationAuthorizationConfig.


        :param access_point_id: The access_point_id of this EFSVolumeConfigurationAuthorizationConfig.
        :type access_point_id: str
        """

        self._access_point_id = access_point_id

    @property
    def iam(self):
        """Gets the iam of this EFSVolumeConfigurationAuthorizationConfig.


        :return: The iam of this EFSVolumeConfigurationAuthorizationConfig.
        :rtype: EFSAuthorizationConfigIAM
        """
        return self._iam

    @iam.setter
    def iam(self, iam):
        """Sets the iam of this EFSVolumeConfigurationAuthorizationConfig.


        :param iam: The iam of this EFSVolumeConfigurationAuthorizationConfig.
        :type iam: EFSAuthorizationConfigIAM
        """

        self._iam = iam
