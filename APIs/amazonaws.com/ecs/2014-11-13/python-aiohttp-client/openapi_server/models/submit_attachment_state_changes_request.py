# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubmitAttachmentStateChangesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster: str=None, attachments: List=None):
        """SubmitAttachmentStateChangesRequest - a model defined in OpenAPI

        :param cluster: The cluster of this SubmitAttachmentStateChangesRequest.
        :param attachments: The attachments of this SubmitAttachmentStateChangesRequest.
        """
        self.openapi_types = {
            'cluster': str,
            'attachments': List
        }

        self.attribute_map = {
            'cluster': 'cluster',
            'attachments': 'attachments'
        }

        self._cluster = cluster
        self._attachments = attachments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubmitAttachmentStateChangesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubmitAttachmentStateChangesRequest of this SubmitAttachmentStateChangesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this SubmitAttachmentStateChangesRequest.


        :return: The cluster of this SubmitAttachmentStateChangesRequest.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this SubmitAttachmentStateChangesRequest.


        :param cluster: The cluster of this SubmitAttachmentStateChangesRequest.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def attachments(self):
        """Gets the attachments of this SubmitAttachmentStateChangesRequest.


        :return: The attachments of this SubmitAttachmentStateChangesRequest.
        :rtype: List
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this SubmitAttachmentStateChangesRequest.


        :param attachments: The attachments of this SubmitAttachmentStateChangesRequest.
        :type attachments: List
        """
        if attachments is None:
            raise ValueError("Invalid value for `attachments`, must not be `None`")

        self._attachments = attachments
