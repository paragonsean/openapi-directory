# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_service_connect_defaults import ClusterServiceConnectDefaults
from openapi_server.models.update_cluster_request_configuration import UpdateClusterRequestConfiguration
from openapi_server import util


class DeleteClusterResponseCluster(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_arn: str=None, cluster_name: str=None, configuration: UpdateClusterRequestConfiguration=None, status: str=None, registered_container_instances_count: int=None, running_tasks_count: int=None, pending_tasks_count: int=None, active_services_count: int=None, statistics: List=None, tags: List=None, settings: List=None, capacity_providers: List=None, default_capacity_provider_strategy: List=None, attachments: List=None, attachments_status: str=None, service_connect_defaults: ClusterServiceConnectDefaults=None):
        """DeleteClusterResponseCluster - a model defined in OpenAPI

        :param cluster_arn: The cluster_arn of this DeleteClusterResponseCluster.
        :param cluster_name: The cluster_name of this DeleteClusterResponseCluster.
        :param configuration: The configuration of this DeleteClusterResponseCluster.
        :param status: The status of this DeleteClusterResponseCluster.
        :param registered_container_instances_count: The registered_container_instances_count of this DeleteClusterResponseCluster.
        :param running_tasks_count: The running_tasks_count of this DeleteClusterResponseCluster.
        :param pending_tasks_count: The pending_tasks_count of this DeleteClusterResponseCluster.
        :param active_services_count: The active_services_count of this DeleteClusterResponseCluster.
        :param statistics: The statistics of this DeleteClusterResponseCluster.
        :param tags: The tags of this DeleteClusterResponseCluster.
        :param settings: The settings of this DeleteClusterResponseCluster.
        :param capacity_providers: The capacity_providers of this DeleteClusterResponseCluster.
        :param default_capacity_provider_strategy: The default_capacity_provider_strategy of this DeleteClusterResponseCluster.
        :param attachments: The attachments of this DeleteClusterResponseCluster.
        :param attachments_status: The attachments_status of this DeleteClusterResponseCluster.
        :param service_connect_defaults: The service_connect_defaults of this DeleteClusterResponseCluster.
        """
        self.openapi_types = {
            'cluster_arn': str,
            'cluster_name': str,
            'configuration': UpdateClusterRequestConfiguration,
            'status': str,
            'registered_container_instances_count': int,
            'running_tasks_count': int,
            'pending_tasks_count': int,
            'active_services_count': int,
            'statistics': List,
            'tags': List,
            'settings': List,
            'capacity_providers': List,
            'default_capacity_provider_strategy': List,
            'attachments': List,
            'attachments_status': str,
            'service_connect_defaults': ClusterServiceConnectDefaults
        }

        self.attribute_map = {
            'cluster_arn': 'clusterArn',
            'cluster_name': 'clusterName',
            'configuration': 'configuration',
            'status': 'status',
            'registered_container_instances_count': 'registeredContainerInstancesCount',
            'running_tasks_count': 'runningTasksCount',
            'pending_tasks_count': 'pendingTasksCount',
            'active_services_count': 'activeServicesCount',
            'statistics': 'statistics',
            'tags': 'tags',
            'settings': 'settings',
            'capacity_providers': 'capacityProviders',
            'default_capacity_provider_strategy': 'defaultCapacityProviderStrategy',
            'attachments': 'attachments',
            'attachments_status': 'attachmentsStatus',
            'service_connect_defaults': 'serviceConnectDefaults'
        }

        self._cluster_arn = cluster_arn
        self._cluster_name = cluster_name
        self._configuration = configuration
        self._status = status
        self._registered_container_instances_count = registered_container_instances_count
        self._running_tasks_count = running_tasks_count
        self._pending_tasks_count = pending_tasks_count
        self._active_services_count = active_services_count
        self._statistics = statistics
        self._tags = tags
        self._settings = settings
        self._capacity_providers = capacity_providers
        self._default_capacity_provider_strategy = default_capacity_provider_strategy
        self._attachments = attachments
        self._attachments_status = attachments_status
        self._service_connect_defaults = service_connect_defaults

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteClusterResponseCluster':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteClusterResponse_cluster of this DeleteClusterResponseCluster.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_arn(self):
        """Gets the cluster_arn of this DeleteClusterResponseCluster.


        :return: The cluster_arn of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._cluster_arn

    @cluster_arn.setter
    def cluster_arn(self, cluster_arn):
        """Sets the cluster_arn of this DeleteClusterResponseCluster.


        :param cluster_arn: The cluster_arn of this DeleteClusterResponseCluster.
        :type cluster_arn: str
        """

        self._cluster_arn = cluster_arn

    @property
    def cluster_name(self):
        """Gets the cluster_name of this DeleteClusterResponseCluster.


        :return: The cluster_name of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this DeleteClusterResponseCluster.


        :param cluster_name: The cluster_name of this DeleteClusterResponseCluster.
        :type cluster_name: str
        """

        self._cluster_name = cluster_name

    @property
    def configuration(self):
        """Gets the configuration of this DeleteClusterResponseCluster.


        :return: The configuration of this DeleteClusterResponseCluster.
        :rtype: UpdateClusterRequestConfiguration
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this DeleteClusterResponseCluster.


        :param configuration: The configuration of this DeleteClusterResponseCluster.
        :type configuration: UpdateClusterRequestConfiguration
        """

        self._configuration = configuration

    @property
    def status(self):
        """Gets the status of this DeleteClusterResponseCluster.


        :return: The status of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeleteClusterResponseCluster.


        :param status: The status of this DeleteClusterResponseCluster.
        :type status: str
        """

        self._status = status

    @property
    def registered_container_instances_count(self):
        """Gets the registered_container_instances_count of this DeleteClusterResponseCluster.


        :return: The registered_container_instances_count of this DeleteClusterResponseCluster.
        :rtype: int
        """
        return self._registered_container_instances_count

    @registered_container_instances_count.setter
    def registered_container_instances_count(self, registered_container_instances_count):
        """Sets the registered_container_instances_count of this DeleteClusterResponseCluster.


        :param registered_container_instances_count: The registered_container_instances_count of this DeleteClusterResponseCluster.
        :type registered_container_instances_count: int
        """

        self._registered_container_instances_count = registered_container_instances_count

    @property
    def running_tasks_count(self):
        """Gets the running_tasks_count of this DeleteClusterResponseCluster.


        :return: The running_tasks_count of this DeleteClusterResponseCluster.
        :rtype: int
        """
        return self._running_tasks_count

    @running_tasks_count.setter
    def running_tasks_count(self, running_tasks_count):
        """Sets the running_tasks_count of this DeleteClusterResponseCluster.


        :param running_tasks_count: The running_tasks_count of this DeleteClusterResponseCluster.
        :type running_tasks_count: int
        """

        self._running_tasks_count = running_tasks_count

    @property
    def pending_tasks_count(self):
        """Gets the pending_tasks_count of this DeleteClusterResponseCluster.


        :return: The pending_tasks_count of this DeleteClusterResponseCluster.
        :rtype: int
        """
        return self._pending_tasks_count

    @pending_tasks_count.setter
    def pending_tasks_count(self, pending_tasks_count):
        """Sets the pending_tasks_count of this DeleteClusterResponseCluster.


        :param pending_tasks_count: The pending_tasks_count of this DeleteClusterResponseCluster.
        :type pending_tasks_count: int
        """

        self._pending_tasks_count = pending_tasks_count

    @property
    def active_services_count(self):
        """Gets the active_services_count of this DeleteClusterResponseCluster.


        :return: The active_services_count of this DeleteClusterResponseCluster.
        :rtype: int
        """
        return self._active_services_count

    @active_services_count.setter
    def active_services_count(self, active_services_count):
        """Sets the active_services_count of this DeleteClusterResponseCluster.


        :param active_services_count: The active_services_count of this DeleteClusterResponseCluster.
        :type active_services_count: int
        """

        self._active_services_count = active_services_count

    @property
    def statistics(self):
        """Gets the statistics of this DeleteClusterResponseCluster.


        :return: The statistics of this DeleteClusterResponseCluster.
        :rtype: List
        """
        return self._statistics

    @statistics.setter
    def statistics(self, statistics):
        """Sets the statistics of this DeleteClusterResponseCluster.


        :param statistics: The statistics of this DeleteClusterResponseCluster.
        :type statistics: List
        """

        self._statistics = statistics

    @property
    def tags(self):
        """Gets the tags of this DeleteClusterResponseCluster.


        :return: The tags of this DeleteClusterResponseCluster.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DeleteClusterResponseCluster.


        :param tags: The tags of this DeleteClusterResponseCluster.
        :type tags: List
        """

        self._tags = tags

    @property
    def settings(self):
        """Gets the settings of this DeleteClusterResponseCluster.


        :return: The settings of this DeleteClusterResponseCluster.
        :rtype: List
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this DeleteClusterResponseCluster.


        :param settings: The settings of this DeleteClusterResponseCluster.
        :type settings: List
        """

        self._settings = settings

    @property
    def capacity_providers(self):
        """Gets the capacity_providers of this DeleteClusterResponseCluster.


        :return: The capacity_providers of this DeleteClusterResponseCluster.
        :rtype: List
        """
        return self._capacity_providers

    @capacity_providers.setter
    def capacity_providers(self, capacity_providers):
        """Sets the capacity_providers of this DeleteClusterResponseCluster.


        :param capacity_providers: The capacity_providers of this DeleteClusterResponseCluster.
        :type capacity_providers: List
        """

        self._capacity_providers = capacity_providers

    @property
    def default_capacity_provider_strategy(self):
        """Gets the default_capacity_provider_strategy of this DeleteClusterResponseCluster.


        :return: The default_capacity_provider_strategy of this DeleteClusterResponseCluster.
        :rtype: List
        """
        return self._default_capacity_provider_strategy

    @default_capacity_provider_strategy.setter
    def default_capacity_provider_strategy(self, default_capacity_provider_strategy):
        """Sets the default_capacity_provider_strategy of this DeleteClusterResponseCluster.


        :param default_capacity_provider_strategy: The default_capacity_provider_strategy of this DeleteClusterResponseCluster.
        :type default_capacity_provider_strategy: List
        """

        self._default_capacity_provider_strategy = default_capacity_provider_strategy

    @property
    def attachments(self):
        """Gets the attachments of this DeleteClusterResponseCluster.


        :return: The attachments of this DeleteClusterResponseCluster.
        :rtype: List
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this DeleteClusterResponseCluster.


        :param attachments: The attachments of this DeleteClusterResponseCluster.
        :type attachments: List
        """

        self._attachments = attachments

    @property
    def attachments_status(self):
        """Gets the attachments_status of this DeleteClusterResponseCluster.


        :return: The attachments_status of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._attachments_status

    @attachments_status.setter
    def attachments_status(self, attachments_status):
        """Sets the attachments_status of this DeleteClusterResponseCluster.


        :param attachments_status: The attachments_status of this DeleteClusterResponseCluster.
        :type attachments_status: str
        """

        self._attachments_status = attachments_status

    @property
    def service_connect_defaults(self):
        """Gets the service_connect_defaults of this DeleteClusterResponseCluster.


        :return: The service_connect_defaults of this DeleteClusterResponseCluster.
        :rtype: ClusterServiceConnectDefaults
        """
        return self._service_connect_defaults

    @service_connect_defaults.setter
    def service_connect_defaults(self, service_connect_defaults):
        """Sets the service_connect_defaults of this DeleteClusterResponseCluster.


        :param service_connect_defaults: The service_connect_defaults of this DeleteClusterResponseCluster.
        :type service_connect_defaults: ClusterServiceConnectDefaults
        """

        self._service_connect_defaults = service_connect_defaults
