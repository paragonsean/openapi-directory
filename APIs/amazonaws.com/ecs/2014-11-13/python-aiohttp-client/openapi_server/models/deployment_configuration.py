# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployment_configuration_alarms import DeploymentConfigurationAlarms
from openapi_server.models.deployment_configuration_deployment_circuit_breaker import DeploymentConfigurationDeploymentCircuitBreaker
from openapi_server import util


class DeploymentConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployment_circuit_breaker: DeploymentConfigurationDeploymentCircuitBreaker=None, maximum_percent: int=None, minimum_healthy_percent: int=None, alarms: DeploymentConfigurationAlarms=None):
        """DeploymentConfiguration - a model defined in OpenAPI

        :param deployment_circuit_breaker: The deployment_circuit_breaker of this DeploymentConfiguration.
        :param maximum_percent: The maximum_percent of this DeploymentConfiguration.
        :param minimum_healthy_percent: The minimum_healthy_percent of this DeploymentConfiguration.
        :param alarms: The alarms of this DeploymentConfiguration.
        """
        self.openapi_types = {
            'deployment_circuit_breaker': DeploymentConfigurationDeploymentCircuitBreaker,
            'maximum_percent': int,
            'minimum_healthy_percent': int,
            'alarms': DeploymentConfigurationAlarms
        }

        self.attribute_map = {
            'deployment_circuit_breaker': 'deploymentCircuitBreaker',
            'maximum_percent': 'maximumPercent',
            'minimum_healthy_percent': 'minimumHealthyPercent',
            'alarms': 'alarms'
        }

        self._deployment_circuit_breaker = deployment_circuit_breaker
        self._maximum_percent = maximum_percent
        self._minimum_healthy_percent = minimum_healthy_percent
        self._alarms = alarms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentConfiguration of this DeploymentConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployment_circuit_breaker(self):
        """Gets the deployment_circuit_breaker of this DeploymentConfiguration.


        :return: The deployment_circuit_breaker of this DeploymentConfiguration.
        :rtype: DeploymentConfigurationDeploymentCircuitBreaker
        """
        return self._deployment_circuit_breaker

    @deployment_circuit_breaker.setter
    def deployment_circuit_breaker(self, deployment_circuit_breaker):
        """Sets the deployment_circuit_breaker of this DeploymentConfiguration.


        :param deployment_circuit_breaker: The deployment_circuit_breaker of this DeploymentConfiguration.
        :type deployment_circuit_breaker: DeploymentConfigurationDeploymentCircuitBreaker
        """

        self._deployment_circuit_breaker = deployment_circuit_breaker

    @property
    def maximum_percent(self):
        """Gets the maximum_percent of this DeploymentConfiguration.


        :return: The maximum_percent of this DeploymentConfiguration.
        :rtype: int
        """
        return self._maximum_percent

    @maximum_percent.setter
    def maximum_percent(self, maximum_percent):
        """Sets the maximum_percent of this DeploymentConfiguration.


        :param maximum_percent: The maximum_percent of this DeploymentConfiguration.
        :type maximum_percent: int
        """

        self._maximum_percent = maximum_percent

    @property
    def minimum_healthy_percent(self):
        """Gets the minimum_healthy_percent of this DeploymentConfiguration.


        :return: The minimum_healthy_percent of this DeploymentConfiguration.
        :rtype: int
        """
        return self._minimum_healthy_percent

    @minimum_healthy_percent.setter
    def minimum_healthy_percent(self, minimum_healthy_percent):
        """Sets the minimum_healthy_percent of this DeploymentConfiguration.


        :param minimum_healthy_percent: The minimum_healthy_percent of this DeploymentConfiguration.
        :type minimum_healthy_percent: int
        """

        self._minimum_healthy_percent = minimum_healthy_percent

    @property
    def alarms(self):
        """Gets the alarms of this DeploymentConfiguration.


        :return: The alarms of this DeploymentConfiguration.
        :rtype: DeploymentConfigurationAlarms
        """
        return self._alarms

    @alarms.setter
    def alarms(self, alarms):
        """Sets the alarms of this DeploymentConfiguration.


        :param alarms: The alarms of this DeploymentConfiguration.
        :type alarms: DeploymentConfigurationAlarms
        """

        self._alarms = alarms
