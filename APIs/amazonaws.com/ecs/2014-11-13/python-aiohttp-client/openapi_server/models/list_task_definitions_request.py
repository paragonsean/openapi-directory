# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sort_order import SortOrder
from openapi_server.models.task_definition_status import TaskDefinitionStatus
from openapi_server import util


class ListTaskDefinitionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, family_prefix: str=None, status: TaskDefinitionStatus=None, sort: SortOrder=None, next_token: str=None, max_results: int=None):
        """ListTaskDefinitionsRequest - a model defined in OpenAPI

        :param family_prefix: The family_prefix of this ListTaskDefinitionsRequest.
        :param status: The status of this ListTaskDefinitionsRequest.
        :param sort: The sort of this ListTaskDefinitionsRequest.
        :param next_token: The next_token of this ListTaskDefinitionsRequest.
        :param max_results: The max_results of this ListTaskDefinitionsRequest.
        """
        self.openapi_types = {
            'family_prefix': str,
            'status': TaskDefinitionStatus,
            'sort': SortOrder,
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'family_prefix': 'familyPrefix',
            'status': 'status',
            'sort': 'sort',
            'next_token': 'nextToken',
            'max_results': 'maxResults'
        }

        self._family_prefix = family_prefix
        self._status = status
        self._sort = sort
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTaskDefinitionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTaskDefinitionsRequest of this ListTaskDefinitionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def family_prefix(self):
        """Gets the family_prefix of this ListTaskDefinitionsRequest.


        :return: The family_prefix of this ListTaskDefinitionsRequest.
        :rtype: str
        """
        return self._family_prefix

    @family_prefix.setter
    def family_prefix(self, family_prefix):
        """Sets the family_prefix of this ListTaskDefinitionsRequest.


        :param family_prefix: The family_prefix of this ListTaskDefinitionsRequest.
        :type family_prefix: str
        """

        self._family_prefix = family_prefix

    @property
    def status(self):
        """Gets the status of this ListTaskDefinitionsRequest.


        :return: The status of this ListTaskDefinitionsRequest.
        :rtype: TaskDefinitionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ListTaskDefinitionsRequest.


        :param status: The status of this ListTaskDefinitionsRequest.
        :type status: TaskDefinitionStatus
        """

        self._status = status

    @property
    def sort(self):
        """Gets the sort of this ListTaskDefinitionsRequest.


        :return: The sort of this ListTaskDefinitionsRequest.
        :rtype: SortOrder
        """
        return self._sort

    @sort.setter
    def sort(self, sort):
        """Sets the sort of this ListTaskDefinitionsRequest.


        :param sort: The sort of this ListTaskDefinitionsRequest.
        :type sort: SortOrder
        """

        self._sort = sort

    @property
    def next_token(self):
        """Gets the next_token of this ListTaskDefinitionsRequest.


        :return: The next_token of this ListTaskDefinitionsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListTaskDefinitionsRequest.


        :param next_token: The next_token of this ListTaskDefinitionsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListTaskDefinitionsRequest.


        :return: The max_results of this ListTaskDefinitionsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListTaskDefinitionsRequest.


        :param max_results: The max_results of this ListTaskDefinitionsRequest.
        :type max_results: int
        """

        self._max_results = max_results
