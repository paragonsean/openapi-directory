# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubmitContainerStateChangeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster: str=None, task: str=None, container_name: str=None, runtime_id: str=None, status: str=None, exit_code: int=None, reason: str=None, network_bindings: List=None):
        """SubmitContainerStateChangeRequest - a model defined in OpenAPI

        :param cluster: The cluster of this SubmitContainerStateChangeRequest.
        :param task: The task of this SubmitContainerStateChangeRequest.
        :param container_name: The container_name of this SubmitContainerStateChangeRequest.
        :param runtime_id: The runtime_id of this SubmitContainerStateChangeRequest.
        :param status: The status of this SubmitContainerStateChangeRequest.
        :param exit_code: The exit_code of this SubmitContainerStateChangeRequest.
        :param reason: The reason of this SubmitContainerStateChangeRequest.
        :param network_bindings: The network_bindings of this SubmitContainerStateChangeRequest.
        """
        self.openapi_types = {
            'cluster': str,
            'task': str,
            'container_name': str,
            'runtime_id': str,
            'status': str,
            'exit_code': int,
            'reason': str,
            'network_bindings': List
        }

        self.attribute_map = {
            'cluster': 'cluster',
            'task': 'task',
            'container_name': 'containerName',
            'runtime_id': 'runtimeId',
            'status': 'status',
            'exit_code': 'exitCode',
            'reason': 'reason',
            'network_bindings': 'networkBindings'
        }

        self._cluster = cluster
        self._task = task
        self._container_name = container_name
        self._runtime_id = runtime_id
        self._status = status
        self._exit_code = exit_code
        self._reason = reason
        self._network_bindings = network_bindings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubmitContainerStateChangeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubmitContainerStateChangeRequest of this SubmitContainerStateChangeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this SubmitContainerStateChangeRequest.


        :return: The cluster of this SubmitContainerStateChangeRequest.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this SubmitContainerStateChangeRequest.


        :param cluster: The cluster of this SubmitContainerStateChangeRequest.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def task(self):
        """Gets the task of this SubmitContainerStateChangeRequest.


        :return: The task of this SubmitContainerStateChangeRequest.
        :rtype: str
        """
        return self._task

    @task.setter
    def task(self, task):
        """Sets the task of this SubmitContainerStateChangeRequest.


        :param task: The task of this SubmitContainerStateChangeRequest.
        :type task: str
        """

        self._task = task

    @property
    def container_name(self):
        """Gets the container_name of this SubmitContainerStateChangeRequest.


        :return: The container_name of this SubmitContainerStateChangeRequest.
        :rtype: str
        """
        return self._container_name

    @container_name.setter
    def container_name(self, container_name):
        """Sets the container_name of this SubmitContainerStateChangeRequest.


        :param container_name: The container_name of this SubmitContainerStateChangeRequest.
        :type container_name: str
        """

        self._container_name = container_name

    @property
    def runtime_id(self):
        """Gets the runtime_id of this SubmitContainerStateChangeRequest.


        :return: The runtime_id of this SubmitContainerStateChangeRequest.
        :rtype: str
        """
        return self._runtime_id

    @runtime_id.setter
    def runtime_id(self, runtime_id):
        """Sets the runtime_id of this SubmitContainerStateChangeRequest.


        :param runtime_id: The runtime_id of this SubmitContainerStateChangeRequest.
        :type runtime_id: str
        """

        self._runtime_id = runtime_id

    @property
    def status(self):
        """Gets the status of this SubmitContainerStateChangeRequest.


        :return: The status of this SubmitContainerStateChangeRequest.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SubmitContainerStateChangeRequest.


        :param status: The status of this SubmitContainerStateChangeRequest.
        :type status: str
        """

        self._status = status

    @property
    def exit_code(self):
        """Gets the exit_code of this SubmitContainerStateChangeRequest.


        :return: The exit_code of this SubmitContainerStateChangeRequest.
        :rtype: int
        """
        return self._exit_code

    @exit_code.setter
    def exit_code(self, exit_code):
        """Sets the exit_code of this SubmitContainerStateChangeRequest.


        :param exit_code: The exit_code of this SubmitContainerStateChangeRequest.
        :type exit_code: int
        """

        self._exit_code = exit_code

    @property
    def reason(self):
        """Gets the reason of this SubmitContainerStateChangeRequest.


        :return: The reason of this SubmitContainerStateChangeRequest.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this SubmitContainerStateChangeRequest.


        :param reason: The reason of this SubmitContainerStateChangeRequest.
        :type reason: str
        """

        self._reason = reason

    @property
    def network_bindings(self):
        """Gets the network_bindings of this SubmitContainerStateChangeRequest.


        :return: The network_bindings of this SubmitContainerStateChangeRequest.
        :rtype: List
        """
        return self._network_bindings

    @network_bindings.setter
    def network_bindings(self, network_bindings):
        """Sets the network_bindings of this SubmitContainerStateChangeRequest.


        :param network_bindings: The network_bindings of this SubmitContainerStateChangeRequest.
        :type network_bindings: List
        """

        self._network_bindings = network_bindings
