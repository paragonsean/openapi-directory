# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deregister_container_instance_response_container_instance import DeregisterContainerInstanceResponseContainerInstance
from openapi_server import util


class DeregisterContainerInstanceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_instance: DeregisterContainerInstanceResponseContainerInstance=None):
        """DeregisterContainerInstanceResponse - a model defined in OpenAPI

        :param container_instance: The container_instance of this DeregisterContainerInstanceResponse.
        """
        self.openapi_types = {
            'container_instance': DeregisterContainerInstanceResponseContainerInstance
        }

        self.attribute_map = {
            'container_instance': 'containerInstance'
        }

        self._container_instance = container_instance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeregisterContainerInstanceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeregisterContainerInstanceResponse of this DeregisterContainerInstanceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_instance(self):
        """Gets the container_instance of this DeregisterContainerInstanceResponse.


        :return: The container_instance of this DeregisterContainerInstanceResponse.
        :rtype: DeregisterContainerInstanceResponseContainerInstance
        """
        return self._container_instance

    @container_instance.setter
    def container_instance(self, container_instance):
        """Sets the container_instance of this DeregisterContainerInstanceResponse.


        :param container_instance: The container_instance of this DeregisterContainerInstanceResponse.
        :type container_instance: DeregisterContainerInstanceResponseContainerInstance
        """

        self._container_instance = container_instance
