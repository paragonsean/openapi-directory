# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, created_at: datetime=None, message: str=None):
        """ServiceEvent - a model defined in OpenAPI

        :param id: The id of this ServiceEvent.
        :param created_at: The created_at of this ServiceEvent.
        :param message: The message of this ServiceEvent.
        """
        self.openapi_types = {
            'id': str,
            'created_at': datetime,
            'message': str
        }

        self.attribute_map = {
            'id': 'id',
            'created_at': 'createdAt',
            'message': 'message'
        }

        self._id = id
        self._created_at = created_at
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceEvent of this ServiceEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ServiceEvent.


        :return: The id of this ServiceEvent.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ServiceEvent.


        :param id: The id of this ServiceEvent.
        :type id: str
        """

        self._id = id

    @property
    def created_at(self):
        """Gets the created_at of this ServiceEvent.


        :return: The created_at of this ServiceEvent.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ServiceEvent.


        :param created_at: The created_at of this ServiceEvent.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def message(self):
        """Gets the message of this ServiceEvent.


        :return: The message of this ServiceEvent.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ServiceEvent.


        :param message: The message of this ServiceEvent.
        :type message: str
        """

        self._message = message
