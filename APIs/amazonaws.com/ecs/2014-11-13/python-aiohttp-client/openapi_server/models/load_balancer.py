# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LoadBalancer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_group_arn: str=None, load_balancer_name: str=None, container_name: str=None, container_port: int=None):
        """LoadBalancer - a model defined in OpenAPI

        :param target_group_arn: The target_group_arn of this LoadBalancer.
        :param load_balancer_name: The load_balancer_name of this LoadBalancer.
        :param container_name: The container_name of this LoadBalancer.
        :param container_port: The container_port of this LoadBalancer.
        """
        self.openapi_types = {
            'target_group_arn': str,
            'load_balancer_name': str,
            'container_name': str,
            'container_port': int
        }

        self.attribute_map = {
            'target_group_arn': 'targetGroupArn',
            'load_balancer_name': 'loadBalancerName',
            'container_name': 'containerName',
            'container_port': 'containerPort'
        }

        self._target_group_arn = target_group_arn
        self._load_balancer_name = load_balancer_name
        self._container_name = container_name
        self._container_port = container_port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoadBalancer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoadBalancer of this LoadBalancer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_group_arn(self):
        """Gets the target_group_arn of this LoadBalancer.


        :return: The target_group_arn of this LoadBalancer.
        :rtype: str
        """
        return self._target_group_arn

    @target_group_arn.setter
    def target_group_arn(self, target_group_arn):
        """Sets the target_group_arn of this LoadBalancer.


        :param target_group_arn: The target_group_arn of this LoadBalancer.
        :type target_group_arn: str
        """

        self._target_group_arn = target_group_arn

    @property
    def load_balancer_name(self):
        """Gets the load_balancer_name of this LoadBalancer.


        :return: The load_balancer_name of this LoadBalancer.
        :rtype: str
        """
        return self._load_balancer_name

    @load_balancer_name.setter
    def load_balancer_name(self, load_balancer_name):
        """Sets the load_balancer_name of this LoadBalancer.


        :param load_balancer_name: The load_balancer_name of this LoadBalancer.
        :type load_balancer_name: str
        """

        self._load_balancer_name = load_balancer_name

    @property
    def container_name(self):
        """Gets the container_name of this LoadBalancer.


        :return: The container_name of this LoadBalancer.
        :rtype: str
        """
        return self._container_name

    @container_name.setter
    def container_name(self, container_name):
        """Sets the container_name of this LoadBalancer.


        :param container_name: The container_name of this LoadBalancer.
        :type container_name: str
        """

        self._container_name = container_name

    @property
    def container_port(self):
        """Gets the container_port of this LoadBalancer.


        :return: The container_port of this LoadBalancer.
        :rtype: int
        """
        return self._container_port

    @container_port.setter
    def container_port(self, container_port):
        """Sets the container_port of this LoadBalancer.


        :param container_port: The container_port of this LoadBalancer.
        :type container_port: int
        """

        self._container_port = container_port
