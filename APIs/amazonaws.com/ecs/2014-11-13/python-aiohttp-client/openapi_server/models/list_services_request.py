# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.launch_type import LaunchType
from openapi_server.models.scheduling_strategy import SchedulingStrategy
from openapi_server import util


class ListServicesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster: str=None, next_token: str=None, max_results: int=None, launch_type: LaunchType=None, scheduling_strategy: SchedulingStrategy=None):
        """ListServicesRequest - a model defined in OpenAPI

        :param cluster: The cluster of this ListServicesRequest.
        :param next_token: The next_token of this ListServicesRequest.
        :param max_results: The max_results of this ListServicesRequest.
        :param launch_type: The launch_type of this ListServicesRequest.
        :param scheduling_strategy: The scheduling_strategy of this ListServicesRequest.
        """
        self.openapi_types = {
            'cluster': str,
            'next_token': str,
            'max_results': int,
            'launch_type': LaunchType,
            'scheduling_strategy': SchedulingStrategy
        }

        self.attribute_map = {
            'cluster': 'cluster',
            'next_token': 'nextToken',
            'max_results': 'maxResults',
            'launch_type': 'launchType',
            'scheduling_strategy': 'schedulingStrategy'
        }

        self._cluster = cluster
        self._next_token = next_token
        self._max_results = max_results
        self._launch_type = launch_type
        self._scheduling_strategy = scheduling_strategy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListServicesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListServicesRequest of this ListServicesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this ListServicesRequest.


        :return: The cluster of this ListServicesRequest.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this ListServicesRequest.


        :param cluster: The cluster of this ListServicesRequest.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def next_token(self):
        """Gets the next_token of this ListServicesRequest.


        :return: The next_token of this ListServicesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListServicesRequest.


        :param next_token: The next_token of this ListServicesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListServicesRequest.


        :return: The max_results of this ListServicesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListServicesRequest.


        :param max_results: The max_results of this ListServicesRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def launch_type(self):
        """Gets the launch_type of this ListServicesRequest.


        :return: The launch_type of this ListServicesRequest.
        :rtype: LaunchType
        """
        return self._launch_type

    @launch_type.setter
    def launch_type(self, launch_type):
        """Sets the launch_type of this ListServicesRequest.


        :param launch_type: The launch_type of this ListServicesRequest.
        :type launch_type: LaunchType
        """

        self._launch_type = launch_type

    @property
    def scheduling_strategy(self):
        """Gets the scheduling_strategy of this ListServicesRequest.


        :return: The scheduling_strategy of this ListServicesRequest.
        :rtype: SchedulingStrategy
        """
        return self._scheduling_strategy

    @scheduling_strategy.setter
    def scheduling_strategy(self, scheduling_strategy):
        """Sets the scheduling_strategy of this ListServicesRequest.


        :param scheduling_strategy: The scheduling_strategy of this ListServicesRequest.
        :type scheduling_strategy: SchedulingStrategy
        """

        self._scheduling_strategy = scheduling_strategy
