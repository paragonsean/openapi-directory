# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutClusterCapacityProvidersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster: str=None, capacity_providers: List=None, default_capacity_provider_strategy: List=None):
        """PutClusterCapacityProvidersRequest - a model defined in OpenAPI

        :param cluster: The cluster of this PutClusterCapacityProvidersRequest.
        :param capacity_providers: The capacity_providers of this PutClusterCapacityProvidersRequest.
        :param default_capacity_provider_strategy: The default_capacity_provider_strategy of this PutClusterCapacityProvidersRequest.
        """
        self.openapi_types = {
            'cluster': str,
            'capacity_providers': List,
            'default_capacity_provider_strategy': List
        }

        self.attribute_map = {
            'cluster': 'cluster',
            'capacity_providers': 'capacityProviders',
            'default_capacity_provider_strategy': 'defaultCapacityProviderStrategy'
        }

        self._cluster = cluster
        self._capacity_providers = capacity_providers
        self._default_capacity_provider_strategy = default_capacity_provider_strategy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutClusterCapacityProvidersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutClusterCapacityProvidersRequest of this PutClusterCapacityProvidersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this PutClusterCapacityProvidersRequest.


        :return: The cluster of this PutClusterCapacityProvidersRequest.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this PutClusterCapacityProvidersRequest.


        :param cluster: The cluster of this PutClusterCapacityProvidersRequest.
        :type cluster: str
        """
        if cluster is None:
            raise ValueError("Invalid value for `cluster`, must not be `None`")

        self._cluster = cluster

    @property
    def capacity_providers(self):
        """Gets the capacity_providers of this PutClusterCapacityProvidersRequest.


        :return: The capacity_providers of this PutClusterCapacityProvidersRequest.
        :rtype: List
        """
        return self._capacity_providers

    @capacity_providers.setter
    def capacity_providers(self, capacity_providers):
        """Sets the capacity_providers of this PutClusterCapacityProvidersRequest.


        :param capacity_providers: The capacity_providers of this PutClusterCapacityProvidersRequest.
        :type capacity_providers: List
        """
        if capacity_providers is None:
            raise ValueError("Invalid value for `capacity_providers`, must not be `None`")

        self._capacity_providers = capacity_providers

    @property
    def default_capacity_provider_strategy(self):
        """Gets the default_capacity_provider_strategy of this PutClusterCapacityProvidersRequest.


        :return: The default_capacity_provider_strategy of this PutClusterCapacityProvidersRequest.
        :rtype: List
        """
        return self._default_capacity_provider_strategy

    @default_capacity_provider_strategy.setter
    def default_capacity_provider_strategy(self, default_capacity_provider_strategy):
        """Sets the default_capacity_provider_strategy of this PutClusterCapacityProvidersRequest.


        :param default_capacity_provider_strategy: The default_capacity_provider_strategy of this PutClusterCapacityProvidersRequest.
        :type default_capacity_provider_strategy: List
        """
        if default_capacity_provider_strategy is None:
            raise ValueError("Invalid value for `default_capacity_provider_strategy`, must not be `None`")

        self._default_capacity_provider_strategy = default_capacity_provider_strategy
