# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateTaskProtectionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster: str=None, tasks: List=None, protection_enabled: bool=None, expires_in_minutes: int=None):
        """UpdateTaskProtectionRequest - a model defined in OpenAPI

        :param cluster: The cluster of this UpdateTaskProtectionRequest.
        :param tasks: The tasks of this UpdateTaskProtectionRequest.
        :param protection_enabled: The protection_enabled of this UpdateTaskProtectionRequest.
        :param expires_in_minutes: The expires_in_minutes of this UpdateTaskProtectionRequest.
        """
        self.openapi_types = {
            'cluster': str,
            'tasks': List,
            'protection_enabled': bool,
            'expires_in_minutes': int
        }

        self.attribute_map = {
            'cluster': 'cluster',
            'tasks': 'tasks',
            'protection_enabled': 'protectionEnabled',
            'expires_in_minutes': 'expiresInMinutes'
        }

        self._cluster = cluster
        self._tasks = tasks
        self._protection_enabled = protection_enabled
        self._expires_in_minutes = expires_in_minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTaskProtectionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTaskProtectionRequest of this UpdateTaskProtectionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this UpdateTaskProtectionRequest.


        :return: The cluster of this UpdateTaskProtectionRequest.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this UpdateTaskProtectionRequest.


        :param cluster: The cluster of this UpdateTaskProtectionRequest.
        :type cluster: str
        """
        if cluster is None:
            raise ValueError("Invalid value for `cluster`, must not be `None`")

        self._cluster = cluster

    @property
    def tasks(self):
        """Gets the tasks of this UpdateTaskProtectionRequest.


        :return: The tasks of this UpdateTaskProtectionRequest.
        :rtype: List
        """
        return self._tasks

    @tasks.setter
    def tasks(self, tasks):
        """Sets the tasks of this UpdateTaskProtectionRequest.


        :param tasks: The tasks of this UpdateTaskProtectionRequest.
        :type tasks: List
        """
        if tasks is None:
            raise ValueError("Invalid value for `tasks`, must not be `None`")

        self._tasks = tasks

    @property
    def protection_enabled(self):
        """Gets the protection_enabled of this UpdateTaskProtectionRequest.


        :return: The protection_enabled of this UpdateTaskProtectionRequest.
        :rtype: bool
        """
        return self._protection_enabled

    @protection_enabled.setter
    def protection_enabled(self, protection_enabled):
        """Sets the protection_enabled of this UpdateTaskProtectionRequest.


        :param protection_enabled: The protection_enabled of this UpdateTaskProtectionRequest.
        :type protection_enabled: bool
        """
        if protection_enabled is None:
            raise ValueError("Invalid value for `protection_enabled`, must not be `None`")

        self._protection_enabled = protection_enabled

    @property
    def expires_in_minutes(self):
        """Gets the expires_in_minutes of this UpdateTaskProtectionRequest.


        :return: The expires_in_minutes of this UpdateTaskProtectionRequest.
        :rtype: int
        """
        return self._expires_in_minutes

    @expires_in_minutes.setter
    def expires_in_minutes(self, expires_in_minutes):
        """Sets the expires_in_minutes of this UpdateTaskProtectionRequest.


        :param expires_in_minutes: The expires_in_minutes of this UpdateTaskProtectionRequest.
        :type expires_in_minutes: int
        """

        self._expires_in_minutes = expires_in_minutes
