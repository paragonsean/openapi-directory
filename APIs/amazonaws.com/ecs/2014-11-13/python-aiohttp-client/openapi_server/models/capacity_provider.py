# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.capacity_provider_auto_scaling_group_provider import CapacityProviderAutoScalingGroupProvider
from openapi_server.models.capacity_provider_status import CapacityProviderStatus
from openapi_server.models.capacity_provider_update_status import CapacityProviderUpdateStatus
from openapi_server import util


class CapacityProvider(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capacity_provider_arn: str=None, name: str=None, status: CapacityProviderStatus=None, auto_scaling_group_provider: CapacityProviderAutoScalingGroupProvider=None, update_status: CapacityProviderUpdateStatus=None, update_status_reason: str=None, tags: List=None):
        """CapacityProvider - a model defined in OpenAPI

        :param capacity_provider_arn: The capacity_provider_arn of this CapacityProvider.
        :param name: The name of this CapacityProvider.
        :param status: The status of this CapacityProvider.
        :param auto_scaling_group_provider: The auto_scaling_group_provider of this CapacityProvider.
        :param update_status: The update_status of this CapacityProvider.
        :param update_status_reason: The update_status_reason of this CapacityProvider.
        :param tags: The tags of this CapacityProvider.
        """
        self.openapi_types = {
            'capacity_provider_arn': str,
            'name': str,
            'status': CapacityProviderStatus,
            'auto_scaling_group_provider': CapacityProviderAutoScalingGroupProvider,
            'update_status': CapacityProviderUpdateStatus,
            'update_status_reason': str,
            'tags': List
        }

        self.attribute_map = {
            'capacity_provider_arn': 'capacityProviderArn',
            'name': 'name',
            'status': 'status',
            'auto_scaling_group_provider': 'autoScalingGroupProvider',
            'update_status': 'updateStatus',
            'update_status_reason': 'updateStatusReason',
            'tags': 'tags'
        }

        self._capacity_provider_arn = capacity_provider_arn
        self._name = name
        self._status = status
        self._auto_scaling_group_provider = auto_scaling_group_provider
        self._update_status = update_status
        self._update_status_reason = update_status_reason
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CapacityProvider':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CapacityProvider of this CapacityProvider.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capacity_provider_arn(self):
        """Gets the capacity_provider_arn of this CapacityProvider.


        :return: The capacity_provider_arn of this CapacityProvider.
        :rtype: str
        """
        return self._capacity_provider_arn

    @capacity_provider_arn.setter
    def capacity_provider_arn(self, capacity_provider_arn):
        """Sets the capacity_provider_arn of this CapacityProvider.


        :param capacity_provider_arn: The capacity_provider_arn of this CapacityProvider.
        :type capacity_provider_arn: str
        """

        self._capacity_provider_arn = capacity_provider_arn

    @property
    def name(self):
        """Gets the name of this CapacityProvider.


        :return: The name of this CapacityProvider.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CapacityProvider.


        :param name: The name of this CapacityProvider.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this CapacityProvider.


        :return: The status of this CapacityProvider.
        :rtype: CapacityProviderStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CapacityProvider.


        :param status: The status of this CapacityProvider.
        :type status: CapacityProviderStatus
        """

        self._status = status

    @property
    def auto_scaling_group_provider(self):
        """Gets the auto_scaling_group_provider of this CapacityProvider.


        :return: The auto_scaling_group_provider of this CapacityProvider.
        :rtype: CapacityProviderAutoScalingGroupProvider
        """
        return self._auto_scaling_group_provider

    @auto_scaling_group_provider.setter
    def auto_scaling_group_provider(self, auto_scaling_group_provider):
        """Sets the auto_scaling_group_provider of this CapacityProvider.


        :param auto_scaling_group_provider: The auto_scaling_group_provider of this CapacityProvider.
        :type auto_scaling_group_provider: CapacityProviderAutoScalingGroupProvider
        """

        self._auto_scaling_group_provider = auto_scaling_group_provider

    @property
    def update_status(self):
        """Gets the update_status of this CapacityProvider.


        :return: The update_status of this CapacityProvider.
        :rtype: CapacityProviderUpdateStatus
        """
        return self._update_status

    @update_status.setter
    def update_status(self, update_status):
        """Sets the update_status of this CapacityProvider.


        :param update_status: The update_status of this CapacityProvider.
        :type update_status: CapacityProviderUpdateStatus
        """

        self._update_status = update_status

    @property
    def update_status_reason(self):
        """Gets the update_status_reason of this CapacityProvider.


        :return: The update_status_reason of this CapacityProvider.
        :rtype: str
        """
        return self._update_status_reason

    @update_status_reason.setter
    def update_status_reason(self, update_status_reason):
        """Sets the update_status_reason of this CapacityProvider.


        :param update_status_reason: The update_status_reason of this CapacityProvider.
        :type update_status_reason: str
        """

        self._update_status_reason = update_status_reason

    @property
    def tags(self):
        """Gets the tags of this CapacityProvider.


        :return: The tags of this CapacityProvider.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CapacityProvider.


        :param tags: The tags of this CapacityProvider.
        :type tags: List
        """

        self._tags = tags
