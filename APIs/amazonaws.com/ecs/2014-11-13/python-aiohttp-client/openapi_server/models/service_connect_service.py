# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceConnectService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, port_name: str=None, discovery_name: str=None, client_aliases: List=None, ingress_port_override: int=None):
        """ServiceConnectService - a model defined in OpenAPI

        :param port_name: The port_name of this ServiceConnectService.
        :param discovery_name: The discovery_name of this ServiceConnectService.
        :param client_aliases: The client_aliases of this ServiceConnectService.
        :param ingress_port_override: The ingress_port_override of this ServiceConnectService.
        """
        self.openapi_types = {
            'port_name': str,
            'discovery_name': str,
            'client_aliases': List,
            'ingress_port_override': int
        }

        self.attribute_map = {
            'port_name': 'portName',
            'discovery_name': 'discoveryName',
            'client_aliases': 'clientAliases',
            'ingress_port_override': 'ingressPortOverride'
        }

        self._port_name = port_name
        self._discovery_name = discovery_name
        self._client_aliases = client_aliases
        self._ingress_port_override = ingress_port_override

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceConnectService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceConnectService of this ServiceConnectService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port_name(self):
        """Gets the port_name of this ServiceConnectService.


        :return: The port_name of this ServiceConnectService.
        :rtype: str
        """
        return self._port_name

    @port_name.setter
    def port_name(self, port_name):
        """Sets the port_name of this ServiceConnectService.


        :param port_name: The port_name of this ServiceConnectService.
        :type port_name: str
        """
        if port_name is None:
            raise ValueError("Invalid value for `port_name`, must not be `None`")

        self._port_name = port_name

    @property
    def discovery_name(self):
        """Gets the discovery_name of this ServiceConnectService.


        :return: The discovery_name of this ServiceConnectService.
        :rtype: str
        """
        return self._discovery_name

    @discovery_name.setter
    def discovery_name(self, discovery_name):
        """Sets the discovery_name of this ServiceConnectService.


        :param discovery_name: The discovery_name of this ServiceConnectService.
        :type discovery_name: str
        """

        self._discovery_name = discovery_name

    @property
    def client_aliases(self):
        """Gets the client_aliases of this ServiceConnectService.


        :return: The client_aliases of this ServiceConnectService.
        :rtype: List
        """
        return self._client_aliases

    @client_aliases.setter
    def client_aliases(self, client_aliases):
        """Sets the client_aliases of this ServiceConnectService.


        :param client_aliases: The client_aliases of this ServiceConnectService.
        :type client_aliases: List
        """

        self._client_aliases = client_aliases

    @property
    def ingress_port_override(self):
        """Gets the ingress_port_override of this ServiceConnectService.


        :return: The ingress_port_override of this ServiceConnectService.
        :rtype: int
        """
        return self._ingress_port_override

    @ingress_port_override.setter
    def ingress_port_override(self, ingress_port_override):
        """Sets the ingress_port_override of this ServiceConnectService.


        :param ingress_port_override: The ingress_port_override of this ServiceConnectService.
        :type ingress_port_override: int
        """

        self._ingress_port_override = ingress_port_override
