/**
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonPinpointSmsVoiceV2);
  }
}(this, function(expect, AmazonPinpointSmsVoiceV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonPinpointSmsVoiceV2.DeleteKeywordResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DeleteKeywordResult', function() {
    it('should create an instance of DeleteKeywordResult', function() {
      // uncomment below and update the code to test DeleteKeywordResult
      //var instance = new AmazonPinpointSmsVoiceV2.DeleteKeywordResult();
      //expect(instance).to.be.a(AmazonPinpointSmsVoiceV2.DeleteKeywordResult);
    });

    it('should have the property originationIdentityArn (base name: "OriginationIdentityArn")', function() {
      // uncomment below and update the code to test the property originationIdentityArn
      //var instance = new AmazonPinpointSmsVoiceV2.DeleteKeywordResult();
      //expect(instance).to.be();
    });

    it('should have the property originationIdentity (base name: "OriginationIdentity")', function() {
      // uncomment below and update the code to test the property originationIdentity
      //var instance = new AmazonPinpointSmsVoiceV2.DeleteKeywordResult();
      //expect(instance).to.be();
    });

    it('should have the property keyword (base name: "Keyword")', function() {
      // uncomment below and update the code to test the property keyword
      //var instance = new AmazonPinpointSmsVoiceV2.DeleteKeywordResult();
      //expect(instance).to.be();
    });

    it('should have the property keywordMessage (base name: "KeywordMessage")', function() {
      // uncomment below and update the code to test the property keywordMessage
      //var instance = new AmazonPinpointSmsVoiceV2.DeleteKeywordResult();
      //expect(instance).to.be();
    });

    it('should have the property keywordAction (base name: "KeywordAction")', function() {
      // uncomment below and update the code to test the property keywordAction
      //var instance = new AmazonPinpointSmsVoiceV2.DeleteKeywordResult();
      //expect(instance).to.be();
    });

  });

}));
