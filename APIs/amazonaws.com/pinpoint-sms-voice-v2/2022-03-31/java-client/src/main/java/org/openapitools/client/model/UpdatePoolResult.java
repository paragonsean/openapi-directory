/*
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.MessageType;
import org.openapitools.client.model.PoolStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdatePoolResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:46.409198-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdatePoolResult {
  public static final String SERIALIZED_NAME_POOL_ARN = "PoolArn";
  @SerializedName(SERIALIZED_NAME_POOL_ARN)
  private String poolArn;

  public static final String SERIALIZED_NAME_POOL_ID = "PoolId";
  @SerializedName(SERIALIZED_NAME_POOL_ID)
  private String poolId;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private PoolStatus status;

  public static final String SERIALIZED_NAME_MESSAGE_TYPE = "MessageType";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TYPE)
  private MessageType messageType;

  public static final String SERIALIZED_NAME_TWO_WAY_ENABLED = "TwoWayEnabled";
  @SerializedName(SERIALIZED_NAME_TWO_WAY_ENABLED)
  private Boolean twoWayEnabled;

  public static final String SERIALIZED_NAME_TWO_WAY_CHANNEL_ARN = "TwoWayChannelArn";
  @SerializedName(SERIALIZED_NAME_TWO_WAY_CHANNEL_ARN)
  private String twoWayChannelArn;

  public static final String SERIALIZED_NAME_SELF_MANAGED_OPT_OUTS_ENABLED = "SelfManagedOptOutsEnabled";
  @SerializedName(SERIALIZED_NAME_SELF_MANAGED_OPT_OUTS_ENABLED)
  private Boolean selfManagedOptOutsEnabled;

  public static final String SERIALIZED_NAME_OPT_OUT_LIST_NAME = "OptOutListName";
  @SerializedName(SERIALIZED_NAME_OPT_OUT_LIST_NAME)
  private String optOutListName;

  public static final String SERIALIZED_NAME_SHARED_ROUTES_ENABLED = "SharedRoutesEnabled";
  @SerializedName(SERIALIZED_NAME_SHARED_ROUTES_ENABLED)
  private Boolean sharedRoutesEnabled;

  public static final String SERIALIZED_NAME_DELETION_PROTECTION_ENABLED = "DeletionProtectionEnabled";
  @SerializedName(SERIALIZED_NAME_DELETION_PROTECTION_ENABLED)
  private Boolean deletionProtectionEnabled;

  public static final String SERIALIZED_NAME_CREATED_TIMESTAMP = "CreatedTimestamp";
  @SerializedName(SERIALIZED_NAME_CREATED_TIMESTAMP)
  private OffsetDateTime createdTimestamp;

  public UpdatePoolResult() {
  }

  public UpdatePoolResult poolArn(String poolArn) {
    this.poolArn = poolArn;
    return this;
  }

  /**
   * Get poolArn
   * @return poolArn
   */
  @javax.annotation.Nullable
  public String getPoolArn() {
    return poolArn;
  }

  public void setPoolArn(String poolArn) {
    this.poolArn = poolArn;
  }


  public UpdatePoolResult poolId(String poolId) {
    this.poolId = poolId;
    return this;
  }

  /**
   * Get poolId
   * @return poolId
   */
  @javax.annotation.Nullable
  public String getPoolId() {
    return poolId;
  }

  public void setPoolId(String poolId) {
    this.poolId = poolId;
  }


  public UpdatePoolResult status(PoolStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public PoolStatus getStatus() {
    return status;
  }

  public void setStatus(PoolStatus status) {
    this.status = status;
  }


  public UpdatePoolResult messageType(MessageType messageType) {
    this.messageType = messageType;
    return this;
  }

  /**
   * Get messageType
   * @return messageType
   */
  @javax.annotation.Nullable
  public MessageType getMessageType() {
    return messageType;
  }

  public void setMessageType(MessageType messageType) {
    this.messageType = messageType;
  }


  public UpdatePoolResult twoWayEnabled(Boolean twoWayEnabled) {
    this.twoWayEnabled = twoWayEnabled;
    return this;
  }

  /**
   * Get twoWayEnabled
   * @return twoWayEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTwoWayEnabled() {
    return twoWayEnabled;
  }

  public void setTwoWayEnabled(Boolean twoWayEnabled) {
    this.twoWayEnabled = twoWayEnabled;
  }


  public UpdatePoolResult twoWayChannelArn(String twoWayChannelArn) {
    this.twoWayChannelArn = twoWayChannelArn;
    return this;
  }

  /**
   * Get twoWayChannelArn
   * @return twoWayChannelArn
   */
  @javax.annotation.Nullable
  public String getTwoWayChannelArn() {
    return twoWayChannelArn;
  }

  public void setTwoWayChannelArn(String twoWayChannelArn) {
    this.twoWayChannelArn = twoWayChannelArn;
  }


  public UpdatePoolResult selfManagedOptOutsEnabled(Boolean selfManagedOptOutsEnabled) {
    this.selfManagedOptOutsEnabled = selfManagedOptOutsEnabled;
    return this;
  }

  /**
   * Get selfManagedOptOutsEnabled
   * @return selfManagedOptOutsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSelfManagedOptOutsEnabled() {
    return selfManagedOptOutsEnabled;
  }

  public void setSelfManagedOptOutsEnabled(Boolean selfManagedOptOutsEnabled) {
    this.selfManagedOptOutsEnabled = selfManagedOptOutsEnabled;
  }


  public UpdatePoolResult optOutListName(String optOutListName) {
    this.optOutListName = optOutListName;
    return this;
  }

  /**
   * Get optOutListName
   * @return optOutListName
   */
  @javax.annotation.Nullable
  public String getOptOutListName() {
    return optOutListName;
  }

  public void setOptOutListName(String optOutListName) {
    this.optOutListName = optOutListName;
  }


  public UpdatePoolResult sharedRoutesEnabled(Boolean sharedRoutesEnabled) {
    this.sharedRoutesEnabled = sharedRoutesEnabled;
    return this;
  }

  /**
   * Get sharedRoutesEnabled
   * @return sharedRoutesEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSharedRoutesEnabled() {
    return sharedRoutesEnabled;
  }

  public void setSharedRoutesEnabled(Boolean sharedRoutesEnabled) {
    this.sharedRoutesEnabled = sharedRoutesEnabled;
  }


  public UpdatePoolResult deletionProtectionEnabled(Boolean deletionProtectionEnabled) {
    this.deletionProtectionEnabled = deletionProtectionEnabled;
    return this;
  }

  /**
   * Get deletionProtectionEnabled
   * @return deletionProtectionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getDeletionProtectionEnabled() {
    return deletionProtectionEnabled;
  }

  public void setDeletionProtectionEnabled(Boolean deletionProtectionEnabled) {
    this.deletionProtectionEnabled = deletionProtectionEnabled;
  }


  public UpdatePoolResult createdTimestamp(OffsetDateTime createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
    return this;
  }

  /**
   * Get createdTimestamp
   * @return createdTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedTimestamp() {
    return createdTimestamp;
  }

  public void setCreatedTimestamp(OffsetDateTime createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdatePoolResult updatePoolResult = (UpdatePoolResult) o;
    return Objects.equals(this.poolArn, updatePoolResult.poolArn) &&
        Objects.equals(this.poolId, updatePoolResult.poolId) &&
        Objects.equals(this.status, updatePoolResult.status) &&
        Objects.equals(this.messageType, updatePoolResult.messageType) &&
        Objects.equals(this.twoWayEnabled, updatePoolResult.twoWayEnabled) &&
        Objects.equals(this.twoWayChannelArn, updatePoolResult.twoWayChannelArn) &&
        Objects.equals(this.selfManagedOptOutsEnabled, updatePoolResult.selfManagedOptOutsEnabled) &&
        Objects.equals(this.optOutListName, updatePoolResult.optOutListName) &&
        Objects.equals(this.sharedRoutesEnabled, updatePoolResult.sharedRoutesEnabled) &&
        Objects.equals(this.deletionProtectionEnabled, updatePoolResult.deletionProtectionEnabled) &&
        Objects.equals(this.createdTimestamp, updatePoolResult.createdTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(poolArn, poolId, status, messageType, twoWayEnabled, twoWayChannelArn, selfManagedOptOutsEnabled, optOutListName, sharedRoutesEnabled, deletionProtectionEnabled, createdTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdatePoolResult {\n");
    sb.append("    poolArn: ").append(toIndentedString(poolArn)).append("\n");
    sb.append("    poolId: ").append(toIndentedString(poolId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
    sb.append("    twoWayEnabled: ").append(toIndentedString(twoWayEnabled)).append("\n");
    sb.append("    twoWayChannelArn: ").append(toIndentedString(twoWayChannelArn)).append("\n");
    sb.append("    selfManagedOptOutsEnabled: ").append(toIndentedString(selfManagedOptOutsEnabled)).append("\n");
    sb.append("    optOutListName: ").append(toIndentedString(optOutListName)).append("\n");
    sb.append("    sharedRoutesEnabled: ").append(toIndentedString(sharedRoutesEnabled)).append("\n");
    sb.append("    deletionProtectionEnabled: ").append(toIndentedString(deletionProtectionEnabled)).append("\n");
    sb.append("    createdTimestamp: ").append(toIndentedString(createdTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("PoolArn");
    openapiFields.add("PoolId");
    openapiFields.add("Status");
    openapiFields.add("MessageType");
    openapiFields.add("TwoWayEnabled");
    openapiFields.add("TwoWayChannelArn");
    openapiFields.add("SelfManagedOptOutsEnabled");
    openapiFields.add("OptOutListName");
    openapiFields.add("SharedRoutesEnabled");
    openapiFields.add("DeletionProtectionEnabled");
    openapiFields.add("CreatedTimestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdatePoolResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdatePoolResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdatePoolResult is not found in the empty JSON string", UpdatePoolResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdatePoolResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdatePoolResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `PoolArn`
      if (jsonObj.get("PoolArn") != null && !jsonObj.get("PoolArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PoolArn"));
      }
      // validate the optional field `PoolId`
      if (jsonObj.get("PoolId") != null && !jsonObj.get("PoolId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PoolId"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        PoolStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `MessageType`
      if (jsonObj.get("MessageType") != null && !jsonObj.get("MessageType").isJsonNull()) {
        MessageType.validateJsonElement(jsonObj.get("MessageType"));
      }
      // validate the optional field `TwoWayEnabled`
      if (jsonObj.get("TwoWayEnabled") != null && !jsonObj.get("TwoWayEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("TwoWayEnabled"));
      }
      // validate the optional field `TwoWayChannelArn`
      if (jsonObj.get("TwoWayChannelArn") != null && !jsonObj.get("TwoWayChannelArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TwoWayChannelArn"));
      }
      // validate the optional field `SelfManagedOptOutsEnabled`
      if (jsonObj.get("SelfManagedOptOutsEnabled") != null && !jsonObj.get("SelfManagedOptOutsEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SelfManagedOptOutsEnabled"));
      }
      // validate the optional field `OptOutListName`
      if (jsonObj.get("OptOutListName") != null && !jsonObj.get("OptOutListName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OptOutListName"));
      }
      // validate the optional field `SharedRoutesEnabled`
      if (jsonObj.get("SharedRoutesEnabled") != null && !jsonObj.get("SharedRoutesEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SharedRoutesEnabled"));
      }
      // validate the optional field `DeletionProtectionEnabled`
      if (jsonObj.get("DeletionProtectionEnabled") != null && !jsonObj.get("DeletionProtectionEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DeletionProtectionEnabled"));
      }
      // validate the optional field `CreatedTimestamp`
      if (jsonObj.get("CreatedTimestamp") != null && !jsonObj.get("CreatedTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedTimestamp"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdatePoolResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdatePoolResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdatePoolResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdatePoolResult.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdatePoolResult>() {
           @Override
           public void write(JsonWriter out, UpdatePoolResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdatePoolResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdatePoolResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdatePoolResult
   * @throws IOException if the JSON string is invalid with respect to UpdatePoolResult
   */
  public static UpdatePoolResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdatePoolResult.class);
  }

  /**
   * Convert an instance of UpdatePoolResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

