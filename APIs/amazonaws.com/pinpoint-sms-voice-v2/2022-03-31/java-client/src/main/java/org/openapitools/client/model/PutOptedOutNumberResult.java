/*
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutOptedOutNumberResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:46.409198-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutOptedOutNumberResult {
  public static final String SERIALIZED_NAME_OPT_OUT_LIST_ARN = "OptOutListArn";
  @SerializedName(SERIALIZED_NAME_OPT_OUT_LIST_ARN)
  private String optOutListArn;

  public static final String SERIALIZED_NAME_OPT_OUT_LIST_NAME = "OptOutListName";
  @SerializedName(SERIALIZED_NAME_OPT_OUT_LIST_NAME)
  private String optOutListName;

  public static final String SERIALIZED_NAME_OPTED_OUT_NUMBER = "OptedOutNumber";
  @SerializedName(SERIALIZED_NAME_OPTED_OUT_NUMBER)
  private String optedOutNumber;

  public static final String SERIALIZED_NAME_OPTED_OUT_TIMESTAMP = "OptedOutTimestamp";
  @SerializedName(SERIALIZED_NAME_OPTED_OUT_TIMESTAMP)
  private OffsetDateTime optedOutTimestamp;

  public static final String SERIALIZED_NAME_END_USER_OPTED_OUT = "EndUserOptedOut";
  @SerializedName(SERIALIZED_NAME_END_USER_OPTED_OUT)
  private Boolean endUserOptedOut;

  public PutOptedOutNumberResult() {
  }

  public PutOptedOutNumberResult optOutListArn(String optOutListArn) {
    this.optOutListArn = optOutListArn;
    return this;
  }

  /**
   * Get optOutListArn
   * @return optOutListArn
   */
  @javax.annotation.Nullable
  public String getOptOutListArn() {
    return optOutListArn;
  }

  public void setOptOutListArn(String optOutListArn) {
    this.optOutListArn = optOutListArn;
  }


  public PutOptedOutNumberResult optOutListName(String optOutListName) {
    this.optOutListName = optOutListName;
    return this;
  }

  /**
   * Get optOutListName
   * @return optOutListName
   */
  @javax.annotation.Nullable
  public String getOptOutListName() {
    return optOutListName;
  }

  public void setOptOutListName(String optOutListName) {
    this.optOutListName = optOutListName;
  }


  public PutOptedOutNumberResult optedOutNumber(String optedOutNumber) {
    this.optedOutNumber = optedOutNumber;
    return this;
  }

  /**
   * Get optedOutNumber
   * @return optedOutNumber
   */
  @javax.annotation.Nullable
  public String getOptedOutNumber() {
    return optedOutNumber;
  }

  public void setOptedOutNumber(String optedOutNumber) {
    this.optedOutNumber = optedOutNumber;
  }


  public PutOptedOutNumberResult optedOutTimestamp(OffsetDateTime optedOutTimestamp) {
    this.optedOutTimestamp = optedOutTimestamp;
    return this;
  }

  /**
   * Get optedOutTimestamp
   * @return optedOutTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getOptedOutTimestamp() {
    return optedOutTimestamp;
  }

  public void setOptedOutTimestamp(OffsetDateTime optedOutTimestamp) {
    this.optedOutTimestamp = optedOutTimestamp;
  }


  public PutOptedOutNumberResult endUserOptedOut(Boolean endUserOptedOut) {
    this.endUserOptedOut = endUserOptedOut;
    return this;
  }

  /**
   * Get endUserOptedOut
   * @return endUserOptedOut
   */
  @javax.annotation.Nullable
  public Boolean getEndUserOptedOut() {
    return endUserOptedOut;
  }

  public void setEndUserOptedOut(Boolean endUserOptedOut) {
    this.endUserOptedOut = endUserOptedOut;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutOptedOutNumberResult putOptedOutNumberResult = (PutOptedOutNumberResult) o;
    return Objects.equals(this.optOutListArn, putOptedOutNumberResult.optOutListArn) &&
        Objects.equals(this.optOutListName, putOptedOutNumberResult.optOutListName) &&
        Objects.equals(this.optedOutNumber, putOptedOutNumberResult.optedOutNumber) &&
        Objects.equals(this.optedOutTimestamp, putOptedOutNumberResult.optedOutTimestamp) &&
        Objects.equals(this.endUserOptedOut, putOptedOutNumberResult.endUserOptedOut);
  }

  @Override
  public int hashCode() {
    return Objects.hash(optOutListArn, optOutListName, optedOutNumber, optedOutTimestamp, endUserOptedOut);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutOptedOutNumberResult {\n");
    sb.append("    optOutListArn: ").append(toIndentedString(optOutListArn)).append("\n");
    sb.append("    optOutListName: ").append(toIndentedString(optOutListName)).append("\n");
    sb.append("    optedOutNumber: ").append(toIndentedString(optedOutNumber)).append("\n");
    sb.append("    optedOutTimestamp: ").append(toIndentedString(optedOutTimestamp)).append("\n");
    sb.append("    endUserOptedOut: ").append(toIndentedString(endUserOptedOut)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OptOutListArn");
    openapiFields.add("OptOutListName");
    openapiFields.add("OptedOutNumber");
    openapiFields.add("OptedOutTimestamp");
    openapiFields.add("EndUserOptedOut");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutOptedOutNumberResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutOptedOutNumberResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutOptedOutNumberResult is not found in the empty JSON string", PutOptedOutNumberResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutOptedOutNumberResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutOptedOutNumberResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `OptOutListArn`
      if (jsonObj.get("OptOutListArn") != null && !jsonObj.get("OptOutListArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OptOutListArn"));
      }
      // validate the optional field `OptOutListName`
      if (jsonObj.get("OptOutListName") != null && !jsonObj.get("OptOutListName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OptOutListName"));
      }
      // validate the optional field `OptedOutNumber`
      if (jsonObj.get("OptedOutNumber") != null && !jsonObj.get("OptedOutNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OptedOutNumber"));
      }
      // validate the optional field `OptedOutTimestamp`
      if (jsonObj.get("OptedOutTimestamp") != null && !jsonObj.get("OptedOutTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("OptedOutTimestamp"));
      }
      // validate the optional field `EndUserOptedOut`
      if (jsonObj.get("EndUserOptedOut") != null && !jsonObj.get("EndUserOptedOut").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EndUserOptedOut"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutOptedOutNumberResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutOptedOutNumberResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutOptedOutNumberResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutOptedOutNumberResult.class));

       return (TypeAdapter<T>) new TypeAdapter<PutOptedOutNumberResult>() {
           @Override
           public void write(JsonWriter out, PutOptedOutNumberResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutOptedOutNumberResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutOptedOutNumberResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutOptedOutNumberResult
   * @throws IOException if the JSON string is invalid with respect to PutOptedOutNumberResult
   */
  public static PutOptedOutNumberResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutOptedOutNumberResult.class);
  }

  /**
   * Convert an instance of PutOptedOutNumberResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

