/*
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MessageType;
import org.openapitools.client.model.NumberStatus;
import org.openapitools.client.model.RequestableNumberType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RequestPhoneNumberResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:46.409198-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RequestPhoneNumberResult {
  public static final String SERIALIZED_NAME_PHONE_NUMBER_ARN = "PhoneNumberArn";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER_ARN)
  private String phoneNumberArn;

  public static final String SERIALIZED_NAME_PHONE_NUMBER_ID = "PhoneNumberId";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER_ID)
  private String phoneNumberId;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "PhoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private NumberStatus status;

  public static final String SERIALIZED_NAME_ISO_COUNTRY_CODE = "IsoCountryCode";
  @SerializedName(SERIALIZED_NAME_ISO_COUNTRY_CODE)
  private String isoCountryCode;

  public static final String SERIALIZED_NAME_MESSAGE_TYPE = "MessageType";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TYPE)
  private MessageType messageType;

  public static final String SERIALIZED_NAME_NUMBER_CAPABILITIES = "NumberCapabilities";
  @SerializedName(SERIALIZED_NAME_NUMBER_CAPABILITIES)
  private List numberCapabilities;

  public static final String SERIALIZED_NAME_NUMBER_TYPE = "NumberType";
  @SerializedName(SERIALIZED_NAME_NUMBER_TYPE)
  private RequestableNumberType numberType;

  public static final String SERIALIZED_NAME_MONTHLY_LEASING_PRICE = "MonthlyLeasingPrice";
  @SerializedName(SERIALIZED_NAME_MONTHLY_LEASING_PRICE)
  private String monthlyLeasingPrice;

  public static final String SERIALIZED_NAME_TWO_WAY_ENABLED = "TwoWayEnabled";
  @SerializedName(SERIALIZED_NAME_TWO_WAY_ENABLED)
  private Boolean twoWayEnabled;

  public static final String SERIALIZED_NAME_TWO_WAY_CHANNEL_ARN = "TwoWayChannelArn";
  @SerializedName(SERIALIZED_NAME_TWO_WAY_CHANNEL_ARN)
  private String twoWayChannelArn;

  public static final String SERIALIZED_NAME_SELF_MANAGED_OPT_OUTS_ENABLED = "SelfManagedOptOutsEnabled";
  @SerializedName(SERIALIZED_NAME_SELF_MANAGED_OPT_OUTS_ENABLED)
  private Boolean selfManagedOptOutsEnabled;

  public static final String SERIALIZED_NAME_OPT_OUT_LIST_NAME = "OptOutListName";
  @SerializedName(SERIALIZED_NAME_OPT_OUT_LIST_NAME)
  private String optOutListName;

  public static final String SERIALIZED_NAME_DELETION_PROTECTION_ENABLED = "DeletionProtectionEnabled";
  @SerializedName(SERIALIZED_NAME_DELETION_PROTECTION_ENABLED)
  private Boolean deletionProtectionEnabled;

  public static final String SERIALIZED_NAME_POOL_ID = "PoolId";
  @SerializedName(SERIALIZED_NAME_POOL_ID)
  private String poolId;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_CREATED_TIMESTAMP = "CreatedTimestamp";
  @SerializedName(SERIALIZED_NAME_CREATED_TIMESTAMP)
  private OffsetDateTime createdTimestamp;

  public RequestPhoneNumberResult() {
  }

  public RequestPhoneNumberResult phoneNumberArn(String phoneNumberArn) {
    this.phoneNumberArn = phoneNumberArn;
    return this;
  }

  /**
   * Get phoneNumberArn
   * @return phoneNumberArn
   */
  @javax.annotation.Nullable
  public String getPhoneNumberArn() {
    return phoneNumberArn;
  }

  public void setPhoneNumberArn(String phoneNumberArn) {
    this.phoneNumberArn = phoneNumberArn;
  }


  public RequestPhoneNumberResult phoneNumberId(String phoneNumberId) {
    this.phoneNumberId = phoneNumberId;
    return this;
  }

  /**
   * Get phoneNumberId
   * @return phoneNumberId
   */
  @javax.annotation.Nullable
  public String getPhoneNumberId() {
    return phoneNumberId;
  }

  public void setPhoneNumberId(String phoneNumberId) {
    this.phoneNumberId = phoneNumberId;
  }


  public RequestPhoneNumberResult phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public RequestPhoneNumberResult status(NumberStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public NumberStatus getStatus() {
    return status;
  }

  public void setStatus(NumberStatus status) {
    this.status = status;
  }


  public RequestPhoneNumberResult isoCountryCode(String isoCountryCode) {
    this.isoCountryCode = isoCountryCode;
    return this;
  }

  /**
   * Get isoCountryCode
   * @return isoCountryCode
   */
  @javax.annotation.Nullable
  public String getIsoCountryCode() {
    return isoCountryCode;
  }

  public void setIsoCountryCode(String isoCountryCode) {
    this.isoCountryCode = isoCountryCode;
  }


  public RequestPhoneNumberResult messageType(MessageType messageType) {
    this.messageType = messageType;
    return this;
  }

  /**
   * Get messageType
   * @return messageType
   */
  @javax.annotation.Nullable
  public MessageType getMessageType() {
    return messageType;
  }

  public void setMessageType(MessageType messageType) {
    this.messageType = messageType;
  }


  public RequestPhoneNumberResult numberCapabilities(List numberCapabilities) {
    this.numberCapabilities = numberCapabilities;
    return this;
  }

  /**
   * Get numberCapabilities
   * @return numberCapabilities
   */
  @javax.annotation.Nullable
  public List getNumberCapabilities() {
    return numberCapabilities;
  }

  public void setNumberCapabilities(List numberCapabilities) {
    this.numberCapabilities = numberCapabilities;
  }


  public RequestPhoneNumberResult numberType(RequestableNumberType numberType) {
    this.numberType = numberType;
    return this;
  }

  /**
   * Get numberType
   * @return numberType
   */
  @javax.annotation.Nullable
  public RequestableNumberType getNumberType() {
    return numberType;
  }

  public void setNumberType(RequestableNumberType numberType) {
    this.numberType = numberType;
  }


  public RequestPhoneNumberResult monthlyLeasingPrice(String monthlyLeasingPrice) {
    this.monthlyLeasingPrice = monthlyLeasingPrice;
    return this;
  }

  /**
   * Get monthlyLeasingPrice
   * @return monthlyLeasingPrice
   */
  @javax.annotation.Nullable
  public String getMonthlyLeasingPrice() {
    return monthlyLeasingPrice;
  }

  public void setMonthlyLeasingPrice(String monthlyLeasingPrice) {
    this.monthlyLeasingPrice = monthlyLeasingPrice;
  }


  public RequestPhoneNumberResult twoWayEnabled(Boolean twoWayEnabled) {
    this.twoWayEnabled = twoWayEnabled;
    return this;
  }

  /**
   * Get twoWayEnabled
   * @return twoWayEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTwoWayEnabled() {
    return twoWayEnabled;
  }

  public void setTwoWayEnabled(Boolean twoWayEnabled) {
    this.twoWayEnabled = twoWayEnabled;
  }


  public RequestPhoneNumberResult twoWayChannelArn(String twoWayChannelArn) {
    this.twoWayChannelArn = twoWayChannelArn;
    return this;
  }

  /**
   * Get twoWayChannelArn
   * @return twoWayChannelArn
   */
  @javax.annotation.Nullable
  public String getTwoWayChannelArn() {
    return twoWayChannelArn;
  }

  public void setTwoWayChannelArn(String twoWayChannelArn) {
    this.twoWayChannelArn = twoWayChannelArn;
  }


  public RequestPhoneNumberResult selfManagedOptOutsEnabled(Boolean selfManagedOptOutsEnabled) {
    this.selfManagedOptOutsEnabled = selfManagedOptOutsEnabled;
    return this;
  }

  /**
   * Get selfManagedOptOutsEnabled
   * @return selfManagedOptOutsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSelfManagedOptOutsEnabled() {
    return selfManagedOptOutsEnabled;
  }

  public void setSelfManagedOptOutsEnabled(Boolean selfManagedOptOutsEnabled) {
    this.selfManagedOptOutsEnabled = selfManagedOptOutsEnabled;
  }


  public RequestPhoneNumberResult optOutListName(String optOutListName) {
    this.optOutListName = optOutListName;
    return this;
  }

  /**
   * Get optOutListName
   * @return optOutListName
   */
  @javax.annotation.Nullable
  public String getOptOutListName() {
    return optOutListName;
  }

  public void setOptOutListName(String optOutListName) {
    this.optOutListName = optOutListName;
  }


  public RequestPhoneNumberResult deletionProtectionEnabled(Boolean deletionProtectionEnabled) {
    this.deletionProtectionEnabled = deletionProtectionEnabled;
    return this;
  }

  /**
   * Get deletionProtectionEnabled
   * @return deletionProtectionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getDeletionProtectionEnabled() {
    return deletionProtectionEnabled;
  }

  public void setDeletionProtectionEnabled(Boolean deletionProtectionEnabled) {
    this.deletionProtectionEnabled = deletionProtectionEnabled;
  }


  public RequestPhoneNumberResult poolId(String poolId) {
    this.poolId = poolId;
    return this;
  }

  /**
   * Get poolId
   * @return poolId
   */
  @javax.annotation.Nullable
  public String getPoolId() {
    return poolId;
  }

  public void setPoolId(String poolId) {
    this.poolId = poolId;
  }


  public RequestPhoneNumberResult tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public RequestPhoneNumberResult createdTimestamp(OffsetDateTime createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
    return this;
  }

  /**
   * Get createdTimestamp
   * @return createdTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedTimestamp() {
    return createdTimestamp;
  }

  public void setCreatedTimestamp(OffsetDateTime createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestPhoneNumberResult requestPhoneNumberResult = (RequestPhoneNumberResult) o;
    return Objects.equals(this.phoneNumberArn, requestPhoneNumberResult.phoneNumberArn) &&
        Objects.equals(this.phoneNumberId, requestPhoneNumberResult.phoneNumberId) &&
        Objects.equals(this.phoneNumber, requestPhoneNumberResult.phoneNumber) &&
        Objects.equals(this.status, requestPhoneNumberResult.status) &&
        Objects.equals(this.isoCountryCode, requestPhoneNumberResult.isoCountryCode) &&
        Objects.equals(this.messageType, requestPhoneNumberResult.messageType) &&
        Objects.equals(this.numberCapabilities, requestPhoneNumberResult.numberCapabilities) &&
        Objects.equals(this.numberType, requestPhoneNumberResult.numberType) &&
        Objects.equals(this.monthlyLeasingPrice, requestPhoneNumberResult.monthlyLeasingPrice) &&
        Objects.equals(this.twoWayEnabled, requestPhoneNumberResult.twoWayEnabled) &&
        Objects.equals(this.twoWayChannelArn, requestPhoneNumberResult.twoWayChannelArn) &&
        Objects.equals(this.selfManagedOptOutsEnabled, requestPhoneNumberResult.selfManagedOptOutsEnabled) &&
        Objects.equals(this.optOutListName, requestPhoneNumberResult.optOutListName) &&
        Objects.equals(this.deletionProtectionEnabled, requestPhoneNumberResult.deletionProtectionEnabled) &&
        Objects.equals(this.poolId, requestPhoneNumberResult.poolId) &&
        Objects.equals(this.tags, requestPhoneNumberResult.tags) &&
        Objects.equals(this.createdTimestamp, requestPhoneNumberResult.createdTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phoneNumberArn, phoneNumberId, phoneNumber, status, isoCountryCode, messageType, numberCapabilities, numberType, monthlyLeasingPrice, twoWayEnabled, twoWayChannelArn, selfManagedOptOutsEnabled, optOutListName, deletionProtectionEnabled, poolId, tags, createdTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestPhoneNumberResult {\n");
    sb.append("    phoneNumberArn: ").append(toIndentedString(phoneNumberArn)).append("\n");
    sb.append("    phoneNumberId: ").append(toIndentedString(phoneNumberId)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    isoCountryCode: ").append(toIndentedString(isoCountryCode)).append("\n");
    sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
    sb.append("    numberCapabilities: ").append(toIndentedString(numberCapabilities)).append("\n");
    sb.append("    numberType: ").append(toIndentedString(numberType)).append("\n");
    sb.append("    monthlyLeasingPrice: ").append(toIndentedString(monthlyLeasingPrice)).append("\n");
    sb.append("    twoWayEnabled: ").append(toIndentedString(twoWayEnabled)).append("\n");
    sb.append("    twoWayChannelArn: ").append(toIndentedString(twoWayChannelArn)).append("\n");
    sb.append("    selfManagedOptOutsEnabled: ").append(toIndentedString(selfManagedOptOutsEnabled)).append("\n");
    sb.append("    optOutListName: ").append(toIndentedString(optOutListName)).append("\n");
    sb.append("    deletionProtectionEnabled: ").append(toIndentedString(deletionProtectionEnabled)).append("\n");
    sb.append("    poolId: ").append(toIndentedString(poolId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    createdTimestamp: ").append(toIndentedString(createdTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("PhoneNumberArn");
    openapiFields.add("PhoneNumberId");
    openapiFields.add("PhoneNumber");
    openapiFields.add("Status");
    openapiFields.add("IsoCountryCode");
    openapiFields.add("MessageType");
    openapiFields.add("NumberCapabilities");
    openapiFields.add("NumberType");
    openapiFields.add("MonthlyLeasingPrice");
    openapiFields.add("TwoWayEnabled");
    openapiFields.add("TwoWayChannelArn");
    openapiFields.add("SelfManagedOptOutsEnabled");
    openapiFields.add("OptOutListName");
    openapiFields.add("DeletionProtectionEnabled");
    openapiFields.add("PoolId");
    openapiFields.add("Tags");
    openapiFields.add("CreatedTimestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RequestPhoneNumberResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RequestPhoneNumberResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RequestPhoneNumberResult is not found in the empty JSON string", RequestPhoneNumberResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RequestPhoneNumberResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RequestPhoneNumberResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `PhoneNumberArn`
      if (jsonObj.get("PhoneNumberArn") != null && !jsonObj.get("PhoneNumberArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PhoneNumberArn"));
      }
      // validate the optional field `PhoneNumberId`
      if (jsonObj.get("PhoneNumberId") != null && !jsonObj.get("PhoneNumberId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PhoneNumberId"));
      }
      // validate the optional field `PhoneNumber`
      if (jsonObj.get("PhoneNumber") != null && !jsonObj.get("PhoneNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PhoneNumber"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        NumberStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `IsoCountryCode`
      if (jsonObj.get("IsoCountryCode") != null && !jsonObj.get("IsoCountryCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IsoCountryCode"));
      }
      // validate the optional field `MessageType`
      if (jsonObj.get("MessageType") != null && !jsonObj.get("MessageType").isJsonNull()) {
        MessageType.validateJsonElement(jsonObj.get("MessageType"));
      }
      // validate the optional field `NumberCapabilities`
      if (jsonObj.get("NumberCapabilities") != null && !jsonObj.get("NumberCapabilities").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NumberCapabilities"));
      }
      // validate the optional field `NumberType`
      if (jsonObj.get("NumberType") != null && !jsonObj.get("NumberType").isJsonNull()) {
        RequestableNumberType.validateJsonElement(jsonObj.get("NumberType"));
      }
      // validate the optional field `MonthlyLeasingPrice`
      if (jsonObj.get("MonthlyLeasingPrice") != null && !jsonObj.get("MonthlyLeasingPrice").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MonthlyLeasingPrice"));
      }
      // validate the optional field `TwoWayEnabled`
      if (jsonObj.get("TwoWayEnabled") != null && !jsonObj.get("TwoWayEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("TwoWayEnabled"));
      }
      // validate the optional field `TwoWayChannelArn`
      if (jsonObj.get("TwoWayChannelArn") != null && !jsonObj.get("TwoWayChannelArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TwoWayChannelArn"));
      }
      // validate the optional field `SelfManagedOptOutsEnabled`
      if (jsonObj.get("SelfManagedOptOutsEnabled") != null && !jsonObj.get("SelfManagedOptOutsEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SelfManagedOptOutsEnabled"));
      }
      // validate the optional field `OptOutListName`
      if (jsonObj.get("OptOutListName") != null && !jsonObj.get("OptOutListName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OptOutListName"));
      }
      // validate the optional field `DeletionProtectionEnabled`
      if (jsonObj.get("DeletionProtectionEnabled") != null && !jsonObj.get("DeletionProtectionEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DeletionProtectionEnabled"));
      }
      // validate the optional field `PoolId`
      if (jsonObj.get("PoolId") != null && !jsonObj.get("PoolId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PoolId"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `CreatedTimestamp`
      if (jsonObj.get("CreatedTimestamp") != null && !jsonObj.get("CreatedTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedTimestamp"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RequestPhoneNumberResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RequestPhoneNumberResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RequestPhoneNumberResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RequestPhoneNumberResult.class));

       return (TypeAdapter<T>) new TypeAdapter<RequestPhoneNumberResult>() {
           @Override
           public void write(JsonWriter out, RequestPhoneNumberResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RequestPhoneNumberResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RequestPhoneNumberResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RequestPhoneNumberResult
   * @throws IOException if the JSON string is invalid with respect to RequestPhoneNumberResult
   */
  public static RequestPhoneNumberResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RequestPhoneNumberResult.class);
  }

  /**
   * Convert an instance of RequestPhoneNumberResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

