/*
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.MessageType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SendTextMessageRequest
 */
public class SendTextMessageRequestTest {
    private final SendTextMessageRequest model = new SendTextMessageRequest();

    /**
     * Model tests for SendTextMessageRequest
     */
    @Test
    public void testSendTextMessageRequest() {
        // TODO: test SendTextMessageRequest
    }

    /**
     * Test the property 'destinationPhoneNumber'
     */
    @Test
    public void destinationPhoneNumberTest() {
        // TODO: test destinationPhoneNumber
    }

    /**
     * Test the property 'originationIdentity'
     */
    @Test
    public void originationIdentityTest() {
        // TODO: test originationIdentity
    }

    /**
     * Test the property 'messageBody'
     */
    @Test
    public void messageBodyTest() {
        // TODO: test messageBody
    }

    /**
     * Test the property 'messageType'
     */
    @Test
    public void messageTypeTest() {
        // TODO: test messageType
    }

    /**
     * Test the property 'keyword'
     */
    @Test
    public void keywordTest() {
        // TODO: test keyword
    }

    /**
     * Test the property 'configurationSetName'
     */
    @Test
    public void configurationSetNameTest() {
        // TODO: test configurationSetName
    }

    /**
     * Test the property 'maxPrice'
     */
    @Test
    public void maxPriceTest() {
        // TODO: test maxPrice
    }

    /**
     * Test the property 'timeToLive'
     */
    @Test
    public void timeToLiveTest() {
        // TODO: test timeToLive
    }

    /**
     * Test the property 'context'
     */
    @Test
    public void contextTest() {
        // TODO: test context
    }

    /**
     * Test the property 'destinationCountryParameters'
     */
    @Test
    public void destinationCountryParametersTest() {
        // TODO: test destinationCountryParameters
    }

    /**
     * Test the property 'dryRun'
     */
    @Test
    public void dryRunTest() {
        // TODO: test dryRun
    }

}
