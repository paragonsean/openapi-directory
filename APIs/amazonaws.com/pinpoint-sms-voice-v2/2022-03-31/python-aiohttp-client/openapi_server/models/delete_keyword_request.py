# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteKeywordRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, origination_identity: str=None, keyword: str=None):
        """DeleteKeywordRequest - a model defined in OpenAPI

        :param origination_identity: The origination_identity of this DeleteKeywordRequest.
        :param keyword: The keyword of this DeleteKeywordRequest.
        """
        self.openapi_types = {
            'origination_identity': str,
            'keyword': str
        }

        self.attribute_map = {
            'origination_identity': 'OriginationIdentity',
            'keyword': 'Keyword'
        }

        self._origination_identity = origination_identity
        self._keyword = keyword

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteKeywordRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteKeywordRequest of this DeleteKeywordRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def origination_identity(self):
        """Gets the origination_identity of this DeleteKeywordRequest.


        :return: The origination_identity of this DeleteKeywordRequest.
        :rtype: str
        """
        return self._origination_identity

    @origination_identity.setter
    def origination_identity(self, origination_identity):
        """Sets the origination_identity of this DeleteKeywordRequest.


        :param origination_identity: The origination_identity of this DeleteKeywordRequest.
        :type origination_identity: str
        """
        if origination_identity is None:
            raise ValueError("Invalid value for `origination_identity`, must not be `None`")

        self._origination_identity = origination_identity

    @property
    def keyword(self):
        """Gets the keyword of this DeleteKeywordRequest.


        :return: The keyword of this DeleteKeywordRequest.
        :rtype: str
        """
        return self._keyword

    @keyword.setter
    def keyword(self, keyword):
        """Sets the keyword of this DeleteKeywordRequest.


        :param keyword: The keyword of this DeleteKeywordRequest.
        :type keyword: str
        """
        if keyword is None:
            raise ValueError("Invalid value for `keyword`, must not be `None`")

        self._keyword = keyword
