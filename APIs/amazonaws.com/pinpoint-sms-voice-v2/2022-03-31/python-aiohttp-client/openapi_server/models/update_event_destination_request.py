# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_event_destination_request_cloud_watch_logs_destination import UpdateEventDestinationRequestCloudWatchLogsDestination
from openapi_server.models.update_event_destination_request_kinesis_firehose_destination import UpdateEventDestinationRequestKinesisFirehoseDestination
from openapi_server.models.update_event_destination_request_sns_destination import UpdateEventDestinationRequestSnsDestination
from openapi_server import util


class UpdateEventDestinationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_set_name: str=None, event_destination_name: str=None, enabled: bool=None, matching_event_types: List=None, cloud_watch_logs_destination: UpdateEventDestinationRequestCloudWatchLogsDestination=None, kinesis_firehose_destination: UpdateEventDestinationRequestKinesisFirehoseDestination=None, sns_destination: UpdateEventDestinationRequestSnsDestination=None):
        """UpdateEventDestinationRequest - a model defined in OpenAPI

        :param configuration_set_name: The configuration_set_name of this UpdateEventDestinationRequest.
        :param event_destination_name: The event_destination_name of this UpdateEventDestinationRequest.
        :param enabled: The enabled of this UpdateEventDestinationRequest.
        :param matching_event_types: The matching_event_types of this UpdateEventDestinationRequest.
        :param cloud_watch_logs_destination: The cloud_watch_logs_destination of this UpdateEventDestinationRequest.
        :param kinesis_firehose_destination: The kinesis_firehose_destination of this UpdateEventDestinationRequest.
        :param sns_destination: The sns_destination of this UpdateEventDestinationRequest.
        """
        self.openapi_types = {
            'configuration_set_name': str,
            'event_destination_name': str,
            'enabled': bool,
            'matching_event_types': List,
            'cloud_watch_logs_destination': UpdateEventDestinationRequestCloudWatchLogsDestination,
            'kinesis_firehose_destination': UpdateEventDestinationRequestKinesisFirehoseDestination,
            'sns_destination': UpdateEventDestinationRequestSnsDestination
        }

        self.attribute_map = {
            'configuration_set_name': 'ConfigurationSetName',
            'event_destination_name': 'EventDestinationName',
            'enabled': 'Enabled',
            'matching_event_types': 'MatchingEventTypes',
            'cloud_watch_logs_destination': 'CloudWatchLogsDestination',
            'kinesis_firehose_destination': 'KinesisFirehoseDestination',
            'sns_destination': 'SnsDestination'
        }

        self._configuration_set_name = configuration_set_name
        self._event_destination_name = event_destination_name
        self._enabled = enabled
        self._matching_event_types = matching_event_types
        self._cloud_watch_logs_destination = cloud_watch_logs_destination
        self._kinesis_firehose_destination = kinesis_firehose_destination
        self._sns_destination = sns_destination

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEventDestinationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEventDestinationRequest of this UpdateEventDestinationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_set_name(self):
        """Gets the configuration_set_name of this UpdateEventDestinationRequest.


        :return: The configuration_set_name of this UpdateEventDestinationRequest.
        :rtype: str
        """
        return self._configuration_set_name

    @configuration_set_name.setter
    def configuration_set_name(self, configuration_set_name):
        """Sets the configuration_set_name of this UpdateEventDestinationRequest.


        :param configuration_set_name: The configuration_set_name of this UpdateEventDestinationRequest.
        :type configuration_set_name: str
        """
        if configuration_set_name is None:
            raise ValueError("Invalid value for `configuration_set_name`, must not be `None`")

        self._configuration_set_name = configuration_set_name

    @property
    def event_destination_name(self):
        """Gets the event_destination_name of this UpdateEventDestinationRequest.


        :return: The event_destination_name of this UpdateEventDestinationRequest.
        :rtype: str
        """
        return self._event_destination_name

    @event_destination_name.setter
    def event_destination_name(self, event_destination_name):
        """Sets the event_destination_name of this UpdateEventDestinationRequest.


        :param event_destination_name: The event_destination_name of this UpdateEventDestinationRequest.
        :type event_destination_name: str
        """
        if event_destination_name is None:
            raise ValueError("Invalid value for `event_destination_name`, must not be `None`")

        self._event_destination_name = event_destination_name

    @property
    def enabled(self):
        """Gets the enabled of this UpdateEventDestinationRequest.


        :return: The enabled of this UpdateEventDestinationRequest.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this UpdateEventDestinationRequest.


        :param enabled: The enabled of this UpdateEventDestinationRequest.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def matching_event_types(self):
        """Gets the matching_event_types of this UpdateEventDestinationRequest.


        :return: The matching_event_types of this UpdateEventDestinationRequest.
        :rtype: List
        """
        return self._matching_event_types

    @matching_event_types.setter
    def matching_event_types(self, matching_event_types):
        """Sets the matching_event_types of this UpdateEventDestinationRequest.


        :param matching_event_types: The matching_event_types of this UpdateEventDestinationRequest.
        :type matching_event_types: List
        """

        self._matching_event_types = matching_event_types

    @property
    def cloud_watch_logs_destination(self):
        """Gets the cloud_watch_logs_destination of this UpdateEventDestinationRequest.


        :return: The cloud_watch_logs_destination of this UpdateEventDestinationRequest.
        :rtype: UpdateEventDestinationRequestCloudWatchLogsDestination
        """
        return self._cloud_watch_logs_destination

    @cloud_watch_logs_destination.setter
    def cloud_watch_logs_destination(self, cloud_watch_logs_destination):
        """Sets the cloud_watch_logs_destination of this UpdateEventDestinationRequest.


        :param cloud_watch_logs_destination: The cloud_watch_logs_destination of this UpdateEventDestinationRequest.
        :type cloud_watch_logs_destination: UpdateEventDestinationRequestCloudWatchLogsDestination
        """

        self._cloud_watch_logs_destination = cloud_watch_logs_destination

    @property
    def kinesis_firehose_destination(self):
        """Gets the kinesis_firehose_destination of this UpdateEventDestinationRequest.


        :return: The kinesis_firehose_destination of this UpdateEventDestinationRequest.
        :rtype: UpdateEventDestinationRequestKinesisFirehoseDestination
        """
        return self._kinesis_firehose_destination

    @kinesis_firehose_destination.setter
    def kinesis_firehose_destination(self, kinesis_firehose_destination):
        """Sets the kinesis_firehose_destination of this UpdateEventDestinationRequest.


        :param kinesis_firehose_destination: The kinesis_firehose_destination of this UpdateEventDestinationRequest.
        :type kinesis_firehose_destination: UpdateEventDestinationRequestKinesisFirehoseDestination
        """

        self._kinesis_firehose_destination = kinesis_firehose_destination

    @property
    def sns_destination(self):
        """Gets the sns_destination of this UpdateEventDestinationRequest.


        :return: The sns_destination of this UpdateEventDestinationRequest.
        :rtype: UpdateEventDestinationRequestSnsDestination
        """
        return self._sns_destination

    @sns_destination.setter
    def sns_destination(self, sns_destination):
        """Sets the sns_destination of this UpdateEventDestinationRequest.


        :param sns_destination: The sns_destination of this UpdateEventDestinationRequest.
        :type sns_destination: UpdateEventDestinationRequestSnsDestination
        """

        self._sns_destination = sns_destination
