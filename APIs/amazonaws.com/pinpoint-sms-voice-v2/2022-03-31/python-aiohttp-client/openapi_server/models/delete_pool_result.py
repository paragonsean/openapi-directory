# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_type import MessageType
from openapi_server.models.pool_status import PoolStatus
from openapi_server import util


class DeletePoolResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pool_arn: str=None, pool_id: str=None, status: PoolStatus=None, message_type: MessageType=None, two_way_enabled: bool=None, two_way_channel_arn: str=None, self_managed_opt_outs_enabled: bool=None, opt_out_list_name: str=None, shared_routes_enabled: bool=None, created_timestamp: datetime=None):
        """DeletePoolResult - a model defined in OpenAPI

        :param pool_arn: The pool_arn of this DeletePoolResult.
        :param pool_id: The pool_id of this DeletePoolResult.
        :param status: The status of this DeletePoolResult.
        :param message_type: The message_type of this DeletePoolResult.
        :param two_way_enabled: The two_way_enabled of this DeletePoolResult.
        :param two_way_channel_arn: The two_way_channel_arn of this DeletePoolResult.
        :param self_managed_opt_outs_enabled: The self_managed_opt_outs_enabled of this DeletePoolResult.
        :param opt_out_list_name: The opt_out_list_name of this DeletePoolResult.
        :param shared_routes_enabled: The shared_routes_enabled of this DeletePoolResult.
        :param created_timestamp: The created_timestamp of this DeletePoolResult.
        """
        self.openapi_types = {
            'pool_arn': str,
            'pool_id': str,
            'status': PoolStatus,
            'message_type': MessageType,
            'two_way_enabled': bool,
            'two_way_channel_arn': str,
            'self_managed_opt_outs_enabled': bool,
            'opt_out_list_name': str,
            'shared_routes_enabled': bool,
            'created_timestamp': datetime
        }

        self.attribute_map = {
            'pool_arn': 'PoolArn',
            'pool_id': 'PoolId',
            'status': 'Status',
            'message_type': 'MessageType',
            'two_way_enabled': 'TwoWayEnabled',
            'two_way_channel_arn': 'TwoWayChannelArn',
            'self_managed_opt_outs_enabled': 'SelfManagedOptOutsEnabled',
            'opt_out_list_name': 'OptOutListName',
            'shared_routes_enabled': 'SharedRoutesEnabled',
            'created_timestamp': 'CreatedTimestamp'
        }

        self._pool_arn = pool_arn
        self._pool_id = pool_id
        self._status = status
        self._message_type = message_type
        self._two_way_enabled = two_way_enabled
        self._two_way_channel_arn = two_way_channel_arn
        self._self_managed_opt_outs_enabled = self_managed_opt_outs_enabled
        self._opt_out_list_name = opt_out_list_name
        self._shared_routes_enabled = shared_routes_enabled
        self._created_timestamp = created_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeletePoolResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeletePoolResult of this DeletePoolResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pool_arn(self):
        """Gets the pool_arn of this DeletePoolResult.


        :return: The pool_arn of this DeletePoolResult.
        :rtype: str
        """
        return self._pool_arn

    @pool_arn.setter
    def pool_arn(self, pool_arn):
        """Sets the pool_arn of this DeletePoolResult.


        :param pool_arn: The pool_arn of this DeletePoolResult.
        :type pool_arn: str
        """

        self._pool_arn = pool_arn

    @property
    def pool_id(self):
        """Gets the pool_id of this DeletePoolResult.


        :return: The pool_id of this DeletePoolResult.
        :rtype: str
        """
        return self._pool_id

    @pool_id.setter
    def pool_id(self, pool_id):
        """Sets the pool_id of this DeletePoolResult.


        :param pool_id: The pool_id of this DeletePoolResult.
        :type pool_id: str
        """

        self._pool_id = pool_id

    @property
    def status(self):
        """Gets the status of this DeletePoolResult.


        :return: The status of this DeletePoolResult.
        :rtype: PoolStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeletePoolResult.


        :param status: The status of this DeletePoolResult.
        :type status: PoolStatus
        """

        self._status = status

    @property
    def message_type(self):
        """Gets the message_type of this DeletePoolResult.


        :return: The message_type of this DeletePoolResult.
        :rtype: MessageType
        """
        return self._message_type

    @message_type.setter
    def message_type(self, message_type):
        """Sets the message_type of this DeletePoolResult.


        :param message_type: The message_type of this DeletePoolResult.
        :type message_type: MessageType
        """

        self._message_type = message_type

    @property
    def two_way_enabled(self):
        """Gets the two_way_enabled of this DeletePoolResult.


        :return: The two_way_enabled of this DeletePoolResult.
        :rtype: bool
        """
        return self._two_way_enabled

    @two_way_enabled.setter
    def two_way_enabled(self, two_way_enabled):
        """Sets the two_way_enabled of this DeletePoolResult.


        :param two_way_enabled: The two_way_enabled of this DeletePoolResult.
        :type two_way_enabled: bool
        """

        self._two_way_enabled = two_way_enabled

    @property
    def two_way_channel_arn(self):
        """Gets the two_way_channel_arn of this DeletePoolResult.


        :return: The two_way_channel_arn of this DeletePoolResult.
        :rtype: str
        """
        return self._two_way_channel_arn

    @two_way_channel_arn.setter
    def two_way_channel_arn(self, two_way_channel_arn):
        """Sets the two_way_channel_arn of this DeletePoolResult.


        :param two_way_channel_arn: The two_way_channel_arn of this DeletePoolResult.
        :type two_way_channel_arn: str
        """

        self._two_way_channel_arn = two_way_channel_arn

    @property
    def self_managed_opt_outs_enabled(self):
        """Gets the self_managed_opt_outs_enabled of this DeletePoolResult.


        :return: The self_managed_opt_outs_enabled of this DeletePoolResult.
        :rtype: bool
        """
        return self._self_managed_opt_outs_enabled

    @self_managed_opt_outs_enabled.setter
    def self_managed_opt_outs_enabled(self, self_managed_opt_outs_enabled):
        """Sets the self_managed_opt_outs_enabled of this DeletePoolResult.


        :param self_managed_opt_outs_enabled: The self_managed_opt_outs_enabled of this DeletePoolResult.
        :type self_managed_opt_outs_enabled: bool
        """

        self._self_managed_opt_outs_enabled = self_managed_opt_outs_enabled

    @property
    def opt_out_list_name(self):
        """Gets the opt_out_list_name of this DeletePoolResult.


        :return: The opt_out_list_name of this DeletePoolResult.
        :rtype: str
        """
        return self._opt_out_list_name

    @opt_out_list_name.setter
    def opt_out_list_name(self, opt_out_list_name):
        """Sets the opt_out_list_name of this DeletePoolResult.


        :param opt_out_list_name: The opt_out_list_name of this DeletePoolResult.
        :type opt_out_list_name: str
        """

        self._opt_out_list_name = opt_out_list_name

    @property
    def shared_routes_enabled(self):
        """Gets the shared_routes_enabled of this DeletePoolResult.


        :return: The shared_routes_enabled of this DeletePoolResult.
        :rtype: bool
        """
        return self._shared_routes_enabled

    @shared_routes_enabled.setter
    def shared_routes_enabled(self, shared_routes_enabled):
        """Sets the shared_routes_enabled of this DeletePoolResult.


        :param shared_routes_enabled: The shared_routes_enabled of this DeletePoolResult.
        :type shared_routes_enabled: bool
        """

        self._shared_routes_enabled = shared_routes_enabled

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this DeletePoolResult.


        :return: The created_timestamp of this DeletePoolResult.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this DeletePoolResult.


        :param created_timestamp: The created_timestamp of this DeletePoolResult.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp
