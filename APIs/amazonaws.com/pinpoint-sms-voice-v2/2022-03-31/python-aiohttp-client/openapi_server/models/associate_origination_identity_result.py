# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssociateOriginationIdentityResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pool_arn: str=None, pool_id: str=None, origination_identity_arn: str=None, origination_identity: str=None, iso_country_code: str=None):
        """AssociateOriginationIdentityResult - a model defined in OpenAPI

        :param pool_arn: The pool_arn of this AssociateOriginationIdentityResult.
        :param pool_id: The pool_id of this AssociateOriginationIdentityResult.
        :param origination_identity_arn: The origination_identity_arn of this AssociateOriginationIdentityResult.
        :param origination_identity: The origination_identity of this AssociateOriginationIdentityResult.
        :param iso_country_code: The iso_country_code of this AssociateOriginationIdentityResult.
        """
        self.openapi_types = {
            'pool_arn': str,
            'pool_id': str,
            'origination_identity_arn': str,
            'origination_identity': str,
            'iso_country_code': str
        }

        self.attribute_map = {
            'pool_arn': 'PoolArn',
            'pool_id': 'PoolId',
            'origination_identity_arn': 'OriginationIdentityArn',
            'origination_identity': 'OriginationIdentity',
            'iso_country_code': 'IsoCountryCode'
        }

        self._pool_arn = pool_arn
        self._pool_id = pool_id
        self._origination_identity_arn = origination_identity_arn
        self._origination_identity = origination_identity
        self._iso_country_code = iso_country_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociateOriginationIdentityResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociateOriginationIdentityResult of this AssociateOriginationIdentityResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pool_arn(self):
        """Gets the pool_arn of this AssociateOriginationIdentityResult.


        :return: The pool_arn of this AssociateOriginationIdentityResult.
        :rtype: str
        """
        return self._pool_arn

    @pool_arn.setter
    def pool_arn(self, pool_arn):
        """Sets the pool_arn of this AssociateOriginationIdentityResult.


        :param pool_arn: The pool_arn of this AssociateOriginationIdentityResult.
        :type pool_arn: str
        """

        self._pool_arn = pool_arn

    @property
    def pool_id(self):
        """Gets the pool_id of this AssociateOriginationIdentityResult.


        :return: The pool_id of this AssociateOriginationIdentityResult.
        :rtype: str
        """
        return self._pool_id

    @pool_id.setter
    def pool_id(self, pool_id):
        """Sets the pool_id of this AssociateOriginationIdentityResult.


        :param pool_id: The pool_id of this AssociateOriginationIdentityResult.
        :type pool_id: str
        """

        self._pool_id = pool_id

    @property
    def origination_identity_arn(self):
        """Gets the origination_identity_arn of this AssociateOriginationIdentityResult.


        :return: The origination_identity_arn of this AssociateOriginationIdentityResult.
        :rtype: str
        """
        return self._origination_identity_arn

    @origination_identity_arn.setter
    def origination_identity_arn(self, origination_identity_arn):
        """Sets the origination_identity_arn of this AssociateOriginationIdentityResult.


        :param origination_identity_arn: The origination_identity_arn of this AssociateOriginationIdentityResult.
        :type origination_identity_arn: str
        """

        self._origination_identity_arn = origination_identity_arn

    @property
    def origination_identity(self):
        """Gets the origination_identity of this AssociateOriginationIdentityResult.


        :return: The origination_identity of this AssociateOriginationIdentityResult.
        :rtype: str
        """
        return self._origination_identity

    @origination_identity.setter
    def origination_identity(self, origination_identity):
        """Sets the origination_identity of this AssociateOriginationIdentityResult.


        :param origination_identity: The origination_identity of this AssociateOriginationIdentityResult.
        :type origination_identity: str
        """

        self._origination_identity = origination_identity

    @property
    def iso_country_code(self):
        """Gets the iso_country_code of this AssociateOriginationIdentityResult.


        :return: The iso_country_code of this AssociateOriginationIdentityResult.
        :rtype: str
        """
        return self._iso_country_code

    @iso_country_code.setter
    def iso_country_code(self, iso_country_code):
        """Sets the iso_country_code of this AssociateOriginationIdentityResult.


        :param iso_country_code: The iso_country_code of this AssociateOriginationIdentityResult.
        :type iso_country_code: str
        """

        self._iso_country_code = iso_country_code
