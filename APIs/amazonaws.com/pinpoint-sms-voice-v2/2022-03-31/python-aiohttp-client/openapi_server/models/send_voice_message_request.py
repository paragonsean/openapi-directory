# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.voice_id import VoiceId
from openapi_server.models.voice_message_body_text_type import VoiceMessageBodyTextType
from openapi_server import util


class SendVoiceMessageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_phone_number: str=None, origination_identity: str=None, message_body: str=None, message_body_text_type: VoiceMessageBodyTextType=None, voice_id: VoiceId=None, configuration_set_name: str=None, max_price_per_minute: str=None, time_to_live: int=None, context: Dict=None, dry_run: bool=None):
        """SendVoiceMessageRequest - a model defined in OpenAPI

        :param destination_phone_number: The destination_phone_number of this SendVoiceMessageRequest.
        :param origination_identity: The origination_identity of this SendVoiceMessageRequest.
        :param message_body: The message_body of this SendVoiceMessageRequest.
        :param message_body_text_type: The message_body_text_type of this SendVoiceMessageRequest.
        :param voice_id: The voice_id of this SendVoiceMessageRequest.
        :param configuration_set_name: The configuration_set_name of this SendVoiceMessageRequest.
        :param max_price_per_minute: The max_price_per_minute of this SendVoiceMessageRequest.
        :param time_to_live: The time_to_live of this SendVoiceMessageRequest.
        :param context: The context of this SendVoiceMessageRequest.
        :param dry_run: The dry_run of this SendVoiceMessageRequest.
        """
        self.openapi_types = {
            'destination_phone_number': str,
            'origination_identity': str,
            'message_body': str,
            'message_body_text_type': VoiceMessageBodyTextType,
            'voice_id': VoiceId,
            'configuration_set_name': str,
            'max_price_per_minute': str,
            'time_to_live': int,
            'context': Dict,
            'dry_run': bool
        }

        self.attribute_map = {
            'destination_phone_number': 'DestinationPhoneNumber',
            'origination_identity': 'OriginationIdentity',
            'message_body': 'MessageBody',
            'message_body_text_type': 'MessageBodyTextType',
            'voice_id': 'VoiceId',
            'configuration_set_name': 'ConfigurationSetName',
            'max_price_per_minute': 'MaxPricePerMinute',
            'time_to_live': 'TimeToLive',
            'context': 'Context',
            'dry_run': 'DryRun'
        }

        self._destination_phone_number = destination_phone_number
        self._origination_identity = origination_identity
        self._message_body = message_body
        self._message_body_text_type = message_body_text_type
        self._voice_id = voice_id
        self._configuration_set_name = configuration_set_name
        self._max_price_per_minute = max_price_per_minute
        self._time_to_live = time_to_live
        self._context = context
        self._dry_run = dry_run

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendVoiceMessageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendVoiceMessageRequest of this SendVoiceMessageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_phone_number(self):
        """Gets the destination_phone_number of this SendVoiceMessageRequest.


        :return: The destination_phone_number of this SendVoiceMessageRequest.
        :rtype: str
        """
        return self._destination_phone_number

    @destination_phone_number.setter
    def destination_phone_number(self, destination_phone_number):
        """Sets the destination_phone_number of this SendVoiceMessageRequest.


        :param destination_phone_number: The destination_phone_number of this SendVoiceMessageRequest.
        :type destination_phone_number: str
        """
        if destination_phone_number is None:
            raise ValueError("Invalid value for `destination_phone_number`, must not be `None`")

        self._destination_phone_number = destination_phone_number

    @property
    def origination_identity(self):
        """Gets the origination_identity of this SendVoiceMessageRequest.


        :return: The origination_identity of this SendVoiceMessageRequest.
        :rtype: str
        """
        return self._origination_identity

    @origination_identity.setter
    def origination_identity(self, origination_identity):
        """Sets the origination_identity of this SendVoiceMessageRequest.


        :param origination_identity: The origination_identity of this SendVoiceMessageRequest.
        :type origination_identity: str
        """
        if origination_identity is None:
            raise ValueError("Invalid value for `origination_identity`, must not be `None`")

        self._origination_identity = origination_identity

    @property
    def message_body(self):
        """Gets the message_body of this SendVoiceMessageRequest.


        :return: The message_body of this SendVoiceMessageRequest.
        :rtype: str
        """
        return self._message_body

    @message_body.setter
    def message_body(self, message_body):
        """Sets the message_body of this SendVoiceMessageRequest.


        :param message_body: The message_body of this SendVoiceMessageRequest.
        :type message_body: str
        """

        self._message_body = message_body

    @property
    def message_body_text_type(self):
        """Gets the message_body_text_type of this SendVoiceMessageRequest.


        :return: The message_body_text_type of this SendVoiceMessageRequest.
        :rtype: VoiceMessageBodyTextType
        """
        return self._message_body_text_type

    @message_body_text_type.setter
    def message_body_text_type(self, message_body_text_type):
        """Sets the message_body_text_type of this SendVoiceMessageRequest.


        :param message_body_text_type: The message_body_text_type of this SendVoiceMessageRequest.
        :type message_body_text_type: VoiceMessageBodyTextType
        """

        self._message_body_text_type = message_body_text_type

    @property
    def voice_id(self):
        """Gets the voice_id of this SendVoiceMessageRequest.


        :return: The voice_id of this SendVoiceMessageRequest.
        :rtype: VoiceId
        """
        return self._voice_id

    @voice_id.setter
    def voice_id(self, voice_id):
        """Sets the voice_id of this SendVoiceMessageRequest.


        :param voice_id: The voice_id of this SendVoiceMessageRequest.
        :type voice_id: VoiceId
        """

        self._voice_id = voice_id

    @property
    def configuration_set_name(self):
        """Gets the configuration_set_name of this SendVoiceMessageRequest.


        :return: The configuration_set_name of this SendVoiceMessageRequest.
        :rtype: str
        """
        return self._configuration_set_name

    @configuration_set_name.setter
    def configuration_set_name(self, configuration_set_name):
        """Sets the configuration_set_name of this SendVoiceMessageRequest.


        :param configuration_set_name: The configuration_set_name of this SendVoiceMessageRequest.
        :type configuration_set_name: str
        """

        self._configuration_set_name = configuration_set_name

    @property
    def max_price_per_minute(self):
        """Gets the max_price_per_minute of this SendVoiceMessageRequest.


        :return: The max_price_per_minute of this SendVoiceMessageRequest.
        :rtype: str
        """
        return self._max_price_per_minute

    @max_price_per_minute.setter
    def max_price_per_minute(self, max_price_per_minute):
        """Sets the max_price_per_minute of this SendVoiceMessageRequest.


        :param max_price_per_minute: The max_price_per_minute of this SendVoiceMessageRequest.
        :type max_price_per_minute: str
        """

        self._max_price_per_minute = max_price_per_minute

    @property
    def time_to_live(self):
        """Gets the time_to_live of this SendVoiceMessageRequest.


        :return: The time_to_live of this SendVoiceMessageRequest.
        :rtype: int
        """
        return self._time_to_live

    @time_to_live.setter
    def time_to_live(self, time_to_live):
        """Sets the time_to_live of this SendVoiceMessageRequest.


        :param time_to_live: The time_to_live of this SendVoiceMessageRequest.
        :type time_to_live: int
        """

        self._time_to_live = time_to_live

    @property
    def context(self):
        """Gets the context of this SendVoiceMessageRequest.


        :return: The context of this SendVoiceMessageRequest.
        :rtype: Dict
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this SendVoiceMessageRequest.


        :param context: The context of this SendVoiceMessageRequest.
        :type context: Dict
        """

        self._context = context

    @property
    def dry_run(self):
        """Gets the dry_run of this SendVoiceMessageRequest.


        :return: The dry_run of this SendVoiceMessageRequest.
        :rtype: bool
        """
        return self._dry_run

    @dry_run.setter
    def dry_run(self, dry_run):
        """Sets the dry_run of this SendVoiceMessageRequest.


        :param dry_run: The dry_run of this SendVoiceMessageRequest.
        :type dry_run: bool
        """

        self._dry_run = dry_run
