# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeKeywordsResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, origination_identity_arn: str=None, origination_identity: str=None, keywords: List=None, next_token: str=None):
        """DescribeKeywordsResult - a model defined in OpenAPI

        :param origination_identity_arn: The origination_identity_arn of this DescribeKeywordsResult.
        :param origination_identity: The origination_identity of this DescribeKeywordsResult.
        :param keywords: The keywords of this DescribeKeywordsResult.
        :param next_token: The next_token of this DescribeKeywordsResult.
        """
        self.openapi_types = {
            'origination_identity_arn': str,
            'origination_identity': str,
            'keywords': List,
            'next_token': str
        }

        self.attribute_map = {
            'origination_identity_arn': 'OriginationIdentityArn',
            'origination_identity': 'OriginationIdentity',
            'keywords': 'Keywords',
            'next_token': 'NextToken'
        }

        self._origination_identity_arn = origination_identity_arn
        self._origination_identity = origination_identity
        self._keywords = keywords
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeKeywordsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeKeywordsResult of this DescribeKeywordsResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def origination_identity_arn(self):
        """Gets the origination_identity_arn of this DescribeKeywordsResult.


        :return: The origination_identity_arn of this DescribeKeywordsResult.
        :rtype: str
        """
        return self._origination_identity_arn

    @origination_identity_arn.setter
    def origination_identity_arn(self, origination_identity_arn):
        """Sets the origination_identity_arn of this DescribeKeywordsResult.


        :param origination_identity_arn: The origination_identity_arn of this DescribeKeywordsResult.
        :type origination_identity_arn: str
        """

        self._origination_identity_arn = origination_identity_arn

    @property
    def origination_identity(self):
        """Gets the origination_identity of this DescribeKeywordsResult.


        :return: The origination_identity of this DescribeKeywordsResult.
        :rtype: str
        """
        return self._origination_identity

    @origination_identity.setter
    def origination_identity(self, origination_identity):
        """Sets the origination_identity of this DescribeKeywordsResult.


        :param origination_identity: The origination_identity of this DescribeKeywordsResult.
        :type origination_identity: str
        """

        self._origination_identity = origination_identity

    @property
    def keywords(self):
        """Gets the keywords of this DescribeKeywordsResult.


        :return: The keywords of this DescribeKeywordsResult.
        :rtype: List
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords):
        """Sets the keywords of this DescribeKeywordsResult.


        :param keywords: The keywords of this DescribeKeywordsResult.
        :type keywords: List
        """

        self._keywords = keywords

    @property
    def next_token(self):
        """Gets the next_token of this DescribeKeywordsResult.


        :return: The next_token of this DescribeKeywordsResult.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeKeywordsResult.


        :param next_token: The next_token of this DescribeKeywordsResult.
        :type next_token: str
        """

        self._next_token = next_token
