# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteOptOutListRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, opt_out_list_name: str=None):
        """DeleteOptOutListRequest - a model defined in OpenAPI

        :param opt_out_list_name: The opt_out_list_name of this DeleteOptOutListRequest.
        """
        self.openapi_types = {
            'opt_out_list_name': str
        }

        self.attribute_map = {
            'opt_out_list_name': 'OptOutListName'
        }

        self._opt_out_list_name = opt_out_list_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteOptOutListRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteOptOutListRequest of this DeleteOptOutListRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def opt_out_list_name(self):
        """Gets the opt_out_list_name of this DeleteOptOutListRequest.


        :return: The opt_out_list_name of this DeleteOptOutListRequest.
        :rtype: str
        """
        return self._opt_out_list_name

    @opt_out_list_name.setter
    def opt_out_list_name(self, opt_out_list_name):
        """Sets the opt_out_list_name of this DeleteOptOutListRequest.


        :param opt_out_list_name: The opt_out_list_name of this DeleteOptOutListRequest.
        :type opt_out_list_name: str
        """
        if opt_out_list_name is None:
            raise ValueError("Invalid value for `opt_out_list_name`, must not be `None`")

        self._opt_out_list_name = opt_out_list_name
