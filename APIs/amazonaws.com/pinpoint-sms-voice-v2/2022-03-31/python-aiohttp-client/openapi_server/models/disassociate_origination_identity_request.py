# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DisassociateOriginationIdentityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pool_id: str=None, origination_identity: str=None, iso_country_code: str=None, client_token: str=None):
        """DisassociateOriginationIdentityRequest - a model defined in OpenAPI

        :param pool_id: The pool_id of this DisassociateOriginationIdentityRequest.
        :param origination_identity: The origination_identity of this DisassociateOriginationIdentityRequest.
        :param iso_country_code: The iso_country_code of this DisassociateOriginationIdentityRequest.
        :param client_token: The client_token of this DisassociateOriginationIdentityRequest.
        """
        self.openapi_types = {
            'pool_id': str,
            'origination_identity': str,
            'iso_country_code': str,
            'client_token': str
        }

        self.attribute_map = {
            'pool_id': 'PoolId',
            'origination_identity': 'OriginationIdentity',
            'iso_country_code': 'IsoCountryCode',
            'client_token': 'ClientToken'
        }

        self._pool_id = pool_id
        self._origination_identity = origination_identity
        self._iso_country_code = iso_country_code
        self._client_token = client_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisassociateOriginationIdentityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisassociateOriginationIdentityRequest of this DisassociateOriginationIdentityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pool_id(self):
        """Gets the pool_id of this DisassociateOriginationIdentityRequest.


        :return: The pool_id of this DisassociateOriginationIdentityRequest.
        :rtype: str
        """
        return self._pool_id

    @pool_id.setter
    def pool_id(self, pool_id):
        """Sets the pool_id of this DisassociateOriginationIdentityRequest.


        :param pool_id: The pool_id of this DisassociateOriginationIdentityRequest.
        :type pool_id: str
        """
        if pool_id is None:
            raise ValueError("Invalid value for `pool_id`, must not be `None`")

        self._pool_id = pool_id

    @property
    def origination_identity(self):
        """Gets the origination_identity of this DisassociateOriginationIdentityRequest.


        :return: The origination_identity of this DisassociateOriginationIdentityRequest.
        :rtype: str
        """
        return self._origination_identity

    @origination_identity.setter
    def origination_identity(self, origination_identity):
        """Sets the origination_identity of this DisassociateOriginationIdentityRequest.


        :param origination_identity: The origination_identity of this DisassociateOriginationIdentityRequest.
        :type origination_identity: str
        """
        if origination_identity is None:
            raise ValueError("Invalid value for `origination_identity`, must not be `None`")

        self._origination_identity = origination_identity

    @property
    def iso_country_code(self):
        """Gets the iso_country_code of this DisassociateOriginationIdentityRequest.


        :return: The iso_country_code of this DisassociateOriginationIdentityRequest.
        :rtype: str
        """
        return self._iso_country_code

    @iso_country_code.setter
    def iso_country_code(self, iso_country_code):
        """Sets the iso_country_code of this DisassociateOriginationIdentityRequest.


        :param iso_country_code: The iso_country_code of this DisassociateOriginationIdentityRequest.
        :type iso_country_code: str
        """
        if iso_country_code is None:
            raise ValueError("Invalid value for `iso_country_code`, must not be `None`")

        self._iso_country_code = iso_country_code

    @property
    def client_token(self):
        """Gets the client_token of this DisassociateOriginationIdentityRequest.


        :return: The client_token of this DisassociateOriginationIdentityRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this DisassociateOriginationIdentityRequest.


        :param client_token: The client_token of this DisassociateOriginationIdentityRequest.
        :type client_token: str
        """

        self._client_token = client_token
