# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListPoolOriginationIdentitiesResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pool_arn: str=None, pool_id: str=None, origination_identities: List=None, next_token: str=None):
        """ListPoolOriginationIdentitiesResult - a model defined in OpenAPI

        :param pool_arn: The pool_arn of this ListPoolOriginationIdentitiesResult.
        :param pool_id: The pool_id of this ListPoolOriginationIdentitiesResult.
        :param origination_identities: The origination_identities of this ListPoolOriginationIdentitiesResult.
        :param next_token: The next_token of this ListPoolOriginationIdentitiesResult.
        """
        self.openapi_types = {
            'pool_arn': str,
            'pool_id': str,
            'origination_identities': List,
            'next_token': str
        }

        self.attribute_map = {
            'pool_arn': 'PoolArn',
            'pool_id': 'PoolId',
            'origination_identities': 'OriginationIdentities',
            'next_token': 'NextToken'
        }

        self._pool_arn = pool_arn
        self._pool_id = pool_id
        self._origination_identities = origination_identities
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListPoolOriginationIdentitiesResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListPoolOriginationIdentitiesResult of this ListPoolOriginationIdentitiesResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pool_arn(self):
        """Gets the pool_arn of this ListPoolOriginationIdentitiesResult.


        :return: The pool_arn of this ListPoolOriginationIdentitiesResult.
        :rtype: str
        """
        return self._pool_arn

    @pool_arn.setter
    def pool_arn(self, pool_arn):
        """Sets the pool_arn of this ListPoolOriginationIdentitiesResult.


        :param pool_arn: The pool_arn of this ListPoolOriginationIdentitiesResult.
        :type pool_arn: str
        """

        self._pool_arn = pool_arn

    @property
    def pool_id(self):
        """Gets the pool_id of this ListPoolOriginationIdentitiesResult.


        :return: The pool_id of this ListPoolOriginationIdentitiesResult.
        :rtype: str
        """
        return self._pool_id

    @pool_id.setter
    def pool_id(self, pool_id):
        """Sets the pool_id of this ListPoolOriginationIdentitiesResult.


        :param pool_id: The pool_id of this ListPoolOriginationIdentitiesResult.
        :type pool_id: str
        """

        self._pool_id = pool_id

    @property
    def origination_identities(self):
        """Gets the origination_identities of this ListPoolOriginationIdentitiesResult.


        :return: The origination_identities of this ListPoolOriginationIdentitiesResult.
        :rtype: List
        """
        return self._origination_identities

    @origination_identities.setter
    def origination_identities(self, origination_identities):
        """Sets the origination_identities of this ListPoolOriginationIdentitiesResult.


        :param origination_identities: The origination_identities of this ListPoolOriginationIdentitiesResult.
        :type origination_identities: List
        """

        self._origination_identities = origination_identities

    @property
    def next_token(self):
        """Gets the next_token of this ListPoolOriginationIdentitiesResult.


        :return: The next_token of this ListPoolOriginationIdentitiesResult.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListPoolOriginationIdentitiesResult.


        :param next_token: The next_token of this ListPoolOriginationIdentitiesResult.
        :type next_token: str
        """

        self._next_token = next_token
