# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateEventDestinationRequestCloudWatchLogsDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iam_role_arn: str=None, log_group_arn: str=None):
        """UpdateEventDestinationRequestCloudWatchLogsDestination - a model defined in OpenAPI

        :param iam_role_arn: The iam_role_arn of this UpdateEventDestinationRequestCloudWatchLogsDestination.
        :param log_group_arn: The log_group_arn of this UpdateEventDestinationRequestCloudWatchLogsDestination.
        """
        self.openapi_types = {
            'iam_role_arn': str,
            'log_group_arn': str
        }

        self.attribute_map = {
            'iam_role_arn': 'IamRoleArn',
            'log_group_arn': 'LogGroupArn'
        }

        self._iam_role_arn = iam_role_arn
        self._log_group_arn = log_group_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEventDestinationRequestCloudWatchLogsDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEventDestinationRequest_CloudWatchLogsDestination of this UpdateEventDestinationRequestCloudWatchLogsDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iam_role_arn(self):
        """Gets the iam_role_arn of this UpdateEventDestinationRequestCloudWatchLogsDestination.


        :return: The iam_role_arn of this UpdateEventDestinationRequestCloudWatchLogsDestination.
        :rtype: str
        """
        return self._iam_role_arn

    @iam_role_arn.setter
    def iam_role_arn(self, iam_role_arn):
        """Sets the iam_role_arn of this UpdateEventDestinationRequestCloudWatchLogsDestination.


        :param iam_role_arn: The iam_role_arn of this UpdateEventDestinationRequestCloudWatchLogsDestination.
        :type iam_role_arn: str
        """
        if iam_role_arn is None:
            raise ValueError("Invalid value for `iam_role_arn`, must not be `None`")

        self._iam_role_arn = iam_role_arn

    @property
    def log_group_arn(self):
        """Gets the log_group_arn of this UpdateEventDestinationRequestCloudWatchLogsDestination.


        :return: The log_group_arn of this UpdateEventDestinationRequestCloudWatchLogsDestination.
        :rtype: str
        """
        return self._log_group_arn

    @log_group_arn.setter
    def log_group_arn(self, log_group_arn):
        """Sets the log_group_arn of this UpdateEventDestinationRequestCloudWatchLogsDestination.


        :param log_group_arn: The log_group_arn of this UpdateEventDestinationRequestCloudWatchLogsDestination.
        :type log_group_arn: str
        """
        if log_group_arn is None:
            raise ValueError("Invalid value for `log_group_arn`, must not be `None`")

        self._log_group_arn = log_group_arn
