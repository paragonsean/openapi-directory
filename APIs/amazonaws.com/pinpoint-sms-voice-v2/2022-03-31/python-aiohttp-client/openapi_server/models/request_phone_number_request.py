# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_type import MessageType
from openapi_server.models.requestable_number_type import RequestableNumberType
from openapi_server import util


class RequestPhoneNumberRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iso_country_code: str=None, message_type: MessageType=None, number_capabilities: List=None, number_type: RequestableNumberType=None, opt_out_list_name: str=None, pool_id: str=None, registration_id: str=None, deletion_protection_enabled: bool=None, tags: List=None, client_token: str=None):
        """RequestPhoneNumberRequest - a model defined in OpenAPI

        :param iso_country_code: The iso_country_code of this RequestPhoneNumberRequest.
        :param message_type: The message_type of this RequestPhoneNumberRequest.
        :param number_capabilities: The number_capabilities of this RequestPhoneNumberRequest.
        :param number_type: The number_type of this RequestPhoneNumberRequest.
        :param opt_out_list_name: The opt_out_list_name of this RequestPhoneNumberRequest.
        :param pool_id: The pool_id of this RequestPhoneNumberRequest.
        :param registration_id: The registration_id of this RequestPhoneNumberRequest.
        :param deletion_protection_enabled: The deletion_protection_enabled of this RequestPhoneNumberRequest.
        :param tags: The tags of this RequestPhoneNumberRequest.
        :param client_token: The client_token of this RequestPhoneNumberRequest.
        """
        self.openapi_types = {
            'iso_country_code': str,
            'message_type': MessageType,
            'number_capabilities': List,
            'number_type': RequestableNumberType,
            'opt_out_list_name': str,
            'pool_id': str,
            'registration_id': str,
            'deletion_protection_enabled': bool,
            'tags': List,
            'client_token': str
        }

        self.attribute_map = {
            'iso_country_code': 'IsoCountryCode',
            'message_type': 'MessageType',
            'number_capabilities': 'NumberCapabilities',
            'number_type': 'NumberType',
            'opt_out_list_name': 'OptOutListName',
            'pool_id': 'PoolId',
            'registration_id': 'RegistrationId',
            'deletion_protection_enabled': 'DeletionProtectionEnabled',
            'tags': 'Tags',
            'client_token': 'ClientToken'
        }

        self._iso_country_code = iso_country_code
        self._message_type = message_type
        self._number_capabilities = number_capabilities
        self._number_type = number_type
        self._opt_out_list_name = opt_out_list_name
        self._pool_id = pool_id
        self._registration_id = registration_id
        self._deletion_protection_enabled = deletion_protection_enabled
        self._tags = tags
        self._client_token = client_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RequestPhoneNumberRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RequestPhoneNumberRequest of this RequestPhoneNumberRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iso_country_code(self):
        """Gets the iso_country_code of this RequestPhoneNumberRequest.


        :return: The iso_country_code of this RequestPhoneNumberRequest.
        :rtype: str
        """
        return self._iso_country_code

    @iso_country_code.setter
    def iso_country_code(self, iso_country_code):
        """Sets the iso_country_code of this RequestPhoneNumberRequest.


        :param iso_country_code: The iso_country_code of this RequestPhoneNumberRequest.
        :type iso_country_code: str
        """
        if iso_country_code is None:
            raise ValueError("Invalid value for `iso_country_code`, must not be `None`")

        self._iso_country_code = iso_country_code

    @property
    def message_type(self):
        """Gets the message_type of this RequestPhoneNumberRequest.


        :return: The message_type of this RequestPhoneNumberRequest.
        :rtype: MessageType
        """
        return self._message_type

    @message_type.setter
    def message_type(self, message_type):
        """Sets the message_type of this RequestPhoneNumberRequest.


        :param message_type: The message_type of this RequestPhoneNumberRequest.
        :type message_type: MessageType
        """
        if message_type is None:
            raise ValueError("Invalid value for `message_type`, must not be `None`")

        self._message_type = message_type

    @property
    def number_capabilities(self):
        """Gets the number_capabilities of this RequestPhoneNumberRequest.


        :return: The number_capabilities of this RequestPhoneNumberRequest.
        :rtype: List
        """
        return self._number_capabilities

    @number_capabilities.setter
    def number_capabilities(self, number_capabilities):
        """Sets the number_capabilities of this RequestPhoneNumberRequest.


        :param number_capabilities: The number_capabilities of this RequestPhoneNumberRequest.
        :type number_capabilities: List
        """
        if number_capabilities is None:
            raise ValueError("Invalid value for `number_capabilities`, must not be `None`")

        self._number_capabilities = number_capabilities

    @property
    def number_type(self):
        """Gets the number_type of this RequestPhoneNumberRequest.


        :return: The number_type of this RequestPhoneNumberRequest.
        :rtype: RequestableNumberType
        """
        return self._number_type

    @number_type.setter
    def number_type(self, number_type):
        """Sets the number_type of this RequestPhoneNumberRequest.


        :param number_type: The number_type of this RequestPhoneNumberRequest.
        :type number_type: RequestableNumberType
        """
        if number_type is None:
            raise ValueError("Invalid value for `number_type`, must not be `None`")

        self._number_type = number_type

    @property
    def opt_out_list_name(self):
        """Gets the opt_out_list_name of this RequestPhoneNumberRequest.


        :return: The opt_out_list_name of this RequestPhoneNumberRequest.
        :rtype: str
        """
        return self._opt_out_list_name

    @opt_out_list_name.setter
    def opt_out_list_name(self, opt_out_list_name):
        """Sets the opt_out_list_name of this RequestPhoneNumberRequest.


        :param opt_out_list_name: The opt_out_list_name of this RequestPhoneNumberRequest.
        :type opt_out_list_name: str
        """

        self._opt_out_list_name = opt_out_list_name

    @property
    def pool_id(self):
        """Gets the pool_id of this RequestPhoneNumberRequest.


        :return: The pool_id of this RequestPhoneNumberRequest.
        :rtype: str
        """
        return self._pool_id

    @pool_id.setter
    def pool_id(self, pool_id):
        """Sets the pool_id of this RequestPhoneNumberRequest.


        :param pool_id: The pool_id of this RequestPhoneNumberRequest.
        :type pool_id: str
        """

        self._pool_id = pool_id

    @property
    def registration_id(self):
        """Gets the registration_id of this RequestPhoneNumberRequest.


        :return: The registration_id of this RequestPhoneNumberRequest.
        :rtype: str
        """
        return self._registration_id

    @registration_id.setter
    def registration_id(self, registration_id):
        """Sets the registration_id of this RequestPhoneNumberRequest.


        :param registration_id: The registration_id of this RequestPhoneNumberRequest.
        :type registration_id: str
        """

        self._registration_id = registration_id

    @property
    def deletion_protection_enabled(self):
        """Gets the deletion_protection_enabled of this RequestPhoneNumberRequest.


        :return: The deletion_protection_enabled of this RequestPhoneNumberRequest.
        :rtype: bool
        """
        return self._deletion_protection_enabled

    @deletion_protection_enabled.setter
    def deletion_protection_enabled(self, deletion_protection_enabled):
        """Sets the deletion_protection_enabled of this RequestPhoneNumberRequest.


        :param deletion_protection_enabled: The deletion_protection_enabled of this RequestPhoneNumberRequest.
        :type deletion_protection_enabled: bool
        """

        self._deletion_protection_enabled = deletion_protection_enabled

    @property
    def tags(self):
        """Gets the tags of this RequestPhoneNumberRequest.


        :return: The tags of this RequestPhoneNumberRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this RequestPhoneNumberRequest.


        :param tags: The tags of this RequestPhoneNumberRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def client_token(self):
        """Gets the client_token of this RequestPhoneNumberRequest.


        :return: The client_token of this RequestPhoneNumberRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this RequestPhoneNumberRequest.


        :param client_token: The client_token of this RequestPhoneNumberRequest.
        :type client_token: str
        """

        self._client_token = client_token
