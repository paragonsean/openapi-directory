# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.keyword_action import KeywordAction
from openapi_server import util


class PutKeywordRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, origination_identity: str=None, keyword: str=None, keyword_message: str=None, keyword_action: KeywordAction=None):
        """PutKeywordRequest - a model defined in OpenAPI

        :param origination_identity: The origination_identity of this PutKeywordRequest.
        :param keyword: The keyword of this PutKeywordRequest.
        :param keyword_message: The keyword_message of this PutKeywordRequest.
        :param keyword_action: The keyword_action of this PutKeywordRequest.
        """
        self.openapi_types = {
            'origination_identity': str,
            'keyword': str,
            'keyword_message': str,
            'keyword_action': KeywordAction
        }

        self.attribute_map = {
            'origination_identity': 'OriginationIdentity',
            'keyword': 'Keyword',
            'keyword_message': 'KeywordMessage',
            'keyword_action': 'KeywordAction'
        }

        self._origination_identity = origination_identity
        self._keyword = keyword
        self._keyword_message = keyword_message
        self._keyword_action = keyword_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutKeywordRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutKeywordRequest of this PutKeywordRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def origination_identity(self):
        """Gets the origination_identity of this PutKeywordRequest.


        :return: The origination_identity of this PutKeywordRequest.
        :rtype: str
        """
        return self._origination_identity

    @origination_identity.setter
    def origination_identity(self, origination_identity):
        """Sets the origination_identity of this PutKeywordRequest.


        :param origination_identity: The origination_identity of this PutKeywordRequest.
        :type origination_identity: str
        """
        if origination_identity is None:
            raise ValueError("Invalid value for `origination_identity`, must not be `None`")

        self._origination_identity = origination_identity

    @property
    def keyword(self):
        """Gets the keyword of this PutKeywordRequest.


        :return: The keyword of this PutKeywordRequest.
        :rtype: str
        """
        return self._keyword

    @keyword.setter
    def keyword(self, keyword):
        """Sets the keyword of this PutKeywordRequest.


        :param keyword: The keyword of this PutKeywordRequest.
        :type keyword: str
        """
        if keyword is None:
            raise ValueError("Invalid value for `keyword`, must not be `None`")

        self._keyword = keyword

    @property
    def keyword_message(self):
        """Gets the keyword_message of this PutKeywordRequest.


        :return: The keyword_message of this PutKeywordRequest.
        :rtype: str
        """
        return self._keyword_message

    @keyword_message.setter
    def keyword_message(self, keyword_message):
        """Sets the keyword_message of this PutKeywordRequest.


        :param keyword_message: The keyword_message of this PutKeywordRequest.
        :type keyword_message: str
        """
        if keyword_message is None:
            raise ValueError("Invalid value for `keyword_message`, must not be `None`")

        self._keyword_message = keyword_message

    @property
    def keyword_action(self):
        """Gets the keyword_action of this PutKeywordRequest.


        :return: The keyword_action of this PutKeywordRequest.
        :rtype: KeywordAction
        """
        return self._keyword_action

    @keyword_action.setter
    def keyword_action(self, keyword_action):
        """Sets the keyword_action of this PutKeywordRequest.


        :param keyword_action: The keyword_action of this PutKeywordRequest.
        :type keyword_action: KeywordAction
        """

        self._keyword_action = keyword_action
