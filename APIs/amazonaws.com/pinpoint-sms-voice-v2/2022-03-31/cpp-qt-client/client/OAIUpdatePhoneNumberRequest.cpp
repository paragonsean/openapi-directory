/**
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdatePhoneNumberRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdatePhoneNumberRequest::OAIUpdatePhoneNumberRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdatePhoneNumberRequest::OAIUpdatePhoneNumberRequest() {
    this->initializeModel();
}

OAIUpdatePhoneNumberRequest::~OAIUpdatePhoneNumberRequest() {}

void OAIUpdatePhoneNumberRequest::initializeModel() {

    m_phone_number_id_isSet = false;
    m_phone_number_id_isValid = false;

    m_two_way_enabled_isSet = false;
    m_two_way_enabled_isValid = false;

    m_two_way_channel_arn_isSet = false;
    m_two_way_channel_arn_isValid = false;

    m_self_managed_opt_outs_enabled_isSet = false;
    m_self_managed_opt_outs_enabled_isValid = false;

    m_opt_out_list_name_isSet = false;
    m_opt_out_list_name_isValid = false;

    m_deletion_protection_enabled_isSet = false;
    m_deletion_protection_enabled_isValid = false;
}

void OAIUpdatePhoneNumberRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdatePhoneNumberRequest::fromJsonObject(QJsonObject json) {

    m_phone_number_id_isValid = ::OpenAPI::fromJsonValue(m_phone_number_id, json[QString("PhoneNumberId")]);
    m_phone_number_id_isSet = !json[QString("PhoneNumberId")].isNull() && m_phone_number_id_isValid;

    m_two_way_enabled_isValid = ::OpenAPI::fromJsonValue(m_two_way_enabled, json[QString("TwoWayEnabled")]);
    m_two_way_enabled_isSet = !json[QString("TwoWayEnabled")].isNull() && m_two_way_enabled_isValid;

    m_two_way_channel_arn_isValid = ::OpenAPI::fromJsonValue(m_two_way_channel_arn, json[QString("TwoWayChannelArn")]);
    m_two_way_channel_arn_isSet = !json[QString("TwoWayChannelArn")].isNull() && m_two_way_channel_arn_isValid;

    m_self_managed_opt_outs_enabled_isValid = ::OpenAPI::fromJsonValue(m_self_managed_opt_outs_enabled, json[QString("SelfManagedOptOutsEnabled")]);
    m_self_managed_opt_outs_enabled_isSet = !json[QString("SelfManagedOptOutsEnabled")].isNull() && m_self_managed_opt_outs_enabled_isValid;

    m_opt_out_list_name_isValid = ::OpenAPI::fromJsonValue(m_opt_out_list_name, json[QString("OptOutListName")]);
    m_opt_out_list_name_isSet = !json[QString("OptOutListName")].isNull() && m_opt_out_list_name_isValid;

    m_deletion_protection_enabled_isValid = ::OpenAPI::fromJsonValue(m_deletion_protection_enabled, json[QString("DeletionProtectionEnabled")]);
    m_deletion_protection_enabled_isSet = !json[QString("DeletionProtectionEnabled")].isNull() && m_deletion_protection_enabled_isValid;
}

QString OAIUpdatePhoneNumberRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdatePhoneNumberRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_phone_number_id_isSet) {
        obj.insert(QString("PhoneNumberId"), ::OpenAPI::toJsonValue(m_phone_number_id));
    }
    if (m_two_way_enabled_isSet) {
        obj.insert(QString("TwoWayEnabled"), ::OpenAPI::toJsonValue(m_two_way_enabled));
    }
    if (m_two_way_channel_arn_isSet) {
        obj.insert(QString("TwoWayChannelArn"), ::OpenAPI::toJsonValue(m_two_way_channel_arn));
    }
    if (m_self_managed_opt_outs_enabled_isSet) {
        obj.insert(QString("SelfManagedOptOutsEnabled"), ::OpenAPI::toJsonValue(m_self_managed_opt_outs_enabled));
    }
    if (m_opt_out_list_name_isSet) {
        obj.insert(QString("OptOutListName"), ::OpenAPI::toJsonValue(m_opt_out_list_name));
    }
    if (m_deletion_protection_enabled_isSet) {
        obj.insert(QString("DeletionProtectionEnabled"), ::OpenAPI::toJsonValue(m_deletion_protection_enabled));
    }
    return obj;
}

QString OAIUpdatePhoneNumberRequest::getPhoneNumberId() const {
    return m_phone_number_id;
}
void OAIUpdatePhoneNumberRequest::setPhoneNumberId(const QString &phone_number_id) {
    m_phone_number_id = phone_number_id;
    m_phone_number_id_isSet = true;
}

bool OAIUpdatePhoneNumberRequest::is_phone_number_id_Set() const{
    return m_phone_number_id_isSet;
}

bool OAIUpdatePhoneNumberRequest::is_phone_number_id_Valid() const{
    return m_phone_number_id_isValid;
}

bool OAIUpdatePhoneNumberRequest::getTwoWayEnabled() const {
    return m_two_way_enabled;
}
void OAIUpdatePhoneNumberRequest::setTwoWayEnabled(const bool &two_way_enabled) {
    m_two_way_enabled = two_way_enabled;
    m_two_way_enabled_isSet = true;
}

bool OAIUpdatePhoneNumberRequest::is_two_way_enabled_Set() const{
    return m_two_way_enabled_isSet;
}

bool OAIUpdatePhoneNumberRequest::is_two_way_enabled_Valid() const{
    return m_two_way_enabled_isValid;
}

QString OAIUpdatePhoneNumberRequest::getTwoWayChannelArn() const {
    return m_two_way_channel_arn;
}
void OAIUpdatePhoneNumberRequest::setTwoWayChannelArn(const QString &two_way_channel_arn) {
    m_two_way_channel_arn = two_way_channel_arn;
    m_two_way_channel_arn_isSet = true;
}

bool OAIUpdatePhoneNumberRequest::is_two_way_channel_arn_Set() const{
    return m_two_way_channel_arn_isSet;
}

bool OAIUpdatePhoneNumberRequest::is_two_way_channel_arn_Valid() const{
    return m_two_way_channel_arn_isValid;
}

bool OAIUpdatePhoneNumberRequest::getSelfManagedOptOutsEnabled() const {
    return m_self_managed_opt_outs_enabled;
}
void OAIUpdatePhoneNumberRequest::setSelfManagedOptOutsEnabled(const bool &self_managed_opt_outs_enabled) {
    m_self_managed_opt_outs_enabled = self_managed_opt_outs_enabled;
    m_self_managed_opt_outs_enabled_isSet = true;
}

bool OAIUpdatePhoneNumberRequest::is_self_managed_opt_outs_enabled_Set() const{
    return m_self_managed_opt_outs_enabled_isSet;
}

bool OAIUpdatePhoneNumberRequest::is_self_managed_opt_outs_enabled_Valid() const{
    return m_self_managed_opt_outs_enabled_isValid;
}

QString OAIUpdatePhoneNumberRequest::getOptOutListName() const {
    return m_opt_out_list_name;
}
void OAIUpdatePhoneNumberRequest::setOptOutListName(const QString &opt_out_list_name) {
    m_opt_out_list_name = opt_out_list_name;
    m_opt_out_list_name_isSet = true;
}

bool OAIUpdatePhoneNumberRequest::is_opt_out_list_name_Set() const{
    return m_opt_out_list_name_isSet;
}

bool OAIUpdatePhoneNumberRequest::is_opt_out_list_name_Valid() const{
    return m_opt_out_list_name_isValid;
}

bool OAIUpdatePhoneNumberRequest::getDeletionProtectionEnabled() const {
    return m_deletion_protection_enabled;
}
void OAIUpdatePhoneNumberRequest::setDeletionProtectionEnabled(const bool &deletion_protection_enabled) {
    m_deletion_protection_enabled = deletion_protection_enabled;
    m_deletion_protection_enabled_isSet = true;
}

bool OAIUpdatePhoneNumberRequest::is_deletion_protection_enabled_Set() const{
    return m_deletion_protection_enabled_isSet;
}

bool OAIUpdatePhoneNumberRequest::is_deletion_protection_enabled_Valid() const{
    return m_deletion_protection_enabled_isValid;
}

bool OAIUpdatePhoneNumberRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_phone_number_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_two_way_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_two_way_channel_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_managed_opt_outs_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_opt_out_list_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deletion_protection_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdatePhoneNumberRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_phone_number_id_isValid && true;
}

} // namespace OpenAPI
