/**
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutKeywordResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutKeywordResult::OAIPutKeywordResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutKeywordResult::OAIPutKeywordResult() {
    this->initializeModel();
}

OAIPutKeywordResult::~OAIPutKeywordResult() {}

void OAIPutKeywordResult::initializeModel() {

    m_origination_identity_arn_isSet = false;
    m_origination_identity_arn_isValid = false;

    m_origination_identity_isSet = false;
    m_origination_identity_isValid = false;

    m_keyword_isSet = false;
    m_keyword_isValid = false;

    m_keyword_message_isSet = false;
    m_keyword_message_isValid = false;

    m_keyword_action_isSet = false;
    m_keyword_action_isValid = false;
}

void OAIPutKeywordResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutKeywordResult::fromJsonObject(QJsonObject json) {

    m_origination_identity_arn_isValid = ::OpenAPI::fromJsonValue(m_origination_identity_arn, json[QString("OriginationIdentityArn")]);
    m_origination_identity_arn_isSet = !json[QString("OriginationIdentityArn")].isNull() && m_origination_identity_arn_isValid;

    m_origination_identity_isValid = ::OpenAPI::fromJsonValue(m_origination_identity, json[QString("OriginationIdentity")]);
    m_origination_identity_isSet = !json[QString("OriginationIdentity")].isNull() && m_origination_identity_isValid;

    m_keyword_isValid = ::OpenAPI::fromJsonValue(m_keyword, json[QString("Keyword")]);
    m_keyword_isSet = !json[QString("Keyword")].isNull() && m_keyword_isValid;

    m_keyword_message_isValid = ::OpenAPI::fromJsonValue(m_keyword_message, json[QString("KeywordMessage")]);
    m_keyword_message_isSet = !json[QString("KeywordMessage")].isNull() && m_keyword_message_isValid;

    m_keyword_action_isValid = ::OpenAPI::fromJsonValue(m_keyword_action, json[QString("KeywordAction")]);
    m_keyword_action_isSet = !json[QString("KeywordAction")].isNull() && m_keyword_action_isValid;
}

QString OAIPutKeywordResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutKeywordResult::asJsonObject() const {
    QJsonObject obj;
    if (m_origination_identity_arn_isSet) {
        obj.insert(QString("OriginationIdentityArn"), ::OpenAPI::toJsonValue(m_origination_identity_arn));
    }
    if (m_origination_identity_isSet) {
        obj.insert(QString("OriginationIdentity"), ::OpenAPI::toJsonValue(m_origination_identity));
    }
    if (m_keyword_isSet) {
        obj.insert(QString("Keyword"), ::OpenAPI::toJsonValue(m_keyword));
    }
    if (m_keyword_message_isSet) {
        obj.insert(QString("KeywordMessage"), ::OpenAPI::toJsonValue(m_keyword_message));
    }
    if (m_keyword_action.isSet()) {
        obj.insert(QString("KeywordAction"), ::OpenAPI::toJsonValue(m_keyword_action));
    }
    return obj;
}

QString OAIPutKeywordResult::getOriginationIdentityArn() const {
    return m_origination_identity_arn;
}
void OAIPutKeywordResult::setOriginationIdentityArn(const QString &origination_identity_arn) {
    m_origination_identity_arn = origination_identity_arn;
    m_origination_identity_arn_isSet = true;
}

bool OAIPutKeywordResult::is_origination_identity_arn_Set() const{
    return m_origination_identity_arn_isSet;
}

bool OAIPutKeywordResult::is_origination_identity_arn_Valid() const{
    return m_origination_identity_arn_isValid;
}

QString OAIPutKeywordResult::getOriginationIdentity() const {
    return m_origination_identity;
}
void OAIPutKeywordResult::setOriginationIdentity(const QString &origination_identity) {
    m_origination_identity = origination_identity;
    m_origination_identity_isSet = true;
}

bool OAIPutKeywordResult::is_origination_identity_Set() const{
    return m_origination_identity_isSet;
}

bool OAIPutKeywordResult::is_origination_identity_Valid() const{
    return m_origination_identity_isValid;
}

QString OAIPutKeywordResult::getKeyword() const {
    return m_keyword;
}
void OAIPutKeywordResult::setKeyword(const QString &keyword) {
    m_keyword = keyword;
    m_keyword_isSet = true;
}

bool OAIPutKeywordResult::is_keyword_Set() const{
    return m_keyword_isSet;
}

bool OAIPutKeywordResult::is_keyword_Valid() const{
    return m_keyword_isValid;
}

QString OAIPutKeywordResult::getKeywordMessage() const {
    return m_keyword_message;
}
void OAIPutKeywordResult::setKeywordMessage(const QString &keyword_message) {
    m_keyword_message = keyword_message;
    m_keyword_message_isSet = true;
}

bool OAIPutKeywordResult::is_keyword_message_Set() const{
    return m_keyword_message_isSet;
}

bool OAIPutKeywordResult::is_keyword_message_Valid() const{
    return m_keyword_message_isValid;
}

OAIKeywordAction OAIPutKeywordResult::getKeywordAction() const {
    return m_keyword_action;
}
void OAIPutKeywordResult::setKeywordAction(const OAIKeywordAction &keyword_action) {
    m_keyword_action = keyword_action;
    m_keyword_action_isSet = true;
}

bool OAIPutKeywordResult::is_keyword_action_Set() const{
    return m_keyword_action_isSet;
}

bool OAIPutKeywordResult::is_keyword_action_Valid() const{
    return m_keyword_action_isValid;
}

bool OAIPutKeywordResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_origination_identity_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origination_identity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_keyword_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_keyword_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_keyword_action.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutKeywordResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
