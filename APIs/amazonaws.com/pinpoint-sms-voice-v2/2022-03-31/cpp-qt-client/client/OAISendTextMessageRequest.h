/**
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISendTextMessageRequest.h
 *
 * 
 */

#ifndef OAISendTextMessageRequest_H
#define OAISendTextMessageRequest_H

#include <QJsonObject>

#include "OAIMessageType.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISendTextMessageRequest : public OAIObject {
public:
    OAISendTextMessageRequest();
    OAISendTextMessageRequest(QString json);
    ~OAISendTextMessageRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDestinationPhoneNumber() const;
    void setDestinationPhoneNumber(const QString &destination_phone_number);
    bool is_destination_phone_number_Set() const;
    bool is_destination_phone_number_Valid() const;

    QString getOriginationIdentity() const;
    void setOriginationIdentity(const QString &origination_identity);
    bool is_origination_identity_Set() const;
    bool is_origination_identity_Valid() const;

    QString getMessageBody() const;
    void setMessageBody(const QString &message_body);
    bool is_message_body_Set() const;
    bool is_message_body_Valid() const;

    OAIMessageType getMessageType() const;
    void setMessageType(const OAIMessageType &message_type);
    bool is_message_type_Set() const;
    bool is_message_type_Valid() const;

    QString getKeyword() const;
    void setKeyword(const QString &keyword);
    bool is_keyword_Set() const;
    bool is_keyword_Valid() const;

    QString getConfigurationSetName() const;
    void setConfigurationSetName(const QString &configuration_set_name);
    bool is_configuration_set_name_Set() const;
    bool is_configuration_set_name_Valid() const;

    QString getMaxPrice() const;
    void setMaxPrice(const QString &max_price);
    bool is_max_price_Set() const;
    bool is_max_price_Valid() const;

    qint32 getTimeToLive() const;
    void setTimeToLive(const qint32 &time_to_live);
    bool is_time_to_live_Set() const;
    bool is_time_to_live_Valid() const;

    QMap getContext() const;
    void setContext(const QMap &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    QMap getDestinationCountryParameters() const;
    void setDestinationCountryParameters(const QMap &destination_country_parameters);
    bool is_destination_country_parameters_Set() const;
    bool is_destination_country_parameters_Valid() const;

    bool getDryRun() const;
    void setDryRun(const bool &dry_run);
    bool is_dry_run_Set() const;
    bool is_dry_run_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_destination_phone_number;
    bool m_destination_phone_number_isSet;
    bool m_destination_phone_number_isValid;

    QString m_origination_identity;
    bool m_origination_identity_isSet;
    bool m_origination_identity_isValid;

    QString m_message_body;
    bool m_message_body_isSet;
    bool m_message_body_isValid;

    OAIMessageType m_message_type;
    bool m_message_type_isSet;
    bool m_message_type_isValid;

    QString m_keyword;
    bool m_keyword_isSet;
    bool m_keyword_isValid;

    QString m_configuration_set_name;
    bool m_configuration_set_name_isSet;
    bool m_configuration_set_name_isValid;

    QString m_max_price;
    bool m_max_price_isSet;
    bool m_max_price_isValid;

    qint32 m_time_to_live;
    bool m_time_to_live_isSet;
    bool m_time_to_live_isValid;

    QMap m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    QMap m_destination_country_parameters;
    bool m_destination_country_parameters_isSet;
    bool m_destination_country_parameters_isValid;

    bool m_dry_run;
    bool m_dry_run_isSet;
    bool m_dry_run_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISendTextMessageRequest)

#endif // OAISendTextMessageRequest_H
