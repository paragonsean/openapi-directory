/**
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutOptedOutNumberResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutOptedOutNumberResult::OAIPutOptedOutNumberResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutOptedOutNumberResult::OAIPutOptedOutNumberResult() {
    this->initializeModel();
}

OAIPutOptedOutNumberResult::~OAIPutOptedOutNumberResult() {}

void OAIPutOptedOutNumberResult::initializeModel() {

    m_opt_out_list_arn_isSet = false;
    m_opt_out_list_arn_isValid = false;

    m_opt_out_list_name_isSet = false;
    m_opt_out_list_name_isValid = false;

    m_opted_out_number_isSet = false;
    m_opted_out_number_isValid = false;

    m_opted_out_timestamp_isSet = false;
    m_opted_out_timestamp_isValid = false;

    m_end_user_opted_out_isSet = false;
    m_end_user_opted_out_isValid = false;
}

void OAIPutOptedOutNumberResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutOptedOutNumberResult::fromJsonObject(QJsonObject json) {

    m_opt_out_list_arn_isValid = ::OpenAPI::fromJsonValue(m_opt_out_list_arn, json[QString("OptOutListArn")]);
    m_opt_out_list_arn_isSet = !json[QString("OptOutListArn")].isNull() && m_opt_out_list_arn_isValid;

    m_opt_out_list_name_isValid = ::OpenAPI::fromJsonValue(m_opt_out_list_name, json[QString("OptOutListName")]);
    m_opt_out_list_name_isSet = !json[QString("OptOutListName")].isNull() && m_opt_out_list_name_isValid;

    m_opted_out_number_isValid = ::OpenAPI::fromJsonValue(m_opted_out_number, json[QString("OptedOutNumber")]);
    m_opted_out_number_isSet = !json[QString("OptedOutNumber")].isNull() && m_opted_out_number_isValid;

    m_opted_out_timestamp_isValid = ::OpenAPI::fromJsonValue(m_opted_out_timestamp, json[QString("OptedOutTimestamp")]);
    m_opted_out_timestamp_isSet = !json[QString("OptedOutTimestamp")].isNull() && m_opted_out_timestamp_isValid;

    m_end_user_opted_out_isValid = ::OpenAPI::fromJsonValue(m_end_user_opted_out, json[QString("EndUserOptedOut")]);
    m_end_user_opted_out_isSet = !json[QString("EndUserOptedOut")].isNull() && m_end_user_opted_out_isValid;
}

QString OAIPutOptedOutNumberResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutOptedOutNumberResult::asJsonObject() const {
    QJsonObject obj;
    if (m_opt_out_list_arn_isSet) {
        obj.insert(QString("OptOutListArn"), ::OpenAPI::toJsonValue(m_opt_out_list_arn));
    }
    if (m_opt_out_list_name_isSet) {
        obj.insert(QString("OptOutListName"), ::OpenAPI::toJsonValue(m_opt_out_list_name));
    }
    if (m_opted_out_number_isSet) {
        obj.insert(QString("OptedOutNumber"), ::OpenAPI::toJsonValue(m_opted_out_number));
    }
    if (m_opted_out_timestamp_isSet) {
        obj.insert(QString("OptedOutTimestamp"), ::OpenAPI::toJsonValue(m_opted_out_timestamp));
    }
    if (m_end_user_opted_out_isSet) {
        obj.insert(QString("EndUserOptedOut"), ::OpenAPI::toJsonValue(m_end_user_opted_out));
    }
    return obj;
}

QString OAIPutOptedOutNumberResult::getOptOutListArn() const {
    return m_opt_out_list_arn;
}
void OAIPutOptedOutNumberResult::setOptOutListArn(const QString &opt_out_list_arn) {
    m_opt_out_list_arn = opt_out_list_arn;
    m_opt_out_list_arn_isSet = true;
}

bool OAIPutOptedOutNumberResult::is_opt_out_list_arn_Set() const{
    return m_opt_out_list_arn_isSet;
}

bool OAIPutOptedOutNumberResult::is_opt_out_list_arn_Valid() const{
    return m_opt_out_list_arn_isValid;
}

QString OAIPutOptedOutNumberResult::getOptOutListName() const {
    return m_opt_out_list_name;
}
void OAIPutOptedOutNumberResult::setOptOutListName(const QString &opt_out_list_name) {
    m_opt_out_list_name = opt_out_list_name;
    m_opt_out_list_name_isSet = true;
}

bool OAIPutOptedOutNumberResult::is_opt_out_list_name_Set() const{
    return m_opt_out_list_name_isSet;
}

bool OAIPutOptedOutNumberResult::is_opt_out_list_name_Valid() const{
    return m_opt_out_list_name_isValid;
}

QString OAIPutOptedOutNumberResult::getOptedOutNumber() const {
    return m_opted_out_number;
}
void OAIPutOptedOutNumberResult::setOptedOutNumber(const QString &opted_out_number) {
    m_opted_out_number = opted_out_number;
    m_opted_out_number_isSet = true;
}

bool OAIPutOptedOutNumberResult::is_opted_out_number_Set() const{
    return m_opted_out_number_isSet;
}

bool OAIPutOptedOutNumberResult::is_opted_out_number_Valid() const{
    return m_opted_out_number_isValid;
}

QDateTime OAIPutOptedOutNumberResult::getOptedOutTimestamp() const {
    return m_opted_out_timestamp;
}
void OAIPutOptedOutNumberResult::setOptedOutTimestamp(const QDateTime &opted_out_timestamp) {
    m_opted_out_timestamp = opted_out_timestamp;
    m_opted_out_timestamp_isSet = true;
}

bool OAIPutOptedOutNumberResult::is_opted_out_timestamp_Set() const{
    return m_opted_out_timestamp_isSet;
}

bool OAIPutOptedOutNumberResult::is_opted_out_timestamp_Valid() const{
    return m_opted_out_timestamp_isValid;
}

bool OAIPutOptedOutNumberResult::getEndUserOptedOut() const {
    return m_end_user_opted_out;
}
void OAIPutOptedOutNumberResult::setEndUserOptedOut(const bool &end_user_opted_out) {
    m_end_user_opted_out = end_user_opted_out;
    m_end_user_opted_out_isSet = true;
}

bool OAIPutOptedOutNumberResult::is_end_user_opted_out_Set() const{
    return m_end_user_opted_out_isSet;
}

bool OAIPutOptedOutNumberResult::is_end_user_opted_out_Valid() const{
    return m_end_user_opted_out_isValid;
}

bool OAIPutOptedOutNumberResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_opt_out_list_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_opt_out_list_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_opted_out_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_opted_out_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_user_opted_out_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutOptedOutNumberResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
