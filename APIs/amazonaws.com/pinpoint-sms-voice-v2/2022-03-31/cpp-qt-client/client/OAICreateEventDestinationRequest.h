/**
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateEventDestinationRequest.h
 *
 * 
 */

#ifndef OAICreateEventDestinationRequest_H
#define OAICreateEventDestinationRequest_H

#include <QJsonObject>

#include "OAICreateEventDestinationRequest_CloudWatchLogsDestination.h"
#include "OAICreateEventDestinationRequest_KinesisFirehoseDestination.h"
#include "OAICreateEventDestinationRequest_SnsDestination.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateEventDestinationRequest_CloudWatchLogsDestination;
class OAICreateEventDestinationRequest_KinesisFirehoseDestination;
class OAICreateEventDestinationRequest_SnsDestination;

class OAICreateEventDestinationRequest : public OAIObject {
public:
    OAICreateEventDestinationRequest();
    OAICreateEventDestinationRequest(QString json);
    ~OAICreateEventDestinationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConfigurationSetName() const;
    void setConfigurationSetName(const QString &configuration_set_name);
    bool is_configuration_set_name_Set() const;
    bool is_configuration_set_name_Valid() const;

    QString getEventDestinationName() const;
    void setEventDestinationName(const QString &event_destination_name);
    bool is_event_destination_name_Set() const;
    bool is_event_destination_name_Valid() const;

    QList getMatchingEventTypes() const;
    void setMatchingEventTypes(const QList &matching_event_types);
    bool is_matching_event_types_Set() const;
    bool is_matching_event_types_Valid() const;

    OAICreateEventDestinationRequest_CloudWatchLogsDestination getCloudWatchLogsDestination() const;
    void setCloudWatchLogsDestination(const OAICreateEventDestinationRequest_CloudWatchLogsDestination &cloud_watch_logs_destination);
    bool is_cloud_watch_logs_destination_Set() const;
    bool is_cloud_watch_logs_destination_Valid() const;

    OAICreateEventDestinationRequest_KinesisFirehoseDestination getKinesisFirehoseDestination() const;
    void setKinesisFirehoseDestination(const OAICreateEventDestinationRequest_KinesisFirehoseDestination &kinesis_firehose_destination);
    bool is_kinesis_firehose_destination_Set() const;
    bool is_kinesis_firehose_destination_Valid() const;

    OAICreateEventDestinationRequest_SnsDestination getSnsDestination() const;
    void setSnsDestination(const OAICreateEventDestinationRequest_SnsDestination &sns_destination);
    bool is_sns_destination_Set() const;
    bool is_sns_destination_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_configuration_set_name;
    bool m_configuration_set_name_isSet;
    bool m_configuration_set_name_isValid;

    QString m_event_destination_name;
    bool m_event_destination_name_isSet;
    bool m_event_destination_name_isValid;

    QList m_matching_event_types;
    bool m_matching_event_types_isSet;
    bool m_matching_event_types_isValid;

    OAICreateEventDestinationRequest_CloudWatchLogsDestination m_cloud_watch_logs_destination;
    bool m_cloud_watch_logs_destination_isSet;
    bool m_cloud_watch_logs_destination_isValid;

    OAICreateEventDestinationRequest_KinesisFirehoseDestination m_kinesis_firehose_destination;
    bool m_kinesis_firehose_destination_isSet;
    bool m_kinesis_firehose_destination_isValid;

    OAICreateEventDestinationRequest_SnsDestination m_sns_destination;
    bool m_sns_destination_isSet;
    bool m_sns_destination_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateEventDestinationRequest)

#endif // OAICreateEventDestinationRequest_H
