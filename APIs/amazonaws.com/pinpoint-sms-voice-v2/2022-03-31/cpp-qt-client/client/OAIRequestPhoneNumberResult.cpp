/**
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequestPhoneNumberResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequestPhoneNumberResult::OAIRequestPhoneNumberResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequestPhoneNumberResult::OAIRequestPhoneNumberResult() {
    this->initializeModel();
}

OAIRequestPhoneNumberResult::~OAIRequestPhoneNumberResult() {}

void OAIRequestPhoneNumberResult::initializeModel() {

    m_phone_number_arn_isSet = false;
    m_phone_number_arn_isValid = false;

    m_phone_number_id_isSet = false;
    m_phone_number_id_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_iso_country_code_isSet = false;
    m_iso_country_code_isValid = false;

    m_message_type_isSet = false;
    m_message_type_isValid = false;

    m_number_capabilities_isSet = false;
    m_number_capabilities_isValid = false;

    m_number_type_isSet = false;
    m_number_type_isValid = false;

    m_monthly_leasing_price_isSet = false;
    m_monthly_leasing_price_isValid = false;

    m_two_way_enabled_isSet = false;
    m_two_way_enabled_isValid = false;

    m_two_way_channel_arn_isSet = false;
    m_two_way_channel_arn_isValid = false;

    m_self_managed_opt_outs_enabled_isSet = false;
    m_self_managed_opt_outs_enabled_isValid = false;

    m_opt_out_list_name_isSet = false;
    m_opt_out_list_name_isValid = false;

    m_deletion_protection_enabled_isSet = false;
    m_deletion_protection_enabled_isValid = false;

    m_pool_id_isSet = false;
    m_pool_id_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_created_timestamp_isSet = false;
    m_created_timestamp_isValid = false;
}

void OAIRequestPhoneNumberResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRequestPhoneNumberResult::fromJsonObject(QJsonObject json) {

    m_phone_number_arn_isValid = ::OpenAPI::fromJsonValue(m_phone_number_arn, json[QString("PhoneNumberArn")]);
    m_phone_number_arn_isSet = !json[QString("PhoneNumberArn")].isNull() && m_phone_number_arn_isValid;

    m_phone_number_id_isValid = ::OpenAPI::fromJsonValue(m_phone_number_id, json[QString("PhoneNumberId")]);
    m_phone_number_id_isSet = !json[QString("PhoneNumberId")].isNull() && m_phone_number_id_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_iso_country_code_isValid = ::OpenAPI::fromJsonValue(m_iso_country_code, json[QString("IsoCountryCode")]);
    m_iso_country_code_isSet = !json[QString("IsoCountryCode")].isNull() && m_iso_country_code_isValid;

    m_message_type_isValid = ::OpenAPI::fromJsonValue(m_message_type, json[QString("MessageType")]);
    m_message_type_isSet = !json[QString("MessageType")].isNull() && m_message_type_isValid;

    m_number_capabilities_isValid = ::OpenAPI::fromJsonValue(m_number_capabilities, json[QString("NumberCapabilities")]);
    m_number_capabilities_isSet = !json[QString("NumberCapabilities")].isNull() && m_number_capabilities_isValid;

    m_number_type_isValid = ::OpenAPI::fromJsonValue(m_number_type, json[QString("NumberType")]);
    m_number_type_isSet = !json[QString("NumberType")].isNull() && m_number_type_isValid;

    m_monthly_leasing_price_isValid = ::OpenAPI::fromJsonValue(m_monthly_leasing_price, json[QString("MonthlyLeasingPrice")]);
    m_monthly_leasing_price_isSet = !json[QString("MonthlyLeasingPrice")].isNull() && m_monthly_leasing_price_isValid;

    m_two_way_enabled_isValid = ::OpenAPI::fromJsonValue(m_two_way_enabled, json[QString("TwoWayEnabled")]);
    m_two_way_enabled_isSet = !json[QString("TwoWayEnabled")].isNull() && m_two_way_enabled_isValid;

    m_two_way_channel_arn_isValid = ::OpenAPI::fromJsonValue(m_two_way_channel_arn, json[QString("TwoWayChannelArn")]);
    m_two_way_channel_arn_isSet = !json[QString("TwoWayChannelArn")].isNull() && m_two_way_channel_arn_isValid;

    m_self_managed_opt_outs_enabled_isValid = ::OpenAPI::fromJsonValue(m_self_managed_opt_outs_enabled, json[QString("SelfManagedOptOutsEnabled")]);
    m_self_managed_opt_outs_enabled_isSet = !json[QString("SelfManagedOptOutsEnabled")].isNull() && m_self_managed_opt_outs_enabled_isValid;

    m_opt_out_list_name_isValid = ::OpenAPI::fromJsonValue(m_opt_out_list_name, json[QString("OptOutListName")]);
    m_opt_out_list_name_isSet = !json[QString("OptOutListName")].isNull() && m_opt_out_list_name_isValid;

    m_deletion_protection_enabled_isValid = ::OpenAPI::fromJsonValue(m_deletion_protection_enabled, json[QString("DeletionProtectionEnabled")]);
    m_deletion_protection_enabled_isSet = !json[QString("DeletionProtectionEnabled")].isNull() && m_deletion_protection_enabled_isValid;

    m_pool_id_isValid = ::OpenAPI::fromJsonValue(m_pool_id, json[QString("PoolId")]);
    m_pool_id_isSet = !json[QString("PoolId")].isNull() && m_pool_id_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_created_timestamp_isValid = ::OpenAPI::fromJsonValue(m_created_timestamp, json[QString("CreatedTimestamp")]);
    m_created_timestamp_isSet = !json[QString("CreatedTimestamp")].isNull() && m_created_timestamp_isValid;
}

QString OAIRequestPhoneNumberResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRequestPhoneNumberResult::asJsonObject() const {
    QJsonObject obj;
    if (m_phone_number_arn_isSet) {
        obj.insert(QString("PhoneNumberArn"), ::OpenAPI::toJsonValue(m_phone_number_arn));
    }
    if (m_phone_number_id_isSet) {
        obj.insert(QString("PhoneNumberId"), ::OpenAPI::toJsonValue(m_phone_number_id));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_iso_country_code_isSet) {
        obj.insert(QString("IsoCountryCode"), ::OpenAPI::toJsonValue(m_iso_country_code));
    }
    if (m_message_type.isSet()) {
        obj.insert(QString("MessageType"), ::OpenAPI::toJsonValue(m_message_type));
    }
    if (m_number_capabilities.isSet()) {
        obj.insert(QString("NumberCapabilities"), ::OpenAPI::toJsonValue(m_number_capabilities));
    }
    if (m_number_type.isSet()) {
        obj.insert(QString("NumberType"), ::OpenAPI::toJsonValue(m_number_type));
    }
    if (m_monthly_leasing_price_isSet) {
        obj.insert(QString("MonthlyLeasingPrice"), ::OpenAPI::toJsonValue(m_monthly_leasing_price));
    }
    if (m_two_way_enabled_isSet) {
        obj.insert(QString("TwoWayEnabled"), ::OpenAPI::toJsonValue(m_two_way_enabled));
    }
    if (m_two_way_channel_arn_isSet) {
        obj.insert(QString("TwoWayChannelArn"), ::OpenAPI::toJsonValue(m_two_way_channel_arn));
    }
    if (m_self_managed_opt_outs_enabled_isSet) {
        obj.insert(QString("SelfManagedOptOutsEnabled"), ::OpenAPI::toJsonValue(m_self_managed_opt_outs_enabled));
    }
    if (m_opt_out_list_name_isSet) {
        obj.insert(QString("OptOutListName"), ::OpenAPI::toJsonValue(m_opt_out_list_name));
    }
    if (m_deletion_protection_enabled_isSet) {
        obj.insert(QString("DeletionProtectionEnabled"), ::OpenAPI::toJsonValue(m_deletion_protection_enabled));
    }
    if (m_pool_id_isSet) {
        obj.insert(QString("PoolId"), ::OpenAPI::toJsonValue(m_pool_id));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_created_timestamp_isSet) {
        obj.insert(QString("CreatedTimestamp"), ::OpenAPI::toJsonValue(m_created_timestamp));
    }
    return obj;
}

QString OAIRequestPhoneNumberResult::getPhoneNumberArn() const {
    return m_phone_number_arn;
}
void OAIRequestPhoneNumberResult::setPhoneNumberArn(const QString &phone_number_arn) {
    m_phone_number_arn = phone_number_arn;
    m_phone_number_arn_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_phone_number_arn_Set() const{
    return m_phone_number_arn_isSet;
}

bool OAIRequestPhoneNumberResult::is_phone_number_arn_Valid() const{
    return m_phone_number_arn_isValid;
}

QString OAIRequestPhoneNumberResult::getPhoneNumberId() const {
    return m_phone_number_id;
}
void OAIRequestPhoneNumberResult::setPhoneNumberId(const QString &phone_number_id) {
    m_phone_number_id = phone_number_id;
    m_phone_number_id_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_phone_number_id_Set() const{
    return m_phone_number_id_isSet;
}

bool OAIRequestPhoneNumberResult::is_phone_number_id_Valid() const{
    return m_phone_number_id_isValid;
}

QString OAIRequestPhoneNumberResult::getPhoneNumber() const {
    return m_phone_number;
}
void OAIRequestPhoneNumberResult::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIRequestPhoneNumberResult::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

OAINumberStatus OAIRequestPhoneNumberResult::getStatus() const {
    return m_status;
}
void OAIRequestPhoneNumberResult::setStatus(const OAINumberStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_status_Set() const{
    return m_status_isSet;
}

bool OAIRequestPhoneNumberResult::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIRequestPhoneNumberResult::getIsoCountryCode() const {
    return m_iso_country_code;
}
void OAIRequestPhoneNumberResult::setIsoCountryCode(const QString &iso_country_code) {
    m_iso_country_code = iso_country_code;
    m_iso_country_code_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_iso_country_code_Set() const{
    return m_iso_country_code_isSet;
}

bool OAIRequestPhoneNumberResult::is_iso_country_code_Valid() const{
    return m_iso_country_code_isValid;
}

OAIMessageType OAIRequestPhoneNumberResult::getMessageType() const {
    return m_message_type;
}
void OAIRequestPhoneNumberResult::setMessageType(const OAIMessageType &message_type) {
    m_message_type = message_type;
    m_message_type_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_message_type_Set() const{
    return m_message_type_isSet;
}

bool OAIRequestPhoneNumberResult::is_message_type_Valid() const{
    return m_message_type_isValid;
}

QList OAIRequestPhoneNumberResult::getNumberCapabilities() const {
    return m_number_capabilities;
}
void OAIRequestPhoneNumberResult::setNumberCapabilities(const QList &number_capabilities) {
    m_number_capabilities = number_capabilities;
    m_number_capabilities_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_number_capabilities_Set() const{
    return m_number_capabilities_isSet;
}

bool OAIRequestPhoneNumberResult::is_number_capabilities_Valid() const{
    return m_number_capabilities_isValid;
}

OAIRequestableNumberType OAIRequestPhoneNumberResult::getNumberType() const {
    return m_number_type;
}
void OAIRequestPhoneNumberResult::setNumberType(const OAIRequestableNumberType &number_type) {
    m_number_type = number_type;
    m_number_type_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_number_type_Set() const{
    return m_number_type_isSet;
}

bool OAIRequestPhoneNumberResult::is_number_type_Valid() const{
    return m_number_type_isValid;
}

QString OAIRequestPhoneNumberResult::getMonthlyLeasingPrice() const {
    return m_monthly_leasing_price;
}
void OAIRequestPhoneNumberResult::setMonthlyLeasingPrice(const QString &monthly_leasing_price) {
    m_monthly_leasing_price = monthly_leasing_price;
    m_monthly_leasing_price_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_monthly_leasing_price_Set() const{
    return m_monthly_leasing_price_isSet;
}

bool OAIRequestPhoneNumberResult::is_monthly_leasing_price_Valid() const{
    return m_monthly_leasing_price_isValid;
}

bool OAIRequestPhoneNumberResult::getTwoWayEnabled() const {
    return m_two_way_enabled;
}
void OAIRequestPhoneNumberResult::setTwoWayEnabled(const bool &two_way_enabled) {
    m_two_way_enabled = two_way_enabled;
    m_two_way_enabled_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_two_way_enabled_Set() const{
    return m_two_way_enabled_isSet;
}

bool OAIRequestPhoneNumberResult::is_two_way_enabled_Valid() const{
    return m_two_way_enabled_isValid;
}

QString OAIRequestPhoneNumberResult::getTwoWayChannelArn() const {
    return m_two_way_channel_arn;
}
void OAIRequestPhoneNumberResult::setTwoWayChannelArn(const QString &two_way_channel_arn) {
    m_two_way_channel_arn = two_way_channel_arn;
    m_two_way_channel_arn_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_two_way_channel_arn_Set() const{
    return m_two_way_channel_arn_isSet;
}

bool OAIRequestPhoneNumberResult::is_two_way_channel_arn_Valid() const{
    return m_two_way_channel_arn_isValid;
}

bool OAIRequestPhoneNumberResult::getSelfManagedOptOutsEnabled() const {
    return m_self_managed_opt_outs_enabled;
}
void OAIRequestPhoneNumberResult::setSelfManagedOptOutsEnabled(const bool &self_managed_opt_outs_enabled) {
    m_self_managed_opt_outs_enabled = self_managed_opt_outs_enabled;
    m_self_managed_opt_outs_enabled_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_self_managed_opt_outs_enabled_Set() const{
    return m_self_managed_opt_outs_enabled_isSet;
}

bool OAIRequestPhoneNumberResult::is_self_managed_opt_outs_enabled_Valid() const{
    return m_self_managed_opt_outs_enabled_isValid;
}

QString OAIRequestPhoneNumberResult::getOptOutListName() const {
    return m_opt_out_list_name;
}
void OAIRequestPhoneNumberResult::setOptOutListName(const QString &opt_out_list_name) {
    m_opt_out_list_name = opt_out_list_name;
    m_opt_out_list_name_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_opt_out_list_name_Set() const{
    return m_opt_out_list_name_isSet;
}

bool OAIRequestPhoneNumberResult::is_opt_out_list_name_Valid() const{
    return m_opt_out_list_name_isValid;
}

bool OAIRequestPhoneNumberResult::getDeletionProtectionEnabled() const {
    return m_deletion_protection_enabled;
}
void OAIRequestPhoneNumberResult::setDeletionProtectionEnabled(const bool &deletion_protection_enabled) {
    m_deletion_protection_enabled = deletion_protection_enabled;
    m_deletion_protection_enabled_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_deletion_protection_enabled_Set() const{
    return m_deletion_protection_enabled_isSet;
}

bool OAIRequestPhoneNumberResult::is_deletion_protection_enabled_Valid() const{
    return m_deletion_protection_enabled_isValid;
}

QString OAIRequestPhoneNumberResult::getPoolId() const {
    return m_pool_id;
}
void OAIRequestPhoneNumberResult::setPoolId(const QString &pool_id) {
    m_pool_id = pool_id;
    m_pool_id_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_pool_id_Set() const{
    return m_pool_id_isSet;
}

bool OAIRequestPhoneNumberResult::is_pool_id_Valid() const{
    return m_pool_id_isValid;
}

QList OAIRequestPhoneNumberResult::getTags() const {
    return m_tags;
}
void OAIRequestPhoneNumberResult::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIRequestPhoneNumberResult::is_tags_Valid() const{
    return m_tags_isValid;
}

QDateTime OAIRequestPhoneNumberResult::getCreatedTimestamp() const {
    return m_created_timestamp;
}
void OAIRequestPhoneNumberResult::setCreatedTimestamp(const QDateTime &created_timestamp) {
    m_created_timestamp = created_timestamp;
    m_created_timestamp_isSet = true;
}

bool OAIRequestPhoneNumberResult::is_created_timestamp_Set() const{
    return m_created_timestamp_isSet;
}

bool OAIRequestPhoneNumberResult::is_created_timestamp_Valid() const{
    return m_created_timestamp_isValid;
}

bool OAIRequestPhoneNumberResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_phone_number_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_capabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_leasing_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_two_way_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_two_way_channel_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_managed_opt_outs_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_opt_out_list_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deletion_protection_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pool_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRequestPhoneNumberResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
