/**
 * Amazon Pinpoint SMS Voice V2
 * <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>. This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API resources, including supported HTTP methods, parameters, and schemas.</p> <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with your recipients across multiple messaging channels. The Amazon Pinpoint SMS and Voice, version 2 API provides programmatic access to options that are unique to the SMS and voice channels and supplements the resources provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"> Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides key information, such as Amazon Pinpoint integration with other Amazon Web Services services, and the quotas that apply to use of the service.</p>
 *
 * The version of the OpenAPI document: 2022-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigurationSetInformation.h
 *
 * Information related to a given configuration set in your Amazon Web Services account.
 */

#ifndef OAIConfigurationSetInformation_H
#define OAIConfigurationSetInformation_H

#include <QJsonObject>

#include "OAIMessageType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConfigurationSetInformation : public OAIObject {
public:
    OAIConfigurationSetInformation();
    OAIConfigurationSetInformation(QString json);
    ~OAIConfigurationSetInformation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConfigurationSetArn() const;
    void setConfigurationSetArn(const QString &configuration_set_arn);
    bool is_configuration_set_arn_Set() const;
    bool is_configuration_set_arn_Valid() const;

    QString getConfigurationSetName() const;
    void setConfigurationSetName(const QString &configuration_set_name);
    bool is_configuration_set_name_Set() const;
    bool is_configuration_set_name_Valid() const;

    QList getEventDestinations() const;
    void setEventDestinations(const QList &event_destinations);
    bool is_event_destinations_Set() const;
    bool is_event_destinations_Valid() const;

    OAIMessageType getDefaultMessageType() const;
    void setDefaultMessageType(const OAIMessageType &default_message_type);
    bool is_default_message_type_Set() const;
    bool is_default_message_type_Valid() const;

    QString getDefaultSenderId() const;
    void setDefaultSenderId(const QString &default_sender_id);
    bool is_default_sender_id_Set() const;
    bool is_default_sender_id_Valid() const;

    QDateTime getCreatedTimestamp() const;
    void setCreatedTimestamp(const QDateTime &created_timestamp);
    bool is_created_timestamp_Set() const;
    bool is_created_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_configuration_set_arn;
    bool m_configuration_set_arn_isSet;
    bool m_configuration_set_arn_isValid;

    QString m_configuration_set_name;
    bool m_configuration_set_name_isSet;
    bool m_configuration_set_name_isValid;

    QList m_event_destinations;
    bool m_event_destinations_isSet;
    bool m_event_destinations_isValid;

    OAIMessageType m_default_message_type;
    bool m_default_message_type_isSet;
    bool m_default_message_type_isValid;

    QString m_default_sender_id;
    bool m_default_sender_id_isSet;
    bool m_default_sender_id_isValid;

    QDateTime m_created_timestamp;
    bool m_created_timestamp_isSet;
    bool m_created_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigurationSetInformation)

#endif // OAIConfigurationSetInformation_H
