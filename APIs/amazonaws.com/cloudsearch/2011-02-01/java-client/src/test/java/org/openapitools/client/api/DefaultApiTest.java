/*
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BaseException;
import org.openapitools.client.model.CreateDomainRequest;
import org.openapitools.client.model.CreateDomainResponse;
import org.openapitools.client.model.DefineIndexFieldRequest;
import org.openapitools.client.model.DefineIndexFieldResponse;
import org.openapitools.client.model.DefineRankExpressionRequest;
import org.openapitools.client.model.DefineRankExpressionResponse;
import org.openapitools.client.model.DeleteDomainRequest;
import org.openapitools.client.model.DeleteDomainResponse;
import org.openapitools.client.model.DeleteIndexFieldRequest;
import org.openapitools.client.model.DeleteIndexFieldResponse;
import org.openapitools.client.model.DeleteRankExpressionRequest;
import org.openapitools.client.model.DeleteRankExpressionResponse;
import org.openapitools.client.model.DescribeAvailabilityOptionsRequest;
import org.openapitools.client.model.DescribeAvailabilityOptionsResponse;
import org.openapitools.client.model.DescribeDefaultSearchFieldRequest;
import org.openapitools.client.model.DescribeDefaultSearchFieldResponse;
import org.openapitools.client.model.DescribeDomainsRequest;
import org.openapitools.client.model.DescribeDomainsResponse;
import org.openapitools.client.model.DescribeIndexFieldsRequest;
import org.openapitools.client.model.DescribeIndexFieldsResponse;
import org.openapitools.client.model.DescribeRankExpressionsRequest;
import org.openapitools.client.model.DescribeRankExpressionsResponse;
import org.openapitools.client.model.DescribeServiceAccessPoliciesRequest;
import org.openapitools.client.model.DescribeServiceAccessPoliciesResponse;
import org.openapitools.client.model.DescribeStemmingOptionsRequest;
import org.openapitools.client.model.DescribeStemmingOptionsResponse;
import org.openapitools.client.model.DescribeStopwordOptionsRequest;
import org.openapitools.client.model.DescribeStopwordOptionsResponse;
import org.openapitools.client.model.DescribeSynonymOptionsRequest;
import org.openapitools.client.model.DescribeSynonymOptionsResponse;
import org.openapitools.client.model.GETDefineIndexFieldIndexFieldParameter;
import org.openapitools.client.model.GETDefineRankExpressionRankExpressionParameter;
import org.openapitools.client.model.IndexDocumentsRequest;
import org.openapitools.client.model.IndexDocumentsResponse;
import org.openapitools.client.model.UpdateAvailabilityOptionsRequest;
import org.openapitools.client.model.UpdateAvailabilityOptionsResponse;
import org.openapitools.client.model.UpdateDefaultSearchFieldRequest;
import org.openapitools.client.model.UpdateDefaultSearchFieldResponse;
import org.openapitools.client.model.UpdateServiceAccessPoliciesRequest;
import org.openapitools.client.model.UpdateServiceAccessPoliciesResponse;
import org.openapitools.client.model.UpdateStemmingOptionsRequest;
import org.openapitools.client.model.UpdateStemmingOptionsResponse;
import org.openapitools.client.model.UpdateStopwordOptionsRequest;
import org.openapitools.client.model.UpdateStopwordOptionsResponse;
import org.openapitools.client.model.UpdateSynonymOptionsRequest;
import org.openapitools.client.model.UpdateSynonymOptionsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Creates a new search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCreateDomainTest() throws ApiException {
        String domainName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateDomainResponse response = api.gETCreateDomain(domainName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Configures an &lt;code&gt;IndexField&lt;/code&gt; for the search domain. Used to create new fields and modify existing ones. If the field exists, the new configuration replaces the old one. You can configure a maximum of 200 index fields.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDefineIndexFieldTest() throws ApiException {
        String domainName = null;
        GETDefineIndexFieldIndexFieldParameter indexField = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DefineIndexFieldResponse response = api.gETDefineIndexField(domainName, indexField, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Configures a &lt;code&gt;RankExpression&lt;/code&gt; for the search domain. Used to create new rank expressions and modify existing ones. If the expression exists, the new configuration replaces the old one. You can configure a maximum of 50 rank expressions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDefineRankExpressionTest() throws ApiException {
        String domainName = null;
        GETDefineRankExpressionRankExpressionParameter rankExpression = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DefineRankExpressionResponse response = api.gETDefineRankExpression(domainName, rankExpression, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Permanently deletes a search domain and all of its data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeleteDomainTest() throws ApiException {
        String domainName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteDomainResponse response = api.gETDeleteDomain(domainName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes an &lt;code&gt;IndexField&lt;/code&gt; from the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeleteIndexFieldTest() throws ApiException {
        String domainName = null;
        String indexFieldName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteIndexFieldResponse response = api.gETDeleteIndexField(domainName, indexFieldName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes a &lt;code&gt;RankExpression&lt;/code&gt; from the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeleteRankExpressionTest() throws ApiException {
        String domainName = null;
        String rankName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteRankExpressionResponse response = api.gETDeleteRankExpression(domainName, rankName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the availability options configured for a domain. By default, shows the configuration with any pending changes. Set the &lt;code&gt;Deployed&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; to show the active configuration and exclude pending changes. For more information, see &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Configuring Availability Options&lt;/a&gt; in the &lt;i&gt;Amazon CloudSearch Developer Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeAvailabilityOptionsTest() throws ApiException {
        String domainName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAvailabilityOptionsResponse response = api.gETDescribeAvailabilityOptions(domainName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the default search field configured for the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeDefaultSearchFieldTest() throws ApiException {
        String domainName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDefaultSearchFieldResponse response = api.gETDescribeDefaultSearchField(domainName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets information about the search domains owned by this account. Can be limited to specific domains. Shows all domains by default.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeDomainsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<String> domainNames = null;
        DescribeDomainsResponse response = api.gETDescribeDomains(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, domainNames);
        // TODO: test validations
    }

    /**
     * Gets information about the index fields configured for the search domain. Can be limited to specific fields by name. Shows all fields by default.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeIndexFieldsTest() throws ApiException {
        String domainName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<String> fieldNames = null;
        DescribeIndexFieldsResponse response = api.gETDescribeIndexFields(domainName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, fieldNames);
        // TODO: test validations
    }

    /**
     * Gets the rank expressions configured for the search domain. Can be limited to specific rank expressions by name. Shows all rank expressions by default. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeRankExpressionsTest() throws ApiException {
        String domainName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<String> rankNames = null;
        DescribeRankExpressionsResponse response = api.gETDescribeRankExpressions(domainName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, rankNames);
        // TODO: test validations
    }

    /**
     * Gets information about the resource-based policies that control access to the domain&#39;s document and search services.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeServiceAccessPoliciesTest() throws ApiException {
        String domainName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeServiceAccessPoliciesResponse response = api.gETDescribeServiceAccessPolicies(domainName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the stemming dictionary configured for the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeStemmingOptionsTest() throws ApiException {
        String domainName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStemmingOptionsResponse response = api.gETDescribeStemmingOptions(domainName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the stopwords configured for the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeStopwordOptionsTest() throws ApiException {
        String domainName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStopwordOptionsResponse response = api.gETDescribeStopwordOptions(domainName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the synonym dictionary configured for the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeSynonymOptionsTest() throws ApiException {
        String domainName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeSynonymOptionsResponse response = api.gETDescribeSynonymOptions(domainName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Tells the search domain to start indexing its documents using the latest text processing options and &lt;code&gt;IndexFields&lt;/code&gt;. This operation must be invoked to make options whose &lt;a&gt;OptionStatus&lt;/a&gt; has &lt;code&gt;OptionState&lt;/code&gt; of &lt;code&gt;RequiresIndexDocuments&lt;/code&gt; visible in search results.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETIndexDocumentsTest() throws ApiException {
        String domainName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        IndexDocumentsResponse response = api.gETIndexDocuments(domainName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Configures the availability options for a domain. Enabling the Multi-AZ option expands an Amazon CloudSearch domain to an additional Availability Zone in the same Region to increase fault tolerance in the event of a service disruption. Changes to the Multi-AZ option can take about half an hour to become active. For more information, see &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Configuring Availability Options&lt;/a&gt; in the &lt;i&gt;Amazon CloudSearch Developer Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateAvailabilityOptionsTest() throws ApiException {
        String domainName = null;
        Boolean multiAZ = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAvailabilityOptionsResponse response = api.gETUpdateAvailabilityOptions(domainName, multiAZ, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Configures the default search field for the search domain. The default search field is the text field that is searched when a search request does not specify which fields to search. By default, it is configured to include the contents of all of the domain&#39;s text fields. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateDefaultSearchFieldTest() throws ApiException {
        String domainName = null;
        String defaultSearchField = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateDefaultSearchFieldResponse response = api.gETUpdateDefaultSearchField(domainName, defaultSearchField, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Configures the policies that control access to the domain&#39;s document and search services. The maximum size of an access policy document is 100 KB.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateServiceAccessPoliciesTest() throws ApiException {
        String domainName = null;
        String accessPolicies = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateServiceAccessPoliciesResponse response = api.gETUpdateServiceAccessPolicies(domainName, accessPolicies, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Configures a stemming dictionary for the search domain. The stemming dictionary is used during indexing and when processing search requests. The maximum size of the stemming dictionary is 500 KB.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateStemmingOptionsTest() throws ApiException {
        String domainName = null;
        String stems = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateStemmingOptionsResponse response = api.gETUpdateStemmingOptions(domainName, stems, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Configures stopwords for the search domain. Stopwords are used during indexing and when processing search requests. The maximum size of the stopwords dictionary is 10 KB.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateStopwordOptionsTest() throws ApiException {
        String domainName = null;
        String stopwords = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateStopwordOptionsResponse response = api.gETUpdateStopwordOptions(domainName, stopwords, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Configures a synonym dictionary for the search domain. The synonym dictionary is used during indexing to configure mappings for terms that occur in text fields. The maximum size of the synonym dictionary is 100 KB. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateSynonymOptionsTest() throws ApiException {
        String domainName = null;
        String synonyms = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateSynonymOptionsResponse response = api.gETUpdateSynonymOptions(domainName, synonyms, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a new search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCreateDomainTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateDomainRequest createDomainRequest = null;
        CreateDomainResponse response = api.pOSTCreateDomain(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, createDomainRequest);
        // TODO: test validations
    }

    /**
     * Configures an &lt;code&gt;IndexField&lt;/code&gt; for the search domain. Used to create new fields and modify existing ones. If the field exists, the new configuration replaces the old one. You can configure a maximum of 200 index fields.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDefineIndexFieldTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DefineIndexFieldRequest defineIndexFieldRequest = null;
        DefineIndexFieldResponse response = api.pOSTDefineIndexField(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, defineIndexFieldRequest);
        // TODO: test validations
    }

    /**
     * Configures a &lt;code&gt;RankExpression&lt;/code&gt; for the search domain. Used to create new rank expressions and modify existing ones. If the expression exists, the new configuration replaces the old one. You can configure a maximum of 50 rank expressions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDefineRankExpressionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DefineRankExpressionRequest defineRankExpressionRequest = null;
        DefineRankExpressionResponse response = api.pOSTDefineRankExpression(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, defineRankExpressionRequest);
        // TODO: test validations
    }

    /**
     * Permanently deletes a search domain and all of its data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeleteDomainTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteDomainRequest deleteDomainRequest = null;
        DeleteDomainResponse response = api.pOSTDeleteDomain(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteDomainRequest);
        // TODO: test validations
    }

    /**
     * Removes an &lt;code&gt;IndexField&lt;/code&gt; from the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeleteIndexFieldTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteIndexFieldRequest deleteIndexFieldRequest = null;
        DeleteIndexFieldResponse response = api.pOSTDeleteIndexField(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteIndexFieldRequest);
        // TODO: test validations
    }

    /**
     * Removes a &lt;code&gt;RankExpression&lt;/code&gt; from the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeleteRankExpressionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteRankExpressionRequest deleteRankExpressionRequest = null;
        DeleteRankExpressionResponse response = api.pOSTDeleteRankExpression(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteRankExpressionRequest);
        // TODO: test validations
    }

    /**
     * Gets the availability options configured for a domain. By default, shows the configuration with any pending changes. Set the &lt;code&gt;Deployed&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; to show the active configuration and exclude pending changes. For more information, see &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Configuring Availability Options&lt;/a&gt; in the &lt;i&gt;Amazon CloudSearch Developer Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeAvailabilityOptionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAvailabilityOptionsRequest describeAvailabilityOptionsRequest = null;
        DescribeAvailabilityOptionsResponse response = api.pOSTDescribeAvailabilityOptions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeAvailabilityOptionsRequest);
        // TODO: test validations
    }

    /**
     * Gets the default search field configured for the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeDefaultSearchFieldTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDefaultSearchFieldRequest describeDefaultSearchFieldRequest = null;
        DescribeDefaultSearchFieldResponse response = api.pOSTDescribeDefaultSearchField(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeDefaultSearchFieldRequest);
        // TODO: test validations
    }

    /**
     * Gets information about the search domains owned by this account. Can be limited to specific domains. Shows all domains by default.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeDomainsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDomainsRequest describeDomainsRequest = null;
        DescribeDomainsResponse response = api.pOSTDescribeDomains(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeDomainsRequest);
        // TODO: test validations
    }

    /**
     * Gets information about the index fields configured for the search domain. Can be limited to specific fields by name. Shows all fields by default.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeIndexFieldsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeIndexFieldsRequest describeIndexFieldsRequest = null;
        DescribeIndexFieldsResponse response = api.pOSTDescribeIndexFields(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeIndexFieldsRequest);
        // TODO: test validations
    }

    /**
     * Gets the rank expressions configured for the search domain. Can be limited to specific rank expressions by name. Shows all rank expressions by default. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeRankExpressionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeRankExpressionsRequest describeRankExpressionsRequest = null;
        DescribeRankExpressionsResponse response = api.pOSTDescribeRankExpressions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeRankExpressionsRequest);
        // TODO: test validations
    }

    /**
     * Gets information about the resource-based policies that control access to the domain&#39;s document and search services.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeServiceAccessPoliciesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeServiceAccessPoliciesRequest describeServiceAccessPoliciesRequest = null;
        DescribeServiceAccessPoliciesResponse response = api.pOSTDescribeServiceAccessPolicies(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeServiceAccessPoliciesRequest);
        // TODO: test validations
    }

    /**
     * Gets the stemming dictionary configured for the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeStemmingOptionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStemmingOptionsRequest describeStemmingOptionsRequest = null;
        DescribeStemmingOptionsResponse response = api.pOSTDescribeStemmingOptions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeStemmingOptionsRequest);
        // TODO: test validations
    }

    /**
     * Gets the stopwords configured for the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeStopwordOptionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStopwordOptionsRequest describeStopwordOptionsRequest = null;
        DescribeStopwordOptionsResponse response = api.pOSTDescribeStopwordOptions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeStopwordOptionsRequest);
        // TODO: test validations
    }

    /**
     * Gets the synonym dictionary configured for the search domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeSynonymOptionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeSynonymOptionsRequest describeSynonymOptionsRequest = null;
        DescribeSynonymOptionsResponse response = api.pOSTDescribeSynonymOptions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeSynonymOptionsRequest);
        // TODO: test validations
    }

    /**
     * Tells the search domain to start indexing its documents using the latest text processing options and &lt;code&gt;IndexFields&lt;/code&gt;. This operation must be invoked to make options whose &lt;a&gt;OptionStatus&lt;/a&gt; has &lt;code&gt;OptionState&lt;/code&gt; of &lt;code&gt;RequiresIndexDocuments&lt;/code&gt; visible in search results.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTIndexDocumentsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        IndexDocumentsRequest indexDocumentsRequest = null;
        IndexDocumentsResponse response = api.pOSTIndexDocuments(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, indexDocumentsRequest);
        // TODO: test validations
    }

    /**
     * Configures the availability options for a domain. Enabling the Multi-AZ option expands an Amazon CloudSearch domain to an additional Availability Zone in the same Region to increase fault tolerance in the event of a service disruption. Changes to the Multi-AZ option can take about half an hour to become active. For more information, see &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Configuring Availability Options&lt;/a&gt; in the &lt;i&gt;Amazon CloudSearch Developer Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateAvailabilityOptionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAvailabilityOptionsRequest updateAvailabilityOptionsRequest = null;
        UpdateAvailabilityOptionsResponse response = api.pOSTUpdateAvailabilityOptions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateAvailabilityOptionsRequest);
        // TODO: test validations
    }

    /**
     * Configures the default search field for the search domain. The default search field is the text field that is searched when a search request does not specify which fields to search. By default, it is configured to include the contents of all of the domain&#39;s text fields. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateDefaultSearchFieldTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateDefaultSearchFieldRequest updateDefaultSearchFieldRequest = null;
        UpdateDefaultSearchFieldResponse response = api.pOSTUpdateDefaultSearchField(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateDefaultSearchFieldRequest);
        // TODO: test validations
    }

    /**
     * Configures the policies that control access to the domain&#39;s document and search services. The maximum size of an access policy document is 100 KB.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateServiceAccessPoliciesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateServiceAccessPoliciesRequest updateServiceAccessPoliciesRequest = null;
        UpdateServiceAccessPoliciesResponse response = api.pOSTUpdateServiceAccessPolicies(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateServiceAccessPoliciesRequest);
        // TODO: test validations
    }

    /**
     * Configures a stemming dictionary for the search domain. The stemming dictionary is used during indexing and when processing search requests. The maximum size of the stemming dictionary is 500 KB.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateStemmingOptionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateStemmingOptionsRequest updateStemmingOptionsRequest = null;
        UpdateStemmingOptionsResponse response = api.pOSTUpdateStemmingOptions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateStemmingOptionsRequest);
        // TODO: test validations
    }

    /**
     * Configures stopwords for the search domain. Stopwords are used during indexing and when processing search requests. The maximum size of the stopwords dictionary is 10 KB.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateStopwordOptionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateStopwordOptionsRequest updateStopwordOptionsRequest = null;
        UpdateStopwordOptionsResponse response = api.pOSTUpdateStopwordOptions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateStopwordOptionsRequest);
        // TODO: test validations
    }

    /**
     * Configures a synonym dictionary for the search domain. The synonym dictionary is used during indexing to configure mappings for terms that occur in text fields. The maximum size of the synonym dictionary is 100 KB. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateSynonymOptionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateSynonymOptionsRequest updateSynonymOptionsRequest = null;
        UpdateSynonymOptionsResponse response = api.pOSTUpdateSynonymOptions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateSynonymOptionsRequest);
        // TODO: test validations
    }

}
