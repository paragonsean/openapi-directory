/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateStopwordOptionsRequest model module.
 * @module model/UpdateStopwordOptionsRequest
 * @version 2011-02-01
 */
class UpdateStopwordOptionsRequest {
    /**
     * Constructs a new <code>UpdateStopwordOptionsRequest</code>.
     * @alias module:model/UpdateStopwordOptionsRequest
     * @param domainName {String} A string that represents the name of a domain. Domain names must be unique across the domains owned by an account within an AWS region. Domain names must start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). Uppercase letters and underscores are not allowed.
     * @param stopwords {String} Lists stopwords serialized as a JSON document. The document has a single object with one property \"stopwords\" whose value is an array of strings. The maximum size of a stopwords document is 10 KB. Example: <code>{ \"stopwords\": [\"a\", \"an\", \"the\", \"of\"] }</code>
     */
    constructor(domainName, stopwords) { 
        
        UpdateStopwordOptionsRequest.initialize(this, domainName, stopwords);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domainName, stopwords) { 
        obj['DomainName'] = domainName;
        obj['Stopwords'] = stopwords;
    }

    /**
     * Constructs a <code>UpdateStopwordOptionsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateStopwordOptionsRequest} obj Optional instance to populate.
     * @return {module:model/UpdateStopwordOptionsRequest} The populated <code>UpdateStopwordOptionsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateStopwordOptionsRequest();

            if (data.hasOwnProperty('DomainName')) {
                obj['DomainName'] = ApiClient.convertToType(data['DomainName'], 'String');
            }
            if (data.hasOwnProperty('Stopwords')) {
                obj['Stopwords'] = ApiClient.convertToType(data['Stopwords'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateStopwordOptionsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateStopwordOptionsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateStopwordOptionsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DomainName'] && !(typeof data['DomainName'] === 'string' || data['DomainName'] instanceof String)) {
            throw new Error("Expected the field `DomainName` to be a primitive type in the JSON string but got " + data['DomainName']);
        }
        // ensure the json data is a string
        if (data['Stopwords'] && !(typeof data['Stopwords'] === 'string' || data['Stopwords'] instanceof String)) {
            throw new Error("Expected the field `Stopwords` to be a primitive type in the JSON string but got " + data['Stopwords']);
        }

        return true;
    }


}

UpdateStopwordOptionsRequest.RequiredProperties = ["DomainName", "Stopwords"];

/**
 * A string that represents the name of a domain. Domain names must be unique across the domains owned by an account within an AWS region. Domain names must start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). Uppercase letters and underscores are not allowed.
 * @member {String} DomainName
 */
UpdateStopwordOptionsRequest.prototype['DomainName'] = undefined;

/**
 * Lists stopwords serialized as a JSON document. The document has a single object with one property \"stopwords\" whose value is an array of strings. The maximum size of a stopwords document is 10 KB. Example: <code>{ \"stopwords\": [\"a\", \"an\", \"the\", \"of\"] }</code>
 * @member {String} Stopwords
 */
UpdateStopwordOptionsRequest.prototype['Stopwords'] = undefined;






export default UpdateStopwordOptionsRequest;

