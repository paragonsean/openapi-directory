/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeIndexFieldsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeIndexFieldsResponse::OAIDescribeIndexFieldsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeIndexFieldsResponse::OAIDescribeIndexFieldsResponse() {
    this->initializeModel();
}

OAIDescribeIndexFieldsResponse::~OAIDescribeIndexFieldsResponse() {}

void OAIDescribeIndexFieldsResponse::initializeModel() {

    m_index_fields_isSet = false;
    m_index_fields_isValid = false;
}

void OAIDescribeIndexFieldsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeIndexFieldsResponse::fromJsonObject(QJsonObject json) {

    m_index_fields_isValid = ::OpenAPI::fromJsonValue(m_index_fields, json[QString("IndexFields")]);
    m_index_fields_isSet = !json[QString("IndexFields")].isNull() && m_index_fields_isValid;
}

QString OAIDescribeIndexFieldsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeIndexFieldsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_index_fields.isSet()) {
        obj.insert(QString("IndexFields"), ::OpenAPI::toJsonValue(m_index_fields));
    }
    return obj;
}

QList OAIDescribeIndexFieldsResponse::getIndexFields() const {
    return m_index_fields;
}
void OAIDescribeIndexFieldsResponse::setIndexFields(const QList &index_fields) {
    m_index_fields = index_fields;
    m_index_fields_isSet = true;
}

bool OAIDescribeIndexFieldsResponse::is_index_fields_Set() const{
    return m_index_fields_isSet;
}

bool OAIDescribeIndexFieldsResponse::is_index_fields_Valid() const{
    return m_index_fields_isValid;
}

bool OAIDescribeIndexFieldsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_index_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeIndexFieldsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_index_fields_isValid && true;
}

} // namespace OpenAPI
