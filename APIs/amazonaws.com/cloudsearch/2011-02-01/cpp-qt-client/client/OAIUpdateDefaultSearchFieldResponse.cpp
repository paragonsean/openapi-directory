/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDefaultSearchFieldResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDefaultSearchFieldResponse::OAIUpdateDefaultSearchFieldResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDefaultSearchFieldResponse::OAIUpdateDefaultSearchFieldResponse() {
    this->initializeModel();
}

OAIUpdateDefaultSearchFieldResponse::~OAIUpdateDefaultSearchFieldResponse() {}

void OAIUpdateDefaultSearchFieldResponse::initializeModel() {

    m_default_search_field_isSet = false;
    m_default_search_field_isValid = false;
}

void OAIUpdateDefaultSearchFieldResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDefaultSearchFieldResponse::fromJsonObject(QJsonObject json) {

    m_default_search_field_isValid = ::OpenAPI::fromJsonValue(m_default_search_field, json[QString("DefaultSearchField")]);
    m_default_search_field_isSet = !json[QString("DefaultSearchField")].isNull() && m_default_search_field_isValid;
}

QString OAIUpdateDefaultSearchFieldResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDefaultSearchFieldResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_default_search_field.isSet()) {
        obj.insert(QString("DefaultSearchField"), ::OpenAPI::toJsonValue(m_default_search_field));
    }
    return obj;
}

OAIDefaultSearchFieldStatus OAIUpdateDefaultSearchFieldResponse::getDefaultSearchField() const {
    return m_default_search_field;
}
void OAIUpdateDefaultSearchFieldResponse::setDefaultSearchField(const OAIDefaultSearchFieldStatus &default_search_field) {
    m_default_search_field = default_search_field;
    m_default_search_field_isSet = true;
}

bool OAIUpdateDefaultSearchFieldResponse::is_default_search_field_Set() const{
    return m_default_search_field_isSet;
}

bool OAIUpdateDefaultSearchFieldResponse::is_default_search_field_Valid() const{
    return m_default_search_field_isValid;
}

bool OAIUpdateDefaultSearchFieldResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_search_field.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDefaultSearchFieldResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_default_search_field_isValid && true;
}

} // namespace OpenAPI
