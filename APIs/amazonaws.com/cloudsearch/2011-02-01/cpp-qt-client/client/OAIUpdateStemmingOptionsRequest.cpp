/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateStemmingOptionsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateStemmingOptionsRequest::OAIUpdateStemmingOptionsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateStemmingOptionsRequest::OAIUpdateStemmingOptionsRequest() {
    this->initializeModel();
}

OAIUpdateStemmingOptionsRequest::~OAIUpdateStemmingOptionsRequest() {}

void OAIUpdateStemmingOptionsRequest::initializeModel() {

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_stems_isSet = false;
    m_stems_isValid = false;
}

void OAIUpdateStemmingOptionsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateStemmingOptionsRequest::fromJsonObject(QJsonObject json) {

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("DomainName")]);
    m_domain_name_isSet = !json[QString("DomainName")].isNull() && m_domain_name_isValid;

    m_stems_isValid = ::OpenAPI::fromJsonValue(m_stems, json[QString("Stems")]);
    m_stems_isSet = !json[QString("Stems")].isNull() && m_stems_isValid;
}

QString OAIUpdateStemmingOptionsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateStemmingOptionsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_name_isSet) {
        obj.insert(QString("DomainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_stems_isSet) {
        obj.insert(QString("Stems"), ::OpenAPI::toJsonValue(m_stems));
    }
    return obj;
}

QString OAIUpdateStemmingOptionsRequest::getDomainName() const {
    return m_domain_name;
}
void OAIUpdateStemmingOptionsRequest::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAIUpdateStemmingOptionsRequest::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAIUpdateStemmingOptionsRequest::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

QString OAIUpdateStemmingOptionsRequest::getStems() const {
    return m_stems;
}
void OAIUpdateStemmingOptionsRequest::setStems(const QString &stems) {
    m_stems = stems;
    m_stems_isSet = true;
}

bool OAIUpdateStemmingOptionsRequest::is_stems_Set() const{
    return m_stems_isSet;
}

bool OAIUpdateStemmingOptionsRequest::is_stems_Valid() const{
    return m_stems_isValid;
}

bool OAIUpdateStemmingOptionsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stems_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateStemmingOptionsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_domain_name_isValid && m_stems_isValid && true;
}

} // namespace OpenAPI
