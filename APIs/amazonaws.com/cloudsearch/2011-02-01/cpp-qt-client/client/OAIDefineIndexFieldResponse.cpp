/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefineIndexFieldResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefineIndexFieldResponse::OAIDefineIndexFieldResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefineIndexFieldResponse::OAIDefineIndexFieldResponse() {
    this->initializeModel();
}

OAIDefineIndexFieldResponse::~OAIDefineIndexFieldResponse() {}

void OAIDefineIndexFieldResponse::initializeModel() {

    m_index_field_isSet = false;
    m_index_field_isValid = false;
}

void OAIDefineIndexFieldResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefineIndexFieldResponse::fromJsonObject(QJsonObject json) {

    m_index_field_isValid = ::OpenAPI::fromJsonValue(m_index_field, json[QString("IndexField")]);
    m_index_field_isSet = !json[QString("IndexField")].isNull() && m_index_field_isValid;
}

QString OAIDefineIndexFieldResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefineIndexFieldResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_index_field.isSet()) {
        obj.insert(QString("IndexField"), ::OpenAPI::toJsonValue(m_index_field));
    }
    return obj;
}

OAIIndexFieldStatus OAIDefineIndexFieldResponse::getIndexField() const {
    return m_index_field;
}
void OAIDefineIndexFieldResponse::setIndexField(const OAIIndexFieldStatus &index_field) {
    m_index_field = index_field;
    m_index_field_isSet = true;
}

bool OAIDefineIndexFieldResponse::is_index_field_Set() const{
    return m_index_field_isSet;
}

bool OAIDefineIndexFieldResponse::is_index_field_Valid() const{
    return m_index_field_isValid;
}

bool OAIDefineIndexFieldResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_index_field.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefineIndexFieldResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_index_field_isValid && true;
}

} // namespace OpenAPI
