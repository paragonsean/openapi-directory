/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITextOptions.h
 *
 * Options that define a text field in the search index.
 */

#ifndef OAITextOptions_H
#define OAITextOptions_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITextOptions : public OAIObject {
public:
    OAITextOptions();
    OAITextOptions(QString json);
    ~OAITextOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDefaultValue() const;
    void setDefaultValue(const QString &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    bool getFacetEnabled() const;
    void setFacetEnabled(const bool &facet_enabled);
    bool is_facet_enabled_Set() const;
    bool is_facet_enabled_Valid() const;

    bool getResultEnabled() const;
    void setResultEnabled(const bool &result_enabled);
    bool is_result_enabled_Set() const;
    bool is_result_enabled_Valid() const;

    QString getTextProcessor() const;
    void setTextProcessor(const QString &text_processor);
    bool is_text_processor_Set() const;
    bool is_text_processor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;

    bool m_facet_enabled;
    bool m_facet_enabled_isSet;
    bool m_facet_enabled_isValid;

    bool m_result_enabled;
    bool m_result_enabled_isSet;
    bool m_result_enabled_isValid;

    QString m_text_processor;
    bool m_text_processor_isSet;
    bool m_text_processor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITextOptions)

#endif // OAITextOptions_H
