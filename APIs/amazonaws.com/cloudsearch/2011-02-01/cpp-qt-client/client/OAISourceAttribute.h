/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceAttribute.h
 *
 * Identifies the source data for an index field. An optional data transformation can be applied to the source data when populating the index field. By default, the value of the source attribute is copied to the index field.
 */

#ifndef OAISourceAttribute_H
#define OAISourceAttribute_H

#include <QJsonObject>

#include "OAISourceAttribute_SourceDataCopy.h"
#include "OAISourceAttribute_SourceDataMap.h"
#include "OAISourceAttribute_SourceDataTrimTitle.h"
#include "OAISourceDataFunction.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourceAttribute_SourceDataCopy;
class OAISourceAttribute_SourceDataTrimTitle;
class OAISourceAttribute_SourceDataMap;

class OAISourceAttribute : public OAIObject {
public:
    OAISourceAttribute();
    OAISourceAttribute(QString json);
    ~OAISourceAttribute() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISourceDataFunction getSourceDataFunction() const;
    void setSourceDataFunction(const OAISourceDataFunction &source_data_function);
    bool is_source_data_function_Set() const;
    bool is_source_data_function_Valid() const;

    OAISourceAttribute_SourceDataCopy getSourceDataCopy() const;
    void setSourceDataCopy(const OAISourceAttribute_SourceDataCopy &source_data_copy);
    bool is_source_data_copy_Set() const;
    bool is_source_data_copy_Valid() const;

    OAISourceAttribute_SourceDataTrimTitle getSourceDataTrimTitle() const;
    void setSourceDataTrimTitle(const OAISourceAttribute_SourceDataTrimTitle &source_data_trim_title);
    bool is_source_data_trim_title_Set() const;
    bool is_source_data_trim_title_Valid() const;

    OAISourceAttribute_SourceDataMap getSourceDataMap() const;
    void setSourceDataMap(const OAISourceAttribute_SourceDataMap &source_data_map);
    bool is_source_data_map_Set() const;
    bool is_source_data_map_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISourceDataFunction m_source_data_function;
    bool m_source_data_function_isSet;
    bool m_source_data_function_isValid;

    OAISourceAttribute_SourceDataCopy m_source_data_copy;
    bool m_source_data_copy_isSet;
    bool m_source_data_copy_isValid;

    OAISourceAttribute_SourceDataTrimTitle m_source_data_trim_title;
    bool m_source_data_trim_title_isSet;
    bool m_source_data_trim_title_isValid;

    OAISourceAttribute_SourceDataMap m_source_data_map;
    bool m_source_data_map_isSet;
    bool m_source_data_map_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceAttribute)

#endif // OAISourceAttribute_H
