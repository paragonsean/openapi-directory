/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_DefineRankExpression_RankExpression_parameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_DefineRankExpression_RankExpression_parameter::OAIGET_DefineRankExpression_RankExpression_parameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_DefineRankExpression_RankExpression_parameter::OAIGET_DefineRankExpression_RankExpression_parameter() {
    this->initializeModel();
}

OAIGET_DefineRankExpression_RankExpression_parameter::~OAIGET_DefineRankExpression_RankExpression_parameter() {}

void OAIGET_DefineRankExpression_RankExpression_parameter::initializeModel() {

    m_rank_name_isSet = false;
    m_rank_name_isValid = false;

    m_rank_expression_isSet = false;
    m_rank_expression_isValid = false;
}

void OAIGET_DefineRankExpression_RankExpression_parameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_DefineRankExpression_RankExpression_parameter::fromJsonObject(QJsonObject json) {

    m_rank_name_isValid = ::OpenAPI::fromJsonValue(m_rank_name, json[QString("RankName")]);
    m_rank_name_isSet = !json[QString("RankName")].isNull() && m_rank_name_isValid;

    m_rank_expression_isValid = ::OpenAPI::fromJsonValue(m_rank_expression, json[QString("RankExpression")]);
    m_rank_expression_isSet = !json[QString("RankExpression")].isNull() && m_rank_expression_isValid;
}

QString OAIGET_DefineRankExpression_RankExpression_parameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_DefineRankExpression_RankExpression_parameter::asJsonObject() const {
    QJsonObject obj;
    if (m_rank_name_isSet) {
        obj.insert(QString("RankName"), ::OpenAPI::toJsonValue(m_rank_name));
    }
    if (m_rank_expression_isSet) {
        obj.insert(QString("RankExpression"), ::OpenAPI::toJsonValue(m_rank_expression));
    }
    return obj;
}

QString OAIGET_DefineRankExpression_RankExpression_parameter::getRankName() const {
    return m_rank_name;
}
void OAIGET_DefineRankExpression_RankExpression_parameter::setRankName(const QString &rank_name) {
    m_rank_name = rank_name;
    m_rank_name_isSet = true;
}

bool OAIGET_DefineRankExpression_RankExpression_parameter::is_rank_name_Set() const{
    return m_rank_name_isSet;
}

bool OAIGET_DefineRankExpression_RankExpression_parameter::is_rank_name_Valid() const{
    return m_rank_name_isValid;
}

QString OAIGET_DefineRankExpression_RankExpression_parameter::getRankExpression() const {
    return m_rank_expression;
}
void OAIGET_DefineRankExpression_RankExpression_parameter::setRankExpression(const QString &rank_expression) {
    m_rank_expression = rank_expression;
    m_rank_expression_isSet = true;
}

bool OAIGET_DefineRankExpression_RankExpression_parameter::is_rank_expression_Set() const{
    return m_rank_expression_isSet;
}

bool OAIGET_DefineRankExpression_RankExpression_parameter::is_rank_expression_Valid() const{
    return m_rank_expression_isValid;
}

bool OAIGET_DefineRankExpression_RankExpression_parameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rank_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_expression_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_DefineRankExpression_RankExpression_parameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_rank_name_isValid && m_rank_expression_isValid && true;
}

} // namespace OpenAPI
