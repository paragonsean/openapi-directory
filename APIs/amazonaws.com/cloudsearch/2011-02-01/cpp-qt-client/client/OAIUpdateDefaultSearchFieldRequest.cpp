/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDefaultSearchFieldRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDefaultSearchFieldRequest::OAIUpdateDefaultSearchFieldRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDefaultSearchFieldRequest::OAIUpdateDefaultSearchFieldRequest() {
    this->initializeModel();
}

OAIUpdateDefaultSearchFieldRequest::~OAIUpdateDefaultSearchFieldRequest() {}

void OAIUpdateDefaultSearchFieldRequest::initializeModel() {

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_default_search_field_isSet = false;
    m_default_search_field_isValid = false;
}

void OAIUpdateDefaultSearchFieldRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDefaultSearchFieldRequest::fromJsonObject(QJsonObject json) {

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("DomainName")]);
    m_domain_name_isSet = !json[QString("DomainName")].isNull() && m_domain_name_isValid;

    m_default_search_field_isValid = ::OpenAPI::fromJsonValue(m_default_search_field, json[QString("DefaultSearchField")]);
    m_default_search_field_isSet = !json[QString("DefaultSearchField")].isNull() && m_default_search_field_isValid;
}

QString OAIUpdateDefaultSearchFieldRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDefaultSearchFieldRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_name_isSet) {
        obj.insert(QString("DomainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_default_search_field_isSet) {
        obj.insert(QString("DefaultSearchField"), ::OpenAPI::toJsonValue(m_default_search_field));
    }
    return obj;
}

QString OAIUpdateDefaultSearchFieldRequest::getDomainName() const {
    return m_domain_name;
}
void OAIUpdateDefaultSearchFieldRequest::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAIUpdateDefaultSearchFieldRequest::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAIUpdateDefaultSearchFieldRequest::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

QString OAIUpdateDefaultSearchFieldRequest::getDefaultSearchField() const {
    return m_default_search_field;
}
void OAIUpdateDefaultSearchFieldRequest::setDefaultSearchField(const QString &default_search_field) {
    m_default_search_field = default_search_field;
    m_default_search_field_isSet = true;
}

bool OAIUpdateDefaultSearchFieldRequest::is_default_search_field_Set() const{
    return m_default_search_field_isSet;
}

bool OAIUpdateDefaultSearchFieldRequest::is_default_search_field_Valid() const{
    return m_default_search_field_isValid;
}

bool OAIUpdateDefaultSearchFieldRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_search_field_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDefaultSearchFieldRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_domain_name_isValid && m_default_search_field_isValid && true;
}

} // namespace OpenAPI
