/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomainStatus.h
 *
 * The current status of the search domain.
 */

#ifndef OAIDomainStatus_H
#define OAIDomainStatus_H

#include <QJsonObject>

#include "OAIDomainStatus_DocService.h"
#include "OAIDomainStatus_SearchService.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDomainStatus_DocService;
class OAIDomainStatus_SearchService;

class OAIDomainStatus : public OAIObject {
public:
    OAIDomainStatus();
    OAIDomainStatus(QString json);
    ~OAIDomainStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomainId() const;
    void setDomainId(const QString &domain_id);
    bool is_domain_id_Set() const;
    bool is_domain_id_Valid() const;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    bool getCreated() const;
    void setCreated(const bool &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    bool getDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    qint32 getNumSearchableDocs() const;
    void setNumSearchableDocs(const qint32 &num_searchable_docs);
    bool is_num_searchable_docs_Set() const;
    bool is_num_searchable_docs_Valid() const;

    OAIDomainStatus_DocService getDocService() const;
    void setDocService(const OAIDomainStatus_DocService &doc_service);
    bool is_doc_service_Set() const;
    bool is_doc_service_Valid() const;

    OAIDomainStatus_SearchService getSearchService() const;
    void setSearchService(const OAIDomainStatus_SearchService &search_service);
    bool is_search_service_Set() const;
    bool is_search_service_Valid() const;

    bool getRequiresIndexDocuments() const;
    void setRequiresIndexDocuments(const bool &requires_index_documents);
    bool is_requires_index_documents_Set() const;
    bool is_requires_index_documents_Valid() const;

    bool getProcessing() const;
    void setProcessing(const bool &processing);
    bool is_processing_Set() const;
    bool is_processing_Valid() const;

    QString getSearchInstanceType() const;
    void setSearchInstanceType(const QString &search_instance_type);
    bool is_search_instance_type_Set() const;
    bool is_search_instance_type_Valid() const;

    qint32 getSearchPartitionCount() const;
    void setSearchPartitionCount(const qint32 &search_partition_count);
    bool is_search_partition_count_Set() const;
    bool is_search_partition_count_Valid() const;

    qint32 getSearchInstanceCount() const;
    void setSearchInstanceCount(const qint32 &search_instance_count);
    bool is_search_instance_count_Set() const;
    bool is_search_instance_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain_id;
    bool m_domain_id_isSet;
    bool m_domain_id_isValid;

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    bool m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    qint32 m_num_searchable_docs;
    bool m_num_searchable_docs_isSet;
    bool m_num_searchable_docs_isValid;

    OAIDomainStatus_DocService m_doc_service;
    bool m_doc_service_isSet;
    bool m_doc_service_isValid;

    OAIDomainStatus_SearchService m_search_service;
    bool m_search_service_isSet;
    bool m_search_service_isValid;

    bool m_requires_index_documents;
    bool m_requires_index_documents_isSet;
    bool m_requires_index_documents_isValid;

    bool m_processing;
    bool m_processing_isSet;
    bool m_processing_isValid;

    QString m_search_instance_type;
    bool m_search_instance_type_isSet;
    bool m_search_instance_type_isValid;

    qint32 m_search_partition_count;
    bool m_search_partition_count_isSet;
    bool m_search_partition_count_isValid;

    qint32 m_search_instance_count;
    bool m_search_instance_count_isSet;
    bool m_search_instance_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomainStatus)

#endif // OAIDomainStatus_H
