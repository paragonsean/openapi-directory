/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2011-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_DefineIndexField_IndexField_parameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_DefineIndexField_IndexField_parameter::OAIGET_DefineIndexField_IndexField_parameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_DefineIndexField_IndexField_parameter::OAIGET_DefineIndexField_IndexField_parameter() {
    this->initializeModel();
}

OAIGET_DefineIndexField_IndexField_parameter::~OAIGET_DefineIndexField_IndexField_parameter() {}

void OAIGET_DefineIndexField_IndexField_parameter::initializeModel() {

    m_index_field_name_isSet = false;
    m_index_field_name_isValid = false;

    m_index_field_type_isSet = false;
    m_index_field_type_isValid = false;

    m_u_int_options_isSet = false;
    m_u_int_options_isValid = false;

    m_literal_options_isSet = false;
    m_literal_options_isValid = false;

    m_text_options_isSet = false;
    m_text_options_isValid = false;

    m_source_attributes_isSet = false;
    m_source_attributes_isValid = false;
}

void OAIGET_DefineIndexField_IndexField_parameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_DefineIndexField_IndexField_parameter::fromJsonObject(QJsonObject json) {

    m_index_field_name_isValid = ::OpenAPI::fromJsonValue(m_index_field_name, json[QString("IndexFieldName")]);
    m_index_field_name_isSet = !json[QString("IndexFieldName")].isNull() && m_index_field_name_isValid;

    m_index_field_type_isValid = ::OpenAPI::fromJsonValue(m_index_field_type, json[QString("IndexFieldType")]);
    m_index_field_type_isSet = !json[QString("IndexFieldType")].isNull() && m_index_field_type_isValid;

    m_u_int_options_isValid = ::OpenAPI::fromJsonValue(m_u_int_options, json[QString("UIntOptions")]);
    m_u_int_options_isSet = !json[QString("UIntOptions")].isNull() && m_u_int_options_isValid;

    m_literal_options_isValid = ::OpenAPI::fromJsonValue(m_literal_options, json[QString("LiteralOptions")]);
    m_literal_options_isSet = !json[QString("LiteralOptions")].isNull() && m_literal_options_isValid;

    m_text_options_isValid = ::OpenAPI::fromJsonValue(m_text_options, json[QString("TextOptions")]);
    m_text_options_isSet = !json[QString("TextOptions")].isNull() && m_text_options_isValid;

    m_source_attributes_isValid = ::OpenAPI::fromJsonValue(m_source_attributes, json[QString("SourceAttributes")]);
    m_source_attributes_isSet = !json[QString("SourceAttributes")].isNull() && m_source_attributes_isValid;
}

QString OAIGET_DefineIndexField_IndexField_parameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_DefineIndexField_IndexField_parameter::asJsonObject() const {
    QJsonObject obj;
    if (m_index_field_name_isSet) {
        obj.insert(QString("IndexFieldName"), ::OpenAPI::toJsonValue(m_index_field_name));
    }
    if (m_index_field_type.isSet()) {
        obj.insert(QString("IndexFieldType"), ::OpenAPI::toJsonValue(m_index_field_type));
    }
    if (m_u_int_options.isSet()) {
        obj.insert(QString("UIntOptions"), ::OpenAPI::toJsonValue(m_u_int_options));
    }
    if (m_literal_options.isSet()) {
        obj.insert(QString("LiteralOptions"), ::OpenAPI::toJsonValue(m_literal_options));
    }
    if (m_text_options.isSet()) {
        obj.insert(QString("TextOptions"), ::OpenAPI::toJsonValue(m_text_options));
    }
    if (m_source_attributes.isSet()) {
        obj.insert(QString("SourceAttributes"), ::OpenAPI::toJsonValue(m_source_attributes));
    }
    return obj;
}

QString OAIGET_DefineIndexField_IndexField_parameter::getIndexFieldName() const {
    return m_index_field_name;
}
void OAIGET_DefineIndexField_IndexField_parameter::setIndexFieldName(const QString &index_field_name) {
    m_index_field_name = index_field_name;
    m_index_field_name_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_index_field_name_Set() const{
    return m_index_field_name_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_index_field_name_Valid() const{
    return m_index_field_name_isValid;
}

OAIIndexFieldType OAIGET_DefineIndexField_IndexField_parameter::getIndexFieldType() const {
    return m_index_field_type;
}
void OAIGET_DefineIndexField_IndexField_parameter::setIndexFieldType(const OAIIndexFieldType &index_field_type) {
    m_index_field_type = index_field_type;
    m_index_field_type_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_index_field_type_Set() const{
    return m_index_field_type_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_index_field_type_Valid() const{
    return m_index_field_type_isValid;
}

OAIGET_DefineIndexField_IndexField_parameter_UIntOptions OAIGET_DefineIndexField_IndexField_parameter::getUIntOptions() const {
    return m_u_int_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setUIntOptions(const OAIGET_DefineIndexField_IndexField_parameter_UIntOptions &u_int_options) {
    m_u_int_options = u_int_options;
    m_u_int_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_u_int_options_Set() const{
    return m_u_int_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_u_int_options_Valid() const{
    return m_u_int_options_isValid;
}

OAIGET_DefineIndexField_IndexField_parameter_LiteralOptions OAIGET_DefineIndexField_IndexField_parameter::getLiteralOptions() const {
    return m_literal_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setLiteralOptions(const OAIGET_DefineIndexField_IndexField_parameter_LiteralOptions &literal_options) {
    m_literal_options = literal_options;
    m_literal_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_literal_options_Set() const{
    return m_literal_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_literal_options_Valid() const{
    return m_literal_options_isValid;
}

OAIGET_DefineIndexField_IndexField_parameter_TextOptions OAIGET_DefineIndexField_IndexField_parameter::getTextOptions() const {
    return m_text_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setTextOptions(const OAIGET_DefineIndexField_IndexField_parameter_TextOptions &text_options) {
    m_text_options = text_options;
    m_text_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_text_options_Set() const{
    return m_text_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_text_options_Valid() const{
    return m_text_options_isValid;
}

QList OAIGET_DefineIndexField_IndexField_parameter::getSourceAttributes() const {
    return m_source_attributes;
}
void OAIGET_DefineIndexField_IndexField_parameter::setSourceAttributes(const QList &source_attributes) {
    m_source_attributes = source_attributes;
    m_source_attributes_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_source_attributes_Set() const{
    return m_source_attributes_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_source_attributes_Valid() const{
    return m_source_attributes_isValid;
}

bool OAIGET_DefineIndexField_IndexField_parameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_index_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_field_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_u_int_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_literal_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_DefineIndexField_IndexField_parameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_index_field_name_isValid && m_index_field_type_isValid && true;
}

} // namespace OpenAPI
