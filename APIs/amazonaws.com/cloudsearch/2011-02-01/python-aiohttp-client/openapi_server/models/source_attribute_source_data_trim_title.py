# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class SourceAttributeSourceDataTrimTitle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_name: str=None, default_value: str=None, separator: str=None, language: str=None):
        """SourceAttributeSourceDataTrimTitle - a model defined in OpenAPI

        :param source_name: The source_name of this SourceAttributeSourceDataTrimTitle.
        :param default_value: The default_value of this SourceAttributeSourceDataTrimTitle.
        :param separator: The separator of this SourceAttributeSourceDataTrimTitle.
        :param language: The language of this SourceAttributeSourceDataTrimTitle.
        """
        self.openapi_types = {
            'source_name': str,
            'default_value': str,
            'separator': str,
            'language': str
        }

        self.attribute_map = {
            'source_name': 'SourceName',
            'default_value': 'DefaultValue',
            'separator': 'Separator',
            'language': 'Language'
        }

        self._source_name = source_name
        self._default_value = default_value
        self._separator = separator
        self._language = language

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceAttributeSourceDataTrimTitle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceAttribute_SourceDataTrimTitle of this SourceAttributeSourceDataTrimTitle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_name(self):
        """Gets the source_name of this SourceAttributeSourceDataTrimTitle.


        :return: The source_name of this SourceAttributeSourceDataTrimTitle.
        :rtype: str
        """
        return self._source_name

    @source_name.setter
    def source_name(self, source_name):
        """Sets the source_name of this SourceAttributeSourceDataTrimTitle.


        :param source_name: The source_name of this SourceAttributeSourceDataTrimTitle.
        :type source_name: str
        """
        if source_name is None:
            raise ValueError("Invalid value for `source_name`, must not be `None`")

        self._source_name = source_name

    @property
    def default_value(self):
        """Gets the default_value of this SourceAttributeSourceDataTrimTitle.


        :return: The default_value of this SourceAttributeSourceDataTrimTitle.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this SourceAttributeSourceDataTrimTitle.


        :param default_value: The default_value of this SourceAttributeSourceDataTrimTitle.
        :type default_value: str
        """

        self._default_value = default_value

    @property
    def separator(self):
        """Gets the separator of this SourceAttributeSourceDataTrimTitle.


        :return: The separator of this SourceAttributeSourceDataTrimTitle.
        :rtype: str
        """
        return self._separator

    @separator.setter
    def separator(self, separator):
        """Sets the separator of this SourceAttributeSourceDataTrimTitle.


        :param separator: The separator of this SourceAttributeSourceDataTrimTitle.
        :type separator: str
        """

        self._separator = separator

    @property
    def language(self):
        """Gets the language of this SourceAttributeSourceDataTrimTitle.

        An <a href=\"http://tools.ietf.org/html/rfc4646\">IETF RFC 4646</a> language code. Only the primary language is considered. English (en) is currently the only supported language.

        :return: The language of this SourceAttributeSourceDataTrimTitle.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this SourceAttributeSourceDataTrimTitle.

        An <a href=\"http://tools.ietf.org/html/rfc4646\">IETF RFC 4646</a> language code. Only the primary language is considered. English (en) is currently the only supported language.

        :param language: The language of this SourceAttributeSourceDataTrimTitle.
        :type language: str
        """
        if language is not None and not re.search(r'[a-zA-Z]{2,8}(?:-[a-zA-Z]{2,8})*', language):
            raise ValueError("Invalid value for `language`, must be a follow pattern or equal to `/[a-zA-Z]{2,8}(?:-[a-zA-Z]{2,8})*/`")

        self._language = language
