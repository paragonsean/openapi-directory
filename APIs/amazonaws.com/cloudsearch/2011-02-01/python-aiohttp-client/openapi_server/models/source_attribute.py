# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_attribute_source_data_copy import SourceAttributeSourceDataCopy
from openapi_server.models.source_attribute_source_data_map import SourceAttributeSourceDataMap
from openapi_server.models.source_attribute_source_data_trim_title import SourceAttributeSourceDataTrimTitle
from openapi_server.models.source_data_function import SourceDataFunction
from openapi_server import util


class SourceAttribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_data_function: SourceDataFunction=None, source_data_copy: SourceAttributeSourceDataCopy=None, source_data_trim_title: SourceAttributeSourceDataTrimTitle=None, source_data_map: SourceAttributeSourceDataMap=None):
        """SourceAttribute - a model defined in OpenAPI

        :param source_data_function: The source_data_function of this SourceAttribute.
        :param source_data_copy: The source_data_copy of this SourceAttribute.
        :param source_data_trim_title: The source_data_trim_title of this SourceAttribute.
        :param source_data_map: The source_data_map of this SourceAttribute.
        """
        self.openapi_types = {
            'source_data_function': SourceDataFunction,
            'source_data_copy': SourceAttributeSourceDataCopy,
            'source_data_trim_title': SourceAttributeSourceDataTrimTitle,
            'source_data_map': SourceAttributeSourceDataMap
        }

        self.attribute_map = {
            'source_data_function': 'SourceDataFunction',
            'source_data_copy': 'SourceDataCopy',
            'source_data_trim_title': 'SourceDataTrimTitle',
            'source_data_map': 'SourceDataMap'
        }

        self._source_data_function = source_data_function
        self._source_data_copy = source_data_copy
        self._source_data_trim_title = source_data_trim_title
        self._source_data_map = source_data_map

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceAttribute of this SourceAttribute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_data_function(self):
        """Gets the source_data_function of this SourceAttribute.


        :return: The source_data_function of this SourceAttribute.
        :rtype: SourceDataFunction
        """
        return self._source_data_function

    @source_data_function.setter
    def source_data_function(self, source_data_function):
        """Sets the source_data_function of this SourceAttribute.


        :param source_data_function: The source_data_function of this SourceAttribute.
        :type source_data_function: SourceDataFunction
        """
        if source_data_function is None:
            raise ValueError("Invalid value for `source_data_function`, must not be `None`")

        self._source_data_function = source_data_function

    @property
    def source_data_copy(self):
        """Gets the source_data_copy of this SourceAttribute.


        :return: The source_data_copy of this SourceAttribute.
        :rtype: SourceAttributeSourceDataCopy
        """
        return self._source_data_copy

    @source_data_copy.setter
    def source_data_copy(self, source_data_copy):
        """Sets the source_data_copy of this SourceAttribute.


        :param source_data_copy: The source_data_copy of this SourceAttribute.
        :type source_data_copy: SourceAttributeSourceDataCopy
        """

        self._source_data_copy = source_data_copy

    @property
    def source_data_trim_title(self):
        """Gets the source_data_trim_title of this SourceAttribute.


        :return: The source_data_trim_title of this SourceAttribute.
        :rtype: SourceAttributeSourceDataTrimTitle
        """
        return self._source_data_trim_title

    @source_data_trim_title.setter
    def source_data_trim_title(self, source_data_trim_title):
        """Sets the source_data_trim_title of this SourceAttribute.


        :param source_data_trim_title: The source_data_trim_title of this SourceAttribute.
        :type source_data_trim_title: SourceAttributeSourceDataTrimTitle
        """

        self._source_data_trim_title = source_data_trim_title

    @property
    def source_data_map(self):
        """Gets the source_data_map of this SourceAttribute.


        :return: The source_data_map of this SourceAttribute.
        :rtype: SourceAttributeSourceDataMap
        """
        return self._source_data_map

    @source_data_map.setter
    def source_data_map(self, source_data_map):
        """Sets the source_data_map of this SourceAttribute.


        :param source_data_map: The source_data_map of this SourceAttribute.
        :type source_data_map: SourceAttributeSourceDataMap
        """

        self._source_data_map = source_data_map
