# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TextOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_value: str=None, facet_enabled: bool=None, result_enabled: bool=None, text_processor: str=None):
        """TextOptions - a model defined in OpenAPI

        :param default_value: The default_value of this TextOptions.
        :param facet_enabled: The facet_enabled of this TextOptions.
        :param result_enabled: The result_enabled of this TextOptions.
        :param text_processor: The text_processor of this TextOptions.
        """
        self.openapi_types = {
            'default_value': str,
            'facet_enabled': bool,
            'result_enabled': bool,
            'text_processor': str
        }

        self.attribute_map = {
            'default_value': 'DefaultValue',
            'facet_enabled': 'FacetEnabled',
            'result_enabled': 'ResultEnabled',
            'text_processor': 'TextProcessor'
        }

        self._default_value = default_value
        self._facet_enabled = facet_enabled
        self._result_enabled = result_enabled
        self._text_processor = text_processor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextOptions of this TextOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_value(self):
        """Gets the default_value of this TextOptions.


        :return: The default_value of this TextOptions.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this TextOptions.


        :param default_value: The default_value of this TextOptions.
        :type default_value: str
        """

        self._default_value = default_value

    @property
    def facet_enabled(self):
        """Gets the facet_enabled of this TextOptions.


        :return: The facet_enabled of this TextOptions.
        :rtype: bool
        """
        return self._facet_enabled

    @facet_enabled.setter
    def facet_enabled(self, facet_enabled):
        """Sets the facet_enabled of this TextOptions.


        :param facet_enabled: The facet_enabled of this TextOptions.
        :type facet_enabled: bool
        """

        self._facet_enabled = facet_enabled

    @property
    def result_enabled(self):
        """Gets the result_enabled of this TextOptions.


        :return: The result_enabled of this TextOptions.
        :rtype: bool
        """
        return self._result_enabled

    @result_enabled.setter
    def result_enabled(self, result_enabled):
        """Sets the result_enabled of this TextOptions.


        :param result_enabled: The result_enabled of this TextOptions.
        :type result_enabled: bool
        """

        self._result_enabled = result_enabled

    @property
    def text_processor(self):
        """Gets the text_processor of this TextOptions.


        :return: The text_processor of this TextOptions.
        :rtype: str
        """
        return self._text_processor

    @text_processor.setter
    def text_processor(self, text_processor):
        """Sets the text_processor of this TextOptions.


        :param text_processor: The text_processor of this TextOptions.
        :type text_processor: str
        """

        self._text_processor = text_processor
