# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TextArrayOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_value: str=None, source_fields: str=None, return_enabled: bool=None, highlight_enabled: bool=None, analysis_scheme: str=None):
        """TextArrayOptions - a model defined in OpenAPI

        :param default_value: The default_value of this TextArrayOptions.
        :param source_fields: The source_fields of this TextArrayOptions.
        :param return_enabled: The return_enabled of this TextArrayOptions.
        :param highlight_enabled: The highlight_enabled of this TextArrayOptions.
        :param analysis_scheme: The analysis_scheme of this TextArrayOptions.
        """
        self.openapi_types = {
            'default_value': str,
            'source_fields': str,
            'return_enabled': bool,
            'highlight_enabled': bool,
            'analysis_scheme': str
        }

        self.attribute_map = {
            'default_value': 'DefaultValue',
            'source_fields': 'SourceFields',
            'return_enabled': 'ReturnEnabled',
            'highlight_enabled': 'HighlightEnabled',
            'analysis_scheme': 'AnalysisScheme'
        }

        self._default_value = default_value
        self._source_fields = source_fields
        self._return_enabled = return_enabled
        self._highlight_enabled = highlight_enabled
        self._analysis_scheme = analysis_scheme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextArrayOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextArrayOptions of this TextArrayOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_value(self):
        """Gets the default_value of this TextArrayOptions.


        :return: The default_value of this TextArrayOptions.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this TextArrayOptions.


        :param default_value: The default_value of this TextArrayOptions.
        :type default_value: str
        """

        self._default_value = default_value

    @property
    def source_fields(self):
        """Gets the source_fields of this TextArrayOptions.


        :return: The source_fields of this TextArrayOptions.
        :rtype: str
        """
        return self._source_fields

    @source_fields.setter
    def source_fields(self, source_fields):
        """Sets the source_fields of this TextArrayOptions.


        :param source_fields: The source_fields of this TextArrayOptions.
        :type source_fields: str
        """

        self._source_fields = source_fields

    @property
    def return_enabled(self):
        """Gets the return_enabled of this TextArrayOptions.


        :return: The return_enabled of this TextArrayOptions.
        :rtype: bool
        """
        return self._return_enabled

    @return_enabled.setter
    def return_enabled(self, return_enabled):
        """Sets the return_enabled of this TextArrayOptions.


        :param return_enabled: The return_enabled of this TextArrayOptions.
        :type return_enabled: bool
        """

        self._return_enabled = return_enabled

    @property
    def highlight_enabled(self):
        """Gets the highlight_enabled of this TextArrayOptions.


        :return: The highlight_enabled of this TextArrayOptions.
        :rtype: bool
        """
        return self._highlight_enabled

    @highlight_enabled.setter
    def highlight_enabled(self, highlight_enabled):
        """Sets the highlight_enabled of this TextArrayOptions.


        :param highlight_enabled: The highlight_enabled of this TextArrayOptions.
        :type highlight_enabled: bool
        """

        self._highlight_enabled = highlight_enabled

    @property
    def analysis_scheme(self):
        """Gets the analysis_scheme of this TextArrayOptions.


        :return: The analysis_scheme of this TextArrayOptions.
        :rtype: str
        """
        return self._analysis_scheme

    @analysis_scheme.setter
    def analysis_scheme(self, analysis_scheme):
        """Sets the analysis_scheme of this TextArrayOptions.


        :param analysis_scheme: The analysis_scheme of this TextArrayOptions.
        :type analysis_scheme: str
        """

        self._analysis_scheme = analysis_scheme
