# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete_index_field_response_index_field import DeleteIndexFieldResponseIndexField
from openapi_server import util


class DeleteIndexFieldResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index_field: DeleteIndexFieldResponseIndexField=None):
        """DeleteIndexFieldResponse - a model defined in OpenAPI

        :param index_field: The index_field of this DeleteIndexFieldResponse.
        """
        self.openapi_types = {
            'index_field': DeleteIndexFieldResponseIndexField
        }

        self.attribute_map = {
            'index_field': 'IndexField'
        }

        self._index_field = index_field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteIndexFieldResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteIndexFieldResponse of this DeleteIndexFieldResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index_field(self):
        """Gets the index_field of this DeleteIndexFieldResponse.


        :return: The index_field of this DeleteIndexFieldResponse.
        :rtype: DeleteIndexFieldResponseIndexField
        """
        return self._index_field

    @index_field.setter
    def index_field(self, index_field):
        """Sets the index_field of this DeleteIndexFieldResponse.


        :param index_field: The index_field of this DeleteIndexFieldResponse.
        :type index_field: DeleteIndexFieldResponseIndexField
        """
        if index_field is None:
            raise ValueError("Invalid value for `index_field`, must not be `None`")

        self._index_field = index_field
