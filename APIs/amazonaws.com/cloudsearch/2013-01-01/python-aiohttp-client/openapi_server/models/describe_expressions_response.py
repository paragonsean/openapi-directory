# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeExpressionsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expressions: List=None):
        """DescribeExpressionsResponse - a model defined in OpenAPI

        :param expressions: The expressions of this DescribeExpressionsResponse.
        """
        self.openapi_types = {
            'expressions': List
        }

        self.attribute_map = {
            'expressions': 'Expressions'
        }

        self._expressions = expressions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeExpressionsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeExpressionsResponse of this DescribeExpressionsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expressions(self):
        """Gets the expressions of this DescribeExpressionsResponse.


        :return: The expressions of this DescribeExpressionsResponse.
        :rtype: List
        """
        return self._expressions

    @expressions.setter
    def expressions(self, expressions):
        """Sets the expressions of this DescribeExpressionsResponse.


        :param expressions: The expressions of this DescribeExpressionsResponse.
        :type expressions: List
        """
        if expressions is None:
            raise ValueError("Invalid value for `expressions`, must not be `None`")

        self._expressions = expressions
