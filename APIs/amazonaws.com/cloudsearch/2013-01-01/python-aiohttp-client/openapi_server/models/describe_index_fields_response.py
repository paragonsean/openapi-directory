# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeIndexFieldsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index_fields: List=None):
        """DescribeIndexFieldsResponse - a model defined in OpenAPI

        :param index_fields: The index_fields of this DescribeIndexFieldsResponse.
        """
        self.openapi_types = {
            'index_fields': List
        }

        self.attribute_map = {
            'index_fields': 'IndexFields'
        }

        self._index_fields = index_fields

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeIndexFieldsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeIndexFieldsResponse of this DescribeIndexFieldsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index_fields(self):
        """Gets the index_fields of this DescribeIndexFieldsResponse.


        :return: The index_fields of this DescribeIndexFieldsResponse.
        :rtype: List
        """
        return self._index_fields

    @index_fields.setter
    def index_fields(self, index_fields):
        """Sets the index_fields of this DescribeIndexFieldsResponse.


        :param index_fields: The index_fields of this DescribeIndexFieldsResponse.
        :type index_fields: List
        """
        if index_fields is None:
            raise ValueError("Invalid value for `index_fields`, must not be `None`")

        self._index_fields = index_fields
