# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_suggester_options import DocumentSuggesterOptions
import re
from openapi_server import util


class GETDefineSuggesterSuggesterParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, suggester_name: str=None, document_suggester_options: DocumentSuggesterOptions=None):
        """GETDefineSuggesterSuggesterParameter - a model defined in OpenAPI

        :param suggester_name: The suggester_name of this GETDefineSuggesterSuggesterParameter.
        :param document_suggester_options: The document_suggester_options of this GETDefineSuggesterSuggesterParameter.
        """
        self.openapi_types = {
            'suggester_name': str,
            'document_suggester_options': DocumentSuggesterOptions
        }

        self.attribute_map = {
            'suggester_name': 'SuggesterName',
            'document_suggester_options': 'DocumentSuggesterOptions'
        }

        self._suggester_name = suggester_name
        self._document_suggester_options = document_suggester_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GETDefineSuggesterSuggesterParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GET_DefineSuggester_Suggester_parameter of this GETDefineSuggesterSuggesterParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def suggester_name(self):
        """Gets the suggester_name of this GETDefineSuggesterSuggesterParameter.

        Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).

        :return: The suggester_name of this GETDefineSuggesterSuggesterParameter.
        :rtype: str
        """
        return self._suggester_name

    @suggester_name.setter
    def suggester_name(self, suggester_name):
        """Sets the suggester_name of this GETDefineSuggesterSuggesterParameter.

        Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).

        :param suggester_name: The suggester_name of this GETDefineSuggesterSuggesterParameter.
        :type suggester_name: str
        """
        if suggester_name is None:
            raise ValueError("Invalid value for `suggester_name`, must not be `None`")
        if suggester_name is not None and len(suggester_name) > 64:
            raise ValueError("Invalid value for `suggester_name`, length must be less than or equal to `64`")
        if suggester_name is not None and len(suggester_name) < 1:
            raise ValueError("Invalid value for `suggester_name`, length must be greater than or equal to `1`")
        if suggester_name is not None and not re.search(r'[a-z][a-z0-9_]*', suggester_name):
            raise ValueError("Invalid value for `suggester_name`, must be a follow pattern or equal to `/[a-z][a-z0-9_]*/`")

        self._suggester_name = suggester_name

    @property
    def document_suggester_options(self):
        """Gets the document_suggester_options of this GETDefineSuggesterSuggesterParameter.


        :return: The document_suggester_options of this GETDefineSuggesterSuggesterParameter.
        :rtype: DocumentSuggesterOptions
        """
        return self._document_suggester_options

    @document_suggester_options.setter
    def document_suggester_options(self, document_suggester_options):
        """Sets the document_suggester_options of this GETDefineSuggesterSuggesterParameter.


        :param document_suggester_options: The document_suggester_options of this GETDefineSuggesterSuggesterParameter.
        :type document_suggester_options: DocumentSuggesterOptions
        """
        if document_suggester_options is None:
            raise ValueError("Invalid value for `document_suggester_options`, must not be `None`")

        self._document_suggester_options = document_suggester_options
