# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tls_security_policy import TLSSecurityPolicy
from openapi_server import util


class DomainEndpointOptionsStatusOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enforce_https: bool=None, tls_security_policy: TLSSecurityPolicy=None):
        """DomainEndpointOptionsStatusOptions - a model defined in OpenAPI

        :param enforce_https: The enforce_https of this DomainEndpointOptionsStatusOptions.
        :param tls_security_policy: The tls_security_policy of this DomainEndpointOptionsStatusOptions.
        """
        self.openapi_types = {
            'enforce_https': bool,
            'tls_security_policy': TLSSecurityPolicy
        }

        self.attribute_map = {
            'enforce_https': 'EnforceHTTPS',
            'tls_security_policy': 'TLSSecurityPolicy'
        }

        self._enforce_https = enforce_https
        self._tls_security_policy = tls_security_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainEndpointOptionsStatusOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainEndpointOptionsStatus_Options of this DomainEndpointOptionsStatusOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enforce_https(self):
        """Gets the enforce_https of this DomainEndpointOptionsStatusOptions.


        :return: The enforce_https of this DomainEndpointOptionsStatusOptions.
        :rtype: bool
        """
        return self._enforce_https

    @enforce_https.setter
    def enforce_https(self, enforce_https):
        """Sets the enforce_https of this DomainEndpointOptionsStatusOptions.


        :param enforce_https: The enforce_https of this DomainEndpointOptionsStatusOptions.
        :type enforce_https: bool
        """

        self._enforce_https = enforce_https

    @property
    def tls_security_policy(self):
        """Gets the tls_security_policy of this DomainEndpointOptionsStatusOptions.


        :return: The tls_security_policy of this DomainEndpointOptionsStatusOptions.
        :rtype: TLSSecurityPolicy
        """
        return self._tls_security_policy

    @tls_security_policy.setter
    def tls_security_policy(self, tls_security_policy):
        """Sets the tls_security_policy of this DomainEndpointOptionsStatusOptions.


        :param tls_security_policy: The tls_security_policy of this DomainEndpointOptionsStatusOptions.
        :type tls_security_policy: TLSSecurityPolicy
        """

        self._tls_security_policy = tls_security_policy
