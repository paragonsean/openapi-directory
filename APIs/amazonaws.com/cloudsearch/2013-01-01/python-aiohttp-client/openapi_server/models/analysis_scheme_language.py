# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnalysisSchemeLanguage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AR = 'ar'
    BG = 'bg'
    CA = 'ca'
    CS = 'cs'
    DA = 'da'
    DE = 'de'
    EL = 'el'
    EN = 'en'
    ES = 'es'
    EU = 'eu'
    FA = 'fa'
    FI = 'fi'
    FR = 'fr'
    GA = 'ga'
    GL = 'gl'
    HE = 'he'
    HI = 'hi'
    HU = 'hu'
    HY = 'hy'
    ID = 'id'
    IT = 'it'
    JA = 'ja'
    KO = 'ko'
    LV = 'lv'
    MUL = 'mul'
    NL = 'nl'
    NO = 'no'
    PT = 'pt'
    RO = 'ro'
    RU = 'ru'
    SV = 'sv'
    TH = 'th'
    TR = 'tr'
    ZH_MINUS_HANS = 'zh-Hans'
    ZH_MINUS_HANT = 'zh-Hant'

    def __init__(self):
        """AnalysisSchemeLanguage - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalysisSchemeLanguage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalysisSchemeLanguage of this AnalysisSchemeLanguage.
        """
        return util.deserialize_model(dikt, cls)
