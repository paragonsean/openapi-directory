# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeIndexFieldsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, field_names: List=None, deployed: bool=None):
        """DescribeIndexFieldsRequest - a model defined in OpenAPI

        :param domain_name: The domain_name of this DescribeIndexFieldsRequest.
        :param field_names: The field_names of this DescribeIndexFieldsRequest.
        :param deployed: The deployed of this DescribeIndexFieldsRequest.
        """
        self.openapi_types = {
            'domain_name': str,
            'field_names': List,
            'deployed': bool
        }

        self.attribute_map = {
            'domain_name': 'DomainName',
            'field_names': 'FieldNames',
            'deployed': 'Deployed'
        }

        self._domain_name = domain_name
        self._field_names = field_names
        self._deployed = deployed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeIndexFieldsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeIndexFieldsRequest of this DescribeIndexFieldsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self):
        """Gets the domain_name of this DescribeIndexFieldsRequest.


        :return: The domain_name of this DescribeIndexFieldsRequest.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this DescribeIndexFieldsRequest.


        :param domain_name: The domain_name of this DescribeIndexFieldsRequest.
        :type domain_name: str
        """
        if domain_name is None:
            raise ValueError("Invalid value for `domain_name`, must not be `None`")

        self._domain_name = domain_name

    @property
    def field_names(self):
        """Gets the field_names of this DescribeIndexFieldsRequest.


        :return: The field_names of this DescribeIndexFieldsRequest.
        :rtype: List
        """
        return self._field_names

    @field_names.setter
    def field_names(self, field_names):
        """Sets the field_names of this DescribeIndexFieldsRequest.


        :param field_names: The field_names of this DescribeIndexFieldsRequest.
        :type field_names: List
        """

        self._field_names = field_names

    @property
    def deployed(self):
        """Gets the deployed of this DescribeIndexFieldsRequest.


        :return: The deployed of this DescribeIndexFieldsRequest.
        :rtype: bool
        """
        return self._deployed

    @deployed.setter
    def deployed(self, deployed):
        """Sets the deployed of this DescribeIndexFieldsRequest.


        :param deployed: The deployed of this DescribeIndexFieldsRequest.
        :type deployed: bool
        """

        self._deployed = deployed
