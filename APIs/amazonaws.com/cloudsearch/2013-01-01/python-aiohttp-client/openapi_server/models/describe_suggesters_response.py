# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeSuggestersResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, suggesters: List=None):
        """DescribeSuggestersResponse - a model defined in OpenAPI

        :param suggesters: The suggesters of this DescribeSuggestersResponse.
        """
        self.openapi_types = {
            'suggesters': List
        }

        self.attribute_map = {
            'suggesters': 'Suggesters'
        }

        self._suggesters = suggesters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeSuggestersResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeSuggestersResponse of this DescribeSuggestersResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def suggesters(self):
        """Gets the suggesters of this DescribeSuggestersResponse.


        :return: The suggesters of this DescribeSuggestersResponse.
        :rtype: List
        """
        return self._suggesters

    @suggesters.setter
    def suggesters(self, suggesters):
        """Sets the suggesters of this DescribeSuggestersResponse.


        :param suggesters: The suggesters of this DescribeSuggestersResponse.
        :type suggesters: List
        """
        if suggesters is None:
            raise ValueError("Invalid value for `suggesters`, must not be `None`")

        self._suggesters = suggesters
