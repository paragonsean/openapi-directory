# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.suggester_fuzzy_matching import SuggesterFuzzyMatching
from openapi_server import util


class DocumentSuggesterOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_field: str=None, fuzzy_matching: SuggesterFuzzyMatching=None, sort_expression: str=None):
        """DocumentSuggesterOptions - a model defined in OpenAPI

        :param source_field: The source_field of this DocumentSuggesterOptions.
        :param fuzzy_matching: The fuzzy_matching of this DocumentSuggesterOptions.
        :param sort_expression: The sort_expression of this DocumentSuggesterOptions.
        """
        self.openapi_types = {
            'source_field': str,
            'fuzzy_matching': SuggesterFuzzyMatching,
            'sort_expression': str
        }

        self.attribute_map = {
            'source_field': 'SourceField',
            'fuzzy_matching': 'FuzzyMatching',
            'sort_expression': 'SortExpression'
        }

        self._source_field = source_field
        self._fuzzy_matching = fuzzy_matching
        self._sort_expression = sort_expression

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentSuggesterOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentSuggesterOptions of this DocumentSuggesterOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_field(self):
        """Gets the source_field of this DocumentSuggesterOptions.


        :return: The source_field of this DocumentSuggesterOptions.
        :rtype: str
        """
        return self._source_field

    @source_field.setter
    def source_field(self, source_field):
        """Sets the source_field of this DocumentSuggesterOptions.


        :param source_field: The source_field of this DocumentSuggesterOptions.
        :type source_field: str
        """
        if source_field is None:
            raise ValueError("Invalid value for `source_field`, must not be `None`")

        self._source_field = source_field

    @property
    def fuzzy_matching(self):
        """Gets the fuzzy_matching of this DocumentSuggesterOptions.


        :return: The fuzzy_matching of this DocumentSuggesterOptions.
        :rtype: SuggesterFuzzyMatching
        """
        return self._fuzzy_matching

    @fuzzy_matching.setter
    def fuzzy_matching(self, fuzzy_matching):
        """Sets the fuzzy_matching of this DocumentSuggesterOptions.


        :param fuzzy_matching: The fuzzy_matching of this DocumentSuggesterOptions.
        :type fuzzy_matching: SuggesterFuzzyMatching
        """

        self._fuzzy_matching = fuzzy_matching

    @property
    def sort_expression(self):
        """Gets the sort_expression of this DocumentSuggesterOptions.


        :return: The sort_expression of this DocumentSuggesterOptions.
        :rtype: str
        """
        return self._sort_expression

    @sort_expression.setter
    def sort_expression(self, sort_expression):
        """Sets the sort_expression of this DocumentSuggesterOptions.


        :param sort_expression: The sort_expression of this DocumentSuggesterOptions.
        :type sort_expression: str
        """

        self._sort_expression = sort_expression
