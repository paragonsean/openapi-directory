/*
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The instance type (such as &lt;code&gt;search.m1.small&lt;/code&gt;) on which an index partition is hosted.
 */
@JsonAdapter(PartitionInstanceType.Adapter.class)
public enum PartitionInstanceType {
  
  M1_SMALL("search.m1.small"),
  
  M1_LARGE("search.m1.large"),
  
  M2_XLARGE("search.m2.xlarge"),
  
  M2_2XLARGE("search.m2.2xlarge"),
  
  M3_MEDIUM("search.m3.medium"),
  
  M3_LARGE("search.m3.large"),
  
  M3_XLARGE("search.m3.xlarge"),
  
  M3_2XLARGE("search.m3.2xlarge"),
  
  SMALL("search.small"),
  
  MEDIUM("search.medium"),
  
  LARGE("search.large"),
  
  XLARGE("search.xlarge"),
  
  _2XLARGE("search.2xlarge"),
  
  PREVIOUSGENERATION_SMALL("search.previousgeneration.small"),
  
  PREVIOUSGENERATION_LARGE("search.previousgeneration.large"),
  
  PREVIOUSGENERATION_XLARGE("search.previousgeneration.xlarge"),
  
  PREVIOUSGENERATION_2XLARGE("search.previousgeneration.2xlarge");

  private String value;

  PartitionInstanceType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PartitionInstanceType fromValue(String value) {
    for (PartitionInstanceType b : PartitionInstanceType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<PartitionInstanceType> {
    @Override
    public void write(final JsonWriter jsonWriter, final PartitionInstanceType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PartitionInstanceType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PartitionInstanceType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    PartitionInstanceType.fromValue(value);
  }
}

