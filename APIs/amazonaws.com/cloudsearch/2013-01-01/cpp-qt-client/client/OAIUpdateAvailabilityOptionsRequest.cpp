/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAvailabilityOptionsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAvailabilityOptionsRequest::OAIUpdateAvailabilityOptionsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAvailabilityOptionsRequest::OAIUpdateAvailabilityOptionsRequest() {
    this->initializeModel();
}

OAIUpdateAvailabilityOptionsRequest::~OAIUpdateAvailabilityOptionsRequest() {}

void OAIUpdateAvailabilityOptionsRequest::initializeModel() {

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_multi_az_isSet = false;
    m_multi_az_isValid = false;
}

void OAIUpdateAvailabilityOptionsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAvailabilityOptionsRequest::fromJsonObject(QJsonObject json) {

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("DomainName")]);
    m_domain_name_isSet = !json[QString("DomainName")].isNull() && m_domain_name_isValid;

    m_multi_az_isValid = ::OpenAPI::fromJsonValue(m_multi_az, json[QString("MultiAZ")]);
    m_multi_az_isSet = !json[QString("MultiAZ")].isNull() && m_multi_az_isValid;
}

QString OAIUpdateAvailabilityOptionsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAvailabilityOptionsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_name_isSet) {
        obj.insert(QString("DomainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_multi_az_isSet) {
        obj.insert(QString("MultiAZ"), ::OpenAPI::toJsonValue(m_multi_az));
    }
    return obj;
}

QString OAIUpdateAvailabilityOptionsRequest::getDomainName() const {
    return m_domain_name;
}
void OAIUpdateAvailabilityOptionsRequest::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAIUpdateAvailabilityOptionsRequest::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAIUpdateAvailabilityOptionsRequest::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

bool OAIUpdateAvailabilityOptionsRequest::getMultiAz() const {
    return m_multi_az;
}
void OAIUpdateAvailabilityOptionsRequest::setMultiAz(const bool &multi_az) {
    m_multi_az = multi_az;
    m_multi_az_isSet = true;
}

bool OAIUpdateAvailabilityOptionsRequest::is_multi_az_Set() const{
    return m_multi_az_isSet;
}

bool OAIUpdateAvailabilityOptionsRequest::is_multi_az_Valid() const{
    return m_multi_az_isValid;
}

bool OAIUpdateAvailabilityOptionsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_multi_az_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAvailabilityOptionsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_domain_name_isValid && m_multi_az_isValid && true;
}

} // namespace OpenAPI
