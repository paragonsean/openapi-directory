/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalysisSchemeLanguage.h
 *
 * An &lt;a href&#x3D;\&quot;http://tools.ietf.org/html/rfc4646\&quot; target&#x3D;\&quot;_blank\&quot;&gt;IETF RFC 4646&lt;/a&gt; language code or &lt;code&gt;mul&lt;/code&gt; for multiple languages.
 */

#ifndef OAIAnalysisSchemeLanguage_H
#define OAIAnalysisSchemeLanguage_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnalysisSchemeLanguage : public OAIEnum {
public:
    OAIAnalysisSchemeLanguage();
    OAIAnalysisSchemeLanguage(QString json);
    ~OAIAnalysisSchemeLanguage() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIAnalysisSchemeLanguage {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        AR, 
        BG, 
        CA, 
        CS, 
        DA, 
        DE, 
        EL, 
        EN, 
        ES, 
        EU, 
        FA, 
        FI, 
        FR, 
        GA, 
        GL, 
        HE, 
        HI, 
        HU, 
        HY, 
        ID, 
        IT, 
        JA, 
        KO, 
        LV, 
        MUL, 
        NL, 
        NO, 
        PT, 
        RO, 
        RU, 
        SV, 
        TH, 
        TR, 
        ZH_HANS, 
        ZH_HANT
    };
    OAIAnalysisSchemeLanguage::eOAIAnalysisSchemeLanguage getValue() const;
    void setValue(const OAIAnalysisSchemeLanguage::eOAIAnalysisSchemeLanguage& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIAnalysisSchemeLanguage m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalysisSchemeLanguage)

#endif // OAIAnalysisSchemeLanguage_H
