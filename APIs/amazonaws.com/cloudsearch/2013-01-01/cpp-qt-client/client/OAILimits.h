/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILimits.h
 *
 * 
 */

#ifndef OAILimits_H
#define OAILimits_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILimits : public OAIObject {
public:
    OAILimits();
    OAILimits(QString json);
    ~OAILimits() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaximumReplicationCount() const;
    void setMaximumReplicationCount(const qint32 &maximum_replication_count);
    bool is_maximum_replication_count_Set() const;
    bool is_maximum_replication_count_Valid() const;

    qint32 getMaximumPartitionCount() const;
    void setMaximumPartitionCount(const qint32 &maximum_partition_count);
    bool is_maximum_partition_count_Set() const;
    bool is_maximum_partition_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_maximum_replication_count;
    bool m_maximum_replication_count_isSet;
    bool m_maximum_replication_count_isValid;

    qint32 m_maximum_partition_count;
    bool m_maximum_partition_count_isSet;
    bool m_maximum_partition_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILimits)

#endif // OAILimits_H
