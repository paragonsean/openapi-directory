/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAvailabilityOptionsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAvailabilityOptionsRequest::OAIDescribeAvailabilityOptionsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAvailabilityOptionsRequest::OAIDescribeAvailabilityOptionsRequest() {
    this->initializeModel();
}

OAIDescribeAvailabilityOptionsRequest::~OAIDescribeAvailabilityOptionsRequest() {}

void OAIDescribeAvailabilityOptionsRequest::initializeModel() {

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_deployed_isSet = false;
    m_deployed_isValid = false;
}

void OAIDescribeAvailabilityOptionsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAvailabilityOptionsRequest::fromJsonObject(QJsonObject json) {

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("DomainName")]);
    m_domain_name_isSet = !json[QString("DomainName")].isNull() && m_domain_name_isValid;

    m_deployed_isValid = ::OpenAPI::fromJsonValue(m_deployed, json[QString("Deployed")]);
    m_deployed_isSet = !json[QString("Deployed")].isNull() && m_deployed_isValid;
}

QString OAIDescribeAvailabilityOptionsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAvailabilityOptionsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_name_isSet) {
        obj.insert(QString("DomainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_deployed_isSet) {
        obj.insert(QString("Deployed"), ::OpenAPI::toJsonValue(m_deployed));
    }
    return obj;
}

QString OAIDescribeAvailabilityOptionsRequest::getDomainName() const {
    return m_domain_name;
}
void OAIDescribeAvailabilityOptionsRequest::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAIDescribeAvailabilityOptionsRequest::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAIDescribeAvailabilityOptionsRequest::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

bool OAIDescribeAvailabilityOptionsRequest::getDeployed() const {
    return m_deployed;
}
void OAIDescribeAvailabilityOptionsRequest::setDeployed(const bool &deployed) {
    m_deployed = deployed;
    m_deployed_isSet = true;
}

bool OAIDescribeAvailabilityOptionsRequest::is_deployed_Set() const{
    return m_deployed_isSet;
}

bool OAIDescribeAvailabilityOptionsRequest::is_deployed_Valid() const{
    return m_deployed_isValid;
}

bool OAIDescribeAvailabilityOptionsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAvailabilityOptionsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_domain_name_isValid && true;
}

} // namespace OpenAPI
