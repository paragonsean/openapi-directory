/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGET_UpdateScalingParameters_ScalingParameters_parameter.h
 *
 * The desired instance type and desired number of replicas of each index partition.
 */

#ifndef OAIGET_UpdateScalingParameters_ScalingParameters_parameter_H
#define OAIGET_UpdateScalingParameters_ScalingParameters_parameter_H

#include <QJsonObject>

#include "OAIPartitionInstanceType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGET_UpdateScalingParameters_ScalingParameters_parameter : public OAIObject {
public:
    OAIGET_UpdateScalingParameters_ScalingParameters_parameter();
    OAIGET_UpdateScalingParameters_ScalingParameters_parameter(QString json);
    ~OAIGET_UpdateScalingParameters_ScalingParameters_parameter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPartitionInstanceType getDesiredInstanceType() const;
    void setDesiredInstanceType(const OAIPartitionInstanceType &desired_instance_type);
    bool is_desired_instance_type_Set() const;
    bool is_desired_instance_type_Valid() const;

    qint32 getDesiredReplicationCount() const;
    void setDesiredReplicationCount(const qint32 &desired_replication_count);
    bool is_desired_replication_count_Set() const;
    bool is_desired_replication_count_Valid() const;

    qint32 getDesiredPartitionCount() const;
    void setDesiredPartitionCount(const qint32 &desired_partition_count);
    bool is_desired_partition_count_Set() const;
    bool is_desired_partition_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPartitionInstanceType m_desired_instance_type;
    bool m_desired_instance_type_isSet;
    bool m_desired_instance_type_isValid;

    qint32 m_desired_replication_count;
    bool m_desired_replication_count_isSet;
    bool m_desired_replication_count_isValid;

    qint32 m_desired_partition_count;
    bool m_desired_partition_count_isSet;
    bool m_desired_partition_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGET_UpdateScalingParameters_ScalingParameters_parameter)

#endif // OAIGET_UpdateScalingParameters_ScalingParameters_parameter_H
