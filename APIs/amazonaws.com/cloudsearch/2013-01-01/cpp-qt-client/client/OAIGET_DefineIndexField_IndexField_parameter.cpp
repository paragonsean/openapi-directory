/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_DefineIndexField_IndexField_parameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_DefineIndexField_IndexField_parameter::OAIGET_DefineIndexField_IndexField_parameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_DefineIndexField_IndexField_parameter::OAIGET_DefineIndexField_IndexField_parameter() {
    this->initializeModel();
}

OAIGET_DefineIndexField_IndexField_parameter::~OAIGET_DefineIndexField_IndexField_parameter() {}

void OAIGET_DefineIndexField_IndexField_parameter::initializeModel() {

    m_index_field_name_isSet = false;
    m_index_field_name_isValid = false;

    m_index_field_type_isSet = false;
    m_index_field_type_isValid = false;

    m_int_options_isSet = false;
    m_int_options_isValid = false;

    m_double_options_isSet = false;
    m_double_options_isValid = false;

    m_literal_options_isSet = false;
    m_literal_options_isValid = false;

    m_text_options_isSet = false;
    m_text_options_isValid = false;

    m_date_options_isSet = false;
    m_date_options_isValid = false;

    m_lat_lon_options_isSet = false;
    m_lat_lon_options_isValid = false;

    m_int_array_options_isSet = false;
    m_int_array_options_isValid = false;

    m_double_array_options_isSet = false;
    m_double_array_options_isValid = false;

    m_literal_array_options_isSet = false;
    m_literal_array_options_isValid = false;

    m_text_array_options_isSet = false;
    m_text_array_options_isValid = false;

    m_date_array_options_isSet = false;
    m_date_array_options_isValid = false;
}

void OAIGET_DefineIndexField_IndexField_parameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_DefineIndexField_IndexField_parameter::fromJsonObject(QJsonObject json) {

    m_index_field_name_isValid = ::OpenAPI::fromJsonValue(m_index_field_name, json[QString("IndexFieldName")]);
    m_index_field_name_isSet = !json[QString("IndexFieldName")].isNull() && m_index_field_name_isValid;

    m_index_field_type_isValid = ::OpenAPI::fromJsonValue(m_index_field_type, json[QString("IndexFieldType")]);
    m_index_field_type_isSet = !json[QString("IndexFieldType")].isNull() && m_index_field_type_isValid;

    m_int_options_isValid = ::OpenAPI::fromJsonValue(m_int_options, json[QString("IntOptions")]);
    m_int_options_isSet = !json[QString("IntOptions")].isNull() && m_int_options_isValid;

    m_double_options_isValid = ::OpenAPI::fromJsonValue(m_double_options, json[QString("DoubleOptions")]);
    m_double_options_isSet = !json[QString("DoubleOptions")].isNull() && m_double_options_isValid;

    m_literal_options_isValid = ::OpenAPI::fromJsonValue(m_literal_options, json[QString("LiteralOptions")]);
    m_literal_options_isSet = !json[QString("LiteralOptions")].isNull() && m_literal_options_isValid;

    m_text_options_isValid = ::OpenAPI::fromJsonValue(m_text_options, json[QString("TextOptions")]);
    m_text_options_isSet = !json[QString("TextOptions")].isNull() && m_text_options_isValid;

    m_date_options_isValid = ::OpenAPI::fromJsonValue(m_date_options, json[QString("DateOptions")]);
    m_date_options_isSet = !json[QString("DateOptions")].isNull() && m_date_options_isValid;

    m_lat_lon_options_isValid = ::OpenAPI::fromJsonValue(m_lat_lon_options, json[QString("LatLonOptions")]);
    m_lat_lon_options_isSet = !json[QString("LatLonOptions")].isNull() && m_lat_lon_options_isValid;

    m_int_array_options_isValid = ::OpenAPI::fromJsonValue(m_int_array_options, json[QString("IntArrayOptions")]);
    m_int_array_options_isSet = !json[QString("IntArrayOptions")].isNull() && m_int_array_options_isValid;

    m_double_array_options_isValid = ::OpenAPI::fromJsonValue(m_double_array_options, json[QString("DoubleArrayOptions")]);
    m_double_array_options_isSet = !json[QString("DoubleArrayOptions")].isNull() && m_double_array_options_isValid;

    m_literal_array_options_isValid = ::OpenAPI::fromJsonValue(m_literal_array_options, json[QString("LiteralArrayOptions")]);
    m_literal_array_options_isSet = !json[QString("LiteralArrayOptions")].isNull() && m_literal_array_options_isValid;

    m_text_array_options_isValid = ::OpenAPI::fromJsonValue(m_text_array_options, json[QString("TextArrayOptions")]);
    m_text_array_options_isSet = !json[QString("TextArrayOptions")].isNull() && m_text_array_options_isValid;

    m_date_array_options_isValid = ::OpenAPI::fromJsonValue(m_date_array_options, json[QString("DateArrayOptions")]);
    m_date_array_options_isSet = !json[QString("DateArrayOptions")].isNull() && m_date_array_options_isValid;
}

QString OAIGET_DefineIndexField_IndexField_parameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_DefineIndexField_IndexField_parameter::asJsonObject() const {
    QJsonObject obj;
    if (m_index_field_name_isSet) {
        obj.insert(QString("IndexFieldName"), ::OpenAPI::toJsonValue(m_index_field_name));
    }
    if (m_index_field_type.isSet()) {
        obj.insert(QString("IndexFieldType"), ::OpenAPI::toJsonValue(m_index_field_type));
    }
    if (m_int_options.isSet()) {
        obj.insert(QString("IntOptions"), ::OpenAPI::toJsonValue(m_int_options));
    }
    if (m_double_options.isSet()) {
        obj.insert(QString("DoubleOptions"), ::OpenAPI::toJsonValue(m_double_options));
    }
    if (m_literal_options.isSet()) {
        obj.insert(QString("LiteralOptions"), ::OpenAPI::toJsonValue(m_literal_options));
    }
    if (m_text_options.isSet()) {
        obj.insert(QString("TextOptions"), ::OpenAPI::toJsonValue(m_text_options));
    }
    if (m_date_options.isSet()) {
        obj.insert(QString("DateOptions"), ::OpenAPI::toJsonValue(m_date_options));
    }
    if (m_lat_lon_options.isSet()) {
        obj.insert(QString("LatLonOptions"), ::OpenAPI::toJsonValue(m_lat_lon_options));
    }
    if (m_int_array_options.isSet()) {
        obj.insert(QString("IntArrayOptions"), ::OpenAPI::toJsonValue(m_int_array_options));
    }
    if (m_double_array_options.isSet()) {
        obj.insert(QString("DoubleArrayOptions"), ::OpenAPI::toJsonValue(m_double_array_options));
    }
    if (m_literal_array_options.isSet()) {
        obj.insert(QString("LiteralArrayOptions"), ::OpenAPI::toJsonValue(m_literal_array_options));
    }
    if (m_text_array_options.isSet()) {
        obj.insert(QString("TextArrayOptions"), ::OpenAPI::toJsonValue(m_text_array_options));
    }
    if (m_date_array_options.isSet()) {
        obj.insert(QString("DateArrayOptions"), ::OpenAPI::toJsonValue(m_date_array_options));
    }
    return obj;
}

QString OAIGET_DefineIndexField_IndexField_parameter::getIndexFieldName() const {
    return m_index_field_name;
}
void OAIGET_DefineIndexField_IndexField_parameter::setIndexFieldName(const QString &index_field_name) {
    m_index_field_name = index_field_name;
    m_index_field_name_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_index_field_name_Set() const{
    return m_index_field_name_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_index_field_name_Valid() const{
    return m_index_field_name_isValid;
}

OAIIndexFieldType OAIGET_DefineIndexField_IndexField_parameter::getIndexFieldType() const {
    return m_index_field_type;
}
void OAIGET_DefineIndexField_IndexField_parameter::setIndexFieldType(const OAIIndexFieldType &index_field_type) {
    m_index_field_type = index_field_type;
    m_index_field_type_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_index_field_type_Set() const{
    return m_index_field_type_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_index_field_type_Valid() const{
    return m_index_field_type_isValid;
}

OAIIntOptions OAIGET_DefineIndexField_IndexField_parameter::getIntOptions() const {
    return m_int_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setIntOptions(const OAIIntOptions &int_options) {
    m_int_options = int_options;
    m_int_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_int_options_Set() const{
    return m_int_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_int_options_Valid() const{
    return m_int_options_isValid;
}

OAIDoubleOptions OAIGET_DefineIndexField_IndexField_parameter::getDoubleOptions() const {
    return m_double_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setDoubleOptions(const OAIDoubleOptions &double_options) {
    m_double_options = double_options;
    m_double_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_double_options_Set() const{
    return m_double_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_double_options_Valid() const{
    return m_double_options_isValid;
}

OAILiteralOptions OAIGET_DefineIndexField_IndexField_parameter::getLiteralOptions() const {
    return m_literal_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setLiteralOptions(const OAILiteralOptions &literal_options) {
    m_literal_options = literal_options;
    m_literal_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_literal_options_Set() const{
    return m_literal_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_literal_options_Valid() const{
    return m_literal_options_isValid;
}

OAITextOptions OAIGET_DefineIndexField_IndexField_parameter::getTextOptions() const {
    return m_text_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setTextOptions(const OAITextOptions &text_options) {
    m_text_options = text_options;
    m_text_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_text_options_Set() const{
    return m_text_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_text_options_Valid() const{
    return m_text_options_isValid;
}

OAIDateOptions OAIGET_DefineIndexField_IndexField_parameter::getDateOptions() const {
    return m_date_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setDateOptions(const OAIDateOptions &date_options) {
    m_date_options = date_options;
    m_date_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_date_options_Set() const{
    return m_date_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_date_options_Valid() const{
    return m_date_options_isValid;
}

OAILatLonOptions OAIGET_DefineIndexField_IndexField_parameter::getLatLonOptions() const {
    return m_lat_lon_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setLatLonOptions(const OAILatLonOptions &lat_lon_options) {
    m_lat_lon_options = lat_lon_options;
    m_lat_lon_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_lat_lon_options_Set() const{
    return m_lat_lon_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_lat_lon_options_Valid() const{
    return m_lat_lon_options_isValid;
}

OAIIntArrayOptions OAIGET_DefineIndexField_IndexField_parameter::getIntArrayOptions() const {
    return m_int_array_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setIntArrayOptions(const OAIIntArrayOptions &int_array_options) {
    m_int_array_options = int_array_options;
    m_int_array_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_int_array_options_Set() const{
    return m_int_array_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_int_array_options_Valid() const{
    return m_int_array_options_isValid;
}

OAIDoubleArrayOptions OAIGET_DefineIndexField_IndexField_parameter::getDoubleArrayOptions() const {
    return m_double_array_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setDoubleArrayOptions(const OAIDoubleArrayOptions &double_array_options) {
    m_double_array_options = double_array_options;
    m_double_array_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_double_array_options_Set() const{
    return m_double_array_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_double_array_options_Valid() const{
    return m_double_array_options_isValid;
}

OAILiteralArrayOptions OAIGET_DefineIndexField_IndexField_parameter::getLiteralArrayOptions() const {
    return m_literal_array_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setLiteralArrayOptions(const OAILiteralArrayOptions &literal_array_options) {
    m_literal_array_options = literal_array_options;
    m_literal_array_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_literal_array_options_Set() const{
    return m_literal_array_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_literal_array_options_Valid() const{
    return m_literal_array_options_isValid;
}

OAITextArrayOptions OAIGET_DefineIndexField_IndexField_parameter::getTextArrayOptions() const {
    return m_text_array_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setTextArrayOptions(const OAITextArrayOptions &text_array_options) {
    m_text_array_options = text_array_options;
    m_text_array_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_text_array_options_Set() const{
    return m_text_array_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_text_array_options_Valid() const{
    return m_text_array_options_isValid;
}

OAIDateArrayOptions OAIGET_DefineIndexField_IndexField_parameter::getDateArrayOptions() const {
    return m_date_array_options;
}
void OAIGET_DefineIndexField_IndexField_parameter::setDateArrayOptions(const OAIDateArrayOptions &date_array_options) {
    m_date_array_options = date_array_options;
    m_date_array_options_isSet = true;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_date_array_options_Set() const{
    return m_date_array_options_isSet;
}

bool OAIGET_DefineIndexField_IndexField_parameter::is_date_array_options_Valid() const{
    return m_date_array_options_isValid;
}

bool OAIGET_DefineIndexField_IndexField_parameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_index_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_field_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_int_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_double_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_literal_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lat_lon_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_int_array_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_double_array_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_literal_array_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_array_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_array_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_DefineIndexField_IndexField_parameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_index_field_name_isValid && m_index_field_type_isValid && true;
}

} // namespace OpenAPI
