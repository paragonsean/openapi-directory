/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntArrayOptions.h
 *
 * Options for a field that contains an array of 64-bit signed integers. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;int-array&lt;/code&gt;. All options are enabled by default.
 */

#ifndef OAIIntArrayOptions_H
#define OAIIntArrayOptions_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIntArrayOptions : public OAIObject {
public:
    OAIIntArrayOptions();
    OAIIntArrayOptions(QString json);
    ~OAIIntArrayOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDefaultValue() const;
    void setDefaultValue(const qint32 &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    QString getSourceFields() const;
    void setSourceFields(const QString &source_fields);
    bool is_source_fields_Set() const;
    bool is_source_fields_Valid() const;

    bool getFacetEnabled() const;
    void setFacetEnabled(const bool &facet_enabled);
    bool is_facet_enabled_Set() const;
    bool is_facet_enabled_Valid() const;

    bool getSearchEnabled() const;
    void setSearchEnabled(const bool &search_enabled);
    bool is_search_enabled_Set() const;
    bool is_search_enabled_Valid() const;

    bool getReturnEnabled() const;
    void setReturnEnabled(const bool &return_enabled);
    bool is_return_enabled_Set() const;
    bool is_return_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;

    QString m_source_fields;
    bool m_source_fields_isSet;
    bool m_source_fields_isValid;

    bool m_facet_enabled;
    bool m_facet_enabled_isSet;
    bool m_facet_enabled_isValid;

    bool m_search_enabled;
    bool m_search_enabled_isSet;
    bool m_search_enabled_isValid;

    bool m_return_enabled;
    bool m_return_enabled_isSet;
    bool m_return_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntArrayOptions)

#endif // OAIIntArrayOptions_H
