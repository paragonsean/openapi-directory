/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateServiceAccessPoliciesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateServiceAccessPoliciesRequest::OAIUpdateServiceAccessPoliciesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateServiceAccessPoliciesRequest::OAIUpdateServiceAccessPoliciesRequest() {
    this->initializeModel();
}

OAIUpdateServiceAccessPoliciesRequest::~OAIUpdateServiceAccessPoliciesRequest() {}

void OAIUpdateServiceAccessPoliciesRequest::initializeModel() {

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_access_policies_isSet = false;
    m_access_policies_isValid = false;
}

void OAIUpdateServiceAccessPoliciesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateServiceAccessPoliciesRequest::fromJsonObject(QJsonObject json) {

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("DomainName")]);
    m_domain_name_isSet = !json[QString("DomainName")].isNull() && m_domain_name_isValid;

    m_access_policies_isValid = ::OpenAPI::fromJsonValue(m_access_policies, json[QString("AccessPolicies")]);
    m_access_policies_isSet = !json[QString("AccessPolicies")].isNull() && m_access_policies_isValid;
}

QString OAIUpdateServiceAccessPoliciesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateServiceAccessPoliciesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_name_isSet) {
        obj.insert(QString("DomainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_access_policies_isSet) {
        obj.insert(QString("AccessPolicies"), ::OpenAPI::toJsonValue(m_access_policies));
    }
    return obj;
}

QString OAIUpdateServiceAccessPoliciesRequest::getDomainName() const {
    return m_domain_name;
}
void OAIUpdateServiceAccessPoliciesRequest::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAIUpdateServiceAccessPoliciesRequest::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAIUpdateServiceAccessPoliciesRequest::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

QString OAIUpdateServiceAccessPoliciesRequest::getAccessPolicies() const {
    return m_access_policies;
}
void OAIUpdateServiceAccessPoliciesRequest::setAccessPolicies(const QString &access_policies) {
    m_access_policies = access_policies;
    m_access_policies_isSet = true;
}

bool OAIUpdateServiceAccessPoliciesRequest::is_access_policies_Set() const{
    return m_access_policies_isSet;
}

bool OAIUpdateServiceAccessPoliciesRequest::is_access_policies_Valid() const{
    return m_access_policies_isValid;
}

bool OAIUpdateServiceAccessPoliciesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_access_policies_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateServiceAccessPoliciesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_domain_name_isValid && m_access_policies_isValid && true;
}

} // namespace OpenAPI
