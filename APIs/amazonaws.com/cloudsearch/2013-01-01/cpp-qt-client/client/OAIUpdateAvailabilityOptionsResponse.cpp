/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAvailabilityOptionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAvailabilityOptionsResponse::OAIUpdateAvailabilityOptionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAvailabilityOptionsResponse::OAIUpdateAvailabilityOptionsResponse() {
    this->initializeModel();
}

OAIUpdateAvailabilityOptionsResponse::~OAIUpdateAvailabilityOptionsResponse() {}

void OAIUpdateAvailabilityOptionsResponse::initializeModel() {

    m_availability_options_isSet = false;
    m_availability_options_isValid = false;
}

void OAIUpdateAvailabilityOptionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAvailabilityOptionsResponse::fromJsonObject(QJsonObject json) {

    m_availability_options_isValid = ::OpenAPI::fromJsonValue(m_availability_options, json[QString("AvailabilityOptions")]);
    m_availability_options_isSet = !json[QString("AvailabilityOptions")].isNull() && m_availability_options_isValid;
}

QString OAIUpdateAvailabilityOptionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAvailabilityOptionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_availability_options.isSet()) {
        obj.insert(QString("AvailabilityOptions"), ::OpenAPI::toJsonValue(m_availability_options));
    }
    return obj;
}

OAIUpdateAvailabilityOptionsResponse_AvailabilityOptions OAIUpdateAvailabilityOptionsResponse::getAvailabilityOptions() const {
    return m_availability_options;
}
void OAIUpdateAvailabilityOptionsResponse::setAvailabilityOptions(const OAIUpdateAvailabilityOptionsResponse_AvailabilityOptions &availability_options) {
    m_availability_options = availability_options;
    m_availability_options_isSet = true;
}

bool OAIUpdateAvailabilityOptionsResponse::is_availability_options_Set() const{
    return m_availability_options_isSet;
}

bool OAIUpdateAvailabilityOptionsResponse::is_availability_options_Valid() const{
    return m_availability_options_isValid;
}

bool OAIUpdateAvailabilityOptionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_availability_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAvailabilityOptionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
