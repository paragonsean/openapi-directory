/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateScalingParametersResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateScalingParametersResponse::OAIUpdateScalingParametersResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateScalingParametersResponse::OAIUpdateScalingParametersResponse() {
    this->initializeModel();
}

OAIUpdateScalingParametersResponse::~OAIUpdateScalingParametersResponse() {}

void OAIUpdateScalingParametersResponse::initializeModel() {

    m_scaling_parameters_isSet = false;
    m_scaling_parameters_isValid = false;
}

void OAIUpdateScalingParametersResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateScalingParametersResponse::fromJsonObject(QJsonObject json) {

    m_scaling_parameters_isValid = ::OpenAPI::fromJsonValue(m_scaling_parameters, json[QString("ScalingParameters")]);
    m_scaling_parameters_isSet = !json[QString("ScalingParameters")].isNull() && m_scaling_parameters_isValid;
}

QString OAIUpdateScalingParametersResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateScalingParametersResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_scaling_parameters.isSet()) {
        obj.insert(QString("ScalingParameters"), ::OpenAPI::toJsonValue(m_scaling_parameters));
    }
    return obj;
}

OAIScalingParametersStatus OAIUpdateScalingParametersResponse::getScalingParameters() const {
    return m_scaling_parameters;
}
void OAIUpdateScalingParametersResponse::setScalingParameters(const OAIScalingParametersStatus &scaling_parameters) {
    m_scaling_parameters = scaling_parameters;
    m_scaling_parameters_isSet = true;
}

bool OAIUpdateScalingParametersResponse::is_scaling_parameters_Set() const{
    return m_scaling_parameters_isSet;
}

bool OAIUpdateScalingParametersResponse::is_scaling_parameters_Valid() const{
    return m_scaling_parameters_isValid;
}

bool OAIUpdateScalingParametersResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scaling_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateScalingParametersResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_scaling_parameters_isValid && true;
}

} // namespace OpenAPI
