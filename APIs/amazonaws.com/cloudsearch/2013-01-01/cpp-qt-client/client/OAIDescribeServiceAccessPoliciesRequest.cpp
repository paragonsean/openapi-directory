/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeServiceAccessPoliciesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeServiceAccessPoliciesRequest::OAIDescribeServiceAccessPoliciesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeServiceAccessPoliciesRequest::OAIDescribeServiceAccessPoliciesRequest() {
    this->initializeModel();
}

OAIDescribeServiceAccessPoliciesRequest::~OAIDescribeServiceAccessPoliciesRequest() {}

void OAIDescribeServiceAccessPoliciesRequest::initializeModel() {

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_deployed_isSet = false;
    m_deployed_isValid = false;
}

void OAIDescribeServiceAccessPoliciesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeServiceAccessPoliciesRequest::fromJsonObject(QJsonObject json) {

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("DomainName")]);
    m_domain_name_isSet = !json[QString("DomainName")].isNull() && m_domain_name_isValid;

    m_deployed_isValid = ::OpenAPI::fromJsonValue(m_deployed, json[QString("Deployed")]);
    m_deployed_isSet = !json[QString("Deployed")].isNull() && m_deployed_isValid;
}

QString OAIDescribeServiceAccessPoliciesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeServiceAccessPoliciesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_name_isSet) {
        obj.insert(QString("DomainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_deployed_isSet) {
        obj.insert(QString("Deployed"), ::OpenAPI::toJsonValue(m_deployed));
    }
    return obj;
}

QString OAIDescribeServiceAccessPoliciesRequest::getDomainName() const {
    return m_domain_name;
}
void OAIDescribeServiceAccessPoliciesRequest::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAIDescribeServiceAccessPoliciesRequest::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAIDescribeServiceAccessPoliciesRequest::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

bool OAIDescribeServiceAccessPoliciesRequest::getDeployed() const {
    return m_deployed;
}
void OAIDescribeServiceAccessPoliciesRequest::setDeployed(const bool &deployed) {
    m_deployed = deployed;
    m_deployed_isSet = true;
}

bool OAIDescribeServiceAccessPoliciesRequest::is_deployed_Set() const{
    return m_deployed_isSet;
}

bool OAIDescribeServiceAccessPoliciesRequest::is_deployed_Valid() const{
    return m_deployed_isValid;
}

bool OAIDescribeServiceAccessPoliciesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeServiceAccessPoliciesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_domain_name_isValid && true;
}

} // namespace OpenAPI
