/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonCloudSearch);
  }
}(this, function(expect, AmazonCloudSearch) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonCloudSearch.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('gETBuildSuggesters', function() {
      it('should call gETBuildSuggesters successfully', function(done) {
        //uncomment below and update the code to test gETBuildSuggesters
        //instance.gETBuildSuggesters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateDomain', function() {
      it('should call gETCreateDomain successfully', function(done) {
        //uncomment below and update the code to test gETCreateDomain
        //instance.gETCreateDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDefineAnalysisScheme', function() {
      it('should call gETDefineAnalysisScheme successfully', function(done) {
        //uncomment below and update the code to test gETDefineAnalysisScheme
        //instance.gETDefineAnalysisScheme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDefineExpression', function() {
      it('should call gETDefineExpression successfully', function(done) {
        //uncomment below and update the code to test gETDefineExpression
        //instance.gETDefineExpression(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDefineIndexField', function() {
      it('should call gETDefineIndexField successfully', function(done) {
        //uncomment below and update the code to test gETDefineIndexField
        //instance.gETDefineIndexField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDefineSuggester', function() {
      it('should call gETDefineSuggester successfully', function(done) {
        //uncomment below and update the code to test gETDefineSuggester
        //instance.gETDefineSuggester(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteAnalysisScheme', function() {
      it('should call gETDeleteAnalysisScheme successfully', function(done) {
        //uncomment below and update the code to test gETDeleteAnalysisScheme
        //instance.gETDeleteAnalysisScheme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteDomain', function() {
      it('should call gETDeleteDomain successfully', function(done) {
        //uncomment below and update the code to test gETDeleteDomain
        //instance.gETDeleteDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteExpression', function() {
      it('should call gETDeleteExpression successfully', function(done) {
        //uncomment below and update the code to test gETDeleteExpression
        //instance.gETDeleteExpression(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteIndexField', function() {
      it('should call gETDeleteIndexField successfully', function(done) {
        //uncomment below and update the code to test gETDeleteIndexField
        //instance.gETDeleteIndexField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteSuggester', function() {
      it('should call gETDeleteSuggester successfully', function(done) {
        //uncomment below and update the code to test gETDeleteSuggester
        //instance.gETDeleteSuggester(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeAnalysisSchemes', function() {
      it('should call gETDescribeAnalysisSchemes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeAnalysisSchemes
        //instance.gETDescribeAnalysisSchemes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeAvailabilityOptions', function() {
      it('should call gETDescribeAvailabilityOptions successfully', function(done) {
        //uncomment below and update the code to test gETDescribeAvailabilityOptions
        //instance.gETDescribeAvailabilityOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeDomainEndpointOptions', function() {
      it('should call gETDescribeDomainEndpointOptions successfully', function(done) {
        //uncomment below and update the code to test gETDescribeDomainEndpointOptions
        //instance.gETDescribeDomainEndpointOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeDomains', function() {
      it('should call gETDescribeDomains successfully', function(done) {
        //uncomment below and update the code to test gETDescribeDomains
        //instance.gETDescribeDomains(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeExpressions', function() {
      it('should call gETDescribeExpressions successfully', function(done) {
        //uncomment below and update the code to test gETDescribeExpressions
        //instance.gETDescribeExpressions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeIndexFields', function() {
      it('should call gETDescribeIndexFields successfully', function(done) {
        //uncomment below and update the code to test gETDescribeIndexFields
        //instance.gETDescribeIndexFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeScalingParameters', function() {
      it('should call gETDescribeScalingParameters successfully', function(done) {
        //uncomment below and update the code to test gETDescribeScalingParameters
        //instance.gETDescribeScalingParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeServiceAccessPolicies', function() {
      it('should call gETDescribeServiceAccessPolicies successfully', function(done) {
        //uncomment below and update the code to test gETDescribeServiceAccessPolicies
        //instance.gETDescribeServiceAccessPolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeSuggesters', function() {
      it('should call gETDescribeSuggesters successfully', function(done) {
        //uncomment below and update the code to test gETDescribeSuggesters
        //instance.gETDescribeSuggesters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETIndexDocuments', function() {
      it('should call gETIndexDocuments successfully', function(done) {
        //uncomment below and update the code to test gETIndexDocuments
        //instance.gETIndexDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListDomainNames', function() {
      it('should call gETListDomainNames successfully', function(done) {
        //uncomment below and update the code to test gETListDomainNames
        //instance.gETListDomainNames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateAvailabilityOptions', function() {
      it('should call gETUpdateAvailabilityOptions successfully', function(done) {
        //uncomment below and update the code to test gETUpdateAvailabilityOptions
        //instance.gETUpdateAvailabilityOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateDomainEndpointOptions', function() {
      it('should call gETUpdateDomainEndpointOptions successfully', function(done) {
        //uncomment below and update the code to test gETUpdateDomainEndpointOptions
        //instance.gETUpdateDomainEndpointOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateScalingParameters', function() {
      it('should call gETUpdateScalingParameters successfully', function(done) {
        //uncomment below and update the code to test gETUpdateScalingParameters
        //instance.gETUpdateScalingParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateServiceAccessPolicies', function() {
      it('should call gETUpdateServiceAccessPolicies successfully', function(done) {
        //uncomment below and update the code to test gETUpdateServiceAccessPolicies
        //instance.gETUpdateServiceAccessPolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTBuildSuggesters', function() {
      it('should call pOSTBuildSuggesters successfully', function(done) {
        //uncomment below and update the code to test pOSTBuildSuggesters
        //instance.pOSTBuildSuggesters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateDomain', function() {
      it('should call pOSTCreateDomain successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateDomain
        //instance.pOSTCreateDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDefineAnalysisScheme', function() {
      it('should call pOSTDefineAnalysisScheme successfully', function(done) {
        //uncomment below and update the code to test pOSTDefineAnalysisScheme
        //instance.pOSTDefineAnalysisScheme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDefineExpression', function() {
      it('should call pOSTDefineExpression successfully', function(done) {
        //uncomment below and update the code to test pOSTDefineExpression
        //instance.pOSTDefineExpression(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDefineIndexField', function() {
      it('should call pOSTDefineIndexField successfully', function(done) {
        //uncomment below and update the code to test pOSTDefineIndexField
        //instance.pOSTDefineIndexField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDefineSuggester', function() {
      it('should call pOSTDefineSuggester successfully', function(done) {
        //uncomment below and update the code to test pOSTDefineSuggester
        //instance.pOSTDefineSuggester(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteAnalysisScheme', function() {
      it('should call pOSTDeleteAnalysisScheme successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteAnalysisScheme
        //instance.pOSTDeleteAnalysisScheme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteDomain', function() {
      it('should call pOSTDeleteDomain successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteDomain
        //instance.pOSTDeleteDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteExpression', function() {
      it('should call pOSTDeleteExpression successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteExpression
        //instance.pOSTDeleteExpression(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteIndexField', function() {
      it('should call pOSTDeleteIndexField successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteIndexField
        //instance.pOSTDeleteIndexField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteSuggester', function() {
      it('should call pOSTDeleteSuggester successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteSuggester
        //instance.pOSTDeleteSuggester(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeAnalysisSchemes', function() {
      it('should call pOSTDescribeAnalysisSchemes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeAnalysisSchemes
        //instance.pOSTDescribeAnalysisSchemes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeAvailabilityOptions', function() {
      it('should call pOSTDescribeAvailabilityOptions successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeAvailabilityOptions
        //instance.pOSTDescribeAvailabilityOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeDomainEndpointOptions', function() {
      it('should call pOSTDescribeDomainEndpointOptions successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeDomainEndpointOptions
        //instance.pOSTDescribeDomainEndpointOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeDomains', function() {
      it('should call pOSTDescribeDomains successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeDomains
        //instance.pOSTDescribeDomains(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeExpressions', function() {
      it('should call pOSTDescribeExpressions successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeExpressions
        //instance.pOSTDescribeExpressions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeIndexFields', function() {
      it('should call pOSTDescribeIndexFields successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeIndexFields
        //instance.pOSTDescribeIndexFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeScalingParameters', function() {
      it('should call pOSTDescribeScalingParameters successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeScalingParameters
        //instance.pOSTDescribeScalingParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeServiceAccessPolicies', function() {
      it('should call pOSTDescribeServiceAccessPolicies successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeServiceAccessPolicies
        //instance.pOSTDescribeServiceAccessPolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeSuggesters', function() {
      it('should call pOSTDescribeSuggesters successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeSuggesters
        //instance.pOSTDescribeSuggesters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTIndexDocuments', function() {
      it('should call pOSTIndexDocuments successfully', function(done) {
        //uncomment below and update the code to test pOSTIndexDocuments
        //instance.pOSTIndexDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListDomainNames', function() {
      it('should call pOSTListDomainNames successfully', function(done) {
        //uncomment below and update the code to test pOSTListDomainNames
        //instance.pOSTListDomainNames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateAvailabilityOptions', function() {
      it('should call pOSTUpdateAvailabilityOptions successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateAvailabilityOptions
        //instance.pOSTUpdateAvailabilityOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateDomainEndpointOptions', function() {
      it('should call pOSTUpdateDomainEndpointOptions successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateDomainEndpointOptions
        //instance.pOSTUpdateDomainEndpointOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateScalingParameters', function() {
      it('should call pOSTUpdateScalingParameters successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateScalingParameters
        //instance.pOSTUpdateScalingParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateServiceAccessPolicies', function() {
      it('should call pOSTUpdateServiceAccessPolicies successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateServiceAccessPolicies
        //instance.pOSTUpdateServiceAccessPolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
