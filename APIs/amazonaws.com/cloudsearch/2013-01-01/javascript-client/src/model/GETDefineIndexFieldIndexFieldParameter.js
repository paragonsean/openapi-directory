/**
 * Amazon CloudSearch
 * <fullname>Amazon CloudSearch Configuration Service</fullname> <p>You use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.</p> <p>The endpoint for configuration service requests is region-specific: cloudsearch.<i>region</i>.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateArrayOptions from './DateArrayOptions';
import DateOptions from './DateOptions';
import DoubleArrayOptions from './DoubleArrayOptions';
import DoubleOptions from './DoubleOptions';
import IndexFieldType from './IndexFieldType';
import IntArrayOptions from './IntArrayOptions';
import IntOptions from './IntOptions';
import LatLonOptions from './LatLonOptions';
import LiteralArrayOptions from './LiteralArrayOptions';
import LiteralOptions from './LiteralOptions';
import TextArrayOptions from './TextArrayOptions';
import TextOptions from './TextOptions';

/**
 * The GETDefineIndexFieldIndexFieldParameter model module.
 * @module model/GETDefineIndexFieldIndexFieldParameter
 * @version 2013-01-01
 */
class GETDefineIndexFieldIndexFieldParameter {
    /**
     * Constructs a new <code>GETDefineIndexFieldIndexFieldParameter</code>.
     * Configuration information for a field in the index, including its name, type, and options. The supported options depend on the &lt;code&gt;&lt;a&gt;IndexFieldType&lt;/a&gt;&lt;/code&gt;.
     * @alias module:model/GETDefineIndexFieldIndexFieldParameter
     * @param indexFieldName {String} 
     * @param indexFieldType {module:model/IndexFieldType} 
     */
    constructor(indexFieldName, indexFieldType) { 
        
        GETDefineIndexFieldIndexFieldParameter.initialize(this, indexFieldName, indexFieldType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, indexFieldName, indexFieldType) { 
        obj['IndexFieldName'] = indexFieldName;
        obj['IndexFieldType'] = indexFieldType;
    }

    /**
     * Constructs a <code>GETDefineIndexFieldIndexFieldParameter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GETDefineIndexFieldIndexFieldParameter} obj Optional instance to populate.
     * @return {module:model/GETDefineIndexFieldIndexFieldParameter} The populated <code>GETDefineIndexFieldIndexFieldParameter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GETDefineIndexFieldIndexFieldParameter();

            if (data.hasOwnProperty('IndexFieldName')) {
                obj['IndexFieldName'] = ApiClient.convertToType(data['IndexFieldName'], 'String');
            }
            if (data.hasOwnProperty('IndexFieldType')) {
                obj['IndexFieldType'] = IndexFieldType.constructFromObject(data['IndexFieldType']);
            }
            if (data.hasOwnProperty('IntOptions')) {
                obj['IntOptions'] = IntOptions.constructFromObject(data['IntOptions']);
            }
            if (data.hasOwnProperty('DoubleOptions')) {
                obj['DoubleOptions'] = DoubleOptions.constructFromObject(data['DoubleOptions']);
            }
            if (data.hasOwnProperty('LiteralOptions')) {
                obj['LiteralOptions'] = LiteralOptions.constructFromObject(data['LiteralOptions']);
            }
            if (data.hasOwnProperty('TextOptions')) {
                obj['TextOptions'] = TextOptions.constructFromObject(data['TextOptions']);
            }
            if (data.hasOwnProperty('DateOptions')) {
                obj['DateOptions'] = DateOptions.constructFromObject(data['DateOptions']);
            }
            if (data.hasOwnProperty('LatLonOptions')) {
                obj['LatLonOptions'] = LatLonOptions.constructFromObject(data['LatLonOptions']);
            }
            if (data.hasOwnProperty('IntArrayOptions')) {
                obj['IntArrayOptions'] = IntArrayOptions.constructFromObject(data['IntArrayOptions']);
            }
            if (data.hasOwnProperty('DoubleArrayOptions')) {
                obj['DoubleArrayOptions'] = DoubleArrayOptions.constructFromObject(data['DoubleArrayOptions']);
            }
            if (data.hasOwnProperty('LiteralArrayOptions')) {
                obj['LiteralArrayOptions'] = LiteralArrayOptions.constructFromObject(data['LiteralArrayOptions']);
            }
            if (data.hasOwnProperty('TextArrayOptions')) {
                obj['TextArrayOptions'] = TextArrayOptions.constructFromObject(data['TextArrayOptions']);
            }
            if (data.hasOwnProperty('DateArrayOptions')) {
                obj['DateArrayOptions'] = DateArrayOptions.constructFromObject(data['DateArrayOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GETDefineIndexFieldIndexFieldParameter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GETDefineIndexFieldIndexFieldParameter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GETDefineIndexFieldIndexFieldParameter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `IndexFieldName`
        if (data['IndexFieldName']) { // data not null
          String.validateJSON(data['IndexFieldName']);
        }
        // validate the optional field `IntOptions`
        if (data['IntOptions']) { // data not null
          IntOptions.validateJSON(data['IntOptions']);
        }
        // validate the optional field `DoubleOptions`
        if (data['DoubleOptions']) { // data not null
          DoubleOptions.validateJSON(data['DoubleOptions']);
        }
        // validate the optional field `LiteralOptions`
        if (data['LiteralOptions']) { // data not null
          LiteralOptions.validateJSON(data['LiteralOptions']);
        }
        // validate the optional field `TextOptions`
        if (data['TextOptions']) { // data not null
          TextOptions.validateJSON(data['TextOptions']);
        }
        // validate the optional field `DateOptions`
        if (data['DateOptions']) { // data not null
          DateOptions.validateJSON(data['DateOptions']);
        }
        // validate the optional field `LatLonOptions`
        if (data['LatLonOptions']) { // data not null
          LatLonOptions.validateJSON(data['LatLonOptions']);
        }
        // validate the optional field `IntArrayOptions`
        if (data['IntArrayOptions']) { // data not null
          IntArrayOptions.validateJSON(data['IntArrayOptions']);
        }
        // validate the optional field `DoubleArrayOptions`
        if (data['DoubleArrayOptions']) { // data not null
          DoubleArrayOptions.validateJSON(data['DoubleArrayOptions']);
        }
        // validate the optional field `LiteralArrayOptions`
        if (data['LiteralArrayOptions']) { // data not null
          LiteralArrayOptions.validateJSON(data['LiteralArrayOptions']);
        }
        // validate the optional field `TextArrayOptions`
        if (data['TextArrayOptions']) { // data not null
          TextArrayOptions.validateJSON(data['TextArrayOptions']);
        }
        // validate the optional field `DateArrayOptions`
        if (data['DateArrayOptions']) { // data not null
          DateArrayOptions.validateJSON(data['DateArrayOptions']);
        }

        return true;
    }


}

GETDefineIndexFieldIndexFieldParameter.RequiredProperties = ["IndexFieldName", "IndexFieldType"];

/**
 * @member {String} IndexFieldName
 */
GETDefineIndexFieldIndexFieldParameter.prototype['IndexFieldName'] = undefined;

/**
 * @member {module:model/IndexFieldType} IndexFieldType
 */
GETDefineIndexFieldIndexFieldParameter.prototype['IndexFieldType'] = undefined;

/**
 * @member {module:model/IntOptions} IntOptions
 */
GETDefineIndexFieldIndexFieldParameter.prototype['IntOptions'] = undefined;

/**
 * @member {module:model/DoubleOptions} DoubleOptions
 */
GETDefineIndexFieldIndexFieldParameter.prototype['DoubleOptions'] = undefined;

/**
 * @member {module:model/LiteralOptions} LiteralOptions
 */
GETDefineIndexFieldIndexFieldParameter.prototype['LiteralOptions'] = undefined;

/**
 * @member {module:model/TextOptions} TextOptions
 */
GETDefineIndexFieldIndexFieldParameter.prototype['TextOptions'] = undefined;

/**
 * @member {module:model/DateOptions} DateOptions
 */
GETDefineIndexFieldIndexFieldParameter.prototype['DateOptions'] = undefined;

/**
 * @member {module:model/LatLonOptions} LatLonOptions
 */
GETDefineIndexFieldIndexFieldParameter.prototype['LatLonOptions'] = undefined;

/**
 * @member {module:model/IntArrayOptions} IntArrayOptions
 */
GETDefineIndexFieldIndexFieldParameter.prototype['IntArrayOptions'] = undefined;

/**
 * @member {module:model/DoubleArrayOptions} DoubleArrayOptions
 */
GETDefineIndexFieldIndexFieldParameter.prototype['DoubleArrayOptions'] = undefined;

/**
 * @member {module:model/LiteralArrayOptions} LiteralArrayOptions
 */
GETDefineIndexFieldIndexFieldParameter.prototype['LiteralArrayOptions'] = undefined;

/**
 * @member {module:model/TextArrayOptions} TextArrayOptions
 */
GETDefineIndexFieldIndexFieldParameter.prototype['TextArrayOptions'] = undefined;

/**
 * @member {module:model/DateArrayOptions} DateArrayOptions
 */
GETDefineIndexFieldIndexFieldParameter.prototype['DateArrayOptions'] = undefined;






export default GETDefineIndexFieldIndexFieldParameter;

