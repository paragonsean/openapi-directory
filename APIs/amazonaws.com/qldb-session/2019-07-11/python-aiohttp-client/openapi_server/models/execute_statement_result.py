# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.abort_transaction_result_timing_information import AbortTransactionResultTimingInformation
from openapi_server.models.commit_transaction_result_consumed_ios import CommitTransactionResultConsumedIOs
from openapi_server.models.execute_statement_result_first_page import ExecuteStatementResultFirstPage
from openapi_server import util


class ExecuteStatementResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_page: ExecuteStatementResultFirstPage=None, timing_information: AbortTransactionResultTimingInformation=None, consumed_ios: CommitTransactionResultConsumedIOs=None):
        """ExecuteStatementResult - a model defined in OpenAPI

        :param first_page: The first_page of this ExecuteStatementResult.
        :param timing_information: The timing_information of this ExecuteStatementResult.
        :param consumed_ios: The consumed_ios of this ExecuteStatementResult.
        """
        self.openapi_types = {
            'first_page': ExecuteStatementResultFirstPage,
            'timing_information': AbortTransactionResultTimingInformation,
            'consumed_ios': CommitTransactionResultConsumedIOs
        }

        self.attribute_map = {
            'first_page': 'FirstPage',
            'timing_information': 'TimingInformation',
            'consumed_ios': 'ConsumedIOs'
        }

        self._first_page = first_page
        self._timing_information = timing_information
        self._consumed_ios = consumed_ios

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecuteStatementResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecuteStatementResult of this ExecuteStatementResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_page(self):
        """Gets the first_page of this ExecuteStatementResult.


        :return: The first_page of this ExecuteStatementResult.
        :rtype: ExecuteStatementResultFirstPage
        """
        return self._first_page

    @first_page.setter
    def first_page(self, first_page):
        """Sets the first_page of this ExecuteStatementResult.


        :param first_page: The first_page of this ExecuteStatementResult.
        :type first_page: ExecuteStatementResultFirstPage
        """

        self._first_page = first_page

    @property
    def timing_information(self):
        """Gets the timing_information of this ExecuteStatementResult.


        :return: The timing_information of this ExecuteStatementResult.
        :rtype: AbortTransactionResultTimingInformation
        """
        return self._timing_information

    @timing_information.setter
    def timing_information(self, timing_information):
        """Sets the timing_information of this ExecuteStatementResult.


        :param timing_information: The timing_information of this ExecuteStatementResult.
        :type timing_information: AbortTransactionResultTimingInformation
        """

        self._timing_information = timing_information

    @property
    def consumed_ios(self):
        """Gets the consumed_ios of this ExecuteStatementResult.


        :return: The consumed_ios of this ExecuteStatementResult.
        :rtype: CommitTransactionResultConsumedIOs
        """
        return self._consumed_ios

    @consumed_ios.setter
    def consumed_ios(self, consumed_ios):
        """Sets the consumed_ios of this ExecuteStatementResult.


        :param consumed_ios: The consumed_ios of this ExecuteStatementResult.
        :type consumed_ios: CommitTransactionResultConsumedIOs
        """

        self._consumed_ios = consumed_ios
