# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.abort_transaction_result_timing_information import AbortTransactionResultTimingInformation
from openapi_server import util


class SendCommandResultEndSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, timing_information: AbortTransactionResultTimingInformation=None):
        """SendCommandResultEndSession - a model defined in OpenAPI

        :param timing_information: The timing_information of this SendCommandResultEndSession.
        """
        self.openapi_types = {
            'timing_information': AbortTransactionResultTimingInformation
        }

        self.attribute_map = {
            'timing_information': 'TimingInformation'
        }

        self._timing_information = timing_information

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendCommandResultEndSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendCommandResult_EndSession of this SendCommandResultEndSession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timing_information(self):
        """Gets the timing_information of this SendCommandResultEndSession.


        :return: The timing_information of this SendCommandResultEndSession.
        :rtype: AbortTransactionResultTimingInformation
        """
        return self._timing_information

    @timing_information.setter
    def timing_information(self, timing_information):
        """Sets the timing_information of this SendCommandResultEndSession.


        :param timing_information: The timing_information of this SendCommandResultEndSession.
        :type timing_information: AbortTransactionResultTimingInformation
        """

        self._timing_information = timing_information
