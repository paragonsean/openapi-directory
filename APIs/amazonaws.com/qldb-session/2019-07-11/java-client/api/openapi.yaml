openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>The transactional data APIs for Amazon QLDB</p> <note> <p>Instead\
    \ of interacting directly with this API, we recommend using the QLDB driver or\
    \ the QLDB shell to execute data transactions on a ledger.</p> <ul> <li> <p>If\
    \ you are working with an AWS SDK, use the QLDB driver. The driver provides a\
    \ high-level abstraction layer above this <i>QLDB Session</i> data plane and manages\
    \ <code>SendCommand</code> API calls for you. For information and a list of supported\
    \ programming languages, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-driver.html\"\
    >Getting started with the driver</a> in the <i>Amazon QLDB Developer Guide</i>.</p>\
    \ </li> <li> <p>If you are working with the AWS Command Line Interface (AWS CLI),\
    \ use the QLDB shell. The shell is a command line interface that uses the QLDB\
    \ driver to interact with a ledger. For information, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/data-shell.html\"\
    >Accessing Amazon QLDB using the QLDB shell</a>.</p> </li> </ul> </note>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon QLDB Session
  version: 2019-07-11
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: qldb-session
  x-aws-signingName: qldb
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/qldb-session-2019-07-11.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/qldb/
servers:
- description: The QLDB Session multi-region endpoint
  url: "http://session.qldb.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The QLDB Session multi-region endpoint
  url: "https://session.qldb.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The QLDB Session endpoint for China (Beijing) and China (Ningxia)
  url: "http://session.qldb.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The QLDB Session endpoint for China (Beijing) and China (Ningxia)
  url: "https://session.qldb.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=QLDBSession.SendCommand:
    post:
      description: "<p>Sends a command to an Amazon QLDB ledger.</p> <note> <p>Instead\
        \ of interacting directly with this API, we recommend using the QLDB driver\
        \ or the QLDB shell to execute data transactions on a ledger.</p> <ul> <li>\
        \ <p>If you are working with an AWS SDK, use the QLDB driver. The driver provides\
        \ a high-level abstraction layer above this <i>QLDB Session</i> data plane\
        \ and manages <code>SendCommand</code> API calls for you. For information\
        \ and a list of supported programming languages, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-driver.html\"\
        >Getting started with the driver</a> in the <i>Amazon QLDB Developer Guide</i>.</p>\
        \ </li> <li> <p>If you are working with the AWS Command Line Interface (AWS\
        \ CLI), use the QLDB shell. The shell is a command line interface that uses\
        \ the QLDB driver to interact with a ledger. For information, see <a href=\"\
        https://docs.aws.amazon.com/qldb/latest/developerguide/data-shell.html\">Accessing\
        \ Amazon QLDB using the QLDB shell</a>.</p> </li> </ul> </note>"
      operationId: SendCommand
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - QLDBSession.SendCommand
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCommandRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCommandResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSessionException'
          description: InvalidSessionException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OccConflictException'
          description: OccConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateExceededException'
          description: RateExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityExceededException'
          description: CapacityExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    SendCommandResult:
      example:
        CommitTransaction:
          TimingInformation:
            ProcessingTimeMilliseconds: ""
          CommitDigest: ""
          ConsumedIOs:
            WriteIOs: ""
            ReadIOs: ""
          TransactionId: ""
        ExecuteStatement:
          FirstPage:
            NextPageToken: ""
            Values: ""
          TimingInformation:
            ProcessingTimeMilliseconds: ""
          ConsumedIOs:
            WriteIOs: ""
            ReadIOs: ""
        FetchPage:
          TimingInformation:
            ProcessingTimeMilliseconds: ""
          Page:
            NextPageToken: ""
            Values: ""
          ConsumedIOs:
            WriteIOs: ""
            ReadIOs: ""
        EndSession:
          TimingInformation:
            ProcessingTimeMilliseconds: ""
        AbortTransaction:
          TimingInformation:
            ProcessingTimeMilliseconds: ""
        StartSession:
          SessionToken: ""
          TimingInformation:
            ProcessingTimeMilliseconds: ""
        StartTransaction:
          TimingInformation:
            ProcessingTimeMilliseconds: ""
          TransactionId: ""
      properties:
        StartSession:
          $ref: '#/components/schemas/SendCommandResult_StartSession'
        StartTransaction:
          $ref: '#/components/schemas/SendCommandResult_StartTransaction'
        EndSession:
          $ref: '#/components/schemas/SendCommandResult_EndSession'
        CommitTransaction:
          $ref: '#/components/schemas/SendCommandResult_CommitTransaction'
        AbortTransaction:
          $ref: '#/components/schemas/SendCommandResult_AbortTransaction'
        ExecuteStatement:
          $ref: '#/components/schemas/SendCommandResult_ExecuteStatement'
        FetchPage:
          $ref: '#/components/schemas/SendCommandResult_FetchPage'
      type: object
    SendCommandRequest:
      example:
        CommitTransaction:
          CommitDigest: ""
          TransactionId: ""
        ExecuteStatement:
          Parameters: ""
          Statement: ""
          TransactionId: ""
        SessionToken: ""
        FetchPage:
          NextPageToken: ""
          TransactionId: ""
        EndSession: ""
        AbortTransaction: ""
        StartSession:
          LedgerName: ""
        StartTransaction: ""
      properties:
        SessionToken:
          allOf:
          - $ref: '#/components/schemas/SessionToken'
          - description: "<p>Specifies the session token for the current command.\
              \ A session token is constant throughout the life of the session.</p>\
              \ <p>To obtain a session token, run the <code>StartSession</code> command.\
              \ This <code>SessionToken</code> is required for every subsequent command\
              \ that is issued during the current session.</p>"
        StartSession:
          $ref: '#/components/schemas/SendCommandRequest_StartSession'
        StartTransaction:
          allOf:
          - $ref: '#/components/schemas/StartTransactionRequest'
          - description: Command to start a new transaction.
        EndSession:
          allOf:
          - $ref: '#/components/schemas/EndSessionRequest'
          - description: Command to end the current session.
        CommitTransaction:
          $ref: '#/components/schemas/SendCommandRequest_CommitTransaction'
        AbortTransaction:
          allOf:
          - $ref: '#/components/schemas/AbortTransactionRequest'
          - description: Command to abort the current transaction.
        ExecuteStatement:
          $ref: '#/components/schemas/SendCommandRequest_ExecuteStatement'
        FetchPage:
          $ref: '#/components/schemas/SendCommandRequest_FetchPage'
      title: SendCommandRequest
      type: object
    BadRequestException: {}
    InvalidSessionException: {}
    OccConflictException: {}
    RateExceededException: {}
    LimitExceededException: {}
    CapacityExceededException: {}
    AbortTransactionRequest:
      description: Contains the details of the transaction to abort.
      properties: {}
      type: object
    TimingInformation:
      description: Contains server-side performance information for a command. Amazon
        QLDB captures timing information between the times when it receives the request
        and when it sends the corresponding response.
      properties:
        ProcessingTimeMilliseconds:
          allOf:
          - $ref: '#/components/schemas/ProcessingTimeMilliseconds'
          - description: "The amount of time that QLDB spent on processing the command,\
              \ measured in milliseconds."
      type: object
    AbortTransactionResult:
      description: Contains the details of the aborted transaction.
      properties:
        TimingInformation:
          $ref: '#/components/schemas/AbortTransactionResult_TimingInformation'
      type: object
    CommitDigest:
      type: string
    TransactionId:
      maxLength: 22
      minLength: 22
      pattern: "^[A-Za-z-0-9]+$"
      type: string
    CommitTransactionRequest:
      description: Contains the details of the transaction to commit.
      properties:
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionId'
          - description: Specifies the transaction ID of the transaction to commit.
        CommitDigest:
          allOf:
          - $ref: '#/components/schemas/CommitDigest'
          - description: "<p>Specifies the commit digest for the transaction to commit.\
              \ For every active transaction, the commit digest must be passed. QLDB\
              \ validates <code>CommitDigest</code> and rejects the commit with an\
              \ error if the digest computed on the client does not match the digest\
              \ computed by QLDB.</p> <p>The purpose of the <code>CommitDigest</code>\
              \ parameter is to ensure that QLDB commits a transaction if and only\
              \ if the server has processed the exact set of statements sent by the\
              \ client, in the same order that client sent them, and with no duplicates.</p>"
      required:
      - CommitDigest
      - TransactionId
      type: object
    IOUsage:
      description: Contains I/O usage metrics for a command that was invoked.
      properties:
        ReadIOs:
          allOf:
          - $ref: '#/components/schemas/ReadIOs'
          - description: The number of read I/O requests that the command made.
        WriteIOs:
          allOf:
          - $ref: '#/components/schemas/WriteIOs'
          - description: The number of write I/O requests that the command made.
      type: object
    CommitTransactionResult:
      description: Contains the details of the committed transaction.
      properties:
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionId'
          - description: The transaction ID of the committed transaction.
        CommitDigest:
          allOf:
          - $ref: '#/components/schemas/CommitDigest'
          - description: The commit digest of the committed transaction.
        TimingInformation:
          $ref: '#/components/schemas/AbortTransactionResult_TimingInformation'
        ConsumedIOs:
          $ref: '#/components/schemas/CommitTransactionResult_ConsumedIOs'
      type: object
    EndSessionRequest:
      description: Specifies a request to end the session.
      properties: {}
      type: object
    EndSessionResult:
      description: Contains the details of the ended session.
      properties:
        TimingInformation:
          $ref: '#/components/schemas/AbortTransactionResult_TimingInformation'
      type: object
    Statement:
      maxLength: 100000
      minLength: 1
      type: string
    StatementParameters:
      items:
        $ref: '#/components/schemas/ValueHolder'
      type: array
    ExecuteStatementRequest:
      description: Specifies a request to execute a statement.
      properties:
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionId'
          - description: Specifies the transaction ID of the request.
        Statement:
          allOf:
          - $ref: '#/components/schemas/Statement'
          - description: Specifies the statement of the request.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/StatementParameters'
          - description: Specifies the parameters for the parameterized statement
              in the request.
      required:
      - Statement
      - TransactionId
      type: object
    Page:
      description: Contains details of the fetched page.
      properties:
        Values:
          allOf:
          - $ref: '#/components/schemas/ValueHolders'
          - description: A structure that contains values in multiple encoding formats.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: The token of the next page.
      type: object
    ExecuteStatementResult:
      description: Contains the details of the executed statement.
      properties:
        FirstPage:
          $ref: '#/components/schemas/ExecuteStatementResult_FirstPage'
        TimingInformation:
          $ref: '#/components/schemas/AbortTransactionResult_TimingInformation'
        ConsumedIOs:
          $ref: '#/components/schemas/CommitTransactionResult_ConsumedIOs'
      type: object
    PageToken:
      maxLength: 1024
      minLength: 4
      pattern: "^[A-Za-z-0-9+/=]+$"
      type: string
    FetchPageRequest:
      description: Specifies the details of the page to be fetched.
      properties:
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionId'
          - description: Specifies the transaction ID of the page to be fetched.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: Specifies the next page token of the page to be fetched.
      required:
      - NextPageToken
      - TransactionId
      type: object
    FetchPageResult:
      description: Contains the page that was fetched.
      properties:
        Page:
          $ref: '#/components/schemas/FetchPageResult_Page'
        TimingInformation:
          $ref: '#/components/schemas/AbortTransactionResult_TimingInformation'
        ConsumedIOs:
          $ref: '#/components/schemas/CommitTransactionResult_ConsumedIOs'
      type: object
    ReadIOs:
      type: integer
    WriteIOs:
      type: integer
    IonBinary:
      maxLength: 131072
      minLength: 1
      type: string
    IonText:
      maxLength: 1048576
      minLength: 1
      type: string
    LedgerName:
      maxLength: 32
      minLength: 1
      pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
      type: string
    ValueHolders:
      items:
        $ref: '#/components/schemas/ValueHolder'
      type: array
    ProcessingTimeMilliseconds:
      type: integer
    SessionToken:
      maxLength: 1024
      minLength: 4
      pattern: "^[A-Za-z-0-9+/=]+$"
      type: string
    StartSessionRequest:
      description: Specifies a request to start a new session.
      properties:
        LedgerName:
          allOf:
          - $ref: '#/components/schemas/LedgerName'
          - description: The name of the ledger to start a new session against.
      required:
      - LedgerName
      type: object
    StartTransactionRequest:
      description: Specifies a request to start a transaction.
      properties: {}
      type: object
    StartSessionResult:
      description: Contains the details of the started session.
      properties:
        SessionToken:
          allOf:
          - $ref: '#/components/schemas/SessionToken'
          - description: Session token of the started session. This <code>SessionToken</code>
              is required for every subsequent command that is issued during the current
              session.
        TimingInformation:
          $ref: '#/components/schemas/AbortTransactionResult_TimingInformation'
      type: object
    StartTransactionResult:
      description: Contains the details of the started transaction.
      properties:
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionId'
          - description: The transaction ID of the started transaction.
        TimingInformation:
          $ref: '#/components/schemas/AbortTransactionResult_TimingInformation'
      type: object
    ValueHolder:
      description: A structure that can contain a value in multiple encoding formats.
      properties:
        IonBinary:
          allOf:
          - $ref: '#/components/schemas/IonBinary'
          - description: An Amazon Ion binary value contained in a <code>ValueHolder</code>
              structure.
        IonText:
          allOf:
          - $ref: '#/components/schemas/IonText'
          - description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code>
              structure.
      type: object
    SendCommandResult_StartSession:
      allOf:
      - $ref: '#/components/schemas/StartSessionResult'
      - description: Contains the details of the started session that includes a session
          token. This <code>SessionToken</code> is required for every subsequent command
          that is issued during the current session.
      example:
        SessionToken: ""
        TimingInformation:
          ProcessingTimeMilliseconds: ""
    SendCommandResult_StartTransaction:
      allOf:
      - $ref: '#/components/schemas/StartTransactionResult'
      - description: Contains the details of the started transaction.
      example:
        TimingInformation:
          ProcessingTimeMilliseconds: ""
        TransactionId: ""
    SendCommandResult_EndSession:
      allOf:
      - $ref: '#/components/schemas/EndSessionResult'
      - description: Contains the details of the ended session.
      example:
        TimingInformation:
          ProcessingTimeMilliseconds: ""
    SendCommandResult_CommitTransaction:
      allOf:
      - $ref: '#/components/schemas/CommitTransactionResult'
      - description: Contains the details of the committed transaction.
      example:
        TimingInformation:
          ProcessingTimeMilliseconds: ""
        CommitDigest: ""
        ConsumedIOs:
          WriteIOs: ""
          ReadIOs: ""
        TransactionId: ""
    SendCommandResult_AbortTransaction:
      allOf:
      - $ref: '#/components/schemas/AbortTransactionResult'
      - description: Contains the details of the aborted transaction.
      example:
        TimingInformation:
          ProcessingTimeMilliseconds: ""
    SendCommandResult_ExecuteStatement:
      allOf:
      - $ref: '#/components/schemas/ExecuteStatementResult'
      - description: Contains the details of the executed statement.
      example:
        FirstPage:
          NextPageToken: ""
          Values: ""
        TimingInformation:
          ProcessingTimeMilliseconds: ""
        ConsumedIOs:
          WriteIOs: ""
          ReadIOs: ""
    SendCommandResult_FetchPage:
      allOf:
      - $ref: '#/components/schemas/FetchPageResult'
      - description: Contains the details of the fetched page.
      example:
        TimingInformation:
          ProcessingTimeMilliseconds: ""
        Page:
          NextPageToken: ""
          Values: ""
        ConsumedIOs:
          WriteIOs: ""
          ReadIOs: ""
    SendCommandRequest_StartSession:
      allOf:
      - $ref: '#/components/schemas/StartSessionRequest'
      - description: Command to start a new session. A session token is obtained as
          part of the response.
      example:
        LedgerName: ""
    SendCommandRequest_CommitTransaction:
      allOf:
      - $ref: '#/components/schemas/CommitTransactionRequest'
      - description: Command to commit the specified transaction.
      example:
        CommitDigest: ""
        TransactionId: ""
    SendCommandRequest_ExecuteStatement:
      allOf:
      - $ref: '#/components/schemas/ExecuteStatementRequest'
      - description: Command to execute a statement in the specified transaction.
      example:
        Parameters: ""
        Statement: ""
        TransactionId: ""
    SendCommandRequest_FetchPage:
      allOf:
      - $ref: '#/components/schemas/FetchPageRequest'
      - description: Command to fetch a page.
      example:
        NextPageToken: ""
        TransactionId: ""
    AbortTransactionResult_TimingInformation:
      allOf:
      - $ref: '#/components/schemas/TimingInformation'
      - description: Contains server-side performance information for the command.
      example:
        ProcessingTimeMilliseconds: ""
    CommitTransactionResult_ConsumedIOs:
      allOf:
      - $ref: '#/components/schemas/IOUsage'
      - description: Contains metrics about the number of I/O requests that were consumed.
      example:
        WriteIOs: ""
        ReadIOs: ""
    ExecuteStatementResult_FirstPage:
      allOf:
      - $ref: '#/components/schemas/Page'
      - description: Contains the details of the first fetched page.
      example:
        NextPageToken: ""
        Values: ""
    FetchPageResult_Page:
      allOf:
      - $ref: '#/components/schemas/Page'
      - description: Contains details of the fetched page.
      example:
        NextPageToken: ""
        Values: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4

