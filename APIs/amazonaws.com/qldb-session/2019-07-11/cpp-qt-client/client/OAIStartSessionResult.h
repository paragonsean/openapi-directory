/**
 * Amazon QLDB Session
 * <p>The transactional data APIs for Amazon QLDB</p> <note> <p>Instead of interacting directly with this API, we recommend using the QLDB driver or the QLDB shell to execute data transactions on a ledger.</p> <ul> <li> <p>If you are working with an AWS SDK, use the QLDB driver. The driver provides a high-level abstraction layer above this <i>QLDB Session</i> data plane and manages <code>SendCommand</code> API calls for you. For information and a list of supported programming languages, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-driver.html\">Getting started with the driver</a> in the <i>Amazon QLDB Developer Guide</i>.</p> </li> <li> <p>If you are working with the AWS Command Line Interface (AWS CLI), use the QLDB shell. The shell is a command line interface that uses the QLDB driver to interact with a ledger. For information, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/data-shell.html\">Accessing Amazon QLDB using the QLDB shell</a>.</p> </li> </ul> </note>
 *
 * The version of the OpenAPI document: 2019-07-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartSessionResult.h
 *
 * Contains the details of the started session.
 */

#ifndef OAIStartSessionResult_H
#define OAIStartSessionResult_H

#include <QJsonObject>

#include "OAIAbortTransactionResult_TimingInformation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAbortTransactionResult_TimingInformation;

class OAIStartSessionResult : public OAIObject {
public:
    OAIStartSessionResult();
    OAIStartSessionResult(QString json);
    ~OAIStartSessionResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSessionToken() const;
    void setSessionToken(const QString &session_token);
    bool is_session_token_Set() const;
    bool is_session_token_Valid() const;

    OAIAbortTransactionResult_TimingInformation getTimingInformation() const;
    void setTimingInformation(const OAIAbortTransactionResult_TimingInformation &timing_information);
    bool is_timing_information_Set() const;
    bool is_timing_information_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_session_token;
    bool m_session_token_isSet;
    bool m_session_token_isValid;

    OAIAbortTransactionResult_TimingInformation m_timing_information;
    bool m_timing_information_isSet;
    bool m_timing_information_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartSessionResult)

#endif // OAIStartSessionResult_H
