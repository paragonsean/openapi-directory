/**
 * AWS ARC - Zonal Shift
 * <p>This is the API Reference Guide for the zonal shift feature of Amazon Route 53 Application Recovery Controller. This guide is for developers who need detailed information about zonal shift API actions, data types, and errors.</p> <p>Zonal shift is in preview release for Amazon Route 53 Application Recovery Controller and is subject to change.</p> <p>Zonal shift in Route 53 ARC enables you to move traffic for a load balancer resource away from an Availability Zone. Starting a zonal shift helps your application recover immediately, for example, from a developer's bad code deployment or from an AWS infrastructure failure in a single Availability Zone, reducing the impact and time lost from an issue in one zone. </p> <p>Supported AWS resources are automatically registered with Route 53 ARC. Resources that are registered for zonal shifts in Route 53 ARC are managed resources in Route 53 ARC. You can start a zonal shift for any managed resource in your account in a Region. At this time, you can only start a zonal shift for Network Load Balancers and Application Load Balancers with cross-zone load balancing turned off.</p> <p>Zonal shifts are temporary. You must specify an expiration when you start a zonal shift, of up to three days initially. If you want to still keep traffic away from an Availability Zone, you can update the zonal shift and set a new expiration. You can also cancel a zonal shift, before it expires, for example, if you're ready to restore traffic to the Availability Zone.</p> <p>For more information about using zonal shift, see the <a href=\"https://docs.aws.amazon.com/r53recovery/latest/dg/what-is-route53-recovery.html\">Amazon Route 53 Application Recovery Controller Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AppliedStatus from './model/AppliedStatus';
import GetManagedResourceResponse from './model/GetManagedResourceResponse';
import ListManagedResourcesResponse from './model/ListManagedResourcesResponse';
import ListZonalShiftsResponse from './model/ListZonalShiftsResponse';
import ManagedResourceSummary from './model/ManagedResourceSummary';
import StartZonalShiftRequest from './model/StartZonalShiftRequest';
import UpdateZonalShiftRequest from './model/UpdateZonalShiftRequest';
import ZonalShift from './model/ZonalShift';
import ZonalShiftInResource from './model/ZonalShiftInResource';
import ZonalShiftStatus from './model/ZonalShiftStatus';
import ZonalShiftSummary from './model/ZonalShiftSummary';
import DefaultApi from './api/DefaultApi';


/**
* &lt;p&gt;This is the API Reference Guide for the zonal shift feature of Amazon Route 53 Application Recovery Controller. This guide is for developers who need detailed information about zonal shift API actions, data types, and errors.&lt;/p&gt; &lt;p&gt;Zonal shift is in preview release for Amazon Route 53 Application Recovery Controller and is subject to change.&lt;/p&gt; &lt;p&gt;Zonal shift in Route 53 ARC enables you to move traffic for a load balancer resource away from an Availability Zone. Starting a zonal shift helps your application recover immediately, for example, from a developer&#39;s bad code deployment or from an AWS infrastructure failure in a single Availability Zone, reducing the impact and time lost from an issue in one zone. &lt;/p&gt; &lt;p&gt;Supported AWS resources are automatically registered with Route 53 ARC. Resources that are registered for zonal shifts in Route 53 ARC are managed resources in Route 53 ARC. You can start a zonal shift for any managed resource in your account in a Region. At this time, you can only start a zonal shift for Network Load Balancers and Application Load Balancers with cross-zone load balancing turned off.&lt;/p&gt; &lt;p&gt;Zonal shifts are temporary. You must specify an expiration when you start a zonal shift, of up to three days initially. If you want to still keep traffic away from an Availability Zone, you can update the zonal shift and set a new expiration. You can also cancel a zonal shift, before it expires, for example, if you&#39;re ready to restore traffic to the Availability Zone.&lt;/p&gt; &lt;p&gt;For more information about using zonal shift, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/r53recovery/latest/dg/what-is-route53-recovery.html\&quot;&gt;Amazon Route 53 Application Recovery Controller Developer Guide&lt;/a&gt;.&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AwsArcZonalShift = require('index'); // See note below*.
* var xxxSvc = new AwsArcZonalShift.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AwsArcZonalShift.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AwsArcZonalShift.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AwsArcZonalShift.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2022-10-30
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AppliedStatus model constructor.
     * @property {module:model/AppliedStatus}
     */
    AppliedStatus,

    /**
     * The GetManagedResourceResponse model constructor.
     * @property {module:model/GetManagedResourceResponse}
     */
    GetManagedResourceResponse,

    /**
     * The ListManagedResourcesResponse model constructor.
     * @property {module:model/ListManagedResourcesResponse}
     */
    ListManagedResourcesResponse,

    /**
     * The ListZonalShiftsResponse model constructor.
     * @property {module:model/ListZonalShiftsResponse}
     */
    ListZonalShiftsResponse,

    /**
     * The ManagedResourceSummary model constructor.
     * @property {module:model/ManagedResourceSummary}
     */
    ManagedResourceSummary,

    /**
     * The StartZonalShiftRequest model constructor.
     * @property {module:model/StartZonalShiftRequest}
     */
    StartZonalShiftRequest,

    /**
     * The UpdateZonalShiftRequest model constructor.
     * @property {module:model/UpdateZonalShiftRequest}
     */
    UpdateZonalShiftRequest,

    /**
     * The ZonalShift model constructor.
     * @property {module:model/ZonalShift}
     */
    ZonalShift,

    /**
     * The ZonalShiftInResource model constructor.
     * @property {module:model/ZonalShiftInResource}
     */
    ZonalShiftInResource,

    /**
     * The ZonalShiftStatus model constructor.
     * @property {module:model/ZonalShiftStatus}
     */
    ZonalShiftStatus,

    /**
     * The ZonalShiftSummary model constructor.
     * @property {module:model/ZonalShiftSummary}
     */
    ZonalShiftSummary,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
