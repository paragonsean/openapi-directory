# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManagedResourceSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, availability_zones: List=None, name: str=None):
        """ManagedResourceSummary - a model defined in OpenAPI

        :param arn: The arn of this ManagedResourceSummary.
        :param availability_zones: The availability_zones of this ManagedResourceSummary.
        :param name: The name of this ManagedResourceSummary.
        """
        self.openapi_types = {
            'arn': str,
            'availability_zones': List,
            'name': str
        }

        self.attribute_map = {
            'arn': 'arn',
            'availability_zones': 'availabilityZones',
            'name': 'name'
        }

        self._arn = arn
        self._availability_zones = availability_zones
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedResourceSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedResourceSummary of this ManagedResourceSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this ManagedResourceSummary.


        :return: The arn of this ManagedResourceSummary.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ManagedResourceSummary.


        :param arn: The arn of this ManagedResourceSummary.
        :type arn: str
        """

        self._arn = arn

    @property
    def availability_zones(self):
        """Gets the availability_zones of this ManagedResourceSummary.


        :return: The availability_zones of this ManagedResourceSummary.
        :rtype: List
        """
        return self._availability_zones

    @availability_zones.setter
    def availability_zones(self, availability_zones):
        """Sets the availability_zones of this ManagedResourceSummary.


        :param availability_zones: The availability_zones of this ManagedResourceSummary.
        :type availability_zones: List
        """
        if availability_zones is None:
            raise ValueError("Invalid value for `availability_zones`, must not be `None`")

        self._availability_zones = availability_zones

    @property
    def name(self):
        """Gets the name of this ManagedResourceSummary.


        :return: The name of this ManagedResourceSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ManagedResourceSummary.


        :param name: The name of this ManagedResourceSummary.
        :type name: str
        """

        self._name = name
