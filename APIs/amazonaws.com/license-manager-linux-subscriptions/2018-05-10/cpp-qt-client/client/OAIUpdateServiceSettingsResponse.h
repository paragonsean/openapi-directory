/**
 * AWS License Manager Linux Subscriptions
 * With License Manager, you can discover and track your commercial Linux subscriptions on running Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateServiceSettingsResponse.h
 *
 * 
 */

#ifndef OAIUpdateServiceSettingsResponse_H
#define OAIUpdateServiceSettingsResponse_H

#include <QJsonObject>

#include "OAILinuxSubscriptionsDiscovery.h"
#include "OAIStatus.h"
#include "OAIUpdateServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings;

class OAIUpdateServiceSettingsResponse : public OAIObject {
public:
    OAIUpdateServiceSettingsResponse();
    OAIUpdateServiceSettingsResponse(QString json);
    ~OAIUpdateServiceSettingsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getHomeRegions() const;
    void setHomeRegions(const QList &home_regions);
    bool is_home_regions_Set() const;
    bool is_home_regions_Valid() const;

    OAILinuxSubscriptionsDiscovery getLinuxSubscriptionsDiscovery() const;
    void setLinuxSubscriptionsDiscovery(const OAILinuxSubscriptionsDiscovery &linux_subscriptions_discovery);
    bool is_linux_subscriptions_discovery_Set() const;
    bool is_linux_subscriptions_discovery_Valid() const;

    OAIUpdateServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings getLinuxSubscriptionsDiscoverySettings() const;
    void setLinuxSubscriptionsDiscoverySettings(const OAIUpdateServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings &linux_subscriptions_discovery_settings);
    bool is_linux_subscriptions_discovery_settings_Set() const;
    bool is_linux_subscriptions_discovery_settings_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap getStatusMessage() const;
    void setStatusMessage(const QMap &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_home_regions;
    bool m_home_regions_isSet;
    bool m_home_regions_isValid;

    OAILinuxSubscriptionsDiscovery m_linux_subscriptions_discovery;
    bool m_linux_subscriptions_discovery_isSet;
    bool m_linux_subscriptions_discovery_isValid;

    OAIUpdateServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings m_linux_subscriptions_discovery_settings;
    bool m_linux_subscriptions_discovery_settings_isSet;
    bool m_linux_subscriptions_discovery_settings_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateServiceSettingsResponse)

#endif // OAIUpdateServiceSettingsResponse_H
