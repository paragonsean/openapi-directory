/**
 * AWS License Manager Linux Subscriptions
 * With License Manager, you can discover and track your commercial Linux subscriptions on running Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings.h
 *
 * 
 */

#ifndef OAIGetServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings_H
#define OAIGetServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings_H

#include <QJsonObject>

#include "OAIOrganizationIntegration.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings : public OAIObject {
public:
    OAIGetServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings();
    OAIGetServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings(QString json);
    ~OAIGetServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOrganizationIntegration getOrganizationIntegration() const;
    void setOrganizationIntegration(const OAIOrganizationIntegration &organization_integration);
    bool is_organization_integration_Set() const;
    bool is_organization_integration_Valid() const;

    QList getSourceRegions() const;
    void setSourceRegions(const QList &source_regions);
    bool is_source_regions_Set() const;
    bool is_source_regions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOrganizationIntegration m_organization_integration;
    bool m_organization_integration_isSet;
    bool m_organization_integration_isValid;

    QList m_source_regions;
    bool m_source_regions_isSet;
    bool m_source_regions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings)

#endif // OAIGetServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings_H
