/**
 * AWS License Manager Linux Subscriptions
 * With License Manager, you can discover and track your commercial Linux subscriptions on running Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstance.h
 *
 * Details discovered information about a running instance using Linux subscriptions.
 */

#ifndef OAIInstance_H
#define OAIInstance_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInstance : public OAIObject {
public:
    OAIInstance();
    OAIInstance(QString json);
    ~OAIInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getAmiId() const;
    void setAmiId(const QString &ami_id);
    bool is_ami_id_Set() const;
    bool is_ami_id_Valid() const;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getLastUpdatedTime() const;
    void setLastUpdatedTime(const QString &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QList getProductCode() const;
    void setProductCode(const QList &product_code);
    bool is_product_code_Set() const;
    bool is_product_code_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSubscriptionName() const;
    void setSubscriptionName(const QString &subscription_name);
    bool is_subscription_name_Set() const;
    bool is_subscription_name_Valid() const;

    QString getUsageOperation() const;
    void setUsageOperation(const QString &usage_operation);
    bool is_usage_operation_Set() const;
    bool is_usage_operation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_ami_id;
    bool m_ami_id_isSet;
    bool m_ami_id_isValid;

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QList m_product_code;
    bool m_product_code_isSet;
    bool m_product_code_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_subscription_name;
    bool m_subscription_name_isSet;
    bool m_subscription_name_isValid;

    QString m_usage_operation;
    bool m_usage_operation_isSet;
    bool m_usage_operation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstance)

#endif // OAIInstance_H
