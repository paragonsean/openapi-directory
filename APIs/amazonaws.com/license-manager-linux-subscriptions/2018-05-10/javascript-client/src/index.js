/**
 * AWS License Manager Linux Subscriptions
 * With License Manager, you can discover and track your commercial Linux subscriptions on running Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Filter from './model/Filter';
import GetServiceSettingsResponse from './model/GetServiceSettingsResponse';
import GetServiceSettingsResponseLinuxSubscriptionsDiscoverySettings from './model/GetServiceSettingsResponseLinuxSubscriptionsDiscoverySettings';
import Instance from './model/Instance';
import LinuxSubscriptionsDiscovery from './model/LinuxSubscriptionsDiscovery';
import LinuxSubscriptionsDiscoverySettings from './model/LinuxSubscriptionsDiscoverySettings';
import ListLinuxSubscriptionInstancesRequest from './model/ListLinuxSubscriptionInstancesRequest';
import ListLinuxSubscriptionInstancesResponse from './model/ListLinuxSubscriptionInstancesResponse';
import ListLinuxSubscriptionsRequest from './model/ListLinuxSubscriptionsRequest';
import ListLinuxSubscriptionsResponse from './model/ListLinuxSubscriptionsResponse';
import Operator from './model/Operator';
import OrganizationIntegration from './model/OrganizationIntegration';
import Status from './model/Status';
import Subscription from './model/Subscription';
import UpdateServiceSettingsRequest from './model/UpdateServiceSettingsRequest';
import UpdateServiceSettingsRequestLinuxSubscriptionsDiscoverySettings from './model/UpdateServiceSettingsRequestLinuxSubscriptionsDiscoverySettings';
import UpdateServiceSettingsResponse from './model/UpdateServiceSettingsResponse';
import UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings from './model/UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings';
import DefaultApi from './api/DefaultApi';


/**
* With License Manager, you can discover and track your commercial Linux subscriptions on running Amazon EC2 instances..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AwsLicenseManagerLinuxSubscriptions = require('index'); // See note below*.
* var xxxSvc = new AwsLicenseManagerLinuxSubscriptions.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AwsLicenseManagerLinuxSubscriptions.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AwsLicenseManagerLinuxSubscriptions.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AwsLicenseManagerLinuxSubscriptions.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-05-10
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Filter model constructor.
     * @property {module:model/Filter}
     */
    Filter,

    /**
     * The GetServiceSettingsResponse model constructor.
     * @property {module:model/GetServiceSettingsResponse}
     */
    GetServiceSettingsResponse,

    /**
     * The GetServiceSettingsResponseLinuxSubscriptionsDiscoverySettings model constructor.
     * @property {module:model/GetServiceSettingsResponseLinuxSubscriptionsDiscoverySettings}
     */
    GetServiceSettingsResponseLinuxSubscriptionsDiscoverySettings,

    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance,

    /**
     * The LinuxSubscriptionsDiscovery model constructor.
     * @property {module:model/LinuxSubscriptionsDiscovery}
     */
    LinuxSubscriptionsDiscovery,

    /**
     * The LinuxSubscriptionsDiscoverySettings model constructor.
     * @property {module:model/LinuxSubscriptionsDiscoverySettings}
     */
    LinuxSubscriptionsDiscoverySettings,

    /**
     * The ListLinuxSubscriptionInstancesRequest model constructor.
     * @property {module:model/ListLinuxSubscriptionInstancesRequest}
     */
    ListLinuxSubscriptionInstancesRequest,

    /**
     * The ListLinuxSubscriptionInstancesResponse model constructor.
     * @property {module:model/ListLinuxSubscriptionInstancesResponse}
     */
    ListLinuxSubscriptionInstancesResponse,

    /**
     * The ListLinuxSubscriptionsRequest model constructor.
     * @property {module:model/ListLinuxSubscriptionsRequest}
     */
    ListLinuxSubscriptionsRequest,

    /**
     * The ListLinuxSubscriptionsResponse model constructor.
     * @property {module:model/ListLinuxSubscriptionsResponse}
     */
    ListLinuxSubscriptionsResponse,

    /**
     * The Operator model constructor.
     * @property {module:model/Operator}
     */
    Operator,

    /**
     * The OrganizationIntegration model constructor.
     * @property {module:model/OrganizationIntegration}
     */
    OrganizationIntegration,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The UpdateServiceSettingsRequest model constructor.
     * @property {module:model/UpdateServiceSettingsRequest}
     */
    UpdateServiceSettingsRequest,

    /**
     * The UpdateServiceSettingsRequestLinuxSubscriptionsDiscoverySettings model constructor.
     * @property {module:model/UpdateServiceSettingsRequestLinuxSubscriptionsDiscoverySettings}
     */
    UpdateServiceSettingsRequestLinuxSubscriptionsDiscoverySettings,

    /**
     * The UpdateServiceSettingsResponse model constructor.
     * @property {module:model/UpdateServiceSettingsResponse}
     */
    UpdateServiceSettingsResponse,

    /**
     * The UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings model constructor.
     * @property {module:model/UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings}
     */
    UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
