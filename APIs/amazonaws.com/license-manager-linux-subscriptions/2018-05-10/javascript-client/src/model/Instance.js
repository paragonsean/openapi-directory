/**
 * AWS License Manager Linux Subscriptions
 * With License Manager, you can discover and track your commercial Linux subscriptions on running Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Instance model module.
 * @module model/Instance
 * @version 2018-05-10
 */
class Instance {
    /**
     * Constructs a new <code>Instance</code>.
     * Details discovered information about a running instance using Linux subscriptions.
     * @alias module:model/Instance
     */
    constructor() { 
        
        Instance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Instance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Instance} obj Optional instance to populate.
     * @return {module:model/Instance} The populated <code>Instance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Instance();

            if (data.hasOwnProperty('AccountID')) {
                obj['AccountID'] = ApiClient.convertToType(data['AccountID'], 'String');
            }
            if (data.hasOwnProperty('AmiId')) {
                obj['AmiId'] = ApiClient.convertToType(data['AmiId'], 'String');
            }
            if (data.hasOwnProperty('InstanceID')) {
                obj['InstanceID'] = ApiClient.convertToType(data['InstanceID'], 'String');
            }
            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], 'String');
            }
            if (data.hasOwnProperty('LastUpdatedTime')) {
                obj['LastUpdatedTime'] = ApiClient.convertToType(data['LastUpdatedTime'], 'String');
            }
            if (data.hasOwnProperty('ProductCode')) {
                obj['ProductCode'] = ApiClient.convertToType(data['ProductCode'], Array);
            }
            if (data.hasOwnProperty('Region')) {
                obj['Region'] = ApiClient.convertToType(data['Region'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('SubscriptionName')) {
                obj['SubscriptionName'] = ApiClient.convertToType(data['SubscriptionName'], 'String');
            }
            if (data.hasOwnProperty('UsageOperation')) {
                obj['UsageOperation'] = ApiClient.convertToType(data['UsageOperation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Instance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Instance</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AccountID`
        if (data['AccountID']) { // data not null
          String.validateJSON(data['AccountID']);
        }
        // validate the optional field `AmiId`
        if (data['AmiId']) { // data not null
          String.validateJSON(data['AmiId']);
        }
        // validate the optional field `InstanceID`
        if (data['InstanceID']) { // data not null
          String.validateJSON(data['InstanceID']);
        }
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          String.validateJSON(data['InstanceType']);
        }
        // validate the optional field `LastUpdatedTime`
        if (data['LastUpdatedTime']) { // data not null
          String.validateJSON(data['LastUpdatedTime']);
        }
        // validate the optional field `ProductCode`
        if (data['ProductCode']) { // data not null
          Array.validateJSON(data['ProductCode']);
        }
        // validate the optional field `Region`
        if (data['Region']) { // data not null
          String.validateJSON(data['Region']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `SubscriptionName`
        if (data['SubscriptionName']) { // data not null
          String.validateJSON(data['SubscriptionName']);
        }
        // validate the optional field `UsageOperation`
        if (data['UsageOperation']) { // data not null
          String.validateJSON(data['UsageOperation']);
        }

        return true;
    }


}



/**
 * @member {String} AccountID
 */
Instance.prototype['AccountID'] = undefined;

/**
 * @member {String} AmiId
 */
Instance.prototype['AmiId'] = undefined;

/**
 * @member {String} InstanceID
 */
Instance.prototype['InstanceID'] = undefined;

/**
 * @member {String} InstanceType
 */
Instance.prototype['InstanceType'] = undefined;

/**
 * @member {String} LastUpdatedTime
 */
Instance.prototype['LastUpdatedTime'] = undefined;

/**
 * @member {Array} ProductCode
 */
Instance.prototype['ProductCode'] = undefined;

/**
 * @member {String} Region
 */
Instance.prototype['Region'] = undefined;

/**
 * @member {String} Status
 */
Instance.prototype['Status'] = undefined;

/**
 * @member {String} SubscriptionName
 */
Instance.prototype['SubscriptionName'] = undefined;

/**
 * @member {String} UsageOperation
 */
Instance.prototype['UsageOperation'] = undefined;






export default Instance;

