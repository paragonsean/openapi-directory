/**
 * AWS License Manager Linux Subscriptions
 * With License Manager, you can discover and track your commercial Linux subscriptions on running Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinuxSubscriptionsDiscoverySettings from './LinuxSubscriptionsDiscoverySettings';
import OrganizationIntegration from './OrganizationIntegration';

/**
 * The UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings model module.
 * @module model/UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings
 * @version 2018-05-10
 */
class UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings {
    /**
     * Constructs a new <code>UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings</code>.
     * @alias module:model/UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings
     * @implements module:model/LinuxSubscriptionsDiscoverySettings
     * @param organizationIntegration {module:model/OrganizationIntegration} 
     * @param sourceRegions {Array} 
     */
    constructor(organizationIntegration, sourceRegions) { 
        LinuxSubscriptionsDiscoverySettings.initialize(this, organizationIntegration, sourceRegions);
        UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.initialize(this, organizationIntegration, sourceRegions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, organizationIntegration, sourceRegions) { 
        obj['OrganizationIntegration'] = organizationIntegration;
        obj['SourceRegions'] = sourceRegions;
    }

    /**
     * Constructs a <code>UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings} obj Optional instance to populate.
     * @return {module:model/UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings} The populated <code>UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings();
            LinuxSubscriptionsDiscoverySettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('OrganizationIntegration')) {
                obj['OrganizationIntegration'] = ApiClient.convertToType(data['OrganizationIntegration'], OrganizationIntegration);
            }
            if (data.hasOwnProperty('SourceRegions')) {
                obj['SourceRegions'] = ApiClient.convertToType(data['SourceRegions'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `OrganizationIntegration`
        if (data['OrganizationIntegration']) { // data not null
          OrganizationIntegration.validateJSON(data['OrganizationIntegration']);
        }
        // validate the optional field `SourceRegions`
        if (data['SourceRegions']) { // data not null
          Array.validateJSON(data['SourceRegions']);
        }

        return true;
    }


}

UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.RequiredProperties = ["OrganizationIntegration", "SourceRegions"];

/**
 * @member {module:model/OrganizationIntegration} OrganizationIntegration
 */
UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.prototype['OrganizationIntegration'] = undefined;

/**
 * @member {Array} SourceRegions
 */
UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.prototype['SourceRegions'] = undefined;


// Implement LinuxSubscriptionsDiscoverySettings interface:
/**
 * @member {module:model/OrganizationIntegration} OrganizationIntegration
 */
LinuxSubscriptionsDiscoverySettings.prototype['OrganizationIntegration'] = undefined;
/**
 * @member {Array} SourceRegions
 */
LinuxSubscriptionsDiscoverySettings.prototype['SourceRegions'] = undefined;




export default UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings;

