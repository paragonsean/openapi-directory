/*
 * AWS License Manager Linux Subscriptions
 * With License Manager, you can discover and track your commercial Linux subscriptions on running Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetServiceSettingsResponse;
import org.openapitools.client.model.ListLinuxSubscriptionInstancesRequest;
import org.openapitools.client.model.ListLinuxSubscriptionInstancesResponse;
import org.openapitools.client.model.ListLinuxSubscriptionsRequest;
import org.openapitools.client.model.ListLinuxSubscriptionsResponse;
import org.openapitools.client.model.UpdateServiceSettingsRequest;
import org.openapitools.client.model.UpdateServiceSettingsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Lists the Linux subscriptions service settings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getServiceSettingsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetServiceSettingsResponse response = api.getServiceSettings(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists the running Amazon EC2 instances that were discovered with commercial Linux subscriptions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listLinuxSubscriptionInstancesTest() throws ApiException {
        ListLinuxSubscriptionInstancesRequest listLinuxSubscriptionInstancesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListLinuxSubscriptionInstancesResponse response = api.listLinuxSubscriptionInstances(listLinuxSubscriptionInstancesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the Linux subscriptions that have been discovered. If you have linked your organization, the returned results will include data aggregated across your accounts in Organizations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listLinuxSubscriptionsTest() throws ApiException {
        ListLinuxSubscriptionsRequest listLinuxSubscriptionsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListLinuxSubscriptionsResponse response = api.listLinuxSubscriptions(listLinuxSubscriptionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Updates the service settings for Linux subscriptions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateServiceSettingsTest() throws ApiException {
        UpdateServiceSettingsRequest updateServiceSettingsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateServiceSettingsResponse response = api.updateServiceSettings(updateServiceSettingsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
