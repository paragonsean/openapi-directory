# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.linux_subscriptions_discovery import LinuxSubscriptionsDiscovery
from openapi_server.models.status import Status
from openapi_server.models.update_service_settings_response_linux_subscriptions_discovery_settings import UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings
from openapi_server import util


class UpdateServiceSettingsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, home_regions: List=None, linux_subscriptions_discovery: LinuxSubscriptionsDiscovery=None, linux_subscriptions_discovery_settings: UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings=None, status: Status=None, status_message: Dict=None):
        """UpdateServiceSettingsResponse - a model defined in OpenAPI

        :param home_regions: The home_regions of this UpdateServiceSettingsResponse.
        :param linux_subscriptions_discovery: The linux_subscriptions_discovery of this UpdateServiceSettingsResponse.
        :param linux_subscriptions_discovery_settings: The linux_subscriptions_discovery_settings of this UpdateServiceSettingsResponse.
        :param status: The status of this UpdateServiceSettingsResponse.
        :param status_message: The status_message of this UpdateServiceSettingsResponse.
        """
        self.openapi_types = {
            'home_regions': List,
            'linux_subscriptions_discovery': LinuxSubscriptionsDiscovery,
            'linux_subscriptions_discovery_settings': UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings,
            'status': Status,
            'status_message': Dict
        }

        self.attribute_map = {
            'home_regions': 'HomeRegions',
            'linux_subscriptions_discovery': 'LinuxSubscriptionsDiscovery',
            'linux_subscriptions_discovery_settings': 'LinuxSubscriptionsDiscoverySettings',
            'status': 'Status',
            'status_message': 'StatusMessage'
        }

        self._home_regions = home_regions
        self._linux_subscriptions_discovery = linux_subscriptions_discovery
        self._linux_subscriptions_discovery_settings = linux_subscriptions_discovery_settings
        self._status = status
        self._status_message = status_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateServiceSettingsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateServiceSettingsResponse of this UpdateServiceSettingsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def home_regions(self):
        """Gets the home_regions of this UpdateServiceSettingsResponse.


        :return: The home_regions of this UpdateServiceSettingsResponse.
        :rtype: List
        """
        return self._home_regions

    @home_regions.setter
    def home_regions(self, home_regions):
        """Sets the home_regions of this UpdateServiceSettingsResponse.


        :param home_regions: The home_regions of this UpdateServiceSettingsResponse.
        :type home_regions: List
        """

        self._home_regions = home_regions

    @property
    def linux_subscriptions_discovery(self):
        """Gets the linux_subscriptions_discovery of this UpdateServiceSettingsResponse.


        :return: The linux_subscriptions_discovery of this UpdateServiceSettingsResponse.
        :rtype: LinuxSubscriptionsDiscovery
        """
        return self._linux_subscriptions_discovery

    @linux_subscriptions_discovery.setter
    def linux_subscriptions_discovery(self, linux_subscriptions_discovery):
        """Sets the linux_subscriptions_discovery of this UpdateServiceSettingsResponse.


        :param linux_subscriptions_discovery: The linux_subscriptions_discovery of this UpdateServiceSettingsResponse.
        :type linux_subscriptions_discovery: LinuxSubscriptionsDiscovery
        """

        self._linux_subscriptions_discovery = linux_subscriptions_discovery

    @property
    def linux_subscriptions_discovery_settings(self):
        """Gets the linux_subscriptions_discovery_settings of this UpdateServiceSettingsResponse.


        :return: The linux_subscriptions_discovery_settings of this UpdateServiceSettingsResponse.
        :rtype: UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings
        """
        return self._linux_subscriptions_discovery_settings

    @linux_subscriptions_discovery_settings.setter
    def linux_subscriptions_discovery_settings(self, linux_subscriptions_discovery_settings):
        """Sets the linux_subscriptions_discovery_settings of this UpdateServiceSettingsResponse.


        :param linux_subscriptions_discovery_settings: The linux_subscriptions_discovery_settings of this UpdateServiceSettingsResponse.
        :type linux_subscriptions_discovery_settings: UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings
        """

        self._linux_subscriptions_discovery_settings = linux_subscriptions_discovery_settings

    @property
    def status(self):
        """Gets the status of this UpdateServiceSettingsResponse.


        :return: The status of this UpdateServiceSettingsResponse.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateServiceSettingsResponse.


        :param status: The status of this UpdateServiceSettingsResponse.
        :type status: Status
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this UpdateServiceSettingsResponse.


        :return: The status_message of this UpdateServiceSettingsResponse.
        :rtype: Dict
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this UpdateServiceSettingsResponse.


        :param status_message: The status_message of this UpdateServiceSettingsResponse.
        :type status_message: Dict
        """

        self._status_message = status_message
