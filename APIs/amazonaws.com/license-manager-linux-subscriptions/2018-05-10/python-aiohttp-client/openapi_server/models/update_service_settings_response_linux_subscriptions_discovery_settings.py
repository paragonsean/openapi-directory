# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.organization_integration import OrganizationIntegration
from openapi_server import util


class UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, organization_integration: OrganizationIntegration=None, source_regions: List=None):
        """UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings - a model defined in OpenAPI

        :param organization_integration: The organization_integration of this UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.
        :param source_regions: The source_regions of this UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.
        """
        self.openapi_types = {
            'organization_integration': OrganizationIntegration,
            'source_regions': List
        }

        self.attribute_map = {
            'organization_integration': 'OrganizationIntegration',
            'source_regions': 'SourceRegions'
        }

        self._organization_integration = organization_integration
        self._source_regions = source_regions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateServiceSettingsResponse_LinuxSubscriptionsDiscoverySettings of this UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def organization_integration(self):
        """Gets the organization_integration of this UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.


        :return: The organization_integration of this UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.
        :rtype: OrganizationIntegration
        """
        return self._organization_integration

    @organization_integration.setter
    def organization_integration(self, organization_integration):
        """Sets the organization_integration of this UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.


        :param organization_integration: The organization_integration of this UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.
        :type organization_integration: OrganizationIntegration
        """
        if organization_integration is None:
            raise ValueError("Invalid value for `organization_integration`, must not be `None`")

        self._organization_integration = organization_integration

    @property
    def source_regions(self):
        """Gets the source_regions of this UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.


        :return: The source_regions of this UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.
        :rtype: List
        """
        return self._source_regions

    @source_regions.setter
    def source_regions(self, source_regions):
        """Sets the source_regions of this UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.


        :param source_regions: The source_regions of this UpdateServiceSettingsResponseLinuxSubscriptionsDiscoverySettings.
        :type source_regions: List
        """
        if source_regions is None:
            raise ValueError("Invalid value for `source_regions`, must not be `None`")

        self._source_regions = source_regions
