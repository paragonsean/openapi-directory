# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ephemeris_item_source_s3_object import EphemerisItemSourceS3Object
from openapi_server.models.ephemeris_status import EphemerisStatus
from openapi_server import util


class EphemerisItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time: datetime=None, enabled: bool=None, ephemeris_id: str=None, name: str=None, priority: int=None, source_s3_object: EphemerisItemSourceS3Object=None, status: EphemerisStatus=None):
        """EphemerisItem - a model defined in OpenAPI

        :param creation_time: The creation_time of this EphemerisItem.
        :param enabled: The enabled of this EphemerisItem.
        :param ephemeris_id: The ephemeris_id of this EphemerisItem.
        :param name: The name of this EphemerisItem.
        :param priority: The priority of this EphemerisItem.
        :param source_s3_object: The source_s3_object of this EphemerisItem.
        :param status: The status of this EphemerisItem.
        """
        self.openapi_types = {
            'creation_time': datetime,
            'enabled': bool,
            'ephemeris_id': str,
            'name': str,
            'priority': int,
            'source_s3_object': EphemerisItemSourceS3Object,
            'status': EphemerisStatus
        }

        self.attribute_map = {
            'creation_time': 'creationTime',
            'enabled': 'enabled',
            'ephemeris_id': 'ephemerisId',
            'name': 'name',
            'priority': 'priority',
            'source_s3_object': 'sourceS3Object',
            'status': 'status'
        }

        self._creation_time = creation_time
        self._enabled = enabled
        self._ephemeris_id = ephemeris_id
        self._name = name
        self._priority = priority
        self._source_s3_object = source_s3_object
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EphemerisItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EphemerisItem of this EphemerisItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self):
        """Gets the creation_time of this EphemerisItem.


        :return: The creation_time of this EphemerisItem.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this EphemerisItem.


        :param creation_time: The creation_time of this EphemerisItem.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def enabled(self):
        """Gets the enabled of this EphemerisItem.


        :return: The enabled of this EphemerisItem.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this EphemerisItem.


        :param enabled: The enabled of this EphemerisItem.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def ephemeris_id(self):
        """Gets the ephemeris_id of this EphemerisItem.


        :return: The ephemeris_id of this EphemerisItem.
        :rtype: str
        """
        return self._ephemeris_id

    @ephemeris_id.setter
    def ephemeris_id(self, ephemeris_id):
        """Sets the ephemeris_id of this EphemerisItem.


        :param ephemeris_id: The ephemeris_id of this EphemerisItem.
        :type ephemeris_id: str
        """

        self._ephemeris_id = ephemeris_id

    @property
    def name(self):
        """Gets the name of this EphemerisItem.


        :return: The name of this EphemerisItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EphemerisItem.


        :param name: The name of this EphemerisItem.
        :type name: str
        """

        self._name = name

    @property
    def priority(self):
        """Gets the priority of this EphemerisItem.


        :return: The priority of this EphemerisItem.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this EphemerisItem.


        :param priority: The priority of this EphemerisItem.
        :type priority: int
        """

        self._priority = priority

    @property
    def source_s3_object(self):
        """Gets the source_s3_object of this EphemerisItem.


        :return: The source_s3_object of this EphemerisItem.
        :rtype: EphemerisItemSourceS3Object
        """
        return self._source_s3_object

    @source_s3_object.setter
    def source_s3_object(self, source_s3_object):
        """Sets the source_s3_object of this EphemerisItem.


        :param source_s3_object: The source_s3_object of this EphemerisItem.
        :type source_s3_object: EphemerisItemSourceS3Object
        """

        self._source_s3_object = source_s3_object

    @property
    def status(self):
        """Gets the status of this EphemerisItem.


        :return: The status of this EphemerisItem.
        :rtype: EphemerisStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this EphemerisItem.


        :param status: The status of this EphemerisItem.
        :type status: EphemerisStatus
        """

        self._status = status
