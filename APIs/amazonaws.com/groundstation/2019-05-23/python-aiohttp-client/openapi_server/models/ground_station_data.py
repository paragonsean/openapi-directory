# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroundStationData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ground_station_id: str=None, ground_station_name: str=None, region: str=None):
        """GroundStationData - a model defined in OpenAPI

        :param ground_station_id: The ground_station_id of this GroundStationData.
        :param ground_station_name: The ground_station_name of this GroundStationData.
        :param region: The region of this GroundStationData.
        """
        self.openapi_types = {
            'ground_station_id': str,
            'ground_station_name': str,
            'region': str
        }

        self.attribute_map = {
            'ground_station_id': 'groundStationId',
            'ground_station_name': 'groundStationName',
            'region': 'region'
        }

        self._ground_station_id = ground_station_id
        self._ground_station_name = ground_station_name
        self._region = region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroundStationData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroundStationData of this GroundStationData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ground_station_id(self):
        """Gets the ground_station_id of this GroundStationData.


        :return: The ground_station_id of this GroundStationData.
        :rtype: str
        """
        return self._ground_station_id

    @ground_station_id.setter
    def ground_station_id(self, ground_station_id):
        """Sets the ground_station_id of this GroundStationData.


        :param ground_station_id: The ground_station_id of this GroundStationData.
        :type ground_station_id: str
        """

        self._ground_station_id = ground_station_id

    @property
    def ground_station_name(self):
        """Gets the ground_station_name of this GroundStationData.


        :return: The ground_station_name of this GroundStationData.
        :rtype: str
        """
        return self._ground_station_name

    @ground_station_name.setter
    def ground_station_name(self, ground_station_name):
        """Sets the ground_station_name of this GroundStationData.


        :param ground_station_name: The ground_station_name of this GroundStationData.
        :type ground_station_name: str
        """

        self._ground_station_name = ground_station_name

    @property
    def region(self):
        """Gets the region of this GroundStationData.


        :return: The region of this GroundStationData.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this GroundStationData.


        :param region: The region of this GroundStationData.
        :type region: str
        """

        self._region = region
