# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateAgentStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_id: str=None):
        """UpdateAgentStatusResponse - a model defined in OpenAPI

        :param agent_id: The agent_id of this UpdateAgentStatusResponse.
        """
        self.openapi_types = {
            'agent_id': str
        }

        self.attribute_map = {
            'agent_id': 'agentId'
        }

        self._agent_id = agent_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateAgentStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateAgentStatusResponse of this UpdateAgentStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_id(self):
        """Gets the agent_id of this UpdateAgentStatusResponse.


        :return: The agent_id of this UpdateAgentStatusResponse.
        :rtype: str
        """
        return self._agent_id

    @agent_id.setter
    def agent_id(self, agent_id):
        """Sets the agent_id of this UpdateAgentStatusResponse.


        :param agent_id: The agent_id of this UpdateAgentStatusResponse.
        :type agent_id: str
        """
        if agent_id is None:
            raise ValueError("Invalid value for `agent_id`, must not be `None`")

        self._agent_id = agent_id
