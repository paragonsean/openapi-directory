# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.antenna_downlink_demod_decode_config_decode_config import AntennaDownlinkDemodDecodeConfigDecodeConfig
from openapi_server.models.antenna_downlink_demod_decode_config_demodulation_config import AntennaDownlinkDemodDecodeConfigDemodulationConfig
from openapi_server.models.antenna_downlink_demod_decode_config_spectrum_config import AntennaDownlinkDemodDecodeConfigSpectrumConfig
from openapi_server import util


class CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, decode_config: AntennaDownlinkDemodDecodeConfigDecodeConfig=None, demodulation_config: AntennaDownlinkDemodDecodeConfigDemodulationConfig=None, spectrum_config: AntennaDownlinkDemodDecodeConfigSpectrumConfig=None):
        """CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig - a model defined in OpenAPI

        :param decode_config: The decode_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.
        :param demodulation_config: The demodulation_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.
        :param spectrum_config: The spectrum_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.
        """
        self.openapi_types = {
            'decode_config': AntennaDownlinkDemodDecodeConfigDecodeConfig,
            'demodulation_config': AntennaDownlinkDemodDecodeConfigDemodulationConfig,
            'spectrum_config': AntennaDownlinkDemodDecodeConfigSpectrumConfig
        }

        self.attribute_map = {
            'decode_config': 'decodeConfig',
            'demodulation_config': 'demodulationConfig',
            'spectrum_config': 'spectrumConfig'
        }

        self._decode_config = decode_config
        self._demodulation_config = demodulation_config
        self._spectrum_config = spectrum_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateConfig_request_configData_antennaDownlinkDemodDecodeConfig of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def decode_config(self):
        """Gets the decode_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.


        :return: The decode_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.
        :rtype: AntennaDownlinkDemodDecodeConfigDecodeConfig
        """
        return self._decode_config

    @decode_config.setter
    def decode_config(self, decode_config):
        """Sets the decode_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.


        :param decode_config: The decode_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.
        :type decode_config: AntennaDownlinkDemodDecodeConfigDecodeConfig
        """
        if decode_config is None:
            raise ValueError("Invalid value for `decode_config`, must not be `None`")

        self._decode_config = decode_config

    @property
    def demodulation_config(self):
        """Gets the demodulation_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.


        :return: The demodulation_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.
        :rtype: AntennaDownlinkDemodDecodeConfigDemodulationConfig
        """
        return self._demodulation_config

    @demodulation_config.setter
    def demodulation_config(self, demodulation_config):
        """Sets the demodulation_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.


        :param demodulation_config: The demodulation_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.
        :type demodulation_config: AntennaDownlinkDemodDecodeConfigDemodulationConfig
        """
        if demodulation_config is None:
            raise ValueError("Invalid value for `demodulation_config`, must not be `None`")

        self._demodulation_config = demodulation_config

    @property
    def spectrum_config(self):
        """Gets the spectrum_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.


        :return: The spectrum_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.
        :rtype: AntennaDownlinkDemodDecodeConfigSpectrumConfig
        """
        return self._spectrum_config

    @spectrum_config.setter
    def spectrum_config(self, spectrum_config):
        """Sets the spectrum_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.


        :param spectrum_config: The spectrum_config of this CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.
        :type spectrum_config: AntennaDownlinkDemodDecodeConfigSpectrumConfig
        """
        if spectrum_config is None:
            raise ValueError("Invalid value for `spectrum_config`, must not be `None`")

        self._spectrum_config = spectrum_config
