# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.config_details_antenna_demod_decode_details import ConfigDetailsAntennaDemodDecodeDetails
from openapi_server.models.config_details_s3_recording_details import ConfigDetailsS3RecordingDetails
from openapi_server.models.endpoint_details import EndpointDetails
from openapi_server import util


class ConfigDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, antenna_demod_decode_details: ConfigDetailsAntennaDemodDecodeDetails=None, endpoint_details: EndpointDetails=None, s3_recording_details: ConfigDetailsS3RecordingDetails=None):
        """ConfigDetails - a model defined in OpenAPI

        :param antenna_demod_decode_details: The antenna_demod_decode_details of this ConfigDetails.
        :param endpoint_details: The endpoint_details of this ConfigDetails.
        :param s3_recording_details: The s3_recording_details of this ConfigDetails.
        """
        self.openapi_types = {
            'antenna_demod_decode_details': ConfigDetailsAntennaDemodDecodeDetails,
            'endpoint_details': EndpointDetails,
            's3_recording_details': ConfigDetailsS3RecordingDetails
        }

        self.attribute_map = {
            'antenna_demod_decode_details': 'antennaDemodDecodeDetails',
            'endpoint_details': 'endpointDetails',
            's3_recording_details': 's3RecordingDetails'
        }

        self._antenna_demod_decode_details = antenna_demod_decode_details
        self._endpoint_details = endpoint_details
        self._s3_recording_details = s3_recording_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigDetails of this ConfigDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def antenna_demod_decode_details(self):
        """Gets the antenna_demod_decode_details of this ConfigDetails.


        :return: The antenna_demod_decode_details of this ConfigDetails.
        :rtype: ConfigDetailsAntennaDemodDecodeDetails
        """
        return self._antenna_demod_decode_details

    @antenna_demod_decode_details.setter
    def antenna_demod_decode_details(self, antenna_demod_decode_details):
        """Sets the antenna_demod_decode_details of this ConfigDetails.


        :param antenna_demod_decode_details: The antenna_demod_decode_details of this ConfigDetails.
        :type antenna_demod_decode_details: ConfigDetailsAntennaDemodDecodeDetails
        """

        self._antenna_demod_decode_details = antenna_demod_decode_details

    @property
    def endpoint_details(self):
        """Gets the endpoint_details of this ConfigDetails.


        :return: The endpoint_details of this ConfigDetails.
        :rtype: EndpointDetails
        """
        return self._endpoint_details

    @endpoint_details.setter
    def endpoint_details(self, endpoint_details):
        """Sets the endpoint_details of this ConfigDetails.


        :param endpoint_details: The endpoint_details of this ConfigDetails.
        :type endpoint_details: EndpointDetails
        """

        self._endpoint_details = endpoint_details

    @property
    def s3_recording_details(self):
        """Gets the s3_recording_details of this ConfigDetails.


        :return: The s3_recording_details of this ConfigDetails.
        :rtype: ConfigDetailsS3RecordingDetails
        """
        return self._s3_recording_details

    @s3_recording_details.setter
    def s3_recording_details(self, s3_recording_details):
        """Sets the s3_recording_details of this ConfigDetails.


        :param s3_recording_details: The s3_recording_details of this ConfigDetails.
        :type s3_recording_details: ConfigDetailsS3RecordingDetails
        """

        self._s3_recording_details = s3_recording_details
