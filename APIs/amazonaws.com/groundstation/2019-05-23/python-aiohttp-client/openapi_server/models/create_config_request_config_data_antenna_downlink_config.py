# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.antenna_downlink_config_spectrum_config import AntennaDownlinkConfigSpectrumConfig
from openapi_server import util


class CreateConfigRequestConfigDataAntennaDownlinkConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, spectrum_config: AntennaDownlinkConfigSpectrumConfig=None):
        """CreateConfigRequestConfigDataAntennaDownlinkConfig - a model defined in OpenAPI

        :param spectrum_config: The spectrum_config of this CreateConfigRequestConfigDataAntennaDownlinkConfig.
        """
        self.openapi_types = {
            'spectrum_config': AntennaDownlinkConfigSpectrumConfig
        }

        self.attribute_map = {
            'spectrum_config': 'spectrumConfig'
        }

        self._spectrum_config = spectrum_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateConfigRequestConfigDataAntennaDownlinkConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateConfig_request_configData_antennaDownlinkConfig of this CreateConfigRequestConfigDataAntennaDownlinkConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def spectrum_config(self):
        """Gets the spectrum_config of this CreateConfigRequestConfigDataAntennaDownlinkConfig.


        :return: The spectrum_config of this CreateConfigRequestConfigDataAntennaDownlinkConfig.
        :rtype: AntennaDownlinkConfigSpectrumConfig
        """
        return self._spectrum_config

    @spectrum_config.setter
    def spectrum_config(self, spectrum_config):
        """Sets the spectrum_config of this CreateConfigRequestConfigDataAntennaDownlinkConfig.


        :param spectrum_config: The spectrum_config of this CreateConfigRequestConfigDataAntennaDownlinkConfig.
        :type spectrum_config: AntennaDownlinkConfigSpectrumConfig
        """
        if spectrum_config is None:
            raise ValueError("Invalid value for `spectrum_config`, must not be `None`")

        self._spectrum_config = spectrum_config
