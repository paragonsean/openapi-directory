# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.config_capability_type import ConfigCapabilityType
from openapi_server.models.destination_config_details import DestinationConfigDetails
from openapi_server import util


class Destination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config_details: DestinationConfigDetails=None, config_id: str=None, config_type: ConfigCapabilityType=None, dataflow_destination_region: str=None):
        """Destination - a model defined in OpenAPI

        :param config_details: The config_details of this Destination.
        :param config_id: The config_id of this Destination.
        :param config_type: The config_type of this Destination.
        :param dataflow_destination_region: The dataflow_destination_region of this Destination.
        """
        self.openapi_types = {
            'config_details': DestinationConfigDetails,
            'config_id': str,
            'config_type': ConfigCapabilityType,
            'dataflow_destination_region': str
        }

        self.attribute_map = {
            'config_details': 'configDetails',
            'config_id': 'configId',
            'config_type': 'configType',
            'dataflow_destination_region': 'dataflowDestinationRegion'
        }

        self._config_details = config_details
        self._config_id = config_id
        self._config_type = config_type
        self._dataflow_destination_region = dataflow_destination_region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Destination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destination of this Destination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config_details(self):
        """Gets the config_details of this Destination.


        :return: The config_details of this Destination.
        :rtype: DestinationConfigDetails
        """
        return self._config_details

    @config_details.setter
    def config_details(self, config_details):
        """Sets the config_details of this Destination.


        :param config_details: The config_details of this Destination.
        :type config_details: DestinationConfigDetails
        """

        self._config_details = config_details

    @property
    def config_id(self):
        """Gets the config_id of this Destination.


        :return: The config_id of this Destination.
        :rtype: str
        """
        return self._config_id

    @config_id.setter
    def config_id(self, config_id):
        """Sets the config_id of this Destination.


        :param config_id: The config_id of this Destination.
        :type config_id: str
        """

        self._config_id = config_id

    @property
    def config_type(self):
        """Gets the config_type of this Destination.


        :return: The config_type of this Destination.
        :rtype: ConfigCapabilityType
        """
        return self._config_type

    @config_type.setter
    def config_type(self, config_type):
        """Sets the config_type of this Destination.


        :param config_type: The config_type of this Destination.
        :type config_type: ConfigCapabilityType
        """

        self._config_type = config_type

    @property
    def dataflow_destination_region(self):
        """Gets the dataflow_destination_region of this Destination.


        :return: The dataflow_destination_region of this Destination.
        :rtype: str
        """
        return self._dataflow_destination_region

    @dataflow_destination_region.setter
    def dataflow_destination_region(self, dataflow_destination_region):
        """Sets the dataflow_destination_region of this Destination.


        :param dataflow_destination_region: The dataflow_destination_region of this Destination.
        :type dataflow_destination_region: str
        """

        self._dataflow_destination_region = dataflow_destination_region
