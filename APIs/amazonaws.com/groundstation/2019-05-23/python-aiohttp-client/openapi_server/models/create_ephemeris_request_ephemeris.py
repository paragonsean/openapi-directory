# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.oem_ephemeris import OEMEphemeris
from openapi_server.models.tle_ephemeris import TLEEphemeris
from openapi_server import util


class CreateEphemerisRequestEphemeris(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, oem: OEMEphemeris=None, tle: TLEEphemeris=None):
        """CreateEphemerisRequestEphemeris - a model defined in OpenAPI

        :param oem: The oem of this CreateEphemerisRequestEphemeris.
        :param tle: The tle of this CreateEphemerisRequestEphemeris.
        """
        self.openapi_types = {
            'oem': OEMEphemeris,
            'tle': TLEEphemeris
        }

        self.attribute_map = {
            'oem': 'oem',
            'tle': 'tle'
        }

        self._oem = oem
        self._tle = tle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateEphemerisRequestEphemeris':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateEphemerisRequest_ephemeris of this CreateEphemerisRequestEphemeris.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def oem(self):
        """Gets the oem of this CreateEphemerisRequestEphemeris.


        :return: The oem of this CreateEphemerisRequestEphemeris.
        :rtype: OEMEphemeris
        """
        return self._oem

    @oem.setter
    def oem(self, oem):
        """Sets the oem of this CreateEphemerisRequestEphemeris.


        :param oem: The oem of this CreateEphemerisRequestEphemeris.
        :type oem: OEMEphemeris
        """

        self._oem = oem

    @property
    def tle(self):
        """Gets the tle of this CreateEphemerisRequestEphemeris.


        :return: The tle of this CreateEphemerisRequestEphemeris.
        :rtype: TLEEphemeris
        """
        return self._tle

    @tle.setter
    def tle(self, tle):
        """Sets the tle of this CreateEphemerisRequestEphemeris.


        :param tle: The tle of this CreateEphemerisRequestEphemeris.
        :type tle: TLEEphemeris
        """

        self._tle = tle
