# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dataflow_endpoint_address import DataflowEndpointAddress
from openapi_server.models.endpoint_status import EndpointStatus
from openapi_server import util


class DataflowEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: DataflowEndpointAddress=None, mtu: int=None, name: str=None, status: EndpointStatus=None):
        """DataflowEndpoint - a model defined in OpenAPI

        :param address: The address of this DataflowEndpoint.
        :param mtu: The mtu of this DataflowEndpoint.
        :param name: The name of this DataflowEndpoint.
        :param status: The status of this DataflowEndpoint.
        """
        self.openapi_types = {
            'address': DataflowEndpointAddress,
            'mtu': int,
            'name': str,
            'status': EndpointStatus
        }

        self.attribute_map = {
            'address': 'address',
            'mtu': 'mtu',
            'name': 'name',
            'status': 'status'
        }

        self._address = address
        self._mtu = mtu
        self._name = name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataflowEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataflowEndpoint of this DataflowEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this DataflowEndpoint.


        :return: The address of this DataflowEndpoint.
        :rtype: DataflowEndpointAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this DataflowEndpoint.


        :param address: The address of this DataflowEndpoint.
        :type address: DataflowEndpointAddress
        """

        self._address = address

    @property
    def mtu(self):
        """Gets the mtu of this DataflowEndpoint.


        :return: The mtu of this DataflowEndpoint.
        :rtype: int
        """
        return self._mtu

    @mtu.setter
    def mtu(self, mtu):
        """Sets the mtu of this DataflowEndpoint.


        :param mtu: The mtu of this DataflowEndpoint.
        :type mtu: int
        """

        self._mtu = mtu

    @property
    def name(self):
        """Gets the name of this DataflowEndpoint.


        :return: The name of this DataflowEndpoint.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DataflowEndpoint.


        :param name: The name of this DataflowEndpoint.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this DataflowEndpoint.


        :return: The status of this DataflowEndpoint.
        :rtype: EndpointStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DataflowEndpoint.


        :param status: The status of this DataflowEndpoint.
        :type status: EndpointStatus
        """

        self._status = status
