# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigCapabilityType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ANTENNA_MINUS_DOWNLINK = 'antenna-downlink'
    ANTENNA_MINUS_DOWNLINK_MINUS_DEMOD_MINUS_DECODE = 'antenna-downlink-demod-decode'
    ANTENNA_MINUS_UPLINK = 'antenna-uplink'
    DATAFLOW_MINUS_ENDPOINT = 'dataflow-endpoint'
    TRACKING = 'tracking'
    UPLINK_MINUS_ECHO = 'uplink-echo'
    S3_MINUS_RECORDING = 's3-recording'

    def __init__(self):
        """ConfigCapabilityType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigCapabilityType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigCapabilityType of this ConfigCapabilityType.
        """
        return util.deserialize_model(dikt, cls)
