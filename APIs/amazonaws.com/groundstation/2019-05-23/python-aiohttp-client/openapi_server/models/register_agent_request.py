# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.register_agent_request_agent_details import RegisterAgentRequestAgentDetails
from openapi_server.models.register_agent_request_discovery_data import RegisterAgentRequestDiscoveryData
from openapi_server import util


class RegisterAgentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_details: RegisterAgentRequestAgentDetails=None, discovery_data: RegisterAgentRequestDiscoveryData=None):
        """RegisterAgentRequest - a model defined in OpenAPI

        :param agent_details: The agent_details of this RegisterAgentRequest.
        :param discovery_data: The discovery_data of this RegisterAgentRequest.
        """
        self.openapi_types = {
            'agent_details': RegisterAgentRequestAgentDetails,
            'discovery_data': RegisterAgentRequestDiscoveryData
        }

        self.attribute_map = {
            'agent_details': 'agentDetails',
            'discovery_data': 'discoveryData'
        }

        self._agent_details = agent_details
        self._discovery_data = discovery_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisterAgentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegisterAgent_request of this RegisterAgentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_details(self):
        """Gets the agent_details of this RegisterAgentRequest.


        :return: The agent_details of this RegisterAgentRequest.
        :rtype: RegisterAgentRequestAgentDetails
        """
        return self._agent_details

    @agent_details.setter
    def agent_details(self, agent_details):
        """Sets the agent_details of this RegisterAgentRequest.


        :param agent_details: The agent_details of this RegisterAgentRequest.
        :type agent_details: RegisterAgentRequestAgentDetails
        """
        if agent_details is None:
            raise ValueError("Invalid value for `agent_details`, must not be `None`")

        self._agent_details = agent_details

    @property
    def discovery_data(self):
        """Gets the discovery_data of this RegisterAgentRequest.


        :return: The discovery_data of this RegisterAgentRequest.
        :rtype: RegisterAgentRequestDiscoveryData
        """
        return self._discovery_data

    @discovery_data.setter
    def discovery_data(self, discovery_data):
        """Sets the discovery_data of this RegisterAgentRequest.


        :param discovery_data: The discovery_data of this RegisterAgentRequest.
        :type discovery_data: RegisterAgentRequestDiscoveryData
        """
        if discovery_data is None:
            raise ValueError("Invalid value for `discovery_data`, must not be `None`")

        self._discovery_data = discovery_data
