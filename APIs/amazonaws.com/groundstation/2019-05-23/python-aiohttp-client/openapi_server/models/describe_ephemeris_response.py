# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_ephemeris_response_supplied_data import DescribeEphemerisResponseSuppliedData
from openapi_server.models.ephemeris_invalid_reason import EphemerisInvalidReason
from openapi_server.models.ephemeris_status import EphemerisStatus
from openapi_server import util


class DescribeEphemerisResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time: datetime=None, enabled: bool=None, ephemeris_id: str=None, invalid_reason: EphemerisInvalidReason=None, name: str=None, priority: int=None, satellite_id: str=None, status: EphemerisStatus=None, supplied_data: DescribeEphemerisResponseSuppliedData=None, tags: Dict=None):
        """DescribeEphemerisResponse - a model defined in OpenAPI

        :param creation_time: The creation_time of this DescribeEphemerisResponse.
        :param enabled: The enabled of this DescribeEphemerisResponse.
        :param ephemeris_id: The ephemeris_id of this DescribeEphemerisResponse.
        :param invalid_reason: The invalid_reason of this DescribeEphemerisResponse.
        :param name: The name of this DescribeEphemerisResponse.
        :param priority: The priority of this DescribeEphemerisResponse.
        :param satellite_id: The satellite_id of this DescribeEphemerisResponse.
        :param status: The status of this DescribeEphemerisResponse.
        :param supplied_data: The supplied_data of this DescribeEphemerisResponse.
        :param tags: The tags of this DescribeEphemerisResponse.
        """
        self.openapi_types = {
            'creation_time': datetime,
            'enabled': bool,
            'ephemeris_id': str,
            'invalid_reason': EphemerisInvalidReason,
            'name': str,
            'priority': int,
            'satellite_id': str,
            'status': EphemerisStatus,
            'supplied_data': DescribeEphemerisResponseSuppliedData,
            'tags': Dict
        }

        self.attribute_map = {
            'creation_time': 'creationTime',
            'enabled': 'enabled',
            'ephemeris_id': 'ephemerisId',
            'invalid_reason': 'invalidReason',
            'name': 'name',
            'priority': 'priority',
            'satellite_id': 'satelliteId',
            'status': 'status',
            'supplied_data': 'suppliedData',
            'tags': 'tags'
        }

        self._creation_time = creation_time
        self._enabled = enabled
        self._ephemeris_id = ephemeris_id
        self._invalid_reason = invalid_reason
        self._name = name
        self._priority = priority
        self._satellite_id = satellite_id
        self._status = status
        self._supplied_data = supplied_data
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEphemerisResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEphemerisResponse of this DescribeEphemerisResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeEphemerisResponse.


        :return: The creation_time of this DescribeEphemerisResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeEphemerisResponse.


        :param creation_time: The creation_time of this DescribeEphemerisResponse.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def enabled(self):
        """Gets the enabled of this DescribeEphemerisResponse.


        :return: The enabled of this DescribeEphemerisResponse.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this DescribeEphemerisResponse.


        :param enabled: The enabled of this DescribeEphemerisResponse.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def ephemeris_id(self):
        """Gets the ephemeris_id of this DescribeEphemerisResponse.


        :return: The ephemeris_id of this DescribeEphemerisResponse.
        :rtype: str
        """
        return self._ephemeris_id

    @ephemeris_id.setter
    def ephemeris_id(self, ephemeris_id):
        """Sets the ephemeris_id of this DescribeEphemerisResponse.


        :param ephemeris_id: The ephemeris_id of this DescribeEphemerisResponse.
        :type ephemeris_id: str
        """

        self._ephemeris_id = ephemeris_id

    @property
    def invalid_reason(self):
        """Gets the invalid_reason of this DescribeEphemerisResponse.


        :return: The invalid_reason of this DescribeEphemerisResponse.
        :rtype: EphemerisInvalidReason
        """
        return self._invalid_reason

    @invalid_reason.setter
    def invalid_reason(self, invalid_reason):
        """Sets the invalid_reason of this DescribeEphemerisResponse.


        :param invalid_reason: The invalid_reason of this DescribeEphemerisResponse.
        :type invalid_reason: EphemerisInvalidReason
        """

        self._invalid_reason = invalid_reason

    @property
    def name(self):
        """Gets the name of this DescribeEphemerisResponse.


        :return: The name of this DescribeEphemerisResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeEphemerisResponse.


        :param name: The name of this DescribeEphemerisResponse.
        :type name: str
        """

        self._name = name

    @property
    def priority(self):
        """Gets the priority of this DescribeEphemerisResponse.


        :return: The priority of this DescribeEphemerisResponse.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this DescribeEphemerisResponse.


        :param priority: The priority of this DescribeEphemerisResponse.
        :type priority: int
        """

        self._priority = priority

    @property
    def satellite_id(self):
        """Gets the satellite_id of this DescribeEphemerisResponse.


        :return: The satellite_id of this DescribeEphemerisResponse.
        :rtype: str
        """
        return self._satellite_id

    @satellite_id.setter
    def satellite_id(self, satellite_id):
        """Sets the satellite_id of this DescribeEphemerisResponse.


        :param satellite_id: The satellite_id of this DescribeEphemerisResponse.
        :type satellite_id: str
        """

        self._satellite_id = satellite_id

    @property
    def status(self):
        """Gets the status of this DescribeEphemerisResponse.


        :return: The status of this DescribeEphemerisResponse.
        :rtype: EphemerisStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeEphemerisResponse.


        :param status: The status of this DescribeEphemerisResponse.
        :type status: EphemerisStatus
        """

        self._status = status

    @property
    def supplied_data(self):
        """Gets the supplied_data of this DescribeEphemerisResponse.


        :return: The supplied_data of this DescribeEphemerisResponse.
        :rtype: DescribeEphemerisResponseSuppliedData
        """
        return self._supplied_data

    @supplied_data.setter
    def supplied_data(self, supplied_data):
        """Sets the supplied_data of this DescribeEphemerisResponse.


        :param supplied_data: The supplied_data of this DescribeEphemerisResponse.
        :type supplied_data: DescribeEphemerisResponseSuppliedData
        """

        self._supplied_data = supplied_data

    @property
    def tags(self):
        """Gets the tags of this DescribeEphemerisResponse.


        :return: The tags of this DescribeEphemerisResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribeEphemerisResponse.


        :param tags: The tags of this DescribeEphemerisResponse.
        :type tags: Dict
        """

        self._tags = tags
