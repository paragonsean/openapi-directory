# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_status import ContactStatus
from openapi_server.models.describe_contact_response_maximum_elevation import DescribeContactResponseMaximumElevation
from openapi_server import util


class DescribeContactResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_id: str=None, contact_status: ContactStatus=None, dataflow_list: List=None, end_time: datetime=None, error_message: str=None, ground_station: str=None, maximum_elevation: DescribeContactResponseMaximumElevation=None, mission_profile_arn: str=None, post_pass_end_time: datetime=None, pre_pass_start_time: datetime=None, region: str=None, satellite_arn: str=None, start_time: datetime=None, tags: Dict=None):
        """DescribeContactResponse - a model defined in OpenAPI

        :param contact_id: The contact_id of this DescribeContactResponse.
        :param contact_status: The contact_status of this DescribeContactResponse.
        :param dataflow_list: The dataflow_list of this DescribeContactResponse.
        :param end_time: The end_time of this DescribeContactResponse.
        :param error_message: The error_message of this DescribeContactResponse.
        :param ground_station: The ground_station of this DescribeContactResponse.
        :param maximum_elevation: The maximum_elevation of this DescribeContactResponse.
        :param mission_profile_arn: The mission_profile_arn of this DescribeContactResponse.
        :param post_pass_end_time: The post_pass_end_time of this DescribeContactResponse.
        :param pre_pass_start_time: The pre_pass_start_time of this DescribeContactResponse.
        :param region: The region of this DescribeContactResponse.
        :param satellite_arn: The satellite_arn of this DescribeContactResponse.
        :param start_time: The start_time of this DescribeContactResponse.
        :param tags: The tags of this DescribeContactResponse.
        """
        self.openapi_types = {
            'contact_id': str,
            'contact_status': ContactStatus,
            'dataflow_list': List,
            'end_time': datetime,
            'error_message': str,
            'ground_station': str,
            'maximum_elevation': DescribeContactResponseMaximumElevation,
            'mission_profile_arn': str,
            'post_pass_end_time': datetime,
            'pre_pass_start_time': datetime,
            'region': str,
            'satellite_arn': str,
            'start_time': datetime,
            'tags': Dict
        }

        self.attribute_map = {
            'contact_id': 'contactId',
            'contact_status': 'contactStatus',
            'dataflow_list': 'dataflowList',
            'end_time': 'endTime',
            'error_message': 'errorMessage',
            'ground_station': 'groundStation',
            'maximum_elevation': 'maximumElevation',
            'mission_profile_arn': 'missionProfileArn',
            'post_pass_end_time': 'postPassEndTime',
            'pre_pass_start_time': 'prePassStartTime',
            'region': 'region',
            'satellite_arn': 'satelliteArn',
            'start_time': 'startTime',
            'tags': 'tags'
        }

        self._contact_id = contact_id
        self._contact_status = contact_status
        self._dataflow_list = dataflow_list
        self._end_time = end_time
        self._error_message = error_message
        self._ground_station = ground_station
        self._maximum_elevation = maximum_elevation
        self._mission_profile_arn = mission_profile_arn
        self._post_pass_end_time = post_pass_end_time
        self._pre_pass_start_time = pre_pass_start_time
        self._region = region
        self._satellite_arn = satellite_arn
        self._start_time = start_time
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeContactResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeContactResponse of this DescribeContactResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_id(self):
        """Gets the contact_id of this DescribeContactResponse.


        :return: The contact_id of this DescribeContactResponse.
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this DescribeContactResponse.


        :param contact_id: The contact_id of this DescribeContactResponse.
        :type contact_id: str
        """

        self._contact_id = contact_id

    @property
    def contact_status(self):
        """Gets the contact_status of this DescribeContactResponse.


        :return: The contact_status of this DescribeContactResponse.
        :rtype: ContactStatus
        """
        return self._contact_status

    @contact_status.setter
    def contact_status(self, contact_status):
        """Sets the contact_status of this DescribeContactResponse.


        :param contact_status: The contact_status of this DescribeContactResponse.
        :type contact_status: ContactStatus
        """

        self._contact_status = contact_status

    @property
    def dataflow_list(self):
        """Gets the dataflow_list of this DescribeContactResponse.


        :return: The dataflow_list of this DescribeContactResponse.
        :rtype: List
        """
        return self._dataflow_list

    @dataflow_list.setter
    def dataflow_list(self, dataflow_list):
        """Sets the dataflow_list of this DescribeContactResponse.


        :param dataflow_list: The dataflow_list of this DescribeContactResponse.
        :type dataflow_list: List
        """

        self._dataflow_list = dataflow_list

    @property
    def end_time(self):
        """Gets the end_time of this DescribeContactResponse.


        :return: The end_time of this DescribeContactResponse.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this DescribeContactResponse.


        :param end_time: The end_time of this DescribeContactResponse.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def error_message(self):
        """Gets the error_message of this DescribeContactResponse.


        :return: The error_message of this DescribeContactResponse.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this DescribeContactResponse.


        :param error_message: The error_message of this DescribeContactResponse.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def ground_station(self):
        """Gets the ground_station of this DescribeContactResponse.


        :return: The ground_station of this DescribeContactResponse.
        :rtype: str
        """
        return self._ground_station

    @ground_station.setter
    def ground_station(self, ground_station):
        """Sets the ground_station of this DescribeContactResponse.


        :param ground_station: The ground_station of this DescribeContactResponse.
        :type ground_station: str
        """

        self._ground_station = ground_station

    @property
    def maximum_elevation(self):
        """Gets the maximum_elevation of this DescribeContactResponse.


        :return: The maximum_elevation of this DescribeContactResponse.
        :rtype: DescribeContactResponseMaximumElevation
        """
        return self._maximum_elevation

    @maximum_elevation.setter
    def maximum_elevation(self, maximum_elevation):
        """Sets the maximum_elevation of this DescribeContactResponse.


        :param maximum_elevation: The maximum_elevation of this DescribeContactResponse.
        :type maximum_elevation: DescribeContactResponseMaximumElevation
        """

        self._maximum_elevation = maximum_elevation

    @property
    def mission_profile_arn(self):
        """Gets the mission_profile_arn of this DescribeContactResponse.


        :return: The mission_profile_arn of this DescribeContactResponse.
        :rtype: str
        """
        return self._mission_profile_arn

    @mission_profile_arn.setter
    def mission_profile_arn(self, mission_profile_arn):
        """Sets the mission_profile_arn of this DescribeContactResponse.


        :param mission_profile_arn: The mission_profile_arn of this DescribeContactResponse.
        :type mission_profile_arn: str
        """

        self._mission_profile_arn = mission_profile_arn

    @property
    def post_pass_end_time(self):
        """Gets the post_pass_end_time of this DescribeContactResponse.


        :return: The post_pass_end_time of this DescribeContactResponse.
        :rtype: datetime
        """
        return self._post_pass_end_time

    @post_pass_end_time.setter
    def post_pass_end_time(self, post_pass_end_time):
        """Sets the post_pass_end_time of this DescribeContactResponse.


        :param post_pass_end_time: The post_pass_end_time of this DescribeContactResponse.
        :type post_pass_end_time: datetime
        """

        self._post_pass_end_time = post_pass_end_time

    @property
    def pre_pass_start_time(self):
        """Gets the pre_pass_start_time of this DescribeContactResponse.


        :return: The pre_pass_start_time of this DescribeContactResponse.
        :rtype: datetime
        """
        return self._pre_pass_start_time

    @pre_pass_start_time.setter
    def pre_pass_start_time(self, pre_pass_start_time):
        """Sets the pre_pass_start_time of this DescribeContactResponse.


        :param pre_pass_start_time: The pre_pass_start_time of this DescribeContactResponse.
        :type pre_pass_start_time: datetime
        """

        self._pre_pass_start_time = pre_pass_start_time

    @property
    def region(self):
        """Gets the region of this DescribeContactResponse.


        :return: The region of this DescribeContactResponse.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this DescribeContactResponse.


        :param region: The region of this DescribeContactResponse.
        :type region: str
        """

        self._region = region

    @property
    def satellite_arn(self):
        """Gets the satellite_arn of this DescribeContactResponse.


        :return: The satellite_arn of this DescribeContactResponse.
        :rtype: str
        """
        return self._satellite_arn

    @satellite_arn.setter
    def satellite_arn(self, satellite_arn):
        """Sets the satellite_arn of this DescribeContactResponse.


        :param satellite_arn: The satellite_arn of this DescribeContactResponse.
        :type satellite_arn: str
        """

        self._satellite_arn = satellite_arn

    @property
    def start_time(self):
        """Gets the start_time of this DescribeContactResponse.


        :return: The start_time of this DescribeContactResponse.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this DescribeContactResponse.


        :param start_time: The start_time of this DescribeContactResponse.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def tags(self):
        """Gets the tags of this DescribeContactResponse.


        :return: The tags of this DescribeContactResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribeContactResponse.


        :param tags: The tags of this DescribeContactResponse.
        :type tags: Dict
        """

        self._tags = tags
