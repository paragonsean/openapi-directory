/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAwsGroundStationAgentEndpoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAwsGroundStationAgentEndpoint::OAIAwsGroundStationAgentEndpoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAwsGroundStationAgentEndpoint::OAIAwsGroundStationAgentEndpoint() {
    this->initializeModel();
}

OAIAwsGroundStationAgentEndpoint::~OAIAwsGroundStationAgentEndpoint() {}

void OAIAwsGroundStationAgentEndpoint::initializeModel() {

    m_agent_status_isSet = false;
    m_agent_status_isValid = false;

    m_audit_results_isSet = false;
    m_audit_results_isValid = false;

    m_egress_address_isSet = false;
    m_egress_address_isValid = false;

    m_ingress_address_isSet = false;
    m_ingress_address_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIAwsGroundStationAgentEndpoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAwsGroundStationAgentEndpoint::fromJsonObject(QJsonObject json) {

    m_agent_status_isValid = ::OpenAPI::fromJsonValue(m_agent_status, json[QString("agentStatus")]);
    m_agent_status_isSet = !json[QString("agentStatus")].isNull() && m_agent_status_isValid;

    m_audit_results_isValid = ::OpenAPI::fromJsonValue(m_audit_results, json[QString("auditResults")]);
    m_audit_results_isSet = !json[QString("auditResults")].isNull() && m_audit_results_isValid;

    m_egress_address_isValid = ::OpenAPI::fromJsonValue(m_egress_address, json[QString("egressAddress")]);
    m_egress_address_isSet = !json[QString("egressAddress")].isNull() && m_egress_address_isValid;

    m_ingress_address_isValid = ::OpenAPI::fromJsonValue(m_ingress_address, json[QString("ingressAddress")]);
    m_ingress_address_isSet = !json[QString("ingressAddress")].isNull() && m_ingress_address_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIAwsGroundStationAgentEndpoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAwsGroundStationAgentEndpoint::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_status.isSet()) {
        obj.insert(QString("agentStatus"), ::OpenAPI::toJsonValue(m_agent_status));
    }
    if (m_audit_results.isSet()) {
        obj.insert(QString("auditResults"), ::OpenAPI::toJsonValue(m_audit_results));
    }
    if (m_egress_address.isSet()) {
        obj.insert(QString("egressAddress"), ::OpenAPI::toJsonValue(m_egress_address));
    }
    if (m_ingress_address.isSet()) {
        obj.insert(QString("ingressAddress"), ::OpenAPI::toJsonValue(m_ingress_address));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIAgentStatus OAIAwsGroundStationAgentEndpoint::getAgentStatus() const {
    return m_agent_status;
}
void OAIAwsGroundStationAgentEndpoint::setAgentStatus(const OAIAgentStatus &agent_status) {
    m_agent_status = agent_status;
    m_agent_status_isSet = true;
}

bool OAIAwsGroundStationAgentEndpoint::is_agent_status_Set() const{
    return m_agent_status_isSet;
}

bool OAIAwsGroundStationAgentEndpoint::is_agent_status_Valid() const{
    return m_agent_status_isValid;
}

OAIAuditResults OAIAwsGroundStationAgentEndpoint::getAuditResults() const {
    return m_audit_results;
}
void OAIAwsGroundStationAgentEndpoint::setAuditResults(const OAIAuditResults &audit_results) {
    m_audit_results = audit_results;
    m_audit_results_isSet = true;
}

bool OAIAwsGroundStationAgentEndpoint::is_audit_results_Set() const{
    return m_audit_results_isSet;
}

bool OAIAwsGroundStationAgentEndpoint::is_audit_results_Valid() const{
    return m_audit_results_isValid;
}

OAIAwsGroundStationAgentEndpoint_egressAddress OAIAwsGroundStationAgentEndpoint::getEgressAddress() const {
    return m_egress_address;
}
void OAIAwsGroundStationAgentEndpoint::setEgressAddress(const OAIAwsGroundStationAgentEndpoint_egressAddress &egress_address) {
    m_egress_address = egress_address;
    m_egress_address_isSet = true;
}

bool OAIAwsGroundStationAgentEndpoint::is_egress_address_Set() const{
    return m_egress_address_isSet;
}

bool OAIAwsGroundStationAgentEndpoint::is_egress_address_Valid() const{
    return m_egress_address_isValid;
}

OAIAwsGroundStationAgentEndpoint_ingressAddress OAIAwsGroundStationAgentEndpoint::getIngressAddress() const {
    return m_ingress_address;
}
void OAIAwsGroundStationAgentEndpoint::setIngressAddress(const OAIAwsGroundStationAgentEndpoint_ingressAddress &ingress_address) {
    m_ingress_address = ingress_address;
    m_ingress_address_isSet = true;
}

bool OAIAwsGroundStationAgentEndpoint::is_ingress_address_Set() const{
    return m_ingress_address_isSet;
}

bool OAIAwsGroundStationAgentEndpoint::is_ingress_address_Valid() const{
    return m_ingress_address_isValid;
}

QString OAIAwsGroundStationAgentEndpoint::getName() const {
    return m_name;
}
void OAIAwsGroundStationAgentEndpoint::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAwsGroundStationAgentEndpoint::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAwsGroundStationAgentEndpoint::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAwsGroundStationAgentEndpoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_audit_results.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_egress_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ingress_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAwsGroundStationAgentEndpoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_egress_address_isValid && m_ingress_address_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
