/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegisterAgentRequest_discoveryData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegisterAgentRequest_discoveryData::OAIRegisterAgentRequest_discoveryData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegisterAgentRequest_discoveryData::OAIRegisterAgentRequest_discoveryData() {
    this->initializeModel();
}

OAIRegisterAgentRequest_discoveryData::~OAIRegisterAgentRequest_discoveryData() {}

void OAIRegisterAgentRequest_discoveryData::initializeModel() {

    m_capability_arns_isSet = false;
    m_capability_arns_isValid = false;

    m_private_ip_addresses_isSet = false;
    m_private_ip_addresses_isValid = false;

    m_public_ip_addresses_isSet = false;
    m_public_ip_addresses_isValid = false;
}

void OAIRegisterAgentRequest_discoveryData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegisterAgentRequest_discoveryData::fromJsonObject(QJsonObject json) {

    m_capability_arns_isValid = ::OpenAPI::fromJsonValue(m_capability_arns, json[QString("capabilityArns")]);
    m_capability_arns_isSet = !json[QString("capabilityArns")].isNull() && m_capability_arns_isValid;

    m_private_ip_addresses_isValid = ::OpenAPI::fromJsonValue(m_private_ip_addresses, json[QString("privateIpAddresses")]);
    m_private_ip_addresses_isSet = !json[QString("privateIpAddresses")].isNull() && m_private_ip_addresses_isValid;

    m_public_ip_addresses_isValid = ::OpenAPI::fromJsonValue(m_public_ip_addresses, json[QString("publicIpAddresses")]);
    m_public_ip_addresses_isSet = !json[QString("publicIpAddresses")].isNull() && m_public_ip_addresses_isValid;
}

QString OAIRegisterAgentRequest_discoveryData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegisterAgentRequest_discoveryData::asJsonObject() const {
    QJsonObject obj;
    if (m_capability_arns.isSet()) {
        obj.insert(QString("capabilityArns"), ::OpenAPI::toJsonValue(m_capability_arns));
    }
    if (m_private_ip_addresses.isSet()) {
        obj.insert(QString("privateIpAddresses"), ::OpenAPI::toJsonValue(m_private_ip_addresses));
    }
    if (m_public_ip_addresses.isSet()) {
        obj.insert(QString("publicIpAddresses"), ::OpenAPI::toJsonValue(m_public_ip_addresses));
    }
    return obj;
}

QList OAIRegisterAgentRequest_discoveryData::getCapabilityArns() const {
    return m_capability_arns;
}
void OAIRegisterAgentRequest_discoveryData::setCapabilityArns(const QList &capability_arns) {
    m_capability_arns = capability_arns;
    m_capability_arns_isSet = true;
}

bool OAIRegisterAgentRequest_discoveryData::is_capability_arns_Set() const{
    return m_capability_arns_isSet;
}

bool OAIRegisterAgentRequest_discoveryData::is_capability_arns_Valid() const{
    return m_capability_arns_isValid;
}

QList OAIRegisterAgentRequest_discoveryData::getPrivateIpAddresses() const {
    return m_private_ip_addresses;
}
void OAIRegisterAgentRequest_discoveryData::setPrivateIpAddresses(const QList &private_ip_addresses) {
    m_private_ip_addresses = private_ip_addresses;
    m_private_ip_addresses_isSet = true;
}

bool OAIRegisterAgentRequest_discoveryData::is_private_ip_addresses_Set() const{
    return m_private_ip_addresses_isSet;
}

bool OAIRegisterAgentRequest_discoveryData::is_private_ip_addresses_Valid() const{
    return m_private_ip_addresses_isValid;
}

QList OAIRegisterAgentRequest_discoveryData::getPublicIpAddresses() const {
    return m_public_ip_addresses;
}
void OAIRegisterAgentRequest_discoveryData::setPublicIpAddresses(const QList &public_ip_addresses) {
    m_public_ip_addresses = public_ip_addresses;
    m_public_ip_addresses_isSet = true;
}

bool OAIRegisterAgentRequest_discoveryData::is_public_ip_addresses_Set() const{
    return m_public_ip_addresses_isSet;
}

bool OAIRegisterAgentRequest_discoveryData::is_public_ip_addresses_Valid() const{
    return m_public_ip_addresses_isValid;
}

bool OAIRegisterAgentRequest_discoveryData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_capability_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_ip_addresses.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_addresses.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegisterAgentRequest_discoveryData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_capability_arns_isValid && m_private_ip_addresses_isValid && m_public_ip_addresses_isValid && true;
}

} // namespace OpenAPI
