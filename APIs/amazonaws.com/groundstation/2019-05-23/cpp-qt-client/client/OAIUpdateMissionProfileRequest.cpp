/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateMissionProfileRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateMissionProfileRequest::OAIUpdateMissionProfileRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateMissionProfileRequest::OAIUpdateMissionProfileRequest() {
    this->initializeModel();
}

OAIUpdateMissionProfileRequest::~OAIUpdateMissionProfileRequest() {}

void OAIUpdateMissionProfileRequest::initializeModel() {

    m_contact_post_pass_duration_seconds_isSet = false;
    m_contact_post_pass_duration_seconds_isValid = false;

    m_contact_pre_pass_duration_seconds_isSet = false;
    m_contact_pre_pass_duration_seconds_isValid = false;

    m_dataflow_edges_isSet = false;
    m_dataflow_edges_isValid = false;

    m_minimum_viable_contact_duration_seconds_isSet = false;
    m_minimum_viable_contact_duration_seconds_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_streams_kms_key_isSet = false;
    m_streams_kms_key_isValid = false;

    m_streams_kms_role_isSet = false;
    m_streams_kms_role_isValid = false;

    m_tracking_config_arn_isSet = false;
    m_tracking_config_arn_isValid = false;
}

void OAIUpdateMissionProfileRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateMissionProfileRequest::fromJsonObject(QJsonObject json) {

    m_contact_post_pass_duration_seconds_isValid = ::OpenAPI::fromJsonValue(m_contact_post_pass_duration_seconds, json[QString("contactPostPassDurationSeconds")]);
    m_contact_post_pass_duration_seconds_isSet = !json[QString("contactPostPassDurationSeconds")].isNull() && m_contact_post_pass_duration_seconds_isValid;

    m_contact_pre_pass_duration_seconds_isValid = ::OpenAPI::fromJsonValue(m_contact_pre_pass_duration_seconds, json[QString("contactPrePassDurationSeconds")]);
    m_contact_pre_pass_duration_seconds_isSet = !json[QString("contactPrePassDurationSeconds")].isNull() && m_contact_pre_pass_duration_seconds_isValid;

    m_dataflow_edges_isValid = ::OpenAPI::fromJsonValue(m_dataflow_edges, json[QString("dataflowEdges")]);
    m_dataflow_edges_isSet = !json[QString("dataflowEdges")].isNull() && m_dataflow_edges_isValid;

    m_minimum_viable_contact_duration_seconds_isValid = ::OpenAPI::fromJsonValue(m_minimum_viable_contact_duration_seconds, json[QString("minimumViableContactDurationSeconds")]);
    m_minimum_viable_contact_duration_seconds_isSet = !json[QString("minimumViableContactDurationSeconds")].isNull() && m_minimum_viable_contact_duration_seconds_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_streams_kms_key_isValid = ::OpenAPI::fromJsonValue(m_streams_kms_key, json[QString("streamsKmsKey")]);
    m_streams_kms_key_isSet = !json[QString("streamsKmsKey")].isNull() && m_streams_kms_key_isValid;

    m_streams_kms_role_isValid = ::OpenAPI::fromJsonValue(m_streams_kms_role, json[QString("streamsKmsRole")]);
    m_streams_kms_role_isSet = !json[QString("streamsKmsRole")].isNull() && m_streams_kms_role_isValid;

    m_tracking_config_arn_isValid = ::OpenAPI::fromJsonValue(m_tracking_config_arn, json[QString("trackingConfigArn")]);
    m_tracking_config_arn_isSet = !json[QString("trackingConfigArn")].isNull() && m_tracking_config_arn_isValid;
}

QString OAIUpdateMissionProfileRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateMissionProfileRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_post_pass_duration_seconds_isSet) {
        obj.insert(QString("contactPostPassDurationSeconds"), ::OpenAPI::toJsonValue(m_contact_post_pass_duration_seconds));
    }
    if (m_contact_pre_pass_duration_seconds_isSet) {
        obj.insert(QString("contactPrePassDurationSeconds"), ::OpenAPI::toJsonValue(m_contact_pre_pass_duration_seconds));
    }
    if (m_dataflow_edges.isSet()) {
        obj.insert(QString("dataflowEdges"), ::OpenAPI::toJsonValue(m_dataflow_edges));
    }
    if (m_minimum_viable_contact_duration_seconds_isSet) {
        obj.insert(QString("minimumViableContactDurationSeconds"), ::OpenAPI::toJsonValue(m_minimum_viable_contact_duration_seconds));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_streams_kms_key.isSet()) {
        obj.insert(QString("streamsKmsKey"), ::OpenAPI::toJsonValue(m_streams_kms_key));
    }
    if (m_streams_kms_role_isSet) {
        obj.insert(QString("streamsKmsRole"), ::OpenAPI::toJsonValue(m_streams_kms_role));
    }
    if (m_tracking_config_arn_isSet) {
        obj.insert(QString("trackingConfigArn"), ::OpenAPI::toJsonValue(m_tracking_config_arn));
    }
    return obj;
}

qint32 OAIUpdateMissionProfileRequest::getContactPostPassDurationSeconds() const {
    return m_contact_post_pass_duration_seconds;
}
void OAIUpdateMissionProfileRequest::setContactPostPassDurationSeconds(const qint32 &contact_post_pass_duration_seconds) {
    m_contact_post_pass_duration_seconds = contact_post_pass_duration_seconds;
    m_contact_post_pass_duration_seconds_isSet = true;
}

bool OAIUpdateMissionProfileRequest::is_contact_post_pass_duration_seconds_Set() const{
    return m_contact_post_pass_duration_seconds_isSet;
}

bool OAIUpdateMissionProfileRequest::is_contact_post_pass_duration_seconds_Valid() const{
    return m_contact_post_pass_duration_seconds_isValid;
}

qint32 OAIUpdateMissionProfileRequest::getContactPrePassDurationSeconds() const {
    return m_contact_pre_pass_duration_seconds;
}
void OAIUpdateMissionProfileRequest::setContactPrePassDurationSeconds(const qint32 &contact_pre_pass_duration_seconds) {
    m_contact_pre_pass_duration_seconds = contact_pre_pass_duration_seconds;
    m_contact_pre_pass_duration_seconds_isSet = true;
}

bool OAIUpdateMissionProfileRequest::is_contact_pre_pass_duration_seconds_Set() const{
    return m_contact_pre_pass_duration_seconds_isSet;
}

bool OAIUpdateMissionProfileRequest::is_contact_pre_pass_duration_seconds_Valid() const{
    return m_contact_pre_pass_duration_seconds_isValid;
}

QList OAIUpdateMissionProfileRequest::getDataflowEdges() const {
    return m_dataflow_edges;
}
void OAIUpdateMissionProfileRequest::setDataflowEdges(const QList &dataflow_edges) {
    m_dataflow_edges = dataflow_edges;
    m_dataflow_edges_isSet = true;
}

bool OAIUpdateMissionProfileRequest::is_dataflow_edges_Set() const{
    return m_dataflow_edges_isSet;
}

bool OAIUpdateMissionProfileRequest::is_dataflow_edges_Valid() const{
    return m_dataflow_edges_isValid;
}

qint32 OAIUpdateMissionProfileRequest::getMinimumViableContactDurationSeconds() const {
    return m_minimum_viable_contact_duration_seconds;
}
void OAIUpdateMissionProfileRequest::setMinimumViableContactDurationSeconds(const qint32 &minimum_viable_contact_duration_seconds) {
    m_minimum_viable_contact_duration_seconds = minimum_viable_contact_duration_seconds;
    m_minimum_viable_contact_duration_seconds_isSet = true;
}

bool OAIUpdateMissionProfileRequest::is_minimum_viable_contact_duration_seconds_Set() const{
    return m_minimum_viable_contact_duration_seconds_isSet;
}

bool OAIUpdateMissionProfileRequest::is_minimum_viable_contact_duration_seconds_Valid() const{
    return m_minimum_viable_contact_duration_seconds_isValid;
}

QString OAIUpdateMissionProfileRequest::getName() const {
    return m_name;
}
void OAIUpdateMissionProfileRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateMissionProfileRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateMissionProfileRequest::is_name_Valid() const{
    return m_name_isValid;
}

OAIGetMissionProfileResponse_streamsKmsKey OAIUpdateMissionProfileRequest::getStreamsKmsKey() const {
    return m_streams_kms_key;
}
void OAIUpdateMissionProfileRequest::setStreamsKmsKey(const OAIGetMissionProfileResponse_streamsKmsKey &streams_kms_key) {
    m_streams_kms_key = streams_kms_key;
    m_streams_kms_key_isSet = true;
}

bool OAIUpdateMissionProfileRequest::is_streams_kms_key_Set() const{
    return m_streams_kms_key_isSet;
}

bool OAIUpdateMissionProfileRequest::is_streams_kms_key_Valid() const{
    return m_streams_kms_key_isValid;
}

QString OAIUpdateMissionProfileRequest::getStreamsKmsRole() const {
    return m_streams_kms_role;
}
void OAIUpdateMissionProfileRequest::setStreamsKmsRole(const QString &streams_kms_role) {
    m_streams_kms_role = streams_kms_role;
    m_streams_kms_role_isSet = true;
}

bool OAIUpdateMissionProfileRequest::is_streams_kms_role_Set() const{
    return m_streams_kms_role_isSet;
}

bool OAIUpdateMissionProfileRequest::is_streams_kms_role_Valid() const{
    return m_streams_kms_role_isValid;
}

QString OAIUpdateMissionProfileRequest::getTrackingConfigArn() const {
    return m_tracking_config_arn;
}
void OAIUpdateMissionProfileRequest::setTrackingConfigArn(const QString &tracking_config_arn) {
    m_tracking_config_arn = tracking_config_arn;
    m_tracking_config_arn_isSet = true;
}

bool OAIUpdateMissionProfileRequest::is_tracking_config_arn_Set() const{
    return m_tracking_config_arn_isSet;
}

bool OAIUpdateMissionProfileRequest::is_tracking_config_arn_Valid() const{
    return m_tracking_config_arn_isValid;
}

bool OAIUpdateMissionProfileRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_post_pass_duration_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_pre_pass_duration_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataflow_edges.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_minimum_viable_contact_duration_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_streams_kms_key.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_streams_kms_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_config_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateMissionProfileRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
