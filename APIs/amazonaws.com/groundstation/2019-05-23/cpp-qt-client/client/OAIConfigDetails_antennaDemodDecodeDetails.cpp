/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigDetails_antennaDemodDecodeDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigDetails_antennaDemodDecodeDetails::OAIConfigDetails_antennaDemodDecodeDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigDetails_antennaDemodDecodeDetails::OAIConfigDetails_antennaDemodDecodeDetails() {
    this->initializeModel();
}

OAIConfigDetails_antennaDemodDecodeDetails::~OAIConfigDetails_antennaDemodDecodeDetails() {}

void OAIConfigDetails_antennaDemodDecodeDetails::initializeModel() {

    m_output_node_isSet = false;
    m_output_node_isValid = false;
}

void OAIConfigDetails_antennaDemodDecodeDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfigDetails_antennaDemodDecodeDetails::fromJsonObject(QJsonObject json) {

    m_output_node_isValid = ::OpenAPI::fromJsonValue(m_output_node, json[QString("outputNode")]);
    m_output_node_isSet = !json[QString("outputNode")].isNull() && m_output_node_isValid;
}

QString OAIConfigDetails_antennaDemodDecodeDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfigDetails_antennaDemodDecodeDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_output_node_isSet) {
        obj.insert(QString("outputNode"), ::OpenAPI::toJsonValue(m_output_node));
    }
    return obj;
}

QString OAIConfigDetails_antennaDemodDecodeDetails::getOutputNode() const {
    return m_output_node;
}
void OAIConfigDetails_antennaDemodDecodeDetails::setOutputNode(const QString &output_node) {
    m_output_node = output_node;
    m_output_node_isSet = true;
}

bool OAIConfigDetails_antennaDemodDecodeDetails::is_output_node_Set() const{
    return m_output_node_isSet;
}

bool OAIConfigDetails_antennaDemodDecodeDetails::is_output_node_Valid() const{
    return m_output_node_isValid;
}

bool OAIConfigDetails_antennaDemodDecodeDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_output_node_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfigDetails_antennaDemodDecodeDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
