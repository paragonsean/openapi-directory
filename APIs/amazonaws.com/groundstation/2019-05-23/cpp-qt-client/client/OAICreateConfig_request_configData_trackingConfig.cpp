/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateConfig_request_configData_trackingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateConfig_request_configData_trackingConfig::OAICreateConfig_request_configData_trackingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateConfig_request_configData_trackingConfig::OAICreateConfig_request_configData_trackingConfig() {
    this->initializeModel();
}

OAICreateConfig_request_configData_trackingConfig::~OAICreateConfig_request_configData_trackingConfig() {}

void OAICreateConfig_request_configData_trackingConfig::initializeModel() {

    m_autotrack_isSet = false;
    m_autotrack_isValid = false;
}

void OAICreateConfig_request_configData_trackingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateConfig_request_configData_trackingConfig::fromJsonObject(QJsonObject json) {

    m_autotrack_isValid = ::OpenAPI::fromJsonValue(m_autotrack, json[QString("autotrack")]);
    m_autotrack_isSet = !json[QString("autotrack")].isNull() && m_autotrack_isValid;
}

QString OAICreateConfig_request_configData_trackingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateConfig_request_configData_trackingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_autotrack.isSet()) {
        obj.insert(QString("autotrack"), ::OpenAPI::toJsonValue(m_autotrack));
    }
    return obj;
}

OAICriticality OAICreateConfig_request_configData_trackingConfig::getAutotrack() const {
    return m_autotrack;
}
void OAICreateConfig_request_configData_trackingConfig::setAutotrack(const OAICriticality &autotrack) {
    m_autotrack = autotrack;
    m_autotrack_isSet = true;
}

bool OAICreateConfig_request_configData_trackingConfig::is_autotrack_Set() const{
    return m_autotrack_isSet;
}

bool OAICreateConfig_request_configData_trackingConfig::is_autotrack_Valid() const{
    return m_autotrack_isValid;
}

bool OAICreateConfig_request_configData_trackingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_autotrack.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateConfig_request_configData_trackingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_autotrack_isValid && true;
}

} // namespace OpenAPI
