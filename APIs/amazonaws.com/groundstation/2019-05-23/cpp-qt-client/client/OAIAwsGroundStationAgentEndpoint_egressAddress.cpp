/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAwsGroundStationAgentEndpoint_egressAddress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAwsGroundStationAgentEndpoint_egressAddress::OAIAwsGroundStationAgentEndpoint_egressAddress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAwsGroundStationAgentEndpoint_egressAddress::OAIAwsGroundStationAgentEndpoint_egressAddress() {
    this->initializeModel();
}

OAIAwsGroundStationAgentEndpoint_egressAddress::~OAIAwsGroundStationAgentEndpoint_egressAddress() {}

void OAIAwsGroundStationAgentEndpoint_egressAddress::initializeModel() {

    m_mtu_isSet = false;
    m_mtu_isValid = false;

    m_socket_address_isSet = false;
    m_socket_address_isValid = false;
}

void OAIAwsGroundStationAgentEndpoint_egressAddress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAwsGroundStationAgentEndpoint_egressAddress::fromJsonObject(QJsonObject json) {

    m_mtu_isValid = ::OpenAPI::fromJsonValue(m_mtu, json[QString("mtu")]);
    m_mtu_isSet = !json[QString("mtu")].isNull() && m_mtu_isValid;

    m_socket_address_isValid = ::OpenAPI::fromJsonValue(m_socket_address, json[QString("socketAddress")]);
    m_socket_address_isSet = !json[QString("socketAddress")].isNull() && m_socket_address_isValid;
}

QString OAIAwsGroundStationAgentEndpoint_egressAddress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAwsGroundStationAgentEndpoint_egressAddress::asJsonObject() const {
    QJsonObject obj;
    if (m_mtu_isSet) {
        obj.insert(QString("mtu"), ::OpenAPI::toJsonValue(m_mtu));
    }
    if (m_socket_address.isSet()) {
        obj.insert(QString("socketAddress"), ::OpenAPI::toJsonValue(m_socket_address));
    }
    return obj;
}

qint32 OAIAwsGroundStationAgentEndpoint_egressAddress::getMtu() const {
    return m_mtu;
}
void OAIAwsGroundStationAgentEndpoint_egressAddress::setMtu(const qint32 &mtu) {
    m_mtu = mtu;
    m_mtu_isSet = true;
}

bool OAIAwsGroundStationAgentEndpoint_egressAddress::is_mtu_Set() const{
    return m_mtu_isSet;
}

bool OAIAwsGroundStationAgentEndpoint_egressAddress::is_mtu_Valid() const{
    return m_mtu_isValid;
}

OAIConnectionDetails_socketAddress OAIAwsGroundStationAgentEndpoint_egressAddress::getSocketAddress() const {
    return m_socket_address;
}
void OAIAwsGroundStationAgentEndpoint_egressAddress::setSocketAddress(const OAIConnectionDetails_socketAddress &socket_address) {
    m_socket_address = socket_address;
    m_socket_address_isSet = true;
}

bool OAIAwsGroundStationAgentEndpoint_egressAddress::is_socket_address_Set() const{
    return m_socket_address_isSet;
}

bool OAIAwsGroundStationAgentEndpoint_egressAddress::is_socket_address_Valid() const{
    return m_socket_address_isValid;
}

bool OAIAwsGroundStationAgentEndpoint_egressAddress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mtu_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_socket_address.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAwsGroundStationAgentEndpoint_egressAddress::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_socket_address_isValid && true;
}

} // namespace OpenAPI
