/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpointDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpointDetails::OAIEndpointDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpointDetails::OAIEndpointDetails() {
    this->initializeModel();
}

OAIEndpointDetails::~OAIEndpointDetails() {}

void OAIEndpointDetails::initializeModel() {

    m_aws_ground_station_agent_endpoint_isSet = false;
    m_aws_ground_station_agent_endpoint_isValid = false;

    m_endpoint_isSet = false;
    m_endpoint_isValid = false;

    m_health_reasons_isSet = false;
    m_health_reasons_isValid = false;

    m_health_status_isSet = false;
    m_health_status_isValid = false;

    m_security_details_isSet = false;
    m_security_details_isValid = false;
}

void OAIEndpointDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpointDetails::fromJsonObject(QJsonObject json) {

    m_aws_ground_station_agent_endpoint_isValid = ::OpenAPI::fromJsonValue(m_aws_ground_station_agent_endpoint, json[QString("awsGroundStationAgentEndpoint")]);
    m_aws_ground_station_agent_endpoint_isSet = !json[QString("awsGroundStationAgentEndpoint")].isNull() && m_aws_ground_station_agent_endpoint_isValid;

    m_endpoint_isValid = ::OpenAPI::fromJsonValue(m_endpoint, json[QString("endpoint")]);
    m_endpoint_isSet = !json[QString("endpoint")].isNull() && m_endpoint_isValid;

    m_health_reasons_isValid = ::OpenAPI::fromJsonValue(m_health_reasons, json[QString("healthReasons")]);
    m_health_reasons_isSet = !json[QString("healthReasons")].isNull() && m_health_reasons_isValid;

    m_health_status_isValid = ::OpenAPI::fromJsonValue(m_health_status, json[QString("healthStatus")]);
    m_health_status_isSet = !json[QString("healthStatus")].isNull() && m_health_status_isValid;

    m_security_details_isValid = ::OpenAPI::fromJsonValue(m_security_details, json[QString("securityDetails")]);
    m_security_details_isSet = !json[QString("securityDetails")].isNull() && m_security_details_isValid;
}

QString OAIEndpointDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpointDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_aws_ground_station_agent_endpoint.isSet()) {
        obj.insert(QString("awsGroundStationAgentEndpoint"), ::OpenAPI::toJsonValue(m_aws_ground_station_agent_endpoint));
    }
    if (m_endpoint.isSet()) {
        obj.insert(QString("endpoint"), ::OpenAPI::toJsonValue(m_endpoint));
    }
    if (m_health_reasons.isSet()) {
        obj.insert(QString("healthReasons"), ::OpenAPI::toJsonValue(m_health_reasons));
    }
    if (m_health_status.isSet()) {
        obj.insert(QString("healthStatus"), ::OpenAPI::toJsonValue(m_health_status));
    }
    if (m_security_details.isSet()) {
        obj.insert(QString("securityDetails"), ::OpenAPI::toJsonValue(m_security_details));
    }
    return obj;
}

OAIEndpointDetails_awsGroundStationAgentEndpoint OAIEndpointDetails::getAwsGroundStationAgentEndpoint() const {
    return m_aws_ground_station_agent_endpoint;
}
void OAIEndpointDetails::setAwsGroundStationAgentEndpoint(const OAIEndpointDetails_awsGroundStationAgentEndpoint &aws_ground_station_agent_endpoint) {
    m_aws_ground_station_agent_endpoint = aws_ground_station_agent_endpoint;
    m_aws_ground_station_agent_endpoint_isSet = true;
}

bool OAIEndpointDetails::is_aws_ground_station_agent_endpoint_Set() const{
    return m_aws_ground_station_agent_endpoint_isSet;
}

bool OAIEndpointDetails::is_aws_ground_station_agent_endpoint_Valid() const{
    return m_aws_ground_station_agent_endpoint_isValid;
}

OAIEndpointDetails_endpoint OAIEndpointDetails::getEndpoint() const {
    return m_endpoint;
}
void OAIEndpointDetails::setEndpoint(const OAIEndpointDetails_endpoint &endpoint) {
    m_endpoint = endpoint;
    m_endpoint_isSet = true;
}

bool OAIEndpointDetails::is_endpoint_Set() const{
    return m_endpoint_isSet;
}

bool OAIEndpointDetails::is_endpoint_Valid() const{
    return m_endpoint_isValid;
}

QList OAIEndpointDetails::getHealthReasons() const {
    return m_health_reasons;
}
void OAIEndpointDetails::setHealthReasons(const QList &health_reasons) {
    m_health_reasons = health_reasons;
    m_health_reasons_isSet = true;
}

bool OAIEndpointDetails::is_health_reasons_Set() const{
    return m_health_reasons_isSet;
}

bool OAIEndpointDetails::is_health_reasons_Valid() const{
    return m_health_reasons_isValid;
}

OAICapabilityHealth OAIEndpointDetails::getHealthStatus() const {
    return m_health_status;
}
void OAIEndpointDetails::setHealthStatus(const OAICapabilityHealth &health_status) {
    m_health_status = health_status;
    m_health_status_isSet = true;
}

bool OAIEndpointDetails::is_health_status_Set() const{
    return m_health_status_isSet;
}

bool OAIEndpointDetails::is_health_status_Valid() const{
    return m_health_status_isValid;
}

OAIEndpointDetails_securityDetails OAIEndpointDetails::getSecurityDetails() const {
    return m_security_details;
}
void OAIEndpointDetails::setSecurityDetails(const OAIEndpointDetails_securityDetails &security_details) {
    m_security_details = security_details;
    m_security_details_isSet = true;
}

bool OAIEndpointDetails::is_security_details_Set() const{
    return m_security_details_isSet;
}

bool OAIEndpointDetails::is_security_details_Valid() const{
    return m_security_details_isValid;
}

bool OAIEndpointDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws_ground_station_agent_endpoint.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_reasons.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpointDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
