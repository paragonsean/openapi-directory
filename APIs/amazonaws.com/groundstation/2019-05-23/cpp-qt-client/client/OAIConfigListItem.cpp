/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigListItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigListItem::OAIConfigListItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigListItem::OAIConfigListItem() {
    this->initializeModel();
}

OAIConfigListItem::~OAIConfigListItem() {}

void OAIConfigListItem::initializeModel() {

    m_config_arn_isSet = false;
    m_config_arn_isValid = false;

    m_config_id_isSet = false;
    m_config_id_isValid = false;

    m_config_type_isSet = false;
    m_config_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIConfigListItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfigListItem::fromJsonObject(QJsonObject json) {

    m_config_arn_isValid = ::OpenAPI::fromJsonValue(m_config_arn, json[QString("configArn")]);
    m_config_arn_isSet = !json[QString("configArn")].isNull() && m_config_arn_isValid;

    m_config_id_isValid = ::OpenAPI::fromJsonValue(m_config_id, json[QString("configId")]);
    m_config_id_isSet = !json[QString("configId")].isNull() && m_config_id_isValid;

    m_config_type_isValid = ::OpenAPI::fromJsonValue(m_config_type, json[QString("configType")]);
    m_config_type_isSet = !json[QString("configType")].isNull() && m_config_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIConfigListItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfigListItem::asJsonObject() const {
    QJsonObject obj;
    if (m_config_arn_isSet) {
        obj.insert(QString("configArn"), ::OpenAPI::toJsonValue(m_config_arn));
    }
    if (m_config_id_isSet) {
        obj.insert(QString("configId"), ::OpenAPI::toJsonValue(m_config_id));
    }
    if (m_config_type.isSet()) {
        obj.insert(QString("configType"), ::OpenAPI::toJsonValue(m_config_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIConfigListItem::getConfigArn() const {
    return m_config_arn;
}
void OAIConfigListItem::setConfigArn(const QString &config_arn) {
    m_config_arn = config_arn;
    m_config_arn_isSet = true;
}

bool OAIConfigListItem::is_config_arn_Set() const{
    return m_config_arn_isSet;
}

bool OAIConfigListItem::is_config_arn_Valid() const{
    return m_config_arn_isValid;
}

QString OAIConfigListItem::getConfigId() const {
    return m_config_id;
}
void OAIConfigListItem::setConfigId(const QString &config_id) {
    m_config_id = config_id;
    m_config_id_isSet = true;
}

bool OAIConfigListItem::is_config_id_Set() const{
    return m_config_id_isSet;
}

bool OAIConfigListItem::is_config_id_Valid() const{
    return m_config_id_isValid;
}

OAIConfigCapabilityType OAIConfigListItem::getConfigType() const {
    return m_config_type;
}
void OAIConfigListItem::setConfigType(const OAIConfigCapabilityType &config_type) {
    m_config_type = config_type;
    m_config_type_isSet = true;
}

bool OAIConfigListItem::is_config_type_Set() const{
    return m_config_type_isSet;
}

bool OAIConfigListItem::is_config_type_Valid() const{
    return m_config_type_isValid;
}

QString OAIConfigListItem::getName() const {
    return m_name;
}
void OAIConfigListItem::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIConfigListItem::is_name_Set() const{
    return m_name_isSet;
}

bool OAIConfigListItem::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIConfigListItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_config_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfigListItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
