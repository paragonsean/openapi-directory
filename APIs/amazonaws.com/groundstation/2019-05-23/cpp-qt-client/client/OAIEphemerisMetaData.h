/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEphemerisMetaData.h
 *
 * Metadata describing a particular ephemeris.
 */

#ifndef OAIEphemerisMetaData_H
#define OAIEphemerisMetaData_H

#include <QJsonObject>

#include "OAIEphemerisSource.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEphemerisMetaData : public OAIObject {
public:
    OAIEphemerisMetaData();
    OAIEphemerisMetaData(QString json);
    ~OAIEphemerisMetaData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEphemerisId() const;
    void setEphemerisId(const QString &ephemeris_id);
    bool is_ephemeris_id_Set() const;
    bool is_ephemeris_id_Valid() const;

    QDateTime getEpoch() const;
    void setEpoch(const QDateTime &epoch);
    bool is_epoch_Set() const;
    bool is_epoch_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIEphemerisSource getSource() const;
    void setSource(const OAIEphemerisSource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ephemeris_id;
    bool m_ephemeris_id_isSet;
    bool m_ephemeris_id_isValid;

    QDateTime m_epoch;
    bool m_epoch_isSet;
    bool m_epoch_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIEphemerisSource m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEphemerisMetaData)

#endif // OAIEphemerisMetaData_H
