/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAngleUnits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAngleUnits::OAIAngleUnits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAngleUnits::OAIAngleUnits() {
    this->initializeModel();
}

OAIAngleUnits::~OAIAngleUnits() {}

void OAIAngleUnits::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAngleUnits::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAngleUnits::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DEGREE_ANGLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAngleUnits::DEGREE_ANGLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RADIAN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAngleUnits::RADIAN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAngleUnits::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAngleUnits::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAngleUnits::DEGREE_ANGLE:
            val = "DEGREE_ANGLE";
            break;
        case eOAIAngleUnits::RADIAN:
            val = "RADIAN";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAngleUnits::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAngleUnits::eOAIAngleUnits OAIAngleUnits::getValue() const {
    return m_value;
}

void OAIAngleUnits::setValue(const OAIAngleUnits::eOAIAngleUnits& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAngleUnits::isSet() const {
    
    return m_value_isSet;
}

bool OAIAngleUnits::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
