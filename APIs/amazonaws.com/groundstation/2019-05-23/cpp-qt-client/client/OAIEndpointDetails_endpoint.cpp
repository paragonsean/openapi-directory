/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpointDetails_endpoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpointDetails_endpoint::OAIEndpointDetails_endpoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpointDetails_endpoint::OAIEndpointDetails_endpoint() {
    this->initializeModel();
}

OAIEndpointDetails_endpoint::~OAIEndpointDetails_endpoint() {}

void OAIEndpointDetails_endpoint::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_mtu_isSet = false;
    m_mtu_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIEndpointDetails_endpoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpointDetails_endpoint::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_mtu_isValid = ::OpenAPI::fromJsonValue(m_mtu, json[QString("mtu")]);
    m_mtu_isSet = !json[QString("mtu")].isNull() && m_mtu_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIEndpointDetails_endpoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpointDetails_endpoint::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_mtu_isSet) {
        obj.insert(QString("mtu"), ::OpenAPI::toJsonValue(m_mtu));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIDataflowEndpoint_address OAIEndpointDetails_endpoint::getAddress() const {
    return m_address;
}
void OAIEndpointDetails_endpoint::setAddress(const OAIDataflowEndpoint_address &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIEndpointDetails_endpoint::is_address_Set() const{
    return m_address_isSet;
}

bool OAIEndpointDetails_endpoint::is_address_Valid() const{
    return m_address_isValid;
}

qint32 OAIEndpointDetails_endpoint::getMtu() const {
    return m_mtu;
}
void OAIEndpointDetails_endpoint::setMtu(const qint32 &mtu) {
    m_mtu = mtu;
    m_mtu_isSet = true;
}

bool OAIEndpointDetails_endpoint::is_mtu_Set() const{
    return m_mtu_isSet;
}

bool OAIEndpointDetails_endpoint::is_mtu_Valid() const{
    return m_mtu_isValid;
}

QString OAIEndpointDetails_endpoint::getName() const {
    return m_name;
}
void OAIEndpointDetails_endpoint::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIEndpointDetails_endpoint::is_name_Set() const{
    return m_name_isSet;
}

bool OAIEndpointDetails_endpoint::is_name_Valid() const{
    return m_name_isValid;
}

OAIEndpointStatus OAIEndpointDetails_endpoint::getStatus() const {
    return m_status;
}
void OAIEndpointDetails_endpoint::setStatus(const OAIEndpointStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIEndpointDetails_endpoint::is_status_Set() const{
    return m_status_isSet;
}

bool OAIEndpointDetails_endpoint::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIEndpointDetails_endpoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_mtu_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpointDetails_endpoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
