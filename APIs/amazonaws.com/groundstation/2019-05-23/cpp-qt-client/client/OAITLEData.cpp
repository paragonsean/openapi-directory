/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITLEData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITLEData::OAITLEData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITLEData::OAITLEData() {
    this->initializeModel();
}

OAITLEData::~OAITLEData() {}

void OAITLEData::initializeModel() {

    m_tle_line1_isSet = false;
    m_tle_line1_isValid = false;

    m_tle_line2_isSet = false;
    m_tle_line2_isValid = false;

    m_valid_time_range_isSet = false;
    m_valid_time_range_isValid = false;
}

void OAITLEData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITLEData::fromJsonObject(QJsonObject json) {

    m_tle_line1_isValid = ::OpenAPI::fromJsonValue(m_tle_line1, json[QString("tleLine1")]);
    m_tle_line1_isSet = !json[QString("tleLine1")].isNull() && m_tle_line1_isValid;

    m_tle_line2_isValid = ::OpenAPI::fromJsonValue(m_tle_line2, json[QString("tleLine2")]);
    m_tle_line2_isSet = !json[QString("tleLine2")].isNull() && m_tle_line2_isValid;

    m_valid_time_range_isValid = ::OpenAPI::fromJsonValue(m_valid_time_range, json[QString("validTimeRange")]);
    m_valid_time_range_isSet = !json[QString("validTimeRange")].isNull() && m_valid_time_range_isValid;
}

QString OAITLEData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITLEData::asJsonObject() const {
    QJsonObject obj;
    if (m_tle_line1_isSet) {
        obj.insert(QString("tleLine1"), ::OpenAPI::toJsonValue(m_tle_line1));
    }
    if (m_tle_line2_isSet) {
        obj.insert(QString("tleLine2"), ::OpenAPI::toJsonValue(m_tle_line2));
    }
    if (m_valid_time_range.isSet()) {
        obj.insert(QString("validTimeRange"), ::OpenAPI::toJsonValue(m_valid_time_range));
    }
    return obj;
}

QString OAITLEData::getTleLine1() const {
    return m_tle_line1;
}
void OAITLEData::setTleLine1(const QString &tle_line1) {
    m_tle_line1 = tle_line1;
    m_tle_line1_isSet = true;
}

bool OAITLEData::is_tle_line1_Set() const{
    return m_tle_line1_isSet;
}

bool OAITLEData::is_tle_line1_Valid() const{
    return m_tle_line1_isValid;
}

QString OAITLEData::getTleLine2() const {
    return m_tle_line2;
}
void OAITLEData::setTleLine2(const QString &tle_line2) {
    m_tle_line2 = tle_line2;
    m_tle_line2_isSet = true;
}

bool OAITLEData::is_tle_line2_Set() const{
    return m_tle_line2_isSet;
}

bool OAITLEData::is_tle_line2_Valid() const{
    return m_tle_line2_isValid;
}

OAITLEData_validTimeRange OAITLEData::getValidTimeRange() const {
    return m_valid_time_range;
}
void OAITLEData::setValidTimeRange(const OAITLEData_validTimeRange &valid_time_range) {
    m_valid_time_range = valid_time_range;
    m_valid_time_range_isSet = true;
}

bool OAITLEData::is_valid_time_range_Set() const{
    return m_valid_time_range_isSet;
}

bool OAITLEData::is_valid_time_range_Valid() const{
    return m_valid_time_range_isValid;
}

bool OAITLEData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tle_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tle_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_time_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITLEData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tle_line1_isValid && m_tle_line2_isValid && m_valid_time_range_isValid && true;
}

} // namespace OpenAPI
