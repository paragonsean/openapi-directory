/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEphemerisItem.h
 *
 * Ephemeris item.
 */

#ifndef OAIEphemerisItem_H
#define OAIEphemerisItem_H

#include <QJsonObject>

#include "OAIEphemerisItem_sourceS3Object.h"
#include "OAIEphemerisStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEphemerisItem_sourceS3Object;

class OAIEphemerisItem : public OAIObject {
public:
    OAIEphemerisItem();
    OAIEphemerisItem(QString json);
    ~OAIEphemerisItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    bool getEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getEphemerisId() const;
    void setEphemerisId(const QString &ephemeris_id);
    bool is_ephemeris_id_Set() const;
    bool is_ephemeris_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    OAIEphemerisItem_sourceS3Object getSourceS3Object() const;
    void setSourceS3Object(const OAIEphemerisItem_sourceS3Object &source_s3_object);
    bool is_source_s3_object_Set() const;
    bool is_source_s3_object_Valid() const;

    OAIEphemerisStatus getStatus() const;
    void setStatus(const OAIEphemerisStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_ephemeris_id;
    bool m_ephemeris_id_isSet;
    bool m_ephemeris_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    OAIEphemerisItem_sourceS3Object m_source_s3_object;
    bool m_source_s3_object_isSet;
    bool m_source_s3_object_isValid;

    OAIEphemerisStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEphemerisItem)

#endif // OAIEphemerisItem_H
