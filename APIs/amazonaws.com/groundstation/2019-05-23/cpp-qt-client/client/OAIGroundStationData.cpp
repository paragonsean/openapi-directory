/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroundStationData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroundStationData::OAIGroundStationData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroundStationData::OAIGroundStationData() {
    this->initializeModel();
}

OAIGroundStationData::~OAIGroundStationData() {}

void OAIGroundStationData::initializeModel() {

    m_ground_station_id_isSet = false;
    m_ground_station_id_isValid = false;

    m_ground_station_name_isSet = false;
    m_ground_station_name_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;
}

void OAIGroundStationData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGroundStationData::fromJsonObject(QJsonObject json) {

    m_ground_station_id_isValid = ::OpenAPI::fromJsonValue(m_ground_station_id, json[QString("groundStationId")]);
    m_ground_station_id_isSet = !json[QString("groundStationId")].isNull() && m_ground_station_id_isValid;

    m_ground_station_name_isValid = ::OpenAPI::fromJsonValue(m_ground_station_name, json[QString("groundStationName")]);
    m_ground_station_name_isSet = !json[QString("groundStationName")].isNull() && m_ground_station_name_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;
}

QString OAIGroundStationData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGroundStationData::asJsonObject() const {
    QJsonObject obj;
    if (m_ground_station_id_isSet) {
        obj.insert(QString("groundStationId"), ::OpenAPI::toJsonValue(m_ground_station_id));
    }
    if (m_ground_station_name_isSet) {
        obj.insert(QString("groundStationName"), ::OpenAPI::toJsonValue(m_ground_station_name));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    return obj;
}

QString OAIGroundStationData::getGroundStationId() const {
    return m_ground_station_id;
}
void OAIGroundStationData::setGroundStationId(const QString &ground_station_id) {
    m_ground_station_id = ground_station_id;
    m_ground_station_id_isSet = true;
}

bool OAIGroundStationData::is_ground_station_id_Set() const{
    return m_ground_station_id_isSet;
}

bool OAIGroundStationData::is_ground_station_id_Valid() const{
    return m_ground_station_id_isValid;
}

QString OAIGroundStationData::getGroundStationName() const {
    return m_ground_station_name;
}
void OAIGroundStationData::setGroundStationName(const QString &ground_station_name) {
    m_ground_station_name = ground_station_name;
    m_ground_station_name_isSet = true;
}

bool OAIGroundStationData::is_ground_station_name_Set() const{
    return m_ground_station_name_isSet;
}

bool OAIGroundStationData::is_ground_station_name_Valid() const{
    return m_ground_station_name_isValid;
}

QString OAIGroundStationData::getRegion() const {
    return m_region;
}
void OAIGroundStationData::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIGroundStationData::is_region_Set() const{
    return m_region_isSet;
}

bool OAIGroundStationData::is_region_Valid() const{
    return m_region_isValid;
}

bool OAIGroundStationData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ground_station_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ground_station_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGroundStationData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
