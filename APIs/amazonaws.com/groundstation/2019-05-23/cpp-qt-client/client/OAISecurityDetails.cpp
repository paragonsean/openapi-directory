/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityDetails::OAISecurityDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityDetails::OAISecurityDetails() {
    this->initializeModel();
}

OAISecurityDetails::~OAISecurityDetails() {}

void OAISecurityDetails::initializeModel() {

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_security_group_ids_isSet = false;
    m_security_group_ids_isValid = false;

    m_subnet_ids_isSet = false;
    m_subnet_ids_isValid = false;
}

void OAISecurityDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISecurityDetails::fromJsonObject(QJsonObject json) {

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("roleArn")]);
    m_role_arn_isSet = !json[QString("roleArn")].isNull() && m_role_arn_isValid;

    m_security_group_ids_isValid = ::OpenAPI::fromJsonValue(m_security_group_ids, json[QString("securityGroupIds")]);
    m_security_group_ids_isSet = !json[QString("securityGroupIds")].isNull() && m_security_group_ids_isValid;

    m_subnet_ids_isValid = ::OpenAPI::fromJsonValue(m_subnet_ids, json[QString("subnetIds")]);
    m_subnet_ids_isSet = !json[QString("subnetIds")].isNull() && m_subnet_ids_isValid;
}

QString OAISecurityDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISecurityDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_role_arn_isSet) {
        obj.insert(QString("roleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_security_group_ids.isSet()) {
        obj.insert(QString("securityGroupIds"), ::OpenAPI::toJsonValue(m_security_group_ids));
    }
    if (m_subnet_ids.isSet()) {
        obj.insert(QString("subnetIds"), ::OpenAPI::toJsonValue(m_subnet_ids));
    }
    return obj;
}

QString OAISecurityDetails::getRoleArn() const {
    return m_role_arn;
}
void OAISecurityDetails::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAISecurityDetails::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAISecurityDetails::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

QList OAISecurityDetails::getSecurityGroupIds() const {
    return m_security_group_ids;
}
void OAISecurityDetails::setSecurityGroupIds(const QList &security_group_ids) {
    m_security_group_ids = security_group_ids;
    m_security_group_ids_isSet = true;
}

bool OAISecurityDetails::is_security_group_ids_Set() const{
    return m_security_group_ids_isSet;
}

bool OAISecurityDetails::is_security_group_ids_Valid() const{
    return m_security_group_ids_isValid;
}

QList OAISecurityDetails::getSubnetIds() const {
    return m_subnet_ids;
}
void OAISecurityDetails::setSubnetIds(const QList &subnet_ids) {
    m_subnet_ids = subnet_ids;
    m_subnet_ids_isSet = true;
}

bool OAISecurityDetails::is_subnet_ids_Set() const{
    return m_subnet_ids_isSet;
}

bool OAISecurityDetails::is_subnet_ids_Valid() const{
    return m_subnet_ids_isValid;
}

bool OAISecurityDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnet_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISecurityDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_role_arn_isValid && m_security_group_ids_isValid && m_subnet_ids_isValid && true;
}

} // namespace OpenAPI
