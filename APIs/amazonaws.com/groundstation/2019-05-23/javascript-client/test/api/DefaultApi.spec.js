/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsGroundStation);
  }
}(this, function(expect, AwsGroundStation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsGroundStation.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('cancelContact', function() {
      it('should call cancelContact successfully', function(done) {
        //uncomment below and update the code to test cancelContact
        //instance.cancelContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createConfig', function() {
      it('should call createConfig successfully', function(done) {
        //uncomment below and update the code to test createConfig
        //instance.createConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDataflowEndpointGroup', function() {
      it('should call createDataflowEndpointGroup successfully', function(done) {
        //uncomment below and update the code to test createDataflowEndpointGroup
        //instance.createDataflowEndpointGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEphemeris', function() {
      it('should call createEphemeris successfully', function(done) {
        //uncomment below and update the code to test createEphemeris
        //instance.createEphemeris(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMissionProfile', function() {
      it('should call createMissionProfile successfully', function(done) {
        //uncomment below and update the code to test createMissionProfile
        //instance.createMissionProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteConfig', function() {
      it('should call deleteConfig successfully', function(done) {
        //uncomment below and update the code to test deleteConfig
        //instance.deleteConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDataflowEndpointGroup', function() {
      it('should call deleteDataflowEndpointGroup successfully', function(done) {
        //uncomment below and update the code to test deleteDataflowEndpointGroup
        //instance.deleteDataflowEndpointGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEphemeris', function() {
      it('should call deleteEphemeris successfully', function(done) {
        //uncomment below and update the code to test deleteEphemeris
        //instance.deleteEphemeris(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMissionProfile', function() {
      it('should call deleteMissionProfile successfully', function(done) {
        //uncomment below and update the code to test deleteMissionProfile
        //instance.deleteMissionProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeContact', function() {
      it('should call describeContact successfully', function(done) {
        //uncomment below and update the code to test describeContact
        //instance.describeContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeEphemeris', function() {
      it('should call describeEphemeris successfully', function(done) {
        //uncomment below and update the code to test describeEphemeris
        //instance.describeEphemeris(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAgentConfiguration', function() {
      it('should call getAgentConfiguration successfully', function(done) {
        //uncomment below and update the code to test getAgentConfiguration
        //instance.getAgentConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConfig', function() {
      it('should call getConfig successfully', function(done) {
        //uncomment below and update the code to test getConfig
        //instance.getConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataflowEndpointGroup', function() {
      it('should call getDataflowEndpointGroup successfully', function(done) {
        //uncomment below and update the code to test getDataflowEndpointGroup
        //instance.getDataflowEndpointGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMinuteUsage', function() {
      it('should call getMinuteUsage successfully', function(done) {
        //uncomment below and update the code to test getMinuteUsage
        //instance.getMinuteUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMissionProfile', function() {
      it('should call getMissionProfile successfully', function(done) {
        //uncomment below and update the code to test getMissionProfile
        //instance.getMissionProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSatellite', function() {
      it('should call getSatellite successfully', function(done) {
        //uncomment below and update the code to test getSatellite
        //instance.getSatellite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listConfigs', function() {
      it('should call listConfigs successfully', function(done) {
        //uncomment below and update the code to test listConfigs
        //instance.listConfigs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listContacts', function() {
      it('should call listContacts successfully', function(done) {
        //uncomment below and update the code to test listContacts
        //instance.listContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDataflowEndpointGroups', function() {
      it('should call listDataflowEndpointGroups successfully', function(done) {
        //uncomment below and update the code to test listDataflowEndpointGroups
        //instance.listDataflowEndpointGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listEphemerides', function() {
      it('should call listEphemerides successfully', function(done) {
        //uncomment below and update the code to test listEphemerides
        //instance.listEphemerides(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listGroundStations', function() {
      it('should call listGroundStations successfully', function(done) {
        //uncomment below and update the code to test listGroundStations
        //instance.listGroundStations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMissionProfiles', function() {
      it('should call listMissionProfiles successfully', function(done) {
        //uncomment below and update the code to test listMissionProfiles
        //instance.listMissionProfiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSatellites', function() {
      it('should call listSatellites successfully', function(done) {
        //uncomment below and update the code to test listSatellites
        //instance.listSatellites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerAgent', function() {
      it('should call registerAgent successfully', function(done) {
        //uncomment below and update the code to test registerAgent
        //instance.registerAgent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reserveContact', function() {
      it('should call reserveContact successfully', function(done) {
        //uncomment below and update the code to test reserveContact
        //instance.reserveContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAgentStatus', function() {
      it('should call updateAgentStatus successfully', function(done) {
        //uncomment below and update the code to test updateAgentStatus
        //instance.updateAgentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConfig', function() {
      it('should call updateConfig successfully', function(done) {
        //uncomment below and update the code to test updateConfig
        //instance.updateConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEphemeris', function() {
      it('should call updateEphemeris successfully', function(done) {
        //uncomment below and update the code to test updateEphemeris
        //instance.updateEphemeris(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMissionProfile', function() {
      it('should call updateMissionProfile successfully', function(done) {
        //uncomment below and update the code to test updateMissionProfile
        //instance.updateMissionProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
