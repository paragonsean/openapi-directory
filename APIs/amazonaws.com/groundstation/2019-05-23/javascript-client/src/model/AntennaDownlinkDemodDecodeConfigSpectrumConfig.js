/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Polarization from './Polarization';
import SpectrumConfig from './SpectrumConfig';
import SpectrumConfigBandwidth from './SpectrumConfigBandwidth';
import SpectrumConfigCenterFrequency from './SpectrumConfigCenterFrequency';

/**
 * The AntennaDownlinkDemodDecodeConfigSpectrumConfig model module.
 * @module model/AntennaDownlinkDemodDecodeConfigSpectrumConfig
 * @version 2019-05-23
 */
class AntennaDownlinkDemodDecodeConfigSpectrumConfig {
    /**
     * Constructs a new <code>AntennaDownlinkDemodDecodeConfigSpectrumConfig</code>.
     * @alias module:model/AntennaDownlinkDemodDecodeConfigSpectrumConfig
     * @implements module:model/SpectrumConfig
     * @param bandwidth {module:model/SpectrumConfigBandwidth} 
     * @param centerFrequency {module:model/SpectrumConfigCenterFrequency} 
     */
    constructor(bandwidth, centerFrequency) { 
        SpectrumConfig.initialize(this, bandwidth, centerFrequency);
        AntennaDownlinkDemodDecodeConfigSpectrumConfig.initialize(this, bandwidth, centerFrequency);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bandwidth, centerFrequency) { 
        obj['bandwidth'] = bandwidth;
        obj['centerFrequency'] = centerFrequency;
    }

    /**
     * Constructs a <code>AntennaDownlinkDemodDecodeConfigSpectrumConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AntennaDownlinkDemodDecodeConfigSpectrumConfig} obj Optional instance to populate.
     * @return {module:model/AntennaDownlinkDemodDecodeConfigSpectrumConfig} The populated <code>AntennaDownlinkDemodDecodeConfigSpectrumConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AntennaDownlinkDemodDecodeConfigSpectrumConfig();
            SpectrumConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('bandwidth')) {
                obj['bandwidth'] = SpectrumConfigBandwidth.constructFromObject(data['bandwidth']);
            }
            if (data.hasOwnProperty('centerFrequency')) {
                obj['centerFrequency'] = SpectrumConfigCenterFrequency.constructFromObject(data['centerFrequency']);
            }
            if (data.hasOwnProperty('polarization')) {
                obj['polarization'] = ApiClient.convertToType(data['polarization'], Polarization);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AntennaDownlinkDemodDecodeConfigSpectrumConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AntennaDownlinkDemodDecodeConfigSpectrumConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AntennaDownlinkDemodDecodeConfigSpectrumConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `bandwidth`
        if (data['bandwidth']) { // data not null
          SpectrumConfigBandwidth.validateJSON(data['bandwidth']);
        }
        // validate the optional field `centerFrequency`
        if (data['centerFrequency']) { // data not null
          SpectrumConfigCenterFrequency.validateJSON(data['centerFrequency']);
        }
        // validate the optional field `polarization`
        if (data['polarization']) { // data not null
          Polarization.validateJSON(data['polarization']);
        }

        return true;
    }


}

AntennaDownlinkDemodDecodeConfigSpectrumConfig.RequiredProperties = ["bandwidth", "centerFrequency"];

/**
 * @member {module:model/SpectrumConfigBandwidth} bandwidth
 */
AntennaDownlinkDemodDecodeConfigSpectrumConfig.prototype['bandwidth'] = undefined;

/**
 * @member {module:model/SpectrumConfigCenterFrequency} centerFrequency
 */
AntennaDownlinkDemodDecodeConfigSpectrumConfig.prototype['centerFrequency'] = undefined;

/**
 * @member {module:model/Polarization} polarization
 */
AntennaDownlinkDemodDecodeConfigSpectrumConfig.prototype['polarization'] = undefined;


// Implement SpectrumConfig interface:
/**
 * @member {module:model/SpectrumConfigBandwidth} bandwidth
 */
SpectrumConfig.prototype['bandwidth'] = undefined;
/**
 * @member {module:model/SpectrumConfigCenterFrequency} centerFrequency
 */
SpectrumConfig.prototype['centerFrequency'] = undefined;
/**
 * @member {module:model/Polarization} polarization
 */
SpectrumConfig.prototype['polarization'] = undefined;




export default AntennaDownlinkDemodDecodeConfigSpectrumConfig;

