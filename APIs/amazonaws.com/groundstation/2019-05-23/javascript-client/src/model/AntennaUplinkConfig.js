/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AntennaUplinkConfigSpectrumConfig from './AntennaUplinkConfigSpectrumConfig';
import AntennaUplinkConfigTargetEirp from './AntennaUplinkConfigTargetEirp';

/**
 * The AntennaUplinkConfig model module.
 * @module model/AntennaUplinkConfig
 * @version 2019-05-23
 */
class AntennaUplinkConfig {
    /**
     * Constructs a new <code>AntennaUplinkConfig</code>.
     * Information about the uplink &lt;code&gt;Config&lt;/code&gt; of an antenna.
     * @alias module:model/AntennaUplinkConfig
     * @param spectrumConfig {module:model/AntennaUplinkConfigSpectrumConfig} 
     * @param targetEirp {module:model/AntennaUplinkConfigTargetEirp} 
     */
    constructor(spectrumConfig, targetEirp) { 
        
        AntennaUplinkConfig.initialize(this, spectrumConfig, targetEirp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, spectrumConfig, targetEirp) { 
        obj['spectrumConfig'] = spectrumConfig;
        obj['targetEirp'] = targetEirp;
    }

    /**
     * Constructs a <code>AntennaUplinkConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AntennaUplinkConfig} obj Optional instance to populate.
     * @return {module:model/AntennaUplinkConfig} The populated <code>AntennaUplinkConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AntennaUplinkConfig();

            if (data.hasOwnProperty('spectrumConfig')) {
                obj['spectrumConfig'] = AntennaUplinkConfigSpectrumConfig.constructFromObject(data['spectrumConfig']);
            }
            if (data.hasOwnProperty('targetEirp')) {
                obj['targetEirp'] = AntennaUplinkConfigTargetEirp.constructFromObject(data['targetEirp']);
            }
            if (data.hasOwnProperty('transmitDisabled')) {
                obj['transmitDisabled'] = ApiClient.convertToType(data['transmitDisabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AntennaUplinkConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AntennaUplinkConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AntennaUplinkConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `spectrumConfig`
        if (data['spectrumConfig']) { // data not null
          AntennaUplinkConfigSpectrumConfig.validateJSON(data['spectrumConfig']);
        }
        // validate the optional field `targetEirp`
        if (data['targetEirp']) { // data not null
          AntennaUplinkConfigTargetEirp.validateJSON(data['targetEirp']);
        }
        // validate the optional field `transmitDisabled`
        if (data['transmitDisabled']) { // data not null
          Boolean.validateJSON(data['transmitDisabled']);
        }

        return true;
    }


}

AntennaUplinkConfig.RequiredProperties = ["spectrumConfig", "targetEirp"];

/**
 * @member {module:model/AntennaUplinkConfigSpectrumConfig} spectrumConfig
 */
AntennaUplinkConfig.prototype['spectrumConfig'] = undefined;

/**
 * @member {module:model/AntennaUplinkConfigTargetEirp} targetEirp
 */
AntennaUplinkConfig.prototype['targetEirp'] = undefined;

/**
 * @member {Boolean} transmitDisabled
 */
AntennaUplinkConfig.prototype['transmitDisabled'] = undefined;






export default AntennaUplinkConfig;

