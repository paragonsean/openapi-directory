/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EphemerisStatus from './EphemerisStatus';

/**
 * The ListEphemeridesRequest model module.
 * @module model/ListEphemeridesRequest
 * @version 2019-05-23
 */
class ListEphemeridesRequest {
    /**
     * Constructs a new <code>ListEphemeridesRequest</code>.
     * @alias module:model/ListEphemeridesRequest
     * @param endTime {Date} The end time to list in UTC. The operation will return an ephemeris if its expiration time is within the time range defined by the <code>startTime</code> and <code>endTime</code>.
     * @param satelliteId {String} The AWS Ground Station satellite ID to list ephemeris for.
     * @param startTime {Date} The start time to list in UTC. The operation will return an ephemeris if its expiration time is within the time range defined by the <code>startTime</code> and <code>endTime</code>.
     */
    constructor(endTime, satelliteId, startTime) { 
        
        ListEphemeridesRequest.initialize(this, endTime, satelliteId, startTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endTime, satelliteId, startTime) { 
        obj['endTime'] = endTime;
        obj['satelliteId'] = satelliteId;
        obj['startTime'] = startTime;
    }

    /**
     * Constructs a <code>ListEphemeridesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListEphemeridesRequest} obj Optional instance to populate.
     * @return {module:model/ListEphemeridesRequest} The populated <code>ListEphemeridesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListEphemeridesRequest();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('satelliteId')) {
                obj['satelliteId'] = ApiClient.convertToType(data['satelliteId'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('statusList')) {
                obj['statusList'] = ApiClient.convertToType(data['statusList'], [EphemerisStatus]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListEphemeridesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListEphemeridesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListEphemeridesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['satelliteId'] && !(typeof data['satelliteId'] === 'string' || data['satelliteId'] instanceof String)) {
            throw new Error("Expected the field `satelliteId` to be a primitive type in the JSON string but got " + data['satelliteId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['statusList'])) {
            throw new Error("Expected the field `statusList` to be an array in the JSON data but got " + data['statusList']);
        }

        return true;
    }


}

ListEphemeridesRequest.RequiredProperties = ["endTime", "satelliteId", "startTime"];

/**
 * The end time to list in UTC. The operation will return an ephemeris if its expiration time is within the time range defined by the <code>startTime</code> and <code>endTime</code>.
 * @member {Date} endTime
 */
ListEphemeridesRequest.prototype['endTime'] = undefined;

/**
 * The AWS Ground Station satellite ID to list ephemeris for.
 * @member {String} satelliteId
 */
ListEphemeridesRequest.prototype['satelliteId'] = undefined;

/**
 * The start time to list in UTC. The operation will return an ephemeris if its expiration time is within the time range defined by the <code>startTime</code> and <code>endTime</code>.
 * @member {Date} startTime
 */
ListEphemeridesRequest.prototype['startTime'] = undefined;

/**
 * The list of ephemeris status to return.
 * @member {Array.<module:model/EphemerisStatus>} statusList
 */
ListEphemeridesRequest.prototype['statusList'] = undefined;






export default ListEphemeridesRequest;

