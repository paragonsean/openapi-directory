/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateEphemerisRequestEphemeris from './CreateEphemerisRequestEphemeris';

/**
 * The CreateEphemerisRequest model module.
 * @module model/CreateEphemerisRequest
 * @version 2019-05-23
 */
class CreateEphemerisRequest {
    /**
     * Constructs a new <code>CreateEphemerisRequest</code>.
     * @alias module:model/CreateEphemerisRequest
     * @param name {String} A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.
     * @param satelliteId {String} AWS Ground Station satellite ID for this ephemeris.
     */
    constructor(name, satelliteId) { 
        
        CreateEphemerisRequest.initialize(this, name, satelliteId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, satelliteId) { 
        obj['name'] = name;
        obj['satelliteId'] = satelliteId;
    }

    /**
     * Constructs a <code>CreateEphemerisRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateEphemerisRequest} obj Optional instance to populate.
     * @return {module:model/CreateEphemerisRequest} The populated <code>CreateEphemerisRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateEphemerisRequest();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('ephemeris')) {
                obj['ephemeris'] = CreateEphemerisRequestEphemeris.constructFromObject(data['ephemeris']);
            }
            if (data.hasOwnProperty('expirationTime')) {
                obj['expirationTime'] = ApiClient.convertToType(data['expirationTime'], 'Date');
            }
            if (data.hasOwnProperty('kmsKeyArn')) {
                obj['kmsKeyArn'] = ApiClient.convertToType(data['kmsKeyArn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('satelliteId')) {
                obj['satelliteId'] = ApiClient.convertToType(data['satelliteId'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateEphemerisRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateEphemerisRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateEphemerisRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ephemeris`
        if (data['ephemeris']) { // data not null
          CreateEphemerisRequestEphemeris.validateJSON(data['ephemeris']);
        }
        // ensure the json data is a string
        if (data['kmsKeyArn'] && !(typeof data['kmsKeyArn'] === 'string' || data['kmsKeyArn'] instanceof String)) {
            throw new Error("Expected the field `kmsKeyArn` to be a primitive type in the JSON string but got " + data['kmsKeyArn']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['satelliteId'] && !(typeof data['satelliteId'] === 'string' || data['satelliteId'] instanceof String)) {
            throw new Error("Expected the field `satelliteId` to be a primitive type in the JSON string but got " + data['satelliteId']);
        }

        return true;
    }


}

CreateEphemerisRequest.RequiredProperties = ["name", "satelliteId"];

/**
 * <p>Whether to set the ephemeris status to <code>ENABLED</code> after validation.</p> <p>Setting this to false will set the ephemeris status to <code>DISABLED</code> after validation.</p>
 * @member {Boolean} enabled
 */
CreateEphemerisRequest.prototype['enabled'] = undefined;

/**
 * @member {module:model/CreateEphemerisRequestEphemeris} ephemeris
 */
CreateEphemerisRequest.prototype['ephemeris'] = undefined;

/**
 * An overall expiration time for the ephemeris in UTC, after which it will become <code>EXPIRED</code>.
 * @member {Date} expirationTime
 */
CreateEphemerisRequest.prototype['expirationTime'] = undefined;

/**
 * The ARN of a KMS key used to encrypt the ephemeris in Ground Station.
 * @member {String} kmsKeyArn
 */
CreateEphemerisRequest.prototype['kmsKeyArn'] = undefined;

/**
 * A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.
 * @member {String} name
 */
CreateEphemerisRequest.prototype['name'] = undefined;

/**
 * <p>Customer-provided priority score to establish the order in which overlapping ephemerides should be used.</p> <p>The default for customer-provided ephemeris priority is 1, and higher numbers take precedence.</p> <p>Priority must be 1 or greater</p>
 * @member {Number} priority
 */
CreateEphemerisRequest.prototype['priority'] = undefined;

/**
 * AWS Ground Station satellite ID for this ephemeris.
 * @member {String} satelliteId
 */
CreateEphemerisRequest.prototype['satelliteId'] = undefined;

/**
 * Tags assigned to an ephemeris.
 * @member {Object.<String, String>} tags
 */
CreateEphemerisRequest.prototype['tags'] = undefined;






export default CreateEphemerisRequest;

