/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AngleUnits from './AngleUnits';

/**
 * The Elevation model module.
 * @module model/Elevation
 * @version 2019-05-23
 */
class Elevation {
    /**
     * Constructs a new <code>Elevation</code>.
     * Elevation angle of the satellite in the sky during a contact.
     * @alias module:model/Elevation
     * @param unit {module:model/AngleUnits} 
     * @param value {Number} 
     */
    constructor(unit, value) { 
        
        Elevation.initialize(this, unit, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, unit, value) { 
        obj['unit'] = unit;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>Elevation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Elevation} obj Optional instance to populate.
     * @return {module:model/Elevation} The populated <code>Elevation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Elevation();

            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], AngleUnits);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Elevation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Elevation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Elevation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `unit`
        if (data['unit']) { // data not null
          AngleUnits.validateJSON(data['unit']);
        }
        // validate the optional field `value`
        if (data['value']) { // data not null
          Number.validateJSON(data['value']);
        }

        return true;
    }


}

Elevation.RequiredProperties = ["unit", "value"];

/**
 * @member {module:model/AngleUnits} unit
 */
Elevation.prototype['unit'] = undefined;

/**
 * @member {Number} value
 */
Elevation.prototype['value'] = undefined;






export default Elevation;

