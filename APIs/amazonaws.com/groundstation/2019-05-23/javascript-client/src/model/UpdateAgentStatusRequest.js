/**
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ComponentStatusData from './ComponentStatusData';
import UpdateAgentStatusRequestAggregateStatus from './UpdateAgentStatusRequestAggregateStatus';

/**
 * The UpdateAgentStatusRequest model module.
 * @module model/UpdateAgentStatusRequest
 * @version 2019-05-23
 */
class UpdateAgentStatusRequest {
    /**
     * Constructs a new <code>UpdateAgentStatusRequest</code>.
     * @alias module:model/UpdateAgentStatusRequest
     * @param aggregateStatus {module:model/UpdateAgentStatusRequestAggregateStatus} 
     * @param componentStatuses {Array.<module:model/ComponentStatusData>} List of component statuses for agent.
     * @param taskId {String} GUID of agent task.
     */
    constructor(aggregateStatus, componentStatuses, taskId) { 
        
        UpdateAgentStatusRequest.initialize(this, aggregateStatus, componentStatuses, taskId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, aggregateStatus, componentStatuses, taskId) { 
        obj['aggregateStatus'] = aggregateStatus;
        obj['componentStatuses'] = componentStatuses;
        obj['taskId'] = taskId;
    }

    /**
     * Constructs a <code>UpdateAgentStatusRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateAgentStatusRequest} obj Optional instance to populate.
     * @return {module:model/UpdateAgentStatusRequest} The populated <code>UpdateAgentStatusRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateAgentStatusRequest();

            if (data.hasOwnProperty('aggregateStatus')) {
                obj['aggregateStatus'] = UpdateAgentStatusRequestAggregateStatus.constructFromObject(data['aggregateStatus']);
            }
            if (data.hasOwnProperty('componentStatuses')) {
                obj['componentStatuses'] = ApiClient.convertToType(data['componentStatuses'], [ComponentStatusData]);
            }
            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateAgentStatusRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateAgentStatusRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateAgentStatusRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `aggregateStatus`
        if (data['aggregateStatus']) { // data not null
          UpdateAgentStatusRequestAggregateStatus.validateJSON(data['aggregateStatus']);
        }
        if (data['componentStatuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['componentStatuses'])) {
                throw new Error("Expected the field `componentStatuses` to be an array in the JSON data but got " + data['componentStatuses']);
            }
            // validate the optional field `componentStatuses` (array)
            for (const item of data['componentStatuses']) {
                ComponentStatusData.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['taskId'] && !(typeof data['taskId'] === 'string' || data['taskId'] instanceof String)) {
            throw new Error("Expected the field `taskId` to be a primitive type in the JSON string but got " + data['taskId']);
        }

        return true;
    }


}

UpdateAgentStatusRequest.RequiredProperties = ["aggregateStatus", "componentStatuses", "taskId"];

/**
 * @member {module:model/UpdateAgentStatusRequestAggregateStatus} aggregateStatus
 */
UpdateAgentStatusRequest.prototype['aggregateStatus'] = undefined;

/**
 * List of component statuses for agent.
 * @member {Array.<module:model/ComponentStatusData>} componentStatuses
 */
UpdateAgentStatusRequest.prototype['componentStatuses'] = undefined;

/**
 * GUID of agent task.
 * @member {String} taskId
 */
UpdateAgentStatusRequest.prototype['taskId'] = undefined;






export default UpdateAgentStatusRequest;

