/*
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateConfigRequestConfigDataAntennaDownlinkConfig;
import org.openapitools.client.model.CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig;
import org.openapitools.client.model.CreateConfigRequestConfigDataAntennaUplinkConfig;
import org.openapitools.client.model.CreateConfigRequestConfigDataDataflowEndpointConfig;
import org.openapitools.client.model.CreateConfigRequestConfigDataS3RecordingConfig;
import org.openapitools.client.model.CreateConfigRequestConfigDataTrackingConfig;
import org.openapitools.client.model.CreateConfigRequestConfigDataUplinkEchoConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateConfigRequestConfigData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:02.114064-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateConfigRequestConfigData {
  public static final String SERIALIZED_NAME_ANTENNA_DOWNLINK_CONFIG = "antennaDownlinkConfig";
  @SerializedName(SERIALIZED_NAME_ANTENNA_DOWNLINK_CONFIG)
  private CreateConfigRequestConfigDataAntennaDownlinkConfig antennaDownlinkConfig;

  public static final String SERIALIZED_NAME_ANTENNA_DOWNLINK_DEMOD_DECODE_CONFIG = "antennaDownlinkDemodDecodeConfig";
  @SerializedName(SERIALIZED_NAME_ANTENNA_DOWNLINK_DEMOD_DECODE_CONFIG)
  private CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig antennaDownlinkDemodDecodeConfig;

  public static final String SERIALIZED_NAME_ANTENNA_UPLINK_CONFIG = "antennaUplinkConfig";
  @SerializedName(SERIALIZED_NAME_ANTENNA_UPLINK_CONFIG)
  private CreateConfigRequestConfigDataAntennaUplinkConfig antennaUplinkConfig;

  public static final String SERIALIZED_NAME_DATAFLOW_ENDPOINT_CONFIG = "dataflowEndpointConfig";
  @SerializedName(SERIALIZED_NAME_DATAFLOW_ENDPOINT_CONFIG)
  private CreateConfigRequestConfigDataDataflowEndpointConfig dataflowEndpointConfig;

  public static final String SERIALIZED_NAME_S3_RECORDING_CONFIG = "s3RecordingConfig";
  @SerializedName(SERIALIZED_NAME_S3_RECORDING_CONFIG)
  private CreateConfigRequestConfigDataS3RecordingConfig s3RecordingConfig;

  public static final String SERIALIZED_NAME_TRACKING_CONFIG = "trackingConfig";
  @SerializedName(SERIALIZED_NAME_TRACKING_CONFIG)
  private CreateConfigRequestConfigDataTrackingConfig trackingConfig;

  public static final String SERIALIZED_NAME_UPLINK_ECHO_CONFIG = "uplinkEchoConfig";
  @SerializedName(SERIALIZED_NAME_UPLINK_ECHO_CONFIG)
  private CreateConfigRequestConfigDataUplinkEchoConfig uplinkEchoConfig;

  public CreateConfigRequestConfigData() {
  }

  public CreateConfigRequestConfigData antennaDownlinkConfig(CreateConfigRequestConfigDataAntennaDownlinkConfig antennaDownlinkConfig) {
    this.antennaDownlinkConfig = antennaDownlinkConfig;
    return this;
  }

  /**
   * Get antennaDownlinkConfig
   * @return antennaDownlinkConfig
   */
  @javax.annotation.Nullable
  public CreateConfigRequestConfigDataAntennaDownlinkConfig getAntennaDownlinkConfig() {
    return antennaDownlinkConfig;
  }

  public void setAntennaDownlinkConfig(CreateConfigRequestConfigDataAntennaDownlinkConfig antennaDownlinkConfig) {
    this.antennaDownlinkConfig = antennaDownlinkConfig;
  }


  public CreateConfigRequestConfigData antennaDownlinkDemodDecodeConfig(CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig antennaDownlinkDemodDecodeConfig) {
    this.antennaDownlinkDemodDecodeConfig = antennaDownlinkDemodDecodeConfig;
    return this;
  }

  /**
   * Get antennaDownlinkDemodDecodeConfig
   * @return antennaDownlinkDemodDecodeConfig
   */
  @javax.annotation.Nullable
  public CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig getAntennaDownlinkDemodDecodeConfig() {
    return antennaDownlinkDemodDecodeConfig;
  }

  public void setAntennaDownlinkDemodDecodeConfig(CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig antennaDownlinkDemodDecodeConfig) {
    this.antennaDownlinkDemodDecodeConfig = antennaDownlinkDemodDecodeConfig;
  }


  public CreateConfigRequestConfigData antennaUplinkConfig(CreateConfigRequestConfigDataAntennaUplinkConfig antennaUplinkConfig) {
    this.antennaUplinkConfig = antennaUplinkConfig;
    return this;
  }

  /**
   * Get antennaUplinkConfig
   * @return antennaUplinkConfig
   */
  @javax.annotation.Nullable
  public CreateConfigRequestConfigDataAntennaUplinkConfig getAntennaUplinkConfig() {
    return antennaUplinkConfig;
  }

  public void setAntennaUplinkConfig(CreateConfigRequestConfigDataAntennaUplinkConfig antennaUplinkConfig) {
    this.antennaUplinkConfig = antennaUplinkConfig;
  }


  public CreateConfigRequestConfigData dataflowEndpointConfig(CreateConfigRequestConfigDataDataflowEndpointConfig dataflowEndpointConfig) {
    this.dataflowEndpointConfig = dataflowEndpointConfig;
    return this;
  }

  /**
   * Get dataflowEndpointConfig
   * @return dataflowEndpointConfig
   */
  @javax.annotation.Nullable
  public CreateConfigRequestConfigDataDataflowEndpointConfig getDataflowEndpointConfig() {
    return dataflowEndpointConfig;
  }

  public void setDataflowEndpointConfig(CreateConfigRequestConfigDataDataflowEndpointConfig dataflowEndpointConfig) {
    this.dataflowEndpointConfig = dataflowEndpointConfig;
  }


  public CreateConfigRequestConfigData s3RecordingConfig(CreateConfigRequestConfigDataS3RecordingConfig s3RecordingConfig) {
    this.s3RecordingConfig = s3RecordingConfig;
    return this;
  }

  /**
   * Get s3RecordingConfig
   * @return s3RecordingConfig
   */
  @javax.annotation.Nullable
  public CreateConfigRequestConfigDataS3RecordingConfig getS3RecordingConfig() {
    return s3RecordingConfig;
  }

  public void setS3RecordingConfig(CreateConfigRequestConfigDataS3RecordingConfig s3RecordingConfig) {
    this.s3RecordingConfig = s3RecordingConfig;
  }


  public CreateConfigRequestConfigData trackingConfig(CreateConfigRequestConfigDataTrackingConfig trackingConfig) {
    this.trackingConfig = trackingConfig;
    return this;
  }

  /**
   * Get trackingConfig
   * @return trackingConfig
   */
  @javax.annotation.Nullable
  public CreateConfigRequestConfigDataTrackingConfig getTrackingConfig() {
    return trackingConfig;
  }

  public void setTrackingConfig(CreateConfigRequestConfigDataTrackingConfig trackingConfig) {
    this.trackingConfig = trackingConfig;
  }


  public CreateConfigRequestConfigData uplinkEchoConfig(CreateConfigRequestConfigDataUplinkEchoConfig uplinkEchoConfig) {
    this.uplinkEchoConfig = uplinkEchoConfig;
    return this;
  }

  /**
   * Get uplinkEchoConfig
   * @return uplinkEchoConfig
   */
  @javax.annotation.Nullable
  public CreateConfigRequestConfigDataUplinkEchoConfig getUplinkEchoConfig() {
    return uplinkEchoConfig;
  }

  public void setUplinkEchoConfig(CreateConfigRequestConfigDataUplinkEchoConfig uplinkEchoConfig) {
    this.uplinkEchoConfig = uplinkEchoConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateConfigRequestConfigData createConfigRequestConfigData = (CreateConfigRequestConfigData) o;
    return Objects.equals(this.antennaDownlinkConfig, createConfigRequestConfigData.antennaDownlinkConfig) &&
        Objects.equals(this.antennaDownlinkDemodDecodeConfig, createConfigRequestConfigData.antennaDownlinkDemodDecodeConfig) &&
        Objects.equals(this.antennaUplinkConfig, createConfigRequestConfigData.antennaUplinkConfig) &&
        Objects.equals(this.dataflowEndpointConfig, createConfigRequestConfigData.dataflowEndpointConfig) &&
        Objects.equals(this.s3RecordingConfig, createConfigRequestConfigData.s3RecordingConfig) &&
        Objects.equals(this.trackingConfig, createConfigRequestConfigData.trackingConfig) &&
        Objects.equals(this.uplinkEchoConfig, createConfigRequestConfigData.uplinkEchoConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(antennaDownlinkConfig, antennaDownlinkDemodDecodeConfig, antennaUplinkConfig, dataflowEndpointConfig, s3RecordingConfig, trackingConfig, uplinkEchoConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateConfigRequestConfigData {\n");
    sb.append("    antennaDownlinkConfig: ").append(toIndentedString(antennaDownlinkConfig)).append("\n");
    sb.append("    antennaDownlinkDemodDecodeConfig: ").append(toIndentedString(antennaDownlinkDemodDecodeConfig)).append("\n");
    sb.append("    antennaUplinkConfig: ").append(toIndentedString(antennaUplinkConfig)).append("\n");
    sb.append("    dataflowEndpointConfig: ").append(toIndentedString(dataflowEndpointConfig)).append("\n");
    sb.append("    s3RecordingConfig: ").append(toIndentedString(s3RecordingConfig)).append("\n");
    sb.append("    trackingConfig: ").append(toIndentedString(trackingConfig)).append("\n");
    sb.append("    uplinkEchoConfig: ").append(toIndentedString(uplinkEchoConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("antennaDownlinkConfig");
    openapiFields.add("antennaDownlinkDemodDecodeConfig");
    openapiFields.add("antennaUplinkConfig");
    openapiFields.add("dataflowEndpointConfig");
    openapiFields.add("s3RecordingConfig");
    openapiFields.add("trackingConfig");
    openapiFields.add("uplinkEchoConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateConfigRequestConfigData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateConfigRequestConfigData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateConfigRequestConfigData is not found in the empty JSON string", CreateConfigRequestConfigData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateConfigRequestConfigData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateConfigRequestConfigData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `antennaDownlinkConfig`
      if (jsonObj.get("antennaDownlinkConfig") != null && !jsonObj.get("antennaDownlinkConfig").isJsonNull()) {
        CreateConfigRequestConfigDataAntennaDownlinkConfig.validateJsonElement(jsonObj.get("antennaDownlinkConfig"));
      }
      // validate the optional field `antennaDownlinkDemodDecodeConfig`
      if (jsonObj.get("antennaDownlinkDemodDecodeConfig") != null && !jsonObj.get("antennaDownlinkDemodDecodeConfig").isJsonNull()) {
        CreateConfigRequestConfigDataAntennaDownlinkDemodDecodeConfig.validateJsonElement(jsonObj.get("antennaDownlinkDemodDecodeConfig"));
      }
      // validate the optional field `antennaUplinkConfig`
      if (jsonObj.get("antennaUplinkConfig") != null && !jsonObj.get("antennaUplinkConfig").isJsonNull()) {
        CreateConfigRequestConfigDataAntennaUplinkConfig.validateJsonElement(jsonObj.get("antennaUplinkConfig"));
      }
      // validate the optional field `dataflowEndpointConfig`
      if (jsonObj.get("dataflowEndpointConfig") != null && !jsonObj.get("dataflowEndpointConfig").isJsonNull()) {
        CreateConfigRequestConfigDataDataflowEndpointConfig.validateJsonElement(jsonObj.get("dataflowEndpointConfig"));
      }
      // validate the optional field `s3RecordingConfig`
      if (jsonObj.get("s3RecordingConfig") != null && !jsonObj.get("s3RecordingConfig").isJsonNull()) {
        CreateConfigRequestConfigDataS3RecordingConfig.validateJsonElement(jsonObj.get("s3RecordingConfig"));
      }
      // validate the optional field `trackingConfig`
      if (jsonObj.get("trackingConfig") != null && !jsonObj.get("trackingConfig").isJsonNull()) {
        CreateConfigRequestConfigDataTrackingConfig.validateJsonElement(jsonObj.get("trackingConfig"));
      }
      // validate the optional field `uplinkEchoConfig`
      if (jsonObj.get("uplinkEchoConfig") != null && !jsonObj.get("uplinkEchoConfig").isJsonNull()) {
        CreateConfigRequestConfigDataUplinkEchoConfig.validateJsonElement(jsonObj.get("uplinkEchoConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateConfigRequestConfigData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateConfigRequestConfigData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateConfigRequestConfigData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateConfigRequestConfigData.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateConfigRequestConfigData>() {
           @Override
           public void write(JsonWriter out, CreateConfigRequestConfigData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateConfigRequestConfigData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateConfigRequestConfigData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateConfigRequestConfigData
   * @throws IOException if the JSON string is invalid with respect to CreateConfigRequestConfigData
   */
  public static CreateConfigRequestConfigData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateConfigRequestConfigData.class);
  }

  /**
   * Convert an instance of CreateConfigRequestConfigData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

