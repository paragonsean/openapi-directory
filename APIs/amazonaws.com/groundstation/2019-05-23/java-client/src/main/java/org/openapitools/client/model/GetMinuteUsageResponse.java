/*
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p/&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:02.114064-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMinuteUsageResponse {
  public static final String SERIALIZED_NAME_ESTIMATED_MINUTES_REMAINING = "estimatedMinutesRemaining";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_MINUTES_REMAINING)
  private Integer estimatedMinutesRemaining;

  public static final String SERIALIZED_NAME_IS_RESERVED_MINUTES_CUSTOMER = "isReservedMinutesCustomer";
  @SerializedName(SERIALIZED_NAME_IS_RESERVED_MINUTES_CUSTOMER)
  private Boolean isReservedMinutesCustomer;

  public static final String SERIALIZED_NAME_TOTAL_RESERVED_MINUTE_ALLOCATION = "totalReservedMinuteAllocation";
  @SerializedName(SERIALIZED_NAME_TOTAL_RESERVED_MINUTE_ALLOCATION)
  private Integer totalReservedMinuteAllocation;

  public static final String SERIALIZED_NAME_TOTAL_SCHEDULED_MINUTES = "totalScheduledMinutes";
  @SerializedName(SERIALIZED_NAME_TOTAL_SCHEDULED_MINUTES)
  private Integer totalScheduledMinutes;

  public static final String SERIALIZED_NAME_UPCOMING_MINUTES_SCHEDULED = "upcomingMinutesScheduled";
  @SerializedName(SERIALIZED_NAME_UPCOMING_MINUTES_SCHEDULED)
  private Integer upcomingMinutesScheduled;

  public GetMinuteUsageResponse() {
  }

  public GetMinuteUsageResponse estimatedMinutesRemaining(Integer estimatedMinutesRemaining) {
    this.estimatedMinutesRemaining = estimatedMinutesRemaining;
    return this;
  }

  /**
   * Get estimatedMinutesRemaining
   * @return estimatedMinutesRemaining
   */
  @javax.annotation.Nullable
  public Integer getEstimatedMinutesRemaining() {
    return estimatedMinutesRemaining;
  }

  public void setEstimatedMinutesRemaining(Integer estimatedMinutesRemaining) {
    this.estimatedMinutesRemaining = estimatedMinutesRemaining;
  }


  public GetMinuteUsageResponse isReservedMinutesCustomer(Boolean isReservedMinutesCustomer) {
    this.isReservedMinutesCustomer = isReservedMinutesCustomer;
    return this;
  }

  /**
   * Get isReservedMinutesCustomer
   * @return isReservedMinutesCustomer
   */
  @javax.annotation.Nullable
  public Boolean getIsReservedMinutesCustomer() {
    return isReservedMinutesCustomer;
  }

  public void setIsReservedMinutesCustomer(Boolean isReservedMinutesCustomer) {
    this.isReservedMinutesCustomer = isReservedMinutesCustomer;
  }


  public GetMinuteUsageResponse totalReservedMinuteAllocation(Integer totalReservedMinuteAllocation) {
    this.totalReservedMinuteAllocation = totalReservedMinuteAllocation;
    return this;
  }

  /**
   * Get totalReservedMinuteAllocation
   * @return totalReservedMinuteAllocation
   */
  @javax.annotation.Nullable
  public Integer getTotalReservedMinuteAllocation() {
    return totalReservedMinuteAllocation;
  }

  public void setTotalReservedMinuteAllocation(Integer totalReservedMinuteAllocation) {
    this.totalReservedMinuteAllocation = totalReservedMinuteAllocation;
  }


  public GetMinuteUsageResponse totalScheduledMinutes(Integer totalScheduledMinutes) {
    this.totalScheduledMinutes = totalScheduledMinutes;
    return this;
  }

  /**
   * Get totalScheduledMinutes
   * @return totalScheduledMinutes
   */
  @javax.annotation.Nullable
  public Integer getTotalScheduledMinutes() {
    return totalScheduledMinutes;
  }

  public void setTotalScheduledMinutes(Integer totalScheduledMinutes) {
    this.totalScheduledMinutes = totalScheduledMinutes;
  }


  public GetMinuteUsageResponse upcomingMinutesScheduled(Integer upcomingMinutesScheduled) {
    this.upcomingMinutesScheduled = upcomingMinutesScheduled;
    return this;
  }

  /**
   * Get upcomingMinutesScheduled
   * @return upcomingMinutesScheduled
   */
  @javax.annotation.Nullable
  public Integer getUpcomingMinutesScheduled() {
    return upcomingMinutesScheduled;
  }

  public void setUpcomingMinutesScheduled(Integer upcomingMinutesScheduled) {
    this.upcomingMinutesScheduled = upcomingMinutesScheduled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMinuteUsageResponse getMinuteUsageResponse = (GetMinuteUsageResponse) o;
    return Objects.equals(this.estimatedMinutesRemaining, getMinuteUsageResponse.estimatedMinutesRemaining) &&
        Objects.equals(this.isReservedMinutesCustomer, getMinuteUsageResponse.isReservedMinutesCustomer) &&
        Objects.equals(this.totalReservedMinuteAllocation, getMinuteUsageResponse.totalReservedMinuteAllocation) &&
        Objects.equals(this.totalScheduledMinutes, getMinuteUsageResponse.totalScheduledMinutes) &&
        Objects.equals(this.upcomingMinutesScheduled, getMinuteUsageResponse.upcomingMinutesScheduled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(estimatedMinutesRemaining, isReservedMinutesCustomer, totalReservedMinuteAllocation, totalScheduledMinutes, upcomingMinutesScheduled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMinuteUsageResponse {\n");
    sb.append("    estimatedMinutesRemaining: ").append(toIndentedString(estimatedMinutesRemaining)).append("\n");
    sb.append("    isReservedMinutesCustomer: ").append(toIndentedString(isReservedMinutesCustomer)).append("\n");
    sb.append("    totalReservedMinuteAllocation: ").append(toIndentedString(totalReservedMinuteAllocation)).append("\n");
    sb.append("    totalScheduledMinutes: ").append(toIndentedString(totalScheduledMinutes)).append("\n");
    sb.append("    upcomingMinutesScheduled: ").append(toIndentedString(upcomingMinutesScheduled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("estimatedMinutesRemaining");
    openapiFields.add("isReservedMinutesCustomer");
    openapiFields.add("totalReservedMinuteAllocation");
    openapiFields.add("totalScheduledMinutes");
    openapiFields.add("upcomingMinutesScheduled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMinuteUsageResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMinuteUsageResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMinuteUsageResponse is not found in the empty JSON string", GetMinuteUsageResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMinuteUsageResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMinuteUsageResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `estimatedMinutesRemaining`
      if (jsonObj.get("estimatedMinutesRemaining") != null && !jsonObj.get("estimatedMinutesRemaining").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("estimatedMinutesRemaining"));
      }
      // validate the optional field `isReservedMinutesCustomer`
      if (jsonObj.get("isReservedMinutesCustomer") != null && !jsonObj.get("isReservedMinutesCustomer").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("isReservedMinutesCustomer"));
      }
      // validate the optional field `totalReservedMinuteAllocation`
      if (jsonObj.get("totalReservedMinuteAllocation") != null && !jsonObj.get("totalReservedMinuteAllocation").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("totalReservedMinuteAllocation"));
      }
      // validate the optional field `totalScheduledMinutes`
      if (jsonObj.get("totalScheduledMinutes") != null && !jsonObj.get("totalScheduledMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("totalScheduledMinutes"));
      }
      // validate the optional field `upcomingMinutesScheduled`
      if (jsonObj.get("upcomingMinutesScheduled") != null && !jsonObj.get("upcomingMinutesScheduled").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("upcomingMinutesScheduled"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMinuteUsageResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMinuteUsageResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMinuteUsageResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMinuteUsageResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMinuteUsageResponse>() {
           @Override
           public void write(JsonWriter out, GetMinuteUsageResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMinuteUsageResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMinuteUsageResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMinuteUsageResponse
   * @throws IOException if the JSON string is invalid with respect to GetMinuteUsageResponse
   */
  public static GetMinuteUsageResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMinuteUsageResponse.class);
  }

  /**
   * Convert an instance of GetMinuteUsageResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

