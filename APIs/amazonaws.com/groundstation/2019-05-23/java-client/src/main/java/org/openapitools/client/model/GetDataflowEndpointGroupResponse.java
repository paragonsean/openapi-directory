/*
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p/&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:02.114064-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetDataflowEndpointGroupResponse {
  public static final String SERIALIZED_NAME_CONTACT_POST_PASS_DURATION_SECONDS = "contactPostPassDurationSeconds";
  @SerializedName(SERIALIZED_NAME_CONTACT_POST_PASS_DURATION_SECONDS)
  private Integer contactPostPassDurationSeconds;

  public static final String SERIALIZED_NAME_CONTACT_PRE_PASS_DURATION_SECONDS = "contactPrePassDurationSeconds";
  @SerializedName(SERIALIZED_NAME_CONTACT_PRE_PASS_DURATION_SECONDS)
  private Integer contactPrePassDurationSeconds;

  public static final String SERIALIZED_NAME_DATAFLOW_ENDPOINT_GROUP_ARN = "dataflowEndpointGroupArn";
  @SerializedName(SERIALIZED_NAME_DATAFLOW_ENDPOINT_GROUP_ARN)
  private String dataflowEndpointGroupArn;

  public static final String SERIALIZED_NAME_DATAFLOW_ENDPOINT_GROUP_ID = "dataflowEndpointGroupId";
  @SerializedName(SERIALIZED_NAME_DATAFLOW_ENDPOINT_GROUP_ID)
  private String dataflowEndpointGroupId;

  public static final String SERIALIZED_NAME_ENDPOINTS_DETAILS = "endpointsDetails";
  @SerializedName(SERIALIZED_NAME_ENDPOINTS_DETAILS)
  private List endpointsDetails;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public GetDataflowEndpointGroupResponse() {
  }

  public GetDataflowEndpointGroupResponse contactPostPassDurationSeconds(Integer contactPostPassDurationSeconds) {
    this.contactPostPassDurationSeconds = contactPostPassDurationSeconds;
    return this;
  }

  /**
   * Get contactPostPassDurationSeconds
   * @return contactPostPassDurationSeconds
   */
  @javax.annotation.Nullable
  public Integer getContactPostPassDurationSeconds() {
    return contactPostPassDurationSeconds;
  }

  public void setContactPostPassDurationSeconds(Integer contactPostPassDurationSeconds) {
    this.contactPostPassDurationSeconds = contactPostPassDurationSeconds;
  }


  public GetDataflowEndpointGroupResponse contactPrePassDurationSeconds(Integer contactPrePassDurationSeconds) {
    this.contactPrePassDurationSeconds = contactPrePassDurationSeconds;
    return this;
  }

  /**
   * Get contactPrePassDurationSeconds
   * @return contactPrePassDurationSeconds
   */
  @javax.annotation.Nullable
  public Integer getContactPrePassDurationSeconds() {
    return contactPrePassDurationSeconds;
  }

  public void setContactPrePassDurationSeconds(Integer contactPrePassDurationSeconds) {
    this.contactPrePassDurationSeconds = contactPrePassDurationSeconds;
  }


  public GetDataflowEndpointGroupResponse dataflowEndpointGroupArn(String dataflowEndpointGroupArn) {
    this.dataflowEndpointGroupArn = dataflowEndpointGroupArn;
    return this;
  }

  /**
   * Get dataflowEndpointGroupArn
   * @return dataflowEndpointGroupArn
   */
  @javax.annotation.Nullable
  public String getDataflowEndpointGroupArn() {
    return dataflowEndpointGroupArn;
  }

  public void setDataflowEndpointGroupArn(String dataflowEndpointGroupArn) {
    this.dataflowEndpointGroupArn = dataflowEndpointGroupArn;
  }


  public GetDataflowEndpointGroupResponse dataflowEndpointGroupId(String dataflowEndpointGroupId) {
    this.dataflowEndpointGroupId = dataflowEndpointGroupId;
    return this;
  }

  /**
   * Get dataflowEndpointGroupId
   * @return dataflowEndpointGroupId
   */
  @javax.annotation.Nullable
  public String getDataflowEndpointGroupId() {
    return dataflowEndpointGroupId;
  }

  public void setDataflowEndpointGroupId(String dataflowEndpointGroupId) {
    this.dataflowEndpointGroupId = dataflowEndpointGroupId;
  }


  public GetDataflowEndpointGroupResponse endpointsDetails(List endpointsDetails) {
    this.endpointsDetails = endpointsDetails;
    return this;
  }

  /**
   * Get endpointsDetails
   * @return endpointsDetails
   */
  @javax.annotation.Nullable
  public List getEndpointsDetails() {
    return endpointsDetails;
  }

  public void setEndpointsDetails(List endpointsDetails) {
    this.endpointsDetails = endpointsDetails;
  }


  public GetDataflowEndpointGroupResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDataflowEndpointGroupResponse getDataflowEndpointGroupResponse = (GetDataflowEndpointGroupResponse) o;
    return Objects.equals(this.contactPostPassDurationSeconds, getDataflowEndpointGroupResponse.contactPostPassDurationSeconds) &&
        Objects.equals(this.contactPrePassDurationSeconds, getDataflowEndpointGroupResponse.contactPrePassDurationSeconds) &&
        Objects.equals(this.dataflowEndpointGroupArn, getDataflowEndpointGroupResponse.dataflowEndpointGroupArn) &&
        Objects.equals(this.dataflowEndpointGroupId, getDataflowEndpointGroupResponse.dataflowEndpointGroupId) &&
        Objects.equals(this.endpointsDetails, getDataflowEndpointGroupResponse.endpointsDetails) &&
        Objects.equals(this.tags, getDataflowEndpointGroupResponse.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactPostPassDurationSeconds, contactPrePassDurationSeconds, dataflowEndpointGroupArn, dataflowEndpointGroupId, endpointsDetails, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDataflowEndpointGroupResponse {\n");
    sb.append("    contactPostPassDurationSeconds: ").append(toIndentedString(contactPostPassDurationSeconds)).append("\n");
    sb.append("    contactPrePassDurationSeconds: ").append(toIndentedString(contactPrePassDurationSeconds)).append("\n");
    sb.append("    dataflowEndpointGroupArn: ").append(toIndentedString(dataflowEndpointGroupArn)).append("\n");
    sb.append("    dataflowEndpointGroupId: ").append(toIndentedString(dataflowEndpointGroupId)).append("\n");
    sb.append("    endpointsDetails: ").append(toIndentedString(endpointsDetails)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contactPostPassDurationSeconds");
    openapiFields.add("contactPrePassDurationSeconds");
    openapiFields.add("dataflowEndpointGroupArn");
    openapiFields.add("dataflowEndpointGroupId");
    openapiFields.add("endpointsDetails");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetDataflowEndpointGroupResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetDataflowEndpointGroupResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetDataflowEndpointGroupResponse is not found in the empty JSON string", GetDataflowEndpointGroupResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetDataflowEndpointGroupResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetDataflowEndpointGroupResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `contactPostPassDurationSeconds`
      if (jsonObj.get("contactPostPassDurationSeconds") != null && !jsonObj.get("contactPostPassDurationSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("contactPostPassDurationSeconds"));
      }
      // validate the optional field `contactPrePassDurationSeconds`
      if (jsonObj.get("contactPrePassDurationSeconds") != null && !jsonObj.get("contactPrePassDurationSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("contactPrePassDurationSeconds"));
      }
      // validate the optional field `dataflowEndpointGroupArn`
      if (jsonObj.get("dataflowEndpointGroupArn") != null && !jsonObj.get("dataflowEndpointGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("dataflowEndpointGroupArn"));
      }
      // validate the optional field `dataflowEndpointGroupId`
      if (jsonObj.get("dataflowEndpointGroupId") != null && !jsonObj.get("dataflowEndpointGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("dataflowEndpointGroupId"));
      }
      // validate the optional field `endpointsDetails`
      if (jsonObj.get("endpointsDetails") != null && !jsonObj.get("endpointsDetails").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("endpointsDetails"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetDataflowEndpointGroupResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetDataflowEndpointGroupResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetDataflowEndpointGroupResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetDataflowEndpointGroupResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetDataflowEndpointGroupResponse>() {
           @Override
           public void write(JsonWriter out, GetDataflowEndpointGroupResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetDataflowEndpointGroupResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetDataflowEndpointGroupResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetDataflowEndpointGroupResponse
   * @throws IOException if the JSON string is invalid with respect to GetDataflowEndpointGroupResponse
   */
  public static GetDataflowEndpointGroupResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetDataflowEndpointGroupResponse.class);
  }

  /**
   * Convert an instance of GetDataflowEndpointGroupResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

