/*
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.EndpointDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateDataflowEndpointGroupRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:02.114064-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateDataflowEndpointGroupRequest {
  public static final String SERIALIZED_NAME_CONTACT_POST_PASS_DURATION_SECONDS = "contactPostPassDurationSeconds";
  @SerializedName(SERIALIZED_NAME_CONTACT_POST_PASS_DURATION_SECONDS)
  private Integer contactPostPassDurationSeconds;

  public static final String SERIALIZED_NAME_CONTACT_PRE_PASS_DURATION_SECONDS = "contactPrePassDurationSeconds";
  @SerializedName(SERIALIZED_NAME_CONTACT_PRE_PASS_DURATION_SECONDS)
  private Integer contactPrePassDurationSeconds;

  public static final String SERIALIZED_NAME_ENDPOINT_DETAILS = "endpointDetails";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_DETAILS)
  private List<EndpointDetails> endpointDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public CreateDataflowEndpointGroupRequest() {
  }

  public CreateDataflowEndpointGroupRequest contactPostPassDurationSeconds(Integer contactPostPassDurationSeconds) {
    this.contactPostPassDurationSeconds = contactPostPassDurationSeconds;
    return this;
  }

  /**
   * Amount of time, in seconds, after a contact ends that the Ground Station Dataflow Endpoint Group will be in a &lt;code&gt;POSTPASS&lt;/code&gt; state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the &lt;code&gt;POSTPASS&lt;/code&gt; state.
   * minimum: 120
   * maximum: 480
   * @return contactPostPassDurationSeconds
   */
  @javax.annotation.Nullable
  public Integer getContactPostPassDurationSeconds() {
    return contactPostPassDurationSeconds;
  }

  public void setContactPostPassDurationSeconds(Integer contactPostPassDurationSeconds) {
    this.contactPostPassDurationSeconds = contactPostPassDurationSeconds;
  }


  public CreateDataflowEndpointGroupRequest contactPrePassDurationSeconds(Integer contactPrePassDurationSeconds) {
    this.contactPrePassDurationSeconds = contactPrePassDurationSeconds;
    return this;
  }

  /**
   * Amount of time, in seconds, before a contact starts that the Ground Station Dataflow Endpoint Group will be in a &lt;code&gt;PREPASS&lt;/code&gt; state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the &lt;code&gt;PREPASS&lt;/code&gt; state.
   * minimum: 120
   * maximum: 480
   * @return contactPrePassDurationSeconds
   */
  @javax.annotation.Nullable
  public Integer getContactPrePassDurationSeconds() {
    return contactPrePassDurationSeconds;
  }

  public void setContactPrePassDurationSeconds(Integer contactPrePassDurationSeconds) {
    this.contactPrePassDurationSeconds = contactPrePassDurationSeconds;
  }


  public CreateDataflowEndpointGroupRequest endpointDetails(List<EndpointDetails> endpointDetails) {
    this.endpointDetails = endpointDetails;
    return this;
  }

  public CreateDataflowEndpointGroupRequest addEndpointDetailsItem(EndpointDetails endpointDetailsItem) {
    if (this.endpointDetails == null) {
      this.endpointDetails = new ArrayList<>();
    }
    this.endpointDetails.add(endpointDetailsItem);
    return this;
  }

  /**
   * Endpoint details of each endpoint in the dataflow endpoint group.
   * @return endpointDetails
   */
  @javax.annotation.Nonnull
  public List<EndpointDetails> getEndpointDetails() {
    return endpointDetails;
  }

  public void setEndpointDetails(List<EndpointDetails> endpointDetails) {
    this.endpointDetails = endpointDetails;
  }


  public CreateDataflowEndpointGroupRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateDataflowEndpointGroupRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * Tags of a dataflow endpoint group.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDataflowEndpointGroupRequest createDataflowEndpointGroupRequest = (CreateDataflowEndpointGroupRequest) o;
    return Objects.equals(this.contactPostPassDurationSeconds, createDataflowEndpointGroupRequest.contactPostPassDurationSeconds) &&
        Objects.equals(this.contactPrePassDurationSeconds, createDataflowEndpointGroupRequest.contactPrePassDurationSeconds) &&
        Objects.equals(this.endpointDetails, createDataflowEndpointGroupRequest.endpointDetails) &&
        Objects.equals(this.tags, createDataflowEndpointGroupRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactPostPassDurationSeconds, contactPrePassDurationSeconds, endpointDetails, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDataflowEndpointGroupRequest {\n");
    sb.append("    contactPostPassDurationSeconds: ").append(toIndentedString(contactPostPassDurationSeconds)).append("\n");
    sb.append("    contactPrePassDurationSeconds: ").append(toIndentedString(contactPrePassDurationSeconds)).append("\n");
    sb.append("    endpointDetails: ").append(toIndentedString(endpointDetails)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contactPostPassDurationSeconds");
    openapiFields.add("contactPrePassDurationSeconds");
    openapiFields.add("endpointDetails");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("endpointDetails");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateDataflowEndpointGroupRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateDataflowEndpointGroupRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateDataflowEndpointGroupRequest is not found in the empty JSON string", CreateDataflowEndpointGroupRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateDataflowEndpointGroupRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateDataflowEndpointGroupRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateDataflowEndpointGroupRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("endpointDetails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpointDetails` to be an array in the JSON string but got `%s`", jsonObj.get("endpointDetails").toString()));
      }

      JsonArray jsonArrayendpointDetails = jsonObj.getAsJsonArray("endpointDetails");
      // validate the required field `endpointDetails` (array)
      for (int i = 0; i < jsonArrayendpointDetails.size(); i++) {
        EndpointDetails.validateJsonElement(jsonArrayendpointDetails.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateDataflowEndpointGroupRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateDataflowEndpointGroupRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateDataflowEndpointGroupRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateDataflowEndpointGroupRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateDataflowEndpointGroupRequest>() {
           @Override
           public void write(JsonWriter out, CreateDataflowEndpointGroupRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateDataflowEndpointGroupRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateDataflowEndpointGroupRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateDataflowEndpointGroupRequest
   * @throws IOException if the JSON string is invalid with respect to CreateDataflowEndpointGroupRequest
   */
  public static CreateDataflowEndpointGroupRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateDataflowEndpointGroupRequest.class);
  }

  /**
   * Convert an instance of CreateDataflowEndpointGroupRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

