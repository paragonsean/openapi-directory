/*
 * AWS Ground Station
 * Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.
 *
 * The version of the OpenAPI document: 2019-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GetMissionProfileResponseStreamsKmsKey;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p/&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:02.114064-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMissionProfileResponse {
  public static final String SERIALIZED_NAME_CONTACT_POST_PASS_DURATION_SECONDS = "contactPostPassDurationSeconds";
  @SerializedName(SERIALIZED_NAME_CONTACT_POST_PASS_DURATION_SECONDS)
  private Integer contactPostPassDurationSeconds;

  public static final String SERIALIZED_NAME_CONTACT_PRE_PASS_DURATION_SECONDS = "contactPrePassDurationSeconds";
  @SerializedName(SERIALIZED_NAME_CONTACT_PRE_PASS_DURATION_SECONDS)
  private Integer contactPrePassDurationSeconds;

  public static final String SERIALIZED_NAME_DATAFLOW_EDGES = "dataflowEdges";
  @SerializedName(SERIALIZED_NAME_DATAFLOW_EDGES)
  private List dataflowEdges;

  public static final String SERIALIZED_NAME_MINIMUM_VIABLE_CONTACT_DURATION_SECONDS = "minimumViableContactDurationSeconds";
  @SerializedName(SERIALIZED_NAME_MINIMUM_VIABLE_CONTACT_DURATION_SECONDS)
  private Integer minimumViableContactDurationSeconds;

  public static final String SERIALIZED_NAME_MISSION_PROFILE_ARN = "missionProfileArn";
  @SerializedName(SERIALIZED_NAME_MISSION_PROFILE_ARN)
  private String missionProfileArn;

  public static final String SERIALIZED_NAME_MISSION_PROFILE_ID = "missionProfileId";
  @SerializedName(SERIALIZED_NAME_MISSION_PROFILE_ID)
  private String missionProfileId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_STREAMS_KMS_KEY = "streamsKmsKey";
  @SerializedName(SERIALIZED_NAME_STREAMS_KMS_KEY)
  private GetMissionProfileResponseStreamsKmsKey streamsKmsKey;

  public static final String SERIALIZED_NAME_STREAMS_KMS_ROLE = "streamsKmsRole";
  @SerializedName(SERIALIZED_NAME_STREAMS_KMS_ROLE)
  private String streamsKmsRole;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_TRACKING_CONFIG_ARN = "trackingConfigArn";
  @SerializedName(SERIALIZED_NAME_TRACKING_CONFIG_ARN)
  private String trackingConfigArn;

  public GetMissionProfileResponse() {
  }

  public GetMissionProfileResponse contactPostPassDurationSeconds(Integer contactPostPassDurationSeconds) {
    this.contactPostPassDurationSeconds = contactPostPassDurationSeconds;
    return this;
  }

  /**
   * Get contactPostPassDurationSeconds
   * @return contactPostPassDurationSeconds
   */
  @javax.annotation.Nullable
  public Integer getContactPostPassDurationSeconds() {
    return contactPostPassDurationSeconds;
  }

  public void setContactPostPassDurationSeconds(Integer contactPostPassDurationSeconds) {
    this.contactPostPassDurationSeconds = contactPostPassDurationSeconds;
  }


  public GetMissionProfileResponse contactPrePassDurationSeconds(Integer contactPrePassDurationSeconds) {
    this.contactPrePassDurationSeconds = contactPrePassDurationSeconds;
    return this;
  }

  /**
   * Get contactPrePassDurationSeconds
   * @return contactPrePassDurationSeconds
   */
  @javax.annotation.Nullable
  public Integer getContactPrePassDurationSeconds() {
    return contactPrePassDurationSeconds;
  }

  public void setContactPrePassDurationSeconds(Integer contactPrePassDurationSeconds) {
    this.contactPrePassDurationSeconds = contactPrePassDurationSeconds;
  }


  public GetMissionProfileResponse dataflowEdges(List dataflowEdges) {
    this.dataflowEdges = dataflowEdges;
    return this;
  }

  /**
   * Get dataflowEdges
   * @return dataflowEdges
   */
  @javax.annotation.Nullable
  public List getDataflowEdges() {
    return dataflowEdges;
  }

  public void setDataflowEdges(List dataflowEdges) {
    this.dataflowEdges = dataflowEdges;
  }


  public GetMissionProfileResponse minimumViableContactDurationSeconds(Integer minimumViableContactDurationSeconds) {
    this.minimumViableContactDurationSeconds = minimumViableContactDurationSeconds;
    return this;
  }

  /**
   * Get minimumViableContactDurationSeconds
   * @return minimumViableContactDurationSeconds
   */
  @javax.annotation.Nullable
  public Integer getMinimumViableContactDurationSeconds() {
    return minimumViableContactDurationSeconds;
  }

  public void setMinimumViableContactDurationSeconds(Integer minimumViableContactDurationSeconds) {
    this.minimumViableContactDurationSeconds = minimumViableContactDurationSeconds;
  }


  public GetMissionProfileResponse missionProfileArn(String missionProfileArn) {
    this.missionProfileArn = missionProfileArn;
    return this;
  }

  /**
   * Get missionProfileArn
   * @return missionProfileArn
   */
  @javax.annotation.Nullable
  public String getMissionProfileArn() {
    return missionProfileArn;
  }

  public void setMissionProfileArn(String missionProfileArn) {
    this.missionProfileArn = missionProfileArn;
  }


  public GetMissionProfileResponse missionProfileId(String missionProfileId) {
    this.missionProfileId = missionProfileId;
    return this;
  }

  /**
   * Get missionProfileId
   * @return missionProfileId
   */
  @javax.annotation.Nullable
  public String getMissionProfileId() {
    return missionProfileId;
  }

  public void setMissionProfileId(String missionProfileId) {
    this.missionProfileId = missionProfileId;
  }


  public GetMissionProfileResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetMissionProfileResponse region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public GetMissionProfileResponse streamsKmsKey(GetMissionProfileResponseStreamsKmsKey streamsKmsKey) {
    this.streamsKmsKey = streamsKmsKey;
    return this;
  }

  /**
   * Get streamsKmsKey
   * @return streamsKmsKey
   */
  @javax.annotation.Nullable
  public GetMissionProfileResponseStreamsKmsKey getStreamsKmsKey() {
    return streamsKmsKey;
  }

  public void setStreamsKmsKey(GetMissionProfileResponseStreamsKmsKey streamsKmsKey) {
    this.streamsKmsKey = streamsKmsKey;
  }


  public GetMissionProfileResponse streamsKmsRole(String streamsKmsRole) {
    this.streamsKmsRole = streamsKmsRole;
    return this;
  }

  /**
   * Get streamsKmsRole
   * @return streamsKmsRole
   */
  @javax.annotation.Nullable
  public String getStreamsKmsRole() {
    return streamsKmsRole;
  }

  public void setStreamsKmsRole(String streamsKmsRole) {
    this.streamsKmsRole = streamsKmsRole;
  }


  public GetMissionProfileResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public GetMissionProfileResponse trackingConfigArn(String trackingConfigArn) {
    this.trackingConfigArn = trackingConfigArn;
    return this;
  }

  /**
   * Get trackingConfigArn
   * @return trackingConfigArn
   */
  @javax.annotation.Nullable
  public String getTrackingConfigArn() {
    return trackingConfigArn;
  }

  public void setTrackingConfigArn(String trackingConfigArn) {
    this.trackingConfigArn = trackingConfigArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMissionProfileResponse getMissionProfileResponse = (GetMissionProfileResponse) o;
    return Objects.equals(this.contactPostPassDurationSeconds, getMissionProfileResponse.contactPostPassDurationSeconds) &&
        Objects.equals(this.contactPrePassDurationSeconds, getMissionProfileResponse.contactPrePassDurationSeconds) &&
        Objects.equals(this.dataflowEdges, getMissionProfileResponse.dataflowEdges) &&
        Objects.equals(this.minimumViableContactDurationSeconds, getMissionProfileResponse.minimumViableContactDurationSeconds) &&
        Objects.equals(this.missionProfileArn, getMissionProfileResponse.missionProfileArn) &&
        Objects.equals(this.missionProfileId, getMissionProfileResponse.missionProfileId) &&
        Objects.equals(this.name, getMissionProfileResponse.name) &&
        Objects.equals(this.region, getMissionProfileResponse.region) &&
        Objects.equals(this.streamsKmsKey, getMissionProfileResponse.streamsKmsKey) &&
        Objects.equals(this.streamsKmsRole, getMissionProfileResponse.streamsKmsRole) &&
        Objects.equals(this.tags, getMissionProfileResponse.tags) &&
        Objects.equals(this.trackingConfigArn, getMissionProfileResponse.trackingConfigArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactPostPassDurationSeconds, contactPrePassDurationSeconds, dataflowEdges, minimumViableContactDurationSeconds, missionProfileArn, missionProfileId, name, region, streamsKmsKey, streamsKmsRole, tags, trackingConfigArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMissionProfileResponse {\n");
    sb.append("    contactPostPassDurationSeconds: ").append(toIndentedString(contactPostPassDurationSeconds)).append("\n");
    sb.append("    contactPrePassDurationSeconds: ").append(toIndentedString(contactPrePassDurationSeconds)).append("\n");
    sb.append("    dataflowEdges: ").append(toIndentedString(dataflowEdges)).append("\n");
    sb.append("    minimumViableContactDurationSeconds: ").append(toIndentedString(minimumViableContactDurationSeconds)).append("\n");
    sb.append("    missionProfileArn: ").append(toIndentedString(missionProfileArn)).append("\n");
    sb.append("    missionProfileId: ").append(toIndentedString(missionProfileId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    streamsKmsKey: ").append(toIndentedString(streamsKmsKey)).append("\n");
    sb.append("    streamsKmsRole: ").append(toIndentedString(streamsKmsRole)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    trackingConfigArn: ").append(toIndentedString(trackingConfigArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contactPostPassDurationSeconds");
    openapiFields.add("contactPrePassDurationSeconds");
    openapiFields.add("dataflowEdges");
    openapiFields.add("minimumViableContactDurationSeconds");
    openapiFields.add("missionProfileArn");
    openapiFields.add("missionProfileId");
    openapiFields.add("name");
    openapiFields.add("region");
    openapiFields.add("streamsKmsKey");
    openapiFields.add("streamsKmsRole");
    openapiFields.add("tags");
    openapiFields.add("trackingConfigArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMissionProfileResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMissionProfileResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMissionProfileResponse is not found in the empty JSON string", GetMissionProfileResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMissionProfileResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMissionProfileResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `contactPostPassDurationSeconds`
      if (jsonObj.get("contactPostPassDurationSeconds") != null && !jsonObj.get("contactPostPassDurationSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("contactPostPassDurationSeconds"));
      }
      // validate the optional field `contactPrePassDurationSeconds`
      if (jsonObj.get("contactPrePassDurationSeconds") != null && !jsonObj.get("contactPrePassDurationSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("contactPrePassDurationSeconds"));
      }
      // validate the optional field `dataflowEdges`
      if (jsonObj.get("dataflowEdges") != null && !jsonObj.get("dataflowEdges").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("dataflowEdges"));
      }
      // validate the optional field `minimumViableContactDurationSeconds`
      if (jsonObj.get("minimumViableContactDurationSeconds") != null && !jsonObj.get("minimumViableContactDurationSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("minimumViableContactDurationSeconds"));
      }
      // validate the optional field `missionProfileArn`
      if (jsonObj.get("missionProfileArn") != null && !jsonObj.get("missionProfileArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("missionProfileArn"));
      }
      // validate the optional field `missionProfileId`
      if (jsonObj.get("missionProfileId") != null && !jsonObj.get("missionProfileId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("missionProfileId"));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `region`
      if (jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("region"));
      }
      // validate the optional field `streamsKmsKey`
      if (jsonObj.get("streamsKmsKey") != null && !jsonObj.get("streamsKmsKey").isJsonNull()) {
        GetMissionProfileResponseStreamsKmsKey.validateJsonElement(jsonObj.get("streamsKmsKey"));
      }
      // validate the optional field `streamsKmsRole`
      if (jsonObj.get("streamsKmsRole") != null && !jsonObj.get("streamsKmsRole").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("streamsKmsRole"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `trackingConfigArn`
      if (jsonObj.get("trackingConfigArn") != null && !jsonObj.get("trackingConfigArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("trackingConfigArn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMissionProfileResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMissionProfileResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMissionProfileResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMissionProfileResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMissionProfileResponse>() {
           @Override
           public void write(JsonWriter out, GetMissionProfileResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMissionProfileResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMissionProfileResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMissionProfileResponse
   * @throws IOException if the JSON string is invalid with respect to GetMissionProfileResponse
   */
  public static GetMissionProfileResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMissionProfileResponse.class);
  }

  /**
   * Convert an instance of GetMissionProfileResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

