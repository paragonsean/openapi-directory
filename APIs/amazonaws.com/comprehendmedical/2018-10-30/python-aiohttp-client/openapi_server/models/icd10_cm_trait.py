# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.icd10_cm_trait_name import ICD10CMTraitName
from openapi_server import util


class ICD10CMTrait(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: ICD10CMTraitName=None, score: float=None):
        """ICD10CMTrait - a model defined in OpenAPI

        :param name: The name of this ICD10CMTrait.
        :param score: The score of this ICD10CMTrait.
        """
        self.openapi_types = {
            'name': ICD10CMTraitName,
            'score': float
        }

        self.attribute_map = {
            'name': 'Name',
            'score': 'Score'
        }

        self._name = name
        self._score = score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ICD10CMTrait':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ICD10CMTrait of this ICD10CMTrait.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ICD10CMTrait.


        :return: The name of this ICD10CMTrait.
        :rtype: ICD10CMTraitName
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ICD10CMTrait.


        :param name: The name of this ICD10CMTrait.
        :type name: ICD10CMTraitName
        """

        self._name = name

    @property
    def score(self):
        """Gets the score of this ICD10CMTrait.


        :return: The score of this ICD10CMTrait.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this ICD10CMTrait.


        :param score: The score of this ICD10CMTrait.
        :type score: float
        """

        self._score = score
