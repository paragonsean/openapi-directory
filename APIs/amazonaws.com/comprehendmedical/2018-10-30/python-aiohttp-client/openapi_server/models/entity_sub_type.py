# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EntitySubType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NAME = 'NAME'
    DX_NAME = 'DX_NAME'
    DOSAGE = 'DOSAGE'
    ROUTE_OR_MODE = 'ROUTE_OR_MODE'
    FORM = 'FORM'
    FREQUENCY = 'FREQUENCY'
    DURATION = 'DURATION'
    GENERIC_NAME = 'GENERIC_NAME'
    BRAND_NAME = 'BRAND_NAME'
    STRENGTH = 'STRENGTH'
    RATE = 'RATE'
    ACUITY = 'ACUITY'
    TEST_NAME = 'TEST_NAME'
    TEST_VALUE = 'TEST_VALUE'
    TEST_UNITS = 'TEST_UNITS'
    TEST_UNIT = 'TEST_UNIT'
    PROCEDURE_NAME = 'PROCEDURE_NAME'
    TREATMENT_NAME = 'TREATMENT_NAME'
    DATE = 'DATE'
    AGE = 'AGE'
    CONTACT_POINT = 'CONTACT_POINT'
    PHONE_OR_FAX = 'PHONE_OR_FAX'
    EMAIL = 'EMAIL'
    IDENTIFIER = 'IDENTIFIER'
    ID = 'ID'
    URL = 'URL'
    ADDRESS = 'ADDRESS'
    PROFESSION = 'PROFESSION'
    SYSTEM_ORGAN_SITE = 'SYSTEM_ORGAN_SITE'
    DIRECTION = 'DIRECTION'
    QUALITY = 'QUALITY'
    QUANTITY = 'QUANTITY'
    TIME_EXPRESSION = 'TIME_EXPRESSION'
    TIME_TO_MEDICATION_NAME = 'TIME_TO_MEDICATION_NAME'
    TIME_TO_DX_NAME = 'TIME_TO_DX_NAME'
    TIME_TO_TEST_NAME = 'TIME_TO_TEST_NAME'
    TIME_TO_PROCEDURE_NAME = 'TIME_TO_PROCEDURE_NAME'
    TIME_TO_TREATMENT_NAME = 'TIME_TO_TREATMENT_NAME'
    AMOUNT = 'AMOUNT'
    GENDER = 'GENDER'
    RACE_ETHNICITY = 'RACE_ETHNICITY'
    ALLERGIES = 'ALLERGIES'
    TOBACCO_USE = 'TOBACCO_USE'
    ALCOHOL_CONSUMPTION = 'ALCOHOL_CONSUMPTION'
    REC_DRUG_USE = 'REC_DRUG_USE'

    def __init__(self):
        """EntitySubType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntitySubType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntitySubType of this EntitySubType.
        """
        return util.deserialize_model(dikt, cls)
