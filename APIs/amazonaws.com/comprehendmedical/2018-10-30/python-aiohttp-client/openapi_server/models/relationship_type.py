# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RelationshipType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    EVERY = 'EVERY'
    WITH_DOSAGE = 'WITH_DOSAGE'
    ADMINISTERED_VIA = 'ADMINISTERED_VIA'
    FOR = 'FOR'
    NEGATIVE = 'NEGATIVE'
    OVERLAP = 'OVERLAP'
    DOSAGE = 'DOSAGE'
    ROUTE_OR_MODE = 'ROUTE_OR_MODE'
    FORM = 'FORM'
    FREQUENCY = 'FREQUENCY'
    DURATION = 'DURATION'
    STRENGTH = 'STRENGTH'
    RATE = 'RATE'
    ACUITY = 'ACUITY'
    TEST_VALUE = 'TEST_VALUE'
    TEST_UNITS = 'TEST_UNITS'
    TEST_UNIT = 'TEST_UNIT'
    DIRECTION = 'DIRECTION'
    SYSTEM_ORGAN_SITE = 'SYSTEM_ORGAN_SITE'
    AMOUNT = 'AMOUNT'
    USAGE = 'USAGE'
    QUALITY = 'QUALITY'

    def __init__(self):
        """RelationshipType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RelationshipType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RelationshipType of this RelationshipType.
        """
        return util.deserialize_model(dikt, cls)
