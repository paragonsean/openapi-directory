# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.language_code import LanguageCode
from openapi_server.models.start_entities_detection_v2_job_request_input_data_config import StartEntitiesDetectionV2JobRequestInputDataConfig
from openapi_server.models.start_entities_detection_v2_job_request_output_data_config import StartEntitiesDetectionV2JobRequestOutputDataConfig
from openapi_server import util


class StartEntitiesDetectionV2JobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_data_config: StartEntitiesDetectionV2JobRequestInputDataConfig=None, output_data_config: StartEntitiesDetectionV2JobRequestOutputDataConfig=None, data_access_role_arn: str=None, job_name: str=None, client_request_token: str=None, kms_key: str=None, language_code: LanguageCode=None):
        """StartEntitiesDetectionV2JobRequest - a model defined in OpenAPI

        :param input_data_config: The input_data_config of this StartEntitiesDetectionV2JobRequest.
        :param output_data_config: The output_data_config of this StartEntitiesDetectionV2JobRequest.
        :param data_access_role_arn: The data_access_role_arn of this StartEntitiesDetectionV2JobRequest.
        :param job_name: The job_name of this StartEntitiesDetectionV2JobRequest.
        :param client_request_token: The client_request_token of this StartEntitiesDetectionV2JobRequest.
        :param kms_key: The kms_key of this StartEntitiesDetectionV2JobRequest.
        :param language_code: The language_code of this StartEntitiesDetectionV2JobRequest.
        """
        self.openapi_types = {
            'input_data_config': StartEntitiesDetectionV2JobRequestInputDataConfig,
            'output_data_config': StartEntitiesDetectionV2JobRequestOutputDataConfig,
            'data_access_role_arn': str,
            'job_name': str,
            'client_request_token': str,
            'kms_key': str,
            'language_code': LanguageCode
        }

        self.attribute_map = {
            'input_data_config': 'InputDataConfig',
            'output_data_config': 'OutputDataConfig',
            'data_access_role_arn': 'DataAccessRoleArn',
            'job_name': 'JobName',
            'client_request_token': 'ClientRequestToken',
            'kms_key': 'KMSKey',
            'language_code': 'LanguageCode'
        }

        self._input_data_config = input_data_config
        self._output_data_config = output_data_config
        self._data_access_role_arn = data_access_role_arn
        self._job_name = job_name
        self._client_request_token = client_request_token
        self._kms_key = kms_key
        self._language_code = language_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartEntitiesDetectionV2JobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartEntitiesDetectionV2JobRequest of this StartEntitiesDetectionV2JobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_data_config(self):
        """Gets the input_data_config of this StartEntitiesDetectionV2JobRequest.


        :return: The input_data_config of this StartEntitiesDetectionV2JobRequest.
        :rtype: StartEntitiesDetectionV2JobRequestInputDataConfig
        """
        return self._input_data_config

    @input_data_config.setter
    def input_data_config(self, input_data_config):
        """Sets the input_data_config of this StartEntitiesDetectionV2JobRequest.


        :param input_data_config: The input_data_config of this StartEntitiesDetectionV2JobRequest.
        :type input_data_config: StartEntitiesDetectionV2JobRequestInputDataConfig
        """
        if input_data_config is None:
            raise ValueError("Invalid value for `input_data_config`, must not be `None`")

        self._input_data_config = input_data_config

    @property
    def output_data_config(self):
        """Gets the output_data_config of this StartEntitiesDetectionV2JobRequest.


        :return: The output_data_config of this StartEntitiesDetectionV2JobRequest.
        :rtype: StartEntitiesDetectionV2JobRequestOutputDataConfig
        """
        return self._output_data_config

    @output_data_config.setter
    def output_data_config(self, output_data_config):
        """Sets the output_data_config of this StartEntitiesDetectionV2JobRequest.


        :param output_data_config: The output_data_config of this StartEntitiesDetectionV2JobRequest.
        :type output_data_config: StartEntitiesDetectionV2JobRequestOutputDataConfig
        """
        if output_data_config is None:
            raise ValueError("Invalid value for `output_data_config`, must not be `None`")

        self._output_data_config = output_data_config

    @property
    def data_access_role_arn(self):
        """Gets the data_access_role_arn of this StartEntitiesDetectionV2JobRequest.


        :return: The data_access_role_arn of this StartEntitiesDetectionV2JobRequest.
        :rtype: str
        """
        return self._data_access_role_arn

    @data_access_role_arn.setter
    def data_access_role_arn(self, data_access_role_arn):
        """Sets the data_access_role_arn of this StartEntitiesDetectionV2JobRequest.


        :param data_access_role_arn: The data_access_role_arn of this StartEntitiesDetectionV2JobRequest.
        :type data_access_role_arn: str
        """
        if data_access_role_arn is None:
            raise ValueError("Invalid value for `data_access_role_arn`, must not be `None`")

        self._data_access_role_arn = data_access_role_arn

    @property
    def job_name(self):
        """Gets the job_name of this StartEntitiesDetectionV2JobRequest.


        :return: The job_name of this StartEntitiesDetectionV2JobRequest.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this StartEntitiesDetectionV2JobRequest.


        :param job_name: The job_name of this StartEntitiesDetectionV2JobRequest.
        :type job_name: str
        """

        self._job_name = job_name

    @property
    def client_request_token(self):
        """Gets the client_request_token of this StartEntitiesDetectionV2JobRequest.


        :return: The client_request_token of this StartEntitiesDetectionV2JobRequest.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this StartEntitiesDetectionV2JobRequest.


        :param client_request_token: The client_request_token of this StartEntitiesDetectionV2JobRequest.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token

    @property
    def kms_key(self):
        """Gets the kms_key of this StartEntitiesDetectionV2JobRequest.


        :return: The kms_key of this StartEntitiesDetectionV2JobRequest.
        :rtype: str
        """
        return self._kms_key

    @kms_key.setter
    def kms_key(self, kms_key):
        """Sets the kms_key of this StartEntitiesDetectionV2JobRequest.


        :param kms_key: The kms_key of this StartEntitiesDetectionV2JobRequest.
        :type kms_key: str
        """

        self._kms_key = kms_key

    @property
    def language_code(self):
        """Gets the language_code of this StartEntitiesDetectionV2JobRequest.


        :return: The language_code of this StartEntitiesDetectionV2JobRequest.
        :rtype: LanguageCode
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this StartEntitiesDetectionV2JobRequest.


        :param language_code: The language_code of this StartEntitiesDetectionV2JobRequest.
        :type language_code: LanguageCode
        """
        if language_code is None:
            raise ValueError("Invalid value for `language_code`, must not be `None`")

        self._language_code = language_code
