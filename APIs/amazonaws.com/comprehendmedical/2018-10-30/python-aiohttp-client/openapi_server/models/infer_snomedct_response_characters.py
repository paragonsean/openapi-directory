# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InferSNOMEDCTResponseCharacters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, original_text_characters: int=None):
        """InferSNOMEDCTResponseCharacters - a model defined in OpenAPI

        :param original_text_characters: The original_text_characters of this InferSNOMEDCTResponseCharacters.
        """
        self.openapi_types = {
            'original_text_characters': int
        }

        self.attribute_map = {
            'original_text_characters': 'OriginalTextCharacters'
        }

        self._original_text_characters = original_text_characters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InferSNOMEDCTResponseCharacters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InferSNOMEDCTResponse_Characters of this InferSNOMEDCTResponseCharacters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def original_text_characters(self):
        """Gets the original_text_characters of this InferSNOMEDCTResponseCharacters.


        :return: The original_text_characters of this InferSNOMEDCTResponseCharacters.
        :rtype: int
        """
        return self._original_text_characters

    @original_text_characters.setter
    def original_text_characters(self, original_text_characters):
        """Sets the original_text_characters of this InferSNOMEDCTResponseCharacters.


        :param original_text_characters: The original_text_characters of this InferSNOMEDCTResponseCharacters.
        :type original_text_characters: int
        """

        self._original_text_characters = original_text_characters
