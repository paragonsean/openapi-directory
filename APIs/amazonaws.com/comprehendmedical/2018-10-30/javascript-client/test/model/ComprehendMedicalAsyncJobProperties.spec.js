/**
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsComprehendMedical);
  }
}(this, function(expect, AwsComprehendMedical) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ComprehendMedicalAsyncJobProperties', function() {
    it('should create an instance of ComprehendMedicalAsyncJobProperties', function() {
      // uncomment below and update the code to test ComprehendMedicalAsyncJobProperties
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be.a(AwsComprehendMedical.ComprehendMedicalAsyncJobProperties);
    });

    it('should have the property jobId (base name: "JobId")', function() {
      // uncomment below and update the code to test the property jobId
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property jobName (base name: "JobName")', function() {
      // uncomment below and update the code to test the property jobName
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property jobStatus (base name: "JobStatus")', function() {
      // uncomment below and update the code to test the property jobStatus
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "Message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property submitTime (base name: "SubmitTime")', function() {
      // uncomment below and update the code to test the property submitTime
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "EndTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property expirationTime (base name: "ExpirationTime")', function() {
      // uncomment below and update the code to test the property expirationTime
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property inputDataConfig (base name: "InputDataConfig")', function() {
      // uncomment below and update the code to test the property inputDataConfig
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property outputDataConfig (base name: "OutputDataConfig")', function() {
      // uncomment below and update the code to test the property outputDataConfig
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property languageCode (base name: "LanguageCode")', function() {
      // uncomment below and update the code to test the property languageCode
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property dataAccessRoleArn (base name: "DataAccessRoleArn")', function() {
      // uncomment below and update the code to test the property dataAccessRoleArn
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property manifestFilePath (base name: "ManifestFilePath")', function() {
      // uncomment below and update the code to test the property manifestFilePath
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property kMSKey (base name: "KMSKey")', function() {
      // uncomment below and update the code to test the property kMSKey
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

    it('should have the property modelVersion (base name: "ModelVersion")', function() {
      // uncomment below and update the code to test the property modelVersion
      //var instance = new AwsComprehendMedical.ComprehendMedicalAsyncJobProperties();
      //expect(instance).to.be();
    });

  });

}));
