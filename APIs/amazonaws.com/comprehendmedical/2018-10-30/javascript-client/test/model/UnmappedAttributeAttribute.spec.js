/**
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsComprehendMedical);
  }
}(this, function(expect, AwsComprehendMedical) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UnmappedAttributeAttribute', function() {
    it('should create an instance of UnmappedAttributeAttribute', function() {
      // uncomment below and update the code to test UnmappedAttributeAttribute
      //var instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
      //expect(instance).to.be.a(AwsComprehendMedical.UnmappedAttributeAttribute);
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
      //expect(instance).to.be();
    });

    it('should have the property score (base name: "Score")', function() {
      // uncomment below and update the code to test the property score
      //var instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
      //expect(instance).to.be();
    });

    it('should have the property relationshipScore (base name: "RelationshipScore")', function() {
      // uncomment below and update the code to test the property relationshipScore
      //var instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
      //expect(instance).to.be();
    });

    it('should have the property relationshipType (base name: "RelationshipType")', function() {
      // uncomment below and update the code to test the property relationshipType
      //var instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
      //expect(instance).to.be();
    });

    it('should have the property beginOffset (base name: "BeginOffset")', function() {
      // uncomment below and update the code to test the property beginOffset
      //var instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
      //expect(instance).to.be();
    });

    it('should have the property endOffset (base name: "EndOffset")', function() {
      // uncomment below and update the code to test the property endOffset
      //var instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
      //expect(instance).to.be();
    });

    it('should have the property text (base name: "Text")', function() {
      // uncomment below and update the code to test the property text
      //var instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "Category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
      //expect(instance).to.be();
    });

    it('should have the property traits (base name: "Traits")', function() {
      // uncomment below and update the code to test the property traits
      //var instance = new AwsComprehendMedical.UnmappedAttributeAttribute();
      //expect(instance).to.be();
    });

  });

}));
