/*
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ComprehendMedicalAsyncJobPropertiesInputDataConfig;
import org.openapitools.client.model.ComprehendMedicalAsyncJobPropertiesOutputDataConfig;
import org.openapitools.client.model.JobStatus;
import org.openapitools.client.model.LanguageCode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ComprehendMedicalAsyncJobProperties
 */
public class ComprehendMedicalAsyncJobPropertiesTest {
    private final ComprehendMedicalAsyncJobProperties model = new ComprehendMedicalAsyncJobProperties();

    /**
     * Model tests for ComprehendMedicalAsyncJobProperties
     */
    @Test
    public void testComprehendMedicalAsyncJobProperties() {
        // TODO: test ComprehendMedicalAsyncJobProperties
    }

    /**
     * Test the property 'jobId'
     */
    @Test
    public void jobIdTest() {
        // TODO: test jobId
    }

    /**
     * Test the property 'jobName'
     */
    @Test
    public void jobNameTest() {
        // TODO: test jobName
    }

    /**
     * Test the property 'jobStatus'
     */
    @Test
    public void jobStatusTest() {
        // TODO: test jobStatus
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'submitTime'
     */
    @Test
    public void submitTimeTest() {
        // TODO: test submitTime
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'expirationTime'
     */
    @Test
    public void expirationTimeTest() {
        // TODO: test expirationTime
    }

    /**
     * Test the property 'inputDataConfig'
     */
    @Test
    public void inputDataConfigTest() {
        // TODO: test inputDataConfig
    }

    /**
     * Test the property 'outputDataConfig'
     */
    @Test
    public void outputDataConfigTest() {
        // TODO: test outputDataConfig
    }

    /**
     * Test the property 'languageCode'
     */
    @Test
    public void languageCodeTest() {
        // TODO: test languageCode
    }

    /**
     * Test the property 'dataAccessRoleArn'
     */
    @Test
    public void dataAccessRoleArnTest() {
        // TODO: test dataAccessRoleArn
    }

    /**
     * Test the property 'manifestFilePath'
     */
    @Test
    public void manifestFilePathTest() {
        // TODO: test manifestFilePath
    }

    /**
     * Test the property 'kmSKey'
     */
    @Test
    public void kmSKeyTest() {
        // TODO: test kmSKey
    }

    /**
     * Test the property 'modelVersion'
     */
    @Test
    public void modelVersionTest() {
        // TODO: test modelVersion
    }

}
