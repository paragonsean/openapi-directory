/*
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets AttributeName
 */
@JsonAdapter(AttributeName.Adapter.class)
public enum AttributeName {
  
  SIGN("SIGN"),
  
  SYMPTOM("SYMPTOM"),
  
  DIAGNOSIS("DIAGNOSIS"),
  
  NEGATION("NEGATION"),
  
  PERTAINS_TO_FAMILY("PERTAINS_TO_FAMILY"),
  
  HYPOTHETICAL("HYPOTHETICAL"),
  
  LOW_CONFIDENCE("LOW_CONFIDENCE"),
  
  PAST_HISTORY("PAST_HISTORY"),
  
  FUTURE("FUTURE");

  private String value;

  AttributeName(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AttributeName fromValue(String value) {
    for (AttributeName b : AttributeName.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AttributeName> {
    @Override
    public void write(final JsonWriter jsonWriter, final AttributeName enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AttributeName read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AttributeName.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AttributeName.fromValue(value);
  }
}

