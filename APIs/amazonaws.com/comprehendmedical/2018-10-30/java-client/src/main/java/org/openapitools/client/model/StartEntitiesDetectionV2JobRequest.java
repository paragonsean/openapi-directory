/*
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.LanguageCode;
import org.openapitools.client.model.StartEntitiesDetectionV2JobRequestInputDataConfig;
import org.openapitools.client.model.StartEntitiesDetectionV2JobRequestOutputDataConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartEntitiesDetectionV2JobRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:31.822751-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartEntitiesDetectionV2JobRequest {
  public static final String SERIALIZED_NAME_INPUT_DATA_CONFIG = "InputDataConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_DATA_CONFIG)
  private StartEntitiesDetectionV2JobRequestInputDataConfig inputDataConfig;

  public static final String SERIALIZED_NAME_OUTPUT_DATA_CONFIG = "OutputDataConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_DATA_CONFIG)
  private StartEntitiesDetectionV2JobRequestOutputDataConfig outputDataConfig;

  public static final String SERIALIZED_NAME_DATA_ACCESS_ROLE_ARN = "DataAccessRoleArn";
  @SerializedName(SERIALIZED_NAME_DATA_ACCESS_ROLE_ARN)
  private String dataAccessRoleArn;

  public static final String SERIALIZED_NAME_JOB_NAME = "JobName";
  @SerializedName(SERIALIZED_NAME_JOB_NAME)
  private String jobName;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "ClientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_KM_S_KEY = "KMSKey";
  @SerializedName(SERIALIZED_NAME_KM_S_KEY)
  private String kmSKey;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "LanguageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private LanguageCode languageCode;

  public StartEntitiesDetectionV2JobRequest() {
  }

  public StartEntitiesDetectionV2JobRequest inputDataConfig(StartEntitiesDetectionV2JobRequestInputDataConfig inputDataConfig) {
    this.inputDataConfig = inputDataConfig;
    return this;
  }

  /**
   * Get inputDataConfig
   * @return inputDataConfig
   */
  @javax.annotation.Nonnull
  public StartEntitiesDetectionV2JobRequestInputDataConfig getInputDataConfig() {
    return inputDataConfig;
  }

  public void setInputDataConfig(StartEntitiesDetectionV2JobRequestInputDataConfig inputDataConfig) {
    this.inputDataConfig = inputDataConfig;
  }


  public StartEntitiesDetectionV2JobRequest outputDataConfig(StartEntitiesDetectionV2JobRequestOutputDataConfig outputDataConfig) {
    this.outputDataConfig = outputDataConfig;
    return this;
  }

  /**
   * Get outputDataConfig
   * @return outputDataConfig
   */
  @javax.annotation.Nonnull
  public StartEntitiesDetectionV2JobRequestOutputDataConfig getOutputDataConfig() {
    return outputDataConfig;
  }

  public void setOutputDataConfig(StartEntitiesDetectionV2JobRequestOutputDataConfig outputDataConfig) {
    this.outputDataConfig = outputDataConfig;
  }


  public StartEntitiesDetectionV2JobRequest dataAccessRoleArn(String dataAccessRoleArn) {
    this.dataAccessRoleArn = dataAccessRoleArn;
    return this;
  }

  /**
   * Get dataAccessRoleArn
   * @return dataAccessRoleArn
   */
  @javax.annotation.Nonnull
  public String getDataAccessRoleArn() {
    return dataAccessRoleArn;
  }

  public void setDataAccessRoleArn(String dataAccessRoleArn) {
    this.dataAccessRoleArn = dataAccessRoleArn;
  }


  public StartEntitiesDetectionV2JobRequest jobName(String jobName) {
    this.jobName = jobName;
    return this;
  }

  /**
   * Get jobName
   * @return jobName
   */
  @javax.annotation.Nullable
  public String getJobName() {
    return jobName;
  }

  public void setJobName(String jobName) {
    this.jobName = jobName;
  }


  public StartEntitiesDetectionV2JobRequest clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * Get clientRequestToken
   * @return clientRequestToken
   */
  @javax.annotation.Nullable
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public StartEntitiesDetectionV2JobRequest kmSKey(String kmSKey) {
    this.kmSKey = kmSKey;
    return this;
  }

  /**
   * Get kmSKey
   * @return kmSKey
   */
  @javax.annotation.Nullable
  public String getKmSKey() {
    return kmSKey;
  }

  public void setKmSKey(String kmSKey) {
    this.kmSKey = kmSKey;
  }


  public StartEntitiesDetectionV2JobRequest languageCode(LanguageCode languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Get languageCode
   * @return languageCode
   */
  @javax.annotation.Nonnull
  public LanguageCode getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(LanguageCode languageCode) {
    this.languageCode = languageCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartEntitiesDetectionV2JobRequest startEntitiesDetectionV2JobRequest = (StartEntitiesDetectionV2JobRequest) o;
    return Objects.equals(this.inputDataConfig, startEntitiesDetectionV2JobRequest.inputDataConfig) &&
        Objects.equals(this.outputDataConfig, startEntitiesDetectionV2JobRequest.outputDataConfig) &&
        Objects.equals(this.dataAccessRoleArn, startEntitiesDetectionV2JobRequest.dataAccessRoleArn) &&
        Objects.equals(this.jobName, startEntitiesDetectionV2JobRequest.jobName) &&
        Objects.equals(this.clientRequestToken, startEntitiesDetectionV2JobRequest.clientRequestToken) &&
        Objects.equals(this.kmSKey, startEntitiesDetectionV2JobRequest.kmSKey) &&
        Objects.equals(this.languageCode, startEntitiesDetectionV2JobRequest.languageCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputDataConfig, outputDataConfig, dataAccessRoleArn, jobName, clientRequestToken, kmSKey, languageCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartEntitiesDetectionV2JobRequest {\n");
    sb.append("    inputDataConfig: ").append(toIndentedString(inputDataConfig)).append("\n");
    sb.append("    outputDataConfig: ").append(toIndentedString(outputDataConfig)).append("\n");
    sb.append("    dataAccessRoleArn: ").append(toIndentedString(dataAccessRoleArn)).append("\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    kmSKey: ").append(toIndentedString(kmSKey)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("InputDataConfig");
    openapiFields.add("OutputDataConfig");
    openapiFields.add("DataAccessRoleArn");
    openapiFields.add("JobName");
    openapiFields.add("ClientRequestToken");
    openapiFields.add("KMSKey");
    openapiFields.add("LanguageCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("InputDataConfig");
    openapiRequiredFields.add("OutputDataConfig");
    openapiRequiredFields.add("DataAccessRoleArn");
    openapiRequiredFields.add("LanguageCode");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartEntitiesDetectionV2JobRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartEntitiesDetectionV2JobRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartEntitiesDetectionV2JobRequest is not found in the empty JSON string", StartEntitiesDetectionV2JobRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartEntitiesDetectionV2JobRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartEntitiesDetectionV2JobRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartEntitiesDetectionV2JobRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `InputDataConfig`
      StartEntitiesDetectionV2JobRequestInputDataConfig.validateJsonElement(jsonObj.get("InputDataConfig"));
      // validate the required field `OutputDataConfig`
      StartEntitiesDetectionV2JobRequestOutputDataConfig.validateJsonElement(jsonObj.get("OutputDataConfig"));
      // validate the required field `DataAccessRoleArn`
      String.validateJsonElement(jsonObj.get("DataAccessRoleArn"));
      // validate the optional field `JobName`
      if (jsonObj.get("JobName") != null && !jsonObj.get("JobName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("JobName"));
      }
      // validate the optional field `ClientRequestToken`
      if (jsonObj.get("ClientRequestToken") != null && !jsonObj.get("ClientRequestToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClientRequestToken"));
      }
      // validate the optional field `KMSKey`
      if (jsonObj.get("KMSKey") != null && !jsonObj.get("KMSKey").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KMSKey"));
      }
      // validate the required field `LanguageCode`
      LanguageCode.validateJsonElement(jsonObj.get("LanguageCode"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartEntitiesDetectionV2JobRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartEntitiesDetectionV2JobRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartEntitiesDetectionV2JobRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartEntitiesDetectionV2JobRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<StartEntitiesDetectionV2JobRequest>() {
           @Override
           public void write(JsonWriter out, StartEntitiesDetectionV2JobRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartEntitiesDetectionV2JobRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartEntitiesDetectionV2JobRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartEntitiesDetectionV2JobRequest
   * @throws IOException if the JSON string is invalid with respect to StartEntitiesDetectionV2JobRequest
   */
  public static StartEntitiesDetectionV2JobRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartEntitiesDetectionV2JobRequest.class);
  }

  /**
   * Convert an instance of StartEntitiesDetectionV2JobRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

