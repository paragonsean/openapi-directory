/**
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListEntitiesDetectionV2JobsRequest.h
 *
 * 
 */

#ifndef OAIListEntitiesDetectionV2JobsRequest_H
#define OAIListEntitiesDetectionV2JobsRequest_H

#include <QJsonObject>

#include "OAIListEntitiesDetectionV2JobsRequest_Filter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListEntitiesDetectionV2JobsRequest_Filter;

class OAIListEntitiesDetectionV2JobsRequest : public OAIObject {
public:
    OAIListEntitiesDetectionV2JobsRequest();
    OAIListEntitiesDetectionV2JobsRequest(QString json);
    ~OAIListEntitiesDetectionV2JobsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIListEntitiesDetectionV2JobsRequest_Filter getFilter() const;
    void setFilter(const OAIListEntitiesDetectionV2JobsRequest_Filter &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIListEntitiesDetectionV2JobsRequest_Filter m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListEntitiesDetectionV2JobsRequest)

#endif // OAIListEntitiesDetectionV2JobsRequest_H
