/**
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRxNormConcept.h
 *
 * The RxNorm concept that the entity could refer to, along with a score indicating the likelihood of the match.
 */

#ifndef OAIRxNormConcept_H
#define OAIRxNormConcept_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRxNormConcept : public OAIObject {
public:
    OAIRxNormConcept();
    OAIRxNormConcept(QString json);
    ~OAIRxNormConcept() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    float getScore() const;
    void setScore(const float &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    float m_score;
    bool m_score_isSet;
    bool m_score_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRxNormConcept)

#endif // OAIRxNormConcept_H
