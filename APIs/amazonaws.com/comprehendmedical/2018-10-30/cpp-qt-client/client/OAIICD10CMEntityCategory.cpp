/**
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIICD10CMEntityCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIICD10CMEntityCategory::OAIICD10CMEntityCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIICD10CMEntityCategory::OAIICD10CMEntityCategory() {
    this->initializeModel();
}

OAIICD10CMEntityCategory::~OAIICD10CMEntityCategory() {}

void OAIICD10CMEntityCategory::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIICD10CMEntityCategory::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIICD10CMEntityCategory::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MEDICAL_CONDITION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIICD10CMEntityCategory::MEDICAL_CONDITION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIICD10CMEntityCategory::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIICD10CMEntityCategory::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIICD10CMEntityCategory::MEDICAL_CONDITION:
            val = "MEDICAL_CONDITION";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIICD10CMEntityCategory::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIICD10CMEntityCategory::eOAIICD10CMEntityCategory OAIICD10CMEntityCategory::getValue() const {
    return m_value;
}

void OAIICD10CMEntityCategory::setValue(const OAIICD10CMEntityCategory::eOAIICD10CMEntityCategory& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIICD10CMEntityCategory::isSet() const {
    
    return m_value_isSet;
}

bool OAIICD10CMEntityCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
