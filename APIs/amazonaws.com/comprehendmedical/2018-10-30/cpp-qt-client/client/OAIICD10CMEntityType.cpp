/**
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIICD10CMEntityType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIICD10CMEntityType::OAIICD10CMEntityType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIICD10CMEntityType::OAIICD10CMEntityType() {
    this->initializeModel();
}

OAIICD10CMEntityType::~OAIICD10CMEntityType() {}

void OAIICD10CMEntityType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIICD10CMEntityType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIICD10CMEntityType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DX_NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIICD10CMEntityType::DX_NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TIME_EXPRESSION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIICD10CMEntityType::TIME_EXPRESSION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIICD10CMEntityType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIICD10CMEntityType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIICD10CMEntityType::DX_NAME:
            val = "DX_NAME";
            break;
        case eOAIICD10CMEntityType::TIME_EXPRESSION:
            val = "TIME_EXPRESSION";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIICD10CMEntityType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIICD10CMEntityType::eOAIICD10CMEntityType OAIICD10CMEntityType::getValue() const {
    return m_value;
}

void OAIICD10CMEntityType::setValue(const OAIICD10CMEntityType::eOAIICD10CMEntityType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIICD10CMEntityType::isSet() const {
    
    return m_value_isSet;
}

bool OAIICD10CMEntityType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
