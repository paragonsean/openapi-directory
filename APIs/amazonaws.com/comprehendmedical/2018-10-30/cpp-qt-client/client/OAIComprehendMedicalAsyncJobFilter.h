/**
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComprehendMedicalAsyncJobFilter.h
 *
 * Provides information for filtering a list of detection jobs.
 */

#ifndef OAIComprehendMedicalAsyncJobFilter_H
#define OAIComprehendMedicalAsyncJobFilter_H

#include <QJsonObject>

#include "OAIJobStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIComprehendMedicalAsyncJobFilter : public OAIObject {
public:
    OAIComprehendMedicalAsyncJobFilter();
    OAIComprehendMedicalAsyncJobFilter(QString json);
    ~OAIComprehendMedicalAsyncJobFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getJobName() const;
    void setJobName(const QString &job_name);
    bool is_job_name_Set() const;
    bool is_job_name_Valid() const;

    OAIJobStatus getJobStatus() const;
    void setJobStatus(const OAIJobStatus &job_status);
    bool is_job_status_Set() const;
    bool is_job_status_Valid() const;

    QDateTime getSubmitTimeBefore() const;
    void setSubmitTimeBefore(const QDateTime &submit_time_before);
    bool is_submit_time_before_Set() const;
    bool is_submit_time_before_Valid() const;

    QDateTime getSubmitTimeAfter() const;
    void setSubmitTimeAfter(const QDateTime &submit_time_after);
    bool is_submit_time_after_Set() const;
    bool is_submit_time_after_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_job_name;
    bool m_job_name_isSet;
    bool m_job_name_isValid;

    OAIJobStatus m_job_status;
    bool m_job_status_isSet;
    bool m_job_status_isValid;

    QDateTime m_submit_time_before;
    bool m_submit_time_before_isSet;
    bool m_submit_time_before_isValid;

    QDateTime m_submit_time_after;
    bool m_submit_time_after_isSet;
    bool m_submit_time_after_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComprehendMedicalAsyncJobFilter)

#endif // OAIComprehendMedicalAsyncJobFilter_H
