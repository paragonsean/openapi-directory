/**
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeICD10CMInferenceJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeICD10CMInferenceJobResponse::OAIDescribeICD10CMInferenceJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeICD10CMInferenceJobResponse::OAIDescribeICD10CMInferenceJobResponse() {
    this->initializeModel();
}

OAIDescribeICD10CMInferenceJobResponse::~OAIDescribeICD10CMInferenceJobResponse() {}

void OAIDescribeICD10CMInferenceJobResponse::initializeModel() {

    m_comprehend_medical_async_job_properties_isSet = false;
    m_comprehend_medical_async_job_properties_isValid = false;
}

void OAIDescribeICD10CMInferenceJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeICD10CMInferenceJobResponse::fromJsonObject(QJsonObject json) {

    m_comprehend_medical_async_job_properties_isValid = ::OpenAPI::fromJsonValue(m_comprehend_medical_async_job_properties, json[QString("ComprehendMedicalAsyncJobProperties")]);
    m_comprehend_medical_async_job_properties_isSet = !json[QString("ComprehendMedicalAsyncJobProperties")].isNull() && m_comprehend_medical_async_job_properties_isValid;
}

QString OAIDescribeICD10CMInferenceJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeICD10CMInferenceJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_comprehend_medical_async_job_properties.isSet()) {
        obj.insert(QString("ComprehendMedicalAsyncJobProperties"), ::OpenAPI::toJsonValue(m_comprehend_medical_async_job_properties));
    }
    return obj;
}

OAIDescribeEntitiesDetectionV2JobResponse_ComprehendMedicalAsyncJobProperties OAIDescribeICD10CMInferenceJobResponse::getComprehendMedicalAsyncJobProperties() const {
    return m_comprehend_medical_async_job_properties;
}
void OAIDescribeICD10CMInferenceJobResponse::setComprehendMedicalAsyncJobProperties(const OAIDescribeEntitiesDetectionV2JobResponse_ComprehendMedicalAsyncJobProperties &comprehend_medical_async_job_properties) {
    m_comprehend_medical_async_job_properties = comprehend_medical_async_job_properties;
    m_comprehend_medical_async_job_properties_isSet = true;
}

bool OAIDescribeICD10CMInferenceJobResponse::is_comprehend_medical_async_job_properties_Set() const{
    return m_comprehend_medical_async_job_properties_isSet;
}

bool OAIDescribeICD10CMInferenceJobResponse::is_comprehend_medical_async_job_properties_Valid() const{
    return m_comprehend_medical_async_job_properties_isValid;
}

bool OAIDescribeICD10CMInferenceJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comprehend_medical_async_job_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeICD10CMInferenceJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
