/**
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRxNormEntityCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRxNormEntityCategory::OAIRxNormEntityCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRxNormEntityCategory::OAIRxNormEntityCategory() {
    this->initializeModel();
}

OAIRxNormEntityCategory::~OAIRxNormEntityCategory() {}

void OAIRxNormEntityCategory::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRxNormEntityCategory::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRxNormEntityCategory::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MEDICATION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRxNormEntityCategory::MEDICATION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRxNormEntityCategory::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRxNormEntityCategory::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRxNormEntityCategory::MEDICATION:
            val = "MEDICATION";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRxNormEntityCategory::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRxNormEntityCategory::eOAIRxNormEntityCategory OAIRxNormEntityCategory::getValue() const {
    return m_value;
}

void OAIRxNormEntityCategory::setValue(const OAIRxNormEntityCategory::eOAIRxNormEntityCategory& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRxNormEntityCategory::isSet() const {
    
    return m_value_isSet;
}

bool OAIRxNormEntityCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
