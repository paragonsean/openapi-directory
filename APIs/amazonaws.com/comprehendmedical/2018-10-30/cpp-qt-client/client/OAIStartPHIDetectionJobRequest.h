/**
 * AWS Comprehend Medical
 * Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. Amazon Comprehend Medical only detects entities in English language texts. Amazon Comprehend Medical places limits on the sizes of files allowed for different API operations. To learn more, see <a href=\"https://docs.aws.amazon.com/comprehend-medical/latest/dev/comprehendmedical-quotas.html\">Guidelines and quotas</a> in the <i>Amazon Comprehend Medical Developer Guide</i>.
 *
 * The version of the OpenAPI document: 2018-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartPHIDetectionJobRequest.h
 *
 * 
 */

#ifndef OAIStartPHIDetectionJobRequest_H
#define OAIStartPHIDetectionJobRequest_H

#include <QJsonObject>

#include "OAILanguageCode.h"
#include "OAIStartICD10CMInferenceJobRequest_InputDataConfig.h"
#include "OAIStartICD10CMInferenceJobRequest_OutputDataConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStartICD10CMInferenceJobRequest_InputDataConfig;
class OAIStartICD10CMInferenceJobRequest_OutputDataConfig;

class OAIStartPHIDetectionJobRequest : public OAIObject {
public:
    OAIStartPHIDetectionJobRequest();
    OAIStartPHIDetectionJobRequest(QString json);
    ~OAIStartPHIDetectionJobRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStartICD10CMInferenceJobRequest_InputDataConfig getInputDataConfig() const;
    void setInputDataConfig(const OAIStartICD10CMInferenceJobRequest_InputDataConfig &input_data_config);
    bool is_input_data_config_Set() const;
    bool is_input_data_config_Valid() const;

    OAIStartICD10CMInferenceJobRequest_OutputDataConfig getOutputDataConfig() const;
    void setOutputDataConfig(const OAIStartICD10CMInferenceJobRequest_OutputDataConfig &output_data_config);
    bool is_output_data_config_Set() const;
    bool is_output_data_config_Valid() const;

    QString getDataAccessRoleArn() const;
    void setDataAccessRoleArn(const QString &data_access_role_arn);
    bool is_data_access_role_arn_Set() const;
    bool is_data_access_role_arn_Valid() const;

    QString getJobName() const;
    void setJobName(const QString &job_name);
    bool is_job_name_Set() const;
    bool is_job_name_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    QString getKmsKey() const;
    void setKmsKey(const QString &kms_key);
    bool is_kms_key_Set() const;
    bool is_kms_key_Valid() const;

    OAILanguageCode getLanguageCode() const;
    void setLanguageCode(const OAILanguageCode &language_code);
    bool is_language_code_Set() const;
    bool is_language_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStartICD10CMInferenceJobRequest_InputDataConfig m_input_data_config;
    bool m_input_data_config_isSet;
    bool m_input_data_config_isValid;

    OAIStartICD10CMInferenceJobRequest_OutputDataConfig m_output_data_config;
    bool m_output_data_config_isSet;
    bool m_output_data_config_isValid;

    QString m_data_access_role_arn;
    bool m_data_access_role_arn_isSet;
    bool m_data_access_role_arn_isValid;

    QString m_job_name;
    bool m_job_name_isSet;
    bool m_job_name_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;

    QString m_kms_key;
    bool m_kms_key_isSet;
    bool m_kms_key_isValid;

    OAILanguageCode m_language_code;
    bool m_language_code_isSet;
    bool m_language_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartPHIDetectionJobRequest)

#endif // OAIStartPHIDetectionJobRequest_H
