# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nsd_operational_state import NsdOperationalState
from openapi_server import util


class UpdateSolNetworkPackageInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nsd_operational_state: NsdOperationalState=None):
        """UpdateSolNetworkPackageInput - a model defined in OpenAPI

        :param nsd_operational_state: The nsd_operational_state of this UpdateSolNetworkPackageInput.
        """
        self.openapi_types = {
            'nsd_operational_state': NsdOperationalState
        }

        self.attribute_map = {
            'nsd_operational_state': 'nsdOperationalState'
        }

        self._nsd_operational_state = nsd_operational_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSolNetworkPackageInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSolNetworkPackageInput of this UpdateSolNetworkPackageInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nsd_operational_state(self):
        """Gets the nsd_operational_state of this UpdateSolNetworkPackageInput.


        :return: The nsd_operational_state of this UpdateSolNetworkPackageInput.
        :rtype: NsdOperationalState
        """
        return self._nsd_operational_state

    @nsd_operational_state.setter
    def nsd_operational_state(self, nsd_operational_state):
        """Sets the nsd_operational_state of this UpdateSolNetworkPackageInput.


        :param nsd_operational_state: The nsd_operational_state of this UpdateSolNetworkPackageInput.
        :type nsd_operational_state: NsdOperationalState
        """
        if nsd_operational_state is None:
            raise ValueError("Invalid value for `nsd_operational_state`, must not be `None`")

        self._nsd_operational_state = nsd_operational_state
