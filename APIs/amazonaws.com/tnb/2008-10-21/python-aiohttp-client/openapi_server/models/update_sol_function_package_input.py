# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operational_state import OperationalState
from openapi_server import util


class UpdateSolFunctionPackageInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operational_state: OperationalState=None):
        """UpdateSolFunctionPackageInput - a model defined in OpenAPI

        :param operational_state: The operational_state of this UpdateSolFunctionPackageInput.
        """
        self.openapi_types = {
            'operational_state': OperationalState
        }

        self.attribute_map = {
            'operational_state': 'operationalState'
        }

        self._operational_state = operational_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSolFunctionPackageInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSolFunctionPackageInput of this UpdateSolFunctionPackageInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operational_state(self):
        """Gets the operational_state of this UpdateSolFunctionPackageInput.


        :return: The operational_state of this UpdateSolFunctionPackageInput.
        :rtype: OperationalState
        """
        return self._operational_state

    @operational_state.setter
    def operational_state(self, operational_state):
        """Sets the operational_state of this UpdateSolFunctionPackageInput.


        :param operational_state: The operational_state of this UpdateSolFunctionPackageInput.
        :type operational_state: OperationalState
        """
        if operational_state is None:
            raise ValueError("Invalid value for `operational_state`, must not be `None`")

        self._operational_state = operational_state
