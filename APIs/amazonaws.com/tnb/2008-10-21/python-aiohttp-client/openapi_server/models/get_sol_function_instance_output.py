# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_sol_function_instance_metadata import GetSolFunctionInstanceMetadata
from openapi_server.models.get_sol_vnf_info import GetSolVnfInfo
from openapi_server.models.vnf_instantiation_state import VnfInstantiationState
from openapi_server import util


class GetSolFunctionInstanceOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, id: str=None, instantiated_vnf_info: GetSolVnfInfo=None, instantiation_state: VnfInstantiationState=None, metadata: GetSolFunctionInstanceMetadata=None, ns_instance_id: str=None, tags: Dict=None, vnf_pkg_id: str=None, vnf_product_name: str=None, vnf_provider: str=None, vnfd_id: str=None, vnfd_version: str=None):
        """GetSolFunctionInstanceOutput - a model defined in OpenAPI

        :param arn: The arn of this GetSolFunctionInstanceOutput.
        :param id: The id of this GetSolFunctionInstanceOutput.
        :param instantiated_vnf_info: The instantiated_vnf_info of this GetSolFunctionInstanceOutput.
        :param instantiation_state: The instantiation_state of this GetSolFunctionInstanceOutput.
        :param metadata: The metadata of this GetSolFunctionInstanceOutput.
        :param ns_instance_id: The ns_instance_id of this GetSolFunctionInstanceOutput.
        :param tags: The tags of this GetSolFunctionInstanceOutput.
        :param vnf_pkg_id: The vnf_pkg_id of this GetSolFunctionInstanceOutput.
        :param vnf_product_name: The vnf_product_name of this GetSolFunctionInstanceOutput.
        :param vnf_provider: The vnf_provider of this GetSolFunctionInstanceOutput.
        :param vnfd_id: The vnfd_id of this GetSolFunctionInstanceOutput.
        :param vnfd_version: The vnfd_version of this GetSolFunctionInstanceOutput.
        """
        self.openapi_types = {
            'arn': str,
            'id': str,
            'instantiated_vnf_info': GetSolVnfInfo,
            'instantiation_state': VnfInstantiationState,
            'metadata': GetSolFunctionInstanceMetadata,
            'ns_instance_id': str,
            'tags': Dict,
            'vnf_pkg_id': str,
            'vnf_product_name': str,
            'vnf_provider': str,
            'vnfd_id': str,
            'vnfd_version': str
        }

        self.attribute_map = {
            'arn': 'arn',
            'id': 'id',
            'instantiated_vnf_info': 'instantiatedVnfInfo',
            'instantiation_state': 'instantiationState',
            'metadata': 'metadata',
            'ns_instance_id': 'nsInstanceId',
            'tags': 'tags',
            'vnf_pkg_id': 'vnfPkgId',
            'vnf_product_name': 'vnfProductName',
            'vnf_provider': 'vnfProvider',
            'vnfd_id': 'vnfdId',
            'vnfd_version': 'vnfdVersion'
        }

        self._arn = arn
        self._id = id
        self._instantiated_vnf_info = instantiated_vnf_info
        self._instantiation_state = instantiation_state
        self._metadata = metadata
        self._ns_instance_id = ns_instance_id
        self._tags = tags
        self._vnf_pkg_id = vnf_pkg_id
        self._vnf_product_name = vnf_product_name
        self._vnf_provider = vnf_provider
        self._vnfd_id = vnfd_id
        self._vnfd_version = vnfd_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSolFunctionInstanceOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSolFunctionInstanceOutput of this GetSolFunctionInstanceOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this GetSolFunctionInstanceOutput.


        :return: The arn of this GetSolFunctionInstanceOutput.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this GetSolFunctionInstanceOutput.


        :param arn: The arn of this GetSolFunctionInstanceOutput.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def id(self):
        """Gets the id of this GetSolFunctionInstanceOutput.


        :return: The id of this GetSolFunctionInstanceOutput.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetSolFunctionInstanceOutput.


        :param id: The id of this GetSolFunctionInstanceOutput.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def instantiated_vnf_info(self):
        """Gets the instantiated_vnf_info of this GetSolFunctionInstanceOutput.


        :return: The instantiated_vnf_info of this GetSolFunctionInstanceOutput.
        :rtype: GetSolVnfInfo
        """
        return self._instantiated_vnf_info

    @instantiated_vnf_info.setter
    def instantiated_vnf_info(self, instantiated_vnf_info):
        """Sets the instantiated_vnf_info of this GetSolFunctionInstanceOutput.


        :param instantiated_vnf_info: The instantiated_vnf_info of this GetSolFunctionInstanceOutput.
        :type instantiated_vnf_info: GetSolVnfInfo
        """

        self._instantiated_vnf_info = instantiated_vnf_info

    @property
    def instantiation_state(self):
        """Gets the instantiation_state of this GetSolFunctionInstanceOutput.


        :return: The instantiation_state of this GetSolFunctionInstanceOutput.
        :rtype: VnfInstantiationState
        """
        return self._instantiation_state

    @instantiation_state.setter
    def instantiation_state(self, instantiation_state):
        """Sets the instantiation_state of this GetSolFunctionInstanceOutput.


        :param instantiation_state: The instantiation_state of this GetSolFunctionInstanceOutput.
        :type instantiation_state: VnfInstantiationState
        """
        if instantiation_state is None:
            raise ValueError("Invalid value for `instantiation_state`, must not be `None`")

        self._instantiation_state = instantiation_state

    @property
    def metadata(self):
        """Gets the metadata of this GetSolFunctionInstanceOutput.


        :return: The metadata of this GetSolFunctionInstanceOutput.
        :rtype: GetSolFunctionInstanceMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GetSolFunctionInstanceOutput.


        :param metadata: The metadata of this GetSolFunctionInstanceOutput.
        :type metadata: GetSolFunctionInstanceMetadata
        """
        if metadata is None:
            raise ValueError("Invalid value for `metadata`, must not be `None`")

        self._metadata = metadata

    @property
    def ns_instance_id(self):
        """Gets the ns_instance_id of this GetSolFunctionInstanceOutput.


        :return: The ns_instance_id of this GetSolFunctionInstanceOutput.
        :rtype: str
        """
        return self._ns_instance_id

    @ns_instance_id.setter
    def ns_instance_id(self, ns_instance_id):
        """Sets the ns_instance_id of this GetSolFunctionInstanceOutput.


        :param ns_instance_id: The ns_instance_id of this GetSolFunctionInstanceOutput.
        :type ns_instance_id: str
        """
        if ns_instance_id is None:
            raise ValueError("Invalid value for `ns_instance_id`, must not be `None`")

        self._ns_instance_id = ns_instance_id

    @property
    def tags(self):
        """Gets the tags of this GetSolFunctionInstanceOutput.


        :return: The tags of this GetSolFunctionInstanceOutput.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetSolFunctionInstanceOutput.


        :param tags: The tags of this GetSolFunctionInstanceOutput.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def vnf_pkg_id(self):
        """Gets the vnf_pkg_id of this GetSolFunctionInstanceOutput.


        :return: The vnf_pkg_id of this GetSolFunctionInstanceOutput.
        :rtype: str
        """
        return self._vnf_pkg_id

    @vnf_pkg_id.setter
    def vnf_pkg_id(self, vnf_pkg_id):
        """Sets the vnf_pkg_id of this GetSolFunctionInstanceOutput.


        :param vnf_pkg_id: The vnf_pkg_id of this GetSolFunctionInstanceOutput.
        :type vnf_pkg_id: str
        """
        if vnf_pkg_id is None:
            raise ValueError("Invalid value for `vnf_pkg_id`, must not be `None`")

        self._vnf_pkg_id = vnf_pkg_id

    @property
    def vnf_product_name(self):
        """Gets the vnf_product_name of this GetSolFunctionInstanceOutput.


        :return: The vnf_product_name of this GetSolFunctionInstanceOutput.
        :rtype: str
        """
        return self._vnf_product_name

    @vnf_product_name.setter
    def vnf_product_name(self, vnf_product_name):
        """Sets the vnf_product_name of this GetSolFunctionInstanceOutput.


        :param vnf_product_name: The vnf_product_name of this GetSolFunctionInstanceOutput.
        :type vnf_product_name: str
        """

        self._vnf_product_name = vnf_product_name

    @property
    def vnf_provider(self):
        """Gets the vnf_provider of this GetSolFunctionInstanceOutput.


        :return: The vnf_provider of this GetSolFunctionInstanceOutput.
        :rtype: str
        """
        return self._vnf_provider

    @vnf_provider.setter
    def vnf_provider(self, vnf_provider):
        """Sets the vnf_provider of this GetSolFunctionInstanceOutput.


        :param vnf_provider: The vnf_provider of this GetSolFunctionInstanceOutput.
        :type vnf_provider: str
        """

        self._vnf_provider = vnf_provider

    @property
    def vnfd_id(self):
        """Gets the vnfd_id of this GetSolFunctionInstanceOutput.


        :return: The vnfd_id of this GetSolFunctionInstanceOutput.
        :rtype: str
        """
        return self._vnfd_id

    @vnfd_id.setter
    def vnfd_id(self, vnfd_id):
        """Sets the vnfd_id of this GetSolFunctionInstanceOutput.


        :param vnfd_id: The vnfd_id of this GetSolFunctionInstanceOutput.
        :type vnfd_id: str
        """
        if vnfd_id is None:
            raise ValueError("Invalid value for `vnfd_id`, must not be `None`")

        self._vnfd_id = vnfd_id

    @property
    def vnfd_version(self):
        """Gets the vnfd_version of this GetSolFunctionInstanceOutput.


        :return: The vnfd_version of this GetSolFunctionInstanceOutput.
        :rtype: str
        """
        return self._vnfd_version

    @vnfd_version.setter
    def vnfd_version(self, vnfd_version):
        """Sets the vnfd_version of this GetSolFunctionInstanceOutput.


        :param vnfd_version: The vnfd_version of this GetSolFunctionInstanceOutput.
        :type vnfd_version: str
        """

        self._vnfd_version = vnfd_version
