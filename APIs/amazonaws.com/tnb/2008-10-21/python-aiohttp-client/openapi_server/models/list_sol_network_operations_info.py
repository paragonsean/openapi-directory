# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lcm_operation_type import LcmOperationType
from openapi_server.models.list_sol_network_operations_info_error import ListSolNetworkOperationsInfoError
from openapi_server.models.list_sol_network_operations_info_metadata import ListSolNetworkOperationsInfoMetadata
from openapi_server.models.ns_lcm_operation_state import NsLcmOperationState
from openapi_server import util


class ListSolNetworkOperationsInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, error: ListSolNetworkOperationsInfoError=None, id: str=None, lcm_operation_type: LcmOperationType=None, metadata: ListSolNetworkOperationsInfoMetadata=None, ns_instance_id: str=None, operation_state: NsLcmOperationState=None):
        """ListSolNetworkOperationsInfo - a model defined in OpenAPI

        :param arn: The arn of this ListSolNetworkOperationsInfo.
        :param error: The error of this ListSolNetworkOperationsInfo.
        :param id: The id of this ListSolNetworkOperationsInfo.
        :param lcm_operation_type: The lcm_operation_type of this ListSolNetworkOperationsInfo.
        :param metadata: The metadata of this ListSolNetworkOperationsInfo.
        :param ns_instance_id: The ns_instance_id of this ListSolNetworkOperationsInfo.
        :param operation_state: The operation_state of this ListSolNetworkOperationsInfo.
        """
        self.openapi_types = {
            'arn': str,
            'error': ListSolNetworkOperationsInfoError,
            'id': str,
            'lcm_operation_type': LcmOperationType,
            'metadata': ListSolNetworkOperationsInfoMetadata,
            'ns_instance_id': str,
            'operation_state': NsLcmOperationState
        }

        self.attribute_map = {
            'arn': 'arn',
            'error': 'error',
            'id': 'id',
            'lcm_operation_type': 'lcmOperationType',
            'metadata': 'metadata',
            'ns_instance_id': 'nsInstanceId',
            'operation_state': 'operationState'
        }

        self._arn = arn
        self._error = error
        self._id = id
        self._lcm_operation_type = lcm_operation_type
        self._metadata = metadata
        self._ns_instance_id = ns_instance_id
        self._operation_state = operation_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSolNetworkOperationsInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSolNetworkOperationsInfo of this ListSolNetworkOperationsInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this ListSolNetworkOperationsInfo.


        :return: The arn of this ListSolNetworkOperationsInfo.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ListSolNetworkOperationsInfo.


        :param arn: The arn of this ListSolNetworkOperationsInfo.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def error(self):
        """Gets the error of this ListSolNetworkOperationsInfo.


        :return: The error of this ListSolNetworkOperationsInfo.
        :rtype: ListSolNetworkOperationsInfoError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ListSolNetworkOperationsInfo.


        :param error: The error of this ListSolNetworkOperationsInfo.
        :type error: ListSolNetworkOperationsInfoError
        """

        self._error = error

    @property
    def id(self):
        """Gets the id of this ListSolNetworkOperationsInfo.


        :return: The id of this ListSolNetworkOperationsInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ListSolNetworkOperationsInfo.


        :param id: The id of this ListSolNetworkOperationsInfo.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def lcm_operation_type(self):
        """Gets the lcm_operation_type of this ListSolNetworkOperationsInfo.


        :return: The lcm_operation_type of this ListSolNetworkOperationsInfo.
        :rtype: LcmOperationType
        """
        return self._lcm_operation_type

    @lcm_operation_type.setter
    def lcm_operation_type(self, lcm_operation_type):
        """Sets the lcm_operation_type of this ListSolNetworkOperationsInfo.


        :param lcm_operation_type: The lcm_operation_type of this ListSolNetworkOperationsInfo.
        :type lcm_operation_type: LcmOperationType
        """
        if lcm_operation_type is None:
            raise ValueError("Invalid value for `lcm_operation_type`, must not be `None`")

        self._lcm_operation_type = lcm_operation_type

    @property
    def metadata(self):
        """Gets the metadata of this ListSolNetworkOperationsInfo.


        :return: The metadata of this ListSolNetworkOperationsInfo.
        :rtype: ListSolNetworkOperationsInfoMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ListSolNetworkOperationsInfo.


        :param metadata: The metadata of this ListSolNetworkOperationsInfo.
        :type metadata: ListSolNetworkOperationsInfoMetadata
        """

        self._metadata = metadata

    @property
    def ns_instance_id(self):
        """Gets the ns_instance_id of this ListSolNetworkOperationsInfo.


        :return: The ns_instance_id of this ListSolNetworkOperationsInfo.
        :rtype: str
        """
        return self._ns_instance_id

    @ns_instance_id.setter
    def ns_instance_id(self, ns_instance_id):
        """Sets the ns_instance_id of this ListSolNetworkOperationsInfo.


        :param ns_instance_id: The ns_instance_id of this ListSolNetworkOperationsInfo.
        :type ns_instance_id: str
        """
        if ns_instance_id is None:
            raise ValueError("Invalid value for `ns_instance_id`, must not be `None`")

        self._ns_instance_id = ns_instance_id

    @property
    def operation_state(self):
        """Gets the operation_state of this ListSolNetworkOperationsInfo.


        :return: The operation_state of this ListSolNetworkOperationsInfo.
        :rtype: NsLcmOperationState
        """
        return self._operation_state

    @operation_state.setter
    def operation_state(self, operation_state):
        """Sets the operation_state of this ListSolNetworkOperationsInfo.


        :param operation_state: The operation_state of this ListSolNetworkOperationsInfo.
        :type operation_state: NsLcmOperationState
        """
        if operation_state is None:
            raise ValueError("Invalid value for `operation_state`, must not be `None`")

        self._operation_state = operation_state
