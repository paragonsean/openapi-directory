# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstantiateSolNetworkInstanceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_params_for_ns: object=None, tags: Dict[str, str]=None):
        """InstantiateSolNetworkInstanceRequest - a model defined in OpenAPI

        :param additional_params_for_ns: The additional_params_for_ns of this InstantiateSolNetworkInstanceRequest.
        :param tags: The tags of this InstantiateSolNetworkInstanceRequest.
        """
        self.openapi_types = {
            'additional_params_for_ns': object,
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'additional_params_for_ns': 'additionalParamsForNs',
            'tags': 'tags'
        }

        self._additional_params_for_ns = additional_params_for_ns
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstantiateSolNetworkInstanceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstantiateSolNetworkInstance_request of this InstantiateSolNetworkInstanceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_params_for_ns(self):
        """Gets the additional_params_for_ns of this InstantiateSolNetworkInstanceRequest.

        Provides values for the configurable properties.

        :return: The additional_params_for_ns of this InstantiateSolNetworkInstanceRequest.
        :rtype: object
        """
        return self._additional_params_for_ns

    @additional_params_for_ns.setter
    def additional_params_for_ns(self, additional_params_for_ns):
        """Sets the additional_params_for_ns of this InstantiateSolNetworkInstanceRequest.

        Provides values for the configurable properties.

        :param additional_params_for_ns: The additional_params_for_ns of this InstantiateSolNetworkInstanceRequest.
        :type additional_params_for_ns: object
        """

        self._additional_params_for_ns = additional_params_for_ns

    @property
    def tags(self):
        """Gets the tags of this InstantiateSolNetworkInstanceRequest.

        A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an optional value. When you use this API, the tags are transferred to the network operation that is created. Use tags to search and filter your resources or track your Amazon Web Services costs.

        :return: The tags of this InstantiateSolNetworkInstanceRequest.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this InstantiateSolNetworkInstanceRequest.

        A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an optional value. When you use this API, the tags are transferred to the network operation that is created. Use tags to search and filter your resources or track your Amazon Web Services costs.

        :param tags: The tags of this InstantiateSolNetworkInstanceRequest.
        :type tags: Dict[str, str]
        """
        if tags is not None and len(tags) > 200:
            raise ValueError("Invalid value for `tags`, number of items must be less than or equal to `200`")
        if tags is not None and len(tags) < 0:
            raise ValueError("Invalid value for `tags`, number of items must be greater than or equal to `0`")

        self._tags = tags
