# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateSolNetworkModify(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vnf_configurable_properties: object=None, vnf_instance_id: str=None):
        """UpdateSolNetworkModify - a model defined in OpenAPI

        :param vnf_configurable_properties: The vnf_configurable_properties of this UpdateSolNetworkModify.
        :param vnf_instance_id: The vnf_instance_id of this UpdateSolNetworkModify.
        """
        self.openapi_types = {
            'vnf_configurable_properties': object,
            'vnf_instance_id': str
        }

        self.attribute_map = {
            'vnf_configurable_properties': 'vnfConfigurableProperties',
            'vnf_instance_id': 'vnfInstanceId'
        }

        self._vnf_configurable_properties = vnf_configurable_properties
        self._vnf_instance_id = vnf_instance_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSolNetworkModify':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSolNetworkModify of this UpdateSolNetworkModify.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vnf_configurable_properties(self):
        """Gets the vnf_configurable_properties of this UpdateSolNetworkModify.


        :return: The vnf_configurable_properties of this UpdateSolNetworkModify.
        :rtype: object
        """
        return self._vnf_configurable_properties

    @vnf_configurable_properties.setter
    def vnf_configurable_properties(self, vnf_configurable_properties):
        """Sets the vnf_configurable_properties of this UpdateSolNetworkModify.


        :param vnf_configurable_properties: The vnf_configurable_properties of this UpdateSolNetworkModify.
        :type vnf_configurable_properties: object
        """
        if vnf_configurable_properties is None:
            raise ValueError("Invalid value for `vnf_configurable_properties`, must not be `None`")

        self._vnf_configurable_properties = vnf_configurable_properties

    @property
    def vnf_instance_id(self):
        """Gets the vnf_instance_id of this UpdateSolNetworkModify.


        :return: The vnf_instance_id of this UpdateSolNetworkModify.
        :rtype: str
        """
        return self._vnf_instance_id

    @vnf_instance_id.setter
    def vnf_instance_id(self, vnf_instance_id):
        """Sets the vnf_instance_id of this UpdateSolNetworkModify.


        :param vnf_instance_id: The vnf_instance_id of this UpdateSolNetworkModify.
        :type vnf_instance_id: str
        """
        if vnf_instance_id is None:
            raise ValueError("Invalid value for `vnf_instance_id`, must not be `None`")

        self._vnf_instance_id = vnf_instance_id
