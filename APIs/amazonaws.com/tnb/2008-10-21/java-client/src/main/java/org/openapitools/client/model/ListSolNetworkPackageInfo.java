/*
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ListSolNetworkPackageInfoMetadata;
import org.openapitools.client.model.NsdOnboardingState;
import org.openapitools.client.model.NsdOperationalState;
import org.openapitools.client.model.NsdUsageState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Details of a network package.&lt;/p&gt; &lt;p&gt;A network package is a .zip file in CSAR (Cloud Service Archive) format defines the function packages you want to deploy and the Amazon Web Services infrastructure you want to deploy them on.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:23.879487-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListSolNetworkPackageInfo {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private ListSolNetworkPackageInfoMetadata metadata;

  public static final String SERIALIZED_NAME_NSD_DESIGNER = "nsdDesigner";
  @SerializedName(SERIALIZED_NAME_NSD_DESIGNER)
  private String nsdDesigner;

  public static final String SERIALIZED_NAME_NSD_ID = "nsdId";
  @SerializedName(SERIALIZED_NAME_NSD_ID)
  private String nsdId;

  public static final String SERIALIZED_NAME_NSD_INVARIANT_ID = "nsdInvariantId";
  @SerializedName(SERIALIZED_NAME_NSD_INVARIANT_ID)
  private String nsdInvariantId;

  public static final String SERIALIZED_NAME_NSD_NAME = "nsdName";
  @SerializedName(SERIALIZED_NAME_NSD_NAME)
  private String nsdName;

  public static final String SERIALIZED_NAME_NSD_ONBOARDING_STATE = "nsdOnboardingState";
  @SerializedName(SERIALIZED_NAME_NSD_ONBOARDING_STATE)
  private NsdOnboardingState nsdOnboardingState;

  public static final String SERIALIZED_NAME_NSD_OPERATIONAL_STATE = "nsdOperationalState";
  @SerializedName(SERIALIZED_NAME_NSD_OPERATIONAL_STATE)
  private NsdOperationalState nsdOperationalState;

  public static final String SERIALIZED_NAME_NSD_USAGE_STATE = "nsdUsageState";
  @SerializedName(SERIALIZED_NAME_NSD_USAGE_STATE)
  private NsdUsageState nsdUsageState;

  public static final String SERIALIZED_NAME_NSD_VERSION = "nsdVersion";
  @SerializedName(SERIALIZED_NAME_NSD_VERSION)
  private String nsdVersion;

  public static final String SERIALIZED_NAME_VNF_PKG_IDS = "vnfPkgIds";
  @SerializedName(SERIALIZED_NAME_VNF_PKG_IDS)
  private List vnfPkgIds;

  public ListSolNetworkPackageInfo() {
  }

  public ListSolNetworkPackageInfo arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nonnull
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public ListSolNetworkPackageInfo id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ListSolNetworkPackageInfo metadata(ListSolNetworkPackageInfoMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nonnull
  public ListSolNetworkPackageInfoMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(ListSolNetworkPackageInfoMetadata metadata) {
    this.metadata = metadata;
  }


  public ListSolNetworkPackageInfo nsdDesigner(String nsdDesigner) {
    this.nsdDesigner = nsdDesigner;
    return this;
  }

  /**
   * Get nsdDesigner
   * @return nsdDesigner
   */
  @javax.annotation.Nullable
  public String getNsdDesigner() {
    return nsdDesigner;
  }

  public void setNsdDesigner(String nsdDesigner) {
    this.nsdDesigner = nsdDesigner;
  }


  public ListSolNetworkPackageInfo nsdId(String nsdId) {
    this.nsdId = nsdId;
    return this;
  }

  /**
   * Get nsdId
   * @return nsdId
   */
  @javax.annotation.Nullable
  public String getNsdId() {
    return nsdId;
  }

  public void setNsdId(String nsdId) {
    this.nsdId = nsdId;
  }


  public ListSolNetworkPackageInfo nsdInvariantId(String nsdInvariantId) {
    this.nsdInvariantId = nsdInvariantId;
    return this;
  }

  /**
   * Get nsdInvariantId
   * @return nsdInvariantId
   */
  @javax.annotation.Nullable
  public String getNsdInvariantId() {
    return nsdInvariantId;
  }

  public void setNsdInvariantId(String nsdInvariantId) {
    this.nsdInvariantId = nsdInvariantId;
  }


  public ListSolNetworkPackageInfo nsdName(String nsdName) {
    this.nsdName = nsdName;
    return this;
  }

  /**
   * Get nsdName
   * @return nsdName
   */
  @javax.annotation.Nullable
  public String getNsdName() {
    return nsdName;
  }

  public void setNsdName(String nsdName) {
    this.nsdName = nsdName;
  }


  public ListSolNetworkPackageInfo nsdOnboardingState(NsdOnboardingState nsdOnboardingState) {
    this.nsdOnboardingState = nsdOnboardingState;
    return this;
  }

  /**
   * Get nsdOnboardingState
   * @return nsdOnboardingState
   */
  @javax.annotation.Nonnull
  public NsdOnboardingState getNsdOnboardingState() {
    return nsdOnboardingState;
  }

  public void setNsdOnboardingState(NsdOnboardingState nsdOnboardingState) {
    this.nsdOnboardingState = nsdOnboardingState;
  }


  public ListSolNetworkPackageInfo nsdOperationalState(NsdOperationalState nsdOperationalState) {
    this.nsdOperationalState = nsdOperationalState;
    return this;
  }

  /**
   * Get nsdOperationalState
   * @return nsdOperationalState
   */
  @javax.annotation.Nonnull
  public NsdOperationalState getNsdOperationalState() {
    return nsdOperationalState;
  }

  public void setNsdOperationalState(NsdOperationalState nsdOperationalState) {
    this.nsdOperationalState = nsdOperationalState;
  }


  public ListSolNetworkPackageInfo nsdUsageState(NsdUsageState nsdUsageState) {
    this.nsdUsageState = nsdUsageState;
    return this;
  }

  /**
   * Get nsdUsageState
   * @return nsdUsageState
   */
  @javax.annotation.Nonnull
  public NsdUsageState getNsdUsageState() {
    return nsdUsageState;
  }

  public void setNsdUsageState(NsdUsageState nsdUsageState) {
    this.nsdUsageState = nsdUsageState;
  }


  public ListSolNetworkPackageInfo nsdVersion(String nsdVersion) {
    this.nsdVersion = nsdVersion;
    return this;
  }

  /**
   * Get nsdVersion
   * @return nsdVersion
   */
  @javax.annotation.Nullable
  public String getNsdVersion() {
    return nsdVersion;
  }

  public void setNsdVersion(String nsdVersion) {
    this.nsdVersion = nsdVersion;
  }


  public ListSolNetworkPackageInfo vnfPkgIds(List vnfPkgIds) {
    this.vnfPkgIds = vnfPkgIds;
    return this;
  }

  /**
   * Get vnfPkgIds
   * @return vnfPkgIds
   */
  @javax.annotation.Nullable
  public List getVnfPkgIds() {
    return vnfPkgIds;
  }

  public void setVnfPkgIds(List vnfPkgIds) {
    this.vnfPkgIds = vnfPkgIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListSolNetworkPackageInfo listSolNetworkPackageInfo = (ListSolNetworkPackageInfo) o;
    return Objects.equals(this.arn, listSolNetworkPackageInfo.arn) &&
        Objects.equals(this.id, listSolNetworkPackageInfo.id) &&
        Objects.equals(this.metadata, listSolNetworkPackageInfo.metadata) &&
        Objects.equals(this.nsdDesigner, listSolNetworkPackageInfo.nsdDesigner) &&
        Objects.equals(this.nsdId, listSolNetworkPackageInfo.nsdId) &&
        Objects.equals(this.nsdInvariantId, listSolNetworkPackageInfo.nsdInvariantId) &&
        Objects.equals(this.nsdName, listSolNetworkPackageInfo.nsdName) &&
        Objects.equals(this.nsdOnboardingState, listSolNetworkPackageInfo.nsdOnboardingState) &&
        Objects.equals(this.nsdOperationalState, listSolNetworkPackageInfo.nsdOperationalState) &&
        Objects.equals(this.nsdUsageState, listSolNetworkPackageInfo.nsdUsageState) &&
        Objects.equals(this.nsdVersion, listSolNetworkPackageInfo.nsdVersion) &&
        Objects.equals(this.vnfPkgIds, listSolNetworkPackageInfo.vnfPkgIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, id, metadata, nsdDesigner, nsdId, nsdInvariantId, nsdName, nsdOnboardingState, nsdOperationalState, nsdUsageState, nsdVersion, vnfPkgIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListSolNetworkPackageInfo {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    nsdDesigner: ").append(toIndentedString(nsdDesigner)).append("\n");
    sb.append("    nsdId: ").append(toIndentedString(nsdId)).append("\n");
    sb.append("    nsdInvariantId: ").append(toIndentedString(nsdInvariantId)).append("\n");
    sb.append("    nsdName: ").append(toIndentedString(nsdName)).append("\n");
    sb.append("    nsdOnboardingState: ").append(toIndentedString(nsdOnboardingState)).append("\n");
    sb.append("    nsdOperationalState: ").append(toIndentedString(nsdOperationalState)).append("\n");
    sb.append("    nsdUsageState: ").append(toIndentedString(nsdUsageState)).append("\n");
    sb.append("    nsdVersion: ").append(toIndentedString(nsdVersion)).append("\n");
    sb.append("    vnfPkgIds: ").append(toIndentedString(vnfPkgIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("id");
    openapiFields.add("metadata");
    openapiFields.add("nsdDesigner");
    openapiFields.add("nsdId");
    openapiFields.add("nsdInvariantId");
    openapiFields.add("nsdName");
    openapiFields.add("nsdOnboardingState");
    openapiFields.add("nsdOperationalState");
    openapiFields.add("nsdUsageState");
    openapiFields.add("nsdVersion");
    openapiFields.add("vnfPkgIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("arn");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("metadata");
    openapiRequiredFields.add("nsdOnboardingState");
    openapiRequiredFields.add("nsdOperationalState");
    openapiRequiredFields.add("nsdUsageState");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListSolNetworkPackageInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListSolNetworkPackageInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListSolNetworkPackageInfo is not found in the empty JSON string", ListSolNetworkPackageInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListSolNetworkPackageInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListSolNetworkPackageInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ListSolNetworkPackageInfo.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `arn`
      String.validateJsonElement(jsonObj.get("arn"));
      // validate the required field `id`
      String.validateJsonElement(jsonObj.get("id"));
      // validate the required field `metadata`
      ListSolNetworkPackageInfoMetadata.validateJsonElement(jsonObj.get("metadata"));
      // validate the optional field `nsdDesigner`
      if (jsonObj.get("nsdDesigner") != null && !jsonObj.get("nsdDesigner").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("nsdDesigner"));
      }
      // validate the optional field `nsdId`
      if (jsonObj.get("nsdId") != null && !jsonObj.get("nsdId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("nsdId"));
      }
      // validate the optional field `nsdInvariantId`
      if (jsonObj.get("nsdInvariantId") != null && !jsonObj.get("nsdInvariantId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("nsdInvariantId"));
      }
      // validate the optional field `nsdName`
      if (jsonObj.get("nsdName") != null && !jsonObj.get("nsdName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("nsdName"));
      }
      // validate the required field `nsdOnboardingState`
      NsdOnboardingState.validateJsonElement(jsonObj.get("nsdOnboardingState"));
      // validate the required field `nsdOperationalState`
      NsdOperationalState.validateJsonElement(jsonObj.get("nsdOperationalState"));
      // validate the required field `nsdUsageState`
      NsdUsageState.validateJsonElement(jsonObj.get("nsdUsageState"));
      // validate the optional field `nsdVersion`
      if (jsonObj.get("nsdVersion") != null && !jsonObj.get("nsdVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("nsdVersion"));
      }
      // validate the optional field `vnfPkgIds`
      if (jsonObj.get("vnfPkgIds") != null && !jsonObj.get("vnfPkgIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("vnfPkgIds"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListSolNetworkPackageInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListSolNetworkPackageInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListSolNetworkPackageInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListSolNetworkPackageInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ListSolNetworkPackageInfo>() {
           @Override
           public void write(JsonWriter out, ListSolNetworkPackageInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListSolNetworkPackageInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListSolNetworkPackageInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListSolNetworkPackageInfo
   * @throws IOException if the JSON string is invalid with respect to ListSolNetworkPackageInfo
   */
  public static ListSolNetworkPackageInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListSolNetworkPackageInfo.class);
  }

  /**
   * Convert an instance of ListSolNetworkPackageInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

