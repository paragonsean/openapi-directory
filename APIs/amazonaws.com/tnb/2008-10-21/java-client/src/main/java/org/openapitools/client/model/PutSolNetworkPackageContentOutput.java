/*
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PutSolNetworkPackageContentOutputMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutSolNetworkPackageContentOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:23.879487-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutSolNetworkPackageContentOutput {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private PutSolNetworkPackageContentOutputMetadata metadata;

  public static final String SERIALIZED_NAME_NSD_ID = "nsdId";
  @SerializedName(SERIALIZED_NAME_NSD_ID)
  private String nsdId;

  public static final String SERIALIZED_NAME_NSD_NAME = "nsdName";
  @SerializedName(SERIALIZED_NAME_NSD_NAME)
  private String nsdName;

  public static final String SERIALIZED_NAME_NSD_VERSION = "nsdVersion";
  @SerializedName(SERIALIZED_NAME_NSD_VERSION)
  private String nsdVersion;

  public static final String SERIALIZED_NAME_VNF_PKG_IDS = "vnfPkgIds";
  @SerializedName(SERIALIZED_NAME_VNF_PKG_IDS)
  private List vnfPkgIds;

  public PutSolNetworkPackageContentOutput() {
  }

  public PutSolNetworkPackageContentOutput arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nonnull
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public PutSolNetworkPackageContentOutput id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public PutSolNetworkPackageContentOutput metadata(PutSolNetworkPackageContentOutputMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nonnull
  public PutSolNetworkPackageContentOutputMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(PutSolNetworkPackageContentOutputMetadata metadata) {
    this.metadata = metadata;
  }


  public PutSolNetworkPackageContentOutput nsdId(String nsdId) {
    this.nsdId = nsdId;
    return this;
  }

  /**
   * Get nsdId
   * @return nsdId
   */
  @javax.annotation.Nonnull
  public String getNsdId() {
    return nsdId;
  }

  public void setNsdId(String nsdId) {
    this.nsdId = nsdId;
  }


  public PutSolNetworkPackageContentOutput nsdName(String nsdName) {
    this.nsdName = nsdName;
    return this;
  }

  /**
   * Get nsdName
   * @return nsdName
   */
  @javax.annotation.Nonnull
  public String getNsdName() {
    return nsdName;
  }

  public void setNsdName(String nsdName) {
    this.nsdName = nsdName;
  }


  public PutSolNetworkPackageContentOutput nsdVersion(String nsdVersion) {
    this.nsdVersion = nsdVersion;
    return this;
  }

  /**
   * Get nsdVersion
   * @return nsdVersion
   */
  @javax.annotation.Nonnull
  public String getNsdVersion() {
    return nsdVersion;
  }

  public void setNsdVersion(String nsdVersion) {
    this.nsdVersion = nsdVersion;
  }


  public PutSolNetworkPackageContentOutput vnfPkgIds(List vnfPkgIds) {
    this.vnfPkgIds = vnfPkgIds;
    return this;
  }

  /**
   * Get vnfPkgIds
   * @return vnfPkgIds
   */
  @javax.annotation.Nonnull
  public List getVnfPkgIds() {
    return vnfPkgIds;
  }

  public void setVnfPkgIds(List vnfPkgIds) {
    this.vnfPkgIds = vnfPkgIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutSolNetworkPackageContentOutput putSolNetworkPackageContentOutput = (PutSolNetworkPackageContentOutput) o;
    return Objects.equals(this.arn, putSolNetworkPackageContentOutput.arn) &&
        Objects.equals(this.id, putSolNetworkPackageContentOutput.id) &&
        Objects.equals(this.metadata, putSolNetworkPackageContentOutput.metadata) &&
        Objects.equals(this.nsdId, putSolNetworkPackageContentOutput.nsdId) &&
        Objects.equals(this.nsdName, putSolNetworkPackageContentOutput.nsdName) &&
        Objects.equals(this.nsdVersion, putSolNetworkPackageContentOutput.nsdVersion) &&
        Objects.equals(this.vnfPkgIds, putSolNetworkPackageContentOutput.vnfPkgIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, id, metadata, nsdId, nsdName, nsdVersion, vnfPkgIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutSolNetworkPackageContentOutput {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    nsdId: ").append(toIndentedString(nsdId)).append("\n");
    sb.append("    nsdName: ").append(toIndentedString(nsdName)).append("\n");
    sb.append("    nsdVersion: ").append(toIndentedString(nsdVersion)).append("\n");
    sb.append("    vnfPkgIds: ").append(toIndentedString(vnfPkgIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("id");
    openapiFields.add("metadata");
    openapiFields.add("nsdId");
    openapiFields.add("nsdName");
    openapiFields.add("nsdVersion");
    openapiFields.add("vnfPkgIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("arn");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("metadata");
    openapiRequiredFields.add("nsdId");
    openapiRequiredFields.add("nsdName");
    openapiRequiredFields.add("nsdVersion");
    openapiRequiredFields.add("vnfPkgIds");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutSolNetworkPackageContentOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutSolNetworkPackageContentOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutSolNetworkPackageContentOutput is not found in the empty JSON string", PutSolNetworkPackageContentOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutSolNetworkPackageContentOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutSolNetworkPackageContentOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PutSolNetworkPackageContentOutput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `arn`
      String.validateJsonElement(jsonObj.get("arn"));
      // validate the required field `id`
      String.validateJsonElement(jsonObj.get("id"));
      // validate the required field `metadata`
      PutSolNetworkPackageContentOutputMetadata.validateJsonElement(jsonObj.get("metadata"));
      // validate the required field `nsdId`
      String.validateJsonElement(jsonObj.get("nsdId"));
      // validate the required field `nsdName`
      String.validateJsonElement(jsonObj.get("nsdName"));
      // validate the required field `nsdVersion`
      String.validateJsonElement(jsonObj.get("nsdVersion"));
      // validate the required field `vnfPkgIds`
      List.validateJsonElement(jsonObj.get("vnfPkgIds"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutSolNetworkPackageContentOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutSolNetworkPackageContentOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutSolNetworkPackageContentOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutSolNetworkPackageContentOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<PutSolNetworkPackageContentOutput>() {
           @Override
           public void write(JsonWriter out, PutSolNetworkPackageContentOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutSolNetworkPackageContentOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutSolNetworkPackageContentOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutSolNetworkPackageContentOutput
   * @throws IOException if the JSON string is invalid with respect to PutSolNetworkPackageContentOutput
   */
  public static PutSolNetworkPackageContentOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutSolNetworkPackageContentOutput.class);
  }

  /**
   * Convert an instance of PutSolNetworkPackageContentOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

