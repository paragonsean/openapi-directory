/*
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.LcmOperationType;
import org.openapitools.client.model.ListSolNetworkOperationsInfoError;
import org.openapitools.client.model.ListSolNetworkOperationsInfoMetadata;
import org.openapitools.client.model.NsLcmOperationState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information parameters for a network operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:23.879487-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListSolNetworkOperationsInfo {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private ListSolNetworkOperationsInfoError error;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LCM_OPERATION_TYPE = "lcmOperationType";
  @SerializedName(SERIALIZED_NAME_LCM_OPERATION_TYPE)
  private LcmOperationType lcmOperationType;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private ListSolNetworkOperationsInfoMetadata metadata;

  public static final String SERIALIZED_NAME_NS_INSTANCE_ID = "nsInstanceId";
  @SerializedName(SERIALIZED_NAME_NS_INSTANCE_ID)
  private String nsInstanceId;

  public static final String SERIALIZED_NAME_OPERATION_STATE = "operationState";
  @SerializedName(SERIALIZED_NAME_OPERATION_STATE)
  private NsLcmOperationState operationState;

  public ListSolNetworkOperationsInfo() {
  }

  public ListSolNetworkOperationsInfo arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nonnull
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public ListSolNetworkOperationsInfo error(ListSolNetworkOperationsInfoError error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public ListSolNetworkOperationsInfoError getError() {
    return error;
  }

  public void setError(ListSolNetworkOperationsInfoError error) {
    this.error = error;
  }


  public ListSolNetworkOperationsInfo id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ListSolNetworkOperationsInfo lcmOperationType(LcmOperationType lcmOperationType) {
    this.lcmOperationType = lcmOperationType;
    return this;
  }

  /**
   * Get lcmOperationType
   * @return lcmOperationType
   */
  @javax.annotation.Nonnull
  public LcmOperationType getLcmOperationType() {
    return lcmOperationType;
  }

  public void setLcmOperationType(LcmOperationType lcmOperationType) {
    this.lcmOperationType = lcmOperationType;
  }


  public ListSolNetworkOperationsInfo metadata(ListSolNetworkOperationsInfoMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public ListSolNetworkOperationsInfoMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(ListSolNetworkOperationsInfoMetadata metadata) {
    this.metadata = metadata;
  }


  public ListSolNetworkOperationsInfo nsInstanceId(String nsInstanceId) {
    this.nsInstanceId = nsInstanceId;
    return this;
  }

  /**
   * Get nsInstanceId
   * @return nsInstanceId
   */
  @javax.annotation.Nonnull
  public String getNsInstanceId() {
    return nsInstanceId;
  }

  public void setNsInstanceId(String nsInstanceId) {
    this.nsInstanceId = nsInstanceId;
  }


  public ListSolNetworkOperationsInfo operationState(NsLcmOperationState operationState) {
    this.operationState = operationState;
    return this;
  }

  /**
   * Get operationState
   * @return operationState
   */
  @javax.annotation.Nonnull
  public NsLcmOperationState getOperationState() {
    return operationState;
  }

  public void setOperationState(NsLcmOperationState operationState) {
    this.operationState = operationState;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListSolNetworkOperationsInfo listSolNetworkOperationsInfo = (ListSolNetworkOperationsInfo) o;
    return Objects.equals(this.arn, listSolNetworkOperationsInfo.arn) &&
        Objects.equals(this.error, listSolNetworkOperationsInfo.error) &&
        Objects.equals(this.id, listSolNetworkOperationsInfo.id) &&
        Objects.equals(this.lcmOperationType, listSolNetworkOperationsInfo.lcmOperationType) &&
        Objects.equals(this.metadata, listSolNetworkOperationsInfo.metadata) &&
        Objects.equals(this.nsInstanceId, listSolNetworkOperationsInfo.nsInstanceId) &&
        Objects.equals(this.operationState, listSolNetworkOperationsInfo.operationState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, error, id, lcmOperationType, metadata, nsInstanceId, operationState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListSolNetworkOperationsInfo {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lcmOperationType: ").append(toIndentedString(lcmOperationType)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    nsInstanceId: ").append(toIndentedString(nsInstanceId)).append("\n");
    sb.append("    operationState: ").append(toIndentedString(operationState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("error");
    openapiFields.add("id");
    openapiFields.add("lcmOperationType");
    openapiFields.add("metadata");
    openapiFields.add("nsInstanceId");
    openapiFields.add("operationState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("arn");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("lcmOperationType");
    openapiRequiredFields.add("nsInstanceId");
    openapiRequiredFields.add("operationState");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListSolNetworkOperationsInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListSolNetworkOperationsInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListSolNetworkOperationsInfo is not found in the empty JSON string", ListSolNetworkOperationsInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListSolNetworkOperationsInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListSolNetworkOperationsInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ListSolNetworkOperationsInfo.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `arn`
      String.validateJsonElement(jsonObj.get("arn"));
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        ListSolNetworkOperationsInfoError.validateJsonElement(jsonObj.get("error"));
      }
      // validate the required field `id`
      String.validateJsonElement(jsonObj.get("id"));
      // validate the required field `lcmOperationType`
      LcmOperationType.validateJsonElement(jsonObj.get("lcmOperationType"));
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        ListSolNetworkOperationsInfoMetadata.validateJsonElement(jsonObj.get("metadata"));
      }
      // validate the required field `nsInstanceId`
      String.validateJsonElement(jsonObj.get("nsInstanceId"));
      // validate the required field `operationState`
      NsLcmOperationState.validateJsonElement(jsonObj.get("operationState"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListSolNetworkOperationsInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListSolNetworkOperationsInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListSolNetworkOperationsInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListSolNetworkOperationsInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ListSolNetworkOperationsInfo>() {
           @Override
           public void write(JsonWriter out, ListSolNetworkOperationsInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListSolNetworkOperationsInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListSolNetworkOperationsInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListSolNetworkOperationsInfo
   * @throws IOException if the JSON string is invalid with respect to ListSolNetworkOperationsInfo
   */
  public static ListSolNetworkOperationsInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListSolNetworkOperationsInfo.class);
  }

  /**
   * Convert an instance of ListSolNetworkOperationsInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

