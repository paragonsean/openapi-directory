openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: " Amazon Web Services Telco Network Builder (TNB) is a network automation\
    \ service that helps you deploy and manage telecom networks. AWS TNB helps you\
    \ with the lifecycle management of your telecommunication network functions throughout\
    \ planning, deployment, and post-deployment activities."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Telco Network Builder
  version: 2008-10-21
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: tnb
  x-aws-signingName: tnb
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/tnb-2008-10-21.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/tnb/
servers:
- description: The AWS Telco Network Builder multi-region endpoint
  url: "http://tnb.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Telco Network Builder multi-region endpoint
  url: "https://tnb.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Telco Network Builder endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://tnb.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Telco Network Builder endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://tnb.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /sol/nslcm/v1/ns_lcm_op_occs/{nsLcmOpOccId}/cancel:
    post:
      description: "<p>Cancels a network operation.</p> <p>A network operation is\
        \ any operation that is done to your network, such as network instance instantiation\
        \ or termination.</p>"
      operationId: CancelSolNetworkOperation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the network operation.
        explode: false
        in: path
        name: nsLcmOpOccId
        required: true
        schema:
          pattern: "^no-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "202":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /sol/vnfpkgm/v1/vnf_packages:
    get:
      description: <p>Lists information about function packages.</p> <p>A function
        package is a .zip file in CSAR (Cloud Service Archive) format that contains
        a network function (an ETSI standard telecommunication application) and function
        package descriptor that uses the TOSCA standard to describe how the network
        functions should run on your network.</p>
      operationId: ListSolFunctionPackages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to include in the response.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextpage_opaque_marker
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSolFunctionPackagesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates a function package.</p> <p>A function package is a\
        \ .zip file in CSAR (Cloud Service Archive) format that contains a network\
        \ function (an ETSI standard telecommunication application) and function package\
        \ descriptor that uses the TOSCA standard to describe how the network functions\
        \ should run on your network. For more information, see <a href=\"https://docs.aws.amazon.com/tnb/latest/ug/function-packages.html\"\
        >Function packages</a> in the <i>Amazon Web Services Telco Network Builder\
        \ User Guide</i>. </p> <p>Creating a function package is the first step for\
        \ creating a network in AWS TNB. This request creates an empty container with\
        \ an ID. The next step is to upload the actual CSAR zip file into that empty\
        \ container. To upload function package content, see <a href=\"https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolFunctionPackageContent.html\"\
        >PutSolFunctionPackageContent</a>.</p>"
      operationId: CreateSolFunctionPackage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolFunctionPackage_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSolFunctionPackageOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /sol/nslcm/v1/ns_instances:
    get:
      description: "<p>Lists your network instances.</p> <p>A network instance is\
        \ a single network created in Amazon Web Services TNB that can be deployed\
        \ and on which life-cycle operations (like terminate, update, and delete)\
        \ can be performed.</p>"
      operationId: ListSolNetworkInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to include in the response.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextpage_opaque_marker
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSolNetworkInstancesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates a network instance.</p> <p>A network instance is a\
        \ single network created in Amazon Web Services TNB that can be deployed and\
        \ on which life-cycle operations (like terminate, update, and delete) can\
        \ be performed. Creating a network instance is the third step after creating\
        \ a network package. For more information about network instances, <a href=\"\
        https://docs.aws.amazon.com/tnb/latest/ug/network-instances.html\">Network\
        \ instances</a> in the <i>Amazon Web Services Telco Network Builder User Guide</i>.</p>\
        \ <p>Once you create a network instance, you can instantiate it. To instantiate\
        \ a network, see <a href=\"https://docs.aws.amazon.com/tnb/latest/APIReference/API_InstantiateSolNetworkInstance.html\"\
        >InstantiateSolNetworkInstance</a>.</p>"
      operationId: CreateSolNetworkInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolNetworkInstance_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSolNetworkInstanceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /sol/nsd/v1/ns_descriptors:
    get:
      description: <p>Lists network packages.</p> <p>A network package is a .zip file
        in CSAR (Cloud Service Archive) format defines the function packages you want
        to deploy and the Amazon Web Services infrastructure you want to deploy them
        on.</p>
      operationId: ListSolNetworkPackages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to include in the response.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextpage_opaque_marker
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSolNetworkPackagesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates a network package.</p> <p>A network package is a .zip\
        \ file in CSAR (Cloud Service Archive) format defines the function packages\
        \ you want to deploy and the Amazon Web Services infrastructure you want to\
        \ deploy them on. For more information, see <a href=\"https://docs.aws.amazon.com/tnb/latest/ug/network-instances.html\"\
        >Network instances</a> in the <i>Amazon Web Services Telco Network Builder\
        \ User Guide</i>. </p> <p>A network package consists of a network service\
        \ descriptor (NSD) file (required) and any additional files (optional), such\
        \ as scripts specific to your needs. For example, if you have multiple function\
        \ packages in your network package, you can use the NSD to define which network\
        \ functions should run in certain VPCs, subnets, or EKS clusters.</p> <p>This\
        \ request creates an empty network package container with an ID. Once you\
        \ create a network package, you can upload the network package content using\
        \ <a href=\"https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolNetworkPackageContent.html\"\
        >PutSolNetworkPackageContent</a>.</p>"
      operationId: CreateSolNetworkPackage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolFunctionPackage_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSolNetworkPackageOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}:
    delete:
      description: "<p>Deletes a function package.</p> <p>A function package is a\
        \ .zip file in CSAR (Cloud Service Archive) format that contains a network\
        \ function (an ETSI standard telecommunication application) and function package\
        \ descriptor that uses the TOSCA standard to describe how the network functions\
        \ should run on your network.</p> <p>To delete a function package, the package\
        \ must be in a disabled state. To disable a function package, see <a href=\"\
        https://docs.aws.amazon.com/tnb/latest/APIReference/API_UpdateSolFunctionPackage.html\"\
        >UpdateSolFunctionPackage</a>. </p>"
      operationId: DeleteSolFunctionPackage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the function package.
        explode: false
        in: path
        name: vnfPkgId
        required: true
        schema:
          pattern: "^fp-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    get:
      description: "<p>Gets the details of an individual function package, such as\
        \ the operational state and whether the package is in use.</p> <p>A function\
        \ package is a .zip file in CSAR (Cloud Service Archive) format that contains\
        \ a network function (an ETSI standard telecommunication application) and\
        \ function package descriptor that uses the TOSCA standard to describe how\
        \ the network functions should run on your network..</p>"
      operationId: GetSolFunctionPackage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the function package.
        explode: false
        in: path
        name: vnfPkgId
        required: true
        schema:
          pattern: "^fp-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolFunctionPackageOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    patch:
      description: <p>Updates the operational state of function package.</p> <p>A
        function package is a .zip file in CSAR (Cloud Service Archive) format that
        contains a network function (an ETSI standard telecommunication application)
        and function package descriptor that uses the TOSCA standard to describe how
        the network functions should run on your network.</p>
      operationId: UpdateSolFunctionPackage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the function package.
        explode: false
        in: path
        name: vnfPkgId
        required: true
        schema:
          pattern: "^fp-[a-f0-9]{17}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSolFunctionPackage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSolFunctionPackageOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /sol/nslcm/v1/ns_instances/{nsInstanceId}:
    delete:
      description: "<p>Deletes a network instance.</p> <p>A network instance is a\
        \ single network created in Amazon Web Services TNB that can be deployed and\
        \ on which life-cycle operations (like terminate, update, and delete) can\
        \ be performed.</p> <p>To delete a network instance, the instance must be\
        \ in a stopped or terminated state. To terminate a network instance, see <a\
        \ href=\"https://docs.aws.amazon.com/tnb/latest/APIReference/API_TerminateSolNetworkInstance.html\"\
        >TerminateSolNetworkInstance</a>.</p>"
      operationId: DeleteSolNetworkInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Network instance ID.
        explode: false
        in: path
        name: nsInstanceId
        required: true
        schema:
          pattern: "^ni-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    get:
      description: "<p>Gets the details of the network instance.</p> <p>A network\
        \ instance is a single network created in Amazon Web Services TNB that can\
        \ be deployed and on which life-cycle operations (like terminate, update,\
        \ and delete) can be performed.</p>"
      operationId: GetSolNetworkInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the network instance.
        explode: false
        in: path
        name: nsInstanceId
        required: true
        schema:
          pattern: "^ni-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolNetworkInstanceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /sol/nsd/v1/ns_descriptors/{nsdInfoId}:
    delete:
      description: "<p>Deletes network package.</p> <p>A network package is a .zip\
        \ file in CSAR (Cloud Service Archive) format defines the function packages\
        \ you want to deploy and the Amazon Web Services infrastructure you want to\
        \ deploy them on.</p> <p>To delete a network package, the package must be\
        \ in a disable state. To disable a network package, see <a href=\"https://docs.aws.amazon.com/tnb/latest/APIReference/API_UpdateSolNetworkPackage.html\"\
        >UpdateSolNetworkPackage</a>.</p>"
      operationId: DeleteSolNetworkPackage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the network service descriptor in the network package.
        explode: false
        in: path
        name: nsdInfoId
        required: true
        schema:
          pattern: "^np-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    get:
      description: <p>Gets the details of a network package.</p> <p>A network package
        is a .zip file in CSAR (Cloud Service Archive) format defines the function
        packages you want to deploy and the Amazon Web Services infrastructure you
        want to deploy them on.</p>
      operationId: GetSolNetworkPackage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the network service descriptor in the network package.
        explode: false
        in: path
        name: nsdInfoId
        required: true
        schema:
          pattern: "^np-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolNetworkPackageOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    patch:
      description: <p>Updates the operational state of a network package.</p> <p>A
        network package is a .zip file in CSAR (Cloud Service Archive) format defines
        the function packages you want to deploy and the Amazon Web Services infrastructure
        you want to deploy them on.</p> <p>A network service descriptor is a .yaml
        file in a network package that uses the TOSCA standard to describe the network
        functions you want to deploy and the Amazon Web Services infrastructure you
        want to deploy the network functions on.</p>
      operationId: UpdateSolNetworkPackage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the network service descriptor in the network package.
        explode: false
        in: path
        name: nsdInfoId
        required: true
        schema:
          pattern: "^np-[a-f0-9]{17}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSolNetworkPackage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSolNetworkPackageOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /sol/vnflcm/v1/vnf_instances/{vnfInstanceId}:
    get:
      description: "<p>Gets the details of a network function instance, including\
        \ the instantation state and metadata from the function package descriptor\
        \ in the network function package.</p> <p>A network function instance is a\
        \ function in a function package .</p>"
      operationId: GetSolFunctionInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the network function.
        explode: false
        in: path
        name: vnfInstanceId
        required: true
        schema:
          pattern: "^fi-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolFunctionInstanceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}/package_content#Accept:
    get:
      description: <p>Gets the contents of a function package.</p> <p>A function package
        is a .zip file in CSAR (Cloud Service Archive) format that contains a network
        function (an ETSI standard telecommunication application) and function package
        descriptor that uses the TOSCA standard to describe how the network functions
        should run on your network.</p>
      operationId: GetSolFunctionPackageContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The format of the package that you want to download from the
          function packages.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          enum:
          - application/zip
          type: string
        style: simple
      - description: ID of the function package.
        explode: false
        in: path
        name: vnfPkgId
        required: true
        schema:
          pattern: "^fp-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolFunctionPackageContentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}/vnfd#Accept:
    get:
      description: <p>Gets a function package descriptor in a function package.</p>
        <p>A function package descriptor is a .yaml file in a function package that
        uses the TOSCA standard to describe how the network function in the function
        package should run on your network.</p> <p>A function package is a .zip file
        in CSAR (Cloud Service Archive) format that contains a network function (an
        ETSI standard telecommunication application) and function package descriptor
        that uses the TOSCA standard to describe how the network functions should
        run on your network.</p>
      operationId: GetSolFunctionPackageDescriptor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Indicates which content types, expressed as MIME types, the\
          \ client is able to understand."
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          enum:
          - text/plain
          type: string
        style: simple
      - description: ID of the function package.
        explode: false
        in: path
        name: vnfPkgId
        required: true
        schema:
          pattern: "^fp-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolFunctionPackageDescriptorOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /sol/nslcm/v1/ns_lcm_op_occs/{nsLcmOpOccId}:
    get:
      description: "<p>Gets the details of a network operation, including the tasks\
        \ involved in the network operation and the status of the tasks.</p> <p>A\
        \ network operation is any operation that is done to your network, such as\
        \ network instance instantiation or termination.</p>"
      operationId: GetSolNetworkOperation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the network operation.
        explode: false
        in: path
        name: nsLcmOpOccId
        required: true
        schema:
          pattern: "^no-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolNetworkOperationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /sol/nsd/v1/ns_descriptors/{nsdInfoId}/nsd_content#Accept:
    get:
      description: <p>Gets the contents of a network package.</p> <p>A network package
        is a .zip file in CSAR (Cloud Service Archive) format defines the function
        packages you want to deploy and the Amazon Web Services infrastructure you
        want to deploy them on.</p>
      operationId: GetSolNetworkPackageContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The format of the package you want to download from the network
          package.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          enum:
          - application/zip
          type: string
        style: simple
      - description: ID of the network service descriptor in the network package.
        explode: false
        in: path
        name: nsdInfoId
        required: true
        schema:
          pattern: "^np-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolNetworkPackageContentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /sol/nsd/v1/ns_descriptors/{nsdInfoId}/nsd:
    get:
      description: <p>Gets the content of the network service descriptor.</p> <p>A
        network service descriptor is a .yaml file in a network package that uses
        the TOSCA standard to describe the network functions you want to deploy and
        the Amazon Web Services infrastructure you want to deploy the network functions
        on.</p>
      operationId: GetSolNetworkPackageDescriptor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the network service descriptor in the network package.
        explode: false
        in: path
        name: nsdInfoId
        required: true
        schema:
          pattern: "^np-[a-f0-9]{17}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolNetworkPackageDescriptorOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /sol/nslcm/v1/ns_instances/{nsInstanceId}/instantiate:
    post:
      description: "<p>Instantiates a network instance.</p> <p>A network instance\
        \ is a single network created in Amazon Web Services TNB that can be deployed\
        \ and on which life-cycle operations (like terminate, update, and delete)\
        \ can be performed.</p> <p>Before you can instantiate a network instance,\
        \ you have to create a network instance. For more information, see <a href=\"\
        https://docs.aws.amazon.com/tnb/latest/APIReference/API_CreateSolNetworkInstance.html\"\
        >CreateSolNetworkInstance</a>.</p>"
      operationId: InstantiateSolNetworkInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A check for whether you have the required permissions for the\
          \ action without actually making the request and provides an error response.\
          \ If you have the required permissions, the error response is <code>DryRunOperation</code>.\
          \ Otherwise, it is <code>UnauthorizedOperation</code>."
        explode: true
        in: query
        name: dry_run
        required: false
        schema:
          type: boolean
        style: form
      - description: ID of the network instance.
        explode: false
        in: path
        name: nsInstanceId
        required: true
        schema:
          pattern: "^ni-[a-f0-9]{17}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantiateSolNetworkInstance_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantiateSolNetworkInstanceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /sol/vnflcm/v1/vnf_instances:
    get:
      description: <p>Lists network function instances.</p> <p>A network function
        instance is a function in a function package .</p>
      operationId: ListSolFunctionInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to include in the response.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextpage_opaque_marker
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSolFunctionInstancesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /sol/nslcm/v1/ns_lcm_op_occs:
    get:
      description: "<p>Lists details for a network operation, including when the operation\
        \ started and the status of the operation.</p> <p>A network operation is any\
        \ operation that is done to your network, such as network instance instantiation\
        \ or termination.</p>"
      operationId: ListSolNetworkOperations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to include in the response.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextpage_opaque_marker
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSolNetworkOperationsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Lists tags for AWS TNB resources.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Resource ARN.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:aws:tnb:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: <p>Tags an AWS TNB resource.</p> <p>A tag is a label that you assign
        to an Amazon Web Services resource. Each tag consists of a key and an optional
        value. You can use tags to search and filter your resources or track your
        Amazon Web Services costs.</p>
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Resource ARN.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:aws:tnb:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}/package_content:
    put:
      description: <p>Uploads the contents of a function package.</p> <p>A function
        package is a .zip file in CSAR (Cloud Service Archive) format that contains
        a network function (an ETSI standard telecommunication application) and function
        package descriptor that uses the TOSCA standard to describe how the network
        functions should run on your network.</p>
      operationId: PutSolFunctionPackageContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Function package content type.
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          enum:
          - application/zip
          type: string
        style: simple
      - description: Function package ID.
        explode: false
        in: path
        name: vnfPkgId
        required: true
        schema:
          pattern: "^fp-[a-f0-9]{17}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSolFunctionPackageContent_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSolFunctionPackageContentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /sol/nsd/v1/ns_descriptors/{nsdInfoId}/nsd_content:
    put:
      description: <p>Uploads the contents of a network package.</p> <p>A network
        package is a .zip file in CSAR (Cloud Service Archive) format defines the
        function packages you want to deploy and the Amazon Web Services infrastructure
        you want to deploy them on.</p>
      operationId: PutSolNetworkPackageContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Network package content type.
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          enum:
          - application/zip
          type: string
        style: simple
      - description: Network service descriptor info ID.
        explode: false
        in: path
        name: nsdInfoId
        required: true
        schema:
          pattern: "^np-[a-f0-9]{17}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSolNetworkPackageContent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSolNetworkPackageContentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /sol/nslcm/v1/ns_instances/{nsInstanceId}/terminate:
    post:
      description: "<p>Terminates a network instance.</p> <p>A network instance is\
        \ a single network created in Amazon Web Services TNB that can be deployed\
        \ and on which life-cycle operations (like terminate, update, and delete)\
        \ can be performed.</p> <p>You must terminate a network instance before you\
        \ can delete it.</p>"
      operationId: TerminateSolNetworkInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the network instance.
        explode: false
        in: path
        name: nsInstanceId
        required: true
        schema:
          pattern: "^ni-[a-f0-9]{17}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateSolNetworkInstance_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateSolNetworkInstanceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: <p>Untags an AWS TNB resource.</p> <p>A tag is a label that you
        assign to an Amazon Web Services resource. Each tag consists of a key and
        an optional value. You can use tags to search and filter your resources or
        track your Amazon Web Services costs.</p>
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Resource ARN.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:aws:tnb:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      - description: Tag keys.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /sol/nslcm/v1/ns_instances/{nsInstanceId}/update:
    post:
      description: "<p>Update a network instance.</p> <p>A network instance is a single\
        \ network created in Amazon Web Services TNB that can be deployed and on which\
        \ life-cycle operations (like terminate, update, and delete) can be performed.</p>"
      operationId: UpdateSolNetworkInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the network instance.
        explode: false
        in: path
        name: nsInstanceId
        required: true
        schema:
          pattern: "^ni-[a-f0-9]{17}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSolNetworkInstance_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSolNetworkInstanceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}/package_content/validate:
    put:
      description: <p>Validates function package content. This can be used as a dry
        run before uploading function package content with <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolFunctionPackageContent.html">PutSolFunctionPackageContent</a>.</p>
        <p>A function package is a .zip file in CSAR (Cloud Service Archive) format
        that contains a network function (an ETSI standard telecommunication application)
        and function package descriptor that uses the TOSCA standard to describe how
        the network functions should run on your network.</p>
      operationId: ValidateSolFunctionPackageContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Function package content type.
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          enum:
          - application/zip
          type: string
        style: simple
      - description: Function package ID.
        explode: false
        in: path
        name: vnfPkgId
        required: true
        schema:
          pattern: "^fp-[a-f0-9]{17}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSolFunctionPackageContent_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateSolFunctionPackageContentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /sol/nsd/v1/ns_descriptors/{nsdInfoId}/nsd_content/validate:
    put:
      description: <p>Validates network package content. This can be used as a dry
        run before uploading network package content with <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolNetworkPackageContent.html">PutSolNetworkPackageContent</a>.</p>
        <p>A network package is a .zip file in CSAR (Cloud Service Archive) format
        defines the function packages you want to deploy and the Amazon Web Services
        infrastructure you want to deploy them on.</p>
      operationId: ValidateSolNetworkPackageContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Network package content type.
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          enum:
          - application/zip
          type: string
        style: simple
      - description: Network service descriptor file.
        explode: false
        in: path
        name: nsdInfoId
        required: true
        schema:
          pattern: "^np-[a-f0-9]{17}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSolNetworkPackageContent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateSolNetworkPackageContentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    InternalServerException: {}
    ThrottlingException: {}
    ValidationException: {}
    ResourceNotFoundException: {}
    AccessDeniedException: {}
    CreateSolFunctionPackageOutput:
      example:
        usageState: ""
        id: ""
        operationalState: ""
        arn: ""
        onboardingState: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/VnfPkgArn'
          - description: Function package ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/VnfPkgId'
          - description: ID of the function package.
        onboardingState:
          allOf:
          - $ref: '#/components/schemas/OnboardingState'
          - description: Onboarding state of the function package.
        operationalState:
          allOf:
          - $ref: '#/components/schemas/OperationalState'
          - description: Operational state of the function package.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
        usageState:
          allOf:
          - $ref: '#/components/schemas/UsageState'
          - description: Usage state of the function package.
      required:
      - arn
      - id
      - onboardingState
      - operationalState
      - usageState
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    ServiceQuotaExceededException: {}
    CreateSolNetworkInstanceOutput:
      example:
        nsdInfoId: ""
        id: ""
        arn: ""
        nsInstanceName: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/NsInstanceArn'
          - description: Network instance ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/NsInstanceId'
          - description: Network instance ID.
        nsInstanceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network instance name.
        nsdInfoId:
          allOf:
          - $ref: '#/components/schemas/NsdInfoId'
          - description: Network service descriptor ID.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
      required:
      - arn
      - id
      - nsInstanceName
      - nsdInfoId
      type: object
    CreateSolNetworkPackageOutput:
      example:
        nsdOnboardingState: ""
        nsdUsageState: ""
        id: ""
        arn: ""
        nsdOperationalState: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/NsdInfoArn'
          - description: Network package ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/NsdInfoId'
          - description: ID of the network package.
        nsdOnboardingState:
          allOf:
          - $ref: '#/components/schemas/NsdOnboardingState'
          - description: Onboarding state of the network service descriptor in the
              network package.
        nsdOperationalState:
          allOf:
          - $ref: '#/components/schemas/NsdOperationalState'
          - description: Operational state of the network service descriptor in the
              network package.
        nsdUsageState:
          allOf:
          - $ref: '#/components/schemas/NsdUsageState'
          - description: Usage state of the network service descriptor in the network
              package.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
      required:
      - arn
      - id
      - nsdOnboardingState
      - nsdOperationalState
      - nsdUsageState
      type: object
    GetSolFunctionInstanceOutput:
      example:
        vnfProductName: ""
        metadata:
          createdAt: ""
          lastModified: ""
        nsInstanceId: ""
        vnfdVersion: ""
        vnfProvider: ""
        vnfPkgId: ""
        instantiatedVnfInfo:
          vnfcResourceInfo: ""
          vnfState: ""
        vnfdId: ""
        id: ""
        arn: ""
        instantiationState: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/VnfInstanceArn'
          - description: Network function instance ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/VnfInstanceId'
          - description: Network function instance ID.
        instantiatedVnfInfo:
          $ref: '#/components/schemas/GetSolVnfInfo'
        instantiationState:
          allOf:
          - $ref: '#/components/schemas/VnfInstantiationState'
          - description: Network function instantiation state.
        metadata:
          $ref: '#/components/schemas/GetSolFunctionInstanceMetadata'
        nsInstanceId:
          allOf:
          - $ref: '#/components/schemas/NsInstanceId'
          - description: Network instance ID.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
        vnfPkgId:
          allOf:
          - $ref: '#/components/schemas/VnfPkgId'
          - description: Function package ID.
        vnfProductName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network function product name.
        vnfProvider:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network function provider.
        vnfdId:
          allOf:
          - $ref: '#/components/schemas/VnfdId'
          - description: Function package descriptor ID.
        vnfdVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Function package descriptor version.
      required:
      - arn
      - id
      - instantiationState
      - metadata
      - nsInstanceId
      - vnfPkgId
      - vnfdId
      type: object
    GetSolFunctionPackageOutput:
      example:
        vnfProductName: ""
        metadata:
          createdAt: ""
          vnfd:
            overrides: ""
          lastModified: ""
        vnfdVersion: ""
        usageState: ""
        vnfProvider: ""
        vnfdId: ""
        id: ""
        operationalState: ""
        arn: ""
        onboardingState: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/VnfPkgArn'
          - description: Function package ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/VnfPkgId'
          - description: Function package ID.
        metadata:
          $ref: '#/components/schemas/GetSolFunctionPackageMetadata'
        onboardingState:
          allOf:
          - $ref: '#/components/schemas/OnboardingState'
          - description: Function package onboarding state.
        operationalState:
          allOf:
          - $ref: '#/components/schemas/OperationalState'
          - description: Function package operational state.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
        usageState:
          allOf:
          - $ref: '#/components/schemas/UsageState'
          - description: Function package usage state.
        vnfProductName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network function product name.
        vnfProvider:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network function provider.
        vnfdId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Function package descriptor ID.
        vnfdVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Function package descriptor version.
      required:
      - arn
      - id
      - onboardingState
      - operationalState
      - usageState
      type: object
    GetSolFunctionPackageContentOutput:
      example:
        packageContent: ""
      properties:
        packageContent:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: Contents of the function package.
      type: object
    GetSolFunctionPackageDescriptorOutput:
      example:
        vnfd: ""
      properties:
        vnfd:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: Contents of the function package descriptor.
      type: object
    GetSolNetworkInstanceOutput:
      example:
        metadata:
          createdAt: ""
          lastModified: ""
        lcmOpInfo:
          nsLcmOpOccId: ""
        nsdInfoId: ""
        nsdId: ""
        id: ""
        nsInstanceDescription: ""
        arn: ""
        nsInstanceName: ""
        nsState: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/NsInstanceArn'
          - description: Network instance ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/NsInstanceId'
          - description: Network instance ID.
        lcmOpInfo:
          $ref: '#/components/schemas/LcmOperationInfo'
        metadata:
          $ref: '#/components/schemas/GetSolNetworkInstanceMetadata'
        nsInstanceDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network instance description.
        nsInstanceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network instance name.
        nsState:
          allOf:
          - $ref: '#/components/schemas/NsState'
          - description: Network instance state.
        nsdId:
          allOf:
          - $ref: '#/components/schemas/NsdId'
          - description: Network service descriptor ID.
        nsdInfoId:
          allOf:
          - $ref: '#/components/schemas/NsdInfoId'
          - description: Network service descriptor info ID.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
      required:
      - arn
      - id
      - metadata
      - nsInstanceDescription
      - nsInstanceName
      - nsdId
      - nsdInfoId
      type: object
    GetSolNetworkOperationOutput:
      example:
        metadata:
          createdAt: ""
          lastModified: ""
        nsInstanceId: ""
        lcmOperationType: ""
        operationState: ""
        id: ""
        arn: ""
        error:
          detail: ""
          title: ""
        tasks: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/NsLcmOpOccArn'
          - description: Network operation ARN.
        error:
          $ref: '#/components/schemas/GetSolNetworkOperationOutput_error'
        id:
          allOf:
          - $ref: '#/components/schemas/NsLcmOpOccId'
          - description: ID of this network operation occurrence.
        lcmOperationType:
          allOf:
          - $ref: '#/components/schemas/LcmOperationType'
          - description: Type of the operation represented by this occurrence.
        metadata:
          $ref: '#/components/schemas/GetSolNetworkOperationOutput_metadata'
        nsInstanceId:
          allOf:
          - $ref: '#/components/schemas/NsInstanceId'
          - description: ID of the network operation instance.
        operationState:
          allOf:
          - $ref: '#/components/schemas/NsLcmOperationState'
          - description: The state of the network operation.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
        tasks:
          allOf:
          - $ref: '#/components/schemas/GetSolNetworkOperationTasksList'
          - description: All tasks associated with this operation occurrence.
      required:
      - arn
      type: object
    GetSolNetworkPackageOutput:
      example:
        metadata:
          createdAt: ""
          lastModified: ""
          nsd:
            overrides: ""
        nsdOnboardingState: ""
        vnfPkgIds: ""
        nsdVersion: ""
        nsdId: ""
        nsdName: ""
        nsdUsageState: ""
        id: ""
        arn: ""
        nsdOperationalState: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/NsdInfoArn'
          - description: Network package ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/NsdInfoId'
          - description: Network package ID.
        metadata:
          $ref: '#/components/schemas/GetSolNetworkPackageMetadata'
        nsdId:
          allOf:
          - $ref: '#/components/schemas/NsdId'
          - description: Network service descriptor ID.
        nsdName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network service descriptor name.
        nsdOnboardingState:
          allOf:
          - $ref: '#/components/schemas/NsdOnboardingState'
          - description: Network service descriptor onboarding state.
        nsdOperationalState:
          allOf:
          - $ref: '#/components/schemas/NsdOperationalState'
          - description: Network service descriptor operational state.
        nsdUsageState:
          allOf:
          - $ref: '#/components/schemas/NsdUsageState'
          - description: Network service descriptor usage state.
        nsdVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network service descriptor version.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
        vnfPkgIds:
          allOf:
          - $ref: '#/components/schemas/VnfPkgIdList'
          - description: Identifies the function package for the function package
              descriptor referenced by the onboarded network package.
      required:
      - arn
      - id
      - metadata
      - nsdId
      - nsdName
      - nsdOnboardingState
      - nsdOperationalState
      - nsdUsageState
      - nsdVersion
      - vnfPkgIds
      type: object
    GetSolNetworkPackageContentOutput:
      example:
        nsdContent: ""
      properties:
        nsdContent:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: Content of the network service descriptor in the network
              package.
      type: object
    GetSolNetworkPackageDescriptorOutput:
      example:
        nsd: ""
      properties:
        nsd:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: Contents of the network service descriptor in the network
              package.
      type: object
    InstantiateSolNetworkInstanceOutput:
      example:
        nsLcmOpOccId: ""
        tags: ""
      properties:
        nsLcmOpOccId:
          allOf:
          - $ref: '#/components/schemas/NsLcmOpOccId'
          - description: The identifier of the network operation.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "A tag is a label that you assign to an Amazon Web Services\
              \ resource. Each tag consists of a key and an optional value. When you\
              \ use this API, the tags are transferred to the network operation that\
              \ is created. Use tags to search and filter your resources or track\
              \ your Amazon Web Services costs."
      required:
      - nsLcmOpOccId
      type: object
    ListSolFunctionInstancesOutput:
      example:
        functionInstances: ""
        nextToken: ""
      properties:
        functionInstances:
          allOf:
          - $ref: '#/components/schemas/ListSolFunctionInstanceResources'
          - description: Network function instances.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token to use to retrieve the next page of results. This
              value is <code>null</code> when there are no more results to return.
      type: object
    ListSolFunctionPackagesOutput:
      example:
        functionPackages: ""
        nextToken: ""
      properties:
        functionPackages:
          allOf:
          - $ref: '#/components/schemas/ListSolFunctionPackageResources'
          - description: Function packages. A function package is a .zip file in CSAR
              (Cloud Service Archive) format that contains a network function (an
              ETSI standard telecommunication application) and function package descriptor
              that uses the TOSCA standard to describe how the network functions should
              run on your network.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token to use to retrieve the next page of results. This
              value is <code>null</code> when there are no more results to return.
      required:
      - functionPackages
      type: object
    ListSolNetworkInstancesOutput:
      example:
        networkInstances: ""
        nextToken: ""
      properties:
        networkInstances:
          allOf:
          - $ref: '#/components/schemas/ListSolNetworkInstanceResources'
          - description: Lists network instances.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token to use to retrieve the next page of results. This
              value is <code>null</code> when there are no more results to return.
      type: object
    ListSolNetworkOperationsOutput:
      example:
        nextToken: ""
        networkOperations: ""
      properties:
        networkOperations:
          allOf:
          - $ref: '#/components/schemas/ListSolNetworkOperationsResources'
          - description: "Lists network operation occurrences. Lifecycle management\
              \ operations are deploy, update, or delete operations."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token to use to retrieve the next page of results. This
              value is <code>null</code> when there are no more results to return.
      type: object
    ListSolNetworkPackagesOutput:
      example:
        networkPackages: ""
        nextToken: ""
      properties:
        networkPackages:
          allOf:
          - $ref: '#/components/schemas/ListSolNetworkPackageResources'
          - description: Network packages. A network package is a .zip file in CSAR
              (Cloud Service Archive) format defines the function packages you want
              to deploy and the Amazon Web Services infrastructure you want to deploy
              them on.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token to use to retrieve the next page of results. This
              value is <code>null</code> when there are no more results to return.
      required:
      - networkPackages
      type: object
    ListTagsForResourceOutput:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
      required:
      - tags
      type: object
    PutSolFunctionPackageContentOutput:
      example:
        vnfProductName: ""
        metadata:
          vnfd:
            overrides: ""
        vnfdVersion: ""
        vnfProvider: ""
        vnfdId: ""
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/VnfPkgId'
          - description: Function package ID.
        metadata:
          $ref: '#/components/schemas/PutSolFunctionPackageContentOutput_metadata'
        vnfProductName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Function product name.
        vnfProvider:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Function provider.
        vnfdId:
          allOf:
          - $ref: '#/components/schemas/VnfdId'
          - description: Function package descriptor ID.
        vnfdVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Function package descriptor version.
      required:
      - id
      - metadata
      - vnfProductName
      - vnfProvider
      - vnfdId
      - vnfdVersion
      type: object
    PutSolNetworkPackageContentOutput:
      example:
        metadata:
          nsd:
            overrides: ""
        vnfPkgIds: ""
        nsdVersion: ""
        nsdId: ""
        nsdName: ""
        id: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/NsdInfoArn'
          - description: Network package ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/NsdInfoId'
          - description: Network package ID.
        metadata:
          $ref: '#/components/schemas/PutSolNetworkPackageContentOutput_metadata'
        nsdId:
          allOf:
          - $ref: '#/components/schemas/NsdId'
          - description: Network service descriptor ID.
        nsdName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network service descriptor name.
        nsdVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network service descriptor version.
        vnfPkgIds:
          allOf:
          - $ref: '#/components/schemas/VnfPkgIdList'
          - description: Function package IDs.
      required:
      - arn
      - id
      - metadata
      - nsdId
      - nsdName
      - nsdVersion
      - vnfPkgIds
      type: object
    TagResourceOutput:
      properties: {}
      type: object
    TerminateSolNetworkInstanceOutput:
      example:
        nsLcmOpOccId: ""
        tags: ""
      properties:
        nsLcmOpOccId:
          allOf:
          - $ref: '#/components/schemas/NsLcmOpOccId'
          - description: The identifier of the network operation.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "A tag is a label that you assign to an Amazon Web Services\
              \ resource. Each tag consists of a key and an optional value. When you\
              \ use this API, the tags are transferred to the network operation that\
              \ is created. Use tags to search and filter your resources or track\
              \ your Amazon Web Services costs."
      type: object
    UntagResourceOutput:
      properties: {}
      type: object
    TagKey:
      pattern: "^(?!aws:).{1,128}$"
      type: string
    UpdateSolFunctionPackageOutput:
      example:
        operationalState: ""
      properties:
        operationalState:
          allOf:
          - $ref: '#/components/schemas/OperationalState'
          - description: Operational state of the function package.
      required:
      - operationalState
      type: object
    UpdateSolNetworkInstanceOutput:
      example:
        nsLcmOpOccId: ""
        tags: ""
      properties:
        nsLcmOpOccId:
          allOf:
          - $ref: '#/components/schemas/NsLcmOpOccId'
          - description: The identifier of the network operation.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "A tag is a label that you assign to an Amazon Web Services\
              \ resource. Each tag consists of a key and an optional value. When you\
              \ use this API, the tags are transferred to the network operation that\
              \ is created. Use tags to search and filter your resources or track\
              \ your Amazon Web Services costs."
      type: object
    Document:
      properties: {}
      type: object
    VnfInstanceId:
      pattern: "^fi-[a-f0-9]{17}$"
      type: string
    UpdateSolNetworkPackageOutput:
      example:
        nsdOperationalState: ""
      properties:
        nsdOperationalState:
          allOf:
          - $ref: '#/components/schemas/NsdOperationalState'
          - description: Operational state of the network service descriptor in the
              network package.
      required:
      - nsdOperationalState
      type: object
    ValidateSolFunctionPackageContentOutput:
      example:
        vnfProductName: ""
        metadata:
          vnfd:
            overrides: ""
        vnfdVersion: ""
        vnfProvider: ""
        vnfdId: ""
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/VnfPkgId'
          - description: Function package ID.
        metadata:
          $ref: '#/components/schemas/ValidateSolFunctionPackageContentOutput_metadata'
        vnfProductName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network function product name.
        vnfProvider:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network function provider.
        vnfdId:
          allOf:
          - $ref: '#/components/schemas/VnfdId'
          - description: Function package descriptor ID.
        vnfdVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Function package descriptor version.
      required:
      - id
      - metadata
      - vnfProductName
      - vnfProvider
      - vnfdId
      - vnfdVersion
      type: object
    ValidateSolNetworkPackageContentOutput:
      example:
        metadata:
          nsd:
            overrides: ""
        vnfPkgIds: ""
        nsdVersion: ""
        nsdId: ""
        nsdName: ""
        id: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/NsdInfoArn'
          - description: Network package ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/NsdInfoId'
          - description: Network package ID.
        metadata:
          $ref: '#/components/schemas/ValidateSolNetworkPackageContentOutput_metadata'
        nsdId:
          allOf:
          - $ref: '#/components/schemas/NsdId'
          - description: Network service descriptor ID.
        nsdName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network service descriptor name.
        nsdVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Network service descriptor version.
        vnfPkgIds:
          allOf:
          - $ref: '#/components/schemas/VnfPkgIdList'
          - description: Function package IDs.
      required:
      - arn
      - id
      - metadata
      - nsdId
      - nsdName
      - nsdVersion
      - vnfPkgIds
      type: object
    Blob:
      type: string
    Boolean:
      type: boolean
    NsLcmOpOccId:
      pattern: "^no-[a-f0-9]{17}$"
      type: string
    CancelSolNetworkOperationInput:
      properties: {}
      title: CancelSolNetworkOperationInput
      type: object
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 200
      minProperties: 0
      type: object
    CreateSolFunctionPackageInput:
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
      title: CreateSolFunctionPackageInput
      type: object
    VnfPkgArn:
      pattern: "^arn:(aws|aws-cn|aws-iso|aws-iso-b|aws-us-gov):tnb:([a-z]{2}(-(gov|isob|iso))?-(east|west|north|south|central){1,2}-[0-9]):\\\
        d{12}:(function-package/fp-[a-f0-9]{17})$"
      type: string
    VnfPkgId:
      pattern: "^fp-[a-f0-9]{17}$"
      type: string
    OnboardingState:
      enum:
      - CREATED
      - ONBOARDED
      - ERROR
      type: string
    OperationalState:
      enum:
      - ENABLED
      - DISABLED
      type: string
    UsageState:
      enum:
      - IN_USE
      - NOT_IN_USE
      type: string
    CreateSolNetworkInstanceInputNsDescriptionString:
      maxLength: 255
      minLength: 0
      type: string
    CreateSolNetworkInstanceInputNsNameString:
      maxLength: 100
      minLength: 1
      type: string
    NsdInfoId:
      pattern: "^np-[a-f0-9]{17}$"
      type: string
    CreateSolNetworkInstanceInput:
      properties:
        nsDescription:
          allOf:
          - $ref: '#/components/schemas/CreateSolNetworkInstanceInputNsDescriptionString'
          - description: Network instance description.
        nsName:
          allOf:
          - $ref: '#/components/schemas/CreateSolNetworkInstanceInputNsNameString'
          - description: Network instance name.
        nsdInfoId:
          allOf:
          - $ref: '#/components/schemas/NsdInfoId'
          - description: ID for network service descriptor.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
      required:
      - nsName
      - nsdInfoId
      title: CreateSolNetworkInstanceInput
      type: object
    NsInstanceArn:
      pattern: "^arn:(aws|aws-cn|aws-iso|aws-iso-b|aws-us-gov):tnb:([a-z]{2}(-(gov|isob|iso))?-(east|west|north|south|central){1,2}-[0-9]):\\\
        d{12}:(network-instance/ni-[a-f0-9]{17})$"
      type: string
    NsInstanceId:
      pattern: "^ni-[a-f0-9]{17}$"
      type: string
    String:
      type: string
    CreateSolNetworkPackageInput:
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
      title: CreateSolNetworkPackageInput
      type: object
    NsdInfoArn:
      pattern: "^arn:(aws|aws-cn|aws-iso|aws-iso-b|aws-us-gov):tnb:([a-z]{2}(-(gov|isob|iso))?-(east|west|north|south|central){1,2}-[0-9]):\\\
        d{12}:(network-package/np-[a-f0-9]{17})$"
      type: string
    NsdOnboardingState:
      enum:
      - CREATED
      - ONBOARDED
      - ERROR
      type: string
    NsdOperationalState:
      enum:
      - ENABLED
      - DISABLED
      type: string
    NsdUsageState:
      enum:
      - IN_USE
      - NOT_IN_USE
      type: string
    DeleteSolFunctionPackageInput:
      properties: {}
      title: DeleteSolFunctionPackageInput
      type: object
    DeleteSolNetworkInstanceInput:
      properties: {}
      title: DeleteSolNetworkInstanceInput
      type: object
    DeleteSolNetworkPackageInput:
      properties: {}
      title: DeleteSolNetworkPackageInput
      type: object
    DescriptorContentType:
      enum:
      - text/plain
      type: string
    ErrorCause:
      maxLength: 200
      minLength: 1
      type: string
    ErrorDetails:
      maxLength: 10240
      minLength: 0
      type: string
    ErrorInfo:
      description: Provides error information.
      properties:
        cause:
          allOf:
          - $ref: '#/components/schemas/ErrorCause'
          - description: Error cause.
        details:
          allOf:
          - $ref: '#/components/schemas/ErrorDetails'
          - description: Error details.
      type: object
    OverrideList:
      items:
        $ref: '#/components/schemas/ToscaOverride'
      type: array
    FunctionArtifactMeta:
      description: <p>Metadata for function package artifacts.</p> <p>Artifacts are
        the contents of the package descriptor file and the state of the package.</p>
      example:
        overrides: ""
      properties:
        overrides:
          allOf:
          - $ref: '#/components/schemas/OverrideList'
          - description: Lists of function package overrides.
      type: object
    GetSolFunctionInstanceInput:
      properties: {}
      title: GetSolFunctionInstanceInput
      type: object
    SyntheticTimestamp_date_time:
      format: date-time
      type: string
    GetSolFunctionInstanceMetadata:
      description: <p>The metadata of a network function instance.</p> <p>A network
        function instance is a function in a function package .</p>
      example:
        createdAt: ""
        lastModified: ""
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was created.
        lastModified:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was last modified.
      required:
      - createdAt
      - lastModified
      type: object
    VnfInstanceArn:
      pattern: "^arn:(aws|aws-cn|aws-iso|aws-iso-b|aws-us-gov):tnb:([a-z]{2}(-(gov|isob|iso))?-(east|west|north|south|central){1,2}-[0-9]):\\\
        d{12}:(function-instance/fi-[a-f0-9]{17})$"
      type: string
    GetSolVnfInfo:
      description: <p>Information about the network function.</p> <p>A network function
        instance is a function in a function package .</p>
      example:
        vnfcResourceInfo: ""
        vnfState: ""
      properties:
        vnfState:
          allOf:
          - $ref: '#/components/schemas/VnfOperationalState'
          - description: State of the network function instance.
        vnfcResourceInfo:
          allOf:
          - $ref: '#/components/schemas/GetSolVnfcResourceInfoList'
          - description: Compute info used by the network function instance.
      type: object
    VnfInstantiationState:
      enum:
      - INSTANTIATED
      - NOT_INSTANTIATED
      type: string
    VnfdId:
      pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
      type: string
    PackageContentType:
      enum:
      - application/zip
      type: string
    GetSolFunctionPackageContentInput:
      properties: {}
      title: GetSolFunctionPackageContentInput
      type: object
    GetSolFunctionPackageDescriptorInput:
      properties: {}
      title: GetSolFunctionPackageDescriptorInput
      type: object
    GetSolFunctionPackageInput:
      properties: {}
      title: GetSolFunctionPackageInput
      type: object
    GetSolFunctionPackageMetadata:
      description: <p>Metadata related to the function package.</p> <p>A function
        package is a .zip file in CSAR (Cloud Service Archive) format that contains
        a network function (an ETSI standard telecommunication application) and function
        package descriptor that uses the TOSCA standard to describe how the network
        functions should run on your network.</p>
      example:
        createdAt: ""
        vnfd:
          overrides: ""
        lastModified: ""
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was created.
        lastModified:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was last modified.
        vnfd:
          $ref: '#/components/schemas/GetSolFunctionPackageMetadata_vnfd'
      required:
      - createdAt
      - lastModified
      type: object
    VnfOperationalState:
      enum:
      - STARTED
      - STOPPED
      type: string
    GetSolInstantiatedVnfInfo:
      description: "<p>Information about a network function.</p> <p>A network instance\
        \ is a single network created in Amazon Web Services TNB that can be deployed\
        \ and on which life-cycle operations (like terminate, update, and delete)\
        \ can be performed.</p>"
      properties:
        vnfState:
          allOf:
          - $ref: '#/components/schemas/VnfOperationalState'
          - description: State of the network function.
      type: object
    GetSolNetworkInstanceInput:
      properties: {}
      title: GetSolNetworkInstanceInput
      type: object
    GetSolNetworkInstanceMetadata:
      description: "<p>The metadata of a network instance.</p> <p>A network instance\
        \ is a single network created in Amazon Web Services TNB that can be deployed\
        \ and on which life-cycle operations (like terminate, update, and delete)\
        \ can be performed.</p>"
      example:
        createdAt: ""
        lastModified: ""
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was created.
        lastModified:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was last modified.
      required:
      - createdAt
      - lastModified
      type: object
    LcmOperationInfo:
      description: "<p>Lifecycle management operation details on the network instance.</p>\
        \ <p>Lifecycle management operations are deploy, update, or delete operations.</p>"
      example:
        nsLcmOpOccId: ""
      properties:
        nsLcmOpOccId:
          allOf:
          - $ref: '#/components/schemas/NsLcmOpOccId'
          - description: The identifier of the network operation.
      required:
      - nsLcmOpOccId
      type: object
    NsState:
      enum:
      - INSTANTIATED
      - NOT_INSTANTIATED
      - IMPAIRED
      - STOPPED
      - DELETED
      - INSTANTIATE_IN_PROGRESS
      - UPDATE_IN_PROGRESS
      - TERMINATE_IN_PROGRESS
      type: string
    NsdId:
      pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
      type: string
    GetSolNetworkOperationInput:
      properties: {}
      title: GetSolNetworkOperationInput
      type: object
    GetSolNetworkOperationMetadata:
      description: "<p>Metadata related to a network operation occurrence.</p> <p>A\
        \ network operation is any operation that is done to your network, such as\
        \ network instance instantiation or termination.</p>"
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was created.
        lastModified:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was last modified.
      required:
      - createdAt
      - lastModified
      type: object
    NsLcmOpOccArn:
      pattern: "^arn:(aws|aws-cn|aws-iso|aws-iso-b|aws-us-gov):tnb:([a-z]{2}(-(gov|isob|iso))?-(east|west|north|south|central){1,2}-[0-9]):\\\
        d{12}:(network-operation/no-[a-f0-9]{17})$"
      type: string
    ProblemDetails:
      description: Details related to problems with AWS TNB resources.
      properties:
        detail:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A human-readable explanation specific to this occurrence
              of the problem.
        title:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A human-readable title of the problem type.
      required:
      - detail
      type: object
    LcmOperationType:
      enum:
      - INSTANTIATE
      - UPDATE
      - TERMINATE
      type: string
    NsLcmOperationState:
      enum:
      - PROCESSING
      - COMPLETED
      - FAILED
      - CANCELLING
      - CANCELLED
      type: string
    GetSolNetworkOperationTasksList:
      items:
        $ref: '#/components/schemas/GetSolNetworkOperationTaskDetails'
      type: array
    StringMap:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    TaskStatus:
      enum:
      - SCHEDULED
      - STARTED
      - IN_PROGRESS
      - COMPLETED
      - ERROR
      - SKIPPED
      - CANCELLED
      type: string
    GetSolNetworkOperationTaskDetails:
      description: "<p>Gets the details of a network operation.</p> <p>A network operation\
        \ is any operation that is done to your network, such as network instance\
        \ instantiation or termination.</p>"
      properties:
        taskContext:
          allOf:
          - $ref: '#/components/schemas/StringMap'
          - description: Context for the network operation task.
        taskEndTime:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: Task end time.
        taskErrorDetails:
          $ref: '#/components/schemas/GetSolNetworkOperationTaskDetails_taskErrorDetails'
        taskName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Task name.
        taskStartTime:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: Task start time.
        taskStatus:
          allOf:
          - $ref: '#/components/schemas/TaskStatus'
          - description: Task status.
      type: object
    GetSolNetworkPackageContentInput:
      properties: {}
      title: GetSolNetworkPackageContentInput
      type: object
    GetSolNetworkPackageDescriptorInput:
      properties: {}
      title: GetSolNetworkPackageDescriptorInput
      type: object
    GetSolNetworkPackageInput:
      properties: {}
      title: GetSolNetworkPackageInput
      type: object
    NetworkArtifactMeta:
      description: <p>Metadata for network package artifacts.</p> <p>Artifacts are
        the contents of the package descriptor file and the state of the package.</p>
      example:
        overrides: ""
      properties:
        overrides:
          allOf:
          - $ref: '#/components/schemas/OverrideList'
          - description: Lists network package overrides.
      type: object
    GetSolNetworkPackageMetadata:
      description: <p>Metadata associated with a network package.</p> <p>A network
        package is a .zip file in CSAR (Cloud Service Archive) format defines the
        function packages you want to deploy and the Amazon Web Services infrastructure
        you want to deploy them on.</p>
      example:
        createdAt: ""
        lastModified: ""
        nsd:
          overrides: ""
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was created.
        lastModified:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was last modified.
        nsd:
          $ref: '#/components/schemas/GetSolNetworkPackageMetadata_nsd'
      required:
      - createdAt
      - lastModified
      type: object
    VnfPkgIdList:
      items:
        $ref: '#/components/schemas/VnfPkgId'
      type: array
    GetSolVnfcResourceInfoList:
      items:
        $ref: '#/components/schemas/GetSolVnfcResourceInfo'
      type: array
    GetSolVnfcResourceInfoMetadata:
      description: "<p>The metadata of a network function.</p> <p>A network instance\
        \ is a single network created in Amazon Web Services TNB that can be deployed\
        \ and on which life-cycle operations (like terminate, update, and delete)\
        \ can be performed.</p>"
      properties:
        cluster:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Information about the cluster.
        helmChart:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Information about the helm chart.
        nodeGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Information about the node group.
      type: object
    GetSolVnfcResourceInfo:
      description: "<p>Details of resource associated with a network function.</p>\
        \ <p>A network instance is a single network created in Amazon Web Services\
        \ TNB that can be deployed and on which life-cycle operations (like terminate,\
        \ update, and delete) can be performed.</p>"
      properties:
        metadata:
          $ref: '#/components/schemas/GetSolVnfcResourceInfo_metadata'
      type: object
    InstantiateSolNetworkInstanceInput:
      properties:
        additionalParamsForNs:
          allOf:
          - $ref: '#/components/schemas/Document'
          - description: Provides values for the configurable properties.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "A tag is a label that you assign to an Amazon Web Services\
              \ resource. Each tag consists of a key and an optional value. When you\
              \ use this API, the tags are transferred to the network operation that\
              \ is created. Use tags to search and filter your resources or track\
              \ your Amazon Web Services costs."
      title: InstantiateSolNetworkInstanceInput
      type: object
    ListSolFunctionInstanceMetadata:
      description: <p>Lists network function instance metadata.</p> <p>A network function
        instance is a function in a function package .</p>
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: When the network function instance was created.
        lastModified:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: When the network function instance was last modified.
      required:
      - createdAt
      - lastModified
      type: object
    ListSolFunctionInstanceInfo:
      description: <p>Lists information about a network function instance.</p> <p>A
        network function instance is a function in a function package .</p>
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/VnfInstanceArn'
          - description: Network function instance ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/VnfInstanceId'
          - description: Network function instance ID.
        instantiatedVnfInfo:
          $ref: '#/components/schemas/GetSolInstantiatedVnfInfo'
        instantiationState:
          allOf:
          - $ref: '#/components/schemas/VnfInstantiationState'
          - description: Network function instance instantiation state.
        metadata:
          $ref: '#/components/schemas/ListSolFunctionInstanceInfo_metadata'
        nsInstanceId:
          allOf:
          - $ref: '#/components/schemas/NsInstanceId'
          - description: Network instance ID.
        vnfPkgId:
          allOf:
          - $ref: '#/components/schemas/VnfPkgId'
          - description: Function package ID.
        vnfPkgName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Function package name.
      required:
      - arn
      - id
      - instantiationState
      - metadata
      - nsInstanceId
      - vnfPkgId
      type: object
    ListSolFunctionInstanceResources:
      items:
        $ref: '#/components/schemas/ListSolFunctionInstanceInfo'
      type: array
    ListSolFunctionInstancesInputMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    PaginationToken:
      type: string
    ListSolFunctionInstancesInput:
      properties: {}
      title: ListSolFunctionInstancesInput
      type: object
    ListSolFunctionPackageMetadata:
      description: <p>Details for the function package metadata.</p> <p>A function
        package is a .zip file in CSAR (Cloud Service Archive) format that contains
        a network function (an ETSI standard telecommunication application) and function
        package descriptor that uses the TOSCA standard to describe how the network
        functions should run on your network.</p>
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was created.
        lastModified:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was last modified.
      required:
      - createdAt
      - lastModified
      type: object
    ListSolFunctionPackageInfo:
      description: <p>Information about a function package.</p> <p>A function package
        is a .zip file in CSAR (Cloud Service Archive) format that contains a network
        function (an ETSI standard telecommunication application) and function package
        descriptor that uses the TOSCA standard to describe how the network functions
        should run on your network.</p>
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/VnfPkgArn'
          - description: Function package ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/VnfPkgId'
          - description: ID of the function package.
        metadata:
          $ref: '#/components/schemas/ListSolFunctionPackageInfo_metadata'
        onboardingState:
          allOf:
          - $ref: '#/components/schemas/OnboardingState'
          - description: Onboarding state of the function package.
        operationalState:
          allOf:
          - $ref: '#/components/schemas/OperationalState'
          - description: Operational state of the function package.
        usageState:
          allOf:
          - $ref: '#/components/schemas/UsageState'
          - description: Usage state of the function package.
        vnfProductName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The product name for the network function.
        vnfProvider:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provider of the function package and the function package
              descriptor.
        vnfdId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Identifies the function package and the function package
              descriptor.
        vnfdVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Identifies the version of the function package descriptor.
      required:
      - arn
      - id
      - onboardingState
      - operationalState
      - usageState
      type: object
    ListSolFunctionPackageResources:
      items:
        $ref: '#/components/schemas/ListSolFunctionPackageInfo'
      type: array
    ListSolFunctionPackagesInputMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    ListSolFunctionPackagesInput:
      properties: {}
      title: ListSolFunctionPackagesInput
      type: object
    ListSolNetworkInstanceMetadata:
      description: "<p>Metadata details for a network instance.</p> <p>A network instance\
        \ is a single network created in Amazon Web Services TNB that can be deployed\
        \ and on which life-cycle operations (like terminate, update, and delete)\
        \ can be performed.</p>"
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was created.
        lastModified:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was last modified.
      required:
      - createdAt
      - lastModified
      type: object
    ListSolNetworkInstanceInfo:
      description: "<p>Info about the specific network instance.</p> <p>A network\
        \ instance is a single network created in Amazon Web Services TNB that can\
        \ be deployed and on which life-cycle operations (like terminate, update,\
        \ and delete) can be performed.</p>"
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/NsInstanceArn'
          - description: Network instance ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/NsInstanceId'
          - description: ID of the network instance.
        metadata:
          $ref: '#/components/schemas/ListSolNetworkInstanceInfo_metadata'
        nsInstanceDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Human-readable description of the network instance.
        nsInstanceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Human-readable name of the network instance.
        nsState:
          allOf:
          - $ref: '#/components/schemas/NsState'
          - description: The state of the network instance.
        nsdId:
          allOf:
          - $ref: '#/components/schemas/NsdId'
          - description: ID of the network service descriptor in the network package.
        nsdInfoId:
          allOf:
          - $ref: '#/components/schemas/NsdInfoId'
          - description: ID of the network service descriptor in the network package.
      required:
      - arn
      - id
      - metadata
      - nsInstanceDescription
      - nsInstanceName
      - nsState
      - nsdId
      - nsdInfoId
      type: object
    ListSolNetworkInstanceResources:
      items:
        $ref: '#/components/schemas/ListSolNetworkInstanceInfo'
      type: array
    ListSolNetworkInstancesInputMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    ListSolNetworkInstancesInput:
      properties: {}
      title: ListSolNetworkInstancesInput
      type: object
    ListSolNetworkOperationsMetadata:
      description: "<p>Metadata related to a network operation.</p> <p>A network operation\
        \ is any operation that is done to your network, such as network instance\
        \ instantiation or termination.</p>"
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was created.
        lastModified:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was last modified.
      required:
      - createdAt
      - lastModified
      type: object
    ListSolNetworkOperationsInfo:
      description: Information parameters for a network operation.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/NsLcmOpOccArn'
          - description: Network operation ARN.
        error:
          $ref: '#/components/schemas/ListSolNetworkOperationsInfo_error'
        id:
          allOf:
          - $ref: '#/components/schemas/NsLcmOpOccId'
          - description: ID of this network operation.
        lcmOperationType:
          allOf:
          - $ref: '#/components/schemas/LcmOperationType'
          - description: Type of lifecycle management network operation.
        metadata:
          $ref: '#/components/schemas/ListSolNetworkOperationsInfo_metadata'
        nsInstanceId:
          allOf:
          - $ref: '#/components/schemas/NsInstanceId'
          - description: ID of the network instance related to this operation.
        operationState:
          allOf:
          - $ref: '#/components/schemas/NsLcmOperationState'
          - description: The state of the network operation.
      required:
      - arn
      - id
      - lcmOperationType
      - nsInstanceId
      - operationState
      type: object
    ListSolNetworkOperationsInputMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    ListSolNetworkOperationsInput:
      properties: {}
      title: ListSolNetworkOperationsInput
      type: object
    ListSolNetworkOperationsResources:
      items:
        $ref: '#/components/schemas/ListSolNetworkOperationsInfo'
      type: array
    ListSolNetworkPackageMetadata:
      description: <p>Metadata related to a network package.</p> <p>A network package
        is a .zip file in CSAR (Cloud Service Archive) format defines the function
        packages you want to deploy and the Amazon Web Services infrastructure you
        want to deploy them on.</p>
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was created.
        lastModified:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date that the resource was last modified.
      required:
      - createdAt
      - lastModified
      type: object
    ListSolNetworkPackageInfo:
      description: <p>Details of a network package.</p> <p>A network package is a
        .zip file in CSAR (Cloud Service Archive) format defines the function packages
        you want to deploy and the Amazon Web Services infrastructure you want to
        deploy them on.</p>
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/NsdInfoArn'
          - description: Network package ARN.
        id:
          allOf:
          - $ref: '#/components/schemas/NsdInfoId'
          - description: ID of the individual network package.
        metadata:
          $ref: '#/components/schemas/ListSolNetworkPackageInfo_metadata'
        nsdDesigner:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Designer of the onboarded network service descriptor in the
              network package.
        nsdId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ID of the network service descriptor on which the network
              package is based.
        nsdInvariantId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Identifies a network service descriptor in a version independent
              manner.
        nsdName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of the onboarded network service descriptor in the network
              package.
        nsdOnboardingState:
          allOf:
          - $ref: '#/components/schemas/NsdOnboardingState'
          - description: Onboarding state of the network service descriptor in the
              network package.
        nsdOperationalState:
          allOf:
          - $ref: '#/components/schemas/NsdOperationalState'
          - description: Operational state of the network service descriptor in the
              network package.
        nsdUsageState:
          allOf:
          - $ref: '#/components/schemas/NsdUsageState'
          - description: Usage state of the network service descriptor in the network
              package.
        nsdVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Version of the onboarded network service descriptor in the
              network package.
        vnfPkgIds:
          allOf:
          - $ref: '#/components/schemas/VnfPkgIdList'
          - description: Identifies the function package for the function package
              descriptor referenced by the onboarded network package.
      required:
      - arn
      - id
      - metadata
      - nsdOnboardingState
      - nsdOperationalState
      - nsdUsageState
      type: object
    ListSolNetworkPackageResources:
      items:
        $ref: '#/components/schemas/ListSolNetworkPackageInfo'
      type: array
    ListSolNetworkPackagesInputMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    ListSolNetworkPackagesInput:
      properties: {}
      title: ListSolNetworkPackagesInput
      type: object
    TNBResourceArn:
      pattern: "^arn:aws:tnb:[a-z0-9-]+:[^:]*:.*$"
      type: string
    ListTagsForResourceInput:
      properties: {}
      title: ListTagsForResourceInput
      type: object
    ToscaOverride:
      description: Overrides of the TOSCA node.
      properties:
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Default value for the override.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of the TOSCA override.
      type: object
    PutSolFunctionPackageContentInput:
      properties:
        file:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: Function package file.
      required:
      - file
      title: PutSolFunctionPackageContentInput
      type: object
    PutSolFunctionPackageContentMetadata:
      description: <p>Update metadata in a function package.</p> <p>A function package
        is a .zip file in CSAR (Cloud Service Archive) format that contains a network
        function (an ETSI standard telecommunication application) and function package
        descriptor that uses the TOSCA standard to describe how the network functions
        should run on your network.</p>
      properties:
        vnfd:
          $ref: '#/components/schemas/FunctionArtifactMeta'
      type: object
    PutSolNetworkPackageContentInput:
      properties:
        file:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: Network package file.
      required:
      - file
      title: PutSolNetworkPackageContentInput
      type: object
    PutSolNetworkPackageContentMetadata:
      description: <p>Update metadata in a network package.</p> <p>A network package
        is a .zip file in CSAR (Cloud Service Archive) format defines the function
        packages you want to deploy and the Amazon Web Services infrastructure you
        want to deploy them on.</p>
      properties:
        nsd:
          $ref: '#/components/schemas/NetworkArtifactMeta'
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TagResourceInput:
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A tag is a label that you assign to an Amazon Web Services
              resource. Each tag consists of a key and an optional value. You can
              use tags to search and filter your resources or track your Amazon Web
              Services costs.
      required:
      - tags
      title: TagResourceInput
      type: object
    TerminateSolNetworkInstanceInput:
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "A tag is a label that you assign to an Amazon Web Services\
              \ resource. Each tag consists of a key and an optional value. When you\
              \ use this API, the tags are transferred to the network operation that\
              \ is created. Use tags to search and filter your resources or track\
              \ your Amazon Web Services costs."
      title: TerminateSolNetworkInstanceInput
      type: object
    UntagResourceInput:
      properties: {}
      title: UntagResourceInput
      type: object
    UpdateSolFunctionPackageInput:
      properties:
        operationalState:
          allOf:
          - $ref: '#/components/schemas/OperationalState'
          - description: Operational state of the function package.
      required:
      - operationalState
      title: UpdateSolFunctionPackageInput
      type: object
    UpdateSolNetworkModify:
      description: <p>Information parameters and/or the configurable properties for
        a network function.</p> <p>A network function instance is a function in a
        function package .</p>
      properties:
        vnfConfigurableProperties:
          allOf:
          - $ref: '#/components/schemas/Document'
          - description: Provides values for the configurable properties declared
              in the function package descriptor.
        vnfInstanceId:
          allOf:
          - $ref: '#/components/schemas/VnfInstanceId'
          - description: <p>ID of the network function instance.</p> <p>A network
              function instance is a function in a function package .</p>
      required:
      - vnfConfigurableProperties
      - vnfInstanceId
      type: object
    UpdateSolNetworkType:
      enum:
      - MODIFY_VNF_INFORMATION
      type: string
    UpdateSolNetworkInstanceInput:
      properties:
        modifyVnfInfoData:
          $ref: '#/components/schemas/UpdateSolNetworkInstanceInput_modifyVnfInfoData'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "A tag is a label that you assign to an Amazon Web Services\
              \ resource. Each tag consists of a key and an optional value. When you\
              \ use this API, the tags are transferred to the network operation that\
              \ is created. Use tags to search and filter your resources or track\
              \ your Amazon Web Services costs."
        updateType:
          allOf:
          - $ref: '#/components/schemas/UpdateSolNetworkType'
          - description: The type of update.
      required:
      - updateType
      title: UpdateSolNetworkInstanceInput
      type: object
    UpdateSolNetworkPackageInput:
      properties:
        nsdOperationalState:
          allOf:
          - $ref: '#/components/schemas/NsdOperationalState'
          - description: Operational state of the network service descriptor in the
              network package.
      required:
      - nsdOperationalState
      title: UpdateSolNetworkPackageInput
      type: object
    ValidateSolFunctionPackageContentInput:
      properties:
        file:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: Function package file.
      required:
      - file
      title: ValidateSolFunctionPackageContentInput
      type: object
    ValidateSolFunctionPackageContentMetadata:
      description: <p>Validates function package content metadata.</p> <p>A function
        package is a .zip file in CSAR (Cloud Service Archive) format that contains
        a network function (an ETSI standard telecommunication application) and function
        package descriptor that uses the TOSCA standard to describe how the network
        functions should run on your network.</p>
      properties:
        vnfd:
          $ref: '#/components/schemas/FunctionArtifactMeta'
      type: object
    ValidateSolNetworkPackageContentInput:
      properties:
        file:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: Network package file.
      required:
      - file
      title: ValidateSolNetworkPackageContentInput
      type: object
    ValidateSolNetworkPackageContentMetadata:
      description: <p>Validates network package content metadata.</p> <p>A network
        package is a .zip file in CSAR (Cloud Service Archive) format defines the
        function packages you want to deploy and the Amazon Web Services infrastructure
        you want to deploy them on.</p>
      properties:
        nsd:
          $ref: '#/components/schemas/NetworkArtifactMeta'
      type: object
    CreateSolFunctionPackage_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A tag is a label that you assign to an Amazon Web Services
            resource. Each tag consists of a key and an optional value. You can use
            tags to search and filter your resources or track your Amazon Web Services
            costs.
          maxProperties: 200
          minProperties: 0
          type: object
      type: object
    CreateSolNetworkInstance_request:
      properties:
        nsDescription:
          description: Network instance description.
          maxLength: 255
          minLength: 0
          type: string
        nsName:
          description: Network instance name.
          maxLength: 100
          minLength: 1
          type: string
        nsdInfoId:
          description: ID for network service descriptor.
          pattern: "^np-[a-f0-9]{17}$"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A tag is a label that you assign to an Amazon Web Services
            resource. Each tag consists of a key and an optional value. You can use
            tags to search and filter your resources or track your Amazon Web Services
            costs.
          maxProperties: 200
          minProperties: 0
          type: object
      required:
      - nsName
      - nsdInfoId
      type: object
    UpdateSolFunctionPackage_request:
      properties:
        operationalState:
          description: Operational state of the function package.
          enum:
          - ENABLED
          - DISABLED
          type: string
      required:
      - operationalState
      type: object
    UpdateSolNetworkPackage_request:
      properties:
        nsdOperationalState:
          description: Operational state of the network service descriptor in the
            network package.
          enum:
          - ENABLED
          - DISABLED
          type: string
      required:
      - nsdOperationalState
      type: object
    InstantiateSolNetworkInstance_request:
      properties:
        additionalParamsForNs:
          description: Provides values for the configurable properties.
          properties: {}
          type: object
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "A tag is a label that you assign to an Amazon Web Services\
            \ resource. Each tag consists of a key and an optional value. When you\
            \ use this API, the tags are transferred to the network operation that\
            \ is created. Use tags to search and filter your resources or track your\
            \ Amazon Web Services costs."
          maxProperties: 200
          minProperties: 0
          type: object
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A tag is a label that you assign to an Amazon Web Services
            resource. Each tag consists of a key and an optional value. You can use
            tags to search and filter your resources or track your Amazon Web Services
            costs.
          maxProperties: 200
          minProperties: 0
          type: object
      required:
      - tags
      type: object
    PutSolFunctionPackageContent_request:
      properties:
        file:
          description: Function package file.
          type: string
      required:
      - file
      type: object
    PutSolNetworkPackageContent_request:
      properties:
        file:
          description: Network package file.
          type: string
      required:
      - file
      type: object
    TerminateSolNetworkInstance_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "A tag is a label that you assign to an Amazon Web Services\
            \ resource. Each tag consists of a key and an optional value. When you\
            \ use this API, the tags are transferred to the network operation that\
            \ is created. Use tags to search and filter your resources or track your\
            \ Amazon Web Services costs."
          maxProperties: 200
          minProperties: 0
          type: object
      type: object
    UpdateSolNetworkInstance_request_modifyVnfInfoData:
      description: <p>Information parameters and/or the configurable properties for
        a network function.</p> <p>A network function instance is a function in a
        function package .</p>
      properties:
        vnfConfigurableProperties:
          allOf:
          - $ref: '#/components/schemas/Document'
          - description: Provides values for the configurable properties declared
              in the function package descriptor.
        vnfInstanceId:
          allOf:
          - $ref: '#/components/schemas/VnfInstanceId'
          - description: <p>ID of the network function instance.</p> <p>A network
              function instance is a function in a function package .</p>
      type: object
    UpdateSolNetworkInstance_request:
      properties:
        modifyVnfInfoData:
          $ref: '#/components/schemas/UpdateSolNetworkInstance_request_modifyVnfInfoData'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "A tag is a label that you assign to an Amazon Web Services\
            \ resource. Each tag consists of a key and an optional value. When you\
            \ use this API, the tags are transferred to the network operation that\
            \ is created. Use tags to search and filter your resources or track your\
            \ Amazon Web Services costs."
          maxProperties: 200
          minProperties: 0
          type: object
        updateType:
          description: The type of update.
          enum:
          - MODIFY_VNF_INFORMATION
          type: string
      required:
      - updateType
      type: object
    GetSolNetworkOperationOutput_error:
      allOf:
      - $ref: '#/components/schemas/ProblemDetails'
      - description: Error related to this specific network operation occurrence.
      example:
        detail: ""
        title: ""
    GetSolNetworkOperationOutput_metadata:
      allOf:
      - $ref: '#/components/schemas/GetSolNetworkOperationMetadata'
      - description: Metadata of this network operation occurrence.
      example:
        createdAt: ""
        lastModified: ""
    PutSolFunctionPackageContentOutput_metadata:
      allOf:
      - $ref: '#/components/schemas/PutSolFunctionPackageContentMetadata'
      - description: Function package metadata.
      example:
        vnfd:
          overrides: ""
    PutSolNetworkPackageContentOutput_metadata:
      allOf:
      - $ref: '#/components/schemas/PutSolNetworkPackageContentMetadata'
      - description: Network package metadata.
      example:
        nsd:
          overrides: ""
    ValidateSolFunctionPackageContentOutput_metadata:
      allOf:
      - $ref: '#/components/schemas/ValidateSolFunctionPackageContentMetadata'
      - description: Function package metadata.
      example:
        vnfd:
          overrides: ""
    ValidateSolNetworkPackageContentOutput_metadata:
      allOf:
      - $ref: '#/components/schemas/ValidateSolNetworkPackageContentMetadata'
      - description: Network package metadata.
      example:
        nsd:
          overrides: ""
    GetSolFunctionPackageMetadata_vnfd:
      allOf:
      - $ref: '#/components/schemas/FunctionArtifactMeta'
      - description: Metadata related to the function package descriptor of the function
          package.
      example:
        overrides: ""
    GetSolNetworkOperationTaskDetails_taskErrorDetails:
      allOf:
      - $ref: '#/components/schemas/ErrorInfo'
      - description: Task error details.
    GetSolNetworkPackageMetadata_nsd:
      allOf:
      - $ref: '#/components/schemas/NetworkArtifactMeta'
      - description: Metadata related to the onboarded network service descriptor
          in the network package.
      example:
        overrides: ""
    GetSolVnfcResourceInfo_metadata:
      allOf:
      - $ref: '#/components/schemas/GetSolVnfcResourceInfoMetadata'
      - description: The metadata of the network function compute.
    ListSolFunctionInstanceInfo_metadata:
      allOf:
      - $ref: '#/components/schemas/ListSolFunctionInstanceMetadata'
      - description: Network function instance metadata.
    ListSolFunctionPackageInfo_metadata:
      allOf:
      - $ref: '#/components/schemas/ListSolFunctionPackageMetadata'
      - description: The metadata of the function package.
    ListSolNetworkInstanceInfo_metadata:
      allOf:
      - $ref: '#/components/schemas/ListSolNetworkInstanceMetadata'
      - description: The metadata of the network instance.
    ListSolNetworkOperationsInfo_error:
      allOf:
      - $ref: '#/components/schemas/ProblemDetails'
      - description: Error related to this specific network operation.
    ListSolNetworkOperationsInfo_metadata:
      allOf:
      - $ref: '#/components/schemas/ListSolNetworkOperationsMetadata'
      - description: Metadata related to this network operation.
    ListSolNetworkPackageInfo_metadata:
      allOf:
      - $ref: '#/components/schemas/ListSolNetworkPackageMetadata'
      - description: The metadata of the network package.
    UpdateSolNetworkInstanceInput_modifyVnfInfoData:
      allOf:
      - $ref: '#/components/schemas/UpdateSolNetworkModify'
      - description: Identifies the network function information parameters and/or
          the configurable properties of the network function to be modified.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

