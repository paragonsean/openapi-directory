/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetSolVnfcResourceInfoMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetSolVnfcResourceInfoMetadata::OAIGetSolVnfcResourceInfoMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetSolVnfcResourceInfoMetadata::OAIGetSolVnfcResourceInfoMetadata() {
    this->initializeModel();
}

OAIGetSolVnfcResourceInfoMetadata::~OAIGetSolVnfcResourceInfoMetadata() {}

void OAIGetSolVnfcResourceInfoMetadata::initializeModel() {

    m_cluster_isSet = false;
    m_cluster_isValid = false;

    m_helm_chart_isSet = false;
    m_helm_chart_isValid = false;

    m_node_group_isSet = false;
    m_node_group_isValid = false;
}

void OAIGetSolVnfcResourceInfoMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetSolVnfcResourceInfoMetadata::fromJsonObject(QJsonObject json) {

    m_cluster_isValid = ::OpenAPI::fromJsonValue(m_cluster, json[QString("cluster")]);
    m_cluster_isSet = !json[QString("cluster")].isNull() && m_cluster_isValid;

    m_helm_chart_isValid = ::OpenAPI::fromJsonValue(m_helm_chart, json[QString("helmChart")]);
    m_helm_chart_isSet = !json[QString("helmChart")].isNull() && m_helm_chart_isValid;

    m_node_group_isValid = ::OpenAPI::fromJsonValue(m_node_group, json[QString("nodeGroup")]);
    m_node_group_isSet = !json[QString("nodeGroup")].isNull() && m_node_group_isValid;
}

QString OAIGetSolVnfcResourceInfoMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetSolVnfcResourceInfoMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_cluster_isSet) {
        obj.insert(QString("cluster"), ::OpenAPI::toJsonValue(m_cluster));
    }
    if (m_helm_chart_isSet) {
        obj.insert(QString("helmChart"), ::OpenAPI::toJsonValue(m_helm_chart));
    }
    if (m_node_group_isSet) {
        obj.insert(QString("nodeGroup"), ::OpenAPI::toJsonValue(m_node_group));
    }
    return obj;
}

QString OAIGetSolVnfcResourceInfoMetadata::getCluster() const {
    return m_cluster;
}
void OAIGetSolVnfcResourceInfoMetadata::setCluster(const QString &cluster) {
    m_cluster = cluster;
    m_cluster_isSet = true;
}

bool OAIGetSolVnfcResourceInfoMetadata::is_cluster_Set() const{
    return m_cluster_isSet;
}

bool OAIGetSolVnfcResourceInfoMetadata::is_cluster_Valid() const{
    return m_cluster_isValid;
}

QString OAIGetSolVnfcResourceInfoMetadata::getHelmChart() const {
    return m_helm_chart;
}
void OAIGetSolVnfcResourceInfoMetadata::setHelmChart(const QString &helm_chart) {
    m_helm_chart = helm_chart;
    m_helm_chart_isSet = true;
}

bool OAIGetSolVnfcResourceInfoMetadata::is_helm_chart_Set() const{
    return m_helm_chart_isSet;
}

bool OAIGetSolVnfcResourceInfoMetadata::is_helm_chart_Valid() const{
    return m_helm_chart_isValid;
}

QString OAIGetSolVnfcResourceInfoMetadata::getNodeGroup() const {
    return m_node_group;
}
void OAIGetSolVnfcResourceInfoMetadata::setNodeGroup(const QString &node_group) {
    m_node_group = node_group;
    m_node_group_isSet = true;
}

bool OAIGetSolVnfcResourceInfoMetadata::is_node_group_Set() const{
    return m_node_group_isSet;
}

bool OAIGetSolVnfcResourceInfoMetadata::is_node_group_Valid() const{
    return m_node_group_isValid;
}

bool OAIGetSolVnfcResourceInfoMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cluster_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_helm_chart_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_group_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetSolVnfcResourceInfoMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
