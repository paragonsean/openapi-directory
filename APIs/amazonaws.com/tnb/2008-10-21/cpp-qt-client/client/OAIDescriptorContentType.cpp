/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescriptorContentType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescriptorContentType::OAIDescriptorContentType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescriptorContentType::OAIDescriptorContentType() {
    this->initializeModel();
}

OAIDescriptorContentType::~OAIDescriptorContentType() {}

void OAIDescriptorContentType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDescriptorContentType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDescriptorContentType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("text/plain", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDescriptorContentType::TEXT_PLAIN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDescriptorContentType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDescriptorContentType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDescriptorContentType::TEXT_PLAIN:
            val = "text/plain";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDescriptorContentType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDescriptorContentType::eOAIDescriptorContentType OAIDescriptorContentType::getValue() const {
    return m_value;
}

void OAIDescriptorContentType::setValue(const OAIDescriptorContentType::eOAIDescriptorContentType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDescriptorContentType::isSet() const {
    
    return m_value_isSet;
}

bool OAIDescriptorContentType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
