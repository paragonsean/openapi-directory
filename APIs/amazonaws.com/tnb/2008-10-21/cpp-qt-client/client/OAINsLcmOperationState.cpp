/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINsLcmOperationState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINsLcmOperationState::OAINsLcmOperationState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINsLcmOperationState::OAINsLcmOperationState() {
    this->initializeModel();
}

OAINsLcmOperationState::~OAINsLcmOperationState() {}

void OAINsLcmOperationState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAINsLcmOperationState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAINsLcmOperationState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PROCESSING", Qt::CaseInsensitive) == 0) {
        m_value = eOAINsLcmOperationState::PROCESSING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAINsLcmOperationState::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAINsLcmOperationState::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CANCELLING", Qt::CaseInsensitive) == 0) {
        m_value = eOAINsLcmOperationState::CANCELLING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CANCELLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAINsLcmOperationState::CANCELLED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAINsLcmOperationState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAINsLcmOperationState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAINsLcmOperationState::PROCESSING:
            val = "PROCESSING";
            break;
        case eOAINsLcmOperationState::COMPLETED:
            val = "COMPLETED";
            break;
        case eOAINsLcmOperationState::FAILED:
            val = "FAILED";
            break;
        case eOAINsLcmOperationState::CANCELLING:
            val = "CANCELLING";
            break;
        case eOAINsLcmOperationState::CANCELLED:
            val = "CANCELLED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAINsLcmOperationState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAINsLcmOperationState::eOAINsLcmOperationState OAINsLcmOperationState::getValue() const {
    return m_value;
}

void OAINsLcmOperationState::setValue(const OAINsLcmOperationState::eOAINsLcmOperationState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAINsLcmOperationState::isSet() const {
    
    return m_value_isSet;
}

bool OAINsLcmOperationState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
