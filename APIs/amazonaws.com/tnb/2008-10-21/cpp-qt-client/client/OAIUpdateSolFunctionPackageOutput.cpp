/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSolFunctionPackageOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSolFunctionPackageOutput::OAIUpdateSolFunctionPackageOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSolFunctionPackageOutput::OAIUpdateSolFunctionPackageOutput() {
    this->initializeModel();
}

OAIUpdateSolFunctionPackageOutput::~OAIUpdateSolFunctionPackageOutput() {}

void OAIUpdateSolFunctionPackageOutput::initializeModel() {

    m_operational_state_isSet = false;
    m_operational_state_isValid = false;
}

void OAIUpdateSolFunctionPackageOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSolFunctionPackageOutput::fromJsonObject(QJsonObject json) {

    m_operational_state_isValid = ::OpenAPI::fromJsonValue(m_operational_state, json[QString("operationalState")]);
    m_operational_state_isSet = !json[QString("operationalState")].isNull() && m_operational_state_isValid;
}

QString OAIUpdateSolFunctionPackageOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSolFunctionPackageOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_operational_state.isSet()) {
        obj.insert(QString("operationalState"), ::OpenAPI::toJsonValue(m_operational_state));
    }
    return obj;
}

OAIOperationalState OAIUpdateSolFunctionPackageOutput::getOperationalState() const {
    return m_operational_state;
}
void OAIUpdateSolFunctionPackageOutput::setOperationalState(const OAIOperationalState &operational_state) {
    m_operational_state = operational_state;
    m_operational_state_isSet = true;
}

bool OAIUpdateSolFunctionPackageOutput::is_operational_state_Set() const{
    return m_operational_state_isSet;
}

bool OAIUpdateSolFunctionPackageOutput::is_operational_state_Valid() const{
    return m_operational_state_isValid;
}

bool OAIUpdateSolFunctionPackageOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operational_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSolFunctionPackageOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_operational_state_isValid && true;
}

} // namespace OpenAPI
