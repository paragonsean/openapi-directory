/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetSolNetworkOperationTaskDetails_taskErrorDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::OAIGetSolNetworkOperationTaskDetails_taskErrorDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::OAIGetSolNetworkOperationTaskDetails_taskErrorDetails() {
    this->initializeModel();
}

OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::~OAIGetSolNetworkOperationTaskDetails_taskErrorDetails() {}

void OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::initializeModel() {

    m_cause_isSet = false;
    m_cause_isValid = false;

    m_details_isSet = false;
    m_details_isValid = false;
}

void OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::fromJsonObject(QJsonObject json) {

    m_cause_isValid = ::OpenAPI::fromJsonValue(m_cause, json[QString("cause")]);
    m_cause_isSet = !json[QString("cause")].isNull() && m_cause_isValid;

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("details")]);
    m_details_isSet = !json[QString("details")].isNull() && m_details_isValid;
}

QString OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_cause_isSet) {
        obj.insert(QString("cause"), ::OpenAPI::toJsonValue(m_cause));
    }
    if (m_details_isSet) {
        obj.insert(QString("details"), ::OpenAPI::toJsonValue(m_details));
    }
    return obj;
}

QString OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::getCause() const {
    return m_cause;
}
void OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::setCause(const QString &cause) {
    m_cause = cause;
    m_cause_isSet = true;
}

bool OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::is_cause_Set() const{
    return m_cause_isSet;
}

bool OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::is_cause_Valid() const{
    return m_cause_isValid;
}

QString OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::getDetails() const {
    return m_details;
}
void OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::setDetails(const QString &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::is_details_Set() const{
    return m_details_isSet;
}

bool OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::is_details_Valid() const{
    return m_details_isValid;
}

bool OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cause_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_details_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetSolNetworkOperationTaskDetails_taskErrorDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
