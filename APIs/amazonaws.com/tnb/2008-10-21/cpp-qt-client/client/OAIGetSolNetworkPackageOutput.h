/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetSolNetworkPackageOutput.h
 *
 * 
 */

#ifndef OAIGetSolNetworkPackageOutput_H
#define OAIGetSolNetworkPackageOutput_H

#include <QJsonObject>

#include "OAIGetSolNetworkPackageMetadata.h"
#include "OAINsdOnboardingState.h"
#include "OAINsdOperationalState.h"
#include "OAINsdUsageState.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetSolNetworkPackageMetadata;

class OAIGetSolNetworkPackageOutput : public OAIObject {
public:
    OAIGetSolNetworkPackageOutput();
    OAIGetSolNetworkPackageOutput(QString json);
    ~OAIGetSolNetworkPackageOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIGetSolNetworkPackageMetadata getMetadata() const;
    void setMetadata(const OAIGetSolNetworkPackageMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getNsdId() const;
    void setNsdId(const QString &nsd_id);
    bool is_nsd_id_Set() const;
    bool is_nsd_id_Valid() const;

    QString getNsdName() const;
    void setNsdName(const QString &nsd_name);
    bool is_nsd_name_Set() const;
    bool is_nsd_name_Valid() const;

    OAINsdOnboardingState getNsdOnboardingState() const;
    void setNsdOnboardingState(const OAINsdOnboardingState &nsd_onboarding_state);
    bool is_nsd_onboarding_state_Set() const;
    bool is_nsd_onboarding_state_Valid() const;

    OAINsdOperationalState getNsdOperationalState() const;
    void setNsdOperationalState(const OAINsdOperationalState &nsd_operational_state);
    bool is_nsd_operational_state_Set() const;
    bool is_nsd_operational_state_Valid() const;

    OAINsdUsageState getNsdUsageState() const;
    void setNsdUsageState(const OAINsdUsageState &nsd_usage_state);
    bool is_nsd_usage_state_Set() const;
    bool is_nsd_usage_state_Valid() const;

    QString getNsdVersion() const;
    void setNsdVersion(const QString &nsd_version);
    bool is_nsd_version_Set() const;
    bool is_nsd_version_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QList getVnfPkgIds() const;
    void setVnfPkgIds(const QList &vnf_pkg_ids);
    bool is_vnf_pkg_ids_Set() const;
    bool is_vnf_pkg_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIGetSolNetworkPackageMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_nsd_id;
    bool m_nsd_id_isSet;
    bool m_nsd_id_isValid;

    QString m_nsd_name;
    bool m_nsd_name_isSet;
    bool m_nsd_name_isValid;

    OAINsdOnboardingState m_nsd_onboarding_state;
    bool m_nsd_onboarding_state_isSet;
    bool m_nsd_onboarding_state_isValid;

    OAINsdOperationalState m_nsd_operational_state;
    bool m_nsd_operational_state_isSet;
    bool m_nsd_operational_state_isValid;

    OAINsdUsageState m_nsd_usage_state;
    bool m_nsd_usage_state_isSet;
    bool m_nsd_usage_state_isValid;

    QString m_nsd_version;
    bool m_nsd_version_isSet;
    bool m_nsd_version_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QList m_vnf_pkg_ids;
    bool m_vnf_pkg_ids_isSet;
    bool m_vnf_pkg_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetSolNetworkPackageOutput)

#endif // OAIGetSolNetworkPackageOutput_H
