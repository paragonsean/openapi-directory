/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListSolFunctionInstanceInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListSolFunctionInstanceInfo::OAIListSolFunctionInstanceInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListSolFunctionInstanceInfo::OAIListSolFunctionInstanceInfo() {
    this->initializeModel();
}

OAIListSolFunctionInstanceInfo::~OAIListSolFunctionInstanceInfo() {}

void OAIListSolFunctionInstanceInfo::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_instantiated_vnf_info_isSet = false;
    m_instantiated_vnf_info_isValid = false;

    m_instantiation_state_isSet = false;
    m_instantiation_state_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_ns_instance_id_isSet = false;
    m_ns_instance_id_isValid = false;

    m_vnf_pkg_id_isSet = false;
    m_vnf_pkg_id_isValid = false;

    m_vnf_pkg_name_isSet = false;
    m_vnf_pkg_name_isValid = false;
}

void OAIListSolFunctionInstanceInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListSolFunctionInstanceInfo::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_instantiated_vnf_info_isValid = ::OpenAPI::fromJsonValue(m_instantiated_vnf_info, json[QString("instantiatedVnfInfo")]);
    m_instantiated_vnf_info_isSet = !json[QString("instantiatedVnfInfo")].isNull() && m_instantiated_vnf_info_isValid;

    m_instantiation_state_isValid = ::OpenAPI::fromJsonValue(m_instantiation_state, json[QString("instantiationState")]);
    m_instantiation_state_isSet = !json[QString("instantiationState")].isNull() && m_instantiation_state_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_ns_instance_id_isValid = ::OpenAPI::fromJsonValue(m_ns_instance_id, json[QString("nsInstanceId")]);
    m_ns_instance_id_isSet = !json[QString("nsInstanceId")].isNull() && m_ns_instance_id_isValid;

    m_vnf_pkg_id_isValid = ::OpenAPI::fromJsonValue(m_vnf_pkg_id, json[QString("vnfPkgId")]);
    m_vnf_pkg_id_isSet = !json[QString("vnfPkgId")].isNull() && m_vnf_pkg_id_isValid;

    m_vnf_pkg_name_isValid = ::OpenAPI::fromJsonValue(m_vnf_pkg_name, json[QString("vnfPkgName")]);
    m_vnf_pkg_name_isSet = !json[QString("vnfPkgName")].isNull() && m_vnf_pkg_name_isValid;
}

QString OAIListSolFunctionInstanceInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListSolFunctionInstanceInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_instantiated_vnf_info.isSet()) {
        obj.insert(QString("instantiatedVnfInfo"), ::OpenAPI::toJsonValue(m_instantiated_vnf_info));
    }
    if (m_instantiation_state.isSet()) {
        obj.insert(QString("instantiationState"), ::OpenAPI::toJsonValue(m_instantiation_state));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_ns_instance_id_isSet) {
        obj.insert(QString("nsInstanceId"), ::OpenAPI::toJsonValue(m_ns_instance_id));
    }
    if (m_vnf_pkg_id_isSet) {
        obj.insert(QString("vnfPkgId"), ::OpenAPI::toJsonValue(m_vnf_pkg_id));
    }
    if (m_vnf_pkg_name_isSet) {
        obj.insert(QString("vnfPkgName"), ::OpenAPI::toJsonValue(m_vnf_pkg_name));
    }
    return obj;
}

QString OAIListSolFunctionInstanceInfo::getArn() const {
    return m_arn;
}
void OAIListSolFunctionInstanceInfo::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIListSolFunctionInstanceInfo::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIListSolFunctionInstanceInfo::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIListSolFunctionInstanceInfo::getId() const {
    return m_id;
}
void OAIListSolFunctionInstanceInfo::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIListSolFunctionInstanceInfo::is_id_Set() const{
    return m_id_isSet;
}

bool OAIListSolFunctionInstanceInfo::is_id_Valid() const{
    return m_id_isValid;
}

OAIGetSolInstantiatedVnfInfo OAIListSolFunctionInstanceInfo::getInstantiatedVnfInfo() const {
    return m_instantiated_vnf_info;
}
void OAIListSolFunctionInstanceInfo::setInstantiatedVnfInfo(const OAIGetSolInstantiatedVnfInfo &instantiated_vnf_info) {
    m_instantiated_vnf_info = instantiated_vnf_info;
    m_instantiated_vnf_info_isSet = true;
}

bool OAIListSolFunctionInstanceInfo::is_instantiated_vnf_info_Set() const{
    return m_instantiated_vnf_info_isSet;
}

bool OAIListSolFunctionInstanceInfo::is_instantiated_vnf_info_Valid() const{
    return m_instantiated_vnf_info_isValid;
}

OAIVnfInstantiationState OAIListSolFunctionInstanceInfo::getInstantiationState() const {
    return m_instantiation_state;
}
void OAIListSolFunctionInstanceInfo::setInstantiationState(const OAIVnfInstantiationState &instantiation_state) {
    m_instantiation_state = instantiation_state;
    m_instantiation_state_isSet = true;
}

bool OAIListSolFunctionInstanceInfo::is_instantiation_state_Set() const{
    return m_instantiation_state_isSet;
}

bool OAIListSolFunctionInstanceInfo::is_instantiation_state_Valid() const{
    return m_instantiation_state_isValid;
}

OAIListSolFunctionInstanceInfo_metadata OAIListSolFunctionInstanceInfo::getMetadata() const {
    return m_metadata;
}
void OAIListSolFunctionInstanceInfo::setMetadata(const OAIListSolFunctionInstanceInfo_metadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIListSolFunctionInstanceInfo::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIListSolFunctionInstanceInfo::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIListSolFunctionInstanceInfo::getNsInstanceId() const {
    return m_ns_instance_id;
}
void OAIListSolFunctionInstanceInfo::setNsInstanceId(const QString &ns_instance_id) {
    m_ns_instance_id = ns_instance_id;
    m_ns_instance_id_isSet = true;
}

bool OAIListSolFunctionInstanceInfo::is_ns_instance_id_Set() const{
    return m_ns_instance_id_isSet;
}

bool OAIListSolFunctionInstanceInfo::is_ns_instance_id_Valid() const{
    return m_ns_instance_id_isValid;
}

QString OAIListSolFunctionInstanceInfo::getVnfPkgId() const {
    return m_vnf_pkg_id;
}
void OAIListSolFunctionInstanceInfo::setVnfPkgId(const QString &vnf_pkg_id) {
    m_vnf_pkg_id = vnf_pkg_id;
    m_vnf_pkg_id_isSet = true;
}

bool OAIListSolFunctionInstanceInfo::is_vnf_pkg_id_Set() const{
    return m_vnf_pkg_id_isSet;
}

bool OAIListSolFunctionInstanceInfo::is_vnf_pkg_id_Valid() const{
    return m_vnf_pkg_id_isValid;
}

QString OAIListSolFunctionInstanceInfo::getVnfPkgName() const {
    return m_vnf_pkg_name;
}
void OAIListSolFunctionInstanceInfo::setVnfPkgName(const QString &vnf_pkg_name) {
    m_vnf_pkg_name = vnf_pkg_name;
    m_vnf_pkg_name_isSet = true;
}

bool OAIListSolFunctionInstanceInfo::is_vnf_pkg_name_Set() const{
    return m_vnf_pkg_name_isSet;
}

bool OAIListSolFunctionInstanceInfo::is_vnf_pkg_name_Valid() const{
    return m_vnf_pkg_name_isValid;
}

bool OAIListSolFunctionInstanceInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instantiated_vnf_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_instantiation_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ns_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vnf_pkg_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vnf_pkg_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListSolFunctionInstanceInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_arn_isValid && m_id_isValid && m_instantiation_state_isValid && m_metadata_isValid && m_ns_instance_id_isValid && m_vnf_pkg_id_isValid && true;
}

} // namespace OpenAPI
