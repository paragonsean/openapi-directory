/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutSolNetworkPackageContentOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutSolNetworkPackageContentOutput::OAIPutSolNetworkPackageContentOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutSolNetworkPackageContentOutput::OAIPutSolNetworkPackageContentOutput() {
    this->initializeModel();
}

OAIPutSolNetworkPackageContentOutput::~OAIPutSolNetworkPackageContentOutput() {}

void OAIPutSolNetworkPackageContentOutput::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_nsd_id_isSet = false;
    m_nsd_id_isValid = false;

    m_nsd_name_isSet = false;
    m_nsd_name_isValid = false;

    m_nsd_version_isSet = false;
    m_nsd_version_isValid = false;

    m_vnf_pkg_ids_isSet = false;
    m_vnf_pkg_ids_isValid = false;
}

void OAIPutSolNetworkPackageContentOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutSolNetworkPackageContentOutput::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_nsd_id_isValid = ::OpenAPI::fromJsonValue(m_nsd_id, json[QString("nsdId")]);
    m_nsd_id_isSet = !json[QString("nsdId")].isNull() && m_nsd_id_isValid;

    m_nsd_name_isValid = ::OpenAPI::fromJsonValue(m_nsd_name, json[QString("nsdName")]);
    m_nsd_name_isSet = !json[QString("nsdName")].isNull() && m_nsd_name_isValid;

    m_nsd_version_isValid = ::OpenAPI::fromJsonValue(m_nsd_version, json[QString("nsdVersion")]);
    m_nsd_version_isSet = !json[QString("nsdVersion")].isNull() && m_nsd_version_isValid;

    m_vnf_pkg_ids_isValid = ::OpenAPI::fromJsonValue(m_vnf_pkg_ids, json[QString("vnfPkgIds")]);
    m_vnf_pkg_ids_isSet = !json[QString("vnfPkgIds")].isNull() && m_vnf_pkg_ids_isValid;
}

QString OAIPutSolNetworkPackageContentOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutSolNetworkPackageContentOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_nsd_id_isSet) {
        obj.insert(QString("nsdId"), ::OpenAPI::toJsonValue(m_nsd_id));
    }
    if (m_nsd_name_isSet) {
        obj.insert(QString("nsdName"), ::OpenAPI::toJsonValue(m_nsd_name));
    }
    if (m_nsd_version_isSet) {
        obj.insert(QString("nsdVersion"), ::OpenAPI::toJsonValue(m_nsd_version));
    }
    if (m_vnf_pkg_ids.isSet()) {
        obj.insert(QString("vnfPkgIds"), ::OpenAPI::toJsonValue(m_vnf_pkg_ids));
    }
    return obj;
}

QString OAIPutSolNetworkPackageContentOutput::getArn() const {
    return m_arn;
}
void OAIPutSolNetworkPackageContentOutput::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIPutSolNetworkPackageContentOutput::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIPutSolNetworkPackageContentOutput::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIPutSolNetworkPackageContentOutput::getId() const {
    return m_id;
}
void OAIPutSolNetworkPackageContentOutput::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPutSolNetworkPackageContentOutput::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPutSolNetworkPackageContentOutput::is_id_Valid() const{
    return m_id_isValid;
}

OAIPutSolNetworkPackageContentOutput_metadata OAIPutSolNetworkPackageContentOutput::getMetadata() const {
    return m_metadata;
}
void OAIPutSolNetworkPackageContentOutput::setMetadata(const OAIPutSolNetworkPackageContentOutput_metadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIPutSolNetworkPackageContentOutput::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIPutSolNetworkPackageContentOutput::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIPutSolNetworkPackageContentOutput::getNsdId() const {
    return m_nsd_id;
}
void OAIPutSolNetworkPackageContentOutput::setNsdId(const QString &nsd_id) {
    m_nsd_id = nsd_id;
    m_nsd_id_isSet = true;
}

bool OAIPutSolNetworkPackageContentOutput::is_nsd_id_Set() const{
    return m_nsd_id_isSet;
}

bool OAIPutSolNetworkPackageContentOutput::is_nsd_id_Valid() const{
    return m_nsd_id_isValid;
}

QString OAIPutSolNetworkPackageContentOutput::getNsdName() const {
    return m_nsd_name;
}
void OAIPutSolNetworkPackageContentOutput::setNsdName(const QString &nsd_name) {
    m_nsd_name = nsd_name;
    m_nsd_name_isSet = true;
}

bool OAIPutSolNetworkPackageContentOutput::is_nsd_name_Set() const{
    return m_nsd_name_isSet;
}

bool OAIPutSolNetworkPackageContentOutput::is_nsd_name_Valid() const{
    return m_nsd_name_isValid;
}

QString OAIPutSolNetworkPackageContentOutput::getNsdVersion() const {
    return m_nsd_version;
}
void OAIPutSolNetworkPackageContentOutput::setNsdVersion(const QString &nsd_version) {
    m_nsd_version = nsd_version;
    m_nsd_version_isSet = true;
}

bool OAIPutSolNetworkPackageContentOutput::is_nsd_version_Set() const{
    return m_nsd_version_isSet;
}

bool OAIPutSolNetworkPackageContentOutput::is_nsd_version_Valid() const{
    return m_nsd_version_isValid;
}

QList OAIPutSolNetworkPackageContentOutput::getVnfPkgIds() const {
    return m_vnf_pkg_ids;
}
void OAIPutSolNetworkPackageContentOutput::setVnfPkgIds(const QList &vnf_pkg_ids) {
    m_vnf_pkg_ids = vnf_pkg_ids;
    m_vnf_pkg_ids_isSet = true;
}

bool OAIPutSolNetworkPackageContentOutput::is_vnf_pkg_ids_Set() const{
    return m_vnf_pkg_ids_isSet;
}

bool OAIPutSolNetworkPackageContentOutput::is_vnf_pkg_ids_Valid() const{
    return m_vnf_pkg_ids_isValid;
}

bool OAIPutSolNetworkPackageContentOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_nsd_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nsd_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nsd_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vnf_pkg_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutSolNetworkPackageContentOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_arn_isValid && m_id_isValid && m_metadata_isValid && m_nsd_id_isValid && m_nsd_name_isValid && m_nsd_version_isValid && m_vnf_pkg_ids_isValid && true;
}

} // namespace OpenAPI
