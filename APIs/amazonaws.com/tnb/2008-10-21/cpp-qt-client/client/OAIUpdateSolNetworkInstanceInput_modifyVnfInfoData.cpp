/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData() {
    this->initializeModel();
}

OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::~OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData() {}

void OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::initializeModel() {

    m_vnf_configurable_properties_isSet = false;
    m_vnf_configurable_properties_isValid = false;

    m_vnf_instance_id_isSet = false;
    m_vnf_instance_id_isValid = false;
}

void OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::fromJsonObject(QJsonObject json) {

    m_vnf_configurable_properties_isValid = ::OpenAPI::fromJsonValue(m_vnf_configurable_properties, json[QString("vnfConfigurableProperties")]);
    m_vnf_configurable_properties_isSet = !json[QString("vnfConfigurableProperties")].isNull() && m_vnf_configurable_properties_isValid;

    m_vnf_instance_id_isValid = ::OpenAPI::fromJsonValue(m_vnf_instance_id, json[QString("vnfInstanceId")]);
    m_vnf_instance_id_isSet = !json[QString("vnfInstanceId")].isNull() && m_vnf_instance_id_isValid;
}

QString OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::asJsonObject() const {
    QJsonObject obj;
    if (m_vnf_configurable_properties.isSet()) {
        obj.insert(QString("vnfConfigurableProperties"), ::OpenAPI::toJsonValue(m_vnf_configurable_properties));
    }
    if (m_vnf_instance_id_isSet) {
        obj.insert(QString("vnfInstanceId"), ::OpenAPI::toJsonValue(m_vnf_instance_id));
    }
    return obj;
}

OAIObject OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::getVnfConfigurableProperties() const {
    return m_vnf_configurable_properties;
}
void OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::setVnfConfigurableProperties(const OAIObject &vnf_configurable_properties) {
    m_vnf_configurable_properties = vnf_configurable_properties;
    m_vnf_configurable_properties_isSet = true;
}

bool OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::is_vnf_configurable_properties_Set() const{
    return m_vnf_configurable_properties_isSet;
}

bool OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::is_vnf_configurable_properties_Valid() const{
    return m_vnf_configurable_properties_isValid;
}

QString OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::getVnfInstanceId() const {
    return m_vnf_instance_id;
}
void OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::setVnfInstanceId(const QString &vnf_instance_id) {
    m_vnf_instance_id = vnf_instance_id;
    m_vnf_instance_id_isSet = true;
}

bool OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::is_vnf_instance_id_Set() const{
    return m_vnf_instance_id_isSet;
}

bool OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::is_vnf_instance_id_Valid() const{
    return m_vnf_instance_id_isValid;
}

bool OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vnf_configurable_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vnf_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSolNetworkInstanceInput_modifyVnfInfoData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_vnf_configurable_properties_isValid && m_vnf_instance_id_isValid && true;
}

} // namespace OpenAPI
