/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetSolNetworkOperationTaskDetails.h
 *
 * &lt;p&gt;Gets the details of a network operation.&lt;/p&gt; &lt;p&gt;A network operation is any operation that is done to your network, such as network instance instantiation or termination.&lt;/p&gt;
 */

#ifndef OAIGetSolNetworkOperationTaskDetails_H
#define OAIGetSolNetworkOperationTaskDetails_H

#include <QJsonObject>

#include "OAIGetSolNetworkOperationTaskDetails_taskErrorDetails.h"
#include "OAITaskStatus.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetSolNetworkOperationTaskDetails_taskErrorDetails;

class OAIGetSolNetworkOperationTaskDetails : public OAIObject {
public:
    OAIGetSolNetworkOperationTaskDetails();
    OAIGetSolNetworkOperationTaskDetails(QString json);
    ~OAIGetSolNetworkOperationTaskDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap getTaskContext() const;
    void setTaskContext(const QMap &task_context);
    bool is_task_context_Set() const;
    bool is_task_context_Valid() const;

    QDateTime getTaskEndTime() const;
    void setTaskEndTime(const QDateTime &task_end_time);
    bool is_task_end_time_Set() const;
    bool is_task_end_time_Valid() const;

    OAIGetSolNetworkOperationTaskDetails_taskErrorDetails getTaskErrorDetails() const;
    void setTaskErrorDetails(const OAIGetSolNetworkOperationTaskDetails_taskErrorDetails &task_error_details);
    bool is_task_error_details_Set() const;
    bool is_task_error_details_Valid() const;

    QString getTaskName() const;
    void setTaskName(const QString &task_name);
    bool is_task_name_Set() const;
    bool is_task_name_Valid() const;

    QDateTime getTaskStartTime() const;
    void setTaskStartTime(const QDateTime &task_start_time);
    bool is_task_start_time_Set() const;
    bool is_task_start_time_Valid() const;

    OAITaskStatus getTaskStatus() const;
    void setTaskStatus(const OAITaskStatus &task_status);
    bool is_task_status_Set() const;
    bool is_task_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap m_task_context;
    bool m_task_context_isSet;
    bool m_task_context_isValid;

    QDateTime m_task_end_time;
    bool m_task_end_time_isSet;
    bool m_task_end_time_isValid;

    OAIGetSolNetworkOperationTaskDetails_taskErrorDetails m_task_error_details;
    bool m_task_error_details_isSet;
    bool m_task_error_details_isValid;

    QString m_task_name;
    bool m_task_name_isSet;
    bool m_task_name_isValid;

    QDateTime m_task_start_time;
    bool m_task_start_time_isSet;
    bool m_task_start_time_isValid;

    OAITaskStatus m_task_status;
    bool m_task_status_isSet;
    bool m_task_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetSolNetworkOperationTaskDetails)

#endif // OAIGetSolNetworkOperationTaskDetails_H
