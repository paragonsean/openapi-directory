/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutSolFunctionPackageContentOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutSolFunctionPackageContentOutput::OAIPutSolFunctionPackageContentOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutSolFunctionPackageContentOutput::OAIPutSolFunctionPackageContentOutput() {
    this->initializeModel();
}

OAIPutSolFunctionPackageContentOutput::~OAIPutSolFunctionPackageContentOutput() {}

void OAIPutSolFunctionPackageContentOutput::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_vnf_product_name_isSet = false;
    m_vnf_product_name_isValid = false;

    m_vnf_provider_isSet = false;
    m_vnf_provider_isValid = false;

    m_vnfd_id_isSet = false;
    m_vnfd_id_isValid = false;

    m_vnfd_version_isSet = false;
    m_vnfd_version_isValid = false;
}

void OAIPutSolFunctionPackageContentOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutSolFunctionPackageContentOutput::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_vnf_product_name_isValid = ::OpenAPI::fromJsonValue(m_vnf_product_name, json[QString("vnfProductName")]);
    m_vnf_product_name_isSet = !json[QString("vnfProductName")].isNull() && m_vnf_product_name_isValid;

    m_vnf_provider_isValid = ::OpenAPI::fromJsonValue(m_vnf_provider, json[QString("vnfProvider")]);
    m_vnf_provider_isSet = !json[QString("vnfProvider")].isNull() && m_vnf_provider_isValid;

    m_vnfd_id_isValid = ::OpenAPI::fromJsonValue(m_vnfd_id, json[QString("vnfdId")]);
    m_vnfd_id_isSet = !json[QString("vnfdId")].isNull() && m_vnfd_id_isValid;

    m_vnfd_version_isValid = ::OpenAPI::fromJsonValue(m_vnfd_version, json[QString("vnfdVersion")]);
    m_vnfd_version_isSet = !json[QString("vnfdVersion")].isNull() && m_vnfd_version_isValid;
}

QString OAIPutSolFunctionPackageContentOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutSolFunctionPackageContentOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_vnf_product_name_isSet) {
        obj.insert(QString("vnfProductName"), ::OpenAPI::toJsonValue(m_vnf_product_name));
    }
    if (m_vnf_provider_isSet) {
        obj.insert(QString("vnfProvider"), ::OpenAPI::toJsonValue(m_vnf_provider));
    }
    if (m_vnfd_id_isSet) {
        obj.insert(QString("vnfdId"), ::OpenAPI::toJsonValue(m_vnfd_id));
    }
    if (m_vnfd_version_isSet) {
        obj.insert(QString("vnfdVersion"), ::OpenAPI::toJsonValue(m_vnfd_version));
    }
    return obj;
}

QString OAIPutSolFunctionPackageContentOutput::getId() const {
    return m_id;
}
void OAIPutSolFunctionPackageContentOutput::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPutSolFunctionPackageContentOutput::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPutSolFunctionPackageContentOutput::is_id_Valid() const{
    return m_id_isValid;
}

OAIPutSolFunctionPackageContentOutput_metadata OAIPutSolFunctionPackageContentOutput::getMetadata() const {
    return m_metadata;
}
void OAIPutSolFunctionPackageContentOutput::setMetadata(const OAIPutSolFunctionPackageContentOutput_metadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIPutSolFunctionPackageContentOutput::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIPutSolFunctionPackageContentOutput::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIPutSolFunctionPackageContentOutput::getVnfProductName() const {
    return m_vnf_product_name;
}
void OAIPutSolFunctionPackageContentOutput::setVnfProductName(const QString &vnf_product_name) {
    m_vnf_product_name = vnf_product_name;
    m_vnf_product_name_isSet = true;
}

bool OAIPutSolFunctionPackageContentOutput::is_vnf_product_name_Set() const{
    return m_vnf_product_name_isSet;
}

bool OAIPutSolFunctionPackageContentOutput::is_vnf_product_name_Valid() const{
    return m_vnf_product_name_isValid;
}

QString OAIPutSolFunctionPackageContentOutput::getVnfProvider() const {
    return m_vnf_provider;
}
void OAIPutSolFunctionPackageContentOutput::setVnfProvider(const QString &vnf_provider) {
    m_vnf_provider = vnf_provider;
    m_vnf_provider_isSet = true;
}

bool OAIPutSolFunctionPackageContentOutput::is_vnf_provider_Set() const{
    return m_vnf_provider_isSet;
}

bool OAIPutSolFunctionPackageContentOutput::is_vnf_provider_Valid() const{
    return m_vnf_provider_isValid;
}

QString OAIPutSolFunctionPackageContentOutput::getVnfdId() const {
    return m_vnfd_id;
}
void OAIPutSolFunctionPackageContentOutput::setVnfdId(const QString &vnfd_id) {
    m_vnfd_id = vnfd_id;
    m_vnfd_id_isSet = true;
}

bool OAIPutSolFunctionPackageContentOutput::is_vnfd_id_Set() const{
    return m_vnfd_id_isSet;
}

bool OAIPutSolFunctionPackageContentOutput::is_vnfd_id_Valid() const{
    return m_vnfd_id_isValid;
}

QString OAIPutSolFunctionPackageContentOutput::getVnfdVersion() const {
    return m_vnfd_version;
}
void OAIPutSolFunctionPackageContentOutput::setVnfdVersion(const QString &vnfd_version) {
    m_vnfd_version = vnfd_version;
    m_vnfd_version_isSet = true;
}

bool OAIPutSolFunctionPackageContentOutput::is_vnfd_version_Set() const{
    return m_vnfd_version_isSet;
}

bool OAIPutSolFunctionPackageContentOutput::is_vnfd_version_Valid() const{
    return m_vnfd_version_isValid;
}

bool OAIPutSolFunctionPackageContentOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vnf_product_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vnf_provider_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vnfd_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vnfd_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutSolFunctionPackageContentOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_metadata_isValid && m_vnf_product_name_isValid && m_vnf_provider_isValid && m_vnfd_id_isValid && m_vnfd_version_isValid && true;
}

} // namespace OpenAPI
