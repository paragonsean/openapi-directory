/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsTelcoNetworkBuilder);
  }
}(this, function(expect, AwsTelcoNetworkBuilder) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsTelcoNetworkBuilder.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('cancelSolNetworkOperation', function() {
      it('should call cancelSolNetworkOperation successfully', function(done) {
        //uncomment below and update the code to test cancelSolNetworkOperation
        //instance.cancelSolNetworkOperation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSolFunctionPackage', function() {
      it('should call createSolFunctionPackage successfully', function(done) {
        //uncomment below and update the code to test createSolFunctionPackage
        //instance.createSolFunctionPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSolNetworkInstance', function() {
      it('should call createSolNetworkInstance successfully', function(done) {
        //uncomment below and update the code to test createSolNetworkInstance
        //instance.createSolNetworkInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSolNetworkPackage', function() {
      it('should call createSolNetworkPackage successfully', function(done) {
        //uncomment below and update the code to test createSolNetworkPackage
        //instance.createSolNetworkPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSolFunctionPackage', function() {
      it('should call deleteSolFunctionPackage successfully', function(done) {
        //uncomment below and update the code to test deleteSolFunctionPackage
        //instance.deleteSolFunctionPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSolNetworkInstance', function() {
      it('should call deleteSolNetworkInstance successfully', function(done) {
        //uncomment below and update the code to test deleteSolNetworkInstance
        //instance.deleteSolNetworkInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSolNetworkPackage', function() {
      it('should call deleteSolNetworkPackage successfully', function(done) {
        //uncomment below and update the code to test deleteSolNetworkPackage
        //instance.deleteSolNetworkPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSolFunctionInstance', function() {
      it('should call getSolFunctionInstance successfully', function(done) {
        //uncomment below and update the code to test getSolFunctionInstance
        //instance.getSolFunctionInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSolFunctionPackage', function() {
      it('should call getSolFunctionPackage successfully', function(done) {
        //uncomment below and update the code to test getSolFunctionPackage
        //instance.getSolFunctionPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSolFunctionPackageContent', function() {
      it('should call getSolFunctionPackageContent successfully', function(done) {
        //uncomment below and update the code to test getSolFunctionPackageContent
        //instance.getSolFunctionPackageContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSolFunctionPackageDescriptor', function() {
      it('should call getSolFunctionPackageDescriptor successfully', function(done) {
        //uncomment below and update the code to test getSolFunctionPackageDescriptor
        //instance.getSolFunctionPackageDescriptor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSolNetworkInstance', function() {
      it('should call getSolNetworkInstance successfully', function(done) {
        //uncomment below and update the code to test getSolNetworkInstance
        //instance.getSolNetworkInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSolNetworkOperation', function() {
      it('should call getSolNetworkOperation successfully', function(done) {
        //uncomment below and update the code to test getSolNetworkOperation
        //instance.getSolNetworkOperation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSolNetworkPackage', function() {
      it('should call getSolNetworkPackage successfully', function(done) {
        //uncomment below and update the code to test getSolNetworkPackage
        //instance.getSolNetworkPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSolNetworkPackageContent', function() {
      it('should call getSolNetworkPackageContent successfully', function(done) {
        //uncomment below and update the code to test getSolNetworkPackageContent
        //instance.getSolNetworkPackageContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSolNetworkPackageDescriptor', function() {
      it('should call getSolNetworkPackageDescriptor successfully', function(done) {
        //uncomment below and update the code to test getSolNetworkPackageDescriptor
        //instance.getSolNetworkPackageDescriptor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('instantiateSolNetworkInstance', function() {
      it('should call instantiateSolNetworkInstance successfully', function(done) {
        //uncomment below and update the code to test instantiateSolNetworkInstance
        //instance.instantiateSolNetworkInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSolFunctionInstances', function() {
      it('should call listSolFunctionInstances successfully', function(done) {
        //uncomment below and update the code to test listSolFunctionInstances
        //instance.listSolFunctionInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSolFunctionPackages', function() {
      it('should call listSolFunctionPackages successfully', function(done) {
        //uncomment below and update the code to test listSolFunctionPackages
        //instance.listSolFunctionPackages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSolNetworkInstances', function() {
      it('should call listSolNetworkInstances successfully', function(done) {
        //uncomment below and update the code to test listSolNetworkInstances
        //instance.listSolNetworkInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSolNetworkOperations', function() {
      it('should call listSolNetworkOperations successfully', function(done) {
        //uncomment below and update the code to test listSolNetworkOperations
        //instance.listSolNetworkOperations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSolNetworkPackages', function() {
      it('should call listSolNetworkPackages successfully', function(done) {
        //uncomment below and update the code to test listSolNetworkPackages
        //instance.listSolNetworkPackages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putSolFunctionPackageContent', function() {
      it('should call putSolFunctionPackageContent successfully', function(done) {
        //uncomment below and update the code to test putSolFunctionPackageContent
        //instance.putSolFunctionPackageContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putSolNetworkPackageContent', function() {
      it('should call putSolNetworkPackageContent successfully', function(done) {
        //uncomment below and update the code to test putSolNetworkPackageContent
        //instance.putSolNetworkPackageContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('terminateSolNetworkInstance', function() {
      it('should call terminateSolNetworkInstance successfully', function(done) {
        //uncomment below and update the code to test terminateSolNetworkInstance
        //instance.terminateSolNetworkInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSolFunctionPackage', function() {
      it('should call updateSolFunctionPackage successfully', function(done) {
        //uncomment below and update the code to test updateSolFunctionPackage
        //instance.updateSolFunctionPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSolNetworkInstance', function() {
      it('should call updateSolNetworkInstance successfully', function(done) {
        //uncomment below and update the code to test updateSolNetworkInstance
        //instance.updateSolNetworkInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSolNetworkPackage', function() {
      it('should call updateSolNetworkPackage successfully', function(done) {
        //uncomment below and update the code to test updateSolNetworkPackage
        //instance.updateSolNetworkPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validateSolFunctionPackageContent', function() {
      it('should call validateSolFunctionPackageContent successfully', function(done) {
        //uncomment below and update the code to test validateSolFunctionPackageContent
        //instance.validateSolFunctionPackageContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validateSolNetworkPackageContent', function() {
      it('should call validateSolNetworkPackageContent successfully', function(done) {
        //uncomment below and update the code to test validateSolNetworkPackageContent
        //instance.validateSolNetworkPackageContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
