/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ValidateSolNetworkPackageContentOutputMetadata from './ValidateSolNetworkPackageContentOutputMetadata';

/**
 * The ValidateSolNetworkPackageContentOutput model module.
 * @module model/ValidateSolNetworkPackageContentOutput
 * @version 2008-10-21
 */
class ValidateSolNetworkPackageContentOutput {
    /**
     * Constructs a new <code>ValidateSolNetworkPackageContentOutput</code>.
     * @alias module:model/ValidateSolNetworkPackageContentOutput
     * @param arn {String} 
     * @param id {String} 
     * @param metadata {module:model/ValidateSolNetworkPackageContentOutputMetadata} 
     * @param nsdId {String} 
     * @param nsdName {String} 
     * @param nsdVersion {String} 
     * @param vnfPkgIds {Array} 
     */
    constructor(arn, id, metadata, nsdId, nsdName, nsdVersion, vnfPkgIds) { 
        
        ValidateSolNetworkPackageContentOutput.initialize(this, arn, id, metadata, nsdId, nsdName, nsdVersion, vnfPkgIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, arn, id, metadata, nsdId, nsdName, nsdVersion, vnfPkgIds) { 
        obj['arn'] = arn;
        obj['id'] = id;
        obj['metadata'] = metadata;
        obj['nsdId'] = nsdId;
        obj['nsdName'] = nsdName;
        obj['nsdVersion'] = nsdVersion;
        obj['vnfPkgIds'] = vnfPkgIds;
    }

    /**
     * Constructs a <code>ValidateSolNetworkPackageContentOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidateSolNetworkPackageContentOutput} obj Optional instance to populate.
     * @return {module:model/ValidateSolNetworkPackageContentOutput} The populated <code>ValidateSolNetworkPackageContentOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidateSolNetworkPackageContentOutput();

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ValidateSolNetworkPackageContentOutputMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('nsdId')) {
                obj['nsdId'] = ApiClient.convertToType(data['nsdId'], 'String');
            }
            if (data.hasOwnProperty('nsdName')) {
                obj['nsdName'] = ApiClient.convertToType(data['nsdName'], 'String');
            }
            if (data.hasOwnProperty('nsdVersion')) {
                obj['nsdVersion'] = ApiClient.convertToType(data['nsdVersion'], 'String');
            }
            if (data.hasOwnProperty('vnfPkgIds')) {
                obj['vnfPkgIds'] = ApiClient.convertToType(data['vnfPkgIds'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidateSolNetworkPackageContentOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidateSolNetworkPackageContentOutput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ValidateSolNetworkPackageContentOutput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          String.validateJSON(data['id']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          ValidateSolNetworkPackageContentOutputMetadata.validateJSON(data['metadata']);
        }
        // validate the optional field `nsdId`
        if (data['nsdId']) { // data not null
          String.validateJSON(data['nsdId']);
        }
        // validate the optional field `nsdName`
        if (data['nsdName']) { // data not null
          String.validateJSON(data['nsdName']);
        }
        // validate the optional field `nsdVersion`
        if (data['nsdVersion']) { // data not null
          String.validateJSON(data['nsdVersion']);
        }
        // validate the optional field `vnfPkgIds`
        if (data['vnfPkgIds']) { // data not null
          Array.validateJSON(data['vnfPkgIds']);
        }

        return true;
    }


}

ValidateSolNetworkPackageContentOutput.RequiredProperties = ["arn", "id", "metadata", "nsdId", "nsdName", "nsdVersion", "vnfPkgIds"];

/**
 * @member {String} arn
 */
ValidateSolNetworkPackageContentOutput.prototype['arn'] = undefined;

/**
 * @member {String} id
 */
ValidateSolNetworkPackageContentOutput.prototype['id'] = undefined;

/**
 * @member {module:model/ValidateSolNetworkPackageContentOutputMetadata} metadata
 */
ValidateSolNetworkPackageContentOutput.prototype['metadata'] = undefined;

/**
 * @member {String} nsdId
 */
ValidateSolNetworkPackageContentOutput.prototype['nsdId'] = undefined;

/**
 * @member {String} nsdName
 */
ValidateSolNetworkPackageContentOutput.prototype['nsdName'] = undefined;

/**
 * @member {String} nsdVersion
 */
ValidateSolNetworkPackageContentOutput.prototype['nsdVersion'] = undefined;

/**
 * @member {Array} vnfPkgIds
 */
ValidateSolNetworkPackageContentOutput.prototype['vnfPkgIds'] = undefined;






export default ValidateSolNetworkPackageContentOutput;

