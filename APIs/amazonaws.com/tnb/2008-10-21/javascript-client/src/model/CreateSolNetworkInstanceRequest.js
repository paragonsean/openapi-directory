/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateSolNetworkInstanceRequest model module.
 * @module model/CreateSolNetworkInstanceRequest
 * @version 2008-10-21
 */
class CreateSolNetworkInstanceRequest {
    /**
     * Constructs a new <code>CreateSolNetworkInstanceRequest</code>.
     * @alias module:model/CreateSolNetworkInstanceRequest
     * @param nsName {String} Network instance name.
     * @param nsdInfoId {String} ID for network service descriptor.
     */
    constructor(nsName, nsdInfoId) { 
        
        CreateSolNetworkInstanceRequest.initialize(this, nsName, nsdInfoId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nsName, nsdInfoId) { 
        obj['nsName'] = nsName;
        obj['nsdInfoId'] = nsdInfoId;
    }

    /**
     * Constructs a <code>CreateSolNetworkInstanceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateSolNetworkInstanceRequest} obj Optional instance to populate.
     * @return {module:model/CreateSolNetworkInstanceRequest} The populated <code>CreateSolNetworkInstanceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSolNetworkInstanceRequest();

            if (data.hasOwnProperty('nsDescription')) {
                obj['nsDescription'] = ApiClient.convertToType(data['nsDescription'], 'String');
            }
            if (data.hasOwnProperty('nsName')) {
                obj['nsName'] = ApiClient.convertToType(data['nsName'], 'String');
            }
            if (data.hasOwnProperty('nsdInfoId')) {
                obj['nsdInfoId'] = ApiClient.convertToType(data['nsdInfoId'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateSolNetworkInstanceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateSolNetworkInstanceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateSolNetworkInstanceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['nsDescription'] && !(typeof data['nsDescription'] === 'string' || data['nsDescription'] instanceof String)) {
            throw new Error("Expected the field `nsDescription` to be a primitive type in the JSON string but got " + data['nsDescription']);
        }
        // ensure the json data is a string
        if (data['nsName'] && !(typeof data['nsName'] === 'string' || data['nsName'] instanceof String)) {
            throw new Error("Expected the field `nsName` to be a primitive type in the JSON string but got " + data['nsName']);
        }
        // ensure the json data is a string
        if (data['nsdInfoId'] && !(typeof data['nsdInfoId'] === 'string' || data['nsdInfoId'] instanceof String)) {
            throw new Error("Expected the field `nsdInfoId` to be a primitive type in the JSON string but got " + data['nsdInfoId']);
        }

        return true;
    }


}

CreateSolNetworkInstanceRequest.RequiredProperties = ["nsName", "nsdInfoId"];

/**
 * Network instance description.
 * @member {String} nsDescription
 */
CreateSolNetworkInstanceRequest.prototype['nsDescription'] = undefined;

/**
 * Network instance name.
 * @member {String} nsName
 */
CreateSolNetworkInstanceRequest.prototype['nsName'] = undefined;

/**
 * ID for network service descriptor.
 * @member {String} nsdInfoId
 */
CreateSolNetworkInstanceRequest.prototype['nsdInfoId'] = undefined;

/**
 * A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an optional value. You can use tags to search and filter your resources or track your Amazon Web Services costs.
 * @member {Object.<String, String>} tags
 */
CreateSolNetworkInstanceRequest.prototype['tags'] = undefined;






export default CreateSolNetworkInstanceRequest;

