/**
 * AWS Telco Network Builder
 *  Amazon Web Services Telco Network Builder (TNB) is a network automation service that helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle management of your telecommunication network functions throughout planning, deployment, and post-deployment activities.
 *
 * The version of the OpenAPI document: 2008-10-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateSolNetworkPackageRequest model module.
 * @module model/UpdateSolNetworkPackageRequest
 * @version 2008-10-21
 */
class UpdateSolNetworkPackageRequest {
    /**
     * Constructs a new <code>UpdateSolNetworkPackageRequest</code>.
     * @alias module:model/UpdateSolNetworkPackageRequest
     * @param nsdOperationalState {module:model/UpdateSolNetworkPackageRequest.NsdOperationalStateEnum} Operational state of the network service descriptor in the network package.
     */
    constructor(nsdOperationalState) { 
        
        UpdateSolNetworkPackageRequest.initialize(this, nsdOperationalState);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nsdOperationalState) { 
        obj['nsdOperationalState'] = nsdOperationalState;
    }

    /**
     * Constructs a <code>UpdateSolNetworkPackageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSolNetworkPackageRequest} obj Optional instance to populate.
     * @return {module:model/UpdateSolNetworkPackageRequest} The populated <code>UpdateSolNetworkPackageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSolNetworkPackageRequest();

            if (data.hasOwnProperty('nsdOperationalState')) {
                obj['nsdOperationalState'] = ApiClient.convertToType(data['nsdOperationalState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSolNetworkPackageRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSolNetworkPackageRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateSolNetworkPackageRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['nsdOperationalState'] && !(typeof data['nsdOperationalState'] === 'string' || data['nsdOperationalState'] instanceof String)) {
            throw new Error("Expected the field `nsdOperationalState` to be a primitive type in the JSON string but got " + data['nsdOperationalState']);
        }

        return true;
    }


}

UpdateSolNetworkPackageRequest.RequiredProperties = ["nsdOperationalState"];

/**
 * Operational state of the network service descriptor in the network package.
 * @member {module:model/UpdateSolNetworkPackageRequest.NsdOperationalStateEnum} nsdOperationalState
 */
UpdateSolNetworkPackageRequest.prototype['nsdOperationalState'] = undefined;





/**
 * Allowed values for the <code>nsdOperationalState</code> property.
 * @enum {String}
 * @readonly
 */
UpdateSolNetworkPackageRequest['NsdOperationalStateEnum'] = {

    /**
     * value: "ENABLED"
     * @const
     */
    "ENABLED": "ENABLED",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED"
};



export default UpdateSolNetworkPackageRequest;

