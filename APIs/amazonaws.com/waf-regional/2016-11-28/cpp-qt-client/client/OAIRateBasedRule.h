/**
 * AWS WAF Regional
 * <note> <p>This is <b>AWS WAF Classic Regional</b> documentation. For more information, see <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p> <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html\">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p> </note> <p>This is the <i>AWS WAF Regional Classic API Reference</i> for using AWS WAF Classic with the AWS resources, Elastic Load Balancing (ELB) Application Load Balancers and API Gateway APIs. The AWS WAF Classic actions and data types listed in the reference are available for protecting Elastic Load Balancing (ELB) Application Load Balancers and API Gateway APIs. You can use these actions and data types by means of the endpoints listed in <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#waf_region\">AWS Regions and Endpoints</a>. This guide is for developers who need detailed information about the AWS WAF Classic API actions, data types, and errors. For detailed information about AWS WAF Classic features and an overview of how to use the AWS WAF Classic API, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p>
 *
 * The version of the OpenAPI document: 2016-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRateBasedRule.h
 *
 * &lt;note&gt; &lt;p&gt;This is &lt;b&gt;AWS WAF Classic&lt;/b&gt; documentation. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\&quot;&gt;AWS WAF Classic&lt;/a&gt; in the developer guide.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For the latest version of AWS WAF&lt;/b&gt;, use the AWS WAFV2 API and see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html\&quot;&gt;AWS WAF Developer Guide&lt;/a&gt;. With the latest version, AWS WAF has a single set of endpoints for regional and global use. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;A &lt;code&gt;RateBasedRule&lt;/code&gt; is identical to a regular &lt;a&gt;Rule&lt;/a&gt;, with one addition: a &lt;code&gt;RateBasedRule&lt;/code&gt; counts the number of requests that arrive from a specified IP address every five minutes. For example, based on recent requests that you&#39;ve seen from an attacker, you might create a &lt;code&gt;RateBasedRule&lt;/code&gt; that includes the following conditions: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The requests come from 192.0.2.44.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;They contain the value &lt;code&gt;BadBot&lt;/code&gt; in the &lt;code&gt;User-Agent&lt;/code&gt; header.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In the rule, you also define the rate limit as 1,000.&lt;/p&gt; &lt;p&gt;Requests that meet both of these conditions and exceed 1,000 requests every five minutes trigger the rule&#39;s action (block or count), which is defined in the web ACL.&lt;/p&gt;
 */

#ifndef OAIRateBasedRule_H
#define OAIRateBasedRule_H

#include <QJsonObject>

#include "OAIRateKey.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRateBasedRule : public OAIObject {
public:
    OAIRateBasedRule();
    OAIRateBasedRule(QString json);
    ~OAIRateBasedRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRuleId() const;
    void setRuleId(const QString &rule_id);
    bool is_rule_id_Set() const;
    bool is_rule_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getMetricName() const;
    void setMetricName(const QString &metric_name);
    bool is_metric_name_Set() const;
    bool is_metric_name_Valid() const;

    QList getMatchPredicates() const;
    void setMatchPredicates(const QList &match_predicates);
    bool is_match_predicates_Set() const;
    bool is_match_predicates_Valid() const;

    OAIRateKey getRateKey() const;
    void setRateKey(const OAIRateKey &rate_key);
    bool is_rate_key_Set() const;
    bool is_rate_key_Valid() const;

    qint32 getRateLimit() const;
    void setRateLimit(const qint32 &rate_limit);
    bool is_rate_limit_Set() const;
    bool is_rate_limit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_rule_id;
    bool m_rule_id_isSet;
    bool m_rule_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_metric_name;
    bool m_metric_name_isSet;
    bool m_metric_name_isValid;

    QList m_match_predicates;
    bool m_match_predicates_isSet;
    bool m_match_predicates_isValid;

    OAIRateKey m_rate_key;
    bool m_rate_key_isSet;
    bool m_rate_key_isValid;

    qint32 m_rate_limit;
    bool m_rate_limit_isSet;
    bool m_rate_limit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRateBasedRule)

#endif // OAIRateBasedRule_H
