/**
 * AWS WAF Regional
 * <note> <p>This is <b>AWS WAF Classic Regional</b> documentation. For more information, see <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p> <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html\">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p> </note> <p>This is the <i>AWS WAF Regional Classic API Reference</i> for using AWS WAF Classic with the AWS resources, Elastic Load Balancing (ELB) Application Load Balancers and API Gateway APIs. The AWS WAF Classic actions and data types listed in the reference are available for protecting Elastic Load Balancing (ELB) Application Load Balancers and API Gateway APIs. You can use these actions and data types by means of the endpoints listed in <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#waf_region\">AWS Regions and Endpoints</a>. This guide is for developers who need detailed information about the AWS WAF Classic API actions, data types, and errors. For detailed information about AWS WAF Classic features and an overview of how to use the AWS WAF Classic API, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p>
 *
 * The version of the OpenAPI document: 2016-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebACLUpdate_ActivatedRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebACLUpdate_ActivatedRule::OAIWebACLUpdate_ActivatedRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebACLUpdate_ActivatedRule::OAIWebACLUpdate_ActivatedRule() {
    this->initializeModel();
}

OAIWebACLUpdate_ActivatedRule::~OAIWebACLUpdate_ActivatedRule() {}

void OAIWebACLUpdate_ActivatedRule::initializeModel() {

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_rule_id_isSet = false;
    m_rule_id_isValid = false;

    m_action_isSet = false;
    m_action_isValid = false;

    m_override_action_isSet = false;
    m_override_action_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_excluded_rules_isSet = false;
    m_excluded_rules_isValid = false;
}

void OAIWebACLUpdate_ActivatedRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebACLUpdate_ActivatedRule::fromJsonObject(QJsonObject json) {

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("Priority")]);
    m_priority_isSet = !json[QString("Priority")].isNull() && m_priority_isValid;

    m_rule_id_isValid = ::OpenAPI::fromJsonValue(m_rule_id, json[QString("RuleId")]);
    m_rule_id_isSet = !json[QString("RuleId")].isNull() && m_rule_id_isValid;

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("Action")]);
    m_action_isSet = !json[QString("Action")].isNull() && m_action_isValid;

    m_override_action_isValid = ::OpenAPI::fromJsonValue(m_override_action, json[QString("OverrideAction")]);
    m_override_action_isSet = !json[QString("OverrideAction")].isNull() && m_override_action_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_excluded_rules_isValid = ::OpenAPI::fromJsonValue(m_excluded_rules, json[QString("ExcludedRules")]);
    m_excluded_rules_isSet = !json[QString("ExcludedRules")].isNull() && m_excluded_rules_isValid;
}

QString OAIWebACLUpdate_ActivatedRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebACLUpdate_ActivatedRule::asJsonObject() const {
    QJsonObject obj;
    if (m_priority_isSet) {
        obj.insert(QString("Priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_rule_id_isSet) {
        obj.insert(QString("RuleId"), ::OpenAPI::toJsonValue(m_rule_id));
    }
    if (m_action.isSet()) {
        obj.insert(QString("Action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_override_action.isSet()) {
        obj.insert(QString("OverrideAction"), ::OpenAPI::toJsonValue(m_override_action));
    }
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_excluded_rules.isSet()) {
        obj.insert(QString("ExcludedRules"), ::OpenAPI::toJsonValue(m_excluded_rules));
    }
    return obj;
}

qint32 OAIWebACLUpdate_ActivatedRule::getPriority() const {
    return m_priority;
}
void OAIWebACLUpdate_ActivatedRule::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIWebACLUpdate_ActivatedRule::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIWebACLUpdate_ActivatedRule::is_priority_Valid() const{
    return m_priority_isValid;
}

QString OAIWebACLUpdate_ActivatedRule::getRuleId() const {
    return m_rule_id;
}
void OAIWebACLUpdate_ActivatedRule::setRuleId(const QString &rule_id) {
    m_rule_id = rule_id;
    m_rule_id_isSet = true;
}

bool OAIWebACLUpdate_ActivatedRule::is_rule_id_Set() const{
    return m_rule_id_isSet;
}

bool OAIWebACLUpdate_ActivatedRule::is_rule_id_Valid() const{
    return m_rule_id_isValid;
}

OAIActivatedRule_Action OAIWebACLUpdate_ActivatedRule::getAction() const {
    return m_action;
}
void OAIWebACLUpdate_ActivatedRule::setAction(const OAIActivatedRule_Action &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIWebACLUpdate_ActivatedRule::is_action_Set() const{
    return m_action_isSet;
}

bool OAIWebACLUpdate_ActivatedRule::is_action_Valid() const{
    return m_action_isValid;
}

OAIActivatedRule_OverrideAction OAIWebACLUpdate_ActivatedRule::getOverrideAction() const {
    return m_override_action;
}
void OAIWebACLUpdate_ActivatedRule::setOverrideAction(const OAIActivatedRule_OverrideAction &override_action) {
    m_override_action = override_action;
    m_override_action_isSet = true;
}

bool OAIWebACLUpdate_ActivatedRule::is_override_action_Set() const{
    return m_override_action_isSet;
}

bool OAIWebACLUpdate_ActivatedRule::is_override_action_Valid() const{
    return m_override_action_isValid;
}

OAIWafRuleType OAIWebACLUpdate_ActivatedRule::getType() const {
    return m_type;
}
void OAIWebACLUpdate_ActivatedRule::setType(const OAIWafRuleType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIWebACLUpdate_ActivatedRule::is_type_Set() const{
    return m_type_isSet;
}

bool OAIWebACLUpdate_ActivatedRule::is_type_Valid() const{
    return m_type_isValid;
}

QList OAIWebACLUpdate_ActivatedRule::getExcludedRules() const {
    return m_excluded_rules;
}
void OAIWebACLUpdate_ActivatedRule::setExcludedRules(const QList &excluded_rules) {
    m_excluded_rules = excluded_rules;
    m_excluded_rules_isSet = true;
}

bool OAIWebACLUpdate_ActivatedRule::is_excluded_rules_Set() const{
    return m_excluded_rules_isSet;
}

bool OAIWebACLUpdate_ActivatedRule::is_excluded_rules_Valid() const{
    return m_excluded_rules_isValid;
}

bool OAIWebACLUpdate_ActivatedRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_override_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_excluded_rules.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebACLUpdate_ActivatedRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_priority_isValid && m_rule_id_isValid && true;
}

} // namespace OpenAPI
