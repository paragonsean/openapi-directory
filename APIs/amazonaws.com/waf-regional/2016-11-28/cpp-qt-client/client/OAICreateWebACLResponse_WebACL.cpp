/**
 * AWS WAF Regional
 * <note> <p>This is <b>AWS WAF Classic Regional</b> documentation. For more information, see <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p> <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html\">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p> </note> <p>This is the <i>AWS WAF Regional Classic API Reference</i> for using AWS WAF Classic with the AWS resources, Elastic Load Balancing (ELB) Application Load Balancers and API Gateway APIs. The AWS WAF Classic actions and data types listed in the reference are available for protecting Elastic Load Balancing (ELB) Application Load Balancers and API Gateway APIs. You can use these actions and data types by means of the endpoints listed in <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#waf_region\">AWS Regions and Endpoints</a>. This guide is for developers who need detailed information about the AWS WAF Classic API actions, data types, and errors. For detailed information about AWS WAF Classic features and an overview of how to use the AWS WAF Classic API, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p>
 *
 * The version of the OpenAPI document: 2016-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateWebACLResponse_WebACL.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateWebACLResponse_WebACL::OAICreateWebACLResponse_WebACL(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateWebACLResponse_WebACL::OAICreateWebACLResponse_WebACL() {
    this->initializeModel();
}

OAICreateWebACLResponse_WebACL::~OAICreateWebACLResponse_WebACL() {}

void OAICreateWebACLResponse_WebACL::initializeModel() {

    m_web_aclid_isSet = false;
    m_web_aclid_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_metric_name_isSet = false;
    m_metric_name_isValid = false;

    m_default_action_isSet = false;
    m_default_action_isValid = false;

    m_rules_isSet = false;
    m_rules_isValid = false;

    m_web_acl_arn_isSet = false;
    m_web_acl_arn_isValid = false;
}

void OAICreateWebACLResponse_WebACL::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateWebACLResponse_WebACL::fromJsonObject(QJsonObject json) {

    m_web_aclid_isValid = ::OpenAPI::fromJsonValue(m_web_aclid, json[QString("WebACLId")]);
    m_web_aclid_isSet = !json[QString("WebACLId")].isNull() && m_web_aclid_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_metric_name_isValid = ::OpenAPI::fromJsonValue(m_metric_name, json[QString("MetricName")]);
    m_metric_name_isSet = !json[QString("MetricName")].isNull() && m_metric_name_isValid;

    m_default_action_isValid = ::OpenAPI::fromJsonValue(m_default_action, json[QString("DefaultAction")]);
    m_default_action_isSet = !json[QString("DefaultAction")].isNull() && m_default_action_isValid;

    m_rules_isValid = ::OpenAPI::fromJsonValue(m_rules, json[QString("Rules")]);
    m_rules_isSet = !json[QString("Rules")].isNull() && m_rules_isValid;

    m_web_acl_arn_isValid = ::OpenAPI::fromJsonValue(m_web_acl_arn, json[QString("WebACLArn")]);
    m_web_acl_arn_isSet = !json[QString("WebACLArn")].isNull() && m_web_acl_arn_isValid;
}

QString OAICreateWebACLResponse_WebACL::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateWebACLResponse_WebACL::asJsonObject() const {
    QJsonObject obj;
    if (m_web_aclid_isSet) {
        obj.insert(QString("WebACLId"), ::OpenAPI::toJsonValue(m_web_aclid));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_metric_name_isSet) {
        obj.insert(QString("MetricName"), ::OpenAPI::toJsonValue(m_metric_name));
    }
    if (m_default_action.isSet()) {
        obj.insert(QString("DefaultAction"), ::OpenAPI::toJsonValue(m_default_action));
    }
    if (m_rules.isSet()) {
        obj.insert(QString("Rules"), ::OpenAPI::toJsonValue(m_rules));
    }
    if (m_web_acl_arn_isSet) {
        obj.insert(QString("WebACLArn"), ::OpenAPI::toJsonValue(m_web_acl_arn));
    }
    return obj;
}

QString OAICreateWebACLResponse_WebACL::getWebAclid() const {
    return m_web_aclid;
}
void OAICreateWebACLResponse_WebACL::setWebAclid(const QString &web_aclid) {
    m_web_aclid = web_aclid;
    m_web_aclid_isSet = true;
}

bool OAICreateWebACLResponse_WebACL::is_web_aclid_Set() const{
    return m_web_aclid_isSet;
}

bool OAICreateWebACLResponse_WebACL::is_web_aclid_Valid() const{
    return m_web_aclid_isValid;
}

QString OAICreateWebACLResponse_WebACL::getName() const {
    return m_name;
}
void OAICreateWebACLResponse_WebACL::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateWebACLResponse_WebACL::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateWebACLResponse_WebACL::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateWebACLResponse_WebACL::getMetricName() const {
    return m_metric_name;
}
void OAICreateWebACLResponse_WebACL::setMetricName(const QString &metric_name) {
    m_metric_name = metric_name;
    m_metric_name_isSet = true;
}

bool OAICreateWebACLResponse_WebACL::is_metric_name_Set() const{
    return m_metric_name_isSet;
}

bool OAICreateWebACLResponse_WebACL::is_metric_name_Valid() const{
    return m_metric_name_isValid;
}

OAIWebACL_DefaultAction OAICreateWebACLResponse_WebACL::getDefaultAction() const {
    return m_default_action;
}
void OAICreateWebACLResponse_WebACL::setDefaultAction(const OAIWebACL_DefaultAction &default_action) {
    m_default_action = default_action;
    m_default_action_isSet = true;
}

bool OAICreateWebACLResponse_WebACL::is_default_action_Set() const{
    return m_default_action_isSet;
}

bool OAICreateWebACLResponse_WebACL::is_default_action_Valid() const{
    return m_default_action_isValid;
}

QList OAICreateWebACLResponse_WebACL::getRules() const {
    return m_rules;
}
void OAICreateWebACLResponse_WebACL::setRules(const QList &rules) {
    m_rules = rules;
    m_rules_isSet = true;
}

bool OAICreateWebACLResponse_WebACL::is_rules_Set() const{
    return m_rules_isSet;
}

bool OAICreateWebACLResponse_WebACL::is_rules_Valid() const{
    return m_rules_isValid;
}

QString OAICreateWebACLResponse_WebACL::getWebAclArn() const {
    return m_web_acl_arn;
}
void OAICreateWebACLResponse_WebACL::setWebAclArn(const QString &web_acl_arn) {
    m_web_acl_arn = web_acl_arn;
    m_web_acl_arn_isSet = true;
}

bool OAICreateWebACLResponse_WebACL::is_web_acl_arn_Set() const{
    return m_web_acl_arn_isSet;
}

bool OAICreateWebACLResponse_WebACL::is_web_acl_arn_Valid() const{
    return m_web_acl_arn_isValid;
}

bool OAICreateWebACLResponse_WebACL::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_web_aclid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rules.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_acl_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateWebACLResponse_WebACL::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_web_aclid_isValid && m_default_action_isValid && m_rules_isValid && true;
}

} // namespace OpenAPI
