# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_regex_pattern_set_response_regex_pattern_set import GetRegexPatternSetResponseRegexPatternSet
from openapi_server import util


class GetRegexPatternSetResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, regex_pattern_set: GetRegexPatternSetResponseRegexPatternSet=None):
        """GetRegexPatternSetResponse - a model defined in OpenAPI

        :param regex_pattern_set: The regex_pattern_set of this GetRegexPatternSetResponse.
        """
        self.openapi_types = {
            'regex_pattern_set': GetRegexPatternSetResponseRegexPatternSet
        }

        self.attribute_map = {
            'regex_pattern_set': 'RegexPatternSet'
        }

        self._regex_pattern_set = regex_pattern_set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetRegexPatternSetResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetRegexPatternSetResponse of this GetRegexPatternSetResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def regex_pattern_set(self):
        """Gets the regex_pattern_set of this GetRegexPatternSetResponse.


        :return: The regex_pattern_set of this GetRegexPatternSetResponse.
        :rtype: GetRegexPatternSetResponseRegexPatternSet
        """
        return self._regex_pattern_set

    @regex_pattern_set.setter
    def regex_pattern_set(self, regex_pattern_set):
        """Sets the regex_pattern_set of this GetRegexPatternSetResponse.


        :param regex_pattern_set: The regex_pattern_set of this GetRegexPatternSetResponse.
        :type regex_pattern_set: GetRegexPatternSetResponseRegexPatternSet
        """

        self._regex_pattern_set = regex_pattern_set
