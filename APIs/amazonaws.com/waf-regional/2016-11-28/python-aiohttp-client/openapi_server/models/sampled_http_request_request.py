# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SampledHTTPRequestRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_ip: str=None, country: str=None, uri: str=None, method: str=None, http_version: str=None, headers: List=None):
        """SampledHTTPRequestRequest - a model defined in OpenAPI

        :param client_ip: The client_ip of this SampledHTTPRequestRequest.
        :param country: The country of this SampledHTTPRequestRequest.
        :param uri: The uri of this SampledHTTPRequestRequest.
        :param method: The method of this SampledHTTPRequestRequest.
        :param http_version: The http_version of this SampledHTTPRequestRequest.
        :param headers: The headers of this SampledHTTPRequestRequest.
        """
        self.openapi_types = {
            'client_ip': str,
            'country': str,
            'uri': str,
            'method': str,
            'http_version': str,
            'headers': List
        }

        self.attribute_map = {
            'client_ip': 'ClientIP',
            'country': 'Country',
            'uri': 'URI',
            'method': 'Method',
            'http_version': 'HTTPVersion',
            'headers': 'Headers'
        }

        self._client_ip = client_ip
        self._country = country
        self._uri = uri
        self._method = method
        self._http_version = http_version
        self._headers = headers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SampledHTTPRequestRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SampledHTTPRequest_Request of this SampledHTTPRequestRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_ip(self):
        """Gets the client_ip of this SampledHTTPRequestRequest.


        :return: The client_ip of this SampledHTTPRequestRequest.
        :rtype: str
        """
        return self._client_ip

    @client_ip.setter
    def client_ip(self, client_ip):
        """Sets the client_ip of this SampledHTTPRequestRequest.


        :param client_ip: The client_ip of this SampledHTTPRequestRequest.
        :type client_ip: str
        """

        self._client_ip = client_ip

    @property
    def country(self):
        """Gets the country of this SampledHTTPRequestRequest.


        :return: The country of this SampledHTTPRequestRequest.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this SampledHTTPRequestRequest.


        :param country: The country of this SampledHTTPRequestRequest.
        :type country: str
        """

        self._country = country

    @property
    def uri(self):
        """Gets the uri of this SampledHTTPRequestRequest.


        :return: The uri of this SampledHTTPRequestRequest.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this SampledHTTPRequestRequest.


        :param uri: The uri of this SampledHTTPRequestRequest.
        :type uri: str
        """

        self._uri = uri

    @property
    def method(self):
        """Gets the method of this SampledHTTPRequestRequest.


        :return: The method of this SampledHTTPRequestRequest.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this SampledHTTPRequestRequest.


        :param method: The method of this SampledHTTPRequestRequest.
        :type method: str
        """

        self._method = method

    @property
    def http_version(self):
        """Gets the http_version of this SampledHTTPRequestRequest.


        :return: The http_version of this SampledHTTPRequestRequest.
        :rtype: str
        """
        return self._http_version

    @http_version.setter
    def http_version(self, http_version):
        """Sets the http_version of this SampledHTTPRequestRequest.


        :param http_version: The http_version of this SampledHTTPRequestRequest.
        :type http_version: str
        """

        self._http_version = http_version

    @property
    def headers(self):
        """Gets the headers of this SampledHTTPRequestRequest.


        :return: The headers of this SampledHTTPRequestRequest.
        :rtype: List
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this SampledHTTPRequestRequest.


        :param headers: The headers of this SampledHTTPRequestRequest.
        :type headers: List
        """

        self._headers = headers
