# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListSqlInjectionMatchSetsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_marker: str=None, sql_injection_match_sets: List=None):
        """ListSqlInjectionMatchSetsResponse - a model defined in OpenAPI

        :param next_marker: The next_marker of this ListSqlInjectionMatchSetsResponse.
        :param sql_injection_match_sets: The sql_injection_match_sets of this ListSqlInjectionMatchSetsResponse.
        """
        self.openapi_types = {
            'next_marker': str,
            'sql_injection_match_sets': List
        }

        self.attribute_map = {
            'next_marker': 'NextMarker',
            'sql_injection_match_sets': 'SqlInjectionMatchSets'
        }

        self._next_marker = next_marker
        self._sql_injection_match_sets = sql_injection_match_sets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSqlInjectionMatchSetsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSqlInjectionMatchSetsResponse of this ListSqlInjectionMatchSetsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_marker(self):
        """Gets the next_marker of this ListSqlInjectionMatchSetsResponse.


        :return: The next_marker of this ListSqlInjectionMatchSetsResponse.
        :rtype: str
        """
        return self._next_marker

    @next_marker.setter
    def next_marker(self, next_marker):
        """Sets the next_marker of this ListSqlInjectionMatchSetsResponse.


        :param next_marker: The next_marker of this ListSqlInjectionMatchSetsResponse.
        :type next_marker: str
        """

        self._next_marker = next_marker

    @property
    def sql_injection_match_sets(self):
        """Gets the sql_injection_match_sets of this ListSqlInjectionMatchSetsResponse.


        :return: The sql_injection_match_sets of this ListSqlInjectionMatchSetsResponse.
        :rtype: List
        """
        return self._sql_injection_match_sets

    @sql_injection_match_sets.setter
    def sql_injection_match_sets(self, sql_injection_match_sets):
        """Sets the sql_injection_match_sets of this ListSqlInjectionMatchSetsResponse.


        :param sql_injection_match_sets: The sql_injection_match_sets of this ListSqlInjectionMatchSetsResponse.
        :type sql_injection_match_sets: List
        """

        self._sql_injection_match_sets = sql_injection_match_sets
