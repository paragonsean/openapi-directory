# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateWebACLMigrationStackRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, web_aclid: str=None, s3_bucket_name: str=None, ignore_unsupported_type: bool=None):
        """CreateWebACLMigrationStackRequest - a model defined in OpenAPI

        :param web_aclid: The web_aclid of this CreateWebACLMigrationStackRequest.
        :param s3_bucket_name: The s3_bucket_name of this CreateWebACLMigrationStackRequest.
        :param ignore_unsupported_type: The ignore_unsupported_type of this CreateWebACLMigrationStackRequest.
        """
        self.openapi_types = {
            'web_aclid': str,
            's3_bucket_name': str,
            'ignore_unsupported_type': bool
        }

        self.attribute_map = {
            'web_aclid': 'WebACLId',
            's3_bucket_name': 'S3BucketName',
            'ignore_unsupported_type': 'IgnoreUnsupportedType'
        }

        self._web_aclid = web_aclid
        self._s3_bucket_name = s3_bucket_name
        self._ignore_unsupported_type = ignore_unsupported_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateWebACLMigrationStackRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateWebACLMigrationStackRequest of this CreateWebACLMigrationStackRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def web_aclid(self):
        """Gets the web_aclid of this CreateWebACLMigrationStackRequest.


        :return: The web_aclid of this CreateWebACLMigrationStackRequest.
        :rtype: str
        """
        return self._web_aclid

    @web_aclid.setter
    def web_aclid(self, web_aclid):
        """Sets the web_aclid of this CreateWebACLMigrationStackRequest.


        :param web_aclid: The web_aclid of this CreateWebACLMigrationStackRequest.
        :type web_aclid: str
        """
        if web_aclid is None:
            raise ValueError("Invalid value for `web_aclid`, must not be `None`")

        self._web_aclid = web_aclid

    @property
    def s3_bucket_name(self):
        """Gets the s3_bucket_name of this CreateWebACLMigrationStackRequest.


        :return: The s3_bucket_name of this CreateWebACLMigrationStackRequest.
        :rtype: str
        """
        return self._s3_bucket_name

    @s3_bucket_name.setter
    def s3_bucket_name(self, s3_bucket_name):
        """Sets the s3_bucket_name of this CreateWebACLMigrationStackRequest.


        :param s3_bucket_name: The s3_bucket_name of this CreateWebACLMigrationStackRequest.
        :type s3_bucket_name: str
        """
        if s3_bucket_name is None:
            raise ValueError("Invalid value for `s3_bucket_name`, must not be `None`")

        self._s3_bucket_name = s3_bucket_name

    @property
    def ignore_unsupported_type(self):
        """Gets the ignore_unsupported_type of this CreateWebACLMigrationStackRequest.


        :return: The ignore_unsupported_type of this CreateWebACLMigrationStackRequest.
        :rtype: bool
        """
        return self._ignore_unsupported_type

    @ignore_unsupported_type.setter
    def ignore_unsupported_type(self, ignore_unsupported_type):
        """Sets the ignore_unsupported_type of this CreateWebACLMigrationStackRequest.


        :param ignore_unsupported_type: The ignore_unsupported_type of this CreateWebACLMigrationStackRequest.
        :type ignore_unsupported_type: bool
        """
        if ignore_unsupported_type is None:
            raise ValueError("Invalid value for `ignore_unsupported_type`, must not be `None`")

        self._ignore_unsupported_type = ignore_unsupported_type
