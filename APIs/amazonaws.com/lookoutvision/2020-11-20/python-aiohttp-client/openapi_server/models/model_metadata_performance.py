# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModelMetadataPerformance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, f1_score: float=None, recall: float=None, precision: float=None):
        """ModelMetadataPerformance - a model defined in OpenAPI

        :param f1_score: The f1_score of this ModelMetadataPerformance.
        :param recall: The recall of this ModelMetadataPerformance.
        :param precision: The precision of this ModelMetadataPerformance.
        """
        self.openapi_types = {
            'f1_score': float,
            'recall': float,
            'precision': float
        }

        self.attribute_map = {
            'f1_score': 'F1Score',
            'recall': 'Recall',
            'precision': 'Precision'
        }

        self._f1_score = f1_score
        self._recall = recall
        self._precision = precision

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelMetadataPerformance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModelMetadata_Performance of this ModelMetadataPerformance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def f1_score(self):
        """Gets the f1_score of this ModelMetadataPerformance.


        :return: The f1_score of this ModelMetadataPerformance.
        :rtype: float
        """
        return self._f1_score

    @f1_score.setter
    def f1_score(self, f1_score):
        """Sets the f1_score of this ModelMetadataPerformance.


        :param f1_score: The f1_score of this ModelMetadataPerformance.
        :type f1_score: float
        """

        self._f1_score = f1_score

    @property
    def recall(self):
        """Gets the recall of this ModelMetadataPerformance.


        :return: The recall of this ModelMetadataPerformance.
        :rtype: float
        """
        return self._recall

    @recall.setter
    def recall(self, recall):
        """Sets the recall of this ModelMetadataPerformance.


        :param recall: The recall of this ModelMetadataPerformance.
        :type recall: float
        """

        self._recall = recall

    @property
    def precision(self):
        """Gets the precision of this ModelMetadataPerformance.


        :return: The precision of this ModelMetadataPerformance.
        :rtype: float
        """
        return self._precision

    @precision.setter
    def precision(self, precision):
        """Sets the precision of this ModelMetadataPerformance.


        :param precision: The precision of this ModelMetadataPerformance.
        :type precision: float
        """

        self._precision = precision
