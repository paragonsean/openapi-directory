# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.greengrass_configuration_s3_output_location import GreengrassConfigurationS3OutputLocation
from openapi_server.models.greengrass_configuration_target_platform import GreengrassConfigurationTargetPlatform
from openapi_server.models.target_device import TargetDevice
from openapi_server import util


class StartModelPackagingJobRequestConfigurationGreengrass(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compiler_options: str=None, target_device: TargetDevice=None, target_platform: GreengrassConfigurationTargetPlatform=None, s3_output_location: GreengrassConfigurationS3OutputLocation=None, component_name: str=None, component_version: str=None, component_description: str=None, tags: List=None):
        """StartModelPackagingJobRequestConfigurationGreengrass - a model defined in OpenAPI

        :param compiler_options: The compiler_options of this StartModelPackagingJobRequestConfigurationGreengrass.
        :param target_device: The target_device of this StartModelPackagingJobRequestConfigurationGreengrass.
        :param target_platform: The target_platform of this StartModelPackagingJobRequestConfigurationGreengrass.
        :param s3_output_location: The s3_output_location of this StartModelPackagingJobRequestConfigurationGreengrass.
        :param component_name: The component_name of this StartModelPackagingJobRequestConfigurationGreengrass.
        :param component_version: The component_version of this StartModelPackagingJobRequestConfigurationGreengrass.
        :param component_description: The component_description of this StartModelPackagingJobRequestConfigurationGreengrass.
        :param tags: The tags of this StartModelPackagingJobRequestConfigurationGreengrass.
        """
        self.openapi_types = {
            'compiler_options': str,
            'target_device': TargetDevice,
            'target_platform': GreengrassConfigurationTargetPlatform,
            's3_output_location': GreengrassConfigurationS3OutputLocation,
            'component_name': str,
            'component_version': str,
            'component_description': str,
            'tags': List
        }

        self.attribute_map = {
            'compiler_options': 'CompilerOptions',
            'target_device': 'TargetDevice',
            'target_platform': 'TargetPlatform',
            's3_output_location': 'S3OutputLocation',
            'component_name': 'ComponentName',
            'component_version': 'ComponentVersion',
            'component_description': 'ComponentDescription',
            'tags': 'Tags'
        }

        self._compiler_options = compiler_options
        self._target_device = target_device
        self._target_platform = target_platform
        self._s3_output_location = s3_output_location
        self._component_name = component_name
        self._component_version = component_version
        self._component_description = component_description
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartModelPackagingJobRequestConfigurationGreengrass':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartModelPackagingJob_request_Configuration_Greengrass of this StartModelPackagingJobRequestConfigurationGreengrass.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compiler_options(self):
        """Gets the compiler_options of this StartModelPackagingJobRequestConfigurationGreengrass.


        :return: The compiler_options of this StartModelPackagingJobRequestConfigurationGreengrass.
        :rtype: str
        """
        return self._compiler_options

    @compiler_options.setter
    def compiler_options(self, compiler_options):
        """Sets the compiler_options of this StartModelPackagingJobRequestConfigurationGreengrass.


        :param compiler_options: The compiler_options of this StartModelPackagingJobRequestConfigurationGreengrass.
        :type compiler_options: str
        """

        self._compiler_options = compiler_options

    @property
    def target_device(self):
        """Gets the target_device of this StartModelPackagingJobRequestConfigurationGreengrass.


        :return: The target_device of this StartModelPackagingJobRequestConfigurationGreengrass.
        :rtype: TargetDevice
        """
        return self._target_device

    @target_device.setter
    def target_device(self, target_device):
        """Sets the target_device of this StartModelPackagingJobRequestConfigurationGreengrass.


        :param target_device: The target_device of this StartModelPackagingJobRequestConfigurationGreengrass.
        :type target_device: TargetDevice
        """

        self._target_device = target_device

    @property
    def target_platform(self):
        """Gets the target_platform of this StartModelPackagingJobRequestConfigurationGreengrass.


        :return: The target_platform of this StartModelPackagingJobRequestConfigurationGreengrass.
        :rtype: GreengrassConfigurationTargetPlatform
        """
        return self._target_platform

    @target_platform.setter
    def target_platform(self, target_platform):
        """Sets the target_platform of this StartModelPackagingJobRequestConfigurationGreengrass.


        :param target_platform: The target_platform of this StartModelPackagingJobRequestConfigurationGreengrass.
        :type target_platform: GreengrassConfigurationTargetPlatform
        """

        self._target_platform = target_platform

    @property
    def s3_output_location(self):
        """Gets the s3_output_location of this StartModelPackagingJobRequestConfigurationGreengrass.


        :return: The s3_output_location of this StartModelPackagingJobRequestConfigurationGreengrass.
        :rtype: GreengrassConfigurationS3OutputLocation
        """
        return self._s3_output_location

    @s3_output_location.setter
    def s3_output_location(self, s3_output_location):
        """Sets the s3_output_location of this StartModelPackagingJobRequestConfigurationGreengrass.


        :param s3_output_location: The s3_output_location of this StartModelPackagingJobRequestConfigurationGreengrass.
        :type s3_output_location: GreengrassConfigurationS3OutputLocation
        """
        if s3_output_location is None:
            raise ValueError("Invalid value for `s3_output_location`, must not be `None`")

        self._s3_output_location = s3_output_location

    @property
    def component_name(self):
        """Gets the component_name of this StartModelPackagingJobRequestConfigurationGreengrass.


        :return: The component_name of this StartModelPackagingJobRequestConfigurationGreengrass.
        :rtype: str
        """
        return self._component_name

    @component_name.setter
    def component_name(self, component_name):
        """Sets the component_name of this StartModelPackagingJobRequestConfigurationGreengrass.


        :param component_name: The component_name of this StartModelPackagingJobRequestConfigurationGreengrass.
        :type component_name: str
        """
        if component_name is None:
            raise ValueError("Invalid value for `component_name`, must not be `None`")

        self._component_name = component_name

    @property
    def component_version(self):
        """Gets the component_version of this StartModelPackagingJobRequestConfigurationGreengrass.


        :return: The component_version of this StartModelPackagingJobRequestConfigurationGreengrass.
        :rtype: str
        """
        return self._component_version

    @component_version.setter
    def component_version(self, component_version):
        """Sets the component_version of this StartModelPackagingJobRequestConfigurationGreengrass.


        :param component_version: The component_version of this StartModelPackagingJobRequestConfigurationGreengrass.
        :type component_version: str
        """

        self._component_version = component_version

    @property
    def component_description(self):
        """Gets the component_description of this StartModelPackagingJobRequestConfigurationGreengrass.


        :return: The component_description of this StartModelPackagingJobRequestConfigurationGreengrass.
        :rtype: str
        """
        return self._component_description

    @component_description.setter
    def component_description(self, component_description):
        """Sets the component_description of this StartModelPackagingJobRequestConfigurationGreengrass.


        :param component_description: The component_description of this StartModelPackagingJobRequestConfigurationGreengrass.
        :type component_description: str
        """

        self._component_description = component_description

    @property
    def tags(self):
        """Gets the tags of this StartModelPackagingJobRequestConfigurationGreengrass.


        :return: The tags of this StartModelPackagingJobRequestConfigurationGreengrass.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this StartModelPackagingJobRequestConfigurationGreengrass.


        :param tags: The tags of this StartModelPackagingJobRequestConfigurationGreengrass.
        :type tags: List
        """

        self._tags = tags
