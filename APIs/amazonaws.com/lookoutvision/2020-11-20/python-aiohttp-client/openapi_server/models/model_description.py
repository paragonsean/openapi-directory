# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_description_evaluation_manifest import ModelDescriptionEvaluationManifest
from openapi_server.models.model_description_evaluation_result import ModelDescriptionEvaluationResult
from openapi_server.models.model_description_output_config import ModelDescriptionOutputConfig
from openapi_server.models.model_description_performance import ModelDescriptionPerformance
from openapi_server.models.model_status import ModelStatus
from openapi_server import util


class ModelDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_version: str=None, model_arn: str=None, creation_timestamp: datetime=None, description: str=None, status: ModelStatus=None, status_message: str=None, performance: ModelDescriptionPerformance=None, output_config: ModelDescriptionOutputConfig=None, evaluation_manifest: ModelDescriptionEvaluationManifest=None, evaluation_result: ModelDescriptionEvaluationResult=None, evaluation_end_timestamp: datetime=None, kms_key_id: str=None, min_inference_units: int=None, max_inference_units: int=None):
        """ModelDescription - a model defined in OpenAPI

        :param model_version: The model_version of this ModelDescription.
        :param model_arn: The model_arn of this ModelDescription.
        :param creation_timestamp: The creation_timestamp of this ModelDescription.
        :param description: The description of this ModelDescription.
        :param status: The status of this ModelDescription.
        :param status_message: The status_message of this ModelDescription.
        :param performance: The performance of this ModelDescription.
        :param output_config: The output_config of this ModelDescription.
        :param evaluation_manifest: The evaluation_manifest of this ModelDescription.
        :param evaluation_result: The evaluation_result of this ModelDescription.
        :param evaluation_end_timestamp: The evaluation_end_timestamp of this ModelDescription.
        :param kms_key_id: The kms_key_id of this ModelDescription.
        :param min_inference_units: The min_inference_units of this ModelDescription.
        :param max_inference_units: The max_inference_units of this ModelDescription.
        """
        self.openapi_types = {
            'model_version': str,
            'model_arn': str,
            'creation_timestamp': datetime,
            'description': str,
            'status': ModelStatus,
            'status_message': str,
            'performance': ModelDescriptionPerformance,
            'output_config': ModelDescriptionOutputConfig,
            'evaluation_manifest': ModelDescriptionEvaluationManifest,
            'evaluation_result': ModelDescriptionEvaluationResult,
            'evaluation_end_timestamp': datetime,
            'kms_key_id': str,
            'min_inference_units': int,
            'max_inference_units': int
        }

        self.attribute_map = {
            'model_version': 'ModelVersion',
            'model_arn': 'ModelArn',
            'creation_timestamp': 'CreationTimestamp',
            'description': 'Description',
            'status': 'Status',
            'status_message': 'StatusMessage',
            'performance': 'Performance',
            'output_config': 'OutputConfig',
            'evaluation_manifest': 'EvaluationManifest',
            'evaluation_result': 'EvaluationResult',
            'evaluation_end_timestamp': 'EvaluationEndTimestamp',
            'kms_key_id': 'KmsKeyId',
            'min_inference_units': 'MinInferenceUnits',
            'max_inference_units': 'MaxInferenceUnits'
        }

        self._model_version = model_version
        self._model_arn = model_arn
        self._creation_timestamp = creation_timestamp
        self._description = description
        self._status = status
        self._status_message = status_message
        self._performance = performance
        self._output_config = output_config
        self._evaluation_manifest = evaluation_manifest
        self._evaluation_result = evaluation_result
        self._evaluation_end_timestamp = evaluation_end_timestamp
        self._kms_key_id = kms_key_id
        self._min_inference_units = min_inference_units
        self._max_inference_units = max_inference_units

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModelDescription of this ModelDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_version(self):
        """Gets the model_version of this ModelDescription.


        :return: The model_version of this ModelDescription.
        :rtype: str
        """
        return self._model_version

    @model_version.setter
    def model_version(self, model_version):
        """Sets the model_version of this ModelDescription.


        :param model_version: The model_version of this ModelDescription.
        :type model_version: str
        """

        self._model_version = model_version

    @property
    def model_arn(self):
        """Gets the model_arn of this ModelDescription.


        :return: The model_arn of this ModelDescription.
        :rtype: str
        """
        return self._model_arn

    @model_arn.setter
    def model_arn(self, model_arn):
        """Sets the model_arn of this ModelDescription.


        :param model_arn: The model_arn of this ModelDescription.
        :type model_arn: str
        """

        self._model_arn = model_arn

    @property
    def creation_timestamp(self):
        """Gets the creation_timestamp of this ModelDescription.


        :return: The creation_timestamp of this ModelDescription.
        :rtype: datetime
        """
        return self._creation_timestamp

    @creation_timestamp.setter
    def creation_timestamp(self, creation_timestamp):
        """Sets the creation_timestamp of this ModelDescription.


        :param creation_timestamp: The creation_timestamp of this ModelDescription.
        :type creation_timestamp: datetime
        """

        self._creation_timestamp = creation_timestamp

    @property
    def description(self):
        """Gets the description of this ModelDescription.


        :return: The description of this ModelDescription.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ModelDescription.


        :param description: The description of this ModelDescription.
        :type description: str
        """

        self._description = description

    @property
    def status(self):
        """Gets the status of this ModelDescription.


        :return: The status of this ModelDescription.
        :rtype: ModelStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ModelDescription.


        :param status: The status of this ModelDescription.
        :type status: ModelStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this ModelDescription.


        :return: The status_message of this ModelDescription.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this ModelDescription.


        :param status_message: The status_message of this ModelDescription.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def performance(self):
        """Gets the performance of this ModelDescription.


        :return: The performance of this ModelDescription.
        :rtype: ModelDescriptionPerformance
        """
        return self._performance

    @performance.setter
    def performance(self, performance):
        """Sets the performance of this ModelDescription.


        :param performance: The performance of this ModelDescription.
        :type performance: ModelDescriptionPerformance
        """

        self._performance = performance

    @property
    def output_config(self):
        """Gets the output_config of this ModelDescription.


        :return: The output_config of this ModelDescription.
        :rtype: ModelDescriptionOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this ModelDescription.


        :param output_config: The output_config of this ModelDescription.
        :type output_config: ModelDescriptionOutputConfig
        """

        self._output_config = output_config

    @property
    def evaluation_manifest(self):
        """Gets the evaluation_manifest of this ModelDescription.


        :return: The evaluation_manifest of this ModelDescription.
        :rtype: ModelDescriptionEvaluationManifest
        """
        return self._evaluation_manifest

    @evaluation_manifest.setter
    def evaluation_manifest(self, evaluation_manifest):
        """Sets the evaluation_manifest of this ModelDescription.


        :param evaluation_manifest: The evaluation_manifest of this ModelDescription.
        :type evaluation_manifest: ModelDescriptionEvaluationManifest
        """

        self._evaluation_manifest = evaluation_manifest

    @property
    def evaluation_result(self):
        """Gets the evaluation_result of this ModelDescription.


        :return: The evaluation_result of this ModelDescription.
        :rtype: ModelDescriptionEvaluationResult
        """
        return self._evaluation_result

    @evaluation_result.setter
    def evaluation_result(self, evaluation_result):
        """Sets the evaluation_result of this ModelDescription.


        :param evaluation_result: The evaluation_result of this ModelDescription.
        :type evaluation_result: ModelDescriptionEvaluationResult
        """

        self._evaluation_result = evaluation_result

    @property
    def evaluation_end_timestamp(self):
        """Gets the evaluation_end_timestamp of this ModelDescription.


        :return: The evaluation_end_timestamp of this ModelDescription.
        :rtype: datetime
        """
        return self._evaluation_end_timestamp

    @evaluation_end_timestamp.setter
    def evaluation_end_timestamp(self, evaluation_end_timestamp):
        """Sets the evaluation_end_timestamp of this ModelDescription.


        :param evaluation_end_timestamp: The evaluation_end_timestamp of this ModelDescription.
        :type evaluation_end_timestamp: datetime
        """

        self._evaluation_end_timestamp = evaluation_end_timestamp

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this ModelDescription.


        :return: The kms_key_id of this ModelDescription.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this ModelDescription.


        :param kms_key_id: The kms_key_id of this ModelDescription.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def min_inference_units(self):
        """Gets the min_inference_units of this ModelDescription.


        :return: The min_inference_units of this ModelDescription.
        :rtype: int
        """
        return self._min_inference_units

    @min_inference_units.setter
    def min_inference_units(self, min_inference_units):
        """Sets the min_inference_units of this ModelDescription.


        :param min_inference_units: The min_inference_units of this ModelDescription.
        :type min_inference_units: int
        """

        self._min_inference_units = min_inference_units

    @property
    def max_inference_units(self):
        """Gets the max_inference_units of this ModelDescription.


        :return: The max_inference_units of this ModelDescription.
        :rtype: int
        """
        return self._max_inference_units

    @max_inference_units.setter
    def max_inference_units(self, max_inference_units):
        """Sets the max_inference_units of this ModelDescription.


        :param max_inference_units: The max_inference_units of this ModelDescription.
        :type max_inference_units: int
        """

        self._max_inference_units = max_inference_units
