# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dataset_description_image_stats import DatasetDescriptionImageStats
from openapi_server.models.dataset_status import DatasetStatus
from openapi_server import util


class DatasetDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_name: str=None, dataset_type: str=None, creation_timestamp: datetime=None, last_updated_timestamp: datetime=None, status: DatasetStatus=None, status_message: str=None, image_stats: DatasetDescriptionImageStats=None):
        """DatasetDescription - a model defined in OpenAPI

        :param project_name: The project_name of this DatasetDescription.
        :param dataset_type: The dataset_type of this DatasetDescription.
        :param creation_timestamp: The creation_timestamp of this DatasetDescription.
        :param last_updated_timestamp: The last_updated_timestamp of this DatasetDescription.
        :param status: The status of this DatasetDescription.
        :param status_message: The status_message of this DatasetDescription.
        :param image_stats: The image_stats of this DatasetDescription.
        """
        self.openapi_types = {
            'project_name': str,
            'dataset_type': str,
            'creation_timestamp': datetime,
            'last_updated_timestamp': datetime,
            'status': DatasetStatus,
            'status_message': str,
            'image_stats': DatasetDescriptionImageStats
        }

        self.attribute_map = {
            'project_name': 'ProjectName',
            'dataset_type': 'DatasetType',
            'creation_timestamp': 'CreationTimestamp',
            'last_updated_timestamp': 'LastUpdatedTimestamp',
            'status': 'Status',
            'status_message': 'StatusMessage',
            'image_stats': 'ImageStats'
        }

        self._project_name = project_name
        self._dataset_type = dataset_type
        self._creation_timestamp = creation_timestamp
        self._last_updated_timestamp = last_updated_timestamp
        self._status = status
        self._status_message = status_message
        self._image_stats = image_stats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatasetDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatasetDescription of this DatasetDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_name(self):
        """Gets the project_name of this DatasetDescription.


        :return: The project_name of this DatasetDescription.
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this DatasetDescription.


        :param project_name: The project_name of this DatasetDescription.
        :type project_name: str
        """

        self._project_name = project_name

    @property
    def dataset_type(self):
        """Gets the dataset_type of this DatasetDescription.


        :return: The dataset_type of this DatasetDescription.
        :rtype: str
        """
        return self._dataset_type

    @dataset_type.setter
    def dataset_type(self, dataset_type):
        """Sets the dataset_type of this DatasetDescription.


        :param dataset_type: The dataset_type of this DatasetDescription.
        :type dataset_type: str
        """

        self._dataset_type = dataset_type

    @property
    def creation_timestamp(self):
        """Gets the creation_timestamp of this DatasetDescription.


        :return: The creation_timestamp of this DatasetDescription.
        :rtype: datetime
        """
        return self._creation_timestamp

    @creation_timestamp.setter
    def creation_timestamp(self, creation_timestamp):
        """Sets the creation_timestamp of this DatasetDescription.


        :param creation_timestamp: The creation_timestamp of this DatasetDescription.
        :type creation_timestamp: datetime
        """

        self._creation_timestamp = creation_timestamp

    @property
    def last_updated_timestamp(self):
        """Gets the last_updated_timestamp of this DatasetDescription.


        :return: The last_updated_timestamp of this DatasetDescription.
        :rtype: datetime
        """
        return self._last_updated_timestamp

    @last_updated_timestamp.setter
    def last_updated_timestamp(self, last_updated_timestamp):
        """Sets the last_updated_timestamp of this DatasetDescription.


        :param last_updated_timestamp: The last_updated_timestamp of this DatasetDescription.
        :type last_updated_timestamp: datetime
        """

        self._last_updated_timestamp = last_updated_timestamp

    @property
    def status(self):
        """Gets the status of this DatasetDescription.


        :return: The status of this DatasetDescription.
        :rtype: DatasetStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DatasetDescription.


        :param status: The status of this DatasetDescription.
        :type status: DatasetStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this DatasetDescription.


        :return: The status_message of this DatasetDescription.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this DatasetDescription.


        :param status_message: The status_message of this DatasetDescription.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def image_stats(self):
        """Gets the image_stats of this DatasetDescription.


        :return: The image_stats of this DatasetDescription.
        :rtype: DatasetDescriptionImageStats
        """
        return self._image_stats

    @image_stats.setter
    def image_stats(self, image_stats):
        """Sets the image_stats of this DatasetDescription.


        :param image_stats: The image_stats of this DatasetDescription.
        :type image_stats: DatasetDescriptionImageStats
        """

        self._image_stats = image_stats
