# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dataset_status import DatasetStatus
from openapi_server import util


class CreateDatasetResponseDatasetMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset_type: str=None, creation_timestamp: datetime=None, status: DatasetStatus=None, status_message: str=None):
        """CreateDatasetResponseDatasetMetadata - a model defined in OpenAPI

        :param dataset_type: The dataset_type of this CreateDatasetResponseDatasetMetadata.
        :param creation_timestamp: The creation_timestamp of this CreateDatasetResponseDatasetMetadata.
        :param status: The status of this CreateDatasetResponseDatasetMetadata.
        :param status_message: The status_message of this CreateDatasetResponseDatasetMetadata.
        """
        self.openapi_types = {
            'dataset_type': str,
            'creation_timestamp': datetime,
            'status': DatasetStatus,
            'status_message': str
        }

        self.attribute_map = {
            'dataset_type': 'DatasetType',
            'creation_timestamp': 'CreationTimestamp',
            'status': 'Status',
            'status_message': 'StatusMessage'
        }

        self._dataset_type = dataset_type
        self._creation_timestamp = creation_timestamp
        self._status = status
        self._status_message = status_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDatasetResponseDatasetMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDatasetResponse_DatasetMetadata of this CreateDatasetResponseDatasetMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_type(self):
        """Gets the dataset_type of this CreateDatasetResponseDatasetMetadata.


        :return: The dataset_type of this CreateDatasetResponseDatasetMetadata.
        :rtype: str
        """
        return self._dataset_type

    @dataset_type.setter
    def dataset_type(self, dataset_type):
        """Sets the dataset_type of this CreateDatasetResponseDatasetMetadata.


        :param dataset_type: The dataset_type of this CreateDatasetResponseDatasetMetadata.
        :type dataset_type: str
        """

        self._dataset_type = dataset_type

    @property
    def creation_timestamp(self):
        """Gets the creation_timestamp of this CreateDatasetResponseDatasetMetadata.


        :return: The creation_timestamp of this CreateDatasetResponseDatasetMetadata.
        :rtype: datetime
        """
        return self._creation_timestamp

    @creation_timestamp.setter
    def creation_timestamp(self, creation_timestamp):
        """Sets the creation_timestamp of this CreateDatasetResponseDatasetMetadata.


        :param creation_timestamp: The creation_timestamp of this CreateDatasetResponseDatasetMetadata.
        :type creation_timestamp: datetime
        """

        self._creation_timestamp = creation_timestamp

    @property
    def status(self):
        """Gets the status of this CreateDatasetResponseDatasetMetadata.


        :return: The status of this CreateDatasetResponseDatasetMetadata.
        :rtype: DatasetStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateDatasetResponseDatasetMetadata.


        :param status: The status of this CreateDatasetResponseDatasetMetadata.
        :type status: DatasetStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this CreateDatasetResponseDatasetMetadata.


        :return: The status_message of this CreateDatasetResponseDatasetMetadata.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this CreateDatasetResponseDatasetMetadata.


        :param status_message: The status_message of this CreateDatasetResponseDatasetMetadata.
        :type status_message: str
        """

        self._status_message = status_message
