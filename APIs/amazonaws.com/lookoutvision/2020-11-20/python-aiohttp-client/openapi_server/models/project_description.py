# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_arn: str=None, project_name: str=None, creation_timestamp: datetime=None, datasets: List=None):
        """ProjectDescription - a model defined in OpenAPI

        :param project_arn: The project_arn of this ProjectDescription.
        :param project_name: The project_name of this ProjectDescription.
        :param creation_timestamp: The creation_timestamp of this ProjectDescription.
        :param datasets: The datasets of this ProjectDescription.
        """
        self.openapi_types = {
            'project_arn': str,
            'project_name': str,
            'creation_timestamp': datetime,
            'datasets': List
        }

        self.attribute_map = {
            'project_arn': 'ProjectArn',
            'project_name': 'ProjectName',
            'creation_timestamp': 'CreationTimestamp',
            'datasets': 'Datasets'
        }

        self._project_arn = project_arn
        self._project_name = project_name
        self._creation_timestamp = creation_timestamp
        self._datasets = datasets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectDescription of this ProjectDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_arn(self):
        """Gets the project_arn of this ProjectDescription.


        :return: The project_arn of this ProjectDescription.
        :rtype: str
        """
        return self._project_arn

    @project_arn.setter
    def project_arn(self, project_arn):
        """Sets the project_arn of this ProjectDescription.


        :param project_arn: The project_arn of this ProjectDescription.
        :type project_arn: str
        """

        self._project_arn = project_arn

    @property
    def project_name(self):
        """Gets the project_name of this ProjectDescription.


        :return: The project_name of this ProjectDescription.
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this ProjectDescription.


        :param project_name: The project_name of this ProjectDescription.
        :type project_name: str
        """

        self._project_name = project_name

    @property
    def creation_timestamp(self):
        """Gets the creation_timestamp of this ProjectDescription.


        :return: The creation_timestamp of this ProjectDescription.
        :rtype: datetime
        """
        return self._creation_timestamp

    @creation_timestamp.setter
    def creation_timestamp(self, creation_timestamp):
        """Sets the creation_timestamp of this ProjectDescription.


        :param creation_timestamp: The creation_timestamp of this ProjectDescription.
        :type creation_timestamp: datetime
        """

        self._creation_timestamp = creation_timestamp

    @property
    def datasets(self):
        """Gets the datasets of this ProjectDescription.


        :return: The datasets of this ProjectDescription.
        :rtype: List
        """
        return self._datasets

    @datasets.setter
    def datasets(self, datasets):
        """Sets the datasets of this ProjectDescription.


        :param datasets: The datasets of this ProjectDescription.
        :type datasets: List
        """

        self._datasets = datasets
