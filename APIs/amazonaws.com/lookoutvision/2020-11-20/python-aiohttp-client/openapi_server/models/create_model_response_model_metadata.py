# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_metadata_performance import ModelMetadataPerformance
from openapi_server.models.model_status import ModelStatus
from openapi_server import util


class CreateModelResponseModelMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_timestamp: datetime=None, model_version: str=None, model_arn: str=None, description: str=None, status: ModelStatus=None, status_message: str=None, performance: ModelMetadataPerformance=None):
        """CreateModelResponseModelMetadata - a model defined in OpenAPI

        :param creation_timestamp: The creation_timestamp of this CreateModelResponseModelMetadata.
        :param model_version: The model_version of this CreateModelResponseModelMetadata.
        :param model_arn: The model_arn of this CreateModelResponseModelMetadata.
        :param description: The description of this CreateModelResponseModelMetadata.
        :param status: The status of this CreateModelResponseModelMetadata.
        :param status_message: The status_message of this CreateModelResponseModelMetadata.
        :param performance: The performance of this CreateModelResponseModelMetadata.
        """
        self.openapi_types = {
            'creation_timestamp': datetime,
            'model_version': str,
            'model_arn': str,
            'description': str,
            'status': ModelStatus,
            'status_message': str,
            'performance': ModelMetadataPerformance
        }

        self.attribute_map = {
            'creation_timestamp': 'CreationTimestamp',
            'model_version': 'ModelVersion',
            'model_arn': 'ModelArn',
            'description': 'Description',
            'status': 'Status',
            'status_message': 'StatusMessage',
            'performance': 'Performance'
        }

        self._creation_timestamp = creation_timestamp
        self._model_version = model_version
        self._model_arn = model_arn
        self._description = description
        self._status = status
        self._status_message = status_message
        self._performance = performance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateModelResponseModelMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateModelResponse_ModelMetadata of this CreateModelResponseModelMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_timestamp(self):
        """Gets the creation_timestamp of this CreateModelResponseModelMetadata.


        :return: The creation_timestamp of this CreateModelResponseModelMetadata.
        :rtype: datetime
        """
        return self._creation_timestamp

    @creation_timestamp.setter
    def creation_timestamp(self, creation_timestamp):
        """Sets the creation_timestamp of this CreateModelResponseModelMetadata.


        :param creation_timestamp: The creation_timestamp of this CreateModelResponseModelMetadata.
        :type creation_timestamp: datetime
        """

        self._creation_timestamp = creation_timestamp

    @property
    def model_version(self):
        """Gets the model_version of this CreateModelResponseModelMetadata.


        :return: The model_version of this CreateModelResponseModelMetadata.
        :rtype: str
        """
        return self._model_version

    @model_version.setter
    def model_version(self, model_version):
        """Sets the model_version of this CreateModelResponseModelMetadata.


        :param model_version: The model_version of this CreateModelResponseModelMetadata.
        :type model_version: str
        """

        self._model_version = model_version

    @property
    def model_arn(self):
        """Gets the model_arn of this CreateModelResponseModelMetadata.


        :return: The model_arn of this CreateModelResponseModelMetadata.
        :rtype: str
        """
        return self._model_arn

    @model_arn.setter
    def model_arn(self, model_arn):
        """Sets the model_arn of this CreateModelResponseModelMetadata.


        :param model_arn: The model_arn of this CreateModelResponseModelMetadata.
        :type model_arn: str
        """

        self._model_arn = model_arn

    @property
    def description(self):
        """Gets the description of this CreateModelResponseModelMetadata.


        :return: The description of this CreateModelResponseModelMetadata.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateModelResponseModelMetadata.


        :param description: The description of this CreateModelResponseModelMetadata.
        :type description: str
        """

        self._description = description

    @property
    def status(self):
        """Gets the status of this CreateModelResponseModelMetadata.


        :return: The status of this CreateModelResponseModelMetadata.
        :rtype: ModelStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateModelResponseModelMetadata.


        :param status: The status of this CreateModelResponseModelMetadata.
        :type status: ModelStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this CreateModelResponseModelMetadata.


        :return: The status_message of this CreateModelResponseModelMetadata.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this CreateModelResponseModelMetadata.


        :param status_message: The status_message of this CreateModelResponseModelMetadata.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def performance(self):
        """Gets the performance of this CreateModelResponseModelMetadata.


        :return: The performance of this CreateModelResponseModelMetadata.
        :rtype: ModelMetadataPerformance
        """
        return self._performance

    @performance.setter
    def performance(self, performance):
        """Sets the performance of this CreateModelResponseModelMetadata.


        :param performance: The performance of this CreateModelResponseModelMetadata.
        :type performance: ModelMetadataPerformance
        """

        self._performance = performance
