/**
 * Amazon Lookout for Vision
 * <p>This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.</p> <p>Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.</p>
 *
 * The version of the OpenAPI document: 2020-11-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModelMetadata.h
 *
 * Describes an Amazon Lookout for Vision model.
 */

#ifndef OAIModelMetadata_H
#define OAIModelMetadata_H

#include <QJsonObject>

#include "OAIModelMetadata_Performance.h"
#include "OAIModelStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIModelMetadata_Performance;

class OAIModelMetadata : public OAIObject {
public:
    OAIModelMetadata();
    OAIModelMetadata(QString json);
    ~OAIModelMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreationTimestamp() const;
    void setCreationTimestamp(const QDateTime &creation_timestamp);
    bool is_creation_timestamp_Set() const;
    bool is_creation_timestamp_Valid() const;

    QString getModelVersion() const;
    void setModelVersion(const QString &model_version);
    bool is_model_version_Set() const;
    bool is_model_version_Valid() const;

    QString getModelArn() const;
    void setModelArn(const QString &model_arn);
    bool is_model_arn_Set() const;
    bool is_model_arn_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIModelStatus getStatus() const;
    void setStatus(const OAIModelStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    OAIModelMetadata_Performance getPerformance() const;
    void setPerformance(const OAIModelMetadata_Performance &performance);
    bool is_performance_Set() const;
    bool is_performance_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_creation_timestamp;
    bool m_creation_timestamp_isSet;
    bool m_creation_timestamp_isValid;

    QString m_model_version;
    bool m_model_version_isSet;
    bool m_model_version_isValid;

    QString m_model_arn;
    bool m_model_arn_isSet;
    bool m_model_arn_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIModelStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    OAIModelMetadata_Performance m_performance;
    bool m_performance_isSet;
    bool m_performance_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModelMetadata)

#endif // OAIModelMetadata_H
