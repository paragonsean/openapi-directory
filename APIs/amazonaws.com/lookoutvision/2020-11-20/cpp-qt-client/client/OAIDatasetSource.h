/**
 * Amazon Lookout for Vision
 * <p>This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.</p> <p>Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.</p>
 *
 * The version of the OpenAPI document: 2020-11-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatasetSource.h
 *
 * Information about the location of a manifest file that Amazon Lookout for Vision uses to to create a dataset.
 */

#ifndef OAIDatasetSource_H
#define OAIDatasetSource_H

#include <QJsonObject>

#include "OAICreateDataset_request_DatasetSource_GroundTruthManifest.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateDataset_request_DatasetSource_GroundTruthManifest;

class OAIDatasetSource : public OAIObject {
public:
    OAIDatasetSource();
    OAIDatasetSource(QString json);
    ~OAIDatasetSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateDataset_request_DatasetSource_GroundTruthManifest getGroundTruthManifest() const;
    void setGroundTruthManifest(const OAICreateDataset_request_DatasetSource_GroundTruthManifest &ground_truth_manifest);
    bool is_ground_truth_manifest_Set() const;
    bool is_ground_truth_manifest_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateDataset_request_DatasetSource_GroundTruthManifest m_ground_truth_manifest;
    bool m_ground_truth_manifest_isSet;
    bool m_ground_truth_manifest_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatasetSource)

#endif // OAIDatasetSource_H
