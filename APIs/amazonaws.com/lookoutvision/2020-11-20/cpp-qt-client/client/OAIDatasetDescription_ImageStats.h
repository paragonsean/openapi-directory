/**
 * Amazon Lookout for Vision
 * <p>This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.</p> <p>Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.</p>
 *
 * The version of the OpenAPI document: 2020-11-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatasetDescription_ImageStats.h
 *
 * 
 */

#ifndef OAIDatasetDescription_ImageStats_H
#define OAIDatasetDescription_ImageStats_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDatasetDescription_ImageStats : public OAIObject {
public:
    OAIDatasetDescription_ImageStats();
    OAIDatasetDescription_ImageStats(QString json);
    ~OAIDatasetDescription_ImageStats() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    qint32 getLabeled() const;
    void setLabeled(const qint32 &labeled);
    bool is_labeled_Set() const;
    bool is_labeled_Valid() const;

    qint32 getNormal() const;
    void setNormal(const qint32 &normal);
    bool is_normal_Set() const;
    bool is_normal_Valid() const;

    qint32 getAnomaly() const;
    void setAnomaly(const qint32 &anomaly);
    bool is_anomaly_Set() const;
    bool is_anomaly_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    qint32 m_labeled;
    bool m_labeled_isSet;
    bool m_labeled_isValid;

    qint32 m_normal;
    bool m_normal_isSet;
    bool m_normal_isValid;

    qint32 m_anomaly;
    bool m_anomaly_isSet;
    bool m_anomaly_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatasetDescription_ImageStats)

#endif // OAIDatasetDescription_ImageStats_H
