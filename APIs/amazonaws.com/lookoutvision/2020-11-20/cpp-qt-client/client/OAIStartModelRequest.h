/**
 * Amazon Lookout for Vision
 * <p>This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.</p> <p>Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.</p>
 *
 * The version of the OpenAPI document: 2020-11-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartModelRequest.h
 *
 * 
 */

#ifndef OAIStartModelRequest_H
#define OAIStartModelRequest_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStartModelRequest : public OAIObject {
public:
    OAIStartModelRequest();
    OAIStartModelRequest(QString json);
    ~OAIStartModelRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMinInferenceUnits() const;
    void setMinInferenceUnits(const qint32 &min_inference_units);
    bool is_min_inference_units_Set() const;
    bool is_min_inference_units_Valid() const;

    qint32 getMaxInferenceUnits() const;
    void setMaxInferenceUnits(const qint32 &max_inference_units);
    bool is_max_inference_units_Set() const;
    bool is_max_inference_units_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_min_inference_units;
    bool m_min_inference_units_isSet;
    bool m_min_inference_units_isValid;

    qint32 m_max_inference_units;
    bool m_max_inference_units_isSet;
    bool m_max_inference_units_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartModelRequest)

#endif // OAIStartModelRequest_H
