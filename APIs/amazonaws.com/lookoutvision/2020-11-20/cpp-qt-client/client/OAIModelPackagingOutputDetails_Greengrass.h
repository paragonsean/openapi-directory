/**
 * Amazon Lookout for Vision
 * <p>This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.</p> <p>Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.</p>
 *
 * The version of the OpenAPI document: 2020-11-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModelPackagingOutputDetails_Greengrass.h
 *
 * 
 */

#ifndef OAIModelPackagingOutputDetails_Greengrass_H
#define OAIModelPackagingOutputDetails_Greengrass_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIModelPackagingOutputDetails_Greengrass : public OAIObject {
public:
    OAIModelPackagingOutputDetails_Greengrass();
    OAIModelPackagingOutputDetails_Greengrass(QString json);
    ~OAIModelPackagingOutputDetails_Greengrass() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComponentVersionArn() const;
    void setComponentVersionArn(const QString &component_version_arn);
    bool is_component_version_arn_Set() const;
    bool is_component_version_arn_Valid() const;

    QString getComponentName() const;
    void setComponentName(const QString &component_name);
    bool is_component_name_Set() const;
    bool is_component_name_Valid() const;

    QString getComponentVersion() const;
    void setComponentVersion(const QString &component_version);
    bool is_component_version_Set() const;
    bool is_component_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_component_version_arn;
    bool m_component_version_arn_isSet;
    bool m_component_version_arn_isValid;

    QString m_component_name;
    bool m_component_name_isSet;
    bool m_component_name_isValid;

    QString m_component_version;
    bool m_component_version_isSet;
    bool m_component_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModelPackagingOutputDetails_Greengrass)

#endif // OAIModelPackagingOutputDetails_Greengrass_H
