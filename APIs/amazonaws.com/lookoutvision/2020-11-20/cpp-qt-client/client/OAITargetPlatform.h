/**
 * Amazon Lookout for Vision
 * <p>This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.</p> <p>Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.</p>
 *
 * The version of the OpenAPI document: 2020-11-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITargetPlatform.h
 *
 * The platform on which a model runs on an AWS IoT Greengrass core device.
 */

#ifndef OAITargetPlatform_H
#define OAITargetPlatform_H

#include <QJsonObject>

#include "OAITargetPlatformAccelerator.h"
#include "OAITargetPlatformArch.h"
#include "OAITargetPlatformOs.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITargetPlatform : public OAIObject {
public:
    OAITargetPlatform();
    OAITargetPlatform(QString json);
    ~OAITargetPlatform() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITargetPlatformOs getOs() const;
    void setOs(const OAITargetPlatformOs &os);
    bool is_os_Set() const;
    bool is_os_Valid() const;

    OAITargetPlatformArch getArch() const;
    void setArch(const OAITargetPlatformArch &arch);
    bool is_arch_Set() const;
    bool is_arch_Valid() const;

    OAITargetPlatformAccelerator getAccelerator() const;
    void setAccelerator(const OAITargetPlatformAccelerator &accelerator);
    bool is_accelerator_Set() const;
    bool is_accelerator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITargetPlatformOs m_os;
    bool m_os_isSet;
    bool m_os_isValid;

    OAITargetPlatformArch m_arch;
    bool m_arch_isSet;
    bool m_arch_isValid;

    OAITargetPlatformAccelerator m_accelerator;
    bool m_accelerator_isSet;
    bool m_accelerator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITargetPlatform)

#endif // OAITargetPlatform_H
