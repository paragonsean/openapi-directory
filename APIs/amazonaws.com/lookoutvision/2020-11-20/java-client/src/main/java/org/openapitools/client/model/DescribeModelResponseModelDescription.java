/*
 * Amazon Lookout for Vision
 * <p>This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.</p> <p>Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.</p>
 *
 * The version of the OpenAPI document: 2020-11-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ModelDescriptionEvaluationManifest;
import org.openapitools.client.model.ModelDescriptionEvaluationResult;
import org.openapitools.client.model.ModelDescriptionOutputConfig;
import org.openapitools.client.model.ModelDescriptionPerformance;
import org.openapitools.client.model.ModelStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeModelResponseModelDescription
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:01:16.523404-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeModelResponseModelDescription {
  public static final String SERIALIZED_NAME_MODEL_VERSION = "ModelVersion";
  @SerializedName(SERIALIZED_NAME_MODEL_VERSION)
  private String modelVersion;

  public static final String SERIALIZED_NAME_MODEL_ARN = "ModelArn";
  @SerializedName(SERIALIZED_NAME_MODEL_ARN)
  private String modelArn;

  public static final String SERIALIZED_NAME_CREATION_TIMESTAMP = "CreationTimestamp";
  @SerializedName(SERIALIZED_NAME_CREATION_TIMESTAMP)
  private OffsetDateTime creationTimestamp;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ModelStatus status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "StatusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_PERFORMANCE = "Performance";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE)
  private ModelDescriptionPerformance performance;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "OutputConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private ModelDescriptionOutputConfig outputConfig;

  public static final String SERIALIZED_NAME_EVALUATION_MANIFEST = "EvaluationManifest";
  @SerializedName(SERIALIZED_NAME_EVALUATION_MANIFEST)
  private ModelDescriptionEvaluationManifest evaluationManifest;

  public static final String SERIALIZED_NAME_EVALUATION_RESULT = "EvaluationResult";
  @SerializedName(SERIALIZED_NAME_EVALUATION_RESULT)
  private ModelDescriptionEvaluationResult evaluationResult;

  public static final String SERIALIZED_NAME_EVALUATION_END_TIMESTAMP = "EvaluationEndTimestamp";
  @SerializedName(SERIALIZED_NAME_EVALUATION_END_TIMESTAMP)
  private OffsetDateTime evaluationEndTimestamp;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_MIN_INFERENCE_UNITS = "MinInferenceUnits";
  @SerializedName(SERIALIZED_NAME_MIN_INFERENCE_UNITS)
  private Integer minInferenceUnits;

  public static final String SERIALIZED_NAME_MAX_INFERENCE_UNITS = "MaxInferenceUnits";
  @SerializedName(SERIALIZED_NAME_MAX_INFERENCE_UNITS)
  private Integer maxInferenceUnits;

  public DescribeModelResponseModelDescription() {
  }

  public DescribeModelResponseModelDescription modelVersion(String modelVersion) {
    this.modelVersion = modelVersion;
    return this;
  }

  /**
   * Get modelVersion
   * @return modelVersion
   */
  @javax.annotation.Nullable
  public String getModelVersion() {
    return modelVersion;
  }

  public void setModelVersion(String modelVersion) {
    this.modelVersion = modelVersion;
  }


  public DescribeModelResponseModelDescription modelArn(String modelArn) {
    this.modelArn = modelArn;
    return this;
  }

  /**
   * Get modelArn
   * @return modelArn
   */
  @javax.annotation.Nullable
  public String getModelArn() {
    return modelArn;
  }

  public void setModelArn(String modelArn) {
    this.modelArn = modelArn;
  }


  public DescribeModelResponseModelDescription creationTimestamp(OffsetDateTime creationTimestamp) {
    this.creationTimestamp = creationTimestamp;
    return this;
  }

  /**
   * Get creationTimestamp
   * @return creationTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTimestamp() {
    return creationTimestamp;
  }

  public void setCreationTimestamp(OffsetDateTime creationTimestamp) {
    this.creationTimestamp = creationTimestamp;
  }


  public DescribeModelResponseModelDescription description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DescribeModelResponseModelDescription status(ModelStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ModelStatus getStatus() {
    return status;
  }

  public void setStatus(ModelStatus status) {
    this.status = status;
  }


  public DescribeModelResponseModelDescription statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public DescribeModelResponseModelDescription performance(ModelDescriptionPerformance performance) {
    this.performance = performance;
    return this;
  }

  /**
   * Get performance
   * @return performance
   */
  @javax.annotation.Nullable
  public ModelDescriptionPerformance getPerformance() {
    return performance;
  }

  public void setPerformance(ModelDescriptionPerformance performance) {
    this.performance = performance;
  }


  public DescribeModelResponseModelDescription outputConfig(ModelDescriptionOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   */
  @javax.annotation.Nullable
  public ModelDescriptionOutputConfig getOutputConfig() {
    return outputConfig;
  }

  public void setOutputConfig(ModelDescriptionOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }


  public DescribeModelResponseModelDescription evaluationManifest(ModelDescriptionEvaluationManifest evaluationManifest) {
    this.evaluationManifest = evaluationManifest;
    return this;
  }

  /**
   * Get evaluationManifest
   * @return evaluationManifest
   */
  @javax.annotation.Nullable
  public ModelDescriptionEvaluationManifest getEvaluationManifest() {
    return evaluationManifest;
  }

  public void setEvaluationManifest(ModelDescriptionEvaluationManifest evaluationManifest) {
    this.evaluationManifest = evaluationManifest;
  }


  public DescribeModelResponseModelDescription evaluationResult(ModelDescriptionEvaluationResult evaluationResult) {
    this.evaluationResult = evaluationResult;
    return this;
  }

  /**
   * Get evaluationResult
   * @return evaluationResult
   */
  @javax.annotation.Nullable
  public ModelDescriptionEvaluationResult getEvaluationResult() {
    return evaluationResult;
  }

  public void setEvaluationResult(ModelDescriptionEvaluationResult evaluationResult) {
    this.evaluationResult = evaluationResult;
  }


  public DescribeModelResponseModelDescription evaluationEndTimestamp(OffsetDateTime evaluationEndTimestamp) {
    this.evaluationEndTimestamp = evaluationEndTimestamp;
    return this;
  }

  /**
   * Get evaluationEndTimestamp
   * @return evaluationEndTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEvaluationEndTimestamp() {
    return evaluationEndTimestamp;
  }

  public void setEvaluationEndTimestamp(OffsetDateTime evaluationEndTimestamp) {
    this.evaluationEndTimestamp = evaluationEndTimestamp;
  }


  public DescribeModelResponseModelDescription kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public DescribeModelResponseModelDescription minInferenceUnits(Integer minInferenceUnits) {
    this.minInferenceUnits = minInferenceUnits;
    return this;
  }

  /**
   * Get minInferenceUnits
   * @return minInferenceUnits
   */
  @javax.annotation.Nullable
  public Integer getMinInferenceUnits() {
    return minInferenceUnits;
  }

  public void setMinInferenceUnits(Integer minInferenceUnits) {
    this.minInferenceUnits = minInferenceUnits;
  }


  public DescribeModelResponseModelDescription maxInferenceUnits(Integer maxInferenceUnits) {
    this.maxInferenceUnits = maxInferenceUnits;
    return this;
  }

  /**
   * Get maxInferenceUnits
   * @return maxInferenceUnits
   */
  @javax.annotation.Nullable
  public Integer getMaxInferenceUnits() {
    return maxInferenceUnits;
  }

  public void setMaxInferenceUnits(Integer maxInferenceUnits) {
    this.maxInferenceUnits = maxInferenceUnits;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeModelResponseModelDescription describeModelResponseModelDescription = (DescribeModelResponseModelDescription) o;
    return Objects.equals(this.modelVersion, describeModelResponseModelDescription.modelVersion) &&
        Objects.equals(this.modelArn, describeModelResponseModelDescription.modelArn) &&
        Objects.equals(this.creationTimestamp, describeModelResponseModelDescription.creationTimestamp) &&
        Objects.equals(this.description, describeModelResponseModelDescription.description) &&
        Objects.equals(this.status, describeModelResponseModelDescription.status) &&
        Objects.equals(this.statusMessage, describeModelResponseModelDescription.statusMessage) &&
        Objects.equals(this.performance, describeModelResponseModelDescription.performance) &&
        Objects.equals(this.outputConfig, describeModelResponseModelDescription.outputConfig) &&
        Objects.equals(this.evaluationManifest, describeModelResponseModelDescription.evaluationManifest) &&
        Objects.equals(this.evaluationResult, describeModelResponseModelDescription.evaluationResult) &&
        Objects.equals(this.evaluationEndTimestamp, describeModelResponseModelDescription.evaluationEndTimestamp) &&
        Objects.equals(this.kmsKeyId, describeModelResponseModelDescription.kmsKeyId) &&
        Objects.equals(this.minInferenceUnits, describeModelResponseModelDescription.minInferenceUnits) &&
        Objects.equals(this.maxInferenceUnits, describeModelResponseModelDescription.maxInferenceUnits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelVersion, modelArn, creationTimestamp, description, status, statusMessage, performance, outputConfig, evaluationManifest, evaluationResult, evaluationEndTimestamp, kmsKeyId, minInferenceUnits, maxInferenceUnits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeModelResponseModelDescription {\n");
    sb.append("    modelVersion: ").append(toIndentedString(modelVersion)).append("\n");
    sb.append("    modelArn: ").append(toIndentedString(modelArn)).append("\n");
    sb.append("    creationTimestamp: ").append(toIndentedString(creationTimestamp)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    performance: ").append(toIndentedString(performance)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("    evaluationManifest: ").append(toIndentedString(evaluationManifest)).append("\n");
    sb.append("    evaluationResult: ").append(toIndentedString(evaluationResult)).append("\n");
    sb.append("    evaluationEndTimestamp: ").append(toIndentedString(evaluationEndTimestamp)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    minInferenceUnits: ").append(toIndentedString(minInferenceUnits)).append("\n");
    sb.append("    maxInferenceUnits: ").append(toIndentedString(maxInferenceUnits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ModelVersion");
    openapiFields.add("ModelArn");
    openapiFields.add("CreationTimestamp");
    openapiFields.add("Description");
    openapiFields.add("Status");
    openapiFields.add("StatusMessage");
    openapiFields.add("Performance");
    openapiFields.add("OutputConfig");
    openapiFields.add("EvaluationManifest");
    openapiFields.add("EvaluationResult");
    openapiFields.add("EvaluationEndTimestamp");
    openapiFields.add("KmsKeyId");
    openapiFields.add("MinInferenceUnits");
    openapiFields.add("MaxInferenceUnits");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeModelResponseModelDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeModelResponseModelDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeModelResponseModelDescription is not found in the empty JSON string", DescribeModelResponseModelDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeModelResponseModelDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeModelResponseModelDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ModelVersion`
      if (jsonObj.get("ModelVersion") != null && !jsonObj.get("ModelVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelVersion"));
      }
      // validate the optional field `ModelArn`
      if (jsonObj.get("ModelArn") != null && !jsonObj.get("ModelArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelArn"));
      }
      // validate the optional field `CreationTimestamp`
      if (jsonObj.get("CreationTimestamp") != null && !jsonObj.get("CreationTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTimestamp"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        ModelStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusMessage`
      if (jsonObj.get("StatusMessage") != null && !jsonObj.get("StatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusMessage"));
      }
      // validate the optional field `Performance`
      if (jsonObj.get("Performance") != null && !jsonObj.get("Performance").isJsonNull()) {
        ModelDescriptionPerformance.validateJsonElement(jsonObj.get("Performance"));
      }
      // validate the optional field `OutputConfig`
      if (jsonObj.get("OutputConfig") != null && !jsonObj.get("OutputConfig").isJsonNull()) {
        ModelDescriptionOutputConfig.validateJsonElement(jsonObj.get("OutputConfig"));
      }
      // validate the optional field `EvaluationManifest`
      if (jsonObj.get("EvaluationManifest") != null && !jsonObj.get("EvaluationManifest").isJsonNull()) {
        ModelDescriptionEvaluationManifest.validateJsonElement(jsonObj.get("EvaluationManifest"));
      }
      // validate the optional field `EvaluationResult`
      if (jsonObj.get("EvaluationResult") != null && !jsonObj.get("EvaluationResult").isJsonNull()) {
        ModelDescriptionEvaluationResult.validateJsonElement(jsonObj.get("EvaluationResult"));
      }
      // validate the optional field `EvaluationEndTimestamp`
      if (jsonObj.get("EvaluationEndTimestamp") != null && !jsonObj.get("EvaluationEndTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EvaluationEndTimestamp"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `MinInferenceUnits`
      if (jsonObj.get("MinInferenceUnits") != null && !jsonObj.get("MinInferenceUnits").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinInferenceUnits"));
      }
      // validate the optional field `MaxInferenceUnits`
      if (jsonObj.get("MaxInferenceUnits") != null && !jsonObj.get("MaxInferenceUnits").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxInferenceUnits"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeModelResponseModelDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeModelResponseModelDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeModelResponseModelDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeModelResponseModelDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeModelResponseModelDescription>() {
           @Override
           public void write(JsonWriter out, DescribeModelResponseModelDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeModelResponseModelDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeModelResponseModelDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeModelResponseModelDescription
   * @throws IOException if the JSON string is invalid with respect to DescribeModelResponseModelDescription
   */
  public static DescribeModelResponseModelDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeModelResponseModelDescription.class);
  }

  /**
   * Convert an instance of DescribeModelResponseModelDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

