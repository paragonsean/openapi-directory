/*
 * Amazon Lookout for Vision
 * <p>This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.</p> <p>Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.</p>
 *
 * The version of the OpenAPI document: 2020-11-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ModelPackagingDescriptionModelPackagingConfiguration;
import org.openapitools.client.model.ModelPackagingDescriptionModelPackagingOutputDetails;
import org.openapitools.client.model.ModelPackagingJobStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  Information about a model packaging job. For more information, see &lt;a&gt;DescribeModelPackagingJob&lt;/a&gt;. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:01:16.523404-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModelPackagingDescription {
  public static final String SERIALIZED_NAME_JOB_NAME = "JobName";
  @SerializedName(SERIALIZED_NAME_JOB_NAME)
  private String jobName;

  public static final String SERIALIZED_NAME_PROJECT_NAME = "ProjectName";
  @SerializedName(SERIALIZED_NAME_PROJECT_NAME)
  private String projectName;

  public static final String SERIALIZED_NAME_MODEL_VERSION = "ModelVersion";
  @SerializedName(SERIALIZED_NAME_MODEL_VERSION)
  private String modelVersion;

  public static final String SERIALIZED_NAME_MODEL_PACKAGING_CONFIGURATION = "ModelPackagingConfiguration";
  @SerializedName(SERIALIZED_NAME_MODEL_PACKAGING_CONFIGURATION)
  private ModelPackagingDescriptionModelPackagingConfiguration modelPackagingConfiguration;

  public static final String SERIALIZED_NAME_MODEL_PACKAGING_JOB_DESCRIPTION = "ModelPackagingJobDescription";
  @SerializedName(SERIALIZED_NAME_MODEL_PACKAGING_JOB_DESCRIPTION)
  private String modelPackagingJobDescription;

  public static final String SERIALIZED_NAME_MODEL_PACKAGING_METHOD = "ModelPackagingMethod";
  @SerializedName(SERIALIZED_NAME_MODEL_PACKAGING_METHOD)
  private String modelPackagingMethod;

  public static final String SERIALIZED_NAME_MODEL_PACKAGING_OUTPUT_DETAILS = "ModelPackagingOutputDetails";
  @SerializedName(SERIALIZED_NAME_MODEL_PACKAGING_OUTPUT_DETAILS)
  private ModelPackagingDescriptionModelPackagingOutputDetails modelPackagingOutputDetails;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ModelPackagingJobStatus status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "StatusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_CREATION_TIMESTAMP = "CreationTimestamp";
  @SerializedName(SERIALIZED_NAME_CREATION_TIMESTAMP)
  private OffsetDateTime creationTimestamp;

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIMESTAMP = "LastUpdatedTimestamp";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIMESTAMP)
  private OffsetDateTime lastUpdatedTimestamp;

  public ModelPackagingDescription() {
  }

  public ModelPackagingDescription jobName(String jobName) {
    this.jobName = jobName;
    return this;
  }

  /**
   * Get jobName
   * @return jobName
   */
  @javax.annotation.Nullable
  public String getJobName() {
    return jobName;
  }

  public void setJobName(String jobName) {
    this.jobName = jobName;
  }


  public ModelPackagingDescription projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  /**
   * Get projectName
   * @return projectName
   */
  @javax.annotation.Nullable
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  public ModelPackagingDescription modelVersion(String modelVersion) {
    this.modelVersion = modelVersion;
    return this;
  }

  /**
   * Get modelVersion
   * @return modelVersion
   */
  @javax.annotation.Nullable
  public String getModelVersion() {
    return modelVersion;
  }

  public void setModelVersion(String modelVersion) {
    this.modelVersion = modelVersion;
  }


  public ModelPackagingDescription modelPackagingConfiguration(ModelPackagingDescriptionModelPackagingConfiguration modelPackagingConfiguration) {
    this.modelPackagingConfiguration = modelPackagingConfiguration;
    return this;
  }

  /**
   * Get modelPackagingConfiguration
   * @return modelPackagingConfiguration
   */
  @javax.annotation.Nullable
  public ModelPackagingDescriptionModelPackagingConfiguration getModelPackagingConfiguration() {
    return modelPackagingConfiguration;
  }

  public void setModelPackagingConfiguration(ModelPackagingDescriptionModelPackagingConfiguration modelPackagingConfiguration) {
    this.modelPackagingConfiguration = modelPackagingConfiguration;
  }


  public ModelPackagingDescription modelPackagingJobDescription(String modelPackagingJobDescription) {
    this.modelPackagingJobDescription = modelPackagingJobDescription;
    return this;
  }

  /**
   * Get modelPackagingJobDescription
   * @return modelPackagingJobDescription
   */
  @javax.annotation.Nullable
  public String getModelPackagingJobDescription() {
    return modelPackagingJobDescription;
  }

  public void setModelPackagingJobDescription(String modelPackagingJobDescription) {
    this.modelPackagingJobDescription = modelPackagingJobDescription;
  }


  public ModelPackagingDescription modelPackagingMethod(String modelPackagingMethod) {
    this.modelPackagingMethod = modelPackagingMethod;
    return this;
  }

  /**
   * Get modelPackagingMethod
   * @return modelPackagingMethod
   */
  @javax.annotation.Nullable
  public String getModelPackagingMethod() {
    return modelPackagingMethod;
  }

  public void setModelPackagingMethod(String modelPackagingMethod) {
    this.modelPackagingMethod = modelPackagingMethod;
  }


  public ModelPackagingDescription modelPackagingOutputDetails(ModelPackagingDescriptionModelPackagingOutputDetails modelPackagingOutputDetails) {
    this.modelPackagingOutputDetails = modelPackagingOutputDetails;
    return this;
  }

  /**
   * Get modelPackagingOutputDetails
   * @return modelPackagingOutputDetails
   */
  @javax.annotation.Nullable
  public ModelPackagingDescriptionModelPackagingOutputDetails getModelPackagingOutputDetails() {
    return modelPackagingOutputDetails;
  }

  public void setModelPackagingOutputDetails(ModelPackagingDescriptionModelPackagingOutputDetails modelPackagingOutputDetails) {
    this.modelPackagingOutputDetails = modelPackagingOutputDetails;
  }


  public ModelPackagingDescription status(ModelPackagingJobStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ModelPackagingJobStatus getStatus() {
    return status;
  }

  public void setStatus(ModelPackagingJobStatus status) {
    this.status = status;
  }


  public ModelPackagingDescription statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public ModelPackagingDescription creationTimestamp(OffsetDateTime creationTimestamp) {
    this.creationTimestamp = creationTimestamp;
    return this;
  }

  /**
   * Get creationTimestamp
   * @return creationTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTimestamp() {
    return creationTimestamp;
  }

  public void setCreationTimestamp(OffsetDateTime creationTimestamp) {
    this.creationTimestamp = creationTimestamp;
  }


  public ModelPackagingDescription lastUpdatedTimestamp(OffsetDateTime lastUpdatedTimestamp) {
    this.lastUpdatedTimestamp = lastUpdatedTimestamp;
    return this;
  }

  /**
   * Get lastUpdatedTimestamp
   * @return lastUpdatedTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedTimestamp() {
    return lastUpdatedTimestamp;
  }

  public void setLastUpdatedTimestamp(OffsetDateTime lastUpdatedTimestamp) {
    this.lastUpdatedTimestamp = lastUpdatedTimestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelPackagingDescription modelPackagingDescription = (ModelPackagingDescription) o;
    return Objects.equals(this.jobName, modelPackagingDescription.jobName) &&
        Objects.equals(this.projectName, modelPackagingDescription.projectName) &&
        Objects.equals(this.modelVersion, modelPackagingDescription.modelVersion) &&
        Objects.equals(this.modelPackagingConfiguration, modelPackagingDescription.modelPackagingConfiguration) &&
        Objects.equals(this.modelPackagingJobDescription, modelPackagingDescription.modelPackagingJobDescription) &&
        Objects.equals(this.modelPackagingMethod, modelPackagingDescription.modelPackagingMethod) &&
        Objects.equals(this.modelPackagingOutputDetails, modelPackagingDescription.modelPackagingOutputDetails) &&
        Objects.equals(this.status, modelPackagingDescription.status) &&
        Objects.equals(this.statusMessage, modelPackagingDescription.statusMessage) &&
        Objects.equals(this.creationTimestamp, modelPackagingDescription.creationTimestamp) &&
        Objects.equals(this.lastUpdatedTimestamp, modelPackagingDescription.lastUpdatedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobName, projectName, modelVersion, modelPackagingConfiguration, modelPackagingJobDescription, modelPackagingMethod, modelPackagingOutputDetails, status, statusMessage, creationTimestamp, lastUpdatedTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelPackagingDescription {\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    modelVersion: ").append(toIndentedString(modelVersion)).append("\n");
    sb.append("    modelPackagingConfiguration: ").append(toIndentedString(modelPackagingConfiguration)).append("\n");
    sb.append("    modelPackagingJobDescription: ").append(toIndentedString(modelPackagingJobDescription)).append("\n");
    sb.append("    modelPackagingMethod: ").append(toIndentedString(modelPackagingMethod)).append("\n");
    sb.append("    modelPackagingOutputDetails: ").append(toIndentedString(modelPackagingOutputDetails)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    creationTimestamp: ").append(toIndentedString(creationTimestamp)).append("\n");
    sb.append("    lastUpdatedTimestamp: ").append(toIndentedString(lastUpdatedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("JobName");
    openapiFields.add("ProjectName");
    openapiFields.add("ModelVersion");
    openapiFields.add("ModelPackagingConfiguration");
    openapiFields.add("ModelPackagingJobDescription");
    openapiFields.add("ModelPackagingMethod");
    openapiFields.add("ModelPackagingOutputDetails");
    openapiFields.add("Status");
    openapiFields.add("StatusMessage");
    openapiFields.add("CreationTimestamp");
    openapiFields.add("LastUpdatedTimestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModelPackagingDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModelPackagingDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelPackagingDescription is not found in the empty JSON string", ModelPackagingDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModelPackagingDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelPackagingDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `JobName`
      if (jsonObj.get("JobName") != null && !jsonObj.get("JobName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("JobName"));
      }
      // validate the optional field `ProjectName`
      if (jsonObj.get("ProjectName") != null && !jsonObj.get("ProjectName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProjectName"));
      }
      // validate the optional field `ModelVersion`
      if (jsonObj.get("ModelVersion") != null && !jsonObj.get("ModelVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelVersion"));
      }
      // validate the optional field `ModelPackagingConfiguration`
      if (jsonObj.get("ModelPackagingConfiguration") != null && !jsonObj.get("ModelPackagingConfiguration").isJsonNull()) {
        ModelPackagingDescriptionModelPackagingConfiguration.validateJsonElement(jsonObj.get("ModelPackagingConfiguration"));
      }
      // validate the optional field `ModelPackagingJobDescription`
      if (jsonObj.get("ModelPackagingJobDescription") != null && !jsonObj.get("ModelPackagingJobDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelPackagingJobDescription"));
      }
      // validate the optional field `ModelPackagingMethod`
      if (jsonObj.get("ModelPackagingMethod") != null && !jsonObj.get("ModelPackagingMethod").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelPackagingMethod"));
      }
      // validate the optional field `ModelPackagingOutputDetails`
      if (jsonObj.get("ModelPackagingOutputDetails") != null && !jsonObj.get("ModelPackagingOutputDetails").isJsonNull()) {
        ModelPackagingDescriptionModelPackagingOutputDetails.validateJsonElement(jsonObj.get("ModelPackagingOutputDetails"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        ModelPackagingJobStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusMessage`
      if (jsonObj.get("StatusMessage") != null && !jsonObj.get("StatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusMessage"));
      }
      // validate the optional field `CreationTimestamp`
      if (jsonObj.get("CreationTimestamp") != null && !jsonObj.get("CreationTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTimestamp"));
      }
      // validate the optional field `LastUpdatedTimestamp`
      if (jsonObj.get("LastUpdatedTimestamp") != null && !jsonObj.get("LastUpdatedTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedTimestamp"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelPackagingDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelPackagingDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelPackagingDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelPackagingDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelPackagingDescription>() {
           @Override
           public void write(JsonWriter out, ModelPackagingDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelPackagingDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModelPackagingDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModelPackagingDescription
   * @throws IOException if the JSON string is invalid with respect to ModelPackagingDescription
   */
  public static ModelPackagingDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelPackagingDescription.class);
  }

  /**
   * Convert an instance of ModelPackagingDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

