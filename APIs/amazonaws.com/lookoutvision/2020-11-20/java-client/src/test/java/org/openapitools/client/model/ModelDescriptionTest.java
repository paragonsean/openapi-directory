/*
 * Amazon Lookout for Vision
 * <p>This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.</p> <p>Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.</p>
 *
 * The version of the OpenAPI document: 2020-11-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ModelDescriptionEvaluationManifest;
import org.openapitools.client.model.ModelDescriptionEvaluationResult;
import org.openapitools.client.model.ModelDescriptionOutputConfig;
import org.openapitools.client.model.ModelDescriptionPerformance;
import org.openapitools.client.model.ModelStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ModelDescription
 */
public class ModelDescriptionTest {
    private final ModelDescription model = new ModelDescription();

    /**
     * Model tests for ModelDescription
     */
    @Test
    public void testModelDescription() {
        // TODO: test ModelDescription
    }

    /**
     * Test the property 'modelVersion'
     */
    @Test
    public void modelVersionTest() {
        // TODO: test modelVersion
    }

    /**
     * Test the property 'modelArn'
     */
    @Test
    public void modelArnTest() {
        // TODO: test modelArn
    }

    /**
     * Test the property 'creationTimestamp'
     */
    @Test
    public void creationTimestampTest() {
        // TODO: test creationTimestamp
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'performance'
     */
    @Test
    public void performanceTest() {
        // TODO: test performance
    }

    /**
     * Test the property 'outputConfig'
     */
    @Test
    public void outputConfigTest() {
        // TODO: test outputConfig
    }

    /**
     * Test the property 'evaluationManifest'
     */
    @Test
    public void evaluationManifestTest() {
        // TODO: test evaluationManifest
    }

    /**
     * Test the property 'evaluationResult'
     */
    @Test
    public void evaluationResultTest() {
        // TODO: test evaluationResult
    }

    /**
     * Test the property 'evaluationEndTimestamp'
     */
    @Test
    public void evaluationEndTimestampTest() {
        // TODO: test evaluationEndTimestamp
    }

    /**
     * Test the property 'kmsKeyId'
     */
    @Test
    public void kmsKeyIdTest() {
        // TODO: test kmsKeyId
    }

    /**
     * Test the property 'minInferenceUnits'
     */
    @Test
    public void minInferenceUnitsTest() {
        // TODO: test minInferenceUnits
    }

    /**
     * Test the property 'maxInferenceUnits'
     */
    @Test
    public void maxInferenceUnitsTest() {
        // TODO: test maxInferenceUnits
    }

}
