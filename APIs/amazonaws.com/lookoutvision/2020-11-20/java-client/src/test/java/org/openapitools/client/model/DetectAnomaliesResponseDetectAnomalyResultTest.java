/*
 * Amazon Lookout for Vision
 * <p>This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.</p> <p>Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.</p>
 *
 * The version of the OpenAPI document: 2020-11-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DetectAnomalyResultSource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DetectAnomaliesResponseDetectAnomalyResult
 */
public class DetectAnomaliesResponseDetectAnomalyResultTest {
    private final DetectAnomaliesResponseDetectAnomalyResult model = new DetectAnomaliesResponseDetectAnomalyResult();

    /**
     * Model tests for DetectAnomaliesResponseDetectAnomalyResult
     */
    @Test
    public void testDetectAnomaliesResponseDetectAnomalyResult() {
        // TODO: test DetectAnomaliesResponseDetectAnomalyResult
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'isAnomalous'
     */
    @Test
    public void isAnomalousTest() {
        // TODO: test isAnomalous
    }

    /**
     * Test the property 'confidence'
     */
    @Test
    public void confidenceTest() {
        // TODO: test confidence
    }

    /**
     * Test the property 'anomalies'
     */
    @Test
    public void anomaliesTest() {
        // TODO: test anomalies
    }

    /**
     * Test the property 'anomalyMask'
     */
    @Test
    public void anomalyMaskTest() {
        // TODO: test anomalyMask
    }

}
