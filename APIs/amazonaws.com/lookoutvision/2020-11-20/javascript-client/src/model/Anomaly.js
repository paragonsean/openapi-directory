/**
 * Amazon Lookout for Vision
 * <p>This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.</p> <p>Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.</p>
 *
 * The version of the OpenAPI document: 2020-11-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnomalyPixelAnomaly from './AnomalyPixelAnomaly';

/**
 * The Anomaly model module.
 * @module model/Anomaly
 * @version 2020-11-20
 */
class Anomaly {
    /**
     * Constructs a new <code>Anomaly</code>.
     * Information about an anomaly type found on an image by an image segmentation model. For more information, see &lt;a&gt;DetectAnomalies&lt;/a&gt;.
     * @alias module:model/Anomaly
     */
    constructor() { 
        
        Anomaly.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Anomaly</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Anomaly} obj Optional instance to populate.
     * @return {module:model/Anomaly} The populated <code>Anomaly</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Anomaly();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('PixelAnomaly')) {
                obj['PixelAnomaly'] = AnomalyPixelAnomaly.constructFromObject(data['PixelAnomaly']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Anomaly</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Anomaly</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `PixelAnomaly`
        if (data['PixelAnomaly']) { // data not null
          AnomalyPixelAnomaly.validateJSON(data['PixelAnomaly']);
        }

        return true;
    }


}



/**
 * @member {String} Name
 */
Anomaly.prototype['Name'] = undefined;

/**
 * @member {module:model/AnomalyPixelAnomaly} PixelAnomaly
 */
Anomaly.prototype['PixelAnomaly'] = undefined;






export default Anomaly;

