/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ManagedStreamingForKafka);
  }
}(this, function(expect, ManagedStreamingForKafka) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ManagedStreamingForKafka.CreateClusterRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateClusterRequest', function() {
    it('should create an instance of CreateClusterRequest', function() {
      // uncomment below and update the code to test CreateClusterRequest
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be.a(ManagedStreamingForKafka.CreateClusterRequest);
    });

    it('should have the property brokerNodeGroupInfo (base name: "brokerNodeGroupInfo")', function() {
      // uncomment below and update the code to test the property brokerNodeGroupInfo
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

    it('should have the property clientAuthentication (base name: "clientAuthentication")', function() {
      // uncomment below and update the code to test the property clientAuthentication
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

    it('should have the property clusterName (base name: "clusterName")', function() {
      // uncomment below and update the code to test the property clusterName
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

    it('should have the property configurationInfo (base name: "configurationInfo")', function() {
      // uncomment below and update the code to test the property configurationInfo
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

    it('should have the property encryptionInfo (base name: "encryptionInfo")', function() {
      // uncomment below and update the code to test the property encryptionInfo
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

    it('should have the property enhancedMonitoring (base name: "enhancedMonitoring")', function() {
      // uncomment below and update the code to test the property enhancedMonitoring
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

    it('should have the property openMonitoring (base name: "openMonitoring")', function() {
      // uncomment below and update the code to test the property openMonitoring
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

    it('should have the property kafkaVersion (base name: "kafkaVersion")', function() {
      // uncomment below and update the code to test the property kafkaVersion
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

    it('should have the property loggingInfo (base name: "loggingInfo")', function() {
      // uncomment below and update the code to test the property loggingInfo
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

    it('should have the property numberOfBrokerNodes (base name: "numberOfBrokerNodes")', function() {
      // uncomment below and update the code to test the property numberOfBrokerNodes
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

    it('should have the property storageMode (base name: "storageMode")', function() {
      // uncomment below and update the code to test the property storageMode
      //var instance = new ManagedStreamingForKafka.CreateClusterRequest();
      //expect(instance).to.be();
    });

  });

}));
