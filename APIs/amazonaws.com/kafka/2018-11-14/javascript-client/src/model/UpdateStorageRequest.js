/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateStorageRequestProvisionedThroughput from './UpdateStorageRequestProvisionedThroughput';

/**
 * The UpdateStorageRequest model module.
 * @module model/UpdateStorageRequest
 * @version 2018-11-14
 */
class UpdateStorageRequest {
    /**
     * Constructs a new <code>UpdateStorageRequest</code>.
     * @alias module:model/UpdateStorageRequest
     * @param currentVersion {String}              <p>The version of cluster to update from. A successful operation will then generate a new version.</p>          
     */
    constructor(currentVersion) { 
        
        UpdateStorageRequest.initialize(this, currentVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currentVersion) { 
        obj['currentVersion'] = currentVersion;
    }

    /**
     * Constructs a <code>UpdateStorageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateStorageRequest} obj Optional instance to populate.
     * @return {module:model/UpdateStorageRequest} The populated <code>UpdateStorageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateStorageRequest();

            if (data.hasOwnProperty('currentVersion')) {
                obj['currentVersion'] = ApiClient.convertToType(data['currentVersion'], 'String');
            }
            if (data.hasOwnProperty('provisionedThroughput')) {
                obj['provisionedThroughput'] = UpdateStorageRequestProvisionedThroughput.constructFromObject(data['provisionedThroughput']);
            }
            if (data.hasOwnProperty('storageMode')) {
                obj['storageMode'] = ApiClient.convertToType(data['storageMode'], 'String');
            }
            if (data.hasOwnProperty('volumeSizeGB')) {
                obj['volumeSizeGB'] = ApiClient.convertToType(data['volumeSizeGB'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateStorageRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateStorageRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateStorageRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['currentVersion'] && !(typeof data['currentVersion'] === 'string' || data['currentVersion'] instanceof String)) {
            throw new Error("Expected the field `currentVersion` to be a primitive type in the JSON string but got " + data['currentVersion']);
        }
        // validate the optional field `provisionedThroughput`
        if (data['provisionedThroughput']) { // data not null
          UpdateStorageRequestProvisionedThroughput.validateJSON(data['provisionedThroughput']);
        }
        // ensure the json data is a string
        if (data['storageMode'] && !(typeof data['storageMode'] === 'string' || data['storageMode'] instanceof String)) {
            throw new Error("Expected the field `storageMode` to be a primitive type in the JSON string but got " + data['storageMode']);
        }

        return true;
    }


}

UpdateStorageRequest.RequiredProperties = ["currentVersion"];

/**
 *              <p>The version of cluster to update from. A successful operation will then generate a new version.</p>          
 * @member {String} currentVersion
 */
UpdateStorageRequest.prototype['currentVersion'] = undefined;

/**
 * @member {module:model/UpdateStorageRequestProvisionedThroughput} provisionedThroughput
 */
UpdateStorageRequest.prototype['provisionedThroughput'] = undefined;

/**
 * Controls storage mode for various supported storage tiers.
 * @member {module:model/UpdateStorageRequest.StorageModeEnum} storageMode
 */
UpdateStorageRequest.prototype['storageMode'] = undefined;

/**
 *              <p>size of the EBS volume to update.</p>          
 * @member {Number} volumeSizeGB
 */
UpdateStorageRequest.prototype['volumeSizeGB'] = undefined;





/**
 * Allowed values for the <code>storageMode</code> property.
 * @enum {String}
 * @readonly
 */
UpdateStorageRequest['StorageModeEnum'] = {

    /**
     * value: "LOCAL"
     * @const
     */
    "LOCAL": "LOCAL",

    /**
     * value: "TIERED"
     * @const
     */
    "TIERED": "TIERED"
};



export default UpdateStorageRequest;

