/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NodeExporter model module.
 * @module model/NodeExporter
 * @version 2018-11-14
 */
class NodeExporter {
    /**
     * Constructs a new <code>NodeExporter</code>.
     *              &lt;p&gt;Indicates whether you want to turn on or turn off the Node Exporter.&lt;/p&gt;          
     * @alias module:model/NodeExporter
     * @param enabledInBroker {Boolean} 
     */
    constructor(enabledInBroker) { 
        
        NodeExporter.initialize(this, enabledInBroker);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enabledInBroker) { 
        obj['EnabledInBroker'] = enabledInBroker;
    }

    /**
     * Constructs a <code>NodeExporter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeExporter} obj Optional instance to populate.
     * @return {module:model/NodeExporter} The populated <code>NodeExporter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeExporter();

            if (data.hasOwnProperty('EnabledInBroker')) {
                obj['EnabledInBroker'] = ApiClient.convertToType(data['EnabledInBroker'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodeExporter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodeExporter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NodeExporter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `EnabledInBroker`
        if (data['EnabledInBroker']) { // data not null
          Boolean.validateJSON(data['EnabledInBroker']);
        }

        return true;
    }


}

NodeExporter.RequiredProperties = ["EnabledInBroker"];

/**
 * @member {Boolean} EnabledInBroker
 */
NodeExporter.prototype['EnabledInBroker'] = undefined;






export default NodeExporter;

