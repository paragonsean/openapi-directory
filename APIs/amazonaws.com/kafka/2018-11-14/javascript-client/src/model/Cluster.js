/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClusterProvisioned from './ClusterProvisioned';
import ClusterServerless from './ClusterServerless';
import ClusterState from './ClusterState';
import ClusterStateInfo from './ClusterStateInfo';
import ClusterType from './ClusterType';

/**
 * The Cluster model module.
 * @module model/Cluster
 * @version 2018-11-14
 */
class Cluster {
    /**
     * Constructs a new <code>Cluster</code>.
     *              &lt;p&gt;Returns information about a cluster.&lt;/p&gt;          
     * @alias module:model/Cluster
     */
    constructor() { 
        
        Cluster.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Cluster</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Cluster} obj Optional instance to populate.
     * @return {module:model/Cluster} The populated <code>Cluster</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Cluster();

            if (data.hasOwnProperty('ActiveOperationArn')) {
                obj['ActiveOperationArn'] = ApiClient.convertToType(data['ActiveOperationArn'], 'String');
            }
            if (data.hasOwnProperty('ClusterType')) {
                obj['ClusterType'] = ApiClient.convertToType(data['ClusterType'], ClusterType);
            }
            if (data.hasOwnProperty('ClusterArn')) {
                obj['ClusterArn'] = ApiClient.convertToType(data['ClusterArn'], 'String');
            }
            if (data.hasOwnProperty('ClusterName')) {
                obj['ClusterName'] = ApiClient.convertToType(data['ClusterName'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('CurrentVersion')) {
                obj['CurrentVersion'] = ApiClient.convertToType(data['CurrentVersion'], 'String');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], ClusterState);
            }
            if (data.hasOwnProperty('StateInfo')) {
                obj['StateInfo'] = ClusterStateInfo.constructFromObject(data['StateInfo']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
            if (data.hasOwnProperty('Provisioned')) {
                obj['Provisioned'] = ClusterProvisioned.constructFromObject(data['Provisioned']);
            }
            if (data.hasOwnProperty('Serverless')) {
                obj['Serverless'] = ClusterServerless.constructFromObject(data['Serverless']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Cluster</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Cluster</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ActiveOperationArn`
        if (data['ActiveOperationArn']) { // data not null
          String.validateJSON(data['ActiveOperationArn']);
        }
        // validate the optional field `ClusterType`
        if (data['ClusterType']) { // data not null
          ClusterType.validateJSON(data['ClusterType']);
        }
        // validate the optional field `ClusterArn`
        if (data['ClusterArn']) { // data not null
          String.validateJSON(data['ClusterArn']);
        }
        // validate the optional field `ClusterName`
        if (data['ClusterName']) { // data not null
          String.validateJSON(data['ClusterName']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `CurrentVersion`
        if (data['CurrentVersion']) { // data not null
          String.validateJSON(data['CurrentVersion']);
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          ClusterState.validateJSON(data['State']);
        }
        // validate the optional field `StateInfo`
        if (data['StateInfo']) { // data not null
          ClusterStateInfo.validateJSON(data['StateInfo']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }
        // validate the optional field `Provisioned`
        if (data['Provisioned']) { // data not null
          ClusterProvisioned.validateJSON(data['Provisioned']);
        }
        // validate the optional field `Serverless`
        if (data['Serverless']) { // data not null
          ClusterServerless.validateJSON(data['Serverless']);
        }

        return true;
    }


}



/**
 * @member {String} ActiveOperationArn
 */
Cluster.prototype['ActiveOperationArn'] = undefined;

/**
 * @member {module:model/ClusterType} ClusterType
 */
Cluster.prototype['ClusterType'] = undefined;

/**
 * @member {String} ClusterArn
 */
Cluster.prototype['ClusterArn'] = undefined;

/**
 * @member {String} ClusterName
 */
Cluster.prototype['ClusterName'] = undefined;

/**
 * @member {Date} CreationTime
 */
Cluster.prototype['CreationTime'] = undefined;

/**
 * @member {String} CurrentVersion
 */
Cluster.prototype['CurrentVersion'] = undefined;

/**
 * @member {module:model/ClusterState} State
 */
Cluster.prototype['State'] = undefined;

/**
 * @member {module:model/ClusterStateInfo} StateInfo
 */
Cluster.prototype['StateInfo'] = undefined;

/**
 * @member {Object} Tags
 */
Cluster.prototype['Tags'] = undefined;

/**
 * @member {module:model/ClusterProvisioned} Provisioned
 */
Cluster.prototype['Provisioned'] = undefined;

/**
 * @member {module:model/ClusterServerless} Serverless
 */
Cluster.prototype['Serverless'] = undefined;






export default Cluster;

