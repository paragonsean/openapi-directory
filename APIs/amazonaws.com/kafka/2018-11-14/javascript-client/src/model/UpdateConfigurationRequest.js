/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateConfigurationRequest model module.
 * @module model/UpdateConfigurationRequest
 * @version 2018-11-14
 */
class UpdateConfigurationRequest {
    /**
     * Constructs a new <code>UpdateConfigurationRequest</code>.
     * @alias module:model/UpdateConfigurationRequest
     * @param serverProperties {String}              <p>Contents of the <filename>server.properties</filename> file. When using the API, you must ensure that the contents of the file are base64 encoded.                 When using the AWS Management Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename> can be in plaintext.</p>          
     */
    constructor(serverProperties) { 
        
        UpdateConfigurationRequest.initialize(this, serverProperties);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serverProperties) { 
        obj['serverProperties'] = serverProperties;
    }

    /**
     * Constructs a <code>UpdateConfigurationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateConfigurationRequest} obj Optional instance to populate.
     * @return {module:model/UpdateConfigurationRequest} The populated <code>UpdateConfigurationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateConfigurationRequest();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('serverProperties')) {
                obj['serverProperties'] = ApiClient.convertToType(data['serverProperties'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateConfigurationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateConfigurationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateConfigurationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['serverProperties'] && !(typeof data['serverProperties'] === 'string' || data['serverProperties'] instanceof String)) {
            throw new Error("Expected the field `serverProperties` to be a primitive type in the JSON string but got " + data['serverProperties']);
        }

        return true;
    }


}

UpdateConfigurationRequest.RequiredProperties = ["serverProperties"];

/**
 *              <p>The description of the configuration revision.</p>          
 * @member {String} description
 */
UpdateConfigurationRequest.prototype['description'] = undefined;

/**
 *              <p>Contents of the <filename>server.properties</filename> file. When using the API, you must ensure that the contents of the file are base64 encoded.                 When using the AWS Management Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename> can be in plaintext.</p>          
 * @member {String} serverProperties
 */
UpdateConfigurationRequest.prototype['serverProperties'] = undefined;






export default UpdateConfigurationRequest;

