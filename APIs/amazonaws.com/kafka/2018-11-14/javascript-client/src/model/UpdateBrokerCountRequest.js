/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateBrokerCountRequest model module.
 * @module model/UpdateBrokerCountRequest
 * @version 2018-11-14
 */
class UpdateBrokerCountRequest {
    /**
     * Constructs a new <code>UpdateBrokerCountRequest</code>.
     * @alias module:model/UpdateBrokerCountRequest
     * @param currentVersion {String}              <p>The version of cluster to update from. A successful operation will then generate a new version.</p>          
     * @param targetNumberOfBrokerNodes {Number}              <p>The number of broker nodes that you want the cluster to have after this operation completes successfully.</p>          
     */
    constructor(currentVersion, targetNumberOfBrokerNodes) { 
        
        UpdateBrokerCountRequest.initialize(this, currentVersion, targetNumberOfBrokerNodes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currentVersion, targetNumberOfBrokerNodes) { 
        obj['currentVersion'] = currentVersion;
        obj['targetNumberOfBrokerNodes'] = targetNumberOfBrokerNodes;
    }

    /**
     * Constructs a <code>UpdateBrokerCountRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateBrokerCountRequest} obj Optional instance to populate.
     * @return {module:model/UpdateBrokerCountRequest} The populated <code>UpdateBrokerCountRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateBrokerCountRequest();

            if (data.hasOwnProperty('currentVersion')) {
                obj['currentVersion'] = ApiClient.convertToType(data['currentVersion'], 'String');
            }
            if (data.hasOwnProperty('targetNumberOfBrokerNodes')) {
                obj['targetNumberOfBrokerNodes'] = ApiClient.convertToType(data['targetNumberOfBrokerNodes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateBrokerCountRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateBrokerCountRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateBrokerCountRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['currentVersion'] && !(typeof data['currentVersion'] === 'string' || data['currentVersion'] instanceof String)) {
            throw new Error("Expected the field `currentVersion` to be a primitive type in the JSON string but got " + data['currentVersion']);
        }

        return true;
    }


}

UpdateBrokerCountRequest.RequiredProperties = ["currentVersion", "targetNumberOfBrokerNodes"];

/**
 *              <p>The version of cluster to update from. A successful operation will then generate a new version.</p>          
 * @member {String} currentVersion
 */
UpdateBrokerCountRequest.prototype['currentVersion'] = undefined;

/**
 *              <p>The number of broker nodes that you want the cluster to have after this operation completes successfully.</p>          
 * @member {Number} targetNumberOfBrokerNodes
 */
UpdateBrokerCountRequest.prototype['targetNumberOfBrokerNodes'] = undefined;






export default UpdateBrokerCountRequest;

