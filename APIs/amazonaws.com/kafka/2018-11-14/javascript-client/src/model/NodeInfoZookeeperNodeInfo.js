/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ZookeeperNodeInfo from './ZookeeperNodeInfo';

/**
 * The NodeInfoZookeeperNodeInfo model module.
 * @module model/NodeInfoZookeeperNodeInfo
 * @version 2018-11-14
 */
class NodeInfoZookeeperNodeInfo {
    /**
     * Constructs a new <code>NodeInfoZookeeperNodeInfo</code>.
     * @alias module:model/NodeInfoZookeeperNodeInfo
     * @implements module:model/ZookeeperNodeInfo
     */
    constructor() { 
        ZookeeperNodeInfo.initialize(this);
        NodeInfoZookeeperNodeInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NodeInfoZookeeperNodeInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeInfoZookeeperNodeInfo} obj Optional instance to populate.
     * @return {module:model/NodeInfoZookeeperNodeInfo} The populated <code>NodeInfoZookeeperNodeInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeInfoZookeeperNodeInfo();
            ZookeeperNodeInfo.constructFromObject(data, obj);

            if (data.hasOwnProperty('AttachedENIId')) {
                obj['AttachedENIId'] = ApiClient.convertToType(data['AttachedENIId'], 'String');
            }
            if (data.hasOwnProperty('ClientVpcIpAddress')) {
                obj['ClientVpcIpAddress'] = ApiClient.convertToType(data['ClientVpcIpAddress'], 'String');
            }
            if (data.hasOwnProperty('Endpoints')) {
                obj['Endpoints'] = ApiClient.convertToType(data['Endpoints'], Array);
            }
            if (data.hasOwnProperty('ZookeeperId')) {
                obj['ZookeeperId'] = ApiClient.convertToType(data['ZookeeperId'], 'Number');
            }
            if (data.hasOwnProperty('ZookeeperVersion')) {
                obj['ZookeeperVersion'] = ApiClient.convertToType(data['ZookeeperVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodeInfoZookeeperNodeInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodeInfoZookeeperNodeInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AttachedENIId`
        if (data['AttachedENIId']) { // data not null
          String.validateJSON(data['AttachedENIId']);
        }
        // validate the optional field `ClientVpcIpAddress`
        if (data['ClientVpcIpAddress']) { // data not null
          String.validateJSON(data['ClientVpcIpAddress']);
        }
        // validate the optional field `Endpoints`
        if (data['Endpoints']) { // data not null
          Array.validateJSON(data['Endpoints']);
        }
        // validate the optional field `ZookeeperId`
        if (data['ZookeeperId']) { // data not null
          Number.validateJSON(data['ZookeeperId']);
        }
        // validate the optional field `ZookeeperVersion`
        if (data['ZookeeperVersion']) { // data not null
          String.validateJSON(data['ZookeeperVersion']);
        }

        return true;
    }


}



/**
 * @member {String} AttachedENIId
 */
NodeInfoZookeeperNodeInfo.prototype['AttachedENIId'] = undefined;

/**
 * @member {String} ClientVpcIpAddress
 */
NodeInfoZookeeperNodeInfo.prototype['ClientVpcIpAddress'] = undefined;

/**
 * @member {Array} Endpoints
 */
NodeInfoZookeeperNodeInfo.prototype['Endpoints'] = undefined;

/**
 * @member {Number} ZookeeperId
 */
NodeInfoZookeeperNodeInfo.prototype['ZookeeperId'] = undefined;

/**
 * @member {String} ZookeeperVersion
 */
NodeInfoZookeeperNodeInfo.prototype['ZookeeperVersion'] = undefined;


// Implement ZookeeperNodeInfo interface:
/**
 * @member {String} AttachedENIId
 */
ZookeeperNodeInfo.prototype['AttachedENIId'] = undefined;
/**
 * @member {String} ClientVpcIpAddress
 */
ZookeeperNodeInfo.prototype['ClientVpcIpAddress'] = undefined;
/**
 * @member {Array} Endpoints
 */
ZookeeperNodeInfo.prototype['Endpoints'] = undefined;
/**
 * @member {Number} ZookeeperId
 */
ZookeeperNodeInfo.prototype['ZookeeperId'] = undefined;
/**
 * @member {String} ZookeeperVersion
 */
ZookeeperNodeInfo.prototype['ZookeeperVersion'] = undefined;




export default NodeInfoZookeeperNodeInfo;

