/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetBootstrapBrokersResponse model module.
 * @module model/GetBootstrapBrokersResponse
 * @version 2018-11-14
 */
class GetBootstrapBrokersResponse {
    /**
     * Constructs a new <code>GetBootstrapBrokersResponse</code>.
     * @alias module:model/GetBootstrapBrokersResponse
     */
    constructor() { 
        
        GetBootstrapBrokersResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetBootstrapBrokersResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetBootstrapBrokersResponse} obj Optional instance to populate.
     * @return {module:model/GetBootstrapBrokersResponse} The populated <code>GetBootstrapBrokersResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetBootstrapBrokersResponse();

            if (data.hasOwnProperty('BootstrapBrokerString')) {
                obj['BootstrapBrokerString'] = ApiClient.convertToType(data['BootstrapBrokerString'], 'String');
            }
            if (data.hasOwnProperty('BootstrapBrokerStringTls')) {
                obj['BootstrapBrokerStringTls'] = ApiClient.convertToType(data['BootstrapBrokerStringTls'], 'String');
            }
            if (data.hasOwnProperty('BootstrapBrokerStringSaslScram')) {
                obj['BootstrapBrokerStringSaslScram'] = ApiClient.convertToType(data['BootstrapBrokerStringSaslScram'], 'String');
            }
            if (data.hasOwnProperty('BootstrapBrokerStringSaslIam')) {
                obj['BootstrapBrokerStringSaslIam'] = ApiClient.convertToType(data['BootstrapBrokerStringSaslIam'], 'String');
            }
            if (data.hasOwnProperty('BootstrapBrokerStringPublicTls')) {
                obj['BootstrapBrokerStringPublicTls'] = ApiClient.convertToType(data['BootstrapBrokerStringPublicTls'], 'String');
            }
            if (data.hasOwnProperty('BootstrapBrokerStringPublicSaslScram')) {
                obj['BootstrapBrokerStringPublicSaslScram'] = ApiClient.convertToType(data['BootstrapBrokerStringPublicSaslScram'], 'String');
            }
            if (data.hasOwnProperty('BootstrapBrokerStringPublicSaslIam')) {
                obj['BootstrapBrokerStringPublicSaslIam'] = ApiClient.convertToType(data['BootstrapBrokerStringPublicSaslIam'], 'String');
            }
            if (data.hasOwnProperty('BootstrapBrokerStringVpcConnectivityTls')) {
                obj['BootstrapBrokerStringVpcConnectivityTls'] = ApiClient.convertToType(data['BootstrapBrokerStringVpcConnectivityTls'], 'String');
            }
            if (data.hasOwnProperty('BootstrapBrokerStringVpcConnectivitySaslScram')) {
                obj['BootstrapBrokerStringVpcConnectivitySaslScram'] = ApiClient.convertToType(data['BootstrapBrokerStringVpcConnectivitySaslScram'], 'String');
            }
            if (data.hasOwnProperty('BootstrapBrokerStringVpcConnectivitySaslIam')) {
                obj['BootstrapBrokerStringVpcConnectivitySaslIam'] = ApiClient.convertToType(data['BootstrapBrokerStringVpcConnectivitySaslIam'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetBootstrapBrokersResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetBootstrapBrokersResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `BootstrapBrokerString`
        if (data['BootstrapBrokerString']) { // data not null
          String.validateJSON(data['BootstrapBrokerString']);
        }
        // validate the optional field `BootstrapBrokerStringTls`
        if (data['BootstrapBrokerStringTls']) { // data not null
          String.validateJSON(data['BootstrapBrokerStringTls']);
        }
        // validate the optional field `BootstrapBrokerStringSaslScram`
        if (data['BootstrapBrokerStringSaslScram']) { // data not null
          String.validateJSON(data['BootstrapBrokerStringSaslScram']);
        }
        // validate the optional field `BootstrapBrokerStringSaslIam`
        if (data['BootstrapBrokerStringSaslIam']) { // data not null
          String.validateJSON(data['BootstrapBrokerStringSaslIam']);
        }
        // validate the optional field `BootstrapBrokerStringPublicTls`
        if (data['BootstrapBrokerStringPublicTls']) { // data not null
          String.validateJSON(data['BootstrapBrokerStringPublicTls']);
        }
        // validate the optional field `BootstrapBrokerStringPublicSaslScram`
        if (data['BootstrapBrokerStringPublicSaslScram']) { // data not null
          String.validateJSON(data['BootstrapBrokerStringPublicSaslScram']);
        }
        // validate the optional field `BootstrapBrokerStringPublicSaslIam`
        if (data['BootstrapBrokerStringPublicSaslIam']) { // data not null
          String.validateJSON(data['BootstrapBrokerStringPublicSaslIam']);
        }
        // validate the optional field `BootstrapBrokerStringVpcConnectivityTls`
        if (data['BootstrapBrokerStringVpcConnectivityTls']) { // data not null
          String.validateJSON(data['BootstrapBrokerStringVpcConnectivityTls']);
        }
        // validate the optional field `BootstrapBrokerStringVpcConnectivitySaslScram`
        if (data['BootstrapBrokerStringVpcConnectivitySaslScram']) { // data not null
          String.validateJSON(data['BootstrapBrokerStringVpcConnectivitySaslScram']);
        }
        // validate the optional field `BootstrapBrokerStringVpcConnectivitySaslIam`
        if (data['BootstrapBrokerStringVpcConnectivitySaslIam']) { // data not null
          String.validateJSON(data['BootstrapBrokerStringVpcConnectivitySaslIam']);
        }

        return true;
    }


}



/**
 * @member {String} BootstrapBrokerString
 */
GetBootstrapBrokersResponse.prototype['BootstrapBrokerString'] = undefined;

/**
 * @member {String} BootstrapBrokerStringTls
 */
GetBootstrapBrokersResponse.prototype['BootstrapBrokerStringTls'] = undefined;

/**
 * @member {String} BootstrapBrokerStringSaslScram
 */
GetBootstrapBrokersResponse.prototype['BootstrapBrokerStringSaslScram'] = undefined;

/**
 * @member {String} BootstrapBrokerStringSaslIam
 */
GetBootstrapBrokersResponse.prototype['BootstrapBrokerStringSaslIam'] = undefined;

/**
 * @member {String} BootstrapBrokerStringPublicTls
 */
GetBootstrapBrokersResponse.prototype['BootstrapBrokerStringPublicTls'] = undefined;

/**
 * @member {String} BootstrapBrokerStringPublicSaslScram
 */
GetBootstrapBrokersResponse.prototype['BootstrapBrokerStringPublicSaslScram'] = undefined;

/**
 * @member {String} BootstrapBrokerStringPublicSaslIam
 */
GetBootstrapBrokersResponse.prototype['BootstrapBrokerStringPublicSaslIam'] = undefined;

/**
 * @member {String} BootstrapBrokerStringVpcConnectivityTls
 */
GetBootstrapBrokersResponse.prototype['BootstrapBrokerStringVpcConnectivityTls'] = undefined;

/**
 * @member {String} BootstrapBrokerStringVpcConnectivitySaslScram
 */
GetBootstrapBrokersResponse.prototype['BootstrapBrokerStringVpcConnectivitySaslScram'] = undefined;

/**
 * @member {String} BootstrapBrokerStringVpcConnectivitySaslIam
 */
GetBootstrapBrokersResponse.prototype['BootstrapBrokerStringVpcConnectivitySaslIam'] = undefined;






export default GetBootstrapBrokersResponse;

