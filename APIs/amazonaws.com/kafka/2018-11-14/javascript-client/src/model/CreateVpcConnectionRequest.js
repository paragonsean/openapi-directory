/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateVpcConnectionRequest model module.
 * @module model/CreateVpcConnectionRequest
 * @version 2018-11-14
 */
class CreateVpcConnectionRequest {
    /**
     * Constructs a new <code>CreateVpcConnectionRequest</code>.
     * @alias module:model/CreateVpcConnectionRequest
     * @param targetClusterArn {String}              <p>The cluster Amazon Resource Name (ARN) for the VPC connection.</p>          
     * @param authentication {String}              <p>The authentication type of VPC connection.</p>          
     * @param vpcId {String}              <p>The VPC ID of VPC connection.</p>          
     * @param clientSubnets {Array.<String>}              <p>The list of client subnets.</p>          
     * @param securityGroups {Array.<String>}              <p>The list of security groups.</p>          
     */
    constructor(targetClusterArn, authentication, vpcId, clientSubnets, securityGroups) { 
        
        CreateVpcConnectionRequest.initialize(this, targetClusterArn, authentication, vpcId, clientSubnets, securityGroups);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, targetClusterArn, authentication, vpcId, clientSubnets, securityGroups) { 
        obj['targetClusterArn'] = targetClusterArn;
        obj['authentication'] = authentication;
        obj['vpcId'] = vpcId;
        obj['clientSubnets'] = clientSubnets;
        obj['securityGroups'] = securityGroups;
    }

    /**
     * Constructs a <code>CreateVpcConnectionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateVpcConnectionRequest} obj Optional instance to populate.
     * @return {module:model/CreateVpcConnectionRequest} The populated <code>CreateVpcConnectionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateVpcConnectionRequest();

            if (data.hasOwnProperty('targetClusterArn')) {
                obj['targetClusterArn'] = ApiClient.convertToType(data['targetClusterArn'], 'String');
            }
            if (data.hasOwnProperty('authentication')) {
                obj['authentication'] = ApiClient.convertToType(data['authentication'], 'String');
            }
            if (data.hasOwnProperty('vpcId')) {
                obj['vpcId'] = ApiClient.convertToType(data['vpcId'], 'String');
            }
            if (data.hasOwnProperty('clientSubnets')) {
                obj['clientSubnets'] = ApiClient.convertToType(data['clientSubnets'], ['String']);
            }
            if (data.hasOwnProperty('securityGroups')) {
                obj['securityGroups'] = ApiClient.convertToType(data['securityGroups'], ['String']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateVpcConnectionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateVpcConnectionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateVpcConnectionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['targetClusterArn'] && !(typeof data['targetClusterArn'] === 'string' || data['targetClusterArn'] instanceof String)) {
            throw new Error("Expected the field `targetClusterArn` to be a primitive type in the JSON string but got " + data['targetClusterArn']);
        }
        // ensure the json data is a string
        if (data['authentication'] && !(typeof data['authentication'] === 'string' || data['authentication'] instanceof String)) {
            throw new Error("Expected the field `authentication` to be a primitive type in the JSON string but got " + data['authentication']);
        }
        // ensure the json data is a string
        if (data['vpcId'] && !(typeof data['vpcId'] === 'string' || data['vpcId'] instanceof String)) {
            throw new Error("Expected the field `vpcId` to be a primitive type in the JSON string but got " + data['vpcId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['clientSubnets'])) {
            throw new Error("Expected the field `clientSubnets` to be an array in the JSON data but got " + data['clientSubnets']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['securityGroups'])) {
            throw new Error("Expected the field `securityGroups` to be an array in the JSON data but got " + data['securityGroups']);
        }

        return true;
    }


}

CreateVpcConnectionRequest.RequiredProperties = ["targetClusterArn", "authentication", "vpcId", "clientSubnets", "securityGroups"];

/**
 *              <p>The cluster Amazon Resource Name (ARN) for the VPC connection.</p>          
 * @member {String} targetClusterArn
 */
CreateVpcConnectionRequest.prototype['targetClusterArn'] = undefined;

/**
 *              <p>The authentication type of VPC connection.</p>          
 * @member {String} authentication
 */
CreateVpcConnectionRequest.prototype['authentication'] = undefined;

/**
 *              <p>The VPC ID of VPC connection.</p>          
 * @member {String} vpcId
 */
CreateVpcConnectionRequest.prototype['vpcId'] = undefined;

/**
 *              <p>The list of client subnets.</p>          
 * @member {Array.<String>} clientSubnets
 */
CreateVpcConnectionRequest.prototype['clientSubnets'] = undefined;

/**
 *              <p>The list of security groups.</p>          
 * @member {Array.<String>} securityGroups
 */
CreateVpcConnectionRequest.prototype['securityGroups'] = undefined;

/**
 *              <p>A map of tags for the VPC connection.</p>          
 * @member {Object.<String, String>} tags
 */
CreateVpcConnectionRequest.prototype['tags'] = undefined;






export default CreateVpcConnectionRequest;

