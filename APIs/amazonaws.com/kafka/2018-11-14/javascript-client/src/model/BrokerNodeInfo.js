/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BrokerNodeInfoCurrentBrokerSoftwareInfo from './BrokerNodeInfoCurrentBrokerSoftwareInfo';

/**
 * The BrokerNodeInfo model module.
 * @module model/BrokerNodeInfo
 * @version 2018-11-14
 */
class BrokerNodeInfo {
    /**
     * Constructs a new <code>BrokerNodeInfo</code>.
     *              &lt;p&gt;BrokerNodeInfo&lt;/p&gt;          
     * @alias module:model/BrokerNodeInfo
     */
    constructor() { 
        
        BrokerNodeInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BrokerNodeInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BrokerNodeInfo} obj Optional instance to populate.
     * @return {module:model/BrokerNodeInfo} The populated <code>BrokerNodeInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BrokerNodeInfo();

            if (data.hasOwnProperty('AttachedENIId')) {
                obj['AttachedENIId'] = ApiClient.convertToType(data['AttachedENIId'], 'String');
            }
            if (data.hasOwnProperty('BrokerId')) {
                obj['BrokerId'] = ApiClient.convertToType(data['BrokerId'], 'Number');
            }
            if (data.hasOwnProperty('ClientSubnet')) {
                obj['ClientSubnet'] = ApiClient.convertToType(data['ClientSubnet'], 'String');
            }
            if (data.hasOwnProperty('ClientVpcIpAddress')) {
                obj['ClientVpcIpAddress'] = ApiClient.convertToType(data['ClientVpcIpAddress'], 'String');
            }
            if (data.hasOwnProperty('CurrentBrokerSoftwareInfo')) {
                obj['CurrentBrokerSoftwareInfo'] = BrokerNodeInfoCurrentBrokerSoftwareInfo.constructFromObject(data['CurrentBrokerSoftwareInfo']);
            }
            if (data.hasOwnProperty('Endpoints')) {
                obj['Endpoints'] = ApiClient.convertToType(data['Endpoints'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BrokerNodeInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BrokerNodeInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AttachedENIId`
        if (data['AttachedENIId']) { // data not null
          String.validateJSON(data['AttachedENIId']);
        }
        // validate the optional field `BrokerId`
        if (data['BrokerId']) { // data not null
          Number.validateJSON(data['BrokerId']);
        }
        // validate the optional field `ClientSubnet`
        if (data['ClientSubnet']) { // data not null
          String.validateJSON(data['ClientSubnet']);
        }
        // validate the optional field `ClientVpcIpAddress`
        if (data['ClientVpcIpAddress']) { // data not null
          String.validateJSON(data['ClientVpcIpAddress']);
        }
        // validate the optional field `CurrentBrokerSoftwareInfo`
        if (data['CurrentBrokerSoftwareInfo']) { // data not null
          BrokerNodeInfoCurrentBrokerSoftwareInfo.validateJSON(data['CurrentBrokerSoftwareInfo']);
        }
        // validate the optional field `Endpoints`
        if (data['Endpoints']) { // data not null
          Array.validateJSON(data['Endpoints']);
        }

        return true;
    }


}



/**
 * @member {String} AttachedENIId
 */
BrokerNodeInfo.prototype['AttachedENIId'] = undefined;

/**
 * @member {Number} BrokerId
 */
BrokerNodeInfo.prototype['BrokerId'] = undefined;

/**
 * @member {String} ClientSubnet
 */
BrokerNodeInfo.prototype['ClientSubnet'] = undefined;

/**
 * @member {String} ClientVpcIpAddress
 */
BrokerNodeInfo.prototype['ClientVpcIpAddress'] = undefined;

/**
 * @member {module:model/BrokerNodeInfoCurrentBrokerSoftwareInfo} CurrentBrokerSoftwareInfo
 */
BrokerNodeInfo.prototype['CurrentBrokerSoftwareInfo'] = undefined;

/**
 * @member {Array} Endpoints
 */
BrokerNodeInfo.prototype['Endpoints'] = undefined;






export default BrokerNodeInfo;

