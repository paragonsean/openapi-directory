/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NodeInfoBrokerNodeInfo from './NodeInfoBrokerNodeInfo';
import NodeInfoZookeeperNodeInfo from './NodeInfoZookeeperNodeInfo';
import NodeType from './NodeType';

/**
 * The NodeInfo model module.
 * @module model/NodeInfo
 * @version 2018-11-14
 */
class NodeInfo {
    /**
     * Constructs a new <code>NodeInfo</code>.
     *              &lt;p&gt;The node information object.&lt;/p&gt;          
     * @alias module:model/NodeInfo
     */
    constructor() { 
        
        NodeInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NodeInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeInfo} obj Optional instance to populate.
     * @return {module:model/NodeInfo} The populated <code>NodeInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeInfo();

            if (data.hasOwnProperty('AddedToClusterTime')) {
                obj['AddedToClusterTime'] = ApiClient.convertToType(data['AddedToClusterTime'], 'String');
            }
            if (data.hasOwnProperty('BrokerNodeInfo')) {
                obj['BrokerNodeInfo'] = NodeInfoBrokerNodeInfo.constructFromObject(data['BrokerNodeInfo']);
            }
            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], 'String');
            }
            if (data.hasOwnProperty('NodeARN')) {
                obj['NodeARN'] = ApiClient.convertToType(data['NodeARN'], 'String');
            }
            if (data.hasOwnProperty('NodeType')) {
                obj['NodeType'] = ApiClient.convertToType(data['NodeType'], NodeType);
            }
            if (data.hasOwnProperty('ZookeeperNodeInfo')) {
                obj['ZookeeperNodeInfo'] = NodeInfoZookeeperNodeInfo.constructFromObject(data['ZookeeperNodeInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodeInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodeInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AddedToClusterTime`
        if (data['AddedToClusterTime']) { // data not null
          String.validateJSON(data['AddedToClusterTime']);
        }
        // validate the optional field `BrokerNodeInfo`
        if (data['BrokerNodeInfo']) { // data not null
          NodeInfoBrokerNodeInfo.validateJSON(data['BrokerNodeInfo']);
        }
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          String.validateJSON(data['InstanceType']);
        }
        // validate the optional field `NodeARN`
        if (data['NodeARN']) { // data not null
          String.validateJSON(data['NodeARN']);
        }
        // validate the optional field `NodeType`
        if (data['NodeType']) { // data not null
          NodeType.validateJSON(data['NodeType']);
        }
        // validate the optional field `ZookeeperNodeInfo`
        if (data['ZookeeperNodeInfo']) { // data not null
          NodeInfoZookeeperNodeInfo.validateJSON(data['ZookeeperNodeInfo']);
        }

        return true;
    }


}



/**
 * @member {String} AddedToClusterTime
 */
NodeInfo.prototype['AddedToClusterTime'] = undefined;

/**
 * @member {module:model/NodeInfoBrokerNodeInfo} BrokerNodeInfo
 */
NodeInfo.prototype['BrokerNodeInfo'] = undefined;

/**
 * @member {String} InstanceType
 */
NodeInfo.prototype['InstanceType'] = undefined;

/**
 * @member {String} NodeARN
 */
NodeInfo.prototype['NodeARN'] = undefined;

/**
 * @member {module:model/NodeType} NodeType
 */
NodeInfo.prototype['NodeType'] = undefined;

/**
 * @member {module:model/NodeInfoZookeeperNodeInfo} ZookeeperNodeInfo
 */
NodeInfo.prototype['ZookeeperNodeInfo'] = undefined;






export default NodeInfo;

