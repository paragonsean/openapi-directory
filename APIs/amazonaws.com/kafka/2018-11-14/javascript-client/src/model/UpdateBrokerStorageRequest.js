/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BrokerEBSVolumeInfo from './BrokerEBSVolumeInfo';

/**
 * The UpdateBrokerStorageRequest model module.
 * @module model/UpdateBrokerStorageRequest
 * @version 2018-11-14
 */
class UpdateBrokerStorageRequest {
    /**
     * Constructs a new <code>UpdateBrokerStorageRequest</code>.
     * @alias module:model/UpdateBrokerStorageRequest
     * @param currentVersion {String}              <p>The version of cluster to update from. A successful operation will then generate a new version.</p>          
     * @param targetBrokerEBSVolumeInfo {Array.<module:model/BrokerEBSVolumeInfo>}              <p>Describes the target volume size and the ID of the broker to apply the update to.</p>          
     */
    constructor(currentVersion, targetBrokerEBSVolumeInfo) { 
        
        UpdateBrokerStorageRequest.initialize(this, currentVersion, targetBrokerEBSVolumeInfo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currentVersion, targetBrokerEBSVolumeInfo) { 
        obj['currentVersion'] = currentVersion;
        obj['targetBrokerEBSVolumeInfo'] = targetBrokerEBSVolumeInfo;
    }

    /**
     * Constructs a <code>UpdateBrokerStorageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateBrokerStorageRequest} obj Optional instance to populate.
     * @return {module:model/UpdateBrokerStorageRequest} The populated <code>UpdateBrokerStorageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateBrokerStorageRequest();

            if (data.hasOwnProperty('currentVersion')) {
                obj['currentVersion'] = ApiClient.convertToType(data['currentVersion'], 'String');
            }
            if (data.hasOwnProperty('targetBrokerEBSVolumeInfo')) {
                obj['targetBrokerEBSVolumeInfo'] = ApiClient.convertToType(data['targetBrokerEBSVolumeInfo'], [BrokerEBSVolumeInfo]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateBrokerStorageRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateBrokerStorageRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateBrokerStorageRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['currentVersion'] && !(typeof data['currentVersion'] === 'string' || data['currentVersion'] instanceof String)) {
            throw new Error("Expected the field `currentVersion` to be a primitive type in the JSON string but got " + data['currentVersion']);
        }
        if (data['targetBrokerEBSVolumeInfo']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['targetBrokerEBSVolumeInfo'])) {
                throw new Error("Expected the field `targetBrokerEBSVolumeInfo` to be an array in the JSON data but got " + data['targetBrokerEBSVolumeInfo']);
            }
            // validate the optional field `targetBrokerEBSVolumeInfo` (array)
            for (const item of data['targetBrokerEBSVolumeInfo']) {
                BrokerEBSVolumeInfo.validateJSON(item);
            };
        }

        return true;
    }


}

UpdateBrokerStorageRequest.RequiredProperties = ["currentVersion", "targetBrokerEBSVolumeInfo"];

/**
 *              <p>The version of cluster to update from. A successful operation will then generate a new version.</p>          
 * @member {String} currentVersion
 */
UpdateBrokerStorageRequest.prototype['currentVersion'] = undefined;

/**
 *              <p>Describes the target volume size and the ID of the broker to apply the update to.</p>          
 * @member {Array.<module:model/BrokerEBSVolumeInfo>} targetBrokerEBSVolumeInfo
 */
UpdateBrokerStorageRequest.prototype['targetBrokerEBSVolumeInfo'] = undefined;






export default UpdateBrokerStorageRequest;

