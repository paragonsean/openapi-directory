/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigurationInfo from './ConfigurationInfo';

/**
 * The MutableClusterInfoConfigurationInfo model module.
 * @module model/MutableClusterInfoConfigurationInfo
 * @version 2018-11-14
 */
class MutableClusterInfoConfigurationInfo {
    /**
     * Constructs a new <code>MutableClusterInfoConfigurationInfo</code>.
     * @alias module:model/MutableClusterInfoConfigurationInfo
     * @implements module:model/ConfigurationInfo
     * @param arn {String} 
     * @param revision {Number} 
     */
    constructor(arn, revision) { 
        ConfigurationInfo.initialize(this, arn, revision);
        MutableClusterInfoConfigurationInfo.initialize(this, arn, revision);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, arn, revision) { 
        obj['Arn'] = arn;
        obj['Revision'] = revision;
    }

    /**
     * Constructs a <code>MutableClusterInfoConfigurationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MutableClusterInfoConfigurationInfo} obj Optional instance to populate.
     * @return {module:model/MutableClusterInfoConfigurationInfo} The populated <code>MutableClusterInfoConfigurationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MutableClusterInfoConfigurationInfo();
            ConfigurationInfo.constructFromObject(data, obj);

            if (data.hasOwnProperty('Arn')) {
                obj['Arn'] = ApiClient.convertToType(data['Arn'], 'String');
            }
            if (data.hasOwnProperty('Revision')) {
                obj['Revision'] = ApiClient.convertToType(data['Revision'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MutableClusterInfoConfigurationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MutableClusterInfoConfigurationInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MutableClusterInfoConfigurationInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Arn`
        if (data['Arn']) { // data not null
          String.validateJSON(data['Arn']);
        }
        // validate the optional field `Revision`
        if (data['Revision']) { // data not null
          Number.validateJSON(data['Revision']);
        }

        return true;
    }


}

MutableClusterInfoConfigurationInfo.RequiredProperties = ["Arn", "Revision"];

/**
 * @member {String} Arn
 */
MutableClusterInfoConfigurationInfo.prototype['Arn'] = undefined;

/**
 * @member {Number} Revision
 */
MutableClusterInfoConfigurationInfo.prototype['Revision'] = undefined;


// Implement ConfigurationInfo interface:
/**
 * @member {String} Arn
 */
ConfigurationInfo.prototype['Arn'] = undefined;
/**
 * @member {Number} Revision
 */
ConfigurationInfo.prototype['Revision'] = undefined;




export default MutableClusterInfoConfigurationInfo;

