/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BrokerAZDistribution from './BrokerAZDistribution';
import CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo from './CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo';
import CreateClusterRequestBrokerNodeGroupInfoStorageInfo from './CreateClusterRequestBrokerNodeGroupInfoStorageInfo';

/**
 * The BrokerNodeGroupInfo model module.
 * @module model/BrokerNodeGroupInfo
 * @version 2018-11-14
 */
class BrokerNodeGroupInfo {
    /**
     * Constructs a new <code>BrokerNodeGroupInfo</code>.
     *              &lt;p&gt;Describes the setup to be used for Apache Kafka broker nodes in the cluster.&lt;/p&gt;          
     * @alias module:model/BrokerNodeGroupInfo
     * @param clientSubnets {Array} 
     * @param instanceType {String} 
     */
    constructor(clientSubnets, instanceType) { 
        
        BrokerNodeGroupInfo.initialize(this, clientSubnets, instanceType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientSubnets, instanceType) { 
        obj['ClientSubnets'] = clientSubnets;
        obj['InstanceType'] = instanceType;
    }

    /**
     * Constructs a <code>BrokerNodeGroupInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BrokerNodeGroupInfo} obj Optional instance to populate.
     * @return {module:model/BrokerNodeGroupInfo} The populated <code>BrokerNodeGroupInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BrokerNodeGroupInfo();

            if (data.hasOwnProperty('BrokerAZDistribution')) {
                obj['BrokerAZDistribution'] = ApiClient.convertToType(data['BrokerAZDistribution'], BrokerAZDistribution);
            }
            if (data.hasOwnProperty('ClientSubnets')) {
                obj['ClientSubnets'] = ApiClient.convertToType(data['ClientSubnets'], Array);
            }
            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], 'String');
            }
            if (data.hasOwnProperty('SecurityGroups')) {
                obj['SecurityGroups'] = ApiClient.convertToType(data['SecurityGroups'], Array);
            }
            if (data.hasOwnProperty('StorageInfo')) {
                obj['StorageInfo'] = CreateClusterRequestBrokerNodeGroupInfoStorageInfo.constructFromObject(data['StorageInfo']);
            }
            if (data.hasOwnProperty('ConnectivityInfo')) {
                obj['ConnectivityInfo'] = CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo.constructFromObject(data['ConnectivityInfo']);
            }
            if (data.hasOwnProperty('ZoneIds')) {
                obj['ZoneIds'] = ApiClient.convertToType(data['ZoneIds'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BrokerNodeGroupInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BrokerNodeGroupInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BrokerNodeGroupInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `BrokerAZDistribution`
        if (data['BrokerAZDistribution']) { // data not null
          BrokerAZDistribution.validateJSON(data['BrokerAZDistribution']);
        }
        // validate the optional field `ClientSubnets`
        if (data['ClientSubnets']) { // data not null
          Array.validateJSON(data['ClientSubnets']);
        }
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          String.validateJSON(data['InstanceType']);
        }
        // validate the optional field `SecurityGroups`
        if (data['SecurityGroups']) { // data not null
          Array.validateJSON(data['SecurityGroups']);
        }
        // validate the optional field `StorageInfo`
        if (data['StorageInfo']) { // data not null
          CreateClusterRequestBrokerNodeGroupInfoStorageInfo.validateJSON(data['StorageInfo']);
        }
        // validate the optional field `ConnectivityInfo`
        if (data['ConnectivityInfo']) { // data not null
          CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo.validateJSON(data['ConnectivityInfo']);
        }
        // validate the optional field `ZoneIds`
        if (data['ZoneIds']) { // data not null
          Array.validateJSON(data['ZoneIds']);
        }

        return true;
    }


}

BrokerNodeGroupInfo.RequiredProperties = ["ClientSubnets", "InstanceType"];

/**
 * @member {module:model/BrokerAZDistribution} BrokerAZDistribution
 */
BrokerNodeGroupInfo.prototype['BrokerAZDistribution'] = undefined;

/**
 * @member {Array} ClientSubnets
 */
BrokerNodeGroupInfo.prototype['ClientSubnets'] = undefined;

/**
 * @member {String} InstanceType
 */
BrokerNodeGroupInfo.prototype['InstanceType'] = undefined;

/**
 * @member {Array} SecurityGroups
 */
BrokerNodeGroupInfo.prototype['SecurityGroups'] = undefined;

/**
 * @member {module:model/CreateClusterRequestBrokerNodeGroupInfoStorageInfo} StorageInfo
 */
BrokerNodeGroupInfo.prototype['StorageInfo'] = undefined;

/**
 * @member {module:model/CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo} ConnectivityInfo
 */
BrokerNodeGroupInfo.prototype['ConnectivityInfo'] = undefined;

/**
 * @member {Array} ZoneIds
 */
BrokerNodeGroupInfo.prototype['ZoneIds'] = undefined;






export default BrokerNodeGroupInfo;

