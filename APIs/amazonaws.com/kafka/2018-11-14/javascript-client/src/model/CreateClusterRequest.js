/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateClusterRequestBrokerNodeGroupInfo from './CreateClusterRequestBrokerNodeGroupInfo';
import CreateClusterRequestClientAuthentication from './CreateClusterRequestClientAuthentication';
import CreateClusterRequestConfigurationInfo from './CreateClusterRequestConfigurationInfo';
import CreateClusterRequestEncryptionInfo from './CreateClusterRequestEncryptionInfo';
import CreateClusterRequestLoggingInfo from './CreateClusterRequestLoggingInfo';
import CreateClusterRequestOpenMonitoring from './CreateClusterRequestOpenMonitoring';

/**
 * The CreateClusterRequest model module.
 * @module model/CreateClusterRequest
 * @version 2018-11-14
 */
class CreateClusterRequest {
    /**
     * Constructs a new <code>CreateClusterRequest</code>.
     * @alias module:model/CreateClusterRequest
     * @param brokerNodeGroupInfo {module:model/CreateClusterRequestBrokerNodeGroupInfo} 
     * @param clusterName {String}              <p>The name of the cluster.</p>          
     * @param kafkaVersion {String}              <p>The version of Apache Kafka.</p>          
     * @param numberOfBrokerNodes {Number}              <p>The number of broker nodes in the cluster.</p>          
     */
    constructor(brokerNodeGroupInfo, clusterName, kafkaVersion, numberOfBrokerNodes) { 
        
        CreateClusterRequest.initialize(this, brokerNodeGroupInfo, clusterName, kafkaVersion, numberOfBrokerNodes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, brokerNodeGroupInfo, clusterName, kafkaVersion, numberOfBrokerNodes) { 
        obj['brokerNodeGroupInfo'] = brokerNodeGroupInfo;
        obj['clusterName'] = clusterName;
        obj['kafkaVersion'] = kafkaVersion;
        obj['numberOfBrokerNodes'] = numberOfBrokerNodes;
    }

    /**
     * Constructs a <code>CreateClusterRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateClusterRequest} obj Optional instance to populate.
     * @return {module:model/CreateClusterRequest} The populated <code>CreateClusterRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateClusterRequest();

            if (data.hasOwnProperty('brokerNodeGroupInfo')) {
                obj['brokerNodeGroupInfo'] = CreateClusterRequestBrokerNodeGroupInfo.constructFromObject(data['brokerNodeGroupInfo']);
            }
            if (data.hasOwnProperty('clientAuthentication')) {
                obj['clientAuthentication'] = CreateClusterRequestClientAuthentication.constructFromObject(data['clientAuthentication']);
            }
            if (data.hasOwnProperty('clusterName')) {
                obj['clusterName'] = ApiClient.convertToType(data['clusterName'], 'String');
            }
            if (data.hasOwnProperty('configurationInfo')) {
                obj['configurationInfo'] = CreateClusterRequestConfigurationInfo.constructFromObject(data['configurationInfo']);
            }
            if (data.hasOwnProperty('encryptionInfo')) {
                obj['encryptionInfo'] = CreateClusterRequestEncryptionInfo.constructFromObject(data['encryptionInfo']);
            }
            if (data.hasOwnProperty('enhancedMonitoring')) {
                obj['enhancedMonitoring'] = ApiClient.convertToType(data['enhancedMonitoring'], 'String');
            }
            if (data.hasOwnProperty('openMonitoring')) {
                obj['openMonitoring'] = CreateClusterRequestOpenMonitoring.constructFromObject(data['openMonitoring']);
            }
            if (data.hasOwnProperty('kafkaVersion')) {
                obj['kafkaVersion'] = ApiClient.convertToType(data['kafkaVersion'], 'String');
            }
            if (data.hasOwnProperty('loggingInfo')) {
                obj['loggingInfo'] = CreateClusterRequestLoggingInfo.constructFromObject(data['loggingInfo']);
            }
            if (data.hasOwnProperty('numberOfBrokerNodes')) {
                obj['numberOfBrokerNodes'] = ApiClient.convertToType(data['numberOfBrokerNodes'], 'Number');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('storageMode')) {
                obj['storageMode'] = ApiClient.convertToType(data['storageMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateClusterRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateClusterRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateClusterRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `brokerNodeGroupInfo`
        if (data['brokerNodeGroupInfo']) { // data not null
          CreateClusterRequestBrokerNodeGroupInfo.validateJSON(data['brokerNodeGroupInfo']);
        }
        // validate the optional field `clientAuthentication`
        if (data['clientAuthentication']) { // data not null
          CreateClusterRequestClientAuthentication.validateJSON(data['clientAuthentication']);
        }
        // ensure the json data is a string
        if (data['clusterName'] && !(typeof data['clusterName'] === 'string' || data['clusterName'] instanceof String)) {
            throw new Error("Expected the field `clusterName` to be a primitive type in the JSON string but got " + data['clusterName']);
        }
        // validate the optional field `configurationInfo`
        if (data['configurationInfo']) { // data not null
          CreateClusterRequestConfigurationInfo.validateJSON(data['configurationInfo']);
        }
        // validate the optional field `encryptionInfo`
        if (data['encryptionInfo']) { // data not null
          CreateClusterRequestEncryptionInfo.validateJSON(data['encryptionInfo']);
        }
        // ensure the json data is a string
        if (data['enhancedMonitoring'] && !(typeof data['enhancedMonitoring'] === 'string' || data['enhancedMonitoring'] instanceof String)) {
            throw new Error("Expected the field `enhancedMonitoring` to be a primitive type in the JSON string but got " + data['enhancedMonitoring']);
        }
        // validate the optional field `openMonitoring`
        if (data['openMonitoring']) { // data not null
          CreateClusterRequestOpenMonitoring.validateJSON(data['openMonitoring']);
        }
        // ensure the json data is a string
        if (data['kafkaVersion'] && !(typeof data['kafkaVersion'] === 'string' || data['kafkaVersion'] instanceof String)) {
            throw new Error("Expected the field `kafkaVersion` to be a primitive type in the JSON string but got " + data['kafkaVersion']);
        }
        // validate the optional field `loggingInfo`
        if (data['loggingInfo']) { // data not null
          CreateClusterRequestLoggingInfo.validateJSON(data['loggingInfo']);
        }
        // ensure the json data is a string
        if (data['storageMode'] && !(typeof data['storageMode'] === 'string' || data['storageMode'] instanceof String)) {
            throw new Error("Expected the field `storageMode` to be a primitive type in the JSON string but got " + data['storageMode']);
        }

        return true;
    }


}

CreateClusterRequest.RequiredProperties = ["brokerNodeGroupInfo", "clusterName", "kafkaVersion", "numberOfBrokerNodes"];

/**
 * @member {module:model/CreateClusterRequestBrokerNodeGroupInfo} brokerNodeGroupInfo
 */
CreateClusterRequest.prototype['brokerNodeGroupInfo'] = undefined;

/**
 * @member {module:model/CreateClusterRequestClientAuthentication} clientAuthentication
 */
CreateClusterRequest.prototype['clientAuthentication'] = undefined;

/**
 *              <p>The name of the cluster.</p>          
 * @member {String} clusterName
 */
CreateClusterRequest.prototype['clusterName'] = undefined;

/**
 * @member {module:model/CreateClusterRequestConfigurationInfo} configurationInfo
 */
CreateClusterRequest.prototype['configurationInfo'] = undefined;

/**
 * @member {module:model/CreateClusterRequestEncryptionInfo} encryptionInfo
 */
CreateClusterRequest.prototype['encryptionInfo'] = undefined;

/**
 *              <p>Specifies which metrics are gathered for the MSK cluster. This property has the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each of these levels of monitoring, see <a href=\"https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html\">Monitoring</a>.</p>          
 * @member {module:model/CreateClusterRequest.EnhancedMonitoringEnum} enhancedMonitoring
 */
CreateClusterRequest.prototype['enhancedMonitoring'] = undefined;

/**
 * @member {module:model/CreateClusterRequestOpenMonitoring} openMonitoring
 */
CreateClusterRequest.prototype['openMonitoring'] = undefined;

/**
 *              <p>The version of Apache Kafka.</p>          
 * @member {String} kafkaVersion
 */
CreateClusterRequest.prototype['kafkaVersion'] = undefined;

/**
 * @member {module:model/CreateClusterRequestLoggingInfo} loggingInfo
 */
CreateClusterRequest.prototype['loggingInfo'] = undefined;

/**
 *              <p>The number of broker nodes in the cluster.</p>          
 * @member {Number} numberOfBrokerNodes
 */
CreateClusterRequest.prototype['numberOfBrokerNodes'] = undefined;

/**
 *              <p>Create tags when creating the cluster.</p>          
 * @member {Object.<String, String>} tags
 */
CreateClusterRequest.prototype['tags'] = undefined;

/**
 * Controls storage mode for various supported storage tiers.
 * @member {module:model/CreateClusterRequest.StorageModeEnum} storageMode
 */
CreateClusterRequest.prototype['storageMode'] = undefined;





/**
 * Allowed values for the <code>enhancedMonitoring</code> property.
 * @enum {String}
 * @readonly
 */
CreateClusterRequest['EnhancedMonitoringEnum'] = {

    /**
     * value: "DEFAULT"
     * @const
     */
    "DEFAULT": "DEFAULT",

    /**
     * value: "PER_BROKER"
     * @const
     */
    "PER_BROKER": "PER_BROKER",

    /**
     * value: "PER_TOPIC_PER_BROKER"
     * @const
     */
    "PER_TOPIC_PER_BROKER": "PER_TOPIC_PER_BROKER",

    /**
     * value: "PER_TOPIC_PER_PARTITION"
     * @const
     */
    "PER_TOPIC_PER_PARTITION": "PER_TOPIC_PER_PARTITION"
};


/**
 * Allowed values for the <code>storageMode</code> property.
 * @enum {String}
 * @readonly
 */
CreateClusterRequest['StorageModeEnum'] = {

    /**
     * value: "LOCAL"
     * @const
     */
    "LOCAL": "LOCAL",

    /**
     * value: "TIERED"
     * @const
     */
    "TIERED": "TIERED"
};



export default CreateClusterRequest;

