/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateClusterV2RequestProvisioned from './CreateClusterV2RequestProvisioned';
import CreateClusterV2RequestServerless from './CreateClusterV2RequestServerless';

/**
 * The CreateClusterV2Request model module.
 * @module model/CreateClusterV2Request
 * @version 2018-11-14
 */
class CreateClusterV2Request {
    /**
     * Constructs a new <code>CreateClusterV2Request</code>.
     * @alias module:model/CreateClusterV2Request
     * @param clusterName {String}              <p>The name of the cluster.</p>          
     */
    constructor(clusterName) { 
        
        CreateClusterV2Request.initialize(this, clusterName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clusterName) { 
        obj['clusterName'] = clusterName;
    }

    /**
     * Constructs a <code>CreateClusterV2Request</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateClusterV2Request} obj Optional instance to populate.
     * @return {module:model/CreateClusterV2Request} The populated <code>CreateClusterV2Request</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateClusterV2Request();

            if (data.hasOwnProperty('clusterName')) {
                obj['clusterName'] = ApiClient.convertToType(data['clusterName'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('provisioned')) {
                obj['provisioned'] = CreateClusterV2RequestProvisioned.constructFromObject(data['provisioned']);
            }
            if (data.hasOwnProperty('serverless')) {
                obj['serverless'] = CreateClusterV2RequestServerless.constructFromObject(data['serverless']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateClusterV2Request</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateClusterV2Request</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateClusterV2Request.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['clusterName'] && !(typeof data['clusterName'] === 'string' || data['clusterName'] instanceof String)) {
            throw new Error("Expected the field `clusterName` to be a primitive type in the JSON string but got " + data['clusterName']);
        }
        // validate the optional field `provisioned`
        if (data['provisioned']) { // data not null
          CreateClusterV2RequestProvisioned.validateJSON(data['provisioned']);
        }
        // validate the optional field `serverless`
        if (data['serverless']) { // data not null
          CreateClusterV2RequestServerless.validateJSON(data['serverless']);
        }

        return true;
    }


}

CreateClusterV2Request.RequiredProperties = ["clusterName"];

/**
 *              <p>The name of the cluster.</p>          
 * @member {String} clusterName
 */
CreateClusterV2Request.prototype['clusterName'] = undefined;

/**
 *              <p>A map of tags that you want the cluster to have.</p>          
 * @member {Object.<String, String>} tags
 */
CreateClusterV2Request.prototype['tags'] = undefined;

/**
 * @member {module:model/CreateClusterV2RequestProvisioned} provisioned
 */
CreateClusterV2Request.prototype['provisioned'] = undefined;

/**
 * @member {module:model/CreateClusterV2RequestServerless} serverless
 */
CreateClusterV2Request.prototype['serverless'] = undefined;






export default CreateClusterV2Request;

