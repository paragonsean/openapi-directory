/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProvisionedThroughput from './ProvisionedThroughput';

/**
 * The BrokerEBSVolumeInfoProvisionedThroughput model module.
 * @module model/BrokerEBSVolumeInfoProvisionedThroughput
 * @version 2018-11-14
 */
class BrokerEBSVolumeInfoProvisionedThroughput {
    /**
     * Constructs a new <code>BrokerEBSVolumeInfoProvisionedThroughput</code>.
     * @alias module:model/BrokerEBSVolumeInfoProvisionedThroughput
     * @implements module:model/ProvisionedThroughput
     */
    constructor() { 
        ProvisionedThroughput.initialize(this);
        BrokerEBSVolumeInfoProvisionedThroughput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BrokerEBSVolumeInfoProvisionedThroughput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BrokerEBSVolumeInfoProvisionedThroughput} obj Optional instance to populate.
     * @return {module:model/BrokerEBSVolumeInfoProvisionedThroughput} The populated <code>BrokerEBSVolumeInfoProvisionedThroughput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BrokerEBSVolumeInfoProvisionedThroughput();
            ProvisionedThroughput.constructFromObject(data, obj);

            if (data.hasOwnProperty('Enabled')) {
                obj['Enabled'] = ApiClient.convertToType(data['Enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('VolumeThroughput')) {
                obj['VolumeThroughput'] = ApiClient.convertToType(data['VolumeThroughput'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BrokerEBSVolumeInfoProvisionedThroughput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BrokerEBSVolumeInfoProvisionedThroughput</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Enabled`
        if (data['Enabled']) { // data not null
          Boolean.validateJSON(data['Enabled']);
        }
        // validate the optional field `VolumeThroughput`
        if (data['VolumeThroughput']) { // data not null
          Number.validateJSON(data['VolumeThroughput']);
        }

        return true;
    }


}



/**
 * @member {Boolean} Enabled
 */
BrokerEBSVolumeInfoProvisionedThroughput.prototype['Enabled'] = undefined;

/**
 * @member {Number} VolumeThroughput
 */
BrokerEBSVolumeInfoProvisionedThroughput.prototype['VolumeThroughput'] = undefined;


// Implement ProvisionedThroughput interface:
/**
 * @member {Boolean} Enabled
 */
ProvisionedThroughput.prototype['Enabled'] = undefined;
/**
 * @member {Number} VolumeThroughput
 */
ProvisionedThroughput.prototype['VolumeThroughput'] = undefined;




export default BrokerEBSVolumeInfoProvisionedThroughput;

