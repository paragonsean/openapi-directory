/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Prometheus from './Prometheus';
import PrometheusJmxExporter from './PrometheusJmxExporter';
import PrometheusNodeExporter from './PrometheusNodeExporter';

/**
 * The OpenMonitoringPrometheus model module.
 * @module model/OpenMonitoringPrometheus
 * @version 2018-11-14
 */
class OpenMonitoringPrometheus {
    /**
     * Constructs a new <code>OpenMonitoringPrometheus</code>.
     * @alias module:model/OpenMonitoringPrometheus
     * @implements module:model/Prometheus
     */
    constructor() { 
        Prometheus.initialize(this);
        OpenMonitoringPrometheus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OpenMonitoringPrometheus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OpenMonitoringPrometheus} obj Optional instance to populate.
     * @return {module:model/OpenMonitoringPrometheus} The populated <code>OpenMonitoringPrometheus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OpenMonitoringPrometheus();
            Prometheus.constructFromObject(data, obj);

            if (data.hasOwnProperty('JmxExporter')) {
                obj['JmxExporter'] = PrometheusJmxExporter.constructFromObject(data['JmxExporter']);
            }
            if (data.hasOwnProperty('NodeExporter')) {
                obj['NodeExporter'] = PrometheusNodeExporter.constructFromObject(data['NodeExporter']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OpenMonitoringPrometheus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OpenMonitoringPrometheus</code>.
     */
    static validateJSON(data) {
        // validate the optional field `JmxExporter`
        if (data['JmxExporter']) { // data not null
          PrometheusJmxExporter.validateJSON(data['JmxExporter']);
        }
        // validate the optional field `NodeExporter`
        if (data['NodeExporter']) { // data not null
          PrometheusNodeExporter.validateJSON(data['NodeExporter']);
        }

        return true;
    }


}



/**
 * @member {module:model/PrometheusJmxExporter} JmxExporter
 */
OpenMonitoringPrometheus.prototype['JmxExporter'] = undefined;

/**
 * @member {module:model/PrometheusNodeExporter} NodeExporter
 */
OpenMonitoringPrometheus.prototype['NodeExporter'] = undefined;


// Implement Prometheus interface:
/**
 * @member {module:model/PrometheusJmxExporter} JmxExporter
 */
Prometheus.prototype['JmxExporter'] = undefined;
/**
 * @member {module:model/PrometheusNodeExporter} NodeExporter
 */
Prometheus.prototype['NodeExporter'] = undefined;




export default OpenMonitoringPrometheus;

