/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateClusterV2RequestProvisionedBrokerNodeGroupInfo from './CreateClusterV2RequestProvisionedBrokerNodeGroupInfo';
import CreateClusterV2RequestProvisionedClientAuthentication from './CreateClusterV2RequestProvisionedClientAuthentication';
import CreateClusterV2RequestProvisionedConfigurationInfo from './CreateClusterV2RequestProvisionedConfigurationInfo';
import CreateClusterV2RequestProvisionedEncryptionInfo from './CreateClusterV2RequestProvisionedEncryptionInfo';
import CreateClusterV2RequestProvisionedLoggingInfo from './CreateClusterV2RequestProvisionedLoggingInfo';
import CreateClusterV2RequestProvisionedOpenMonitoring from './CreateClusterV2RequestProvisionedOpenMonitoring';
import EnhancedMonitoring from './EnhancedMonitoring';
import ProvisionedRequest from './ProvisionedRequest';
import StorageMode from './StorageMode';

/**
 * The CreateClusterV2RequestProvisioned model module.
 * @module model/CreateClusterV2RequestProvisioned
 * @version 2018-11-14
 */
class CreateClusterV2RequestProvisioned {
    /**
     * Constructs a new <code>CreateClusterV2RequestProvisioned</code>.
     * @alias module:model/CreateClusterV2RequestProvisioned
     * @implements module:model/ProvisionedRequest
     * @param brokerNodeGroupInfo {module:model/CreateClusterV2RequestProvisionedBrokerNodeGroupInfo} 
     * @param kafkaVersion {String} 
     * @param numberOfBrokerNodes {Number} 
     */
    constructor(brokerNodeGroupInfo, kafkaVersion, numberOfBrokerNodes) { 
        ProvisionedRequest.initialize(this, brokerNodeGroupInfo, kafkaVersion, numberOfBrokerNodes);
        CreateClusterV2RequestProvisioned.initialize(this, brokerNodeGroupInfo, kafkaVersion, numberOfBrokerNodes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, brokerNodeGroupInfo, kafkaVersion, numberOfBrokerNodes) { 
        obj['BrokerNodeGroupInfo'] = brokerNodeGroupInfo;
        obj['KafkaVersion'] = kafkaVersion;
        obj['NumberOfBrokerNodes'] = numberOfBrokerNodes;
    }

    /**
     * Constructs a <code>CreateClusterV2RequestProvisioned</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateClusterV2RequestProvisioned} obj Optional instance to populate.
     * @return {module:model/CreateClusterV2RequestProvisioned} The populated <code>CreateClusterV2RequestProvisioned</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateClusterV2RequestProvisioned();
            ProvisionedRequest.constructFromObject(data, obj);

            if (data.hasOwnProperty('BrokerNodeGroupInfo')) {
                obj['BrokerNodeGroupInfo'] = CreateClusterV2RequestProvisionedBrokerNodeGroupInfo.constructFromObject(data['BrokerNodeGroupInfo']);
            }
            if (data.hasOwnProperty('ClientAuthentication')) {
                obj['ClientAuthentication'] = CreateClusterV2RequestProvisionedClientAuthentication.constructFromObject(data['ClientAuthentication']);
            }
            if (data.hasOwnProperty('ConfigurationInfo')) {
                obj['ConfigurationInfo'] = CreateClusterV2RequestProvisionedConfigurationInfo.constructFromObject(data['ConfigurationInfo']);
            }
            if (data.hasOwnProperty('EncryptionInfo')) {
                obj['EncryptionInfo'] = CreateClusterV2RequestProvisionedEncryptionInfo.constructFromObject(data['EncryptionInfo']);
            }
            if (data.hasOwnProperty('EnhancedMonitoring')) {
                obj['EnhancedMonitoring'] = ApiClient.convertToType(data['EnhancedMonitoring'], EnhancedMonitoring);
            }
            if (data.hasOwnProperty('OpenMonitoring')) {
                obj['OpenMonitoring'] = CreateClusterV2RequestProvisionedOpenMonitoring.constructFromObject(data['OpenMonitoring']);
            }
            if (data.hasOwnProperty('KafkaVersion')) {
                obj['KafkaVersion'] = ApiClient.convertToType(data['KafkaVersion'], 'String');
            }
            if (data.hasOwnProperty('LoggingInfo')) {
                obj['LoggingInfo'] = CreateClusterV2RequestProvisionedLoggingInfo.constructFromObject(data['LoggingInfo']);
            }
            if (data.hasOwnProperty('NumberOfBrokerNodes')) {
                obj['NumberOfBrokerNodes'] = ApiClient.convertToType(data['NumberOfBrokerNodes'], 'Number');
            }
            if (data.hasOwnProperty('StorageMode')) {
                obj['StorageMode'] = ApiClient.convertToType(data['StorageMode'], StorageMode);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateClusterV2RequestProvisioned</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateClusterV2RequestProvisioned</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateClusterV2RequestProvisioned.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `BrokerNodeGroupInfo`
        if (data['BrokerNodeGroupInfo']) { // data not null
          CreateClusterV2RequestProvisionedBrokerNodeGroupInfo.validateJSON(data['BrokerNodeGroupInfo']);
        }
        // validate the optional field `ClientAuthentication`
        if (data['ClientAuthentication']) { // data not null
          CreateClusterV2RequestProvisionedClientAuthentication.validateJSON(data['ClientAuthentication']);
        }
        // validate the optional field `ConfigurationInfo`
        if (data['ConfigurationInfo']) { // data not null
          CreateClusterV2RequestProvisionedConfigurationInfo.validateJSON(data['ConfigurationInfo']);
        }
        // validate the optional field `EncryptionInfo`
        if (data['EncryptionInfo']) { // data not null
          CreateClusterV2RequestProvisionedEncryptionInfo.validateJSON(data['EncryptionInfo']);
        }
        // validate the optional field `EnhancedMonitoring`
        if (data['EnhancedMonitoring']) { // data not null
          EnhancedMonitoring.validateJSON(data['EnhancedMonitoring']);
        }
        // validate the optional field `OpenMonitoring`
        if (data['OpenMonitoring']) { // data not null
          CreateClusterV2RequestProvisionedOpenMonitoring.validateJSON(data['OpenMonitoring']);
        }
        // validate the optional field `KafkaVersion`
        if (data['KafkaVersion']) { // data not null
          String.validateJSON(data['KafkaVersion']);
        }
        // validate the optional field `LoggingInfo`
        if (data['LoggingInfo']) { // data not null
          CreateClusterV2RequestProvisionedLoggingInfo.validateJSON(data['LoggingInfo']);
        }
        // validate the optional field `NumberOfBrokerNodes`
        if (data['NumberOfBrokerNodes']) { // data not null
          Number.validateJSON(data['NumberOfBrokerNodes']);
        }
        // validate the optional field `StorageMode`
        if (data['StorageMode']) { // data not null
          StorageMode.validateJSON(data['StorageMode']);
        }

        return true;
    }


}

CreateClusterV2RequestProvisioned.RequiredProperties = ["BrokerNodeGroupInfo", "KafkaVersion", "NumberOfBrokerNodes"];

/**
 * @member {module:model/CreateClusterV2RequestProvisionedBrokerNodeGroupInfo} BrokerNodeGroupInfo
 */
CreateClusterV2RequestProvisioned.prototype['BrokerNodeGroupInfo'] = undefined;

/**
 * @member {module:model/CreateClusterV2RequestProvisionedClientAuthentication} ClientAuthentication
 */
CreateClusterV2RequestProvisioned.prototype['ClientAuthentication'] = undefined;

/**
 * @member {module:model/CreateClusterV2RequestProvisionedConfigurationInfo} ConfigurationInfo
 */
CreateClusterV2RequestProvisioned.prototype['ConfigurationInfo'] = undefined;

/**
 * @member {module:model/CreateClusterV2RequestProvisionedEncryptionInfo} EncryptionInfo
 */
CreateClusterV2RequestProvisioned.prototype['EncryptionInfo'] = undefined;

/**
 * @member {module:model/EnhancedMonitoring} EnhancedMonitoring
 */
CreateClusterV2RequestProvisioned.prototype['EnhancedMonitoring'] = undefined;

/**
 * @member {module:model/CreateClusterV2RequestProvisionedOpenMonitoring} OpenMonitoring
 */
CreateClusterV2RequestProvisioned.prototype['OpenMonitoring'] = undefined;

/**
 * @member {String} KafkaVersion
 */
CreateClusterV2RequestProvisioned.prototype['KafkaVersion'] = undefined;

/**
 * @member {module:model/CreateClusterV2RequestProvisionedLoggingInfo} LoggingInfo
 */
CreateClusterV2RequestProvisioned.prototype['LoggingInfo'] = undefined;

/**
 * @member {Number} NumberOfBrokerNodes
 */
CreateClusterV2RequestProvisioned.prototype['NumberOfBrokerNodes'] = undefined;

/**
 * @member {module:model/StorageMode} StorageMode
 */
CreateClusterV2RequestProvisioned.prototype['StorageMode'] = undefined;


// Implement ProvisionedRequest interface:
/**
 * @member {module:model/CreateClusterV2RequestProvisionedBrokerNodeGroupInfo} BrokerNodeGroupInfo
 */
ProvisionedRequest.prototype['BrokerNodeGroupInfo'] = undefined;
/**
 * @member {module:model/CreateClusterV2RequestProvisionedClientAuthentication} ClientAuthentication
 */
ProvisionedRequest.prototype['ClientAuthentication'] = undefined;
/**
 * @member {module:model/CreateClusterV2RequestProvisionedConfigurationInfo} ConfigurationInfo
 */
ProvisionedRequest.prototype['ConfigurationInfo'] = undefined;
/**
 * @member {module:model/CreateClusterV2RequestProvisionedEncryptionInfo} EncryptionInfo
 */
ProvisionedRequest.prototype['EncryptionInfo'] = undefined;
/**
 * @member {module:model/EnhancedMonitoring} EnhancedMonitoring
 */
ProvisionedRequest.prototype['EnhancedMonitoring'] = undefined;
/**
 * @member {module:model/CreateClusterV2RequestProvisionedOpenMonitoring} OpenMonitoring
 */
ProvisionedRequest.prototype['OpenMonitoring'] = undefined;
/**
 * @member {String} KafkaVersion
 */
ProvisionedRequest.prototype['KafkaVersion'] = undefined;
/**
 * @member {module:model/CreateClusterV2RequestProvisionedLoggingInfo} LoggingInfo
 */
ProvisionedRequest.prototype['LoggingInfo'] = undefined;
/**
 * @member {Number} NumberOfBrokerNodes
 */
ProvisionedRequest.prototype['NumberOfBrokerNodes'] = undefined;
/**
 * @member {module:model/StorageMode} StorageMode
 */
ProvisionedRequest.prototype['StorageMode'] = undefined;




export default CreateClusterV2RequestProvisioned;

