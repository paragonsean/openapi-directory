/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateConfigurationResponse_LatestRevision.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateConfigurationResponse_LatestRevision::OAICreateConfigurationResponse_LatestRevision(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateConfigurationResponse_LatestRevision::OAICreateConfigurationResponse_LatestRevision() {
    this->initializeModel();
}

OAICreateConfigurationResponse_LatestRevision::~OAICreateConfigurationResponse_LatestRevision() {}

void OAICreateConfigurationResponse_LatestRevision::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_revision_isSet = false;
    m_revision_isValid = false;
}

void OAICreateConfigurationResponse_LatestRevision::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateConfigurationResponse_LatestRevision::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_revision_isValid = ::OpenAPI::fromJsonValue(m_revision, json[QString("Revision")]);
    m_revision_isSet = !json[QString("Revision")].isNull() && m_revision_isValid;
}

QString OAICreateConfigurationResponse_LatestRevision::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateConfigurationResponse_LatestRevision::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_revision_isSet) {
        obj.insert(QString("Revision"), ::OpenAPI::toJsonValue(m_revision));
    }
    return obj;
}

QDateTime OAICreateConfigurationResponse_LatestRevision::getCreationTime() const {
    return m_creation_time;
}
void OAICreateConfigurationResponse_LatestRevision::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAICreateConfigurationResponse_LatestRevision::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAICreateConfigurationResponse_LatestRevision::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAICreateConfigurationResponse_LatestRevision::getDescription() const {
    return m_description;
}
void OAICreateConfigurationResponse_LatestRevision::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateConfigurationResponse_LatestRevision::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateConfigurationResponse_LatestRevision::is_description_Valid() const{
    return m_description_isValid;
}

qint32 OAICreateConfigurationResponse_LatestRevision::getRevision() const {
    return m_revision;
}
void OAICreateConfigurationResponse_LatestRevision::setRevision(const qint32 &revision) {
    m_revision = revision;
    m_revision_isSet = true;
}

bool OAICreateConfigurationResponse_LatestRevision::is_revision_Set() const{
    return m_revision_isSet;
}

bool OAICreateConfigurationResponse_LatestRevision::is_revision_Valid() const{
    return m_revision_isValid;
}

bool OAICreateConfigurationResponse_LatestRevision::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateConfigurationResponse_LatestRevision::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_creation_time_isValid && m_revision_isValid && true;
}

} // namespace OpenAPI
