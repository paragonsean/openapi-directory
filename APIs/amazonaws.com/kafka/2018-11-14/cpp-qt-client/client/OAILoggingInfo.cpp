/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoggingInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoggingInfo::OAILoggingInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoggingInfo::OAILoggingInfo() {
    this->initializeModel();
}

OAILoggingInfo::~OAILoggingInfo() {}

void OAILoggingInfo::initializeModel() {

    m_broker_logs_isSet = false;
    m_broker_logs_isValid = false;
}

void OAILoggingInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoggingInfo::fromJsonObject(QJsonObject json) {

    m_broker_logs_isValid = ::OpenAPI::fromJsonValue(m_broker_logs, json[QString("BrokerLogs")]);
    m_broker_logs_isSet = !json[QString("BrokerLogs")].isNull() && m_broker_logs_isValid;
}

QString OAILoggingInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoggingInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_broker_logs.isSet()) {
        obj.insert(QString("BrokerLogs"), ::OpenAPI::toJsonValue(m_broker_logs));
    }
    return obj;
}

OAICreateCluster_request_loggingInfo_BrokerLogs OAILoggingInfo::getBrokerLogs() const {
    return m_broker_logs;
}
void OAILoggingInfo::setBrokerLogs(const OAICreateCluster_request_loggingInfo_BrokerLogs &broker_logs) {
    m_broker_logs = broker_logs;
    m_broker_logs_isSet = true;
}

bool OAILoggingInfo::is_broker_logs_Set() const{
    return m_broker_logs_isSet;
}

bool OAILoggingInfo::is_broker_logs_Valid() const{
    return m_broker_logs_isValid;
}

bool OAILoggingInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_broker_logs.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoggingInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_broker_logs_isValid && true;
}

} // namespace OpenAPI
