/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterOperationV2_Serverless.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterOperationV2_Serverless::OAIClusterOperationV2_Serverless(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterOperationV2_Serverless::OAIClusterOperationV2_Serverless() {
    this->initializeModel();
}

OAIClusterOperationV2_Serverless::~OAIClusterOperationV2_Serverless() {}

void OAIClusterOperationV2_Serverless::initializeModel() {

    m_vpc_connection_info_isSet = false;
    m_vpc_connection_info_isValid = false;
}

void OAIClusterOperationV2_Serverless::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterOperationV2_Serverless::fromJsonObject(QJsonObject json) {

    m_vpc_connection_info_isValid = ::OpenAPI::fromJsonValue(m_vpc_connection_info, json[QString("VpcConnectionInfo")]);
    m_vpc_connection_info_isSet = !json[QString("VpcConnectionInfo")].isNull() && m_vpc_connection_info_isValid;
}

QString OAIClusterOperationV2_Serverless::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterOperationV2_Serverless::asJsonObject() const {
    QJsonObject obj;
    if (m_vpc_connection_info.isSet()) {
        obj.insert(QString("VpcConnectionInfo"), ::OpenAPI::toJsonValue(m_vpc_connection_info));
    }
    return obj;
}

OAIClusterOperationV2Serverless_VpcConnectionInfo OAIClusterOperationV2_Serverless::getVpcConnectionInfo() const {
    return m_vpc_connection_info;
}
void OAIClusterOperationV2_Serverless::setVpcConnectionInfo(const OAIClusterOperationV2Serverless_VpcConnectionInfo &vpc_connection_info) {
    m_vpc_connection_info = vpc_connection_info;
    m_vpc_connection_info_isSet = true;
}

bool OAIClusterOperationV2_Serverless::is_vpc_connection_info_Set() const{
    return m_vpc_connection_info_isSet;
}

bool OAIClusterOperationV2_Serverless::is_vpc_connection_info_Valid() const{
    return m_vpc_connection_info_isValid;
}

bool OAIClusterOperationV2_Serverless::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vpc_connection_info.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterOperationV2_Serverless::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
