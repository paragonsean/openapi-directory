/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBrokerEBSVolumeInfo.h
 *
 *              &lt;p&gt;Specifies the EBS volume upgrade information. The broker identifier must be set to the keyword ALL. This means the changes apply to all the brokers in the cluster.&lt;/p&gt;          
 */

#ifndef OAIBrokerEBSVolumeInfo_H
#define OAIBrokerEBSVolumeInfo_H

#include <QJsonObject>

#include "OAIBrokerEBSVolumeInfo_ProvisionedThroughput.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBrokerEBSVolumeInfo_ProvisionedThroughput;

class OAIBrokerEBSVolumeInfo : public OAIObject {
public:
    OAIBrokerEBSVolumeInfo();
    OAIBrokerEBSVolumeInfo(QString json);
    ~OAIBrokerEBSVolumeInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKafkaBrokerNodeId() const;
    void setKafkaBrokerNodeId(const QString &kafka_broker_node_id);
    bool is_kafka_broker_node_id_Set() const;
    bool is_kafka_broker_node_id_Valid() const;

    OAIBrokerEBSVolumeInfo_ProvisionedThroughput getProvisionedThroughput() const;
    void setProvisionedThroughput(const OAIBrokerEBSVolumeInfo_ProvisionedThroughput &provisioned_throughput);
    bool is_provisioned_throughput_Set() const;
    bool is_provisioned_throughput_Valid() const;

    qint32 getVolumeSizeGb() const;
    void setVolumeSizeGb(const qint32 &volume_size_gb);
    bool is_volume_size_gb_Set() const;
    bool is_volume_size_gb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_kafka_broker_node_id;
    bool m_kafka_broker_node_id_isSet;
    bool m_kafka_broker_node_id_isValid;

    OAIBrokerEBSVolumeInfo_ProvisionedThroughput m_provisioned_throughput;
    bool m_provisioned_throughput_isSet;
    bool m_provisioned_throughput_isValid;

    qint32 m_volume_size_gb;
    bool m_volume_size_gb_isSet;
    bool m_volume_size_gb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBrokerEBSVolumeInfo)

#endif // OAIBrokerEBSVolumeInfo_H
