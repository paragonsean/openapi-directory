/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo() {
    this->initializeModel();
}

OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::~OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo() {}

void OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::initializeModel() {

    m_public_access_isSet = false;
    m_public_access_isValid = false;

    m_vpc_connectivity_isSet = false;
    m_vpc_connectivity_isValid = false;
}

void OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::fromJsonObject(QJsonObject json) {

    m_public_access_isValid = ::OpenAPI::fromJsonValue(m_public_access, json[QString("PublicAccess")]);
    m_public_access_isSet = !json[QString("PublicAccess")].isNull() && m_public_access_isValid;

    m_vpc_connectivity_isValid = ::OpenAPI::fromJsonValue(m_vpc_connectivity, json[QString("VpcConnectivity")]);
    m_vpc_connectivity_isSet = !json[QString("VpcConnectivity")].isNull() && m_vpc_connectivity_isValid;
}

QString OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_public_access.isSet()) {
        obj.insert(QString("PublicAccess"), ::OpenAPI::toJsonValue(m_public_access));
    }
    if (m_vpc_connectivity.isSet()) {
        obj.insert(QString("VpcConnectivity"), ::OpenAPI::toJsonValue(m_vpc_connectivity));
    }
    return obj;
}

OAIUpdateConnectivity_request_connectivityInfo_PublicAccess OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::getPublicAccess() const {
    return m_public_access;
}
void OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::setPublicAccess(const OAIUpdateConnectivity_request_connectivityInfo_PublicAccess &public_access) {
    m_public_access = public_access;
    m_public_access_isSet = true;
}

bool OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::is_public_access_Set() const{
    return m_public_access_isSet;
}

bool OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::is_public_access_Valid() const{
    return m_public_access_isValid;
}

OAIUpdateConnectivity_request_connectivityInfo_VpcConnectivity OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::getVpcConnectivity() const {
    return m_vpc_connectivity;
}
void OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::setVpcConnectivity(const OAIUpdateConnectivity_request_connectivityInfo_VpcConnectivity &vpc_connectivity) {
    m_vpc_connectivity = vpc_connectivity;
    m_vpc_connectivity_isSet = true;
}

bool OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::is_vpc_connectivity_Set() const{
    return m_vpc_connectivity_isSet;
}

bool OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::is_vpc_connectivity_Valid() const{
    return m_vpc_connectivity_isValid;
}

bool OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_public_access.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_connectivity.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
