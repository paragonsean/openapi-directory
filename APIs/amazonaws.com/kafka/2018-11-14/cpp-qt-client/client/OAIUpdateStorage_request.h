/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateStorage_request.h
 *
 * 
 */

#ifndef OAIUpdateStorage_request_H
#define OAIUpdateStorage_request_H

#include <QJsonObject>

#include "OAIUpdateStorage_request_provisionedThroughput.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateStorage_request_provisionedThroughput;

class OAIUpdateStorage_request : public OAIObject {
public:
    OAIUpdateStorage_request();
    OAIUpdateStorage_request(QString json);
    ~OAIUpdateStorage_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrentVersion() const;
    void setCurrentVersion(const QString &current_version);
    bool is_current_version_Set() const;
    bool is_current_version_Valid() const;

    OAIUpdateStorage_request_provisionedThroughput getProvisionedThroughput() const;
    void setProvisionedThroughput(const OAIUpdateStorage_request_provisionedThroughput &provisioned_throughput);
    bool is_provisioned_throughput_Set() const;
    bool is_provisioned_throughput_Valid() const;

    QString getStorageMode() const;
    void setStorageMode(const QString &storage_mode);
    bool is_storage_mode_Set() const;
    bool is_storage_mode_Valid() const;

    qint32 getVolumeSizeGb() const;
    void setVolumeSizeGb(const qint32 &volume_size_gb);
    bool is_volume_size_gb_Set() const;
    bool is_volume_size_gb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_current_version;
    bool m_current_version_isSet;
    bool m_current_version_isValid;

    OAIUpdateStorage_request_provisionedThroughput m_provisioned_throughput;
    bool m_provisioned_throughput_isSet;
    bool m_provisioned_throughput_isValid;

    QString m_storage_mode;
    bool m_storage_mode_isSet;
    bool m_storage_mode_isValid;

    qint32 m_volume_size_gb;
    bool m_volume_size_gb_isSet;
    bool m_volume_size_gb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateStorage_request)

#endif // OAIUpdateStorage_request_H
