/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterOperationInfo_SourceClusterInfo.h
 *
 * 
 */

#ifndef OAIClusterOperationInfo_SourceClusterInfo_H
#define OAIClusterOperationInfo_SourceClusterInfo_H

#include <QJsonObject>

#include "OAICreateClusterV2_request_provisioned_ClientAuthentication.h"
#include "OAICreateClusterV2_request_provisioned_EncryptionInfo.h"
#include "OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo.h"
#include "OAIEnhancedMonitoring.h"
#include "OAIMutableClusterInfo_ConfigurationInfo.h"
#include "OAIMutableClusterInfo_LoggingInfo.h"
#include "OAIMutableClusterInfo_OpenMonitoring.h"
#include "OAIStorageMode.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMutableClusterInfo_ConfigurationInfo;
class OAIMutableClusterInfo_OpenMonitoring;
class OAIMutableClusterInfo_LoggingInfo;
class OAICreateClusterV2_request_provisioned_ClientAuthentication;
class OAICreateClusterV2_request_provisioned_EncryptionInfo;
class OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo;

class OAIClusterOperationInfo_SourceClusterInfo : public OAIObject {
public:
    OAIClusterOperationInfo_SourceClusterInfo();
    OAIClusterOperationInfo_SourceClusterInfo(QString json);
    ~OAIClusterOperationInfo_SourceClusterInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getBrokerEbsVolumeInfo() const;
    void setBrokerEbsVolumeInfo(const QList &broker_ebs_volume_info);
    bool is_broker_ebs_volume_info_Set() const;
    bool is_broker_ebs_volume_info_Valid() const;

    OAIMutableClusterInfo_ConfigurationInfo getConfigurationInfo() const;
    void setConfigurationInfo(const OAIMutableClusterInfo_ConfigurationInfo &configuration_info);
    bool is_configuration_info_Set() const;
    bool is_configuration_info_Valid() const;

    qint32 getNumberOfBrokerNodes() const;
    void setNumberOfBrokerNodes(const qint32 &number_of_broker_nodes);
    bool is_number_of_broker_nodes_Set() const;
    bool is_number_of_broker_nodes_Valid() const;

    OAIEnhancedMonitoring getEnhancedMonitoring() const;
    void setEnhancedMonitoring(const OAIEnhancedMonitoring &enhanced_monitoring);
    bool is_enhanced_monitoring_Set() const;
    bool is_enhanced_monitoring_Valid() const;

    OAIMutableClusterInfo_OpenMonitoring getOpenMonitoring() const;
    void setOpenMonitoring(const OAIMutableClusterInfo_OpenMonitoring &open_monitoring);
    bool is_open_monitoring_Set() const;
    bool is_open_monitoring_Valid() const;

    QString getKafkaVersion() const;
    void setKafkaVersion(const QString &kafka_version);
    bool is_kafka_version_Set() const;
    bool is_kafka_version_Valid() const;

    OAIMutableClusterInfo_LoggingInfo getLoggingInfo() const;
    void setLoggingInfo(const OAIMutableClusterInfo_LoggingInfo &logging_info);
    bool is_logging_info_Set() const;
    bool is_logging_info_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    OAICreateClusterV2_request_provisioned_ClientAuthentication getClientAuthentication() const;
    void setClientAuthentication(const OAICreateClusterV2_request_provisioned_ClientAuthentication &client_authentication);
    bool is_client_authentication_Set() const;
    bool is_client_authentication_Valid() const;

    OAICreateClusterV2_request_provisioned_EncryptionInfo getEncryptionInfo() const;
    void setEncryptionInfo(const OAICreateClusterV2_request_provisioned_EncryptionInfo &encryption_info);
    bool is_encryption_info_Set() const;
    bool is_encryption_info_Valid() const;

    OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo getConnectivityInfo() const;
    void setConnectivityInfo(const OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo &connectivity_info);
    bool is_connectivity_info_Set() const;
    bool is_connectivity_info_Valid() const;

    OAIStorageMode getStorageMode() const;
    void setStorageMode(const OAIStorageMode &storage_mode);
    bool is_storage_mode_Set() const;
    bool is_storage_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_broker_ebs_volume_info;
    bool m_broker_ebs_volume_info_isSet;
    bool m_broker_ebs_volume_info_isValid;

    OAIMutableClusterInfo_ConfigurationInfo m_configuration_info;
    bool m_configuration_info_isSet;
    bool m_configuration_info_isValid;

    qint32 m_number_of_broker_nodes;
    bool m_number_of_broker_nodes_isSet;
    bool m_number_of_broker_nodes_isValid;

    OAIEnhancedMonitoring m_enhanced_monitoring;
    bool m_enhanced_monitoring_isSet;
    bool m_enhanced_monitoring_isValid;

    OAIMutableClusterInfo_OpenMonitoring m_open_monitoring;
    bool m_open_monitoring_isSet;
    bool m_open_monitoring_isValid;

    QString m_kafka_version;
    bool m_kafka_version_isSet;
    bool m_kafka_version_isValid;

    OAIMutableClusterInfo_LoggingInfo m_logging_info;
    bool m_logging_info_isSet;
    bool m_logging_info_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    OAICreateClusterV2_request_provisioned_ClientAuthentication m_client_authentication;
    bool m_client_authentication_isSet;
    bool m_client_authentication_isValid;

    OAICreateClusterV2_request_provisioned_EncryptionInfo m_encryption_info;
    bool m_encryption_info_isSet;
    bool m_encryption_info_isValid;

    OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo m_connectivity_info;
    bool m_connectivity_info_isSet;
    bool m_connectivity_info_isValid;

    OAIStorageMode m_storage_mode;
    bool m_storage_mode_isSet;
    bool m_storage_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterOperationInfo_SourceClusterInfo)

#endif // OAIClusterOperationInfo_SourceClusterInfo_H
