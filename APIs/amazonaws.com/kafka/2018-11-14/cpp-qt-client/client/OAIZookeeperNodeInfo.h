/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIZookeeperNodeInfo.h
 *
 *              &lt;p&gt;Zookeeper node information.&lt;/p&gt;          
 */

#ifndef OAIZookeeperNodeInfo_H
#define OAIZookeeperNodeInfo_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIZookeeperNodeInfo : public OAIObject {
public:
    OAIZookeeperNodeInfo();
    OAIZookeeperNodeInfo(QString json);
    ~OAIZookeeperNodeInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttachedEniid() const;
    void setAttachedEniid(const QString &attached_eniid);
    bool is_attached_eniid_Set() const;
    bool is_attached_eniid_Valid() const;

    QString getClientVpcIpAddress() const;
    void setClientVpcIpAddress(const QString &client_vpc_ip_address);
    bool is_client_vpc_ip_address_Set() const;
    bool is_client_vpc_ip_address_Valid() const;

    QList getEndpoints() const;
    void setEndpoints(const QList &endpoints);
    bool is_endpoints_Set() const;
    bool is_endpoints_Valid() const;

    double getZookeeperId() const;
    void setZookeeperId(const double &zookeeper_id);
    bool is_zookeeper_id_Set() const;
    bool is_zookeeper_id_Valid() const;

    QString getZookeeperVersion() const;
    void setZookeeperVersion(const QString &zookeeper_version);
    bool is_zookeeper_version_Set() const;
    bool is_zookeeper_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attached_eniid;
    bool m_attached_eniid_isSet;
    bool m_attached_eniid_isValid;

    QString m_client_vpc_ip_address;
    bool m_client_vpc_ip_address_isSet;
    bool m_client_vpc_ip_address_isValid;

    QList m_endpoints;
    bool m_endpoints_isSet;
    bool m_endpoints_isValid;

    double m_zookeeper_id;
    bool m_zookeeper_id_isSet;
    bool m_zookeeper_id_isValid;

    QString m_zookeeper_version;
    bool m_zookeeper_version_isSet;
    bool m_zookeeper_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIZookeeperNodeInfo)

#endif // OAIZookeeperNodeInfo_H
