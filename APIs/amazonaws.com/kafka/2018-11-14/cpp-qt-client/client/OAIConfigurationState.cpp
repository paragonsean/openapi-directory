/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigurationState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigurationState::OAIConfigurationState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigurationState::OAIConfigurationState() {
    this->initializeModel();
}

OAIConfigurationState::~OAIConfigurationState() {}

void OAIConfigurationState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIConfigurationState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIConfigurationState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConfigurationState::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConfigurationState::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETE_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConfigurationState::DELETE_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIConfigurationState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIConfigurationState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIConfigurationState::ACTIVE:
            val = "ACTIVE";
            break;
        case eOAIConfigurationState::DELETING:
            val = "DELETING";
            break;
        case eOAIConfigurationState::DELETE_FAILED:
            val = "DELETE_FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIConfigurationState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIConfigurationState::eOAIConfigurationState OAIConfigurationState::getValue() const {
    return m_value;
}

void OAIConfigurationState::setValue(const OAIConfigurationState::eOAIConfigurationState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIConfigurationState::isSet() const {
    
    return m_value_isSet;
}

bool OAIConfigurationState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
