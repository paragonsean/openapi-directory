/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateConfiguration_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateConfiguration_request::OAIUpdateConfiguration_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateConfiguration_request::OAIUpdateConfiguration_request() {
    this->initializeModel();
}

OAIUpdateConfiguration_request::~OAIUpdateConfiguration_request() {}

void OAIUpdateConfiguration_request::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_server_properties_isSet = false;
    m_server_properties_isValid = false;
}

void OAIUpdateConfiguration_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateConfiguration_request::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_server_properties_isValid = ::OpenAPI::fromJsonValue(m_server_properties, json[QString("serverProperties")]);
    m_server_properties_isSet = !json[QString("serverProperties")].isNull() && m_server_properties_isValid;
}

QString OAIUpdateConfiguration_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateConfiguration_request::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_server_properties_isSet) {
        obj.insert(QString("serverProperties"), ::OpenAPI::toJsonValue(m_server_properties));
    }
    return obj;
}

QString OAIUpdateConfiguration_request::getDescription() const {
    return m_description;
}
void OAIUpdateConfiguration_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateConfiguration_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateConfiguration_request::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIUpdateConfiguration_request::getServerProperties() const {
    return m_server_properties;
}
void OAIUpdateConfiguration_request::setServerProperties(const QString &server_properties) {
    m_server_properties = server_properties;
    m_server_properties_isSet = true;
}

bool OAIUpdateConfiguration_request::is_server_properties_Set() const{
    return m_server_properties_isSet;
}

bool OAIUpdateConfiguration_request::is_server_properties_Valid() const{
    return m_server_properties_isValid;
}

bool OAIUpdateConfiguration_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_server_properties_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateConfiguration_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_server_properties_isValid && true;
}

} // namespace OpenAPI
