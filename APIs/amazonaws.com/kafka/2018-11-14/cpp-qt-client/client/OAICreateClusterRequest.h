/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateClusterRequest.h
 *
 * 
 */

#ifndef OAICreateClusterRequest_H
#define OAICreateClusterRequest_H

#include <QJsonObject>

#include "OAIClusterInfo_LoggingInfo.h"
#include "OAICreateClusterRequest_BrokerNodeGroupInfo.h"
#include "OAICreateClusterRequest_ClientAuthentication.h"
#include "OAICreateClusterRequest_ConfigurationInfo.h"
#include "OAICreateClusterV2_request_provisioned_EncryptionInfo.h"
#include "OAICreateClusterV2_request_provisioned_OpenMonitoring.h"
#include "OAIEnhancedMonitoring.h"
#include "OAIStorageMode.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateClusterRequest_BrokerNodeGroupInfo;
class OAICreateClusterRequest_ClientAuthentication;
class OAICreateClusterRequest_ConfigurationInfo;
class OAICreateClusterV2_request_provisioned_EncryptionInfo;
class OAICreateClusterV2_request_provisioned_OpenMonitoring;
class OAIClusterInfo_LoggingInfo;

class OAICreateClusterRequest : public OAIObject {
public:
    OAICreateClusterRequest();
    OAICreateClusterRequest(QString json);
    ~OAICreateClusterRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateClusterRequest_BrokerNodeGroupInfo getBrokerNodeGroupInfo() const;
    void setBrokerNodeGroupInfo(const OAICreateClusterRequest_BrokerNodeGroupInfo &broker_node_group_info);
    bool is_broker_node_group_info_Set() const;
    bool is_broker_node_group_info_Valid() const;

    OAICreateClusterRequest_ClientAuthentication getClientAuthentication() const;
    void setClientAuthentication(const OAICreateClusterRequest_ClientAuthentication &client_authentication);
    bool is_client_authentication_Set() const;
    bool is_client_authentication_Valid() const;

    QString getClusterName() const;
    void setClusterName(const QString &cluster_name);
    bool is_cluster_name_Set() const;
    bool is_cluster_name_Valid() const;

    OAICreateClusterRequest_ConfigurationInfo getConfigurationInfo() const;
    void setConfigurationInfo(const OAICreateClusterRequest_ConfigurationInfo &configuration_info);
    bool is_configuration_info_Set() const;
    bool is_configuration_info_Valid() const;

    OAICreateClusterV2_request_provisioned_EncryptionInfo getEncryptionInfo() const;
    void setEncryptionInfo(const OAICreateClusterV2_request_provisioned_EncryptionInfo &encryption_info);
    bool is_encryption_info_Set() const;
    bool is_encryption_info_Valid() const;

    OAIEnhancedMonitoring getEnhancedMonitoring() const;
    void setEnhancedMonitoring(const OAIEnhancedMonitoring &enhanced_monitoring);
    bool is_enhanced_monitoring_Set() const;
    bool is_enhanced_monitoring_Valid() const;

    OAICreateClusterV2_request_provisioned_OpenMonitoring getOpenMonitoring() const;
    void setOpenMonitoring(const OAICreateClusterV2_request_provisioned_OpenMonitoring &open_monitoring);
    bool is_open_monitoring_Set() const;
    bool is_open_monitoring_Valid() const;

    QString getKafkaVersion() const;
    void setKafkaVersion(const QString &kafka_version);
    bool is_kafka_version_Set() const;
    bool is_kafka_version_Valid() const;

    OAIClusterInfo_LoggingInfo getLoggingInfo() const;
    void setLoggingInfo(const OAIClusterInfo_LoggingInfo &logging_info);
    bool is_logging_info_Set() const;
    bool is_logging_info_Valid() const;

    qint32 getNumberOfBrokerNodes() const;
    void setNumberOfBrokerNodes(const qint32 &number_of_broker_nodes);
    bool is_number_of_broker_nodes_Set() const;
    bool is_number_of_broker_nodes_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIStorageMode getStorageMode() const;
    void setStorageMode(const OAIStorageMode &storage_mode);
    bool is_storage_mode_Set() const;
    bool is_storage_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateClusterRequest_BrokerNodeGroupInfo m_broker_node_group_info;
    bool m_broker_node_group_info_isSet;
    bool m_broker_node_group_info_isValid;

    OAICreateClusterRequest_ClientAuthentication m_client_authentication;
    bool m_client_authentication_isSet;
    bool m_client_authentication_isValid;

    QString m_cluster_name;
    bool m_cluster_name_isSet;
    bool m_cluster_name_isValid;

    OAICreateClusterRequest_ConfigurationInfo m_configuration_info;
    bool m_configuration_info_isSet;
    bool m_configuration_info_isValid;

    OAICreateClusterV2_request_provisioned_EncryptionInfo m_encryption_info;
    bool m_encryption_info_isSet;
    bool m_encryption_info_isValid;

    OAIEnhancedMonitoring m_enhanced_monitoring;
    bool m_enhanced_monitoring_isSet;
    bool m_enhanced_monitoring_isValid;

    OAICreateClusterV2_request_provisioned_OpenMonitoring m_open_monitoring;
    bool m_open_monitoring_isSet;
    bool m_open_monitoring_isValid;

    QString m_kafka_version;
    bool m_kafka_version_isSet;
    bool m_kafka_version_isValid;

    OAIClusterInfo_LoggingInfo m_logging_info;
    bool m_logging_info_isSet;
    bool m_logging_info_isValid;

    qint32 m_number_of_broker_nodes;
    bool m_number_of_broker_nodes_isSet;
    bool m_number_of_broker_nodes_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIStorageMode m_storage_mode;
    bool m_storage_mode_isSet;
    bool m_storage_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateClusterRequest)

#endif // OAICreateClusterRequest_H
