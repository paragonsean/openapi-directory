/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVpcConnectivity_ClientAuthentication.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVpcConnectivity_ClientAuthentication::OAIVpcConnectivity_ClientAuthentication(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVpcConnectivity_ClientAuthentication::OAIVpcConnectivity_ClientAuthentication() {
    this->initializeModel();
}

OAIVpcConnectivity_ClientAuthentication::~OAIVpcConnectivity_ClientAuthentication() {}

void OAIVpcConnectivity_ClientAuthentication::initializeModel() {

    m_sasl_isSet = false;
    m_sasl_isValid = false;

    m_tls_isSet = false;
    m_tls_isValid = false;
}

void OAIVpcConnectivity_ClientAuthentication::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVpcConnectivity_ClientAuthentication::fromJsonObject(QJsonObject json) {

    m_sasl_isValid = ::OpenAPI::fromJsonValue(m_sasl, json[QString("Sasl")]);
    m_sasl_isSet = !json[QString("Sasl")].isNull() && m_sasl_isValid;

    m_tls_isValid = ::OpenAPI::fromJsonValue(m_tls, json[QString("Tls")]);
    m_tls_isSet = !json[QString("Tls")].isNull() && m_tls_isValid;
}

QString OAIVpcConnectivity_ClientAuthentication::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVpcConnectivity_ClientAuthentication::asJsonObject() const {
    QJsonObject obj;
    if (m_sasl.isSet()) {
        obj.insert(QString("Sasl"), ::OpenAPI::toJsonValue(m_sasl));
    }
    if (m_tls.isSet()) {
        obj.insert(QString("Tls"), ::OpenAPI::toJsonValue(m_tls));
    }
    return obj;
}

OAIVpcConnectivityClientAuthentication_Sasl OAIVpcConnectivity_ClientAuthentication::getSasl() const {
    return m_sasl;
}
void OAIVpcConnectivity_ClientAuthentication::setSasl(const OAIVpcConnectivityClientAuthentication_Sasl &sasl) {
    m_sasl = sasl;
    m_sasl_isSet = true;
}

bool OAIVpcConnectivity_ClientAuthentication::is_sasl_Set() const{
    return m_sasl_isSet;
}

bool OAIVpcConnectivity_ClientAuthentication::is_sasl_Valid() const{
    return m_sasl_isValid;
}

OAIVpcConnectivityClientAuthentication_Tls OAIVpcConnectivity_ClientAuthentication::getTls() const {
    return m_tls;
}
void OAIVpcConnectivity_ClientAuthentication::setTls(const OAIVpcConnectivityClientAuthentication_Tls &tls) {
    m_tls = tls;
    m_tls_isSet = true;
}

bool OAIVpcConnectivity_ClientAuthentication::is_tls_Set() const{
    return m_tls_isSet;
}

bool OAIVpcConnectivity_ClientAuthentication::is_tls_Valid() const{
    return m_tls_isValid;
}

bool OAIVpcConnectivity_ClientAuthentication::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sasl.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tls.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVpcConnectivity_ClientAuthentication::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
