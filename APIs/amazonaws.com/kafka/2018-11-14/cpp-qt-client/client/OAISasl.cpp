/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISasl.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISasl::OAISasl(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISasl::OAISasl() {
    this->initializeModel();
}

OAISasl::~OAISasl() {}

void OAISasl::initializeModel() {

    m_scram_isSet = false;
    m_scram_isValid = false;

    m_iam_isSet = false;
    m_iam_isValid = false;
}

void OAISasl::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISasl::fromJsonObject(QJsonObject json) {

    m_scram_isValid = ::OpenAPI::fromJsonValue(m_scram, json[QString("Scram")]);
    m_scram_isSet = !json[QString("Scram")].isNull() && m_scram_isValid;

    m_iam_isValid = ::OpenAPI::fromJsonValue(m_iam, json[QString("Iam")]);
    m_iam_isSet = !json[QString("Iam")].isNull() && m_iam_isValid;
}

QString OAISasl::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISasl::asJsonObject() const {
    QJsonObject obj;
    if (m_scram.isSet()) {
        obj.insert(QString("Scram"), ::OpenAPI::toJsonValue(m_scram));
    }
    if (m_iam.isSet()) {
        obj.insert(QString("Iam"), ::OpenAPI::toJsonValue(m_iam));
    }
    return obj;
}

OAISasl_Scram OAISasl::getScram() const {
    return m_scram;
}
void OAISasl::setScram(const OAISasl_Scram &scram) {
    m_scram = scram;
    m_scram_isSet = true;
}

bool OAISasl::is_scram_Set() const{
    return m_scram_isSet;
}

bool OAISasl::is_scram_Valid() const{
    return m_scram_isValid;
}

OAISasl_Iam OAISasl::getIam() const {
    return m_iam;
}
void OAISasl::setIam(const OAISasl_Iam &iam) {
    m_iam = iam;
    m_iam_isSet = true;
}

bool OAISasl::is_iam_Set() const{
    return m_iam_isSet;
}

bool OAISasl::is_iam_Valid() const{
    return m_iam_isValid;
}

bool OAISasl::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scram.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_iam.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISasl::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
