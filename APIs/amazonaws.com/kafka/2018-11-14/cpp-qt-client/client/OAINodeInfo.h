/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINodeInfo.h
 *
 *              &lt;p&gt;The node information object.&lt;/p&gt;          
 */

#ifndef OAINodeInfo_H
#define OAINodeInfo_H

#include <QJsonObject>

#include "OAINodeInfo_BrokerNodeInfo.h"
#include "OAINodeInfo_ZookeeperNodeInfo.h"
#include "OAINodeType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINodeInfo_BrokerNodeInfo;
class OAINodeInfo_ZookeeperNodeInfo;

class OAINodeInfo : public OAIObject {
public:
    OAINodeInfo();
    OAINodeInfo(QString json);
    ~OAINodeInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddedToClusterTime() const;
    void setAddedToClusterTime(const QString &added_to_cluster_time);
    bool is_added_to_cluster_time_Set() const;
    bool is_added_to_cluster_time_Valid() const;

    OAINodeInfo_BrokerNodeInfo getBrokerNodeInfo() const;
    void setBrokerNodeInfo(const OAINodeInfo_BrokerNodeInfo &broker_node_info);
    bool is_broker_node_info_Set() const;
    bool is_broker_node_info_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getNodeArn() const;
    void setNodeArn(const QString &node_arn);
    bool is_node_arn_Set() const;
    bool is_node_arn_Valid() const;

    OAINodeType getNodeType() const;
    void setNodeType(const OAINodeType &node_type);
    bool is_node_type_Set() const;
    bool is_node_type_Valid() const;

    OAINodeInfo_ZookeeperNodeInfo getZookeeperNodeInfo() const;
    void setZookeeperNodeInfo(const OAINodeInfo_ZookeeperNodeInfo &zookeeper_node_info);
    bool is_zookeeper_node_info_Set() const;
    bool is_zookeeper_node_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_added_to_cluster_time;
    bool m_added_to_cluster_time_isSet;
    bool m_added_to_cluster_time_isValid;

    OAINodeInfo_BrokerNodeInfo m_broker_node_info;
    bool m_broker_node_info_isSet;
    bool m_broker_node_info_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_node_arn;
    bool m_node_arn_isSet;
    bool m_node_arn_isValid;

    OAINodeType m_node_type;
    bool m_node_type_isSet;
    bool m_node_type_isValid;

    OAINodeInfo_ZookeeperNodeInfo m_zookeeper_node_info;
    bool m_zookeeper_node_info_isSet;
    bool m_zookeeper_node_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINodeInfo)

#endif // OAINodeInfo_H
