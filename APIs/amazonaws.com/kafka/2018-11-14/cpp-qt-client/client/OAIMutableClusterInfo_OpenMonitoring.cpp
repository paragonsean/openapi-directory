/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMutableClusterInfo_OpenMonitoring.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMutableClusterInfo_OpenMonitoring::OAIMutableClusterInfo_OpenMonitoring(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMutableClusterInfo_OpenMonitoring::OAIMutableClusterInfo_OpenMonitoring() {
    this->initializeModel();
}

OAIMutableClusterInfo_OpenMonitoring::~OAIMutableClusterInfo_OpenMonitoring() {}

void OAIMutableClusterInfo_OpenMonitoring::initializeModel() {

    m_prometheus_isSet = false;
    m_prometheus_isValid = false;
}

void OAIMutableClusterInfo_OpenMonitoring::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMutableClusterInfo_OpenMonitoring::fromJsonObject(QJsonObject json) {

    m_prometheus_isValid = ::OpenAPI::fromJsonValue(m_prometheus, json[QString("Prometheus")]);
    m_prometheus_isSet = !json[QString("Prometheus")].isNull() && m_prometheus_isValid;
}

QString OAIMutableClusterInfo_OpenMonitoring::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMutableClusterInfo_OpenMonitoring::asJsonObject() const {
    QJsonObject obj;
    if (m_prometheus.isSet()) {
        obj.insert(QString("Prometheus"), ::OpenAPI::toJsonValue(m_prometheus));
    }
    return obj;
}

OAIOpenMonitoring_Prometheus OAIMutableClusterInfo_OpenMonitoring::getPrometheus() const {
    return m_prometheus;
}
void OAIMutableClusterInfo_OpenMonitoring::setPrometheus(const OAIOpenMonitoring_Prometheus &prometheus) {
    m_prometheus = prometheus;
    m_prometheus_isSet = true;
}

bool OAIMutableClusterInfo_OpenMonitoring::is_prometheus_Set() const{
    return m_prometheus_isSet;
}

bool OAIMutableClusterInfo_OpenMonitoring::is_prometheus_Valid() const{
    return m_prometheus_isValid;
}

bool OAIMutableClusterInfo_OpenMonitoring::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_prometheus.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMutableClusterInfo_OpenMonitoring::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_prometheus_isValid && true;
}

} // namespace OpenAPI
