/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeConfigurationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeConfigurationResponse::OAIDescribeConfigurationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeConfigurationResponse::OAIDescribeConfigurationResponse() {
    this->initializeModel();
}

OAIDescribeConfigurationResponse::~OAIDescribeConfigurationResponse() {}

void OAIDescribeConfigurationResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_kafka_versions_isSet = false;
    m_kafka_versions_isValid = false;

    m_latest_revision_isSet = false;
    m_latest_revision_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIDescribeConfigurationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeConfigurationResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_kafka_versions_isValid = ::OpenAPI::fromJsonValue(m_kafka_versions, json[QString("KafkaVersions")]);
    m_kafka_versions_isSet = !json[QString("KafkaVersions")].isNull() && m_kafka_versions_isValid;

    m_latest_revision_isValid = ::OpenAPI::fromJsonValue(m_latest_revision, json[QString("LatestRevision")]);
    m_latest_revision_isSet = !json[QString("LatestRevision")].isNull() && m_latest_revision_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;
}

QString OAIDescribeConfigurationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeConfigurationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_kafka_versions.isSet()) {
        obj.insert(QString("KafkaVersions"), ::OpenAPI::toJsonValue(m_kafka_versions));
    }
    if (m_latest_revision.isSet()) {
        obj.insert(QString("LatestRevision"), ::OpenAPI::toJsonValue(m_latest_revision));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_state.isSet()) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIDescribeConfigurationResponse::getArn() const {
    return m_arn;
}
void OAIDescribeConfigurationResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIDescribeConfigurationResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIDescribeConfigurationResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QDateTime OAIDescribeConfigurationResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeConfigurationResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeConfigurationResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeConfigurationResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIDescribeConfigurationResponse::getDescription() const {
    return m_description;
}
void OAIDescribeConfigurationResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDescribeConfigurationResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDescribeConfigurationResponse::is_description_Valid() const{
    return m_description_isValid;
}

QList OAIDescribeConfigurationResponse::getKafkaVersions() const {
    return m_kafka_versions;
}
void OAIDescribeConfigurationResponse::setKafkaVersions(const QList &kafka_versions) {
    m_kafka_versions = kafka_versions;
    m_kafka_versions_isSet = true;
}

bool OAIDescribeConfigurationResponse::is_kafka_versions_Set() const{
    return m_kafka_versions_isSet;
}

bool OAIDescribeConfigurationResponse::is_kafka_versions_Valid() const{
    return m_kafka_versions_isValid;
}

OAICreateConfigurationResponse_LatestRevision OAIDescribeConfigurationResponse::getLatestRevision() const {
    return m_latest_revision;
}
void OAIDescribeConfigurationResponse::setLatestRevision(const OAICreateConfigurationResponse_LatestRevision &latest_revision) {
    m_latest_revision = latest_revision;
    m_latest_revision_isSet = true;
}

bool OAIDescribeConfigurationResponse::is_latest_revision_Set() const{
    return m_latest_revision_isSet;
}

bool OAIDescribeConfigurationResponse::is_latest_revision_Valid() const{
    return m_latest_revision_isValid;
}

QString OAIDescribeConfigurationResponse::getName() const {
    return m_name;
}
void OAIDescribeConfigurationResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDescribeConfigurationResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDescribeConfigurationResponse::is_name_Valid() const{
    return m_name_isValid;
}

OAIConfigurationState OAIDescribeConfigurationResponse::getState() const {
    return m_state;
}
void OAIDescribeConfigurationResponse::setState(const OAIConfigurationState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIDescribeConfigurationResponse::is_state_Set() const{
    return m_state_isSet;
}

bool OAIDescribeConfigurationResponse::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIDescribeConfigurationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kafka_versions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_revision.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeConfigurationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
