/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrometheusInfo_NodeExporter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrometheusInfo_NodeExporter::OAIPrometheusInfo_NodeExporter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrometheusInfo_NodeExporter::OAIPrometheusInfo_NodeExporter() {
    this->initializeModel();
}

OAIPrometheusInfo_NodeExporter::~OAIPrometheusInfo_NodeExporter() {}

void OAIPrometheusInfo_NodeExporter::initializeModel() {

    m_enabled_in_broker_isSet = false;
    m_enabled_in_broker_isValid = false;
}

void OAIPrometheusInfo_NodeExporter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrometheusInfo_NodeExporter::fromJsonObject(QJsonObject json) {

    m_enabled_in_broker_isValid = ::OpenAPI::fromJsonValue(m_enabled_in_broker, json[QString("EnabledInBroker")]);
    m_enabled_in_broker_isSet = !json[QString("EnabledInBroker")].isNull() && m_enabled_in_broker_isValid;
}

QString OAIPrometheusInfo_NodeExporter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrometheusInfo_NodeExporter::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_in_broker_isSet) {
        obj.insert(QString("EnabledInBroker"), ::OpenAPI::toJsonValue(m_enabled_in_broker));
    }
    return obj;
}

bool OAIPrometheusInfo_NodeExporter::getEnabledInBroker() const {
    return m_enabled_in_broker;
}
void OAIPrometheusInfo_NodeExporter::setEnabledInBroker(const bool &enabled_in_broker) {
    m_enabled_in_broker = enabled_in_broker;
    m_enabled_in_broker_isSet = true;
}

bool OAIPrometheusInfo_NodeExporter::is_enabled_in_broker_Set() const{
    return m_enabled_in_broker_isSet;
}

bool OAIPrometheusInfo_NodeExporter::is_enabled_in_broker_Valid() const{
    return m_enabled_in_broker_isValid;
}

bool OAIPrometheusInfo_NodeExporter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_in_broker_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrometheusInfo_NodeExporter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_in_broker_isValid && true;
}

} // namespace OpenAPI
