/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterOperationV2Provisioned.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterOperationV2Provisioned::OAIClusterOperationV2Provisioned(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterOperationV2Provisioned::OAIClusterOperationV2Provisioned() {
    this->initializeModel();
}

OAIClusterOperationV2Provisioned::~OAIClusterOperationV2Provisioned() {}

void OAIClusterOperationV2Provisioned::initializeModel() {

    m_operation_steps_isSet = false;
    m_operation_steps_isValid = false;

    m_source_cluster_info_isSet = false;
    m_source_cluster_info_isValid = false;

    m_target_cluster_info_isSet = false;
    m_target_cluster_info_isValid = false;

    m_vpc_connection_info_isSet = false;
    m_vpc_connection_info_isValid = false;
}

void OAIClusterOperationV2Provisioned::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterOperationV2Provisioned::fromJsonObject(QJsonObject json) {

    m_operation_steps_isValid = ::OpenAPI::fromJsonValue(m_operation_steps, json[QString("OperationSteps")]);
    m_operation_steps_isSet = !json[QString("OperationSteps")].isNull() && m_operation_steps_isValid;

    m_source_cluster_info_isValid = ::OpenAPI::fromJsonValue(m_source_cluster_info, json[QString("SourceClusterInfo")]);
    m_source_cluster_info_isSet = !json[QString("SourceClusterInfo")].isNull() && m_source_cluster_info_isValid;

    m_target_cluster_info_isValid = ::OpenAPI::fromJsonValue(m_target_cluster_info, json[QString("TargetClusterInfo")]);
    m_target_cluster_info_isSet = !json[QString("TargetClusterInfo")].isNull() && m_target_cluster_info_isValid;

    m_vpc_connection_info_isValid = ::OpenAPI::fromJsonValue(m_vpc_connection_info, json[QString("VpcConnectionInfo")]);
    m_vpc_connection_info_isSet = !json[QString("VpcConnectionInfo")].isNull() && m_vpc_connection_info_isValid;
}

QString OAIClusterOperationV2Provisioned::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterOperationV2Provisioned::asJsonObject() const {
    QJsonObject obj;
    if (m_operation_steps.isSet()) {
        obj.insert(QString("OperationSteps"), ::OpenAPI::toJsonValue(m_operation_steps));
    }
    if (m_source_cluster_info.isSet()) {
        obj.insert(QString("SourceClusterInfo"), ::OpenAPI::toJsonValue(m_source_cluster_info));
    }
    if (m_target_cluster_info.isSet()) {
        obj.insert(QString("TargetClusterInfo"), ::OpenAPI::toJsonValue(m_target_cluster_info));
    }
    if (m_vpc_connection_info.isSet()) {
        obj.insert(QString("VpcConnectionInfo"), ::OpenAPI::toJsonValue(m_vpc_connection_info));
    }
    return obj;
}

QList OAIClusterOperationV2Provisioned::getOperationSteps() const {
    return m_operation_steps;
}
void OAIClusterOperationV2Provisioned::setOperationSteps(const QList &operation_steps) {
    m_operation_steps = operation_steps;
    m_operation_steps_isSet = true;
}

bool OAIClusterOperationV2Provisioned::is_operation_steps_Set() const{
    return m_operation_steps_isSet;
}

bool OAIClusterOperationV2Provisioned::is_operation_steps_Valid() const{
    return m_operation_steps_isValid;
}

OAIClusterOperationV2Provisioned_SourceClusterInfo OAIClusterOperationV2Provisioned::getSourceClusterInfo() const {
    return m_source_cluster_info;
}
void OAIClusterOperationV2Provisioned::setSourceClusterInfo(const OAIClusterOperationV2Provisioned_SourceClusterInfo &source_cluster_info) {
    m_source_cluster_info = source_cluster_info;
    m_source_cluster_info_isSet = true;
}

bool OAIClusterOperationV2Provisioned::is_source_cluster_info_Set() const{
    return m_source_cluster_info_isSet;
}

bool OAIClusterOperationV2Provisioned::is_source_cluster_info_Valid() const{
    return m_source_cluster_info_isValid;
}

OAIClusterOperationV2Provisioned_TargetClusterInfo OAIClusterOperationV2Provisioned::getTargetClusterInfo() const {
    return m_target_cluster_info;
}
void OAIClusterOperationV2Provisioned::setTargetClusterInfo(const OAIClusterOperationV2Provisioned_TargetClusterInfo &target_cluster_info) {
    m_target_cluster_info = target_cluster_info;
    m_target_cluster_info_isSet = true;
}

bool OAIClusterOperationV2Provisioned::is_target_cluster_info_Set() const{
    return m_target_cluster_info_isSet;
}

bool OAIClusterOperationV2Provisioned::is_target_cluster_info_Valid() const{
    return m_target_cluster_info_isValid;
}

OAIClusterOperationV2Provisioned_VpcConnectionInfo OAIClusterOperationV2Provisioned::getVpcConnectionInfo() const {
    return m_vpc_connection_info;
}
void OAIClusterOperationV2Provisioned::setVpcConnectionInfo(const OAIClusterOperationV2Provisioned_VpcConnectionInfo &vpc_connection_info) {
    m_vpc_connection_info = vpc_connection_info;
    m_vpc_connection_info_isSet = true;
}

bool OAIClusterOperationV2Provisioned::is_vpc_connection_info_Set() const{
    return m_vpc_connection_info_isSet;
}

bool OAIClusterOperationV2Provisioned::is_vpc_connection_info_Valid() const{
    return m_vpc_connection_info_isValid;
}

bool OAIClusterOperationV2Provisioned::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operation_steps.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_cluster_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_cluster_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_connection_info.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterOperationV2Provisioned::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
