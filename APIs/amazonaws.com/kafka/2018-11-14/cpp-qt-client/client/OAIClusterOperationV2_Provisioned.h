/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterOperationV2_Provisioned.h
 *
 * 
 */

#ifndef OAIClusterOperationV2_Provisioned_H
#define OAIClusterOperationV2_Provisioned_H

#include <QJsonObject>

#include "OAIClusterOperationV2Provisioned_SourceClusterInfo.h"
#include "OAIClusterOperationV2Provisioned_TargetClusterInfo.h"
#include "OAIClusterOperationV2Provisioned_VpcConnectionInfo.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClusterOperationV2Provisioned_SourceClusterInfo;
class OAIClusterOperationV2Provisioned_TargetClusterInfo;
class OAIClusterOperationV2Provisioned_VpcConnectionInfo;

class OAIClusterOperationV2_Provisioned : public OAIObject {
public:
    OAIClusterOperationV2_Provisioned();
    OAIClusterOperationV2_Provisioned(QString json);
    ~OAIClusterOperationV2_Provisioned() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getOperationSteps() const;
    void setOperationSteps(const QList &operation_steps);
    bool is_operation_steps_Set() const;
    bool is_operation_steps_Valid() const;

    OAIClusterOperationV2Provisioned_SourceClusterInfo getSourceClusterInfo() const;
    void setSourceClusterInfo(const OAIClusterOperationV2Provisioned_SourceClusterInfo &source_cluster_info);
    bool is_source_cluster_info_Set() const;
    bool is_source_cluster_info_Valid() const;

    OAIClusterOperationV2Provisioned_TargetClusterInfo getTargetClusterInfo() const;
    void setTargetClusterInfo(const OAIClusterOperationV2Provisioned_TargetClusterInfo &target_cluster_info);
    bool is_target_cluster_info_Set() const;
    bool is_target_cluster_info_Valid() const;

    OAIClusterOperationV2Provisioned_VpcConnectionInfo getVpcConnectionInfo() const;
    void setVpcConnectionInfo(const OAIClusterOperationV2Provisioned_VpcConnectionInfo &vpc_connection_info);
    bool is_vpc_connection_info_Set() const;
    bool is_vpc_connection_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_operation_steps;
    bool m_operation_steps_isSet;
    bool m_operation_steps_isValid;

    OAIClusterOperationV2Provisioned_SourceClusterInfo m_source_cluster_info;
    bool m_source_cluster_info_isSet;
    bool m_source_cluster_info_isValid;

    OAIClusterOperationV2Provisioned_TargetClusterInfo m_target_cluster_info;
    bool m_target_cluster_info_isSet;
    bool m_target_cluster_info_isValid;

    OAIClusterOperationV2Provisioned_VpcConnectionInfo m_vpc_connection_info;
    bool m_vpc_connection_info_isSet;
    bool m_vpc_connection_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterOperationV2_Provisioned)

#endif // OAIClusterOperationV2_Provisioned_H
