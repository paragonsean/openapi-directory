/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateClusterV2_request_provisioned_BrokerNodeGroupInfo.h
 *
 * 
 */

#ifndef OAICreateClusterV2_request_provisioned_BrokerNodeGroupInfo_H
#define OAICreateClusterV2_request_provisioned_BrokerNodeGroupInfo_H

#include <QJsonObject>

#include "OAIBrokerAZDistribution.h"
#include "OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo.h"
#include "OAICreateCluster_request_brokerNodeGroupInfo_StorageInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateCluster_request_brokerNodeGroupInfo_StorageInfo;
class OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo;

class OAICreateClusterV2_request_provisioned_BrokerNodeGroupInfo : public OAIObject {
public:
    OAICreateClusterV2_request_provisioned_BrokerNodeGroupInfo();
    OAICreateClusterV2_request_provisioned_BrokerNodeGroupInfo(QString json);
    ~OAICreateClusterV2_request_provisioned_BrokerNodeGroupInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBrokerAZDistribution getBrokerAzDistribution() const;
    void setBrokerAzDistribution(const OAIBrokerAZDistribution &broker_az_distribution);
    bool is_broker_az_distribution_Set() const;
    bool is_broker_az_distribution_Valid() const;

    QList getClientSubnets() const;
    void setClientSubnets(const QList &client_subnets);
    bool is_client_subnets_Set() const;
    bool is_client_subnets_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QList getSecurityGroups() const;
    void setSecurityGroups(const QList &security_groups);
    bool is_security_groups_Set() const;
    bool is_security_groups_Valid() const;

    OAICreateCluster_request_brokerNodeGroupInfo_StorageInfo getStorageInfo() const;
    void setStorageInfo(const OAICreateCluster_request_brokerNodeGroupInfo_StorageInfo &storage_info);
    bool is_storage_info_Set() const;
    bool is_storage_info_Valid() const;

    OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo getConnectivityInfo() const;
    void setConnectivityInfo(const OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo &connectivity_info);
    bool is_connectivity_info_Set() const;
    bool is_connectivity_info_Valid() const;

    QList getZoneIds() const;
    void setZoneIds(const QList &zone_ids);
    bool is_zone_ids_Set() const;
    bool is_zone_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBrokerAZDistribution m_broker_az_distribution;
    bool m_broker_az_distribution_isSet;
    bool m_broker_az_distribution_isValid;

    QList m_client_subnets;
    bool m_client_subnets_isSet;
    bool m_client_subnets_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QList m_security_groups;
    bool m_security_groups_isSet;
    bool m_security_groups_isValid;

    OAICreateCluster_request_brokerNodeGroupInfo_StorageInfo m_storage_info;
    bool m_storage_info_isSet;
    bool m_storage_info_isValid;

    OAICreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo m_connectivity_info;
    bool m_connectivity_info_isSet;
    bool m_connectivity_info_isValid;

    QList m_zone_ids;
    bool m_zone_ids_isSet;
    bool m_zone_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateClusterV2_request_provisioned_BrokerNodeGroupInfo)

#endif // OAICreateClusterV2_request_provisioned_BrokerNodeGroupInfo_H
