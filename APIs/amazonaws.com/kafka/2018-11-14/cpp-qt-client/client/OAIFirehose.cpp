/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFirehose.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFirehose::OAIFirehose(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFirehose::OAIFirehose() {
    this->initializeModel();
}

OAIFirehose::~OAIFirehose() {}

void OAIFirehose::initializeModel() {

    m_delivery_stream_isSet = false;
    m_delivery_stream_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;
}

void OAIFirehose::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFirehose::fromJsonObject(QJsonObject json) {

    m_delivery_stream_isValid = ::OpenAPI::fromJsonValue(m_delivery_stream, json[QString("DeliveryStream")]);
    m_delivery_stream_isSet = !json[QString("DeliveryStream")].isNull() && m_delivery_stream_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;
}

QString OAIFirehose::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFirehose::asJsonObject() const {
    QJsonObject obj;
    if (m_delivery_stream_isSet) {
        obj.insert(QString("DeliveryStream"), ::OpenAPI::toJsonValue(m_delivery_stream));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    return obj;
}

QString OAIFirehose::getDeliveryStream() const {
    return m_delivery_stream;
}
void OAIFirehose::setDeliveryStream(const QString &delivery_stream) {
    m_delivery_stream = delivery_stream;
    m_delivery_stream_isSet = true;
}

bool OAIFirehose::is_delivery_stream_Set() const{
    return m_delivery_stream_isSet;
}

bool OAIFirehose::is_delivery_stream_Valid() const{
    return m_delivery_stream_isValid;
}

bool OAIFirehose::getEnabled() const {
    return m_enabled;
}
void OAIFirehose::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIFirehose::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIFirehose::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAIFirehose::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_delivery_stream_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFirehose::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_isValid && true;
}

} // namespace OpenAPI
