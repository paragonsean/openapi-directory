/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCluster_request.h
 *
 * 
 */

#ifndef OAICreateCluster_request_H
#define OAICreateCluster_request_H

#include <QJsonObject>

#include "OAICreateCluster_request_brokerNodeGroupInfo.h"
#include "OAICreateCluster_request_clientAuthentication.h"
#include "OAICreateCluster_request_configurationInfo.h"
#include "OAICreateCluster_request_encryptionInfo.h"
#include "OAICreateCluster_request_loggingInfo.h"
#include "OAICreateCluster_request_openMonitoring.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateCluster_request_brokerNodeGroupInfo;
class OAICreateCluster_request_clientAuthentication;
class OAICreateCluster_request_configurationInfo;
class OAICreateCluster_request_encryptionInfo;
class OAICreateCluster_request_openMonitoring;
class OAICreateCluster_request_loggingInfo;

class OAICreateCluster_request : public OAIObject {
public:
    OAICreateCluster_request();
    OAICreateCluster_request(QString json);
    ~OAICreateCluster_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateCluster_request_brokerNodeGroupInfo getBrokerNodeGroupInfo() const;
    void setBrokerNodeGroupInfo(const OAICreateCluster_request_brokerNodeGroupInfo &broker_node_group_info);
    bool is_broker_node_group_info_Set() const;
    bool is_broker_node_group_info_Valid() const;

    OAICreateCluster_request_clientAuthentication getClientAuthentication() const;
    void setClientAuthentication(const OAICreateCluster_request_clientAuthentication &client_authentication);
    bool is_client_authentication_Set() const;
    bool is_client_authentication_Valid() const;

    QString getClusterName() const;
    void setClusterName(const QString &cluster_name);
    bool is_cluster_name_Set() const;
    bool is_cluster_name_Valid() const;

    OAICreateCluster_request_configurationInfo getConfigurationInfo() const;
    void setConfigurationInfo(const OAICreateCluster_request_configurationInfo &configuration_info);
    bool is_configuration_info_Set() const;
    bool is_configuration_info_Valid() const;

    OAICreateCluster_request_encryptionInfo getEncryptionInfo() const;
    void setEncryptionInfo(const OAICreateCluster_request_encryptionInfo &encryption_info);
    bool is_encryption_info_Set() const;
    bool is_encryption_info_Valid() const;

    QString getEnhancedMonitoring() const;
    void setEnhancedMonitoring(const QString &enhanced_monitoring);
    bool is_enhanced_monitoring_Set() const;
    bool is_enhanced_monitoring_Valid() const;

    OAICreateCluster_request_openMonitoring getOpenMonitoring() const;
    void setOpenMonitoring(const OAICreateCluster_request_openMonitoring &open_monitoring);
    bool is_open_monitoring_Set() const;
    bool is_open_monitoring_Valid() const;

    QString getKafkaVersion() const;
    void setKafkaVersion(const QString &kafka_version);
    bool is_kafka_version_Set() const;
    bool is_kafka_version_Valid() const;

    OAICreateCluster_request_loggingInfo getLoggingInfo() const;
    void setLoggingInfo(const OAICreateCluster_request_loggingInfo &logging_info);
    bool is_logging_info_Set() const;
    bool is_logging_info_Valid() const;

    qint32 getNumberOfBrokerNodes() const;
    void setNumberOfBrokerNodes(const qint32 &number_of_broker_nodes);
    bool is_number_of_broker_nodes_Set() const;
    bool is_number_of_broker_nodes_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getStorageMode() const;
    void setStorageMode(const QString &storage_mode);
    bool is_storage_mode_Set() const;
    bool is_storage_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateCluster_request_brokerNodeGroupInfo m_broker_node_group_info;
    bool m_broker_node_group_info_isSet;
    bool m_broker_node_group_info_isValid;

    OAICreateCluster_request_clientAuthentication m_client_authentication;
    bool m_client_authentication_isSet;
    bool m_client_authentication_isValid;

    QString m_cluster_name;
    bool m_cluster_name_isSet;
    bool m_cluster_name_isValid;

    OAICreateCluster_request_configurationInfo m_configuration_info;
    bool m_configuration_info_isSet;
    bool m_configuration_info_isValid;

    OAICreateCluster_request_encryptionInfo m_encryption_info;
    bool m_encryption_info_isSet;
    bool m_encryption_info_isValid;

    QString m_enhanced_monitoring;
    bool m_enhanced_monitoring_isSet;
    bool m_enhanced_monitoring_isValid;

    OAICreateCluster_request_openMonitoring m_open_monitoring;
    bool m_open_monitoring_isSet;
    bool m_open_monitoring_isValid;

    QString m_kafka_version;
    bool m_kafka_version_isSet;
    bool m_kafka_version_isValid;

    OAICreateCluster_request_loggingInfo m_logging_info;
    bool m_logging_info_isSet;
    bool m_logging_info_isValid;

    qint32 m_number_of_broker_nodes;
    bool m_number_of_broker_nodes_isSet;
    bool m_number_of_broker_nodes_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_storage_mode;
    bool m_storage_mode_isSet;
    bool m_storage_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCluster_request)

#endif // OAICreateCluster_request_H
