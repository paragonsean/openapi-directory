/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetBootstrapBrokersResponse.h
 *
 * 
 */

#ifndef OAIGetBootstrapBrokersResponse_H
#define OAIGetBootstrapBrokersResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetBootstrapBrokersResponse : public OAIObject {
public:
    OAIGetBootstrapBrokersResponse();
    OAIGetBootstrapBrokersResponse(QString json);
    ~OAIGetBootstrapBrokersResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBootstrapBrokerString() const;
    void setBootstrapBrokerString(const QString &bootstrap_broker_string);
    bool is_bootstrap_broker_string_Set() const;
    bool is_bootstrap_broker_string_Valid() const;

    QString getBootstrapBrokerStringTls() const;
    void setBootstrapBrokerStringTls(const QString &bootstrap_broker_string_tls);
    bool is_bootstrap_broker_string_tls_Set() const;
    bool is_bootstrap_broker_string_tls_Valid() const;

    QString getBootstrapBrokerStringSaslScram() const;
    void setBootstrapBrokerStringSaslScram(const QString &bootstrap_broker_string_sasl_scram);
    bool is_bootstrap_broker_string_sasl_scram_Set() const;
    bool is_bootstrap_broker_string_sasl_scram_Valid() const;

    QString getBootstrapBrokerStringSaslIam() const;
    void setBootstrapBrokerStringSaslIam(const QString &bootstrap_broker_string_sasl_iam);
    bool is_bootstrap_broker_string_sasl_iam_Set() const;
    bool is_bootstrap_broker_string_sasl_iam_Valid() const;

    QString getBootstrapBrokerStringPublicTls() const;
    void setBootstrapBrokerStringPublicTls(const QString &bootstrap_broker_string_public_tls);
    bool is_bootstrap_broker_string_public_tls_Set() const;
    bool is_bootstrap_broker_string_public_tls_Valid() const;

    QString getBootstrapBrokerStringPublicSaslScram() const;
    void setBootstrapBrokerStringPublicSaslScram(const QString &bootstrap_broker_string_public_sasl_scram);
    bool is_bootstrap_broker_string_public_sasl_scram_Set() const;
    bool is_bootstrap_broker_string_public_sasl_scram_Valid() const;

    QString getBootstrapBrokerStringPublicSaslIam() const;
    void setBootstrapBrokerStringPublicSaslIam(const QString &bootstrap_broker_string_public_sasl_iam);
    bool is_bootstrap_broker_string_public_sasl_iam_Set() const;
    bool is_bootstrap_broker_string_public_sasl_iam_Valid() const;

    QString getBootstrapBrokerStringVpcConnectivityTls() const;
    void setBootstrapBrokerStringVpcConnectivityTls(const QString &bootstrap_broker_string_vpc_connectivity_tls);
    bool is_bootstrap_broker_string_vpc_connectivity_tls_Set() const;
    bool is_bootstrap_broker_string_vpc_connectivity_tls_Valid() const;

    QString getBootstrapBrokerStringVpcConnectivitySaslScram() const;
    void setBootstrapBrokerStringVpcConnectivitySaslScram(const QString &bootstrap_broker_string_vpc_connectivity_sasl_scram);
    bool is_bootstrap_broker_string_vpc_connectivity_sasl_scram_Set() const;
    bool is_bootstrap_broker_string_vpc_connectivity_sasl_scram_Valid() const;

    QString getBootstrapBrokerStringVpcConnectivitySaslIam() const;
    void setBootstrapBrokerStringVpcConnectivitySaslIam(const QString &bootstrap_broker_string_vpc_connectivity_sasl_iam);
    bool is_bootstrap_broker_string_vpc_connectivity_sasl_iam_Set() const;
    bool is_bootstrap_broker_string_vpc_connectivity_sasl_iam_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bootstrap_broker_string;
    bool m_bootstrap_broker_string_isSet;
    bool m_bootstrap_broker_string_isValid;

    QString m_bootstrap_broker_string_tls;
    bool m_bootstrap_broker_string_tls_isSet;
    bool m_bootstrap_broker_string_tls_isValid;

    QString m_bootstrap_broker_string_sasl_scram;
    bool m_bootstrap_broker_string_sasl_scram_isSet;
    bool m_bootstrap_broker_string_sasl_scram_isValid;

    QString m_bootstrap_broker_string_sasl_iam;
    bool m_bootstrap_broker_string_sasl_iam_isSet;
    bool m_bootstrap_broker_string_sasl_iam_isValid;

    QString m_bootstrap_broker_string_public_tls;
    bool m_bootstrap_broker_string_public_tls_isSet;
    bool m_bootstrap_broker_string_public_tls_isValid;

    QString m_bootstrap_broker_string_public_sasl_scram;
    bool m_bootstrap_broker_string_public_sasl_scram_isSet;
    bool m_bootstrap_broker_string_public_sasl_scram_isValid;

    QString m_bootstrap_broker_string_public_sasl_iam;
    bool m_bootstrap_broker_string_public_sasl_iam_isSet;
    bool m_bootstrap_broker_string_public_sasl_iam_isValid;

    QString m_bootstrap_broker_string_vpc_connectivity_tls;
    bool m_bootstrap_broker_string_vpc_connectivity_tls_isSet;
    bool m_bootstrap_broker_string_vpc_connectivity_tls_isValid;

    QString m_bootstrap_broker_string_vpc_connectivity_sasl_scram;
    bool m_bootstrap_broker_string_vpc_connectivity_sasl_scram_isSet;
    bool m_bootstrap_broker_string_vpc_connectivity_sasl_scram_isValid;

    QString m_bootstrap_broker_string_vpc_connectivity_sasl_iam;
    bool m_bootstrap_broker_string_vpc_connectivity_sasl_iam_isSet;
    bool m_bootstrap_broker_string_vpc_connectivity_sasl_iam_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetBootstrapBrokersResponse)

#endif // OAIGetBootstrapBrokersResponse_H
