/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeClusterOperationResponse_ClusterOperationInfo.h
 *
 * 
 */

#ifndef OAIDescribeClusterOperationResponse_ClusterOperationInfo_H
#define OAIDescribeClusterOperationResponse_ClusterOperationInfo_H

#include <QJsonObject>

#include "OAIClusterOperationInfo_ErrorInfo.h"
#include "OAIClusterOperationInfo_SourceClusterInfo.h"
#include "OAIClusterOperationInfo_TargetClusterInfo.h"
#include "OAIClusterOperationInfo_VpcConnectionInfo.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClusterOperationInfo_ErrorInfo;
class OAIClusterOperationInfo_SourceClusterInfo;
class OAIClusterOperationInfo_TargetClusterInfo;
class OAIClusterOperationInfo_VpcConnectionInfo;

class OAIDescribeClusterOperationResponse_ClusterOperationInfo : public OAIObject {
public:
    OAIDescribeClusterOperationResponse_ClusterOperationInfo();
    OAIDescribeClusterOperationResponse_ClusterOperationInfo(QString json);
    ~OAIDescribeClusterOperationResponse_ClusterOperationInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientRequestId() const;
    void setClientRequestId(const QString &client_request_id);
    bool is_client_request_id_Set() const;
    bool is_client_request_id_Valid() const;

    QString getClusterArn() const;
    void setClusterArn(const QString &cluster_arn);
    bool is_cluster_arn_Set() const;
    bool is_cluster_arn_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAIClusterOperationInfo_ErrorInfo getErrorInfo() const;
    void setErrorInfo(const OAIClusterOperationInfo_ErrorInfo &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    QString getOperationArn() const;
    void setOperationArn(const QString &operation_arn);
    bool is_operation_arn_Set() const;
    bool is_operation_arn_Valid() const;

    QString getOperationState() const;
    void setOperationState(const QString &operation_state);
    bool is_operation_state_Set() const;
    bool is_operation_state_Valid() const;

    QList getOperationSteps() const;
    void setOperationSteps(const QList &operation_steps);
    bool is_operation_steps_Set() const;
    bool is_operation_steps_Valid() const;

    QString getOperationType() const;
    void setOperationType(const QString &operation_type);
    bool is_operation_type_Set() const;
    bool is_operation_type_Valid() const;

    OAIClusterOperationInfo_SourceClusterInfo getSourceClusterInfo() const;
    void setSourceClusterInfo(const OAIClusterOperationInfo_SourceClusterInfo &source_cluster_info);
    bool is_source_cluster_info_Set() const;
    bool is_source_cluster_info_Valid() const;

    OAIClusterOperationInfo_TargetClusterInfo getTargetClusterInfo() const;
    void setTargetClusterInfo(const OAIClusterOperationInfo_TargetClusterInfo &target_cluster_info);
    bool is_target_cluster_info_Set() const;
    bool is_target_cluster_info_Valid() const;

    OAIClusterOperationInfo_VpcConnectionInfo getVpcConnectionInfo() const;
    void setVpcConnectionInfo(const OAIClusterOperationInfo_VpcConnectionInfo &vpc_connection_info);
    bool is_vpc_connection_info_Set() const;
    bool is_vpc_connection_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_request_id;
    bool m_client_request_id_isSet;
    bool m_client_request_id_isValid;

    QString m_cluster_arn;
    bool m_cluster_arn_isSet;
    bool m_cluster_arn_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAIClusterOperationInfo_ErrorInfo m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    QString m_operation_arn;
    bool m_operation_arn_isSet;
    bool m_operation_arn_isValid;

    QString m_operation_state;
    bool m_operation_state_isSet;
    bool m_operation_state_isValid;

    QList m_operation_steps;
    bool m_operation_steps_isSet;
    bool m_operation_steps_isValid;

    QString m_operation_type;
    bool m_operation_type_isSet;
    bool m_operation_type_isValid;

    OAIClusterOperationInfo_SourceClusterInfo m_source_cluster_info;
    bool m_source_cluster_info_isSet;
    bool m_source_cluster_info_isValid;

    OAIClusterOperationInfo_TargetClusterInfo m_target_cluster_info;
    bool m_target_cluster_info_isSet;
    bool m_target_cluster_info_isValid;

    OAIClusterOperationInfo_VpcConnectionInfo m_vpc_connection_info;
    bool m_vpc_connection_info_isSet;
    bool m_vpc_connection_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeClusterOperationResponse_ClusterOperationInfo)

#endif // OAIDescribeClusterOperationResponse_ClusterOperationInfo_H
