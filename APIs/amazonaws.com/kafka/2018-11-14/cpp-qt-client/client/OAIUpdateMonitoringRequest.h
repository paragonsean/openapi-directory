/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateMonitoringRequest.h
 *
 * Request body for UpdateMonitoring.
 */

#ifndef OAIUpdateMonitoringRequest_H
#define OAIUpdateMonitoringRequest_H

#include <QJsonObject>

#include "OAIClusterInfo_LoggingInfo.h"
#include "OAICreateClusterV2_request_provisioned_OpenMonitoring.h"
#include "OAIEnhancedMonitoring.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateClusterV2_request_provisioned_OpenMonitoring;
class OAIClusterInfo_LoggingInfo;

class OAIUpdateMonitoringRequest : public OAIObject {
public:
    OAIUpdateMonitoringRequest();
    OAIUpdateMonitoringRequest(QString json);
    ~OAIUpdateMonitoringRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrentVersion() const;
    void setCurrentVersion(const QString &current_version);
    bool is_current_version_Set() const;
    bool is_current_version_Valid() const;

    OAIEnhancedMonitoring getEnhancedMonitoring() const;
    void setEnhancedMonitoring(const OAIEnhancedMonitoring &enhanced_monitoring);
    bool is_enhanced_monitoring_Set() const;
    bool is_enhanced_monitoring_Valid() const;

    OAICreateClusterV2_request_provisioned_OpenMonitoring getOpenMonitoring() const;
    void setOpenMonitoring(const OAICreateClusterV2_request_provisioned_OpenMonitoring &open_monitoring);
    bool is_open_monitoring_Set() const;
    bool is_open_monitoring_Valid() const;

    OAIClusterInfo_LoggingInfo getLoggingInfo() const;
    void setLoggingInfo(const OAIClusterInfo_LoggingInfo &logging_info);
    bool is_logging_info_Set() const;
    bool is_logging_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_current_version;
    bool m_current_version_isSet;
    bool m_current_version_isValid;

    OAIEnhancedMonitoring m_enhanced_monitoring;
    bool m_enhanced_monitoring_isSet;
    bool m_enhanced_monitoring_isValid;

    OAICreateClusterV2_request_provisioned_OpenMonitoring m_open_monitoring;
    bool m_open_monitoring_isSet;
    bool m_open_monitoring_isValid;

    OAIClusterInfo_LoggingInfo m_logging_info;
    bool m_logging_info_isSet;
    bool m_logging_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateMonitoringRequest)

#endif // OAIUpdateMonitoringRequest_H
