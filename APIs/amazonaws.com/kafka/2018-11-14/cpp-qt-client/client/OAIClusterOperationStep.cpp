/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterOperationStep.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterOperationStep::OAIClusterOperationStep(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterOperationStep::OAIClusterOperationStep() {
    this->initializeModel();
}

OAIClusterOperationStep::~OAIClusterOperationStep() {}

void OAIClusterOperationStep::initializeModel() {

    m_step_info_isSet = false;
    m_step_info_isValid = false;

    m_step_name_isSet = false;
    m_step_name_isValid = false;
}

void OAIClusterOperationStep::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterOperationStep::fromJsonObject(QJsonObject json) {

    m_step_info_isValid = ::OpenAPI::fromJsonValue(m_step_info, json[QString("StepInfo")]);
    m_step_info_isSet = !json[QString("StepInfo")].isNull() && m_step_info_isValid;

    m_step_name_isValid = ::OpenAPI::fromJsonValue(m_step_name, json[QString("StepName")]);
    m_step_name_isSet = !json[QString("StepName")].isNull() && m_step_name_isValid;
}

QString OAIClusterOperationStep::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterOperationStep::asJsonObject() const {
    QJsonObject obj;
    if (m_step_info.isSet()) {
        obj.insert(QString("StepInfo"), ::OpenAPI::toJsonValue(m_step_info));
    }
    if (m_step_name_isSet) {
        obj.insert(QString("StepName"), ::OpenAPI::toJsonValue(m_step_name));
    }
    return obj;
}

OAIClusterOperationStep_StepInfo OAIClusterOperationStep::getStepInfo() const {
    return m_step_info;
}
void OAIClusterOperationStep::setStepInfo(const OAIClusterOperationStep_StepInfo &step_info) {
    m_step_info = step_info;
    m_step_info_isSet = true;
}

bool OAIClusterOperationStep::is_step_info_Set() const{
    return m_step_info_isSet;
}

bool OAIClusterOperationStep::is_step_info_Valid() const{
    return m_step_info_isValid;
}

QString OAIClusterOperationStep::getStepName() const {
    return m_step_name;
}
void OAIClusterOperationStep::setStepName(const QString &step_name) {
    m_step_name = step_name;
    m_step_name_isSet = true;
}

bool OAIClusterOperationStep::is_step_name_Set() const{
    return m_step_name_isSet;
}

bool OAIClusterOperationStep::is_step_name_Valid() const{
    return m_step_name_isValid;
}

bool OAIClusterOperationStep::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_step_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_step_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterOperationStep::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
