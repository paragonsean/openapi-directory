/**
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeClusterV2Response_ClusterInfo.h
 *
 * 
 */

#ifndef OAIDescribeClusterV2Response_ClusterInfo_H
#define OAIDescribeClusterV2Response_ClusterInfo_H

#include <QJsonObject>

#include "OAIClusterState.h"
#include "OAIClusterType.h"
#include "OAICluster_Provisioned.h"
#include "OAICluster_Serverless.h"
#include "OAICluster_StateInfo.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICluster_StateInfo;
class OAICluster_Provisioned;
class OAICluster_Serverless;

class OAIDescribeClusterV2Response_ClusterInfo : public OAIObject {
public:
    OAIDescribeClusterV2Response_ClusterInfo();
    OAIDescribeClusterV2Response_ClusterInfo(QString json);
    ~OAIDescribeClusterV2Response_ClusterInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveOperationArn() const;
    void setActiveOperationArn(const QString &active_operation_arn);
    bool is_active_operation_arn_Set() const;
    bool is_active_operation_arn_Valid() const;

    OAIClusterType getClusterType() const;
    void setClusterType(const OAIClusterType &cluster_type);
    bool is_cluster_type_Set() const;
    bool is_cluster_type_Valid() const;

    QString getClusterArn() const;
    void setClusterArn(const QString &cluster_arn);
    bool is_cluster_arn_Set() const;
    bool is_cluster_arn_Valid() const;

    QString getClusterName() const;
    void setClusterName(const QString &cluster_name);
    bool is_cluster_name_Set() const;
    bool is_cluster_name_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getCurrentVersion() const;
    void setCurrentVersion(const QString &current_version);
    bool is_current_version_Set() const;
    bool is_current_version_Valid() const;

    OAIClusterState getState() const;
    void setState(const OAIClusterState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAICluster_StateInfo getStateInfo() const;
    void setStateInfo(const OAICluster_StateInfo &state_info);
    bool is_state_info_Set() const;
    bool is_state_info_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAICluster_Provisioned getProvisioned() const;
    void setProvisioned(const OAICluster_Provisioned &provisioned);
    bool is_provisioned_Set() const;
    bool is_provisioned_Valid() const;

    OAICluster_Serverless getServerless() const;
    void setServerless(const OAICluster_Serverless &serverless);
    bool is_serverless_Set() const;
    bool is_serverless_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_operation_arn;
    bool m_active_operation_arn_isSet;
    bool m_active_operation_arn_isValid;

    OAIClusterType m_cluster_type;
    bool m_cluster_type_isSet;
    bool m_cluster_type_isValid;

    QString m_cluster_arn;
    bool m_cluster_arn_isSet;
    bool m_cluster_arn_isValid;

    QString m_cluster_name;
    bool m_cluster_name_isSet;
    bool m_cluster_name_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_current_version;
    bool m_current_version_isSet;
    bool m_current_version_isValid;

    OAIClusterState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAICluster_StateInfo m_state_info;
    bool m_state_info_isSet;
    bool m_state_info_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAICluster_Provisioned m_provisioned;
    bool m_provisioned_isSet;
    bool m_provisioned_isValid;

    OAICluster_Serverless m_serverless;
    bool m_serverless_isSet;
    bool m_serverless_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeClusterV2Response_ClusterInfo)

#endif // OAIDescribeClusterV2Response_ClusterInfo_H
