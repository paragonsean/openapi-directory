# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.broker_logs_cloud_watch_logs import BrokerLogsCloudWatchLogs
from openapi_server.models.broker_logs_firehose import BrokerLogsFirehose
from openapi_server.models.broker_logs_s3 import BrokerLogsS3
from openapi_server import util


class BrokerLogs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_watch_logs: BrokerLogsCloudWatchLogs=None, firehose: BrokerLogsFirehose=None, s3: BrokerLogsS3=None):
        """BrokerLogs - a model defined in OpenAPI

        :param cloud_watch_logs: The cloud_watch_logs of this BrokerLogs.
        :param firehose: The firehose of this BrokerLogs.
        :param s3: The s3 of this BrokerLogs.
        """
        self.openapi_types = {
            'cloud_watch_logs': BrokerLogsCloudWatchLogs,
            'firehose': BrokerLogsFirehose,
            's3': BrokerLogsS3
        }

        self.attribute_map = {
            'cloud_watch_logs': 'CloudWatchLogs',
            'firehose': 'Firehose',
            's3': 'S3'
        }

        self._cloud_watch_logs = cloud_watch_logs
        self._firehose = firehose
        self._s3 = s3

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BrokerLogs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BrokerLogs of this BrokerLogs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_watch_logs(self):
        """Gets the cloud_watch_logs of this BrokerLogs.


        :return: The cloud_watch_logs of this BrokerLogs.
        :rtype: BrokerLogsCloudWatchLogs
        """
        return self._cloud_watch_logs

    @cloud_watch_logs.setter
    def cloud_watch_logs(self, cloud_watch_logs):
        """Sets the cloud_watch_logs of this BrokerLogs.


        :param cloud_watch_logs: The cloud_watch_logs of this BrokerLogs.
        :type cloud_watch_logs: BrokerLogsCloudWatchLogs
        """

        self._cloud_watch_logs = cloud_watch_logs

    @property
    def firehose(self):
        """Gets the firehose of this BrokerLogs.


        :return: The firehose of this BrokerLogs.
        :rtype: BrokerLogsFirehose
        """
        return self._firehose

    @firehose.setter
    def firehose(self, firehose):
        """Sets the firehose of this BrokerLogs.


        :param firehose: The firehose of this BrokerLogs.
        :type firehose: BrokerLogsFirehose
        """

        self._firehose = firehose

    @property
    def s3(self):
        """Gets the s3 of this BrokerLogs.


        :return: The s3 of this BrokerLogs.
        :rtype: BrokerLogsS3
        """
        return self._s3

    @s3.setter
    def s3(self, s3):
        """Sets the s3 of this BrokerLogs.


        :param s3: The s3 of this BrokerLogs.
        :type s3: BrokerLogsS3
        """

        self._s3 = s3
