# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RebootBrokerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, broker_ids: List[str]=None):
        """RebootBrokerRequest - a model defined in OpenAPI

        :param broker_ids: The broker_ids of this RebootBrokerRequest.
        """
        self.openapi_types = {
            'broker_ids': List[str]
        }

        self.attribute_map = {
            'broker_ids': 'brokerIds'
        }

        self._broker_ids = broker_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RebootBrokerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RebootBroker_request of this RebootBrokerRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def broker_ids(self):
        """Gets the broker_ids of this RebootBrokerRequest.

                     <p>The list of broker IDs to be rebooted. The reboot-broker operation supports rebooting one broker at a time.</p>          

        :return: The broker_ids of this RebootBrokerRequest.
        :rtype: List[str]
        """
        return self._broker_ids

    @broker_ids.setter
    def broker_ids(self, broker_ids):
        """Sets the broker_ids of this RebootBrokerRequest.

                     <p>The list of broker IDs to be rebooted. The reboot-broker operation supports rebooting one broker at a time.</p>          

        :param broker_ids: The broker_ids of this RebootBrokerRequest.
        :type broker_ids: List[str]
        """
        if broker_ids is None:
            raise ValueError("Invalid value for `broker_ids`, must not be `None`")

        self._broker_ids = broker_ids
