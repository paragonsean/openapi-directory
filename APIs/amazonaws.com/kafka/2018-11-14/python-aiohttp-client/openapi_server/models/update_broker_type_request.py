# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateBrokerTypeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_version: str=None, target_instance_type: str=None):
        """UpdateBrokerTypeRequest - a model defined in OpenAPI

        :param current_version: The current_version of this UpdateBrokerTypeRequest.
        :param target_instance_type: The target_instance_type of this UpdateBrokerTypeRequest.
        """
        self.openapi_types = {
            'current_version': str,
            'target_instance_type': str
        }

        self.attribute_map = {
            'current_version': 'currentVersion',
            'target_instance_type': 'targetInstanceType'
        }

        self._current_version = current_version
        self._target_instance_type = target_instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBrokerTypeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateBrokerType_request of this UpdateBrokerTypeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_version(self):
        """Gets the current_version of this UpdateBrokerTypeRequest.

                     <p>The cluster version that you want to change. After this operation completes successfully, the cluster will have a new version.</p>          

        :return: The current_version of this UpdateBrokerTypeRequest.
        :rtype: str
        """
        return self._current_version

    @current_version.setter
    def current_version(self, current_version):
        """Sets the current_version of this UpdateBrokerTypeRequest.

                     <p>The cluster version that you want to change. After this operation completes successfully, the cluster will have a new version.</p>          

        :param current_version: The current_version of this UpdateBrokerTypeRequest.
        :type current_version: str
        """
        if current_version is None:
            raise ValueError("Invalid value for `current_version`, must not be `None`")

        self._current_version = current_version

    @property
    def target_instance_type(self):
        """Gets the target_instance_type of this UpdateBrokerTypeRequest.

                     <p>The Amazon MSK broker type that you want all of the brokers in this cluster to be.</p>          

        :return: The target_instance_type of this UpdateBrokerTypeRequest.
        :rtype: str
        """
        return self._target_instance_type

    @target_instance_type.setter
    def target_instance_type(self, target_instance_type):
        """Sets the target_instance_type of this UpdateBrokerTypeRequest.

                     <p>The Amazon MSK broker type that you want all of the brokers in this cluster to be.</p>          

        :param target_instance_type: The target_instance_type of this UpdateBrokerTypeRequest.
        :type target_instance_type: str
        """
        if target_instance_type is None:
            raise ValueError("Invalid value for `target_instance_type`, must not be `None`")

        self._target_instance_type = target_instance_type
