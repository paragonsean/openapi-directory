# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_state import ConfigurationState
from openapi_server.models.create_configuration_response_latest_revision import CreateConfigurationResponseLatestRevision
from openapi_server import util


class DescribeConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, creation_time: datetime=None, description: str=None, kafka_versions: List=None, latest_revision: CreateConfigurationResponseLatestRevision=None, name: str=None, state: ConfigurationState=None):
        """DescribeConfigurationResponse - a model defined in OpenAPI

        :param arn: The arn of this DescribeConfigurationResponse.
        :param creation_time: The creation_time of this DescribeConfigurationResponse.
        :param description: The description of this DescribeConfigurationResponse.
        :param kafka_versions: The kafka_versions of this DescribeConfigurationResponse.
        :param latest_revision: The latest_revision of this DescribeConfigurationResponse.
        :param name: The name of this DescribeConfigurationResponse.
        :param state: The state of this DescribeConfigurationResponse.
        """
        self.openapi_types = {
            'arn': str,
            'creation_time': datetime,
            'description': str,
            'kafka_versions': List,
            'latest_revision': CreateConfigurationResponseLatestRevision,
            'name': str,
            'state': ConfigurationState
        }

        self.attribute_map = {
            'arn': 'Arn',
            'creation_time': 'CreationTime',
            'description': 'Description',
            'kafka_versions': 'KafkaVersions',
            'latest_revision': 'LatestRevision',
            'name': 'Name',
            'state': 'State'
        }

        self._arn = arn
        self._creation_time = creation_time
        self._description = description
        self._kafka_versions = kafka_versions
        self._latest_revision = latest_revision
        self._name = name
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeConfigurationResponse of this DescribeConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this DescribeConfigurationResponse.


        :return: The arn of this DescribeConfigurationResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DescribeConfigurationResponse.


        :param arn: The arn of this DescribeConfigurationResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeConfigurationResponse.


        :return: The creation_time of this DescribeConfigurationResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeConfigurationResponse.


        :param creation_time: The creation_time of this DescribeConfigurationResponse.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def description(self):
        """Gets the description of this DescribeConfigurationResponse.


        :return: The description of this DescribeConfigurationResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeConfigurationResponse.


        :param description: The description of this DescribeConfigurationResponse.
        :type description: str
        """

        self._description = description

    @property
    def kafka_versions(self):
        """Gets the kafka_versions of this DescribeConfigurationResponse.


        :return: The kafka_versions of this DescribeConfigurationResponse.
        :rtype: List
        """
        return self._kafka_versions

    @kafka_versions.setter
    def kafka_versions(self, kafka_versions):
        """Sets the kafka_versions of this DescribeConfigurationResponse.


        :param kafka_versions: The kafka_versions of this DescribeConfigurationResponse.
        :type kafka_versions: List
        """

        self._kafka_versions = kafka_versions

    @property
    def latest_revision(self):
        """Gets the latest_revision of this DescribeConfigurationResponse.


        :return: The latest_revision of this DescribeConfigurationResponse.
        :rtype: CreateConfigurationResponseLatestRevision
        """
        return self._latest_revision

    @latest_revision.setter
    def latest_revision(self, latest_revision):
        """Sets the latest_revision of this DescribeConfigurationResponse.


        :param latest_revision: The latest_revision of this DescribeConfigurationResponse.
        :type latest_revision: CreateConfigurationResponseLatestRevision
        """

        self._latest_revision = latest_revision

    @property
    def name(self):
        """Gets the name of this DescribeConfigurationResponse.


        :return: The name of this DescribeConfigurationResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeConfigurationResponse.


        :param name: The name of this DescribeConfigurationResponse.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this DescribeConfigurationResponse.


        :return: The state of this DescribeConfigurationResponse.
        :rtype: ConfigurationState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DescribeConfigurationResponse.


        :param state: The state of this DescribeConfigurationResponse.
        :type state: ConfigurationState
        """

        self._state = state
