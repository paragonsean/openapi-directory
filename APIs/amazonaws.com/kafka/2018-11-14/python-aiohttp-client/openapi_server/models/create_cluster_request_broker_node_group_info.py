# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.broker_az_distribution import BrokerAZDistribution
from openapi_server.models.create_cluster_request_broker_node_group_info_connectivity_info import CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo
from openapi_server.models.create_cluster_request_broker_node_group_info_storage_info import CreateClusterRequestBrokerNodeGroupInfoStorageInfo
from openapi_server import util


class CreateClusterRequestBrokerNodeGroupInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, broker_az_distribution: BrokerAZDistribution=None, client_subnets: List=None, instance_type: str=None, security_groups: List=None, storage_info: CreateClusterRequestBrokerNodeGroupInfoStorageInfo=None, connectivity_info: CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo=None, zone_ids: List=None):
        """CreateClusterRequestBrokerNodeGroupInfo - a model defined in OpenAPI

        :param broker_az_distribution: The broker_az_distribution of this CreateClusterRequestBrokerNodeGroupInfo.
        :param client_subnets: The client_subnets of this CreateClusterRequestBrokerNodeGroupInfo.
        :param instance_type: The instance_type of this CreateClusterRequestBrokerNodeGroupInfo.
        :param security_groups: The security_groups of this CreateClusterRequestBrokerNodeGroupInfo.
        :param storage_info: The storage_info of this CreateClusterRequestBrokerNodeGroupInfo.
        :param connectivity_info: The connectivity_info of this CreateClusterRequestBrokerNodeGroupInfo.
        :param zone_ids: The zone_ids of this CreateClusterRequestBrokerNodeGroupInfo.
        """
        self.openapi_types = {
            'broker_az_distribution': BrokerAZDistribution,
            'client_subnets': List,
            'instance_type': str,
            'security_groups': List,
            'storage_info': CreateClusterRequestBrokerNodeGroupInfoStorageInfo,
            'connectivity_info': CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo,
            'zone_ids': List
        }

        self.attribute_map = {
            'broker_az_distribution': 'BrokerAZDistribution',
            'client_subnets': 'ClientSubnets',
            'instance_type': 'InstanceType',
            'security_groups': 'SecurityGroups',
            'storage_info': 'StorageInfo',
            'connectivity_info': 'ConnectivityInfo',
            'zone_ids': 'ZoneIds'
        }

        self._broker_az_distribution = broker_az_distribution
        self._client_subnets = client_subnets
        self._instance_type = instance_type
        self._security_groups = security_groups
        self._storage_info = storage_info
        self._connectivity_info = connectivity_info
        self._zone_ids = zone_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateClusterRequestBrokerNodeGroupInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateClusterRequest_BrokerNodeGroupInfo of this CreateClusterRequestBrokerNodeGroupInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def broker_az_distribution(self):
        """Gets the broker_az_distribution of this CreateClusterRequestBrokerNodeGroupInfo.


        :return: The broker_az_distribution of this CreateClusterRequestBrokerNodeGroupInfo.
        :rtype: BrokerAZDistribution
        """
        return self._broker_az_distribution

    @broker_az_distribution.setter
    def broker_az_distribution(self, broker_az_distribution):
        """Sets the broker_az_distribution of this CreateClusterRequestBrokerNodeGroupInfo.


        :param broker_az_distribution: The broker_az_distribution of this CreateClusterRequestBrokerNodeGroupInfo.
        :type broker_az_distribution: BrokerAZDistribution
        """

        self._broker_az_distribution = broker_az_distribution

    @property
    def client_subnets(self):
        """Gets the client_subnets of this CreateClusterRequestBrokerNodeGroupInfo.


        :return: The client_subnets of this CreateClusterRequestBrokerNodeGroupInfo.
        :rtype: List
        """
        return self._client_subnets

    @client_subnets.setter
    def client_subnets(self, client_subnets):
        """Sets the client_subnets of this CreateClusterRequestBrokerNodeGroupInfo.


        :param client_subnets: The client_subnets of this CreateClusterRequestBrokerNodeGroupInfo.
        :type client_subnets: List
        """
        if client_subnets is None:
            raise ValueError("Invalid value for `client_subnets`, must not be `None`")

        self._client_subnets = client_subnets

    @property
    def instance_type(self):
        """Gets the instance_type of this CreateClusterRequestBrokerNodeGroupInfo.


        :return: The instance_type of this CreateClusterRequestBrokerNodeGroupInfo.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this CreateClusterRequestBrokerNodeGroupInfo.


        :param instance_type: The instance_type of this CreateClusterRequestBrokerNodeGroupInfo.
        :type instance_type: str
        """
        if instance_type is None:
            raise ValueError("Invalid value for `instance_type`, must not be `None`")

        self._instance_type = instance_type

    @property
    def security_groups(self):
        """Gets the security_groups of this CreateClusterRequestBrokerNodeGroupInfo.


        :return: The security_groups of this CreateClusterRequestBrokerNodeGroupInfo.
        :rtype: List
        """
        return self._security_groups

    @security_groups.setter
    def security_groups(self, security_groups):
        """Sets the security_groups of this CreateClusterRequestBrokerNodeGroupInfo.


        :param security_groups: The security_groups of this CreateClusterRequestBrokerNodeGroupInfo.
        :type security_groups: List
        """

        self._security_groups = security_groups

    @property
    def storage_info(self):
        """Gets the storage_info of this CreateClusterRequestBrokerNodeGroupInfo.


        :return: The storage_info of this CreateClusterRequestBrokerNodeGroupInfo.
        :rtype: CreateClusterRequestBrokerNodeGroupInfoStorageInfo
        """
        return self._storage_info

    @storage_info.setter
    def storage_info(self, storage_info):
        """Sets the storage_info of this CreateClusterRequestBrokerNodeGroupInfo.


        :param storage_info: The storage_info of this CreateClusterRequestBrokerNodeGroupInfo.
        :type storage_info: CreateClusterRequestBrokerNodeGroupInfoStorageInfo
        """

        self._storage_info = storage_info

    @property
    def connectivity_info(self):
        """Gets the connectivity_info of this CreateClusterRequestBrokerNodeGroupInfo.


        :return: The connectivity_info of this CreateClusterRequestBrokerNodeGroupInfo.
        :rtype: CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo
        """
        return self._connectivity_info

    @connectivity_info.setter
    def connectivity_info(self, connectivity_info):
        """Sets the connectivity_info of this CreateClusterRequestBrokerNodeGroupInfo.


        :param connectivity_info: The connectivity_info of this CreateClusterRequestBrokerNodeGroupInfo.
        :type connectivity_info: CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo
        """

        self._connectivity_info = connectivity_info

    @property
    def zone_ids(self):
        """Gets the zone_ids of this CreateClusterRequestBrokerNodeGroupInfo.


        :return: The zone_ids of this CreateClusterRequestBrokerNodeGroupInfo.
        :rtype: List
        """
        return self._zone_ids

    @zone_ids.setter
    def zone_ids(self, zone_ids):
        """Sets the zone_ids of this CreateClusterRequestBrokerNodeGroupInfo.


        :param zone_ids: The zone_ids of this CreateClusterRequestBrokerNodeGroupInfo.
        :type zone_ids: List
        """

        self._zone_ids = zone_ids
