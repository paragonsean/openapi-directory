# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BrokerSoftwareInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_arn: str=None, configuration_revision: int=None, kafka_version: str=None):
        """BrokerSoftwareInfo - a model defined in OpenAPI

        :param configuration_arn: The configuration_arn of this BrokerSoftwareInfo.
        :param configuration_revision: The configuration_revision of this BrokerSoftwareInfo.
        :param kafka_version: The kafka_version of this BrokerSoftwareInfo.
        """
        self.openapi_types = {
            'configuration_arn': str,
            'configuration_revision': int,
            'kafka_version': str
        }

        self.attribute_map = {
            'configuration_arn': 'ConfigurationArn',
            'configuration_revision': 'ConfigurationRevision',
            'kafka_version': 'KafkaVersion'
        }

        self._configuration_arn = configuration_arn
        self._configuration_revision = configuration_revision
        self._kafka_version = kafka_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BrokerSoftwareInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BrokerSoftwareInfo of this BrokerSoftwareInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_arn(self):
        """Gets the configuration_arn of this BrokerSoftwareInfo.


        :return: The configuration_arn of this BrokerSoftwareInfo.
        :rtype: str
        """
        return self._configuration_arn

    @configuration_arn.setter
    def configuration_arn(self, configuration_arn):
        """Sets the configuration_arn of this BrokerSoftwareInfo.


        :param configuration_arn: The configuration_arn of this BrokerSoftwareInfo.
        :type configuration_arn: str
        """

        self._configuration_arn = configuration_arn

    @property
    def configuration_revision(self):
        """Gets the configuration_revision of this BrokerSoftwareInfo.


        :return: The configuration_revision of this BrokerSoftwareInfo.
        :rtype: int
        """
        return self._configuration_revision

    @configuration_revision.setter
    def configuration_revision(self, configuration_revision):
        """Sets the configuration_revision of this BrokerSoftwareInfo.


        :param configuration_revision: The configuration_revision of this BrokerSoftwareInfo.
        :type configuration_revision: int
        """

        self._configuration_revision = configuration_revision

    @property
    def kafka_version(self):
        """Gets the kafka_version of this BrokerSoftwareInfo.


        :return: The kafka_version of this BrokerSoftwareInfo.
        :rtype: str
        """
        return self._kafka_version

    @kafka_version.setter
    def kafka_version(self, kafka_version):
        """Sets the kafka_version of this BrokerSoftwareInfo.


        :param kafka_version: The kafka_version of this BrokerSoftwareInfo.
        :type kafka_version: str
        """

        self._kafka_version = kafka_version
