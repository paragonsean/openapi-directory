# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_connectivity_request_connectivity_info import UpdateConnectivityRequestConnectivityInfo
from openapi_server import util


class UpdateConnectivityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connectivity_info: UpdateConnectivityRequestConnectivityInfo=None, current_version: str=None):
        """UpdateConnectivityRequest - a model defined in OpenAPI

        :param connectivity_info: The connectivity_info of this UpdateConnectivityRequest.
        :param current_version: The current_version of this UpdateConnectivityRequest.
        """
        self.openapi_types = {
            'connectivity_info': UpdateConnectivityRequestConnectivityInfo,
            'current_version': str
        }

        self.attribute_map = {
            'connectivity_info': 'connectivityInfo',
            'current_version': 'currentVersion'
        }

        self._connectivity_info = connectivity_info
        self._current_version = current_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConnectivityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateConnectivity_request of this UpdateConnectivityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connectivity_info(self):
        """Gets the connectivity_info of this UpdateConnectivityRequest.


        :return: The connectivity_info of this UpdateConnectivityRequest.
        :rtype: UpdateConnectivityRequestConnectivityInfo
        """
        return self._connectivity_info

    @connectivity_info.setter
    def connectivity_info(self, connectivity_info):
        """Sets the connectivity_info of this UpdateConnectivityRequest.


        :param connectivity_info: The connectivity_info of this UpdateConnectivityRequest.
        :type connectivity_info: UpdateConnectivityRequestConnectivityInfo
        """
        if connectivity_info is None:
            raise ValueError("Invalid value for `connectivity_info`, must not be `None`")

        self._connectivity_info = connectivity_info

    @property
    def current_version(self):
        """Gets the current_version of this UpdateConnectivityRequest.

                     <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>          

        :return: The current_version of this UpdateConnectivityRequest.
        :rtype: str
        """
        return self._current_version

    @current_version.setter
    def current_version(self, current_version):
        """Sets the current_version of this UpdateConnectivityRequest.

                     <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>          

        :param current_version: The current_version of this UpdateConnectivityRequest.
        :type current_version: str
        """
        if current_version is None:
            raise ValueError("Invalid value for `current_version`, must not be `None`")

        self._current_version = current_version
