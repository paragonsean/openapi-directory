# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client_broker import ClientBroker
from openapi_server import util


class CreateClusterRequestEncryptionInfoEncryptionInTransit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_broker: ClientBroker=None, in_cluster: bool=None):
        """CreateClusterRequestEncryptionInfoEncryptionInTransit - a model defined in OpenAPI

        :param client_broker: The client_broker of this CreateClusterRequestEncryptionInfoEncryptionInTransit.
        :param in_cluster: The in_cluster of this CreateClusterRequestEncryptionInfoEncryptionInTransit.
        """
        self.openapi_types = {
            'client_broker': ClientBroker,
            'in_cluster': bool
        }

        self.attribute_map = {
            'client_broker': 'ClientBroker',
            'in_cluster': 'InCluster'
        }

        self._client_broker = client_broker
        self._in_cluster = in_cluster

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateClusterRequestEncryptionInfoEncryptionInTransit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCluster_request_encryptionInfo_EncryptionInTransit of this CreateClusterRequestEncryptionInfoEncryptionInTransit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_broker(self):
        """Gets the client_broker of this CreateClusterRequestEncryptionInfoEncryptionInTransit.


        :return: The client_broker of this CreateClusterRequestEncryptionInfoEncryptionInTransit.
        :rtype: ClientBroker
        """
        return self._client_broker

    @client_broker.setter
    def client_broker(self, client_broker):
        """Sets the client_broker of this CreateClusterRequestEncryptionInfoEncryptionInTransit.


        :param client_broker: The client_broker of this CreateClusterRequestEncryptionInfoEncryptionInTransit.
        :type client_broker: ClientBroker
        """

        self._client_broker = client_broker

    @property
    def in_cluster(self):
        """Gets the in_cluster of this CreateClusterRequestEncryptionInfoEncryptionInTransit.


        :return: The in_cluster of this CreateClusterRequestEncryptionInfoEncryptionInTransit.
        :rtype: bool
        """
        return self._in_cluster

    @in_cluster.setter
    def in_cluster(self, in_cluster):
        """Sets the in_cluster of this CreateClusterRequestEncryptionInfoEncryptionInTransit.


        :param in_cluster: The in_cluster of this CreateClusterRequestEncryptionInfoEncryptionInTransit.
        :type in_cluster: bool
        """

        self._in_cluster = in_cluster
