# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateConfigurationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, server_properties: str=None):
        """UpdateConfigurationRequest - a model defined in OpenAPI

        :param description: The description of this UpdateConfigurationRequest.
        :param server_properties: The server_properties of this UpdateConfigurationRequest.
        """
        self.openapi_types = {
            'description': str,
            'server_properties': str
        }

        self.attribute_map = {
            'description': 'description',
            'server_properties': 'serverProperties'
        }

        self._description = description
        self._server_properties = server_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConfigurationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateConfiguration_request of this UpdateConfigurationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this UpdateConfigurationRequest.

                     <p>The description of the configuration revision.</p>          

        :return: The description of this UpdateConfigurationRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateConfigurationRequest.

                     <p>The description of the configuration revision.</p>          

        :param description: The description of this UpdateConfigurationRequest.
        :type description: str
        """

        self._description = description

    @property
    def server_properties(self):
        """Gets the server_properties of this UpdateConfigurationRequest.

                     <p>Contents of the <filename>server.properties</filename> file. When using the API, you must ensure that the contents of the file are base64 encoded.                 When using the AWS Management Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename> can be in plaintext.</p>          

        :return: The server_properties of this UpdateConfigurationRequest.
        :rtype: str
        """
        return self._server_properties

    @server_properties.setter
    def server_properties(self, server_properties):
        """Sets the server_properties of this UpdateConfigurationRequest.

                     <p>Contents of the <filename>server.properties</filename> file. When using the API, you must ensure that the contents of the file are base64 encoded.                 When using the AWS Management Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename> can be in plaintext.</p>          

        :param server_properties: The server_properties of this UpdateConfigurationRequest.
        :type server_properties: str
        """
        if server_properties is None:
            raise ValueError("Invalid value for `server_properties`, must not be `None`")

        self._server_properties = server_properties
