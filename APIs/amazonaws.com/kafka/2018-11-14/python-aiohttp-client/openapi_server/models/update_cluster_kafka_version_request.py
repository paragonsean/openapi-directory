# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_cluster_request_configuration_info import CreateClusterRequestConfigurationInfo
from openapi_server import util


class UpdateClusterKafkaVersionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_info: CreateClusterRequestConfigurationInfo=None, current_version: str=None, target_kafka_version: str=None):
        """UpdateClusterKafkaVersionRequest - a model defined in OpenAPI

        :param configuration_info: The configuration_info of this UpdateClusterKafkaVersionRequest.
        :param current_version: The current_version of this UpdateClusterKafkaVersionRequest.
        :param target_kafka_version: The target_kafka_version of this UpdateClusterKafkaVersionRequest.
        """
        self.openapi_types = {
            'configuration_info': CreateClusterRequestConfigurationInfo,
            'current_version': str,
            'target_kafka_version': str
        }

        self.attribute_map = {
            'configuration_info': 'configurationInfo',
            'current_version': 'currentVersion',
            'target_kafka_version': 'targetKafkaVersion'
        }

        self._configuration_info = configuration_info
        self._current_version = current_version
        self._target_kafka_version = target_kafka_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateClusterKafkaVersionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateClusterKafkaVersion_request of this UpdateClusterKafkaVersionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_info(self):
        """Gets the configuration_info of this UpdateClusterKafkaVersionRequest.


        :return: The configuration_info of this UpdateClusterKafkaVersionRequest.
        :rtype: CreateClusterRequestConfigurationInfo
        """
        return self._configuration_info

    @configuration_info.setter
    def configuration_info(self, configuration_info):
        """Sets the configuration_info of this UpdateClusterKafkaVersionRequest.


        :param configuration_info: The configuration_info of this UpdateClusterKafkaVersionRequest.
        :type configuration_info: CreateClusterRequestConfigurationInfo
        """

        self._configuration_info = configuration_info

    @property
    def current_version(self):
        """Gets the current_version of this UpdateClusterKafkaVersionRequest.

                     <p>Current cluster version.</p>             

        :return: The current_version of this UpdateClusterKafkaVersionRequest.
        :rtype: str
        """
        return self._current_version

    @current_version.setter
    def current_version(self, current_version):
        """Sets the current_version of this UpdateClusterKafkaVersionRequest.

                     <p>Current cluster version.</p>             

        :param current_version: The current_version of this UpdateClusterKafkaVersionRequest.
        :type current_version: str
        """
        if current_version is None:
            raise ValueError("Invalid value for `current_version`, must not be `None`")

        self._current_version = current_version

    @property
    def target_kafka_version(self):
        """Gets the target_kafka_version of this UpdateClusterKafkaVersionRequest.

                     <p>Target Kafka version.</p>             

        :return: The target_kafka_version of this UpdateClusterKafkaVersionRequest.
        :rtype: str
        """
        return self._target_kafka_version

    @target_kafka_version.setter
    def target_kafka_version(self, target_kafka_version):
        """Sets the target_kafka_version of this UpdateClusterKafkaVersionRequest.

                     <p>Target Kafka version.</p>             

        :param target_kafka_version: The target_kafka_version of this UpdateClusterKafkaVersionRequest.
        :type target_kafka_version: str
        """
        if target_kafka_version is None:
            raise ValueError("Invalid value for `target_kafka_version`, must not be `None`")

        self._target_kafka_version = target_kafka_version
