# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_identity_type import UserIdentityType
from openapi_server import util


class VpcConnectionInfoUserIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: UserIdentityType=None, principal_id: str=None):
        """VpcConnectionInfoUserIdentity - a model defined in OpenAPI

        :param type: The type of this VpcConnectionInfoUserIdentity.
        :param principal_id: The principal_id of this VpcConnectionInfoUserIdentity.
        """
        self.openapi_types = {
            'type': UserIdentityType,
            'principal_id': str
        }

        self.attribute_map = {
            'type': 'Type',
            'principal_id': 'PrincipalId'
        }

        self._type = type
        self._principal_id = principal_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VpcConnectionInfoUserIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VpcConnectionInfo_UserIdentity of this VpcConnectionInfoUserIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this VpcConnectionInfoUserIdentity.


        :return: The type of this VpcConnectionInfoUserIdentity.
        :rtype: UserIdentityType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VpcConnectionInfoUserIdentity.


        :param type: The type of this VpcConnectionInfoUserIdentity.
        :type type: UserIdentityType
        """

        self._type = type

    @property
    def principal_id(self):
        """Gets the principal_id of this VpcConnectionInfoUserIdentity.


        :return: The principal_id of this VpcConnectionInfoUserIdentity.
        :rtype: str
        """
        return self._principal_id

    @principal_id.setter
    def principal_id(self, principal_id):
        """Sets the principal_id of this VpcConnectionInfoUserIdentity.


        :param principal_id: The principal_id of this VpcConnectionInfoUserIdentity.
        :type principal_id: str
        """

        self._principal_id = principal_id
