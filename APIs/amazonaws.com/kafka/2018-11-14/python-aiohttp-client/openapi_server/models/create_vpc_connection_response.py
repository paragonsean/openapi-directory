# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vpc_connection_state import VpcConnectionState
from openapi_server import util


class CreateVpcConnectionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc_connection_arn: str=None, state: VpcConnectionState=None, authentication: str=None, vpc_id: str=None, client_subnets: List=None, security_groups: List=None, creation_time: datetime=None, tags: Dict=None):
        """CreateVpcConnectionResponse - a model defined in OpenAPI

        :param vpc_connection_arn: The vpc_connection_arn of this CreateVpcConnectionResponse.
        :param state: The state of this CreateVpcConnectionResponse.
        :param authentication: The authentication of this CreateVpcConnectionResponse.
        :param vpc_id: The vpc_id of this CreateVpcConnectionResponse.
        :param client_subnets: The client_subnets of this CreateVpcConnectionResponse.
        :param security_groups: The security_groups of this CreateVpcConnectionResponse.
        :param creation_time: The creation_time of this CreateVpcConnectionResponse.
        :param tags: The tags of this CreateVpcConnectionResponse.
        """
        self.openapi_types = {
            'vpc_connection_arn': str,
            'state': VpcConnectionState,
            'authentication': str,
            'vpc_id': str,
            'client_subnets': List,
            'security_groups': List,
            'creation_time': datetime,
            'tags': Dict
        }

        self.attribute_map = {
            'vpc_connection_arn': 'VpcConnectionArn',
            'state': 'State',
            'authentication': 'Authentication',
            'vpc_id': 'VpcId',
            'client_subnets': 'ClientSubnets',
            'security_groups': 'SecurityGroups',
            'creation_time': 'CreationTime',
            'tags': 'Tags'
        }

        self._vpc_connection_arn = vpc_connection_arn
        self._state = state
        self._authentication = authentication
        self._vpc_id = vpc_id
        self._client_subnets = client_subnets
        self._security_groups = security_groups
        self._creation_time = creation_time
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVpcConnectionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateVpcConnectionResponse of this CreateVpcConnectionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc_connection_arn(self):
        """Gets the vpc_connection_arn of this CreateVpcConnectionResponse.


        :return: The vpc_connection_arn of this CreateVpcConnectionResponse.
        :rtype: str
        """
        return self._vpc_connection_arn

    @vpc_connection_arn.setter
    def vpc_connection_arn(self, vpc_connection_arn):
        """Sets the vpc_connection_arn of this CreateVpcConnectionResponse.


        :param vpc_connection_arn: The vpc_connection_arn of this CreateVpcConnectionResponse.
        :type vpc_connection_arn: str
        """

        self._vpc_connection_arn = vpc_connection_arn

    @property
    def state(self):
        """Gets the state of this CreateVpcConnectionResponse.


        :return: The state of this CreateVpcConnectionResponse.
        :rtype: VpcConnectionState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CreateVpcConnectionResponse.


        :param state: The state of this CreateVpcConnectionResponse.
        :type state: VpcConnectionState
        """

        self._state = state

    @property
    def authentication(self):
        """Gets the authentication of this CreateVpcConnectionResponse.


        :return: The authentication of this CreateVpcConnectionResponse.
        :rtype: str
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """Sets the authentication of this CreateVpcConnectionResponse.


        :param authentication: The authentication of this CreateVpcConnectionResponse.
        :type authentication: str
        """

        self._authentication = authentication

    @property
    def vpc_id(self):
        """Gets the vpc_id of this CreateVpcConnectionResponse.


        :return: The vpc_id of this CreateVpcConnectionResponse.
        :rtype: str
        """
        return self._vpc_id

    @vpc_id.setter
    def vpc_id(self, vpc_id):
        """Sets the vpc_id of this CreateVpcConnectionResponse.


        :param vpc_id: The vpc_id of this CreateVpcConnectionResponse.
        :type vpc_id: str
        """

        self._vpc_id = vpc_id

    @property
    def client_subnets(self):
        """Gets the client_subnets of this CreateVpcConnectionResponse.


        :return: The client_subnets of this CreateVpcConnectionResponse.
        :rtype: List
        """
        return self._client_subnets

    @client_subnets.setter
    def client_subnets(self, client_subnets):
        """Sets the client_subnets of this CreateVpcConnectionResponse.


        :param client_subnets: The client_subnets of this CreateVpcConnectionResponse.
        :type client_subnets: List
        """

        self._client_subnets = client_subnets

    @property
    def security_groups(self):
        """Gets the security_groups of this CreateVpcConnectionResponse.


        :return: The security_groups of this CreateVpcConnectionResponse.
        :rtype: List
        """
        return self._security_groups

    @security_groups.setter
    def security_groups(self, security_groups):
        """Sets the security_groups of this CreateVpcConnectionResponse.


        :param security_groups: The security_groups of this CreateVpcConnectionResponse.
        :type security_groups: List
        """

        self._security_groups = security_groups

    @property
    def creation_time(self):
        """Gets the creation_time of this CreateVpcConnectionResponse.


        :return: The creation_time of this CreateVpcConnectionResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this CreateVpcConnectionResponse.


        :param creation_time: The creation_time of this CreateVpcConnectionResponse.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def tags(self):
        """Gets the tags of this CreateVpcConnectionResponse.


        :return: The tags of this CreateVpcConnectionResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateVpcConnectionResponse.


        :param tags: The tags of this CreateVpcConnectionResponse.
        :type tags: Dict
        """

        self._tags = tags
