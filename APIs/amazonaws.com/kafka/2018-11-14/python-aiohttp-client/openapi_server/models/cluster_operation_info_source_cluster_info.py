# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_cluster_request_broker_node_group_info_connectivity_info import CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo
from openapi_server.models.create_cluster_v2_request_provisioned_client_authentication import CreateClusterV2RequestProvisionedClientAuthentication
from openapi_server.models.create_cluster_v2_request_provisioned_encryption_info import CreateClusterV2RequestProvisionedEncryptionInfo
from openapi_server.models.enhanced_monitoring import EnhancedMonitoring
from openapi_server.models.mutable_cluster_info_configuration_info import MutableClusterInfoConfigurationInfo
from openapi_server.models.mutable_cluster_info_logging_info import MutableClusterInfoLoggingInfo
from openapi_server.models.mutable_cluster_info_open_monitoring import MutableClusterInfoOpenMonitoring
from openapi_server.models.storage_mode import StorageMode
from openapi_server import util


class ClusterOperationInfoSourceClusterInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, broker_ebs_volume_info: List=None, configuration_info: MutableClusterInfoConfigurationInfo=None, number_of_broker_nodes: int=None, enhanced_monitoring: EnhancedMonitoring=None, open_monitoring: MutableClusterInfoOpenMonitoring=None, kafka_version: str=None, logging_info: MutableClusterInfoLoggingInfo=None, instance_type: str=None, client_authentication: CreateClusterV2RequestProvisionedClientAuthentication=None, encryption_info: CreateClusterV2RequestProvisionedEncryptionInfo=None, connectivity_info: CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo=None, storage_mode: StorageMode=None):
        """ClusterOperationInfoSourceClusterInfo - a model defined in OpenAPI

        :param broker_ebs_volume_info: The broker_ebs_volume_info of this ClusterOperationInfoSourceClusterInfo.
        :param configuration_info: The configuration_info of this ClusterOperationInfoSourceClusterInfo.
        :param number_of_broker_nodes: The number_of_broker_nodes of this ClusterOperationInfoSourceClusterInfo.
        :param enhanced_monitoring: The enhanced_monitoring of this ClusterOperationInfoSourceClusterInfo.
        :param open_monitoring: The open_monitoring of this ClusterOperationInfoSourceClusterInfo.
        :param kafka_version: The kafka_version of this ClusterOperationInfoSourceClusterInfo.
        :param logging_info: The logging_info of this ClusterOperationInfoSourceClusterInfo.
        :param instance_type: The instance_type of this ClusterOperationInfoSourceClusterInfo.
        :param client_authentication: The client_authentication of this ClusterOperationInfoSourceClusterInfo.
        :param encryption_info: The encryption_info of this ClusterOperationInfoSourceClusterInfo.
        :param connectivity_info: The connectivity_info of this ClusterOperationInfoSourceClusterInfo.
        :param storage_mode: The storage_mode of this ClusterOperationInfoSourceClusterInfo.
        """
        self.openapi_types = {
            'broker_ebs_volume_info': List,
            'configuration_info': MutableClusterInfoConfigurationInfo,
            'number_of_broker_nodes': int,
            'enhanced_monitoring': EnhancedMonitoring,
            'open_monitoring': MutableClusterInfoOpenMonitoring,
            'kafka_version': str,
            'logging_info': MutableClusterInfoLoggingInfo,
            'instance_type': str,
            'client_authentication': CreateClusterV2RequestProvisionedClientAuthentication,
            'encryption_info': CreateClusterV2RequestProvisionedEncryptionInfo,
            'connectivity_info': CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo,
            'storage_mode': StorageMode
        }

        self.attribute_map = {
            'broker_ebs_volume_info': 'BrokerEBSVolumeInfo',
            'configuration_info': 'ConfigurationInfo',
            'number_of_broker_nodes': 'NumberOfBrokerNodes',
            'enhanced_monitoring': 'EnhancedMonitoring',
            'open_monitoring': 'OpenMonitoring',
            'kafka_version': 'KafkaVersion',
            'logging_info': 'LoggingInfo',
            'instance_type': 'InstanceType',
            'client_authentication': 'ClientAuthentication',
            'encryption_info': 'EncryptionInfo',
            'connectivity_info': 'ConnectivityInfo',
            'storage_mode': 'StorageMode'
        }

        self._broker_ebs_volume_info = broker_ebs_volume_info
        self._configuration_info = configuration_info
        self._number_of_broker_nodes = number_of_broker_nodes
        self._enhanced_monitoring = enhanced_monitoring
        self._open_monitoring = open_monitoring
        self._kafka_version = kafka_version
        self._logging_info = logging_info
        self._instance_type = instance_type
        self._client_authentication = client_authentication
        self._encryption_info = encryption_info
        self._connectivity_info = connectivity_info
        self._storage_mode = storage_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterOperationInfoSourceClusterInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterOperationInfo_SourceClusterInfo of this ClusterOperationInfoSourceClusterInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def broker_ebs_volume_info(self):
        """Gets the broker_ebs_volume_info of this ClusterOperationInfoSourceClusterInfo.


        :return: The broker_ebs_volume_info of this ClusterOperationInfoSourceClusterInfo.
        :rtype: List
        """
        return self._broker_ebs_volume_info

    @broker_ebs_volume_info.setter
    def broker_ebs_volume_info(self, broker_ebs_volume_info):
        """Sets the broker_ebs_volume_info of this ClusterOperationInfoSourceClusterInfo.


        :param broker_ebs_volume_info: The broker_ebs_volume_info of this ClusterOperationInfoSourceClusterInfo.
        :type broker_ebs_volume_info: List
        """

        self._broker_ebs_volume_info = broker_ebs_volume_info

    @property
    def configuration_info(self):
        """Gets the configuration_info of this ClusterOperationInfoSourceClusterInfo.


        :return: The configuration_info of this ClusterOperationInfoSourceClusterInfo.
        :rtype: MutableClusterInfoConfigurationInfo
        """
        return self._configuration_info

    @configuration_info.setter
    def configuration_info(self, configuration_info):
        """Sets the configuration_info of this ClusterOperationInfoSourceClusterInfo.


        :param configuration_info: The configuration_info of this ClusterOperationInfoSourceClusterInfo.
        :type configuration_info: MutableClusterInfoConfigurationInfo
        """

        self._configuration_info = configuration_info

    @property
    def number_of_broker_nodes(self):
        """Gets the number_of_broker_nodes of this ClusterOperationInfoSourceClusterInfo.


        :return: The number_of_broker_nodes of this ClusterOperationInfoSourceClusterInfo.
        :rtype: int
        """
        return self._number_of_broker_nodes

    @number_of_broker_nodes.setter
    def number_of_broker_nodes(self, number_of_broker_nodes):
        """Sets the number_of_broker_nodes of this ClusterOperationInfoSourceClusterInfo.


        :param number_of_broker_nodes: The number_of_broker_nodes of this ClusterOperationInfoSourceClusterInfo.
        :type number_of_broker_nodes: int
        """

        self._number_of_broker_nodes = number_of_broker_nodes

    @property
    def enhanced_monitoring(self):
        """Gets the enhanced_monitoring of this ClusterOperationInfoSourceClusterInfo.


        :return: The enhanced_monitoring of this ClusterOperationInfoSourceClusterInfo.
        :rtype: EnhancedMonitoring
        """
        return self._enhanced_monitoring

    @enhanced_monitoring.setter
    def enhanced_monitoring(self, enhanced_monitoring):
        """Sets the enhanced_monitoring of this ClusterOperationInfoSourceClusterInfo.


        :param enhanced_monitoring: The enhanced_monitoring of this ClusterOperationInfoSourceClusterInfo.
        :type enhanced_monitoring: EnhancedMonitoring
        """

        self._enhanced_monitoring = enhanced_monitoring

    @property
    def open_monitoring(self):
        """Gets the open_monitoring of this ClusterOperationInfoSourceClusterInfo.


        :return: The open_monitoring of this ClusterOperationInfoSourceClusterInfo.
        :rtype: MutableClusterInfoOpenMonitoring
        """
        return self._open_monitoring

    @open_monitoring.setter
    def open_monitoring(self, open_monitoring):
        """Sets the open_monitoring of this ClusterOperationInfoSourceClusterInfo.


        :param open_monitoring: The open_monitoring of this ClusterOperationInfoSourceClusterInfo.
        :type open_monitoring: MutableClusterInfoOpenMonitoring
        """

        self._open_monitoring = open_monitoring

    @property
    def kafka_version(self):
        """Gets the kafka_version of this ClusterOperationInfoSourceClusterInfo.


        :return: The kafka_version of this ClusterOperationInfoSourceClusterInfo.
        :rtype: str
        """
        return self._kafka_version

    @kafka_version.setter
    def kafka_version(self, kafka_version):
        """Sets the kafka_version of this ClusterOperationInfoSourceClusterInfo.


        :param kafka_version: The kafka_version of this ClusterOperationInfoSourceClusterInfo.
        :type kafka_version: str
        """

        self._kafka_version = kafka_version

    @property
    def logging_info(self):
        """Gets the logging_info of this ClusterOperationInfoSourceClusterInfo.


        :return: The logging_info of this ClusterOperationInfoSourceClusterInfo.
        :rtype: MutableClusterInfoLoggingInfo
        """
        return self._logging_info

    @logging_info.setter
    def logging_info(self, logging_info):
        """Sets the logging_info of this ClusterOperationInfoSourceClusterInfo.


        :param logging_info: The logging_info of this ClusterOperationInfoSourceClusterInfo.
        :type logging_info: MutableClusterInfoLoggingInfo
        """

        self._logging_info = logging_info

    @property
    def instance_type(self):
        """Gets the instance_type of this ClusterOperationInfoSourceClusterInfo.


        :return: The instance_type of this ClusterOperationInfoSourceClusterInfo.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this ClusterOperationInfoSourceClusterInfo.


        :param instance_type: The instance_type of this ClusterOperationInfoSourceClusterInfo.
        :type instance_type: str
        """

        self._instance_type = instance_type

    @property
    def client_authentication(self):
        """Gets the client_authentication of this ClusterOperationInfoSourceClusterInfo.


        :return: The client_authentication of this ClusterOperationInfoSourceClusterInfo.
        :rtype: CreateClusterV2RequestProvisionedClientAuthentication
        """
        return self._client_authentication

    @client_authentication.setter
    def client_authentication(self, client_authentication):
        """Sets the client_authentication of this ClusterOperationInfoSourceClusterInfo.


        :param client_authentication: The client_authentication of this ClusterOperationInfoSourceClusterInfo.
        :type client_authentication: CreateClusterV2RequestProvisionedClientAuthentication
        """

        self._client_authentication = client_authentication

    @property
    def encryption_info(self):
        """Gets the encryption_info of this ClusterOperationInfoSourceClusterInfo.


        :return: The encryption_info of this ClusterOperationInfoSourceClusterInfo.
        :rtype: CreateClusterV2RequestProvisionedEncryptionInfo
        """
        return self._encryption_info

    @encryption_info.setter
    def encryption_info(self, encryption_info):
        """Sets the encryption_info of this ClusterOperationInfoSourceClusterInfo.


        :param encryption_info: The encryption_info of this ClusterOperationInfoSourceClusterInfo.
        :type encryption_info: CreateClusterV2RequestProvisionedEncryptionInfo
        """

        self._encryption_info = encryption_info

    @property
    def connectivity_info(self):
        """Gets the connectivity_info of this ClusterOperationInfoSourceClusterInfo.


        :return: The connectivity_info of this ClusterOperationInfoSourceClusterInfo.
        :rtype: CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo
        """
        return self._connectivity_info

    @connectivity_info.setter
    def connectivity_info(self, connectivity_info):
        """Sets the connectivity_info of this ClusterOperationInfoSourceClusterInfo.


        :param connectivity_info: The connectivity_info of this ClusterOperationInfoSourceClusterInfo.
        :type connectivity_info: CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo
        """

        self._connectivity_info = connectivity_info

    @property
    def storage_mode(self):
        """Gets the storage_mode of this ClusterOperationInfoSourceClusterInfo.


        :return: The storage_mode of this ClusterOperationInfoSourceClusterInfo.
        :rtype: StorageMode
        """
        return self._storage_mode

    @storage_mode.setter
    def storage_mode(self, storage_mode):
        """Sets the storage_mode of this ClusterOperationInfoSourceClusterInfo.


        :param storage_mode: The storage_mode of this ClusterOperationInfoSourceClusterInfo.
        :type storage_mode: StorageMode
        """

        self._storage_mode = storage_mode
