# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EncryptionAtRest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_volume_kms_key_id: str=None):
        """EncryptionAtRest - a model defined in OpenAPI

        :param data_volume_kms_key_id: The data_volume_kms_key_id of this EncryptionAtRest.
        """
        self.openapi_types = {
            'data_volume_kms_key_id': str
        }

        self.attribute_map = {
            'data_volume_kms_key_id': 'DataVolumeKMSKeyId'
        }

        self._data_volume_kms_key_id = data_volume_kms_key_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EncryptionAtRest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EncryptionAtRest of this EncryptionAtRest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_volume_kms_key_id(self):
        """Gets the data_volume_kms_key_id of this EncryptionAtRest.


        :return: The data_volume_kms_key_id of this EncryptionAtRest.
        :rtype: str
        """
        return self._data_volume_kms_key_id

    @data_volume_kms_key_id.setter
    def data_volume_kms_key_id(self, data_volume_kms_key_id):
        """Sets the data_volume_kms_key_id of this EncryptionAtRest.


        :param data_volume_kms_key_id: The data_volume_kms_key_id of this EncryptionAtRest.
        :type data_volume_kms_key_id: str
        """
        if data_volume_kms_key_id is None:
            raise ValueError("Invalid value for `data_volume_kms_key_id`, must not be `None`")

        self._data_volume_kms_key_id = data_volume_kms_key_id
