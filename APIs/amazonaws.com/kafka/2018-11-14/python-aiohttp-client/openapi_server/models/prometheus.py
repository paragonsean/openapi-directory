# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.prometheus_jmx_exporter import PrometheusJmxExporter
from openapi_server.models.prometheus_node_exporter import PrometheusNodeExporter
from openapi_server import util


class Prometheus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jmx_exporter: PrometheusJmxExporter=None, node_exporter: PrometheusNodeExporter=None):
        """Prometheus - a model defined in OpenAPI

        :param jmx_exporter: The jmx_exporter of this Prometheus.
        :param node_exporter: The node_exporter of this Prometheus.
        """
        self.openapi_types = {
            'jmx_exporter': PrometheusJmxExporter,
            'node_exporter': PrometheusNodeExporter
        }

        self.attribute_map = {
            'jmx_exporter': 'JmxExporter',
            'node_exporter': 'NodeExporter'
        }

        self._jmx_exporter = jmx_exporter
        self._node_exporter = node_exporter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Prometheus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Prometheus of this Prometheus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jmx_exporter(self):
        """Gets the jmx_exporter of this Prometheus.


        :return: The jmx_exporter of this Prometheus.
        :rtype: PrometheusJmxExporter
        """
        return self._jmx_exporter

    @jmx_exporter.setter
    def jmx_exporter(self, jmx_exporter):
        """Sets the jmx_exporter of this Prometheus.


        :param jmx_exporter: The jmx_exporter of this Prometheus.
        :type jmx_exporter: PrometheusJmxExporter
        """

        self._jmx_exporter = jmx_exporter

    @property
    def node_exporter(self):
        """Gets the node_exporter of this Prometheus.


        :return: The node_exporter of this Prometheus.
        :rtype: PrometheusNodeExporter
        """
        return self._node_exporter

    @node_exporter.setter
    def node_exporter(self, node_exporter):
        """Sets the node_exporter of this Prometheus.


        :param node_exporter: The node_exporter of this Prometheus.
        :type node_exporter: PrometheusNodeExporter
        """

        self._node_exporter = node_exporter
