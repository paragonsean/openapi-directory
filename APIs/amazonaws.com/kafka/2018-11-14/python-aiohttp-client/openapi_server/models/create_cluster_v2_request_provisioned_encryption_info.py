# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_cluster_request_encryption_info_encryption_at_rest import CreateClusterRequestEncryptionInfoEncryptionAtRest
from openapi_server.models.create_cluster_request_encryption_info_encryption_in_transit import CreateClusterRequestEncryptionInfoEncryptionInTransit
from openapi_server import util


class CreateClusterV2RequestProvisionedEncryptionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encryption_at_rest: CreateClusterRequestEncryptionInfoEncryptionAtRest=None, encryption_in_transit: CreateClusterRequestEncryptionInfoEncryptionInTransit=None):
        """CreateClusterV2RequestProvisionedEncryptionInfo - a model defined in OpenAPI

        :param encryption_at_rest: The encryption_at_rest of this CreateClusterV2RequestProvisionedEncryptionInfo.
        :param encryption_in_transit: The encryption_in_transit of this CreateClusterV2RequestProvisionedEncryptionInfo.
        """
        self.openapi_types = {
            'encryption_at_rest': CreateClusterRequestEncryptionInfoEncryptionAtRest,
            'encryption_in_transit': CreateClusterRequestEncryptionInfoEncryptionInTransit
        }

        self.attribute_map = {
            'encryption_at_rest': 'EncryptionAtRest',
            'encryption_in_transit': 'EncryptionInTransit'
        }

        self._encryption_at_rest = encryption_at_rest
        self._encryption_in_transit = encryption_in_transit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateClusterV2RequestProvisionedEncryptionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateClusterV2_request_provisioned_EncryptionInfo of this CreateClusterV2RequestProvisionedEncryptionInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encryption_at_rest(self):
        """Gets the encryption_at_rest of this CreateClusterV2RequestProvisionedEncryptionInfo.


        :return: The encryption_at_rest of this CreateClusterV2RequestProvisionedEncryptionInfo.
        :rtype: CreateClusterRequestEncryptionInfoEncryptionAtRest
        """
        return self._encryption_at_rest

    @encryption_at_rest.setter
    def encryption_at_rest(self, encryption_at_rest):
        """Sets the encryption_at_rest of this CreateClusterV2RequestProvisionedEncryptionInfo.


        :param encryption_at_rest: The encryption_at_rest of this CreateClusterV2RequestProvisionedEncryptionInfo.
        :type encryption_at_rest: CreateClusterRequestEncryptionInfoEncryptionAtRest
        """

        self._encryption_at_rest = encryption_at_rest

    @property
    def encryption_in_transit(self):
        """Gets the encryption_in_transit of this CreateClusterV2RequestProvisionedEncryptionInfo.


        :return: The encryption_in_transit of this CreateClusterV2RequestProvisionedEncryptionInfo.
        :rtype: CreateClusterRequestEncryptionInfoEncryptionInTransit
        """
        return self._encryption_in_transit

    @encryption_in_transit.setter
    def encryption_in_transit(self, encryption_in_transit):
        """Sets the encryption_in_transit of this CreateClusterV2RequestProvisionedEncryptionInfo.


        :param encryption_in_transit: The encryption_in_transit of this CreateClusterV2RequestProvisionedEncryptionInfo.
        :type encryption_in_transit: CreateClusterRequestEncryptionInfoEncryptionInTransit
        """

        self._encryption_in_transit = encryption_in_transit
