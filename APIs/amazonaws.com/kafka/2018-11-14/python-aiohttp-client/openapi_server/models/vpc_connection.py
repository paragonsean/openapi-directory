# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vpc_connection_state import VpcConnectionState
from openapi_server import util


class VpcConnection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc_connection_arn: str=None, target_cluster_arn: str=None, creation_time: datetime=None, authentication: str=None, vpc_id: str=None, state: VpcConnectionState=None):
        """VpcConnection - a model defined in OpenAPI

        :param vpc_connection_arn: The vpc_connection_arn of this VpcConnection.
        :param target_cluster_arn: The target_cluster_arn of this VpcConnection.
        :param creation_time: The creation_time of this VpcConnection.
        :param authentication: The authentication of this VpcConnection.
        :param vpc_id: The vpc_id of this VpcConnection.
        :param state: The state of this VpcConnection.
        """
        self.openapi_types = {
            'vpc_connection_arn': str,
            'target_cluster_arn': str,
            'creation_time': datetime,
            'authentication': str,
            'vpc_id': str,
            'state': VpcConnectionState
        }

        self.attribute_map = {
            'vpc_connection_arn': 'VpcConnectionArn',
            'target_cluster_arn': 'TargetClusterArn',
            'creation_time': 'CreationTime',
            'authentication': 'Authentication',
            'vpc_id': 'VpcId',
            'state': 'State'
        }

        self._vpc_connection_arn = vpc_connection_arn
        self._target_cluster_arn = target_cluster_arn
        self._creation_time = creation_time
        self._authentication = authentication
        self._vpc_id = vpc_id
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VpcConnection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VpcConnection of this VpcConnection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc_connection_arn(self):
        """Gets the vpc_connection_arn of this VpcConnection.


        :return: The vpc_connection_arn of this VpcConnection.
        :rtype: str
        """
        return self._vpc_connection_arn

    @vpc_connection_arn.setter
    def vpc_connection_arn(self, vpc_connection_arn):
        """Sets the vpc_connection_arn of this VpcConnection.


        :param vpc_connection_arn: The vpc_connection_arn of this VpcConnection.
        :type vpc_connection_arn: str
        """
        if vpc_connection_arn is None:
            raise ValueError("Invalid value for `vpc_connection_arn`, must not be `None`")

        self._vpc_connection_arn = vpc_connection_arn

    @property
    def target_cluster_arn(self):
        """Gets the target_cluster_arn of this VpcConnection.


        :return: The target_cluster_arn of this VpcConnection.
        :rtype: str
        """
        return self._target_cluster_arn

    @target_cluster_arn.setter
    def target_cluster_arn(self, target_cluster_arn):
        """Sets the target_cluster_arn of this VpcConnection.


        :param target_cluster_arn: The target_cluster_arn of this VpcConnection.
        :type target_cluster_arn: str
        """
        if target_cluster_arn is None:
            raise ValueError("Invalid value for `target_cluster_arn`, must not be `None`")

        self._target_cluster_arn = target_cluster_arn

    @property
    def creation_time(self):
        """Gets the creation_time of this VpcConnection.


        :return: The creation_time of this VpcConnection.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this VpcConnection.


        :param creation_time: The creation_time of this VpcConnection.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def authentication(self):
        """Gets the authentication of this VpcConnection.


        :return: The authentication of this VpcConnection.
        :rtype: str
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """Sets the authentication of this VpcConnection.


        :param authentication: The authentication of this VpcConnection.
        :type authentication: str
        """

        self._authentication = authentication

    @property
    def vpc_id(self):
        """Gets the vpc_id of this VpcConnection.


        :return: The vpc_id of this VpcConnection.
        :rtype: str
        """
        return self._vpc_id

    @vpc_id.setter
    def vpc_id(self, vpc_id):
        """Sets the vpc_id of this VpcConnection.


        :param vpc_id: The vpc_id of this VpcConnection.
        :type vpc_id: str
        """

        self._vpc_id = vpc_id

    @property
    def state(self):
        """Gets the state of this VpcConnection.


        :return: The state of this VpcConnection.
        :rtype: VpcConnectionState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this VpcConnection.


        :param state: The state of this VpcConnection.
        :type state: VpcConnectionState
        """

        self._state = state
