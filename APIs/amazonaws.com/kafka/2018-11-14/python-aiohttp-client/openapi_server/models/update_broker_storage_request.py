# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.broker_ebs_volume_info import BrokerEBSVolumeInfo
from openapi_server import util


class UpdateBrokerStorageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_version: str=None, target_broker_ebs_volume_info: List[BrokerEBSVolumeInfo]=None):
        """UpdateBrokerStorageRequest - a model defined in OpenAPI

        :param current_version: The current_version of this UpdateBrokerStorageRequest.
        :param target_broker_ebs_volume_info: The target_broker_ebs_volume_info of this UpdateBrokerStorageRequest.
        """
        self.openapi_types = {
            'current_version': str,
            'target_broker_ebs_volume_info': List[BrokerEBSVolumeInfo]
        }

        self.attribute_map = {
            'current_version': 'currentVersion',
            'target_broker_ebs_volume_info': 'targetBrokerEBSVolumeInfo'
        }

        self._current_version = current_version
        self._target_broker_ebs_volume_info = target_broker_ebs_volume_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBrokerStorageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateBrokerStorage_request of this UpdateBrokerStorageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_version(self):
        """Gets the current_version of this UpdateBrokerStorageRequest.

                     <p>The version of cluster to update from. A successful operation will then generate a new version.</p>          

        :return: The current_version of this UpdateBrokerStorageRequest.
        :rtype: str
        """
        return self._current_version

    @current_version.setter
    def current_version(self, current_version):
        """Sets the current_version of this UpdateBrokerStorageRequest.

                     <p>The version of cluster to update from. A successful operation will then generate a new version.</p>          

        :param current_version: The current_version of this UpdateBrokerStorageRequest.
        :type current_version: str
        """
        if current_version is None:
            raise ValueError("Invalid value for `current_version`, must not be `None`")

        self._current_version = current_version

    @property
    def target_broker_ebs_volume_info(self):
        """Gets the target_broker_ebs_volume_info of this UpdateBrokerStorageRequest.

                     <p>Describes the target volume size and the ID of the broker to apply the update to.</p>          

        :return: The target_broker_ebs_volume_info of this UpdateBrokerStorageRequest.
        :rtype: List[BrokerEBSVolumeInfo]
        """
        return self._target_broker_ebs_volume_info

    @target_broker_ebs_volume_info.setter
    def target_broker_ebs_volume_info(self, target_broker_ebs_volume_info):
        """Sets the target_broker_ebs_volume_info of this UpdateBrokerStorageRequest.

                     <p>Describes the target volume size and the ID of the broker to apply the update to.</p>          

        :param target_broker_ebs_volume_info: The target_broker_ebs_volume_info of this UpdateBrokerStorageRequest.
        :type target_broker_ebs_volume_info: List[BrokerEBSVolumeInfo]
        """
        if target_broker_ebs_volume_info is None:
            raise ValueError("Invalid value for `target_broker_ebs_volume_info`, must not be `None`")

        self._target_broker_ebs_volume_info = target_broker_ebs_volume_info
