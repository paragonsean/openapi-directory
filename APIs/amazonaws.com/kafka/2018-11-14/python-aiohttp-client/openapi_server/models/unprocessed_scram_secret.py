# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UnprocessedScramSecret(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_code: str=None, error_message: str=None, secret_arn: str=None):
        """UnprocessedScramSecret - a model defined in OpenAPI

        :param error_code: The error_code of this UnprocessedScramSecret.
        :param error_message: The error_message of this UnprocessedScramSecret.
        :param secret_arn: The secret_arn of this UnprocessedScramSecret.
        """
        self.openapi_types = {
            'error_code': str,
            'error_message': str,
            'secret_arn': str
        }

        self.attribute_map = {
            'error_code': 'ErrorCode',
            'error_message': 'ErrorMessage',
            'secret_arn': 'SecretArn'
        }

        self._error_code = error_code
        self._error_message = error_message
        self._secret_arn = secret_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnprocessedScramSecret':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnprocessedScramSecret of this UnprocessedScramSecret.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_code(self):
        """Gets the error_code of this UnprocessedScramSecret.


        :return: The error_code of this UnprocessedScramSecret.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this UnprocessedScramSecret.


        :param error_code: The error_code of this UnprocessedScramSecret.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def error_message(self):
        """Gets the error_message of this UnprocessedScramSecret.


        :return: The error_message of this UnprocessedScramSecret.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this UnprocessedScramSecret.


        :param error_message: The error_message of this UnprocessedScramSecret.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def secret_arn(self):
        """Gets the secret_arn of this UnprocessedScramSecret.


        :return: The secret_arn of this UnprocessedScramSecret.
        :rtype: str
        """
        return self._secret_arn

    @secret_arn.setter
    def secret_arn(self, secret_arn):
        """Sets the secret_arn of this UnprocessedScramSecret.


        :param secret_arn: The secret_arn of this UnprocessedScramSecret.
        :type secret_arn: str
        """

        self._secret_arn = secret_arn
