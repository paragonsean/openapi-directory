# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCompatibleKafkaVersionsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compatible_kafka_versions: List=None):
        """GetCompatibleKafkaVersionsResponse - a model defined in OpenAPI

        :param compatible_kafka_versions: The compatible_kafka_versions of this GetCompatibleKafkaVersionsResponse.
        """
        self.openapi_types = {
            'compatible_kafka_versions': List
        }

        self.attribute_map = {
            'compatible_kafka_versions': 'CompatibleKafkaVersions'
        }

        self._compatible_kafka_versions = compatible_kafka_versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCompatibleKafkaVersionsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCompatibleKafkaVersionsResponse of this GetCompatibleKafkaVersionsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compatible_kafka_versions(self):
        """Gets the compatible_kafka_versions of this GetCompatibleKafkaVersionsResponse.


        :return: The compatible_kafka_versions of this GetCompatibleKafkaVersionsResponse.
        :rtype: List
        """
        return self._compatible_kafka_versions

    @compatible_kafka_versions.setter
    def compatible_kafka_versions(self, compatible_kafka_versions):
        """Sets the compatible_kafka_versions of this GetCompatibleKafkaVersionsResponse.


        :param compatible_kafka_versions: The compatible_kafka_versions of this GetCompatibleKafkaVersionsResponse.
        :type compatible_kafka_versions: List
        """

        self._compatible_kafka_versions = compatible_kafka_versions
