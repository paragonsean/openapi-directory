# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_cluster_request_client_authentication import CreateClusterRequestClientAuthentication
from openapi_server.models.create_cluster_request_encryption_info import CreateClusterRequestEncryptionInfo
from openapi_server import util


class UpdateSecurityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_authentication: CreateClusterRequestClientAuthentication=None, current_version: str=None, encryption_info: CreateClusterRequestEncryptionInfo=None):
        """UpdateSecurityRequest - a model defined in OpenAPI

        :param client_authentication: The client_authentication of this UpdateSecurityRequest.
        :param current_version: The current_version of this UpdateSecurityRequest.
        :param encryption_info: The encryption_info of this UpdateSecurityRequest.
        """
        self.openapi_types = {
            'client_authentication': CreateClusterRequestClientAuthentication,
            'current_version': str,
            'encryption_info': CreateClusterRequestEncryptionInfo
        }

        self.attribute_map = {
            'client_authentication': 'clientAuthentication',
            'current_version': 'currentVersion',
            'encryption_info': 'encryptionInfo'
        }

        self._client_authentication = client_authentication
        self._current_version = current_version
        self._encryption_info = encryption_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSecurityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSecurity_request of this UpdateSecurityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_authentication(self):
        """Gets the client_authentication of this UpdateSecurityRequest.


        :return: The client_authentication of this UpdateSecurityRequest.
        :rtype: CreateClusterRequestClientAuthentication
        """
        return self._client_authentication

    @client_authentication.setter
    def client_authentication(self, client_authentication):
        """Sets the client_authentication of this UpdateSecurityRequest.


        :param client_authentication: The client_authentication of this UpdateSecurityRequest.
        :type client_authentication: CreateClusterRequestClientAuthentication
        """

        self._client_authentication = client_authentication

    @property
    def current_version(self):
        """Gets the current_version of this UpdateSecurityRequest.

                     <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>          

        :return: The current_version of this UpdateSecurityRequest.
        :rtype: str
        """
        return self._current_version

    @current_version.setter
    def current_version(self, current_version):
        """Sets the current_version of this UpdateSecurityRequest.

                     <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>          

        :param current_version: The current_version of this UpdateSecurityRequest.
        :type current_version: str
        """
        if current_version is None:
            raise ValueError("Invalid value for `current_version`, must not be `None`")

        self._current_version = current_version

    @property
    def encryption_info(self):
        """Gets the encryption_info of this UpdateSecurityRequest.


        :return: The encryption_info of this UpdateSecurityRequest.
        :rtype: CreateClusterRequestEncryptionInfo
        """
        return self._encryption_info

    @encryption_info.setter
    def encryption_info(self, encryption_info):
        """Sets the encryption_info of this UpdateSecurityRequest.


        :param encryption_info: The encryption_info of this UpdateSecurityRequest.
        :type encryption_info: CreateClusterRequestEncryptionInfo
        """

        self._encryption_info = encryption_info
