openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "\n               <p>The operations for managing an Amazon MSK cluster.</p>\n\
    \            "
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Managed Streaming for Kafka
  version: 2018-11-14
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: kafka
  x-aws-signingName: kafka
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kafka-2018-11-14.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/kafka/
servers:
- description: The Kafka multi-region endpoint
  url: "http://kafka.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Kafka multi-region endpoint
  url: "https://kafka.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Kafka endpoint for China (Beijing) and China (Ningxia)
  url: "http://kafka.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Kafka endpoint for China (Beijing) and China (Ningxia)
  url: "https://kafka.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /api/v2/clusters:
    get:
      description: "\n            <p>Returns a list of all the MSK clusters in the\
        \ current Region.</p>\n         "
      operationId: list_clusters_v2
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>Specify a prefix of the names of the clusters\
          \ that you want to list. The service lists all the clusters whose names\
          \ start with this prefix.</p>\n         "
        explode: true
        in: query
        name: clusterNameFilter
        required: false
        schema:
          type: string
        style: form
      - description: "\n            <p>Specify either PROVISIONED or SERVERLESS.</p>\n\
          \         "
        explode: true
        in: query
        name: clusterTypeFilter
        required: false
        schema:
          type: string
        style: form
      - description: "\n            <p>The maximum number of results to return in\
          \ the response. If there are more results, the response includes a NextToken\
          \ parameter.</p>\n         "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "\n            <p>The paginated results marker. When the result\
          \ of the operation is truncated, the call returns NextToken in the response.\
          \ \n            To get the next batch, provide this token in your next request.</p>\n\
          \         "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersV2Response'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "\n            <p>Creates a new MSK cluster.</p>\n         "
      operationId: create_cluster_v2
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterV2_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterV2Response'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v2/clusters/{clusterArn}:
    get:
      description: "\n            <p>Returns a description of the MSK cluster whose\
        \ Amazon Resource Name (ARN) is specified in the request.</p>\n         "
      operationId: describe_cluster_v2
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeClusterV2Response'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v2/clusters/{clusterArn}/operations:
    get:
      description: "\n            <p>Returns a list of all the operations that have\
        \ been performed on the specified MSK cluster.</p>\n         "
      operationId: list_cluster_operations_v2
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The arn of the cluster whose operations are being requested.
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      - description: The maxResults of the query.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The nextToken of the query.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsV2Response'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v2/operations/{clusterOperationArn}:
    get:
      description: |2

                    <p>Returns a description of the cluster operation specified by the ARN.</p>
      operationId: describe_cluster_operation_v2
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ARN of the cluster operation to describe.
        explode: false
        in: path
        name: clusterOperationArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeClusterOperationV2Response'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/clusters:
    get:
      description: "\n            <p>Returns a list of all the MSK clusters in the\
        \ current Region.</p>\n         "
      operationId: list_clusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>Specify a prefix of the name of the clusters\
          \ that you want to list. The service lists all the clusters whose names\
          \ start with this prefix.</p>\n         "
        explode: true
        in: query
        name: clusterNameFilter
        required: false
        schema:
          type: string
        style: form
      - description: "\n            <p>The maximum number of results to return in\
          \ the response. If there are more results, the response includes a NextToken\
          \ parameter.</p>\n         "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "\n            <p>The paginated results marker. When the result\
          \ of the operation is truncated, the call returns NextToken in the response.\
          \ \n            To get the next batch, provide this token in your next request.</p>\n\
          \         "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "\n            <p>Creates a new MSK cluster.</p>\n         "
      operationId: create_cluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCluster_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}:
    delete:
      description: "\n            <p>Deletes the MSK cluster specified by the Amazon\
        \ Resource Name (ARN) in the request.</p>\n         "
      operationId: delete_cluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      - description: "\n            <p>The current version of the MSK cluster.</p>\n\
          \         "
        explode: true
        in: query
        name: currentVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClusterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "\n            <p>Returns a description of the MSK cluster whose\
        \ Amazon Resource Name (ARN) is specified in the request.</p>\n         "
      operationId: describe_cluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeClusterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/clusters/{clusterArn}/bootstrap-brokers:
    get:
      description: "\n            <p>A list of brokers that a client application can\
        \ use to bootstrap.</p>\n         "
      operationId: get_bootstrap_brokers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBootstrapBrokersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/clusters/{clusterArn}/client-vpc-connection:
    put:
      description: "\n            <p>Returns empty response.</p>\n         "
      operationId: reject_client_vpc_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
          \         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectClientVpcConnection_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectClientVpcConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/client-vpc-connections:
    get:
      description: "\n            <p>Returns a list of all the VPC connections in\
        \ this Region.</p>\n         "
      operationId: list_client_vpc_connections
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
          \         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      - description: "\n            <p>The maximum number of results to return in\
          \ the response. If there are more results, the response includes a NextToken\
          \ parameter.</p>\n         "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "\n            <p>The paginated results marker. When the result\
          \ of the operation is truncated, the call returns NextToken in the response.\
          \ \n            To get the next batch, provide this token in your next request.</p>\n\
          \         "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClientVpcConnectionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/clusters/{clusterArn}/configuration:
    put:
      description: "\n            <p>Updates the cluster with the configuration that\
        \ is specified in the request body.</p>\n         "
      operationId: update_cluster_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClusterConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/connectivity:
    put:
      description: "\n            <p>Updates the cluster's connectivity configuration.</p>\n\
        \         "
      operationId: update_connectivity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the configuration.</p>\n\
          \         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectivity_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConnectivityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/monitoring:
    put:
      description: "\n            <p>Updates the monitoring settings for the cluster.\
        \ You can use this operation to specify which Apache Kafka metrics you want\
        \ Amazon MSK to send to Amazon CloudWatch. You can also specify settings for\
        \ open monitoring with Prometheus.</p>\n         "
      operationId: update_monitoring
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMonitoring_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMonitoringResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/nodes:
    get:
      description: "\n            <p>Returns a list of the broker nodes in the cluster.</p>\n\
        \         "
      operationId: list_nodes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      - description: "\n            <p>The maximum number of results to return in\
          \ the response. If there are more results, the response includes a NextToken\
          \ parameter.</p>\n         "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "\n            <p>The paginated results marker. When the result\
          \ of the operation is truncated, the call returns NextToken in the response.\
          \ \n            To get the next batch, provide this token in your next request.</p>\n\
          \         "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/clusters/{clusterArn}/nodes/count:
    put:
      description: "\n            <p>Updates the number of broker nodes in the cluster.</p>\n\
        \         "
      operationId: update_broker_count
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBrokerCount_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBrokerCountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/nodes/storage:
    put:
      description: "\n            <p>Updates the EBS storage associated with MSK brokers.</p>\n\
        \         "
      operationId: update_broker_storage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBrokerStorage_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBrokerStorageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/nodes/type:
    put:
      description: "\n            <p>Updates EC2 instance type.</p>\n         "
      operationId: update_broker_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBrokerType_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBrokerTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/operations:
    get:
      description: "\n            <p>Returns a list of all the operations that have\
        \ been performed on the specified MSK cluster.</p>\n         "
      operationId: list_cluster_operations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      - description: "\n            <p>The maximum number of results to return in\
          \ the response. If there are more results, the response includes a NextToken\
          \ parameter.</p>\n         "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "\n            <p>The paginated results marker. When the result\
          \ of the operation is truncated, the call returns NextToken in the response.\
          \ \n            To get the next batch, provide this token in your next request.</p>\n\
          \         "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/clusters/{clusterArn}/policy:
    delete:
      description: "\n            <p>Deletes the MSK cluster policy specified by the\
        \ Amazon Resource Name (ARN) in the request.</p>\n         "
      operationId: delete_cluster_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
          \         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClusterPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "\n            <p>Get the MSK cluster policy specified by the Amazon\
        \ Resource Name (ARN) in the request.</p>\n         "
      operationId: get_cluster_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
          \            "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "\n            <p>Creates or updates the MSK cluster policy specified\
        \ by the cluster Amazon Resource Name (ARN) in the request.</p>\n         "
      operationId: put_cluster_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
          \         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutClusterPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutClusterPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/reboot-broker:
    put:
      description: Reboots brokers.
      operationId: reboot_broker
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
          \ to be updated.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootBroker_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebootBrokerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/scram-secrets:
    get:
      description: "\n            <p>Returns a list of the Scram Secrets associated\
        \ with an Amazon MSK cluster.</p>\n         "
      operationId: list_scram_secrets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The arn of the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      - description: "\n            <p>The maxResults of the query.</p>\n         "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "\n            <p>The nextToken of the query.</p>\n         "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScramSecretsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: "\n            <p>Disassociates one or more Scram Secrets from\
        \ an Amazon MSK cluster.</p>\n         "
      operationId: batch_disassociate_scram_secret
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
          \ to be updated.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAssociateScramSecret_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDisassociateScramSecretResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    post:
      description: "\n            <p>Associates one or more Scram Secrets with an\
        \ Amazon MSK cluster.</p>\n         "
      operationId: batch_associate_scram_secret
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
          \ to be updated.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAssociateScramSecret_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAssociateScramSecretResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/security:
    patch:
      description: "\n            <p>Updates the security settings for the cluster.\
        \ You can use this operation to specify encryption and authentication on existing\
        \ clusters.</p>\n         "
      operationId: update_security
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the cluster.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSecurity_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSecurityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/storage:
    put:
      description: Updates cluster broker volume size (or) sets cluster storage mode
        to TIERED.
      operationId: update_storage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
          \ to be updated.</p>\n         "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStorage_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStorageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/clusters/{clusterArn}/version:
    put:
      description: "\n            <p>Updates the Apache Kafka version for the cluster.</p>\n\
        \         "
      operationId: update_cluster_kafka_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
          \ to be updated.</p>\n            "
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterKafkaVersion_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClusterKafkaVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/compatible-kafka-versions:
    get:
      description: "\n            <p>Gets the Apache Kafka versions to which you can\
        \ update the MSK cluster.</p>\n         "
      operationId: get_compatible_kafka_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
          \ check.</p>\n            "
        explode: true
        in: query
        name: clusterArn
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCompatibleKafkaVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/configurations:
    get:
      description: "\n            <p>Returns a list of all the MSK configurations\
        \ in this Region.</p>\n         "
      operationId: list_configurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The maximum number of results to return in\
          \ the response. If there are more results, the response includes a NextToken\
          \ parameter.</p>\n         "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "\n            <p>The paginated results marker. When the result\
          \ of the operation is truncated, the call returns NextToken in the response.\
          \ \n            To get the next batch, provide this token in your next request.</p>\n\
          \         "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "\n            <p>Creates a new MSK configuration.</p>\n      \
        \   "
      operationId: create_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/configurations/{arn}:
    delete:
      description: "\n            <p>Deletes an MSK Configuration.</p>\n         "
      operationId: delete_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies an MSK configuration.</p>\n         "
        explode: false
        in: path
        name: arn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "\n            <p>Returns a description of this MSK configuration.</p>\n\
        \         "
      operationId: describe_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies an MSK configuration and all of its revisions.</p>\n      \
          \   "
        explode: false
        in: path
        name: arn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "\n            <p>Updates an MSK configuration.</p>\n         "
      operationId: update_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) of the configuration.</p>\n\
          \         "
        explode: false
        in: path
        name: arn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/configurations/{arn}/revisions:
    get:
      description: "\n            <p>Returns a list of all the MSK configurations\
        \ in this Region.</p>\n         "
      operationId: list_configuration_revisions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies an MSK configuration and all of its revisions.</p>\n      \
          \   "
        explode: false
        in: path
        name: arn
        required: true
        schema:
          type: string
        style: simple
      - description: "\n            <p>The maximum number of results to return in\
          \ the response. If there are more results, the response includes a NextToken\
          \ parameter.</p>\n         "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "\n            <p>The paginated results marker. When the result\
          \ of the operation is truncated, the call returns NextToken in the response.\
          \ \n            To get the next batch, provide this token in your next request.</p>\n\
          \         "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationRevisionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/configurations/{arn}/revisions/{revision}:
    get:
      description: "\n            <p>Returns a description of this revision of the\
        \ configuration.</p>\n         "
      operationId: describe_configuration_revision
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies an MSK configuration and all of its revisions.</p>\n      \
          \   "
        explode: false
        in: path
        name: arn
        required: true
        schema:
          type: string
        style: simple
      - description: "\n            <p>A string that uniquely identifies a revision\
          \ of an MSK configuration.</p>\n         "
        explode: false
        in: path
        name: revision
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConfigurationRevisionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/kafka-versions:
    get:
      description: "\n            <p>Returns a list of Apache Kafka versions.</p>\n\
        \         "
      operationId: list_kafka_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: |2-

                      <p>The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.</p>
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: |2-

                      <p>The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. To get the next batch, provide this token in your next request.</p>
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKafkaVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/operations/{clusterOperationArn}:
    get:
      description: "\n            <p>Returns a description of the cluster operation\
        \ specified by the ARN.</p>\n         "
      operationId: describe_cluster_operation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the MSK cluster operation.</p>\n         "
        explode: false
        in: path
        name: clusterOperationArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeClusterOperationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/tags/{resourceArn}:
    get:
      description: "\n            <p>Returns a list of the tags associated with the\
        \ specified resource.</p>\n         "
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the resource that's associated with the tags.</p>\n       \
          \  "
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "\n            <p>Adds tags to the specified MSK resource.</p>\n\
        \         "
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the resource that's associated with the tags.</p>\n       \
          \  "
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/tags/{resourceArn}#tagKeys:
    delete:
      description: "\n            <p>Removes the tags associated with the keys that\
        \ are provided in the query.</p>\n         "
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies the resource that's associated with the tags.</p>\n       \
          \  "
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: "\n            <p>Tag keys must be unique for a given cluster.\
          \ In addition, the following restrictions apply:</p>\n            <ul>\n\
          \               <li>\n                  <p>Each tag key must be unique.\
          \ If you add a tag with a key that's already in\n                  use,\
          \ your new tag overwrites the existing key-value pair. </p>\n          \
          \     </li>\n               <li>\n                  <p>You can't start a\
          \ tag key with aws: because this prefix is reserved for use\n          \
          \        by  AWS.  AWS creates tags that begin with this prefix on your\
          \ behalf, but\n                  you can't edit or delete them.</p>\n  \
          \             </li>\n               <li>\n                  <p>Tag keys\
          \ must be between 1 and 128 Unicode characters in length.</p>\n        \
          \       </li>\n               <li>\n                  <p>Tag keys must consist\
          \ of the following characters: Unicode letters, digits,\n              \
          \    white space, and the following special characters: _ . / = + -\n  \
          \                   @.</p>\n               </li>\n            </ul>\n  \
          \       "
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/__string'
          type: array
        style: form
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/vpc-connection:
    post:
      description: "\n            <p>Creates a new MSK VPC connection.</p>\n     \
        \    "
      operationId: create_vpc_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVpcConnection_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVpcConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/vpc-connection/{arn}:
    delete:
      description: "\n            <p>Deletes a MSK VPC connection.</p>\n         "
      operationId: delete_vpc_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies an MSK VPC connection.</p>\n         "
        explode: false
        in: path
        name: arn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVpcConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "\n            <p>Returns a description of this MSK VPC connection.</p>\n\
        \         "
      operationId: describe_vpc_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
          \ identifies a MSK VPC connection.</p>\n   "
        explode: false
        in: path
        name: arn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeVpcConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/vpc-connections:
    get:
      description: "\n            <p>Returns a list of all the VPC connections in\
        \ this Region.</p>\n         "
      operationId: list_vpc_connections
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "\n            <p>The maximum number of results to return in\
          \ the response. If there are more results, the response includes a NextToken\
          \ parameter.</p>\n         "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "\n            <p>The paginated results marker. When the result\
          \ of the operation is truncated, the call returns NextToken in the response.\
          \ \n            To get the next batch, provide this token in your next request.</p>\n\
          \         "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpcConnectionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchAssociateScramSecretResponse:
      example:
        ClusterArn: ""
        UnprocessedScramSecrets: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        UnprocessedScramSecrets:
          allOf:
          - $ref: '#/components/schemas/__listOfUnprocessedScramSecret'
          - description: "\n            <p>List of errors when associating secrets\
              \ to cluster.</p>\n         "
            xml:
              name: unprocessedScramSecrets
          title: UnprocessedScramSecrets
      title: BatchAssociateScramSecretResponse
      type: object
    __string:
      title: __string
      type: string
    BadRequestException: {}
    UnauthorizedException: {}
    InternalServerErrorException: {}
    ForbiddenException: {}
    NotFoundException: {}
    ServiceUnavailableException: {}
    TooManyRequestsException: {}
    CreateClusterResponse:
      example:
        ClusterArn: ""
        State: ""
        ClusterName: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The name of the MSK cluster.</p>\n    \
              \     "
            xml:
              name: clusterName
          title: ClusterName
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          - description: "\n            <p>The state of the cluster. The possible\
              \ states are ACTIVE, CREATING, DELETING, FAILED, HEALING, MAINTENANCE,\
              \ REBOOTING_BROKER, and UPDATING.</p>\n         "
            xml:
              name: state
          title: State
      title: CreateClusterResponse
      type: object
    BrokerAZDistribution:
      description: "\n            <p>The distribution of broker nodes across Availability\
        \ Zones. This is an optional parameter. If you don't specify it, Amazon MSK\
        \ gives it the value DEFAULT. You can also explicitly set this parameter to\
        \ the value DEFAULT. No other values are currently allowed.</p>\n        \
        \ <p>Amazon MSK distributes the broker nodes evenly across the Availability\
        \ Zones that correspond to the subnets you provide when you create the cluster.</p>\n\
        \         "
      enum:
      - DEFAULT
      title: BrokerAZDistribution
      type: string
    __listOf__string:
      items:
        $ref: '#/components/schemas/__string'
      type: array
    __stringMin5Max32:
      maxLength: 32
      minLength: 5
      type: string
    StorageInfo:
      description: "\n            <p>Contains information about storage volumes attached\
        \ to MSK broker nodes.</p>\n         "
      properties:
        EbsStorageInfo:
          $ref: '#/components/schemas/StorageInfo_EbsStorageInfo'
      title: StorageInfo
      type: object
    ConnectivityInfo:
      description: "\n            <p>Information about the broker access configuration.</p>\n\
        \         "
      properties:
        PublicAccess:
          $ref: '#/components/schemas/UpdateConnectivity_request_connectivityInfo_PublicAccess'
        VpcConnectivity:
          $ref: '#/components/schemas/UpdateConnectivity_request_connectivityInfo_VpcConnectivity'
      title: ConnectivityInfo
      type: object
    Sasl:
      description: "\n            <p>Details for client authentication using SASL.</p>\n\
        \         "
      properties:
        Scram:
          $ref: '#/components/schemas/Sasl_Scram'
        Iam:
          $ref: '#/components/schemas/Sasl_Iam'
      title: Sasl
      type: object
    Tls:
      description: "\n            <p>Details for client authentication using TLS.</p>\n\
        \         "
      properties:
        CertificateAuthorityArnList:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>List of ACM Certificate Authority ARNs.</p>\n\
              \         "
            xml:
              name: certificateAuthorityArnList
          title: CertificateAuthorityArnList
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>Specifies whether you want to turn on or\
              \ turn off TLS authentication.</p>\n         "
            xml:
              name: enabled
          title: Enabled
      title: Tls
      type: object
    Unauthenticated:
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>Specifies whether you want to turn on or\
              \ turn off unauthenticated traffic to your cluster.</p>\n         "
            xml:
              name: enabled
          title: Enabled
      title: Unauthenticated
      type: object
    __long:
      type: integer
    EncryptionAtRest:
      description: "\n            <p>The data-volume encryption details.</p>\n   \
        \      "
      properties:
        DataVolumeKMSKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The ARN of the AWS KMS key for encrypting\
              \ data at rest. If you don't specify a KMS key, MSK creates one for\
              \ you and uses it.</p>\n         "
            xml:
              name: dataVolumeKMSKeyId
          title: DataVolumeKMSKeyId
      required:
      - DataVolumeKMSKeyId
      title: EncryptionAtRest
      type: object
    EncryptionInTransit:
      description: "\n            <p>The settings for encrypting data in transit.</p>\n\
        \         "
      properties:
        ClientBroker:
          allOf:
          - $ref: '#/components/schemas/ClientBroker'
          - description: "\n            <p>Indicates the encryption setting for data\
              \ in transit between clients and brokers. The following are the possible\
              \ values.</p>\n            <p>\n               TLS means that client-broker\
              \ communication is enabled with TLS only.</p>\n            <p>\n   \
              \            TLS_PLAINTEXT means that client-broker communication is\
              \ enabled for both TLS-encrypted, as well as plaintext data.</p>\n \
              \           <p>\n               PLAINTEXT means that client-broker communication\
              \ is enabled in plaintext only.</p>\n            <p>The default value\
              \ is TLS_PLAINTEXT.</p>\n         "
            xml:
              name: clientBroker
          title: ClientBroker
        InCluster:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>When set to true, it indicates that data\
              \ communication among the broker nodes of the cluster is encrypted.\
              \ When set to false, the communication happens in plaintext.</p>\n \
              \           <p>The default value is true.</p>\n         "
            xml:
              name: inCluster
          title: InCluster
      title: EncryptionInTransit
      type: object
    PrometheusInfo:
      description: "\n            <p>Prometheus settings.</p>\n         "
      properties:
        JmxExporter:
          $ref: '#/components/schemas/PrometheusInfo_JmxExporter'
        NodeExporter:
          $ref: '#/components/schemas/PrometheusInfo_NodeExporter'
      title: PrometheusInfo
      type: object
    BrokerLogs:
      properties:
        CloudWatchLogs:
          $ref: '#/components/schemas/BrokerLogs_CloudWatchLogs'
        Firehose:
          $ref: '#/components/schemas/BrokerLogs_Firehose'
        S3:
          $ref: '#/components/schemas/BrokerLogs_S3'
      title: BrokerLogs
      type: object
    ConflictException: {}
    CreateClusterV2Response:
      example:
        ClusterArn: ""
        State: ""
        ClusterName: ""
        ClusterType: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The name of the MSK cluster.</p>\n    \
              \     "
            xml:
              name: clusterName
          title: ClusterName
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          - description: "\n            <p>The state of the cluster. The possible\
              \ states are ACTIVE, CREATING, DELETING, FAILED, HEALING, MAINTENANCE,\
              \ REBOOTING_BROKER, and UPDATING.</p>\n         "
            xml:
              name: state
          title: State
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          - description: "\n            <p>The type of the cluster. The possible states\
              \ are PROVISIONED or SERVERLESS.</p>\n         "
            xml:
              name: clusterType
          title: ClusterType
      title: CreateClusterV2Response
      type: object
    BrokerNodeGroupInfo:
      description: "\n            <p>Describes the setup to be used for Apache Kafka\
        \ broker nodes in the cluster.</p>\n         "
      properties:
        BrokerAZDistribution:
          allOf:
          - $ref: '#/components/schemas/BrokerAZDistribution'
          - description: "\n            <p>The distribution of broker nodes across\
              \ Availability Zones. This is an optional parameter. If you don't specify\
              \ it, Amazon MSK gives it the value DEFAULT. You can also explicitly\
              \ set this parameter to the value DEFAULT. No other values are currently\
              \ allowed.</p>\n         <p>Amazon MSK distributes the broker nodes\
              \ evenly across the Availability Zones that correspond to the subnets\
              \ you provide when you create the cluster.</p>\n         "
            xml:
              name: brokerAZDistribution
          title: BrokerAZDistribution
        ClientSubnets:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of subnets to connect to in the\
              \ client virtual private cloud (VPC). AWS creates elastic network interfaces\
              \ inside these subnets. Client applications use elastic network interfaces\
              \ to produce and consume data. Client subnets can't occupy the Availability\
              \ Zone with ID use use1-az3.</p>\n         "
            xml:
              name: clientSubnets
          title: ClientSubnets
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/__stringMin5Max32'
          - description: "\n            <p>The type of Amazon EC2 instances to use\
              \ for Apache Kafka brokers. The following instance types are allowed:\
              \ kafka.m5.large, kafka.m5.xlarge, kafka.m5.2xlarge,\nkafka.m5.4xlarge,\
              \ kafka.m5.12xlarge, and kafka.m5.24xlarge.</p>\n         "
            xml:
              name: instanceType
          title: InstanceType
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The AWS security groups to associate with\
              \ the elastic network interfaces in order to specify who can connect\
              \ to and communicate with the Amazon MSK cluster. If you don't specify\
              \ a security group, Amazon MSK uses the default security group associated\
              \ with the VPC.</p>\n         "
            xml:
              name: securityGroups
          title: SecurityGroups
        StorageInfo:
          $ref: '#/components/schemas/CreateCluster_request_brokerNodeGroupInfo_StorageInfo'
        ConnectivityInfo:
          $ref: '#/components/schemas/CreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo'
        ZoneIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of zoneIds for the cluster in\
              \ the virtual private cloud (VPC).</p>\n         "
            xml:
              name: zoneIds
          title: ZoneIds
      required:
      - ClientSubnets
      - InstanceType
      title: BrokerNodeGroupInfo
      type: object
    ClientAuthentication:
      description: "\n            <p>Includes all client authentication information.</p>\n\
        \         "
      properties:
        Sasl:
          $ref: '#/components/schemas/CreateCluster_request_clientAuthentication_Sasl'
        Tls:
          $ref: '#/components/schemas/CreateCluster_request_clientAuthentication_Tls'
        Unauthenticated:
          $ref: '#/components/schemas/CreateCluster_request_clientAuthentication_Unauthenticated'
      title: ClientAuthentication
      type: object
    ConfigurationInfo:
      description: "\n            <p>Specifies the configuration to use for the brokers.</p>\n\
        \         "
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>ARN of the configuration to use.</p>\n\
              \         "
            xml:
              name: arn
          title: Arn
        Revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: "\n            <p>The revision of the configuration to use.</p>\n\
              \         "
            xml:
              name: revision
          title: Revision
      required:
      - Arn
      - Revision
      title: ConfigurationInfo
      type: object
    EncryptionInfo:
      description: "\n            <p>Includes encryption-related information, such\
        \ as the AWS KMS key used for encrypting data at rest and whether you want\
        \ MSK to encrypt your data in transit.</p>\n         "
      properties:
        EncryptionAtRest:
          $ref: '#/components/schemas/CreateCluster_request_encryptionInfo_EncryptionAtRest'
        EncryptionInTransit:
          $ref: '#/components/schemas/CreateCluster_request_encryptionInfo_EncryptionInTransit'
      title: EncryptionInfo
      type: object
    EnhancedMonitoring:
      description: "\n            <p>Specifies which metrics are gathered for the\
        \ MSK cluster. This property has the following possible values: DEFAULT, PER_BROKER,\
        \ PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics\
        \ associated with each of these levels of monitoring, see <a href=\"https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html\"\
        >Monitoring</a>.</p>\n         "
      enum:
      - DEFAULT
      - PER_BROKER
      - PER_TOPIC_PER_BROKER
      - PER_TOPIC_PER_PARTITION
      title: EnhancedMonitoring
      type: string
    OpenMonitoringInfo:
      description: "\n            <p>JMX and Node monitoring for the MSK cluster.</p>\n\
        \         "
      properties:
        Prometheus:
          $ref: '#/components/schemas/CreateCluster_request_openMonitoring_Prometheus'
      required:
      - Prometheus
      title: OpenMonitoringInfo
      type: object
    __stringMin1Max128:
      maxLength: 128
      minLength: 1
      type: string
    LoggingInfo:
      properties:
        BrokerLogs:
          $ref: '#/components/schemas/CreateCluster_request_loggingInfo_BrokerLogs'
      required:
      - BrokerLogs
      title: LoggingInfo
      type: object
    __integerMin1Max15:
      maximum: 15
      minimum: 1
      type: integer
    StorageMode:
      description: Controls storage mode for various supported storage tiers.
      enum:
      - LOCAL
      - TIERED
      title: StorageMode
      type: string
    __listOfVpcConfig:
      items:
        $ref: '#/components/schemas/VpcConfig'
      type: array
    ServerlessClientAuthentication:
      description: "\n            <p>Includes all client authentication information.</p>\n\
        \         "
      properties:
        Sasl:
          $ref: '#/components/schemas/ServerlessClientAuthentication_Sasl'
      title: ServerlessClientAuthentication
      type: object
    CreateConfigurationResponse:
      example:
        LatestRevision:
          Description: ""
          Revision: ""
          CreationTime: ""
        State: ""
        CreationTime: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the configuration.</p>\n\
              \         "
            xml:
              name: arn
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The time when the configuration was created.</p>\n\
              \         "
            xml:
              name: creationTime
          title: CreationTime
        LatestRevision:
          $ref: '#/components/schemas/CreateConfigurationResponse_LatestRevision'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The name of the configuration.</p>\n  \
              \       "
            xml:
              name: name
          title: Name
        State:
          allOf:
          - $ref: '#/components/schemas/ConfigurationState'
          - description: "\n            <p>The state of the configuration. The possible\
              \ states are ACTIVE, DELETING, and DELETE_FAILED. </p>\n         "
            xml:
              name: state
          title: State
      title: CreateConfigurationResponse
      type: object
    CreateVpcConnectionResponse:
      example:
        SecurityGroups: ""
        ClientSubnets: ""
        VpcId: ""
        State: ""
        Authentication: ""
        CreationTime: ""
        VpcConnectionArn: ""
        Tags: ""
      properties:
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The VPC connection ARN.</p>\n         "
            xml:
              name: vpcConnectionArn
          title: VpcConnectionArn
        State:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionState'
          - description: "\n            <p>The State of Vpc Connection.</p>\n    \
              \     "
            xml:
              name: state
          title: State
        Authentication:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The authentication type of VPC connection.</p>\n\
              \         "
            xml:
              name: authentication
          title: Authentication
        VpcId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The VPC ID of the VPC connection.</p>\n\
              \         "
            xml:
              name: vpcId
          title: VpcId
        ClientSubnets:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of client subnets.</p>\n     \
              \    "
            xml:
              name: clientSubnets
          title: ClientSubnets
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of security groups.</p>\n    \
              \     "
            xml:
              name: securityGroups
          title: SecurityGroups
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The creation time of VPC connection.</p>\n\
              \         "
            xml:
              name: creationTime
          title: CreationTime
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "\n            <p>A map of tags for the VPC connection.</p>\n\
              \         "
            xml:
              name: tags
          title: Tags
      title: CreateVpcConnectionResponse
      type: object
    DeleteClusterResponse:
      example:
        ClusterArn: ""
        State: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          - description: "\n            <p>The state of the cluster. The possible\
              \ states are ACTIVE, CREATING, DELETING, FAILED, HEALING, MAINTENANCE,\
              \ REBOOTING_BROKER, and UPDATING.</p>\n         "
            xml:
              name: state
          title: State
      title: DeleteClusterResponse
      type: object
    DeleteClusterPolicyResponse:
      properties: {}
      type: object
    DeleteConfigurationResponse:
      example:
        State: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
              \ identifies an MSK configuration.</p>\n         "
            xml:
              name: arn
          title: Arn
        State:
          allOf:
          - $ref: '#/components/schemas/ConfigurationState'
          - description: "\n            <p>The state of the configuration. The possible\
              \ states are ACTIVE, DELETING, and DELETE_FAILED. </p>\n         "
            xml:
              name: state
          title: State
      title: DeleteConfigurationResponse
      type: object
    DeleteVpcConnectionResponse:
      example:
        State: ""
        VpcConnectionArn: ""
      properties:
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
              \ identifies an MSK VPC connection.</p>\n         "
            xml:
              name: vpcConnectionArn
          title: VpcConnectionArn
        State:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionState'
          - description: "\n            <p>The state of the VPC connection.</p>\n\
              \         "
            xml:
              name: state
          title: State
      title: DeleteVpcConnectionResponse
      type: object
    DescribeClusterResponse:
      example:
        ClusterInfo:
          ClusterArn: ""
          NumberOfBrokerNodes: ""
          EncryptionInfo:
            EncryptionAtRest:
              DataVolumeKMSKeyId: ""
            EncryptionInTransit:
              ClientBroker: ""
              InCluster: ""
          StateInfo:
            Message: ""
            Code: ""
          CurrentVersion: ""
          OpenMonitoring:
            Prometheus:
              JmxExporter:
                EnabledInBroker: ""
              NodeExporter:
                EnabledInBroker: ""
          CurrentBrokerSoftwareInfo:
            KafkaVersion: ""
            ConfigurationRevision: ""
            ConfigurationArn: ""
          ZookeeperConnectStringTls: ""
          StorageMode: ""
          ActiveOperationArn: ""
          BrokerNodeGroupInfo:
            SecurityGroups: ""
            ClientSubnets: ""
            ConnectivityInfo:
              VpcConnectivity:
                ClientAuthentication:
                  Sasl:
                    Iam:
                      Enabled: ""
                    Scram:
                      Enabled: ""
                  Tls:
                    Enabled: ""
              PublicAccess:
                Type: ""
            StorageInfo:
              EbsStorageInfo:
                ProvisionedThroughput:
                  VolumeThroughput: ""
                  Enabled: ""
                VolumeSize: ""
            BrokerAZDistribution: ""
            ZoneIds: ""
            InstanceType: ""
          EnhancedMonitoring: ""
          State: ""
          CreationTime: ""
          ZookeeperConnectString: ""
          ClusterName: ""
          ClientAuthentication:
            Sasl:
              Iam:
                Enabled: ""
              Scram:
                Enabled: ""
            Unauthenticated:
              Enabled: ""
            Tls:
              Enabled: ""
              CertificateAuthorityArnList: ""
          LoggingInfo:
            BrokerLogs:
              S3:
                Bucket: ""
                Enabled: ""
                Prefix: ""
              Firehose:
                DeliveryStream: ""
                Enabled: ""
              CloudWatchLogs:
                LogGroup: ""
                Enabled: ""
          Tags: ""
      properties:
        ClusterInfo:
          $ref: '#/components/schemas/DescribeClusterResponse_ClusterInfo'
      title: DescribeClusterResponse
      type: object
    DescribeClusterV2Response:
      example:
        ClusterInfo:
          ClusterArn: ""
          State: ""
          StateInfo:
            Message: ""
            Code: ""
          CurrentVersion: ""
          CreationTime: ""
          ClusterName: ""
          ClusterType: ""
          Serverless:
            VpcConfigs: ""
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
          Tags: ""
          Provisioned:
            BrokerNodeGroupInfo:
              SecurityGroups: ""
              ClientSubnets: ""
              ConnectivityInfo:
                VpcConnectivity:
                  ClientAuthentication:
                    Sasl:
                      Iam:
                        Enabled: ""
                      Scram:
                        Enabled: ""
                    Tls:
                      Enabled: ""
                PublicAccess:
                  Type: ""
              StorageInfo:
                EbsStorageInfo:
                  ProvisionedThroughput:
                    VolumeThroughput: ""
                    Enabled: ""
                  VolumeSize: ""
              BrokerAZDistribution: ""
              ZoneIds: ""
              InstanceType: ""
            EnhancedMonitoring: ""
            NumberOfBrokerNodes: ""
            EncryptionInfo:
              EncryptionAtRest:
                DataVolumeKMSKeyId: ""
              EncryptionInTransit:
                ClientBroker: ""
                InCluster: ""
            OpenMonitoring:
              Prometheus:
                JmxExporter:
                  EnabledInBroker: ""
                NodeExporter:
                  EnabledInBroker: ""
            ZookeeperConnectString: ""
            CurrentBrokerSoftwareInfo:
              KafkaVersion: ""
              ConfigurationRevision: ""
              ConfigurationArn: ""
            ZookeeperConnectStringTls: ""
            StorageMode: ""
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Unauthenticated:
                Enabled: ""
              Tls:
                Enabled: ""
                CertificateAuthorityArnList: ""
            LoggingInfo:
              BrokerLogs:
                S3:
                  Bucket: ""
                  Enabled: ""
                  Prefix: ""
                Firehose:
                  DeliveryStream: ""
                  Enabled: ""
                CloudWatchLogs:
                  LogGroup: ""
                  Enabled: ""
          ActiveOperationArn: ""
      properties:
        ClusterInfo:
          $ref: '#/components/schemas/DescribeClusterV2Response_ClusterInfo'
      title: DescribeClusterV2Response
      type: object
    DescribeClusterOperationResponse:
      example:
        ClusterOperationInfo:
          ClusterArn: ""
          OperationArn: ""
          ClientRequestId: ""
          EndTime: ""
          OperationSteps: ""
          SourceClusterInfo:
            EnhancedMonitoring: ""
            KafkaVersion: ""
            NumberOfBrokerNodes: ""
            ConnectivityInfo:
              VpcConnectivity:
                ClientAuthentication:
                  Sasl:
                    Iam:
                      Enabled: ""
                    Scram:
                      Enabled: ""
                  Tls:
                    Enabled: ""
              PublicAccess:
                Type: ""
            EncryptionInfo:
              EncryptionAtRest:
                DataVolumeKMSKeyId: ""
              EncryptionInTransit:
                ClientBroker: ""
                InCluster: ""
            OpenMonitoring:
              Prometheus:
                JmxExporter:
                  EnabledInBroker: ""
                NodeExporter:
                  EnabledInBroker: ""
            BrokerEBSVolumeInfo: ""
            InstanceType: ""
            StorageMode: ""
            LoggingInfo:
              BrokerLogs:
                S3:
                  Bucket: ""
                  Enabled: ""
                  Prefix: ""
                Firehose:
                  DeliveryStream: ""
                  Enabled: ""
                CloudWatchLogs:
                  LogGroup: ""
                  Enabled: ""
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Unauthenticated:
                Enabled: ""
              Tls:
                Enabled: ""
                CertificateAuthorityArnList: ""
            ConfigurationInfo:
              Revision: ""
              Arn: ""
          VpcConnectionInfo:
            Owner: ""
            UserIdentity:
              Type: ""
              PrincipalId: ""
            CreationTime: ""
            VpcConnectionArn: ""
          ErrorInfo:
            ErrorCode: ""
            ErrorString: ""
          CreationTime: ""
          TargetClusterInfo:
            EnhancedMonitoring: ""
            KafkaVersion: ""
            NumberOfBrokerNodes: ""
            ConnectivityInfo:
              VpcConnectivity:
                ClientAuthentication:
                  Sasl:
                    Iam:
                      Enabled: ""
                    Scram:
                      Enabled: ""
                  Tls:
                    Enabled: ""
              PublicAccess:
                Type: ""
            EncryptionInfo:
              EncryptionAtRest:
                DataVolumeKMSKeyId: ""
              EncryptionInTransit:
                ClientBroker: ""
                InCluster: ""
            OpenMonitoring:
              Prometheus:
                JmxExporter:
                  EnabledInBroker: ""
                NodeExporter:
                  EnabledInBroker: ""
            BrokerEBSVolumeInfo: ""
            InstanceType: ""
            StorageMode: ""
            LoggingInfo:
              BrokerLogs:
                S3:
                  Bucket: ""
                  Enabled: ""
                  Prefix: ""
                Firehose:
                  DeliveryStream: ""
                  Enabled: ""
                CloudWatchLogs:
                  LogGroup: ""
                  Enabled: ""
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Unauthenticated:
                Enabled: ""
              Tls:
                Enabled: ""
                CertificateAuthorityArnList: ""
            ConfigurationInfo:
              Revision: ""
              Arn: ""
          OperationType: ""
          OperationState: ""
      properties:
        ClusterOperationInfo:
          $ref: '#/components/schemas/DescribeClusterOperationResponse_ClusterOperationInfo'
      title: DescribeClusterOperationResponse
      type: object
    DescribeClusterOperationV2Response:
      example:
        ClusterOperationInfo:
          ClusterArn: ""
          OperationArn: ""
          EndTime: ""
          ErrorInfo:
            ErrorCode: ""
            ErrorString: ""
          StartTime: ""
          ClusterType: ""
          OperationType: ""
          Serverless:
            VpcConnectionInfo:
              Owner: ""
              UserIdentity:
                Type: ""
                PrincipalId: ""
              CreationTime: ""
              VpcConnectionArn: ""
          OperationState: ""
          Provisioned:
            OperationSteps: ""
            SourceClusterInfo:
              EnhancedMonitoring: ""
              KafkaVersion: ""
              NumberOfBrokerNodes: ""
              ConnectivityInfo:
                VpcConnectivity:
                  ClientAuthentication:
                    Sasl:
                      Iam:
                        Enabled: ""
                      Scram:
                        Enabled: ""
                    Tls:
                      Enabled: ""
                PublicAccess:
                  Type: ""
              EncryptionInfo:
                EncryptionAtRest:
                  DataVolumeKMSKeyId: ""
                EncryptionInTransit:
                  ClientBroker: ""
                  InCluster: ""
              OpenMonitoring:
                Prometheus:
                  JmxExporter:
                    EnabledInBroker: ""
                  NodeExporter:
                    EnabledInBroker: ""
              BrokerEBSVolumeInfo: ""
              InstanceType: ""
              StorageMode: ""
              LoggingInfo:
                BrokerLogs:
                  S3:
                    Bucket: ""
                    Enabled: ""
                    Prefix: ""
                  Firehose:
                    DeliveryStream: ""
                    Enabled: ""
                  CloudWatchLogs:
                    LogGroup: ""
                    Enabled: ""
              ClientAuthentication:
                Sasl:
                  Iam:
                    Enabled: ""
                  Scram:
                    Enabled: ""
                Unauthenticated:
                  Enabled: ""
                Tls:
                  Enabled: ""
                  CertificateAuthorityArnList: ""
              ConfigurationInfo:
                Revision: ""
                Arn: ""
            VpcConnectionInfo:
              Owner: ""
              UserIdentity:
                Type: ""
                PrincipalId: ""
              CreationTime: ""
              VpcConnectionArn: ""
            TargetClusterInfo:
              EnhancedMonitoring: ""
              KafkaVersion: ""
              NumberOfBrokerNodes: ""
              ConnectivityInfo:
                VpcConnectivity:
                  ClientAuthentication:
                    Sasl:
                      Iam:
                        Enabled: ""
                      Scram:
                        Enabled: ""
                    Tls:
                      Enabled: ""
                PublicAccess:
                  Type: ""
              EncryptionInfo:
                EncryptionAtRest:
                  DataVolumeKMSKeyId: ""
                EncryptionInTransit:
                  ClientBroker: ""
                  InCluster: ""
              OpenMonitoring:
                Prometheus:
                  JmxExporter:
                    EnabledInBroker: ""
                  NodeExporter:
                    EnabledInBroker: ""
              BrokerEBSVolumeInfo: ""
              InstanceType: ""
              StorageMode: ""
              LoggingInfo:
                BrokerLogs:
                  S3:
                    Bucket: ""
                    Enabled: ""
                    Prefix: ""
                  Firehose:
                    DeliveryStream: ""
                    Enabled: ""
                  CloudWatchLogs:
                    LogGroup: ""
                    Enabled: ""
              ClientAuthentication:
                Sasl:
                  Iam:
                    Enabled: ""
                  Scram:
                    Enabled: ""
                Unauthenticated:
                  Enabled: ""
                Tls:
                  Enabled: ""
                  CertificateAuthorityArnList: ""
              ConfigurationInfo:
                Revision: ""
                Arn: ""
      properties:
        ClusterOperationInfo:
          $ref: '#/components/schemas/DescribeClusterOperationV2Response_ClusterOperationInfo'
      title: DescribeClusterOperationV2Response
      type: object
    DescribeConfigurationResponse:
      example:
        Description: ""
        LatestRevision:
          Description: ""
          Revision: ""
          CreationTime: ""
        State: ""
        CreationTime: ""
        KafkaVersions: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the configuration.</p>\n\
              \         "
            xml:
              name: arn
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The time when the configuration was created.</p>\n\
              \         "
            xml:
              name: creationTime
          title: CreationTime
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The description of the configuration.</p>\n\
              \         "
            xml:
              name: description
          title: Description
        KafkaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The versions of Apache Kafka with which\
              \ you can use this MSK configuration.</p>\n         "
            xml:
              name: kafkaVersions
          title: KafkaVersions
        LatestRevision:
          $ref: '#/components/schemas/CreateConfigurationResponse_LatestRevision'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The name of the configuration.</p>\n  \
              \       "
            xml:
              name: name
          title: Name
        State:
          allOf:
          - $ref: '#/components/schemas/ConfigurationState'
          - description: "\n            <p>The state of the configuration. The possible\
              \ states are ACTIVE, DELETING, and DELETE_FAILED. </p>\n         "
            xml:
              name: state
          title: State
      title: DescribeConfigurationResponse
      type: object
    DescribeConfigurationRevisionResponse:
      example:
        Description: ""
        Revision: ""
        ServerProperties: ""
        CreationTime: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the configuration.</p>\n\
              \         "
            xml:
              name: arn
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The time when the configuration was created.</p>\n\
              \         "
            xml:
              name: creationTime
          title: CreationTime
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The description of the configuration.</p>\n\
              \         "
            xml:
              name: description
          title: Description
        Revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: "\n            <p>The revision number.</p>\n         "
            xml:
              name: revision
          title: Revision
        ServerProperties:
          allOf:
          - $ref: '#/components/schemas/__blob'
          - description: "\n            <p>Contents of the <filename>server.properties</filename>\
              \ file. When using the API, you must ensure that the contents of the\
              \ file are base64 encoded. \n               When using the AWS Management\
              \ Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename>\
              \ can be in plaintext.</p>\n         "
            xml:
              name: serverProperties
          title: ServerProperties
      title: DescribeConfigurationRevisionResponse
      type: object
    DescribeVpcConnectionResponse:
      example:
        SecurityGroups: ""
        TargetClusterArn: ""
        Subnets: ""
        VpcId: ""
        State: ""
        Authentication: ""
        CreationTime: ""
        VpcConnectionArn: ""
        Tags: ""
      properties:
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
              \ identifies a MSK VPC connection.</p>\n   "
            xml:
              name: vpcConnectionArn
          title: VpcConnectionArn
        TargetClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
              \ identifies an MSK cluster.</p>\n   "
            xml:
              name: targetClusterArn
          title: TargetClusterArn
        State:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionState'
          - description: "\n            <p>The state of VPC connection.</p>\n   "
            xml:
              name: state
          title: State
        Authentication:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The authentication type of VPC connection.</p>\n\
              \   "
            xml:
              name: authentication
          title: Authentication
        VpcId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The VPC Id for the VPC connection.</p>\n\
              \   "
            xml:
              name: vpcId
          title: VpcId
        Subnets:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of subnets for the VPC connection.</p>\n\
              \   "
            xml:
              name: subnets
          title: Subnets
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of security groups for the VPC\
              \ connection.</p>\n   "
            xml:
              name: securityGroups
          title: SecurityGroups
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The creation time of the VPC connection.</p>\n\
              \   "
            xml:
              name: creationTime
          title: CreationTime
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "\n            <p>A map of tags for the VPC connection.</p>\n\
              \         "
            xml:
              name: tags
          title: Tags
      title: DescribeVpcConnectionResponse
      type: object
    BatchDisassociateScramSecretResponse:
      example:
        ClusterArn: ""
        UnprocessedScramSecrets: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        UnprocessedScramSecrets:
          allOf:
          - $ref: '#/components/schemas/__listOfUnprocessedScramSecret'
          - description: "\n            <p>List of errors when disassociating secrets\
              \ to cluster.</p>\n         "
            xml:
              name: unprocessedScramSecrets
          title: UnprocessedScramSecrets
      title: BatchDisassociateScramSecretResponse
      type: object
    GetBootstrapBrokersResponse:
      example:
        BootstrapBrokerStringSaslScram: ""
        BootstrapBrokerStringVpcConnectivityTls: ""
        BootstrapBrokerString: ""
        BootstrapBrokerStringSaslIam: ""
        BootstrapBrokerStringPublicSaslScram: ""
        BootstrapBrokerStringPublicSaslIam: ""
        BootstrapBrokerStringVpcConnectivitySaslScram: ""
        BootstrapBrokerStringVpcConnectivitySaslIam: ""
        BootstrapBrokerStringTls: ""
        BootstrapBrokerStringPublicTls: ""
      properties:
        BootstrapBrokerString:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A string containing one or more hostname:port\
              \ pairs.</p>\n         "
            xml:
              name: bootstrapBrokerString
          title: BootstrapBrokerString
        BootstrapBrokerStringTls:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A string containing one or more DNS names\
              \ (or IP) and TLS port pairs.</p>\n         "
            xml:
              name: bootstrapBrokerStringTls
          title: BootstrapBrokerStringTls
        BootstrapBrokerStringSaslScram:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A string containing one or more DNS names\
              \ (or IP) and Sasl Scram port pairs.</p>\n         "
            xml:
              name: bootstrapBrokerStringSaslScram
          title: BootstrapBrokerStringSaslScram
        BootstrapBrokerStringSaslIam:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A string that contains one or more DNS\
              \ names (or IP addresses) and SASL IAM port pairs.</p>\n         "
            xml:
              name: bootstrapBrokerStringSaslIam
          title: BootstrapBrokerStringSaslIam
        BootstrapBrokerStringPublicTls:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A string containing one or more DNS names\
              \ (or IP) and TLS port pairs.</p>\n         "
            xml:
              name: bootstrapBrokerStringPublicTls
          title: BootstrapBrokerStringPublicTls
        BootstrapBrokerStringPublicSaslScram:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A string containing one or more DNS names\
              \ (or IP) and Sasl Scram port pairs.</p>\n         "
            xml:
              name: bootstrapBrokerStringPublicSaslScram
          title: BootstrapBrokerStringPublicSaslScram
        BootstrapBrokerStringPublicSaslIam:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A string that contains one or more DNS\
              \ names (or IP addresses) and SASL IAM port pairs.</p>\n         "
            xml:
              name: bootstrapBrokerStringPublicSaslIam
          title: BootstrapBrokerStringPublicSaslIam
        BootstrapBrokerStringVpcConnectivityTls:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A string containing one or more DNS names\
              \ (or IP) and TLS port pairs for VPC connectivity.</p>\n         "
            xml:
              name: bootstrapBrokerStringVpcConnectivityTls
          title: BootstrapBrokerStringVpcConnectivityTls
        BootstrapBrokerStringVpcConnectivitySaslScram:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A string containing one or more DNS names\
              \ (or IP) and SASL/SCRAM port pairs for VPC connectivity.</p>\n    \
              \     "
            xml:
              name: bootstrapBrokerStringVpcConnectivitySaslScram
          title: BootstrapBrokerStringVpcConnectivitySaslScram
        BootstrapBrokerStringVpcConnectivitySaslIam:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A string containing one or more DNS names\
              \ (or IP) and SASL/IAM port pairs for VPC connectivity.</p>\n      \
              \   "
            xml:
              name: bootstrapBrokerStringVpcConnectivitySaslIam
          title: BootstrapBrokerStringVpcConnectivitySaslIam
      title: GetBootstrapBrokersResponse
      type: object
    GetCompatibleKafkaVersionsResponse:
      example:
        CompatibleKafkaVersions: ""
      properties:
        CompatibleKafkaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOfCompatibleKafkaVersion'
          - description: "\n            <p>A list of CompatibleKafkaVersion objects.</p>\n\
              \            "
            xml:
              name: compatibleKafkaVersions
          title: CompatibleKafkaVersions
      title: GetCompatibleKafkaVersionsResponse
      type: object
    GetClusterPolicyResponse:
      example:
        Policy: ""
        CurrentVersion: ""
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The version of cluster policy.</p>\n  \
              \          "
            xml:
              name: currentVersion
          title: CurrentVersion
        Policy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The cluster policy.</p>\n            "
            xml:
              name: policy
          title: Policy
      title: GetClusterPolicyResponse
      type: object
    ListClusterOperationsResponse:
      example:
        NextToken: ""
        ClusterOperationInfoList: ""
      properties:
        ClusterOperationInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfClusterOperationInfo'
          - description: "\n            <p>An array of cluster operation information\
              \ objects.</p>\n         "
            xml:
              name: clusterOperationInfoList
          title: ClusterOperationInfoList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>If the response of ListClusterOperations\
              \ is truncated, it returns a NextToken in the response. This Nexttoken\
              \ should be sent in the subsequent request to ListClusterOperations.</p>\n\
              \         "
            xml:
              name: nextToken
          title: NextToken
      title: ListClusterOperationsResponse
      type: object
    ListClusterOperationsV2Response:
      example:
        NextToken: ""
        ClusterOperationInfoList: ""
      properties:
        ClusterOperationInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfClusterOperationV2Summary'
          - description: |2-

                          <p>An array of cluster operation information objects.</p>
            xml:
              name: clusterOperationInfoList
          title: ClusterOperationInfoList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |2-

                          <p>If the response of ListClusterOperationsV2 is truncated, it returns a NextToken in the response. This NextToken should be sent in the subsequent request to ListClusterOperationsV2.</p>
            xml:
              name: nextToken
          title: NextToken
      title: ListClusterOperationsV2Response
      type: object
    ListClustersResponse:
      example:
        NextToken: ""
        ClusterInfoList: ""
      properties:
        ClusterInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfClusterInfo'
          - description: "\n            <p>Information on each of the MSK clusters\
              \ in the response.</p>\n         "
            xml:
              name: clusterInfoList
          title: ClusterInfoList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The paginated results marker. When the\
              \ result of a ListClusters operation is truncated, the call returns\
              \ NextToken in the response. \n               To get another batch of\
              \ clusters, provide this token in your next request.</p>\n         "
            xml:
              name: nextToken
          title: NextToken
      title: ListClustersResponse
      type: object
    ListClustersV2Response:
      example:
        NextToken: ""
        ClusterInfoList: ""
      properties:
        ClusterInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfCluster'
          - description: "\n            <p>Information on each of the MSK clusters\
              \ in the response.</p>\n         "
            xml:
              name: clusterInfoList
          title: ClusterInfoList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The paginated results marker. When the\
              \ result of a ListClusters operation is truncated, the call returns\
              \ NextToken in the response. \n               To get another batch of\
              \ clusters, provide this token in your next request.</p>\n         "
            xml:
              name: nextToken
          title: NextToken
      title: ListClustersV2Response
      type: object
    ListConfigurationRevisionsResponse:
      example:
        NextToken: ""
        Revisions: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>Paginated results marker.</p>\n       \
              \  "
            xml:
              name: nextToken
          title: NextToken
        Revisions:
          allOf:
          - $ref: '#/components/schemas/__listOfConfigurationRevision'
          - description: "\n            <p>List of ConfigurationRevision objects.</p>\n\
              \         "
            xml:
              name: revisions
          title: Revisions
      title: ListConfigurationRevisionsResponse
      type: object
    ListConfigurationsResponse:
      example:
        NextToken: ""
        Configurations: ""
      properties:
        Configurations:
          allOf:
          - $ref: '#/components/schemas/__listOfConfiguration'
          - description: "\n            <p>An array of MSK configurations.</p>\n \
              \        "
            xml:
              name: configurations
          title: Configurations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The paginated results marker. When the\
              \ result of a ListConfigurations operation is truncated, the call returns\
              \ NextToken in the response. \n               To get another batch of\
              \ configurations, provide this token in your next request.</p>\n   \
              \      "
            xml:
              name: nextToken
          title: NextToken
      title: ListConfigurationsResponse
      type: object
    ListKafkaVersionsResponse:
      example:
        NextToken: ""
        KafkaVersions: ""
      properties:
        KafkaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOfKafkaVersion'
          - xml:
              name: kafkaVersions
          title: KafkaVersions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: nextToken
          title: NextToken
      title: ListKafkaVersionsResponse
      type: object
    ListNodesResponse:
      example:
        NextToken: ""
        NodeInfoList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The paginated results marker. When the\
              \ result of a ListNodes operation is truncated, the call returns NextToken\
              \ in the response. \n               To get another batch of nodes, provide\
              \ this token in your next request.</p>\n         "
            xml:
              name: nextToken
          title: NextToken
        NodeInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfNodeInfo'
          - description: "\n            <p>List containing a NodeInfo object.</p>\n\
              \         "
            xml:
              name: nodeInfoList
          title: NodeInfoList
      title: ListNodesResponse
      type: object
    ListScramSecretsResponse:
      example:
        NextToken: ""
        SecretArnList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>Paginated results marker.</p>\n       \
              \  "
            xml:
              name: nextToken
          title: NextToken
        SecretArnList:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of scram secrets associated with\
              \ the cluster.</p>\n         "
            xml:
              name: secretArnList
          title: SecretArnList
      title: ListScramSecretsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "\n            <p>The key-value pair for the resource tag.</p>\n\
              \         "
            xml:
              name: tags
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    ListClientVpcConnectionsResponse:
      example:
        NextToken: ""
        ClientVpcConnections: ""
      properties:
        ClientVpcConnections:
          allOf:
          - $ref: '#/components/schemas/__listOfClientVpcConnection'
          - description: "\n            <p>List of client VPC connections.</p>\n \
              \        "
            xml:
              name: clientVpcConnections
          title: ClientVpcConnections
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The paginated results marker. When the\
              \ result of a ListClientVpcConnections operation is truncated, the call\
              \ returns NextToken in the response. \n               To get another\
              \ batch of configurations, provide this token in your next request.</p>\n\
              \         "
            xml:
              name: nextToken
          title: NextToken
      title: ListClientVpcConnectionsResponse
      type: object
    ListVpcConnectionsResponse:
      example:
        VpcConnections: ""
        NextToken: ""
      properties:
        VpcConnections:
          allOf:
          - $ref: '#/components/schemas/__listOfVpcConnection'
          - description: "\n            <p>List of VPC connections.</p>\n         "
            xml:
              name: vpcConnections
          title: VpcConnections
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The paginated results marker. When the\
              \ result of a ListClientVpcConnections operation is truncated, the call\
              \ returns NextToken in the response. \n               To get another\
              \ batch of configurations, provide this token in your next request.</p>\n\
              \         "
            xml:
              name: nextToken
          title: NextToken
      title: ListVpcConnectionsResponse
      type: object
    RejectClientVpcConnectionResponse:
      properties: {}
      type: object
    PutClusterPolicyResponse:
      example:
        CurrentVersion: ""
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The policy version.</p>\n         "
            xml:
              name: currentVersion
          title: CurrentVersion
      title: PutClusterPolicyResponse
      type: object
    RebootBrokerResponse:
      example:
        ClusterArn: ""
        ClusterOperationArn: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
              \ operation.</p>\n         "
            xml:
              name: clusterOperationArn
          title: ClusterOperationArn
      title: RebootBrokerResponse
      type: object
    UpdateBrokerCountResponse:
      example:
        ClusterArn: ""
        ClusterOperationArn: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
              \ operation.</p>\n         "
            xml:
              name: clusterOperationArn
          title: ClusterOperationArn
      title: UpdateBrokerCountResponse
      type: object
    UpdateBrokerTypeResponse:
      example:
        ClusterArn: ""
        ClusterOperationArn: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
              \ operation.</p>\n         "
            xml:
              name: clusterOperationArn
          title: ClusterOperationArn
      title: UpdateBrokerTypeResponse
      type: object
    UpdateBrokerStorageResponse:
      example:
        ClusterArn: ""
        ClusterOperationArn: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
              \ operation.</p>\n         "
            xml:
              name: clusterOperationArn
          title: ClusterOperationArn
      title: UpdateBrokerStorageResponse
      type: object
    BrokerEBSVolumeInfo:
      description: "\n            <p>Specifies the EBS volume upgrade information.\
        \ The broker identifier must be set to the keyword ALL. This means the changes\
        \ apply to all the brokers in the cluster.</p>\n         "
      properties:
        KafkaBrokerNodeId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The ID of the broker to update.</p>\n \
              \        "
            xml:
              name: kafkaBrokerNodeId
          title: KafkaBrokerNodeId
        ProvisionedThroughput:
          $ref: '#/components/schemas/BrokerEBSVolumeInfo_ProvisionedThroughput'
        VolumeSizeGB:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "\n            <p>Size of the EBS volume to update.</p>\n\
              \         "
            xml:
              name: volumeSizeGB
          title: VolumeSizeGB
      required:
      - KafkaBrokerNodeId
      title: BrokerEBSVolumeInfo
      type: object
    UpdateConfigurationResponse:
      example:
        LatestRevision:
          Description: ""
          Revision: ""
          CreationTime: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the configuration.</p>\n\
              \         "
            xml:
              name: arn
          title: Arn
        LatestRevision:
          $ref: '#/components/schemas/CreateConfigurationResponse_LatestRevision'
      title: UpdateConfigurationResponse
      type: object
    UpdateConnectivityResponse:
      example:
        ClusterArn: ""
        ClusterOperationArn: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
              \ operation.</p>\n         "
            xml:
              name: clusterOperationArn
          title: ClusterOperationArn
      title: UpdateConnectivityResponse
      type: object
    PublicAccess:
      description: Public access control for brokers.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The value DISABLED indicates that public\
              \ access is turned off. SERVICE_PROVIDED_EIPS indicates that public\
              \ access is turned on.</p>\n         "
            xml:
              name: type
          title: Type
      title: PublicAccess
      type: object
    VpcConnectivity:
      description: VPC connectivity access control for brokers.
      properties:
        ClientAuthentication:
          $ref: '#/components/schemas/VpcConnectivity_ClientAuthentication'
      title: VpcConnectivity
      type: object
    UpdateClusterConfigurationResponse:
      example:
        ClusterArn: ""
        ClusterOperationArn: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
              \ operation.</p>\n         "
            xml:
              name: clusterOperationArn
          title: ClusterOperationArn
      title: UpdateClusterConfigurationResponse
      type: object
    UpdateClusterKafkaVersionResponse:
      example:
        ClusterArn: ""
        ClusterOperationArn: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \            "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
              \ operation.</p>\n            "
            xml:
              name: clusterOperationArn
          title: ClusterOperationArn
      title: UpdateClusterKafkaVersionResponse
      type: object
    UpdateMonitoringResponse:
      example:
        ClusterArn: ""
        ClusterOperationArn: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
              \ operation.</p>\n         "
            xml:
              name: clusterOperationArn
          title: ClusterOperationArn
      title: UpdateMonitoringResponse
      type: object
    UpdateSecurityResponse:
      example:
        ClusterArn: ""
        ClusterOperationArn: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
              \ operation.</p>\n         "
            xml:
              name: clusterOperationArn
          title: ClusterOperationArn
      title: UpdateSecurityResponse
      type: object
    UpdateStorageResponse:
      example:
        ClusterArn: ""
        ClusterOperationArn: ""
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster.</p>\n\
              \         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the cluster\
              \ operation.</p>\n         "
            xml:
              name: clusterOperationArn
          title: ClusterOperationArn
      title: UpdateStorageResponse
      type: object
    __boolean:
      type: boolean
    __integer:
      type: integer
    BatchAssociateScramSecretRequest:
      description: "\n            <p>Associates sasl scram secrets to cluster.</p>\n\
        \         "
      example:
        SecretArnList: ""
      properties:
        SecretArnList:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>List of AWS Secrets Manager secret ARNs.</p>\n\
              \         "
            xml:
              name: secretArnList
      required:
      - SecretArnList
      title: BatchAssociateScramSecretRequest
      type: object
    __listOfUnprocessedScramSecret:
      items:
        $ref: '#/components/schemas/UnprocessedScramSecret'
      type: array
    ProvisionedThroughput:
      description: "\n            <p>Contains information about provisioned throughput\
        \ for EBS storage volumes attached to kafka broker nodes.</p>\n         "
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>Provisioned throughput is enabled or not.</p>\n\
              \         "
            xml:
              name: enabled
          title: Enabled
        VolumeThroughput:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "\n            <p>Throughput value of the EBS volumes for\
              \ the data drive on each kafka broker node in MiB per second.</p>\n\
              \         "
            xml:
              name: volumeThroughput
          title: VolumeThroughput
      title: ProvisionedThroughput
      type: object
    CloudWatchLogs:
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - xml:
              name: enabled
          title: Enabled
        LogGroup:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: logGroup
          title: LogGroup
      required:
      - Enabled
      title: CloudWatchLogs
      type: object
    Firehose:
      properties:
        DeliveryStream:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: deliveryStream
          title: DeliveryStream
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - xml:
              name: enabled
          title: Enabled
      required:
      - Enabled
      title: Firehose
      type: object
    S3:
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: bucket
          title: Bucket
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - xml:
              name: enabled
          title: Enabled
        Prefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: prefix
          title: Prefix
      required:
      - Enabled
      title: S3
      type: object
    __double:
      format: double
      type: number
    BrokerSoftwareInfo:
      description: "\n            <p>Information about the current software installed\
        \ on the cluster.</p>\n         "
      properties:
        ConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the configuration\
              \ used for the cluster. This field isn't visible in this preview release.</p>\n\
              \         "
            xml:
              name: configurationArn
          title: ConfigurationArn
        ConfigurationRevision:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: "\n            <p>The revision of the configuration to use.\
              \ This field isn't visible in this preview release.</p>\n         "
            xml:
              name: configurationRevision
          title: ConfigurationRevision
        KafkaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The version of Apache Kafka.</p>\n    \
              \     "
            xml:
              name: kafkaVersion
          title: KafkaVersion
      title: BrokerSoftwareInfo
      type: object
    BrokerNodeInfo:
      description: "\n            <p>BrokerNodeInfo</p>\n         "
      properties:
        AttachedENIId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The attached elastic network interface\
              \ of the broker.</p>\n         "
            xml:
              name: attachedENIId
          title: AttachedENIId
        BrokerId:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: "\n            <p>The ID of the broker.</p>\n         "
            xml:
              name: brokerId
          title: BrokerId
        ClientSubnet:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The client subnet to which this broker\
              \ node belongs.</p>\n         "
            xml:
              name: clientSubnet
          title: ClientSubnet
        ClientVpcIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The virtual private cloud (VPC) of the\
              \ client.</p>\n         "
            xml:
              name: clientVpcIpAddress
          title: ClientVpcIpAddress
        CurrentBrokerSoftwareInfo:
          $ref: '#/components/schemas/BrokerNodeInfo_CurrentBrokerSoftwareInfo'
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>Endpoints for accessing the broker.</p>\n\
              \         "
            xml:
              name: endpoints
          title: Endpoints
      title: BrokerNodeInfo
      type: object
    VpcConnectivitySasl:
      description: "\n            <p>Details for SASL client authentication for VPC\
        \ connectivity.</p>\n         "
      properties:
        Scram:
          $ref: '#/components/schemas/VpcConnectivitySasl_Scram'
        Iam:
          $ref: '#/components/schemas/VpcConnectivitySasl_Iam'
      title: VpcConnectivitySasl
      type: object
    VpcConnectivityTls:
      description: "\n            <p>Details for TLS client authentication for VPC\
        \ connectivity.</p>\n         "
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>TLS authentication is on or off for VPC\
              \ connectivity.</p>\n         "
            xml:
              name: enabled
          title: Enabled
      title: VpcConnectivityTls
      type: object
    VpcConnectivityClientAuthentication:
      description: "\n            <p>Includes all client authentication information\
        \ for VPC connectivity.</p>\n         "
      properties:
        Sasl:
          $ref: '#/components/schemas/VpcConnectivityClientAuthentication_Sasl'
        Tls:
          $ref: '#/components/schemas/VpcConnectivityClientAuthentication_Tls'
      title: VpcConnectivityClientAuthentication
      type: object
    ServerlessSasl:
      description: "\n            <p>Details for client authentication using SASL.</p>\n\
        \         "
      properties:
        Iam:
          $ref: '#/components/schemas/Sasl_Iam'
      title: ServerlessSasl
      type: object
    ClientBroker:
      description: "\n            <p>Client-broker encryption in transit setting.</p>\n\
        \         "
      enum:
      - TLS
      - TLS_PLAINTEXT
      - PLAINTEXT
      title: ClientBroker
      type: string
    __timestampIso8601:
      format: date-time
      type: string
    OpenMonitoring:
      description: "\n            <p>JMX and Node monitoring for the MSK cluster.</p>\n\
        \         "
      properties:
        Prometheus:
          $ref: '#/components/schemas/OpenMonitoring_Prometheus'
      required:
      - Prometheus
      title: OpenMonitoring
      type: object
    ClusterState:
      description: "\n            <p>The state of the Apache Kafka cluster.</p>\n\
        \         "
      enum:
      - ACTIVE
      - CREATING
      - DELETING
      - FAILED
      - HEALING
      - MAINTENANCE
      - REBOOTING_BROKER
      - UPDATING
      title: ClusterState
      type: string
    StateInfo:
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: code
          title: Code
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: message
          title: Message
      title: StateInfo
      type: object
    __mapOf__string:
      additionalProperties:
        $ref: '#/components/schemas/__string'
      type: object
    ClusterInfo:
      description: "\n            <p>Returns information about a cluster.</p>\n  \
        \       "
      properties:
        ActiveOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>Arn of active cluster operation.</p>\n\
              \         "
            xml:
              name: activeOperationArn
          title: ActiveOperationArn
        BrokerNodeGroupInfo:
          $ref: '#/components/schemas/ClusterInfo_BrokerNodeGroupInfo'
        ClientAuthentication:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_ClientAuthentication'
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
              \ identifies the cluster.</p>\n         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The name of the cluster.</p>\n         "
            xml:
              name: clusterName
          title: ClusterName
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The time when the cluster was created.</p>\n\
              \         "
            xml:
              name: creationTime
          title: CreationTime
        CurrentBrokerSoftwareInfo:
          $ref: '#/components/schemas/BrokerNodeInfo_CurrentBrokerSoftwareInfo'
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The current version of the MSK cluster.</p>\n\
              \         "
            xml:
              name: currentVersion
          title: CurrentVersion
        EncryptionInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_EncryptionInfo'
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          - description: "\n            <p>Specifies which metrics are gathered for\
              \ the MSK cluster. This property has the following possible values:\
              \ DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION.\
              \ For a list of the metrics associated with each of these levels of\
              \ monitoring, see <a href=\"https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html\"\
              >Monitoring</a>.</p>\n         "
            xml:
              name: enhancedMonitoring
          title: EnhancedMonitoring
        OpenMonitoring:
          $ref: '#/components/schemas/ClusterInfo_OpenMonitoring'
        LoggingInfo:
          $ref: '#/components/schemas/ClusterInfo_LoggingInfo'
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "\n            <p>The number of broker nodes in the cluster.</p>\n\
              \         "
            xml:
              name: numberOfBrokerNodes
          title: NumberOfBrokerNodes
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          - description: "\n            <p>The state of the cluster. The possible\
              \ states are ACTIVE, CREATING, DELETING, FAILED, HEALING, MAINTENANCE,\
              \ REBOOTING_BROKER, and UPDATING.</p>\n         "
            xml:
              name: state
          title: State
        StateInfo:
          $ref: '#/components/schemas/ClusterInfo_StateInfo'
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "\n            <p>Tags attached to the cluster.</p>\n   \
              \      "
            xml:
              name: tags
          title: Tags
        ZookeeperConnectString:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The connection string to use to connect\
              \ to the Apache ZooKeeper cluster.</p>\n         "
            xml:
              name: zookeeperConnectString
          title: ZookeeperConnectString
        ZookeeperConnectStringTls:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The connection string to use to connect\
              \ to zookeeper cluster on Tls port.</p>\n         "
            xml:
              name: zookeeperConnectStringTls
          title: ZookeeperConnectStringTls
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          - description: "\n            <p>This controls storage mode for supported\
              \ storage tiers.</p>\n         "
            xml:
              name: storageMode
          title: StorageMode
      title: ClusterInfo
      type: object
    ClusterType:
      description: "\n            <p>The type of cluster.</p>\n         "
      enum:
      - PROVISIONED
      - SERVERLESS
      title: ClusterType
      type: string
    Provisioned:
      description: "\n            <p>Provisioned cluster.</p>\n         "
      properties:
        BrokerNodeGroupInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_BrokerNodeGroupInfo'
        CurrentBrokerSoftwareInfo:
          $ref: '#/components/schemas/Provisioned_CurrentBrokerSoftwareInfo'
        ClientAuthentication:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_ClientAuthentication'
        EncryptionInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_EncryptionInfo'
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          - description: "\n            <p>Specifies the level of monitoring for the\
              \ MSK cluster. The possible values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER,\
              \ and PER_TOPIC_PER_PARTITION.</p>\n         "
            xml:
              name: enhancedMonitoring
          title: EnhancedMonitoring
        OpenMonitoring:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_OpenMonitoring'
        LoggingInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_LoggingInfo'
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max15'
          - description: "\n            <p>The number of broker nodes in the cluster.</p>\n\
              \         "
            xml:
              name: numberOfBrokerNodes
          title: NumberOfBrokerNodes
        ZookeeperConnectString:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The connection string to use to connect\
              \ to the Apache ZooKeeper cluster.</p>\n         "
            xml:
              name: zookeeperConnectString
          title: ZookeeperConnectString
        ZookeeperConnectStringTls:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The connection string to use to connect\
              \ to the Apache ZooKeeper cluster on a TLS port.</p>\n         "
            xml:
              name: zookeeperConnectStringTls
          title: ZookeeperConnectStringTls
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          - description: "\n            <p>This controls storage mode for supported\
              \ storage tiers.</p>\n         "
            xml:
              name: storageMode
          title: StorageMode
      required:
      - BrokerNodeGroupInfo
      - NumberOfBrokerNodes
      title: Provisioned
      type: object
    Serverless:
      description: "\n            <p>Serverless cluster.</p>\n         "
      properties:
        VpcConfigs:
          allOf:
          - $ref: '#/components/schemas/__listOfVpcConfig'
          - description: "\n            <p>The configuration of the Amazon VPCs for\
              \ the cluster.</p>\n         "
            xml:
              name: vpcConfigs
          title: VpcConfigs
        ClientAuthentication:
          $ref: '#/components/schemas/CreateClusterV2_request_serverless_ClientAuthentication'
      required:
      - VpcConfigs
      title: Serverless
      type: object
    Cluster:
      description: "\n            <p>Returns information about a cluster.</p>\n  \
        \       "
      properties:
        ActiveOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
              \ identifies a cluster operation.</p>\n         "
            xml:
              name: activeOperationArn
          title: ActiveOperationArn
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          - description: "\n            <p>Cluster Type.</p>\n         "
            xml:
              name: clusterType
          title: ClusterType
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) that uniquely\
              \ identifies the cluster.</p>\n         "
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The name of the cluster.</p>\n         "
            xml:
              name: clusterName
          title: ClusterName
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The time when the cluster was created.</p>\n\
              \         "
            xml:
              name: creationTime
          title: CreationTime
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The current version of the MSK cluster.</p>\n\
              \         "
            xml:
              name: currentVersion
          title: CurrentVersion
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          - description: "\n            <p>The state of the cluster. The possible\
              \ states are ACTIVE, CREATING, DELETING, FAILED, HEALING, MAINTENANCE,\
              \ REBOOTING_BROKER, and UPDATING.</p>\n         "
            xml:
              name: state
          title: State
        StateInfo:
          $ref: '#/components/schemas/Cluster_StateInfo'
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "\n            <p>Tags attached to the cluster.</p>\n   \
              \      "
            xml:
              name: tags
          title: Tags
        Provisioned:
          $ref: '#/components/schemas/Cluster_Provisioned'
        Serverless:
          $ref: '#/components/schemas/Cluster_Serverless'
      title: Cluster
      type: object
    ErrorInfo:
      description: "\n            <p>Returns information about an error state of the\
        \ cluster.</p>\n         "
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A number describing the error programmatically.</p>\n\
              \         "
            xml:
              name: errorCode
          title: ErrorCode
        ErrorString:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>An optional field to provide more details\
              \ about the error.</p>\n         "
            xml:
              name: errorString
          title: ErrorString
      title: ErrorInfo
      type: object
    __listOfClusterOperationStep:
      items:
        $ref: '#/components/schemas/ClusterOperationStep'
      type: array
    MutableClusterInfo:
      description: "\n            <p>Information about cluster attributes that can\
        \ be updated via update APIs.</p>\n         "
      properties:
        BrokerEBSVolumeInfo:
          allOf:
          - $ref: '#/components/schemas/__listOfBrokerEBSVolumeInfo'
          - description: "\n            <p>Specifies the size of the EBS volume and\
              \ the ID of the associated broker.</p>\n         "
            xml:
              name: brokerEBSVolumeInfo
          title: BrokerEBSVolumeInfo
        ConfigurationInfo:
          $ref: '#/components/schemas/MutableClusterInfo_ConfigurationInfo'
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "\n            <p>The number of broker nodes in the cluster.</p>\n\
              \         "
            xml:
              name: numberOfBrokerNodes
          title: NumberOfBrokerNodes
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          - description: "\n            <p>Specifies which Apache Kafka metrics Amazon\
              \ MSK gathers and sends to Amazon CloudWatch for this cluster.</p>\n\
              \         "
            xml:
              name: enhancedMonitoring
          title: EnhancedMonitoring
        OpenMonitoring:
          $ref: '#/components/schemas/MutableClusterInfo_OpenMonitoring'
        KafkaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Apache Kafka version.</p>\n       \
              \     "
            xml:
              name: kafkaVersion
          title: KafkaVersion
        LoggingInfo:
          $ref: '#/components/schemas/MutableClusterInfo_LoggingInfo'
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/__stringMin5Max32'
          - description: "\n            <p>Information about the Amazon MSK broker\
              \ type.</p>\n            "
            xml:
              name: instanceType
          title: InstanceType
        ClientAuthentication:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_ClientAuthentication'
        EncryptionInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_EncryptionInfo'
        ConnectivityInfo:
          $ref: '#/components/schemas/CreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo'
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          - description: "\n            <p>This controls storage mode for supported\
              \ storage tiers.</p>\n         "
            xml:
              name: storageMode
          title: StorageMode
      title: MutableClusterInfo
      type: object
    VpcConnectionInfo:
      description: "\n            <p>Description of the VPC connection.</p>\n    \
        \     "
      properties:
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the VPC\
              \ connection.</p>\n         "
            xml:
              name: vpcConnectionArn
          title: VpcConnectionArn
        Owner:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The owner of the VPC Connection.</p>\n\
              \         "
            xml:
              name: owner
          title: Owner
        UserIdentity:
          $ref: '#/components/schemas/VpcConnectionInfo_UserIdentity'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The time when Amazon MSK creates the VPC\
              \ Connnection.</p>\n         "
            xml:
              name: creationTime
          title: CreationTime
      title: VpcConnectionInfo
      type: object
    ClusterOperationInfo:
      description: "\n            <p>Returns information about a cluster operation.</p>\n\
        \         "
      properties:
        ClientRequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The ID of the API request that triggered\
              \ this operation.</p>\n         "
            xml:
              name: clientRequestId
          title: ClientRequestId
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>ARN of the cluster.</p>\n         "
            xml:
              name: clusterArn
          title: ClusterArn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The time that the operation was created.</p>\n\
              \         "
            xml:
              name: creationTime
          title: CreationTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The time at which the operation finished.</p>\n\
              \         "
            xml:
              name: endTime
          title: EndTime
        ErrorInfo:
          $ref: '#/components/schemas/ClusterOperationInfo_ErrorInfo'
        OperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>ARN of the cluster operation.</p>\n   \
              \      "
            xml:
              name: operationArn
          title: OperationArn
        OperationState:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>State of the cluster operation.</p>\n \
              \        "
            xml:
              name: operationState
          title: OperationState
        OperationSteps:
          allOf:
          - $ref: '#/components/schemas/__listOfClusterOperationStep'
          - description: "\n            <p>Steps completed during the operation.</p>\n\
              \         "
            xml:
              name: operationSteps
          title: OperationSteps
        OperationType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>Type of the cluster operation.</p>\n  \
              \       "
            xml:
              name: operationType
          title: OperationType
        SourceClusterInfo:
          $ref: '#/components/schemas/ClusterOperationInfo_SourceClusterInfo'
        TargetClusterInfo:
          $ref: '#/components/schemas/ClusterOperationInfo_TargetClusterInfo'
        VpcConnectionInfo:
          $ref: '#/components/schemas/ClusterOperationInfo_VpcConnectionInfo'
      title: ClusterOperationInfo
      type: object
    ClusterOperationStepInfo:
      description: "\n            <p>State information about the operation step.</p>\n\
        \         "
      properties:
        StepStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The steps current status.</p>\n       \
              \  "
            xml:
              name: stepStatus
          title: StepStatus
      title: ClusterOperationStepInfo
      type: object
    ClusterOperationStep:
      description: "\n            <p>Step taken during a cluster operation.</p>\n\
        \         "
      properties:
        StepInfo:
          $ref: '#/components/schemas/ClusterOperationStep_StepInfo'
        StepName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The name of the step.</p>\n         "
            xml:
              name: stepName
          title: StepName
      title: ClusterOperationStep
      type: object
    ProvisionedRequest:
      description: "\n            <p>Provisioned cluster request.</p>\n         "
      properties:
        BrokerNodeGroupInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_BrokerNodeGroupInfo'
        ClientAuthentication:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_ClientAuthentication'
        ConfigurationInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_ConfigurationInfo'
        EncryptionInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_EncryptionInfo'
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          - description: "\n            <p>Specifies the level of monitoring for the\
              \ MSK cluster. The possible values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER,\
              \ and PER_TOPIC_PER_PARTITION.</p>\n         "
            xml:
              name: enhancedMonitoring
          title: EnhancedMonitoring
        OpenMonitoring:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_OpenMonitoring'
        KafkaVersion:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max128'
          - description: "\n            <p>The Apache Kafka version that you want\
              \ for the cluster.</p>\n         "
            xml:
              name: kafkaVersion
          title: KafkaVersion
        LoggingInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_LoggingInfo'
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max15'
          - description: "\n            <p>The number of broker nodes in the cluster.</p>\n\
              \         "
            xml:
              name: numberOfBrokerNodes
          title: NumberOfBrokerNodes
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          - description: "\n            <p>This controls storage mode for supported\
              \ storage tiers.</p>\n         "
            xml:
              name: storageMode
          title: StorageMode
      required:
      - BrokerNodeGroupInfo
      - KafkaVersion
      - NumberOfBrokerNodes
      title: ProvisionedRequest
      type: object
    VpcConfig:
      description: "\n            <p>The configuration of the Amazon VPCs for the\
        \ cluster.</p>\n         "
      properties:
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The IDs of the subnets associated with\
              \ the cluster.</p>\n         "
            xml:
              name: subnetIds
          title: SubnetIds
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The IDs of the security groups associated\
              \ with the cluster.</p>\n         "
            xml:
              name: securityGroupIds
          title: SecurityGroupIds
      required:
      - SubnetIds
      title: VpcConfig
      type: object
    ServerlessRequest:
      description: "\n            <p>Serverless cluster request.</p>\n         "
      properties:
        VpcConfigs:
          allOf:
          - $ref: '#/components/schemas/__listOfVpcConfig'
          - description: "\n            <p>The configuration of the Amazon VPCs for\
              \ the cluster.</p>\n         "
            xml:
              name: vpcConfigs
          title: VpcConfigs
        ClientAuthentication:
          $ref: '#/components/schemas/CreateClusterV2_request_serverless_ClientAuthentication'
      required:
      - VpcConfigs
      title: ServerlessRequest
      type: object
    VpcConnectionState:
      description: "\n            <p>The state of a VPC connection.</p>\n         "
      enum:
      - CREATING
      - AVAILABLE
      - INACTIVE
      - DEACTIVATING
      - DELETING
      - FAILED
      - REJECTED
      - REJECTING
      title: VpcConnectionState
      type: string
    ClientVpcConnection:
      description: "\n            <p>The client VPC connection object.</p>\n     \
        \    "
      properties:
        Authentication:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>Information about the auth scheme of Vpc\
              \ Connection.</p>\n         "
            xml:
              name: authentication
          title: Authentication
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>Creation time of the Vpc Connection.</p>\n\
              \         "
            xml:
              name: creationTime
          title: CreationTime
        State:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionState'
          - description: "\n            <p>State of the Vpc Connection.</p>\n    \
              \     "
            xml:
              name: state
          title: State
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The ARN that identifies the Vpc Connection.</p>\n\
              \         "
            xml:
              name: vpcConnectionArn
          title: VpcConnectionArn
        Owner:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Owner of the Vpc Connection.</p>\n\
              \         "
            xml:
              name: owner
          title: Owner
      required:
      - VpcConnectionArn
      title: ClientVpcConnection
      type: object
    VpcConnection:
      description: "\n            <p>The VPC connection object.</p>\n         "
      properties:
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The ARN that identifies the Vpc Connection.</p>\n\
              \         "
            xml:
              name: vpcConnectionArn
          title: VpcConnectionArn
        TargetClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The ARN that identifies the Cluster which\
              \ the Vpc Connection belongs to.</p>\n         "
            xml:
              name: targetClusterArn
          title: TargetClusterArn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>Creation time of the Vpc Connection.</p>\n\
              \         "
            xml:
              name: creationTime
          title: CreationTime
        Authentication:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>Information about the auth scheme of Vpc\
              \ Connection.</p>\n         "
            xml:
              name: authentication
          title: Authentication
        VpcId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The vpcId that belongs to the Vpc Connection.</p>\n\
              \         "
            xml:
              name: vpcId
          title: VpcId
        State:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionState'
          - description: "\n            <p>State of the Vpc Connection.</p>\n    \
              \     "
            xml:
              name: state
          title: State
      required:
      - TargetClusterArn
      - VpcConnectionArn
      title: VpcConnection
      type: object
    CompatibleKafkaVersion:
      description: "\n            <p>Contains source Apache Kafka versions and compatible\
        \ target Apache Kafka versions.</p>\n        "
      properties:
        SourceVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>An Apache Kafka version.</p>\n        \
              \    "
            xml:
              name: sourceVersion
          title: SourceVersion
        TargetVersions:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>A list of Apache Kafka versions.</p>\n\
              \            "
            xml:
              name: targetVersions
          title: TargetVersions
      title: CompatibleKafkaVersion
      type: object
    ConfigurationRevision:
      description: "\n            <p>Describes a configuration revision.</p>\n   \
        \      "
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The time when the configuration revision\
              \ was created.</p>\n         "
            xml:
              name: creationTime
          title: CreationTime
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The description of the configuration revision.</p>\n\
              \         "
            xml:
              name: description
          title: Description
        Revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: "\n            <p>The revision number.</p>\n         "
            xml:
              name: revision
          title: Revision
      required:
      - CreationTime
      - Revision
      title: ConfigurationRevision
      type: object
    ConfigurationState:
      description: "\n            <p>The state of a configuration.</p>\n         "
      enum:
      - ACTIVE
      - DELETING
      - DELETE_FAILED
      title: ConfigurationState
      type: string
    Configuration:
      description: "\n            <p>Represents an MSK Configuration.</p>\n      \
        \   "
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the configuration.</p>\n\
              \         "
            xml:
              name: arn
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "\n            <p>The time when the configuration was created.</p>\n\
              \         "
            xml:
              name: creationTime
          title: CreationTime
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The description of the configuration.</p>\n\
              \         "
            xml:
              name: description
          title: Description
        KafkaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>An array of the versions of Apache Kafka\
              \ with which you can use this MSK configuration. You can use this configuration\
              \ for an MSK cluster only if the Apache Kafka version specified for\
              \ the cluster appears in this array.</p>\n         "
            xml:
              name: kafkaVersions
          title: KafkaVersions
        LatestRevision:
          $ref: '#/components/schemas/CreateConfigurationResponse_LatestRevision'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The name of the configuration.</p>\n  \
              \       "
            xml:
              name: name
          title: Name
        State:
          allOf:
          - $ref: '#/components/schemas/ConfigurationState'
          - description: "\n            <p>The state of the configuration. The possible\
              \ states are ACTIVE, DELETING, and DELETE_FAILED. </p>\n         "
            xml:
              name: state
          title: State
      required:
      - Arn
      - CreationTime
      - Description
      - KafkaVersions
      - LatestRevision
      - Name
      - State
      title: Configuration
      type: object
    __stringMin1Max64:
      maxLength: 64
      minLength: 1
      type: string
    CreateClusterV2Request:
      example:
        ClusterName: ""
        Serverless:
          VpcConfigs: ""
          ClientAuthentication:
            Sasl:
              Iam:
                Enabled: ""
        Tags: ""
        Provisioned:
          BrokerNodeGroupInfo:
            SecurityGroups: ""
            ClientSubnets: ""
            ConnectivityInfo:
              VpcConnectivity:
                ClientAuthentication:
                  Sasl:
                    Iam:
                      Enabled: ""
                    Scram:
                      Enabled: ""
                  Tls:
                    Enabled: ""
              PublicAccess:
                Type: ""
            StorageInfo:
              EbsStorageInfo:
                ProvisionedThroughput:
                  VolumeThroughput: ""
                  Enabled: ""
                VolumeSize: ""
            BrokerAZDistribution: ""
            ZoneIds: ""
            InstanceType: ""
          EnhancedMonitoring: ""
          KafkaVersion: ""
          NumberOfBrokerNodes: ""
          EncryptionInfo:
            EncryptionAtRest:
              DataVolumeKMSKeyId: ""
            EncryptionInTransit:
              ClientBroker: ""
              InCluster: ""
          OpenMonitoring:
            Prometheus:
              JmxExporter:
                EnabledInBroker: ""
              NodeExporter:
                EnabledInBroker: ""
          StorageMode: ""
          ClientAuthentication:
            Sasl:
              Iam:
                Enabled: ""
              Scram:
                Enabled: ""
            Unauthenticated:
              Enabled: ""
            Tls:
              Enabled: ""
              CertificateAuthorityArnList: ""
          LoggingInfo:
            BrokerLogs:
              S3:
                Bucket: ""
                Enabled: ""
                Prefix: ""
              Firehose:
                DeliveryStream: ""
                Enabled: ""
              CloudWatchLogs:
                LogGroup: ""
                Enabled: ""
          ConfigurationInfo:
            Revision: ""
            Arn: ""
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64'
          - description: "\n            <p>The name of the cluster.</p>\n         "
            xml:
              name: clusterName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "\n            <p>A map of tags that you want the cluster\
              \ to have.</p>\n         "
            xml:
              name: tags
        Provisioned:
          $ref: '#/components/schemas/CreateClusterV2Request_Provisioned'
        Serverless:
          $ref: '#/components/schemas/CreateClusterV2Request_Serverless'
      required:
      - ClusterName
      title: CreateClusterV2Request
      type: object
    CreateClusterRequest:
      example:
        BrokerNodeGroupInfo:
          SecurityGroups: ""
          ClientSubnets: ""
          ConnectivityInfo:
            VpcConnectivity:
              ClientAuthentication:
                Sasl:
                  Iam:
                    Enabled: ""
                  Scram:
                    Enabled: ""
                Tls:
                  Enabled: ""
            PublicAccess:
              Type: ""
          StorageInfo:
            EbsStorageInfo:
              ProvisionedThroughput:
                VolumeThroughput: ""
                Enabled: ""
              VolumeSize: ""
          BrokerAZDistribution: ""
          ZoneIds: ""
          InstanceType: ""
        EnhancedMonitoring: ""
        KafkaVersion: ""
        NumberOfBrokerNodes: ""
        EncryptionInfo:
          EncryptionAtRest:
            DataVolumeKMSKeyId: ""
          EncryptionInTransit:
            ClientBroker: ""
            InCluster: ""
        OpenMonitoring:
          Prometheus:
            JmxExporter:
              EnabledInBroker: ""
            NodeExporter:
              EnabledInBroker: ""
        ClusterName: ""
        StorageMode: ""
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
            Scram:
              Enabled: ""
          Unauthenticated:
            Enabled: ""
          Tls:
            Enabled: ""
            CertificateAuthorityArnList: ""
        LoggingInfo:
          BrokerLogs:
            S3:
              Bucket: ""
              Enabled: ""
              Prefix: ""
            Firehose:
              DeliveryStream: ""
              Enabled: ""
            CloudWatchLogs:
              LogGroup: ""
              Enabled: ""
        Tags: ""
        ConfigurationInfo:
          Revision: ""
          Arn: ""
      properties:
        BrokerNodeGroupInfo:
          $ref: '#/components/schemas/CreateClusterRequest_BrokerNodeGroupInfo'
        ClientAuthentication:
          $ref: '#/components/schemas/CreateClusterRequest_ClientAuthentication'
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64'
          - description: "\n            <p>The name of the cluster.</p>\n         "
            xml:
              name: clusterName
        ConfigurationInfo:
          $ref: '#/components/schemas/CreateClusterRequest_ConfigurationInfo'
        EncryptionInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_EncryptionInfo'
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          - description: "\n            <p>Specifies the level of monitoring for the\
              \ MSK cluster. The possible values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER,\
              \ and PER_TOPIC_PER_PARTITION.</p>\n         "
            xml:
              name: enhancedMonitoring
        OpenMonitoring:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_OpenMonitoring'
        KafkaVersion:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max128'
          - description: "\n            <p>The version of Apache Kafka.</p>\n    \
              \     "
            xml:
              name: kafkaVersion
        LoggingInfo:
          $ref: '#/components/schemas/ClusterInfo_LoggingInfo'
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max15'
          - description: "\n            <p>The number of broker nodes in the cluster.</p>\n\
              \         "
            xml:
              name: numberOfBrokerNodes
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "\n            <p>Create tags when creating the cluster.</p>\n\
              \         "
            xml:
              name: tags
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          - description: "\n            <p>This controls storage mode for supported\
              \ storage tiers.</p>\n         "
            xml:
              name: storageMode
      required:
      - BrokerNodeGroupInfo
      - ClusterName
      - KafkaVersion
      - NumberOfBrokerNodes
      title: CreateClusterRequest
      type: object
    __blob:
      type: string
    CreateConfigurationRequest:
      example:
        Description: ""
        ServerProperties: ""
        KafkaVersions: ""
        Name: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The description of the configuration.</p>\n\
              \         "
            xml:
              name: description
        KafkaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The versions of Apache Kafka with which\
              \ you can use this MSK configuration.</p>\n         "
            xml:
              name: kafkaVersions
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The name of the configuration.</p>\n  \
              \       "
            xml:
              name: name
        ServerProperties:
          allOf:
          - $ref: '#/components/schemas/__blob'
          - description: "\n            <p>Contents of the <filename>server.properties</filename>\
              \ file. When using the API, you must ensure that the contents of the\
              \ file are base64 encoded. \n               When using the AWS Management\
              \ Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename>\
              \ can be in plaintext.</p>\n         "
            xml:
              name: serverProperties
      required:
      - Name
      - ServerProperties
      title: CreateConfigurationRequest
      type: object
    CreateVpcConnectionRequest:
      example:
        SecurityGroups: ""
        TargetClusterArn: ""
        ClientSubnets: ""
        VpcId: ""
        Authentication: ""
        Tags: ""
      properties:
        TargetClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The cluster Amazon Resource Name (ARN)\
              \ for the VPC connection.</p>\n         "
            xml:
              name: targetClusterArn
        Authentication:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The authentication type of VPC connection.</p>\n\
              \         "
            xml:
              name: authentication
        VpcId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The VPC ID of VPC connection.</p>\n   \
              \      "
            xml:
              name: vpcId
        ClientSubnets:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of client subnets.</p>\n     \
              \    "
            xml:
              name: clientSubnets
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of security groups.</p>\n    \
              \     "
            xml:
              name: securityGroups
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "\n            <p>A map of tags for the VPC connection.</p>\n\
              \         "
            xml:
              name: tags
      required:
      - Authentication
      - ClientSubnets
      - SecurityGroups
      - TargetClusterArn
      - VpcId
      title: CreateVpcConnectionRequest
      type: object
    ClusterOperationV2Provisioned:
      description: |2-

                    <p>Returns information about a provisioned cluster operation.</p>
      properties:
        OperationSteps:
          allOf:
          - $ref: '#/components/schemas/__listOfClusterOperationStep'
          - description: |2-

                          <p>Steps completed during the operation.</p>
            xml:
              name: operationSteps
          title: OperationSteps
        SourceClusterInfo:
          $ref: '#/components/schemas/ClusterOperationV2Provisioned_SourceClusterInfo'
        TargetClusterInfo:
          $ref: '#/components/schemas/ClusterOperationV2Provisioned_TargetClusterInfo'
        VpcConnectionInfo:
          $ref: '#/components/schemas/ClusterOperationV2Provisioned_VpcConnectionInfo'
      title: ClusterOperationV2Provisioned
      type: object
    ClusterOperationV2Serverless:
      description: |2-

                    <p>Returns information about a serverless cluster operation.</p>
      properties:
        VpcConnectionInfo:
          $ref: '#/components/schemas/ClusterOperationV2Serverless_VpcConnectionInfo'
      title: ClusterOperationV2Serverless
      type: object
    ClusterOperationV2:
      description: |2-

                    <p>Returns information about a cluster operation.</p>
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |2-

                          <p>ARN of the cluster.</p>
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          - description: |2-

                          <p>Type of the backend cluster.</p>
            xml:
              name: clusterType
          title: ClusterType
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: |2-

                          <p>The time at which operation was started.</p>
            xml:
              name: startTime
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: |2-

                          <p>The time at which the operation finished.</p>
            xml:
              name: endTime
          title: EndTime
        ErrorInfo:
          $ref: '#/components/schemas/ClusterOperationV2_ErrorInfo'
        OperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |2-

                          <p>ARN of the cluster operation.</p>
            xml:
              name: operationArn
          title: OperationArn
        OperationState:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |2-

                          <p>State of the cluster operation.</p>
            xml:
              name: operationState
          title: OperationState
        OperationType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |2-

                          <p>Type of the cluster operation.</p>
            xml:
              name: operationType
          title: OperationType
        Provisioned:
          $ref: '#/components/schemas/ClusterOperationV2_Provisioned'
        Serverless:
          $ref: '#/components/schemas/ClusterOperationV2_Serverless'
      title: ClusterOperationV2
      type: object
    VpcConnectionInfoServerless:
      description: Description of the VPC connection.
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: |2-

                          <p>The time when Amazon MSK creates the VPC Connnection.</p>
            xml:
              name: creationTime
          title: CreationTime
        Owner:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |2-

                          <p>The owner of the VPC Connection.</p>
            xml:
              name: owner
          title: Owner
        UserIdentity:
          $ref: '#/components/schemas/VpcConnectionInfoServerless_UserIdentity'
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the VPC connection.</p>
            xml:
              name: vpcConnectionArn
          title: VpcConnectionArn
      title: VpcConnectionInfoServerless
      type: object
    ClusterOperationV2Summary:
      description: |2-

                    <p>Returns information about a cluster operation.</p>
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |2-

                          <p>ARN of the cluster.</p>
            xml:
              name: clusterArn
          title: ClusterArn
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          - description: |2-

                          <p>Type of the backend cluster.</p>
            xml:
              name: clusterType
          title: ClusterType
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: |2-

                          <p>The time at which operation was started.</p>
            xml:
              name: startTime
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: |2-

                          <p>The time at which the operation finished.</p>
            xml:
              name: endTime
          title: EndTime
        OperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |2-

                          <p>ARN of the cluster operation.</p>
            xml:
              name: operationArn
          title: OperationArn
        OperationState:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |2-

                          <p>State of the cluster operation.</p>
            xml:
              name: operationState
          title: OperationState
        OperationType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |2-

                          <p>Type of the cluster operation.</p>
            xml:
              name: operationType
          title: OperationType
      title: ClusterOperationV2Summary
      type: object
    DeleteClusterRequest:
      properties: {}
      title: DeleteClusterRequest
      type: object
    DeleteClusterPolicyRequest:
      properties: {}
      title: DeleteClusterPolicyRequest
      type: object
    DeleteConfigurationRequest:
      properties: {}
      title: DeleteConfigurationRequest
      type: object
    DeleteVpcConnectionRequest:
      properties: {}
      title: DeleteVpcConnectionRequest
      type: object
    DescribeClusterOperationRequest:
      properties: {}
      title: DescribeClusterOperationRequest
      type: object
    DescribeClusterOperationV2Request:
      properties: {}
      title: DescribeClusterOperationV2Request
      type: object
    DescribeClusterRequest:
      properties: {}
      title: DescribeClusterRequest
      type: object
    DescribeClusterV2Request:
      properties: {}
      title: DescribeClusterV2Request
      type: object
    DescribeConfigurationRequest:
      properties: {}
      title: DescribeConfigurationRequest
      type: object
    DescribeConfigurationRevisionRequest:
      properties: {}
      title: DescribeConfigurationRevisionRequest
      type: object
    DescribeVpcConnectionRequest:
      properties: {}
      title: DescribeVpcConnectionRequest
      type: object
    BatchDisassociateScramSecretRequest:
      description: "\n            <p>Disassociates sasl scram secrets to cluster.</p>\n\
        \         "
      properties:
        SecretArnList:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>List of AWS Secrets Manager secret ARNs.</p>\n\
              \         "
            xml:
              name: secretArnList
      required:
      - SecretArnList
      title: BatchDisassociateScramSecretRequest
      type: object
    __integerMin1Max16384:
      maximum: 16384
      minimum: 1
      type: integer
    EBSStorageInfo:
      description: "\n            <p>Contains information about the EBS storage volumes\
        \ attached to Apache Kafka broker nodes.</p>\n         "
      properties:
        ProvisionedThroughput:
          $ref: '#/components/schemas/BrokerEBSVolumeInfo_ProvisionedThroughput'
        VolumeSize:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max16384'
          - description: "\n            <p>The size in GiB of the EBS volume for the\
              \ data drive on each broker node.</p>\n         "
            xml:
              name: volumeSize
          title: VolumeSize
      title: EBSStorageInfo
      type: object
    GetBootstrapBrokersRequest:
      properties: {}
      title: GetBootstrapBrokersRequest
      type: object
    GetCompatibleKafkaVersionsRequest:
      properties: {}
      title: GetCompatibleKafkaVersionsRequest
      type: object
    __listOfCompatibleKafkaVersion:
      items:
        $ref: '#/components/schemas/CompatibleKafkaVersion'
      type: array
    GetClusterPolicyRequest:
      properties: {}
      title: GetClusterPolicyRequest
      type: object
    KafkaVersionStatus:
      enum:
      - ACTIVE
      - DEPRECATED
      title: KafkaVersionStatus
      type: string
    KafkaVersion:
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: version
          title: Version
        Status:
          allOf:
          - $ref: '#/components/schemas/KafkaVersionStatus'
          - xml:
              name: status
          title: Status
      title: KafkaVersion
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ListClusterOperationsRequest:
      properties: {}
      title: ListClusterOperationsRequest
      type: object
    ListClusterOperationsV2Request:
      properties: {}
      title: ListClusterOperationsV2Request
      type: object
    __listOfClusterOperationInfo:
      items:
        $ref: '#/components/schemas/ClusterOperationInfo'
      type: array
    __listOfClusterOperationV2Summary:
      items:
        $ref: '#/components/schemas/ClusterOperationV2Summary'
      type: array
    ListClustersRequest:
      properties: {}
      title: ListClustersRequest
      type: object
    ListClustersV2Request:
      properties: {}
      title: ListClustersV2Request
      type: object
    __listOfClusterInfo:
      items:
        $ref: '#/components/schemas/ClusterInfo'
      type: array
    __listOfCluster:
      items:
        $ref: '#/components/schemas/Cluster'
      type: array
    ListConfigurationRevisionsRequest:
      properties: {}
      title: ListConfigurationRevisionsRequest
      type: object
    __listOfConfigurationRevision:
      items:
        $ref: '#/components/schemas/ConfigurationRevision'
      type: array
    ListConfigurationsRequest:
      properties: {}
      title: ListConfigurationsRequest
      type: object
    __listOfConfiguration:
      items:
        $ref: '#/components/schemas/Configuration'
      type: array
    ListKafkaVersionsRequest:
      properties: {}
      title: ListKafkaVersionsRequest
      type: object
    __listOfKafkaVersion:
      items:
        $ref: '#/components/schemas/KafkaVersion'
      type: array
    ListNodesRequest:
      properties: {}
      title: ListNodesRequest
      type: object
    __listOfNodeInfo:
      items:
        $ref: '#/components/schemas/NodeInfo'
      type: array
    ListScramSecretsRequest:
      properties: {}
      title: ListScramSecretsRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ListClientVpcConnectionsRequest:
      properties: {}
      title: ListClientVpcConnectionsRequest
      type: object
    __listOfClientVpcConnection:
      items:
        $ref: '#/components/schemas/ClientVpcConnection'
      type: array
    ListVpcConnectionsRequest:
      properties: {}
      title: ListVpcConnectionsRequest
      type: object
    __listOfVpcConnection:
      items:
        $ref: '#/components/schemas/VpcConnection'
      type: array
    RejectClientVpcConnectionRequest:
      example:
        VpcConnectionArn: ""
      properties:
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The VPC connection ARN.</p>\n         "
            xml:
              name: vpcConnectionArn
      required:
      - VpcConnectionArn
      title: RejectClientVpcConnectionRequest
      type: object
    __listOfBrokerEBSVolumeInfo:
      items:
        $ref: '#/components/schemas/BrokerEBSVolumeInfo'
      type: array
    NodeExporter:
      description: "\n            <p>Indicates whether you want to turn on or turn\
        \ off the Node Exporter.</p>\n         "
      properties:
        EnabledInBroker:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>Indicates whether you want to turn on or\
              \ turn off the Node Exporter.</p>\n         "
            xml:
              name: enabledInBroker
          title: EnabledInBroker
      required:
      - EnabledInBroker
      title: NodeExporter
      type: object
    NodeExporterInfo:
      description: "\n            <p>Indicates whether you want to turn on or turn\
        \ off the Node Exporter.</p>\n         "
      properties:
        EnabledInBroker:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>Indicates whether you want to turn on or\
              \ turn off the Node Exporter.</p>\n         "
            xml:
              name: enabledInBroker
          title: EnabledInBroker
      required:
      - EnabledInBroker
      title: NodeExporterInfo
      type: object
    JmxExporter:
      description: "\n            <p>Indicates whether you want to turn on or turn\
        \ off the JMX Exporter.</p>\n         "
      properties:
        EnabledInBroker:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>Indicates whether you want to turn on or\
              \ turn off the JMX Exporter.</p>\n         "
            xml:
              name: enabledInBroker
          title: EnabledInBroker
      required:
      - EnabledInBroker
      title: JmxExporter
      type: object
    JmxExporterInfo:
      description: "\n            <p>Indicates whether you want to turn on or turn\
        \ off the JMX Exporter.</p>\n         "
      properties:
        EnabledInBroker:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>Indicates whether you want to turn on or\
              \ turn off the JMX Exporter.</p>\n         "
            xml:
              name: enabledInBroker
          title: EnabledInBroker
      required:
      - EnabledInBroker
      title: JmxExporterInfo
      type: object
    Prometheus:
      description: "\n            <p>Prometheus settings.</p>\n         "
      properties:
        JmxExporter:
          $ref: '#/components/schemas/Prometheus_JmxExporter'
        NodeExporter:
          $ref: '#/components/schemas/Prometheus_NodeExporter'
      title: Prometheus
      type: object
    PutClusterPolicyRequest:
      example:
        Policy: ""
        CurrentVersion: ""
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The policy version.</p>\n         "
            xml:
              name: currentVersion
        Policy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The policy.</p>\n         "
            xml:
              name: policy
      required:
      - Policy
      title: PutClusterPolicyRequest
      type: object
    RebootBrokerRequest:
      description: Reboots a node.
      example:
        BrokerIds: ""
      properties:
        BrokerIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of broker IDs to be rebooted.\
              \ The reboot-broker operation supports rebooting one broker at a time.</p>\n\
              \         "
            xml:
              name: brokerIds
      required:
      - BrokerIds
      title: RebootBrokerRequest
      type: object
    Iam:
      description: "\n            <p>Details for IAM access control.</p>\n       \
        \  "
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>Indicates whether IAM access control is\
              \ enabled.</p>\n         "
            xml:
              name: enabled
          title: Enabled
      title: Iam
      type: object
    Scram:
      description: "\n            <p>Details for SASL/SCRAM client authentication.</p>\n\
        \         "
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>SASL/SCRAM authentication is enabled or\
              \ not.</p>\n         "
            xml:
              name: enabled
          title: Enabled
      title: Scram
      type: object
    VpcConnectivityScram:
      description: "\n            <p>Details for SASL/SCRAM client authentication\
        \ for VPC connectivity.</p>\n         "
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>SASL/SCRAM authentication is on or off\
              \ for VPC connectivity.</p>\n         "
            xml:
              name: enabled
          title: Enabled
      title: VpcConnectivityScram
      type: object
    VpcConnectivityIam:
      description: "\n            <p>Details for IAM access control for VPC connectivity.</p>\n\
        \         "
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>SASL/IAM authentication is on or off for\
              \ VPC connectivity.</p>\n         "
            xml:
              name: enabled
          title: Enabled
      title: VpcConnectivityIam
      type: object
    NodeType:
      description: "\n            <p>The broker or Zookeeper node.</p>\n         "
      enum:
      - BROKER
      title: NodeType
      type: string
    ZookeeperNodeInfo:
      description: "\n            <p>Zookeeper node information.</p>\n         "
      properties:
        AttachedENIId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The attached elastic network interface\
              \ of the broker.</p>\n         "
            xml:
              name: attachedENIId
          title: AttachedENIId
        ClientVpcIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The virtual private cloud (VPC) IP address\
              \ of the client.</p>\n         "
            xml:
              name: clientVpcIpAddress
          title: ClientVpcIpAddress
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>Endpoints for accessing the ZooKeeper.</p>\n\
              \         "
            xml:
              name: endpoints
          title: Endpoints
        ZookeeperId:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: "\n            <p>The role-specific ID for Zookeeper.</p>\n\
              \         "
            xml:
              name: zookeeperId
          title: ZookeeperId
        ZookeeperVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The version of Zookeeper.</p>\n       \
              \  "
            xml:
              name: zookeeperVersion
          title: ZookeeperVersion
      title: ZookeeperNodeInfo
      type: object
    NodeInfo:
      description: "\n            <p>The node information object.</p>\n         "
      properties:
        AddedToClusterTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The start time.</p>\n         "
            xml:
              name: addedToClusterTime
          title: AddedToClusterTime
        BrokerNodeInfo:
          $ref: '#/components/schemas/NodeInfo_BrokerNodeInfo'
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The instance type.</p>\n         "
            xml:
              name: instanceType
          title: InstanceType
        NodeARN:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon Resource Name (ARN) of the node.</p>\n\
              \         "
            xml:
              name: nodeARN
          title: NodeARN
        NodeType:
          allOf:
          - $ref: '#/components/schemas/NodeType'
          - description: "\n            <p>The node type.</p>\n         "
            xml:
              name: nodeType
          title: NodeType
        ZookeeperNodeInfo:
          $ref: '#/components/schemas/NodeInfo_ZookeeperNodeInfo'
      title: NodeInfo
      type: object
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "\n            <p>The key-value pair for the resource tag.</p>\n\
              \         "
            xml:
              name: tags
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UnprocessedScramSecret:
      description: "\n            <p>Error info for scram secret associate/disassociate\
        \ failure.</p>\n         "
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>Error code for associate/disassociate failure.</p>\n\
              \         "
            xml:
              name: errorCode
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>Error message for associate/disassociate\
              \ failure.</p>\n         "
            xml:
              name: errorMessage
          title: ErrorMessage
        SecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>AWS Secrets Manager secret ARN.</p>\n \
              \        "
            xml:
              name: secretArn
          title: SecretArn
      title: UnprocessedScramSecret
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateBrokerCountRequest:
      example:
        CurrentVersion: ""
        TargetNumberOfBrokerNodes: ""
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The version of cluster to update from.\
              \ A successful operation will then generate a new version.</p>\n   \
              \      "
            xml:
              name: currentVersion
        TargetNumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max15'
          - description: "\n            <p>The number of broker nodes that you want\
              \ the cluster to have after this operation completes successfully.</p>\n\
              \         "
            xml:
              name: targetNumberOfBrokerNodes
      required:
      - CurrentVersion
      - TargetNumberOfBrokerNodes
      title: UpdateBrokerCountRequest
      type: object
    UpdateBrokerTypeRequest:
      example:
        CurrentVersion: ""
        TargetInstanceType: ""
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The cluster version that you want to change.\
              \ After this operation completes successfully, the cluster will have\
              \ a new version.</p>\n         "
            xml:
              name: currentVersion
        TargetInstanceType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The Amazon MSK broker type that you want\
              \ all of the brokers in this cluster to be.</p>\n         "
            xml:
              name: targetInstanceType
      required:
      - CurrentVersion
      - TargetInstanceType
      title: UpdateBrokerTypeRequest
      type: object
    UpdateBrokerStorageRequest:
      example:
        TargetBrokerEBSVolumeInfo: ""
        CurrentVersion: ""
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The version of cluster to update from.\
              \ A successful operation will then generate a new version.</p>\n   \
              \      "
            xml:
              name: currentVersion
        TargetBrokerEBSVolumeInfo:
          allOf:
          - $ref: '#/components/schemas/__listOfBrokerEBSVolumeInfo'
          - description: "\n            <p>Describes the target volume size and the\
              \ ID of the broker to apply the update to.</p>\n         "
            xml:
              name: targetBrokerEBSVolumeInfo
      required:
      - CurrentVersion
      - TargetBrokerEBSVolumeInfo
      title: UpdateBrokerStorageRequest
      type: object
    UpdateClusterConfigurationRequest:
      example:
        CurrentVersion: ""
        ConfigurationInfo:
          Revision: ""
          Arn: ""
      properties:
        ConfigurationInfo:
          $ref: '#/components/schemas/CreateClusterRequest_ConfigurationInfo'
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The version of the cluster that needs to\
              \ be updated.</p>\n         "
            xml:
              name: currentVersion
      required:
      - ConfigurationInfo
      - CurrentVersion
      title: UpdateClusterConfigurationRequest
      type: object
    UpdateClusterKafkaVersionRequest:
      example:
        TargetKafkaVersion: ""
        CurrentVersion: ""
        ConfigurationInfo:
          Revision: ""
          Arn: ""
      properties:
        ConfigurationInfo:
          $ref: '#/components/schemas/UpdateClusterKafkaVersionRequest_ConfigurationInfo'
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>Current cluster version.</p>\n        \
              \    "
            xml:
              name: currentVersion
        TargetKafkaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>Target Kafka version.</p>\n            "
            xml:
              name: targetKafkaVersion
      required:
      - CurrentVersion
      - TargetKafkaVersion
      title: UpdateClusterKafkaVersionRequest
      type: object
    UpdateMonitoringRequest:
      description: Request body for UpdateMonitoring.
      example:
        EnhancedMonitoring: ""
        CurrentVersion: ""
        OpenMonitoring:
          Prometheus:
            JmxExporter:
              EnabledInBroker: ""
            NodeExporter:
              EnabledInBroker: ""
        LoggingInfo:
          BrokerLogs:
            S3:
              Bucket: ""
              Enabled: ""
              Prefix: ""
            Firehose:
              DeliveryStream: ""
              Enabled: ""
            CloudWatchLogs:
              LogGroup: ""
              Enabled: ""
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The version of the MSK cluster to update.\
              \ Cluster versions aren't simple numbers. You can describe an MSK cluster\
              \ to find its version. When this update operation is successful, it\
              \ generates a new cluster version.</p>\n         "
            xml:
              name: currentVersion
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          - description: "\n            <p>Specifies which Apache Kafka metrics Amazon\
              \ MSK gathers and sends to Amazon CloudWatch for this cluster.</p>\n\
              \         "
            xml:
              name: enhancedMonitoring
        OpenMonitoring:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_OpenMonitoring'
        LoggingInfo:
          $ref: '#/components/schemas/ClusterInfo_LoggingInfo'
      required:
      - CurrentVersion
      title: UpdateMonitoringRequest
      type: object
    UpdateSecurityRequest:
      example:
        EncryptionInfo:
          EncryptionAtRest:
            DataVolumeKMSKeyId: ""
          EncryptionInTransit:
            ClientBroker: ""
            InCluster: ""
        CurrentVersion: ""
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
            Scram:
              Enabled: ""
          Unauthenticated:
            Enabled: ""
          Tls:
            Enabled: ""
            CertificateAuthorityArnList: ""
      properties:
        ClientAuthentication:
          $ref: '#/components/schemas/CreateClusterRequest_ClientAuthentication'
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The version of the MSK cluster to update.\
              \ Cluster versions aren't simple numbers. You can describe an MSK cluster\
              \ to find its version. When this update operation is successful, it\
              \ generates a new cluster version.</p>\n         "
            xml:
              name: currentVersion
        EncryptionInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_EncryptionInfo'
      required:
      - CurrentVersion
      title: UpdateSecurityRequest
      type: object
    UpdateStorageRequest:
      description: "\n            <p>Request object for UpdateStorage api. Its used\
        \ to update the storage attributes for the cluster.</p>\n         "
      example:
        CurrentVersion: ""
        VolumeSizeGB: ""
        ProvisionedThroughput:
          VolumeThroughput: ""
          Enabled: ""
        StorageMode: ""
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The version of cluster to update from.\
              \ A successful operation will then generate a new version.</p>\n   \
              \      "
            xml:
              name: currentVersion
        ProvisionedThroughput:
          $ref: '#/components/schemas/BrokerEBSVolumeInfo_ProvisionedThroughput'
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          - description: "\n            <p>Controls storage mode for supported storage\
              \ tiers.</p>\n         "
            xml:
              name: storageMode
        VolumeSizeGB:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "\n            <p>size of the EBS volume to update.</p>\n\
              \         "
            xml:
              name: volumeSizeGB
      required:
      - CurrentVersion
      title: UpdateStorageRequest
      type: object
    UpdateConfigurationRequest:
      example:
        Description: ""
        ServerProperties: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The description of the configuration revision.</p>\n\
              \         "
            xml:
              name: description
        ServerProperties:
          allOf:
          - $ref: '#/components/schemas/__blob'
          - description: "\n            <p>Contents of the <filename>server.properties</filename>\
              \ file. When using the API, you must ensure that the contents of the\
              \ file are base64 encoded. \n               When using the AWS Management\
              \ Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename>\
              \ can be in plaintext.</p>\n         "
            xml:
              name: serverProperties
      required:
      - ServerProperties
      title: UpdateConfigurationRequest
      type: object
    UpdateConnectivityRequest:
      description: Request body for UpdateConnectivity.
      example:
        ConnectivityInfo:
          VpcConnectivity:
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Tls:
                Enabled: ""
          PublicAccess:
            Type: ""
        CurrentVersion: ""
      properties:
        ConnectivityInfo:
          $ref: '#/components/schemas/CreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo'
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>The version of the MSK cluster to update.\
              \ Cluster versions aren't simple numbers. You can describe an MSK cluster\
              \ to find its version. When this update operation is successful, it\
              \ generates a new cluster version.</p>\n         "
            xml:
              name: currentVersion
      required:
      - ConnectivityInfo
      - CurrentVersion
      title: UpdateConnectivityRequest
      type: object
    UserIdentityType:
      description: "\n            <p>The identity type of the requester that calls\
        \ the API operation.</p>\n         "
      enum:
      - AWSACCOUNT
      - AWSSERVICE
      title: UserIdentityType
      type: string
    UserIdentity:
      description: "\n            <p>Description of the requester that calls the API\
        \ operation.</p>\n         "
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/UserIdentityType'
          - description: "\n            <p>The identity type of the requester that\
              \ calls the API operation.</p>\n         "
            xml:
              name: type
          title: Type
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>A unique identifier for the requester that\
              \ calls the API operation.</p>\n         "
            xml:
              name: principalId
          title: PrincipalId
      title: UserIdentity
      type: object
    BatchAssociateScramSecret_request:
      properties:
        secretArnList:
          description: "\n            <p>List of AWS Secrets Manager secret ARNs.</p>\n\
            \         "
          items:
            $ref: '#/components/schemas/__string'
          title: secretArnList
          type: array
      required:
      - secretArnList
      title: BatchAssociateScramSecret_request
      type: object
    CreateCluster_request_brokerNodeGroupInfo_StorageInfo:
      allOf:
      - $ref: '#/components/schemas/StorageInfo'
      - description: "\n            <p>Contains information about storage volumes\
          \ attached to MSK broker nodes.</p>\n         "
        xml:
          name: storageInfo
      example:
        EbsStorageInfo:
          ProvisionedThroughput:
            VolumeThroughput: ""
            Enabled: ""
          VolumeSize: ""
      title: CreateCluster_request_brokerNodeGroupInfo_StorageInfo
    CreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo:
      allOf:
      - $ref: '#/components/schemas/ConnectivityInfo'
      - description: "\n            <p>Information about the broker access configuration.</p>\n\
          \         "
        xml:
          name: connectivityInfo
      example:
        VpcConnectivity:
          ClientAuthentication:
            Sasl:
              Iam:
                Enabled: ""
              Scram:
                Enabled: ""
            Tls:
              Enabled: ""
        PublicAccess:
          Type: ""
      title: CreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo
    CreateCluster_request_brokerNodeGroupInfo:
      description: "\n            <p>Describes the setup to be used for Apache Kafka\
        \ broker nodes in the cluster.</p>\n         "
      properties:
        BrokerAZDistribution:
          allOf:
          - $ref: '#/components/schemas/BrokerAZDistribution'
          - description: "\n            <p>The distribution of broker nodes across\
              \ Availability Zones. This is an optional parameter. If you don't specify\
              \ it, Amazon MSK gives it the value DEFAULT. You can also explicitly\
              \ set this parameter to the value DEFAULT. No other values are currently\
              \ allowed.</p>\n         <p>Amazon MSK distributes the broker nodes\
              \ evenly across the Availability Zones that correspond to the subnets\
              \ you provide when you create the cluster.</p>\n         "
            xml:
              name: brokerAZDistribution
          title: BrokerAZDistribution
        ClientSubnets:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of subnets to connect to in the\
              \ client virtual private cloud (VPC). AWS creates elastic network interfaces\
              \ inside these subnets. Client applications use elastic network interfaces\
              \ to produce and consume data. Client subnets can't occupy the Availability\
              \ Zone with ID use use1-az3.</p>\n         "
            xml:
              name: clientSubnets
          title: ClientSubnets
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/__stringMin5Max32'
          - description: "\n            <p>The type of Amazon EC2 instances to use\
              \ for Apache Kafka brokers. The following instance types are allowed:\
              \ kafka.m5.large, kafka.m5.xlarge, kafka.m5.2xlarge,\nkafka.m5.4xlarge,\
              \ kafka.m5.12xlarge, and kafka.m5.24xlarge.</p>\n         "
            xml:
              name: instanceType
          title: InstanceType
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The AWS security groups to associate with\
              \ the elastic network interfaces in order to specify who can connect\
              \ to and communicate with the Amazon MSK cluster. If you don't specify\
              \ a security group, Amazon MSK uses the default security group associated\
              \ with the VPC.</p>\n         "
            xml:
              name: securityGroups
          title: SecurityGroups
        StorageInfo:
          $ref: '#/components/schemas/CreateCluster_request_brokerNodeGroupInfo_StorageInfo'
        ConnectivityInfo:
          $ref: '#/components/schemas/CreateCluster_request_brokerNodeGroupInfo_ConnectivityInfo'
        ZoneIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "\n            <p>The list of zoneIds for the cluster in\
              \ the virtual private cloud (VPC).</p>\n         "
            xml:
              name: zoneIds
          title: ZoneIds
      title: CreateCluster_request_brokerNodeGroupInfo
      type: object
    CreateCluster_request_clientAuthentication_Sasl:
      allOf:
      - $ref: '#/components/schemas/Sasl'
      - description: "\n            <p>Details for ClientAuthentication using SASL.</p>\n\
          \         "
        xml:
          name: sasl
      example:
        Iam:
          Enabled: ""
        Scram:
          Enabled: ""
      title: CreateCluster_request_clientAuthentication_Sasl
    CreateCluster_request_clientAuthentication_Tls:
      allOf:
      - $ref: '#/components/schemas/Tls'
      - description: "\n            <p>Details for ClientAuthentication using TLS.</p>\n\
          \         "
        xml:
          name: tls
      example:
        Enabled: ""
        CertificateAuthorityArnList: ""
      title: CreateCluster_request_clientAuthentication_Tls
    CreateCluster_request_clientAuthentication_Unauthenticated:
      allOf:
      - $ref: '#/components/schemas/Unauthenticated'
      - description: "\n            <p>Contains information about unauthenticated\
          \ traffic to the cluster.</p>\n         "
        xml:
          name: unauthenticated
      example:
        Enabled: ""
      title: CreateCluster_request_clientAuthentication_Unauthenticated
    CreateCluster_request_clientAuthentication:
      description: "\n            <p>Includes all client authentication information.</p>\n\
        \         "
      properties:
        Sasl:
          $ref: '#/components/schemas/CreateCluster_request_clientAuthentication_Sasl'
        Tls:
          $ref: '#/components/schemas/CreateCluster_request_clientAuthentication_Tls'
        Unauthenticated:
          $ref: '#/components/schemas/CreateCluster_request_clientAuthentication_Unauthenticated'
      title: CreateCluster_request_clientAuthentication
      type: object
    CreateCluster_request_configurationInfo:
      description: "\n            <p>Specifies the configuration to use for the brokers.</p>\n\
        \         "
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "\n            <p>ARN of the configuration to use.</p>\n\
              \         "
            xml:
              name: arn
          title: Arn
        Revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: "\n            <p>The revision of the configuration to use.</p>\n\
              \         "
            xml:
              name: revision
          title: Revision
      title: CreateCluster_request_configurationInfo
      type: object
    CreateCluster_request_encryptionInfo_EncryptionAtRest:
      allOf:
      - $ref: '#/components/schemas/EncryptionAtRest'
      - description: "\n            <p>The data-volume encryption details.</p>\n \
          \        "
        xml:
          name: encryptionAtRest
      example:
        DataVolumeKMSKeyId: ""
      title: CreateCluster_request_encryptionInfo_EncryptionAtRest
    CreateCluster_request_encryptionInfo_EncryptionInTransit:
      allOf:
      - $ref: '#/components/schemas/EncryptionInTransit'
      - description: "\n            <p>The details for encryption in transit.</p>\n\
          \         "
        xml:
          name: encryptionInTransit
      example:
        ClientBroker: ""
        InCluster: ""
      title: CreateCluster_request_encryptionInfo_EncryptionInTransit
    CreateCluster_request_encryptionInfo:
      description: "\n            <p>Includes encryption-related information, such\
        \ as the AWS KMS key used for encrypting data at rest and whether you want\
        \ MSK to encrypt your data in transit.</p>\n         "
      properties:
        EncryptionAtRest:
          $ref: '#/components/schemas/CreateCluster_request_encryptionInfo_EncryptionAtRest'
        EncryptionInTransit:
          $ref: '#/components/schemas/CreateCluster_request_encryptionInfo_EncryptionInTransit'
      title: CreateCluster_request_encryptionInfo
      type: object
    CreateCluster_request_openMonitoring_Prometheus:
      allOf:
      - $ref: '#/components/schemas/PrometheusInfo'
      - description: "\n            <p>Prometheus settings.</p>\n         "
        xml:
          name: prometheus
      example:
        JmxExporter:
          EnabledInBroker: ""
        NodeExporter:
          EnabledInBroker: ""
      title: CreateCluster_request_openMonitoring_Prometheus
    CreateCluster_request_openMonitoring:
      description: "\n            <p>JMX and Node monitoring for the MSK cluster.</p>\n\
        \         "
      properties:
        Prometheus:
          $ref: '#/components/schemas/CreateCluster_request_openMonitoring_Prometheus'
      title: CreateCluster_request_openMonitoring
      type: object
    CreateCluster_request_loggingInfo_BrokerLogs:
      allOf:
      - $ref: '#/components/schemas/BrokerLogs'
      - xml:
          name: brokerLogs
      example:
        S3:
          Bucket: ""
          Enabled: ""
          Prefix: ""
        Firehose:
          DeliveryStream: ""
          Enabled: ""
        CloudWatchLogs:
          LogGroup: ""
          Enabled: ""
      title: CreateCluster_request_loggingInfo_BrokerLogs
    CreateCluster_request_loggingInfo:
      description: ""
      properties:
        BrokerLogs:
          $ref: '#/components/schemas/CreateCluster_request_loggingInfo_BrokerLogs'
      title: CreateCluster_request_loggingInfo
      type: object
    CreateCluster_request:
      properties:
        brokerNodeGroupInfo:
          $ref: '#/components/schemas/CreateCluster_request_brokerNodeGroupInfo'
        clientAuthentication:
          $ref: '#/components/schemas/CreateCluster_request_clientAuthentication'
        clusterName:
          description: "\n            <p>The name of the cluster.</p>\n         "
          maxLength: 64
          minLength: 1
          title: clusterName
          type: string
        configurationInfo:
          $ref: '#/components/schemas/CreateCluster_request_configurationInfo'
        encryptionInfo:
          $ref: '#/components/schemas/CreateCluster_request_encryptionInfo'
        enhancedMonitoring:
          description: "\n            <p>Specifies which metrics are gathered for\
            \ the MSK cluster. This property has the following possible values: DEFAULT,\
            \ PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a\
            \ list of the metrics associated with each of these levels of monitoring,\
            \ see <a href=\"https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html\"\
            >Monitoring</a>.</p>\n         "
          enum:
          - DEFAULT
          - PER_BROKER
          - PER_TOPIC_PER_BROKER
          - PER_TOPIC_PER_PARTITION
          title: enhancedMonitoring
          type: string
        openMonitoring:
          $ref: '#/components/schemas/CreateCluster_request_openMonitoring'
        kafkaVersion:
          description: "\n            <p>The version of Apache Kafka.</p>\n      \
            \   "
          maxLength: 128
          minLength: 1
          title: kafkaVersion
          type: string
        loggingInfo:
          $ref: '#/components/schemas/CreateCluster_request_loggingInfo'
        numberOfBrokerNodes:
          description: "\n            <p>The number of broker nodes in the cluster.</p>\n\
            \         "
          maximum: 15
          minimum: 1
          title: numberOfBrokerNodes
          type: integer
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: "\n            <p>Create tags when creating the cluster.</p>\n\
            \         "
          title: tags
          type: object
        storageMode:
          description: Controls storage mode for various supported storage tiers.
          enum:
          - LOCAL
          - TIERED
          title: storageMode
          type: string
      required:
      - brokerNodeGroupInfo
      - clusterName
      - kafkaVersion
      - numberOfBrokerNodes
      title: CreateCluster_request
      type: object
    CreateClusterV2_request_provisioned_BrokerNodeGroupInfo:
      allOf:
      - $ref: '#/components/schemas/BrokerNodeGroupInfo'
      - description: "\n            <p>Information about the brokers.</p>\n      \
          \   "
        xml:
          name: brokerNodeGroupInfo
      example:
        SecurityGroups: ""
        ClientSubnets: ""
        ConnectivityInfo:
          VpcConnectivity:
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Tls:
                Enabled: ""
          PublicAccess:
            Type: ""
        StorageInfo:
          EbsStorageInfo:
            ProvisionedThroughput:
              VolumeThroughput: ""
              Enabled: ""
            VolumeSize: ""
        BrokerAZDistribution: ""
        ZoneIds: ""
        InstanceType: ""
      title: CreateClusterV2_request_provisioned_BrokerNodeGroupInfo
    CreateClusterV2_request_provisioned_ClientAuthentication:
      allOf:
      - $ref: '#/components/schemas/ClientAuthentication'
      - description: "\n            <p>Includes all client authentication information.</p>\n\
          \         "
        xml:
          name: clientAuthentication
      example:
        Sasl:
          Iam:
            Enabled: ""
          Scram:
            Enabled: ""
        Unauthenticated:
          Enabled: ""
        Tls:
          Enabled: ""
          CertificateAuthorityArnList: ""
      title: CreateClusterV2_request_provisioned_ClientAuthentication
    CreateClusterV2_request_provisioned_ConfigurationInfo:
      allOf:
      - $ref: '#/components/schemas/ConfigurationInfo'
      - description: "\n            <p>Represents the configuration that you want\
          \ Amazon MSK to use for the brokers in a cluster.</p>\n         "
        xml:
          name: configurationInfo
      example:
        Revision: ""
        Arn: ""
      title: CreateClusterV2_request_provisioned_ConfigurationInfo
    CreateClusterV2_request_provisioned_EncryptionInfo:
      allOf:
      - $ref: '#/components/schemas/EncryptionInfo'
      - description: "\n            <p>Includes all encryption-related information.</p>\n\
          \         "
        xml:
          name: encryptionInfo
      example:
        EncryptionAtRest:
          DataVolumeKMSKeyId: ""
        EncryptionInTransit:
          ClientBroker: ""
          InCluster: ""
      title: CreateClusterV2_request_provisioned_EncryptionInfo
    CreateClusterV2_request_provisioned_OpenMonitoring:
      allOf:
      - $ref: '#/components/schemas/OpenMonitoringInfo'
      - description: "\n            <p>The settings for open monitoring.</p>\n   \
          \      "
        xml:
          name: openMonitoring
      example:
        Prometheus:
          JmxExporter:
            EnabledInBroker: ""
          NodeExporter:
            EnabledInBroker: ""
      title: CreateClusterV2_request_provisioned_OpenMonitoring
    CreateClusterV2_request_provisioned_LoggingInfo:
      allOf:
      - $ref: '#/components/schemas/LoggingInfo'
      - description: "\n            <p>Log delivery information for the cluster.</p>\n\
          \         "
        xml:
          name: loggingInfo
      example:
        BrokerLogs:
          S3:
            Bucket: ""
            Enabled: ""
            Prefix: ""
          Firehose:
            DeliveryStream: ""
            Enabled: ""
          CloudWatchLogs:
            LogGroup: ""
            Enabled: ""
      title: CreateClusterV2_request_provisioned_LoggingInfo
    CreateClusterV2_request_provisioned:
      description: "\n            <p>Provisioned cluster request.</p>\n         "
      properties:
        BrokerNodeGroupInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_BrokerNodeGroupInfo'
        ClientAuthentication:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_ClientAuthentication'
        ConfigurationInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_ConfigurationInfo'
        EncryptionInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_EncryptionInfo'
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          - description: "\n            <p>Specifies the level of monitoring for the\
              \ MSK cluster. The possible values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER,\
              \ and PER_TOPIC_PER_PARTITION.</p>\n         "
            xml:
              name: enhancedMonitoring
          title: EnhancedMonitoring
        OpenMonitoring:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_OpenMonitoring'
        KafkaVersion:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max128'
          - description: "\n            <p>The Apache Kafka version that you want\
              \ for the cluster.</p>\n         "
            xml:
              name: kafkaVersion
          title: KafkaVersion
        LoggingInfo:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned_LoggingInfo'
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max15'
          - description: "\n            <p>The number of broker nodes in the cluster.</p>\n\
              \         "
            xml:
              name: numberOfBrokerNodes
          title: NumberOfBrokerNodes
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          - description: "\n            <p>This controls storage mode for supported\
              \ storage tiers.</p>\n         "
            xml:
              name: storageMode
          title: StorageMode
      title: CreateClusterV2_request_provisioned
      type: object
    CreateClusterV2_request_serverless_ClientAuthentication:
      allOf:
      - $ref: '#/components/schemas/ServerlessClientAuthentication'
      - description: "\n            <p>Includes all client authentication information.</p>\n\
          \         "
        xml:
          name: clientAuthentication
      example:
        Sasl:
          Iam:
            Enabled: ""
      title: CreateClusterV2_request_serverless_ClientAuthentication
    CreateClusterV2_request_serverless:
      description: "\n            <p>Serverless cluster request.</p>\n         "
      properties:
        VpcConfigs:
          allOf:
          - $ref: '#/components/schemas/__listOfVpcConfig'
          - description: "\n            <p>The configuration of the Amazon VPCs for\
              \ the cluster.</p>\n         "
            xml:
              name: vpcConfigs
          title: VpcConfigs
        ClientAuthentication:
          $ref: '#/components/schemas/CreateClusterV2_request_serverless_ClientAuthentication'
      title: CreateClusterV2_request_serverless
      type: object
    CreateClusterV2_request:
      properties:
        clusterName:
          description: "\n            <p>The name of the cluster.</p>\n         "
          maxLength: 64
          minLength: 1
          title: clusterName
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: "\n            <p>A map of tags that you want the cluster to\
            \ have.</p>\n         "
          title: tags
          type: object
        provisioned:
          $ref: '#/components/schemas/CreateClusterV2_request_provisioned'
        serverless:
          $ref: '#/components/schemas/CreateClusterV2_request_serverless'
      required:
      - clusterName
      title: CreateClusterV2_request
      type: object
    CreateConfiguration_request:
      properties:
        description:
          description: "\n            <p>The description of the configuration.</p>\n\
            \         "
          title: description
          type: string
        kafkaVersions:
          description: "\n            <p>The versions of Apache Kafka with which you\
            \ can use this MSK configuration.</p>\n         "
          items:
            $ref: '#/components/schemas/__string'
          title: kafkaVersions
          type: array
        name:
          description: "\n            <p>The name of the configuration.</p>\n    \
            \     "
          title: name
          type: string
        serverProperties:
          description: "\n            <p>Contents of the <filename>server.properties</filename>\
            \ file. When using the API, you must ensure that the contents of the file\
            \ are base64 encoded. \n               When using the AWS Management Console,\
            \ the SDK, or the AWS CLI, the contents of <filename>server.properties</filename>\
            \ can be in plaintext.</p>\n         "
          title: serverProperties
          type: string
      required:
      - name
      - serverProperties
      title: CreateConfiguration_request
      type: object
    CreateVpcConnection_request:
      properties:
        targetClusterArn:
          description: "\n            <p>The cluster Amazon Resource Name (ARN) for\
            \ the VPC connection.</p>\n         "
          title: targetClusterArn
          type: string
        authentication:
          description: "\n            <p>The authentication type of VPC connection.</p>\n\
            \         "
          title: authentication
          type: string
        vpcId:
          description: "\n            <p>The VPC ID of VPC connection.</p>\n     \
            \    "
          title: vpcId
          type: string
        clientSubnets:
          description: "\n            <p>The list of client subnets.</p>\n       \
            \  "
          items:
            $ref: '#/components/schemas/__string'
          title: clientSubnets
          type: array
        securityGroups:
          description: "\n            <p>The list of security groups.</p>\n      \
            \   "
          items:
            $ref: '#/components/schemas/__string'
          title: securityGroups
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: "\n            <p>A map of tags for the VPC connection.</p>\n\
            \         "
          title: tags
          type: object
      required:
      - authentication
      - clientSubnets
      - securityGroups
      - targetClusterArn
      - vpcId
      title: CreateVpcConnection_request
      type: object
    PutClusterPolicy_request:
      properties:
        currentVersion:
          description: "\n            <p>The policy version.</p>\n         "
          title: currentVersion
          type: string
        policy:
          description: "\n            <p>The policy.</p>\n         "
          title: policy
          type: string
      required:
      - policy
      title: PutClusterPolicy_request
      type: object
    UpdateConfiguration_request:
      properties:
        description:
          description: "\n            <p>The description of the configuration revision.</p>\n\
            \         "
          title: description
          type: string
        serverProperties:
          description: "\n            <p>Contents of the <filename>server.properties</filename>\
            \ file. When using the API, you must ensure that the contents of the file\
            \ are base64 encoded. \n               When using the AWS Management Console,\
            \ the SDK, or the AWS CLI, the contents of <filename>server.properties</filename>\
            \ can be in plaintext.</p>\n         "
          title: serverProperties
          type: string
      required:
      - serverProperties
      title: UpdateConfiguration_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: "\n            <p>The key-value pair for the resource tag.</p>\n\
            \         "
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    RejectClientVpcConnection_request:
      properties:
        vpcConnectionArn:
          description: "\n            <p>The VPC connection ARN.</p>\n         "
          title: vpcConnectionArn
          type: string
      required:
      - vpcConnectionArn
      title: RejectClientVpcConnection_request
      type: object
    RebootBroker_request:
      properties:
        brokerIds:
          description: "\n            <p>The list of broker IDs to be rebooted. The\
            \ reboot-broker operation supports rebooting one broker at a time.</p>\n\
            \         "
          items:
            $ref: '#/components/schemas/__string'
          title: brokerIds
          type: array
      required:
      - brokerIds
      title: RebootBroker_request
      type: object
    UpdateBrokerCount_request:
      properties:
        currentVersion:
          description: "\n            <p>The version of cluster to update from. A\
            \ successful operation will then generate a new version.</p>\n       \
            \  "
          title: currentVersion
          type: string
        targetNumberOfBrokerNodes:
          description: "\n            <p>The number of broker nodes that you want\
            \ the cluster to have after this operation completes successfully.</p>\n\
            \         "
          maximum: 15
          minimum: 1
          title: targetNumberOfBrokerNodes
          type: integer
      required:
      - currentVersion
      - targetNumberOfBrokerNodes
      title: UpdateBrokerCount_request
      type: object
    UpdateBrokerType_request:
      properties:
        currentVersion:
          description: "\n            <p>The cluster version that you want to change.\
            \ After this operation completes successfully, the cluster will have a\
            \ new version.</p>\n         "
          title: currentVersion
          type: string
        targetInstanceType:
          description: "\n            <p>The Amazon MSK broker type that you want\
            \ all of the brokers in this cluster to be.</p>\n         "
          title: targetInstanceType
          type: string
      required:
      - currentVersion
      - targetInstanceType
      title: UpdateBrokerType_request
      type: object
    UpdateBrokerStorage_request:
      properties:
        currentVersion:
          description: "\n            <p>The version of cluster to update from. A\
            \ successful operation will then generate a new version.</p>\n       \
            \  "
          title: currentVersion
          type: string
        targetBrokerEBSVolumeInfo:
          description: "\n            <p>Describes the target volume size and the\
            \ ID of the broker to apply the update to.</p>\n         "
          items:
            $ref: '#/components/schemas/BrokerEBSVolumeInfo'
          title: targetBrokerEBSVolumeInfo
          type: array
      required:
      - currentVersion
      - targetBrokerEBSVolumeInfo
      title: UpdateBrokerStorage_request
      type: object
    UpdateConnectivity_request_connectivityInfo_PublicAccess:
      allOf:
      - $ref: '#/components/schemas/PublicAccess'
      - description: "\n            <p>Public access control for brokers.</p>\n  \
          \       "
        xml:
          name: publicAccess
      example:
        Type: ""
      title: UpdateConnectivity_request_connectivityInfo_PublicAccess
    UpdateConnectivity_request_connectivityInfo_VpcConnectivity:
      allOf:
      - $ref: '#/components/schemas/VpcConnectivity'
      - description: "\n            <p>VPC connectivity access control for brokers.</p>\n\
          \         "
        xml:
          name: vpcConnectivity
      example:
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
            Scram:
              Enabled: ""
          Tls:
            Enabled: ""
      title: UpdateConnectivity_request_connectivityInfo_VpcConnectivity
    UpdateConnectivity_request_connectivityInfo:
      description: "\n            <p>Information about the broker access configuration.</p>\n\
        \         "
      properties:
        PublicAccess:
          $ref: '#/components/schemas/UpdateConnectivity_request_connectivityInfo_PublicAccess'
        VpcConnectivity:
          $ref: '#/components/schemas/UpdateConnectivity_request_connectivityInfo_VpcConnectivity'
      title: UpdateConnectivity_request_connectivityInfo
      type: object
    UpdateConnectivity_request:
      properties:
        connectivityInfo:
          $ref: '#/components/schemas/UpdateConnectivity_request_connectivityInfo'
        currentVersion:
          description: "\n            <p>The version of the MSK cluster to update.\
            \ Cluster versions aren't simple numbers. You can describe an MSK cluster\
            \ to find its version. When this update operation is successful, it generates\
            \ a new cluster version.</p>\n         "
          title: currentVersion
          type: string
      required:
      - connectivityInfo
      - currentVersion
      title: UpdateConnectivity_request
      type: object
    UpdateClusterConfiguration_request:
      properties:
        configurationInfo:
          $ref: '#/components/schemas/CreateCluster_request_configurationInfo'
        currentVersion:
          description: "\n            <p>The version of the cluster that needs to\
            \ be updated.</p>\n         "
          title: currentVersion
          type: string
      required:
      - configurationInfo
      - currentVersion
      title: UpdateClusterConfiguration_request
      type: object
    UpdateClusterKafkaVersion_request:
      properties:
        configurationInfo:
          $ref: '#/components/schemas/CreateCluster_request_configurationInfo'
        currentVersion:
          description: "\n            <p>Current cluster version.</p>\n          \
            \  "
          title: currentVersion
          type: string
        targetKafkaVersion:
          description: "\n            <p>Target Kafka version.</p>\n            "
          title: targetKafkaVersion
          type: string
      required:
      - currentVersion
      - targetKafkaVersion
      title: UpdateClusterKafkaVersion_request
      type: object
    UpdateMonitoring_request:
      properties:
        currentVersion:
          description: "\n            <p>The version of the MSK cluster to update.\
            \ Cluster versions aren't simple numbers. You can describe an MSK cluster\
            \ to find its version. When this update operation is successful, it generates\
            \ a new cluster version.</p>\n         "
          title: currentVersion
          type: string
        enhancedMonitoring:
          description: "\n            <p>Specifies which metrics are gathered for\
            \ the MSK cluster. This property has the following possible values: DEFAULT,\
            \ PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a\
            \ list of the metrics associated with each of these levels of monitoring,\
            \ see <a href=\"https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html\"\
            >Monitoring</a>.</p>\n         "
          enum:
          - DEFAULT
          - PER_BROKER
          - PER_TOPIC_PER_BROKER
          - PER_TOPIC_PER_PARTITION
          title: enhancedMonitoring
          type: string
        openMonitoring:
          $ref: '#/components/schemas/CreateCluster_request_openMonitoring'
        loggingInfo:
          $ref: '#/components/schemas/CreateCluster_request_loggingInfo'
      required:
      - currentVersion
      title: UpdateMonitoring_request
      type: object
    UpdateSecurity_request:
      properties:
        clientAuthentication:
          $ref: '#/components/schemas/CreateCluster_request_clientAuthentication'
        currentVersion:
          description: "\n            <p>The version of the MSK cluster to update.\
            \ Cluster versions aren't simple numbers. You can describe an MSK cluster\
            \ to find its version. When this update operation is successful, it generates\
            \ a new cluster version.</p>\n         "
          title: currentVersion
          type: string
        encryptionInfo:
          $ref: '#/components/schemas/CreateCluster_request_encryptionInfo'
      required:
      - currentVersion
      title: UpdateSecurity_request
      type: object
    UpdateStorage_request_provisionedThroughput:
      description: "\n            <p>Contains information about provisioned throughput\
        \ for EBS storage volumes attached to kafka broker nodes.</p>\n         "
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "\n            <p>Provisioned throughput is enabled or not.</p>\n\
              \         "
            xml:
              name: enabled
          title: Enabled
        VolumeThroughput:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "\n            <p>Throughput value of the EBS volumes for\
              \ the data drive on each kafka broker node in MiB per second.</p>\n\
              \         "
            xml:
              name: volumeThroughput
          title: VolumeThroughput
      title: UpdateStorage_request_provisionedThroughput
      type: object
    UpdateStorage_request:
      properties:
        currentVersion:
          description: "\n            <p>The version of cluster to update from. A\
            \ successful operation will then generate a new version.</p>\n       \
            \  "
          title: currentVersion
          type: string
        provisionedThroughput:
          $ref: '#/components/schemas/UpdateStorage_request_provisionedThroughput'
        storageMode:
          description: Controls storage mode for various supported storage tiers.
          enum:
          - LOCAL
          - TIERED
          title: storageMode
          type: string
        volumeSizeGB:
          description: "\n            <p>size of the EBS volume to update.</p>\n \
            \        "
          title: volumeSizeGB
          type: integer
      required:
      - currentVersion
      title: UpdateStorage_request
      type: object
    StorageInfo_EbsStorageInfo:
      allOf:
      - $ref: '#/components/schemas/EBSStorageInfo'
      - description: "\n            <p>EBS volume information.</p>\n         "
        xml:
          name: ebsStorageInfo
      example:
        ProvisionedThroughput:
          VolumeThroughput: ""
          Enabled: ""
        VolumeSize: ""
      title: StorageInfo_EbsStorageInfo
    Sasl_Scram:
      allOf:
      - $ref: '#/components/schemas/Scram'
      - description: "\n            <p>Details for SASL/SCRAM client authentication.</p>\n\
          \         "
        xml:
          name: scram
      example:
        Enabled: ""
      title: Sasl_Scram
    Sasl_Iam:
      allOf:
      - $ref: '#/components/schemas/Iam'
      - description: "\n            <p>Indicates whether IAM access control is enabled.</p>\n\
          \         "
        xml:
          name: iam
      example:
        Enabled: ""
      title: Sasl_Iam
    PrometheusInfo_JmxExporter:
      allOf:
      - $ref: '#/components/schemas/JmxExporterInfo'
      - description: "\n            <p>Indicates whether you want to turn on or turn\
          \ off the JMX Exporter.</p>\n         "
        xml:
          name: jmxExporter
      example:
        EnabledInBroker: ""
      title: PrometheusInfo_JmxExporter
    PrometheusInfo_NodeExporter:
      allOf:
      - $ref: '#/components/schemas/NodeExporterInfo'
      - description: "\n            <p>Indicates whether you want to turn on or turn\
          \ off the Node Exporter.</p>\n         "
        xml:
          name: nodeExporter
      example:
        EnabledInBroker: ""
      title: PrometheusInfo_NodeExporter
    BrokerLogs_CloudWatchLogs:
      allOf:
      - $ref: '#/components/schemas/CloudWatchLogs'
      - xml:
          name: cloudWatchLogs
      example:
        LogGroup: ""
        Enabled: ""
      title: BrokerLogs_CloudWatchLogs
    BrokerLogs_Firehose:
      allOf:
      - $ref: '#/components/schemas/Firehose'
      - xml:
          name: firehose
      example:
        DeliveryStream: ""
        Enabled: ""
      title: BrokerLogs_Firehose
    BrokerLogs_S3:
      allOf:
      - $ref: '#/components/schemas/S3'
      - xml:
          name: s3
      example:
        Bucket: ""
        Enabled: ""
        Prefix: ""
      title: BrokerLogs_S3
    ServerlessClientAuthentication_Sasl:
      allOf:
      - $ref: '#/components/schemas/ServerlessSasl'
      - description: "\n            <p>Details for ClientAuthentication using SASL.</p>\n\
          \         "
        xml:
          name: sasl
      example:
        Iam:
          Enabled: ""
      title: ServerlessClientAuthentication_Sasl
    CreateConfigurationResponse_LatestRevision:
      allOf:
      - $ref: '#/components/schemas/ConfigurationRevision'
      - description: "\n            <p>Latest revision of the configuration.</p>\n\
          \         "
        xml:
          name: latestRevision
      example:
        Description: ""
        Revision: ""
        CreationTime: ""
      title: CreateConfigurationResponse_LatestRevision
    DescribeClusterResponse_ClusterInfo:
      allOf:
      - $ref: '#/components/schemas/ClusterInfo'
      - description: "\n            <p>The cluster information.</p>\n         "
        xml:
          name: clusterInfo
      example:
        ClusterArn: ""
        NumberOfBrokerNodes: ""
        EncryptionInfo:
          EncryptionAtRest:
            DataVolumeKMSKeyId: ""
          EncryptionInTransit:
            ClientBroker: ""
            InCluster: ""
        StateInfo:
          Message: ""
          Code: ""
        CurrentVersion: ""
        OpenMonitoring:
          Prometheus:
            JmxExporter:
              EnabledInBroker: ""
            NodeExporter:
              EnabledInBroker: ""
        CurrentBrokerSoftwareInfo:
          KafkaVersion: ""
          ConfigurationRevision: ""
          ConfigurationArn: ""
        ZookeeperConnectStringTls: ""
        StorageMode: ""
        ActiveOperationArn: ""
        BrokerNodeGroupInfo:
          SecurityGroups: ""
          ClientSubnets: ""
          ConnectivityInfo:
            VpcConnectivity:
              ClientAuthentication:
                Sasl:
                  Iam:
                    Enabled: ""
                  Scram:
                    Enabled: ""
                Tls:
                  Enabled: ""
            PublicAccess:
              Type: ""
          StorageInfo:
            EbsStorageInfo:
              ProvisionedThroughput:
                VolumeThroughput: ""
                Enabled: ""
              VolumeSize: ""
          BrokerAZDistribution: ""
          ZoneIds: ""
          InstanceType: ""
        EnhancedMonitoring: ""
        State: ""
        CreationTime: ""
        ZookeeperConnectString: ""
        ClusterName: ""
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
            Scram:
              Enabled: ""
          Unauthenticated:
            Enabled: ""
          Tls:
            Enabled: ""
            CertificateAuthorityArnList: ""
        LoggingInfo:
          BrokerLogs:
            S3:
              Bucket: ""
              Enabled: ""
              Prefix: ""
            Firehose:
              DeliveryStream: ""
              Enabled: ""
            CloudWatchLogs:
              LogGroup: ""
              Enabled: ""
        Tags: ""
      title: DescribeClusterResponse_ClusterInfo
    DescribeClusterV2Response_ClusterInfo:
      allOf:
      - $ref: '#/components/schemas/Cluster'
      - description: "\n            <p>The cluster information.</p>\n         "
        xml:
          name: clusterInfo
      example:
        ClusterArn: ""
        State: ""
        StateInfo:
          Message: ""
          Code: ""
        CurrentVersion: ""
        CreationTime: ""
        ClusterName: ""
        ClusterType: ""
        Serverless:
          VpcConfigs: ""
          ClientAuthentication:
            Sasl:
              Iam:
                Enabled: ""
        Tags: ""
        Provisioned:
          BrokerNodeGroupInfo:
            SecurityGroups: ""
            ClientSubnets: ""
            ConnectivityInfo:
              VpcConnectivity:
                ClientAuthentication:
                  Sasl:
                    Iam:
                      Enabled: ""
                    Scram:
                      Enabled: ""
                  Tls:
                    Enabled: ""
              PublicAccess:
                Type: ""
            StorageInfo:
              EbsStorageInfo:
                ProvisionedThroughput:
                  VolumeThroughput: ""
                  Enabled: ""
                VolumeSize: ""
            BrokerAZDistribution: ""
            ZoneIds: ""
            InstanceType: ""
          EnhancedMonitoring: ""
          NumberOfBrokerNodes: ""
          EncryptionInfo:
            EncryptionAtRest:
              DataVolumeKMSKeyId: ""
            EncryptionInTransit:
              ClientBroker: ""
              InCluster: ""
          OpenMonitoring:
            Prometheus:
              JmxExporter:
                EnabledInBroker: ""
              NodeExporter:
                EnabledInBroker: ""
          ZookeeperConnectString: ""
          CurrentBrokerSoftwareInfo:
            KafkaVersion: ""
            ConfigurationRevision: ""
            ConfigurationArn: ""
          ZookeeperConnectStringTls: ""
          StorageMode: ""
          ClientAuthentication:
            Sasl:
              Iam:
                Enabled: ""
              Scram:
                Enabled: ""
            Unauthenticated:
              Enabled: ""
            Tls:
              Enabled: ""
              CertificateAuthorityArnList: ""
          LoggingInfo:
            BrokerLogs:
              S3:
                Bucket: ""
                Enabled: ""
                Prefix: ""
              Firehose:
                DeliveryStream: ""
                Enabled: ""
              CloudWatchLogs:
                LogGroup: ""
                Enabled: ""
        ActiveOperationArn: ""
      title: DescribeClusterV2Response_ClusterInfo
    DescribeClusterOperationResponse_ClusterOperationInfo:
      allOf:
      - $ref: '#/components/schemas/ClusterOperationInfo'
      - description: "\n            <p>Cluster operation information</p>\n       \
          \  "
        xml:
          name: clusterOperationInfo
      example:
        ClusterArn: ""
        OperationArn: ""
        ClientRequestId: ""
        EndTime: ""
        OperationSteps: ""
        SourceClusterInfo:
          EnhancedMonitoring: ""
          KafkaVersion: ""
          NumberOfBrokerNodes: ""
          ConnectivityInfo:
            VpcConnectivity:
              ClientAuthentication:
                Sasl:
                  Iam:
                    Enabled: ""
                  Scram:
                    Enabled: ""
                Tls:
                  Enabled: ""
            PublicAccess:
              Type: ""
          EncryptionInfo:
            EncryptionAtRest:
              DataVolumeKMSKeyId: ""
            EncryptionInTransit:
              ClientBroker: ""
              InCluster: ""
          OpenMonitoring:
            Prometheus:
              JmxExporter:
                EnabledInBroker: ""
              NodeExporter:
                EnabledInBroker: ""
          BrokerEBSVolumeInfo: ""
          InstanceType: ""
          StorageMode: ""
          LoggingInfo:
            BrokerLogs:
              S3:
                Bucket: ""
                Enabled: ""
                Prefix: ""
              Firehose:
                DeliveryStream: ""
                Enabled: ""
              CloudWatchLogs:
                LogGroup: ""
                Enabled: ""
          ClientAuthentication:
            Sasl:
              Iam:
                Enabled: ""
              Scram:
                Enabled: ""
            Unauthenticated:
              Enabled: ""
            Tls:
              Enabled: ""
              CertificateAuthorityArnList: ""
          ConfigurationInfo:
            Revision: ""
            Arn: ""
        VpcConnectionInfo:
          Owner: ""
          UserIdentity:
            Type: ""
            PrincipalId: ""
          CreationTime: ""
          VpcConnectionArn: ""
        ErrorInfo:
          ErrorCode: ""
          ErrorString: ""
        CreationTime: ""
        TargetClusterInfo:
          EnhancedMonitoring: ""
          KafkaVersion: ""
          NumberOfBrokerNodes: ""
          ConnectivityInfo:
            VpcConnectivity:
              ClientAuthentication:
                Sasl:
                  Iam:
                    Enabled: ""
                  Scram:
                    Enabled: ""
                Tls:
                  Enabled: ""
            PublicAccess:
              Type: ""
          EncryptionInfo:
            EncryptionAtRest:
              DataVolumeKMSKeyId: ""
            EncryptionInTransit:
              ClientBroker: ""
              InCluster: ""
          OpenMonitoring:
            Prometheus:
              JmxExporter:
                EnabledInBroker: ""
              NodeExporter:
                EnabledInBroker: ""
          BrokerEBSVolumeInfo: ""
          InstanceType: ""
          StorageMode: ""
          LoggingInfo:
            BrokerLogs:
              S3:
                Bucket: ""
                Enabled: ""
                Prefix: ""
              Firehose:
                DeliveryStream: ""
                Enabled: ""
              CloudWatchLogs:
                LogGroup: ""
                Enabled: ""
          ClientAuthentication:
            Sasl:
              Iam:
                Enabled: ""
              Scram:
                Enabled: ""
            Unauthenticated:
              Enabled: ""
            Tls:
              Enabled: ""
              CertificateAuthorityArnList: ""
          ConfigurationInfo:
            Revision: ""
            Arn: ""
        OperationType: ""
        OperationState: ""
      title: DescribeClusterOperationResponse_ClusterOperationInfo
    DescribeClusterOperationV2Response_ClusterOperationInfo:
      allOf:
      - $ref: '#/components/schemas/ClusterOperationV2'
      - description: |2-

                      <p>Cluster operation information</p>
        xml:
          name: clusterOperationInfo
      example:
        ClusterArn: ""
        OperationArn: ""
        EndTime: ""
        ErrorInfo:
          ErrorCode: ""
          ErrorString: ""
        StartTime: ""
        ClusterType: ""
        OperationType: ""
        Serverless:
          VpcConnectionInfo:
            Owner: ""
            UserIdentity:
              Type: ""
              PrincipalId: ""
            CreationTime: ""
            VpcConnectionArn: ""
        OperationState: ""
        Provisioned:
          OperationSteps: ""
          SourceClusterInfo:
            EnhancedMonitoring: ""
            KafkaVersion: ""
            NumberOfBrokerNodes: ""
            ConnectivityInfo:
              VpcConnectivity:
                ClientAuthentication:
                  Sasl:
                    Iam:
                      Enabled: ""
                    Scram:
                      Enabled: ""
                  Tls:
                    Enabled: ""
              PublicAccess:
                Type: ""
            EncryptionInfo:
              EncryptionAtRest:
                DataVolumeKMSKeyId: ""
              EncryptionInTransit:
                ClientBroker: ""
                InCluster: ""
            OpenMonitoring:
              Prometheus:
                JmxExporter:
                  EnabledInBroker: ""
                NodeExporter:
                  EnabledInBroker: ""
            BrokerEBSVolumeInfo: ""
            InstanceType: ""
            StorageMode: ""
            LoggingInfo:
              BrokerLogs:
                S3:
                  Bucket: ""
                  Enabled: ""
                  Prefix: ""
                Firehose:
                  DeliveryStream: ""
                  Enabled: ""
                CloudWatchLogs:
                  LogGroup: ""
                  Enabled: ""
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Unauthenticated:
                Enabled: ""
              Tls:
                Enabled: ""
                CertificateAuthorityArnList: ""
            ConfigurationInfo:
              Revision: ""
              Arn: ""
          VpcConnectionInfo:
            Owner: ""
            UserIdentity:
              Type: ""
              PrincipalId: ""
            CreationTime: ""
            VpcConnectionArn: ""
          TargetClusterInfo:
            EnhancedMonitoring: ""
            KafkaVersion: ""
            NumberOfBrokerNodes: ""
            ConnectivityInfo:
              VpcConnectivity:
                ClientAuthentication:
                  Sasl:
                    Iam:
                      Enabled: ""
                    Scram:
                      Enabled: ""
                  Tls:
                    Enabled: ""
              PublicAccess:
                Type: ""
            EncryptionInfo:
              EncryptionAtRest:
                DataVolumeKMSKeyId: ""
              EncryptionInTransit:
                ClientBroker: ""
                InCluster: ""
            OpenMonitoring:
              Prometheus:
                JmxExporter:
                  EnabledInBroker: ""
                NodeExporter:
                  EnabledInBroker: ""
            BrokerEBSVolumeInfo: ""
            InstanceType: ""
            StorageMode: ""
            LoggingInfo:
              BrokerLogs:
                S3:
                  Bucket: ""
                  Enabled: ""
                  Prefix: ""
                Firehose:
                  DeliveryStream: ""
                  Enabled: ""
                CloudWatchLogs:
                  LogGroup: ""
                  Enabled: ""
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Unauthenticated:
                Enabled: ""
              Tls:
                Enabled: ""
                CertificateAuthorityArnList: ""
            ConfigurationInfo:
              Revision: ""
              Arn: ""
      title: DescribeClusterOperationV2Response_ClusterOperationInfo
    BrokerEBSVolumeInfo_ProvisionedThroughput:
      allOf:
      - $ref: '#/components/schemas/ProvisionedThroughput'
      - description: "\n            <p>EBS volume provisioned throughput information.</p>\n\
          \         "
        xml:
          name: provisionedThroughput
      example:
        VolumeThroughput: ""
        Enabled: ""
      title: BrokerEBSVolumeInfo_ProvisionedThroughput
    VpcConnectivity_ClientAuthentication:
      allOf:
      - $ref: '#/components/schemas/VpcConnectivityClientAuthentication'
      - description: "\n            <p>Includes all client authentication information\
          \ for VPC connectivity.</p>\n         "
        xml:
          name: clientAuthentication
      example:
        Sasl:
          Iam:
            Enabled: ""
          Scram:
            Enabled: ""
        Tls:
          Enabled: ""
      title: VpcConnectivity_ClientAuthentication
    BrokerNodeInfo_CurrentBrokerSoftwareInfo:
      allOf:
      - $ref: '#/components/schemas/BrokerSoftwareInfo'
      - description: "\n            <p>Information about the version of software currently\
          \ deployed on the Apache Kafka brokers in the cluster.</p>\n         "
        xml:
          name: currentBrokerSoftwareInfo
      example:
        KafkaVersion: ""
        ConfigurationRevision: ""
        ConfigurationArn: ""
      title: BrokerNodeInfo_CurrentBrokerSoftwareInfo
    VpcConnectivitySasl_Scram:
      allOf:
      - $ref: '#/components/schemas/VpcConnectivityScram'
      - description: "\n            <p>Details for SASL/SCRAM client authentication\
          \ for VPC connectivity.</p>\n         "
        xml:
          name: scram
      example:
        Enabled: ""
      title: VpcConnectivitySasl_Scram
    VpcConnectivitySasl_Iam:
      allOf:
      - $ref: '#/components/schemas/VpcConnectivityIam'
      - description: "\n            <p>Details for SASL/IAM client authentication\
          \ for VPC connectivity.</p>\n         "
        xml:
          name: iam
      example:
        Enabled: ""
      title: VpcConnectivitySasl_Iam
    VpcConnectivityClientAuthentication_Sasl:
      allOf:
      - $ref: '#/components/schemas/VpcConnectivitySasl'
      - description: "\n            <p>SASL authentication type details for VPC connectivity.</p>\n\
          \         "
        xml:
          name: sasl
      example:
        Iam:
          Enabled: ""
        Scram:
          Enabled: ""
      title: VpcConnectivityClientAuthentication_Sasl
    VpcConnectivityClientAuthentication_Tls:
      allOf:
      - $ref: '#/components/schemas/VpcConnectivityTls'
      - description: "\n            <p>TLS authentication type details for VPC connectivity.</p>\n\
          \         "
        xml:
          name: tls
      example:
        Enabled: ""
      title: VpcConnectivityClientAuthentication_Tls
    OpenMonitoring_Prometheus:
      allOf:
      - $ref: '#/components/schemas/Prometheus'
      - description: "\n            <p>Prometheus settings.</p>\n         "
        xml:
          name: prometheus
      example:
        JmxExporter:
          EnabledInBroker: ""
        NodeExporter:
          EnabledInBroker: ""
      title: OpenMonitoring_Prometheus
    ClusterInfo_BrokerNodeGroupInfo:
      allOf:
      - $ref: '#/components/schemas/BrokerNodeGroupInfo'
      - description: "\n            <p>Information about the broker nodes.</p>\n \
          \        "
        xml:
          name: brokerNodeGroupInfo
      example:
        SecurityGroups: ""
        ClientSubnets: ""
        ConnectivityInfo:
          VpcConnectivity:
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Tls:
                Enabled: ""
          PublicAccess:
            Type: ""
        StorageInfo:
          EbsStorageInfo:
            ProvisionedThroughput:
              VolumeThroughput: ""
              Enabled: ""
            VolumeSize: ""
        BrokerAZDistribution: ""
        ZoneIds: ""
        InstanceType: ""
      title: ClusterInfo_BrokerNodeGroupInfo
    ClusterInfo_OpenMonitoring:
      allOf:
      - $ref: '#/components/schemas/OpenMonitoring'
      - description: "\n            <p>Settings for open monitoring using Prometheus.</p>\n\
          \         "
        xml:
          name: openMonitoring
      example:
        Prometheus:
          JmxExporter:
            EnabledInBroker: ""
          NodeExporter:
            EnabledInBroker: ""
      title: ClusterInfo_OpenMonitoring
    ClusterInfo_LoggingInfo:
      allOf:
      - $ref: '#/components/schemas/LoggingInfo'
      - xml:
          name: loggingInfo
      example:
        BrokerLogs:
          S3:
            Bucket: ""
            Enabled: ""
            Prefix: ""
          Firehose:
            DeliveryStream: ""
            Enabled: ""
          CloudWatchLogs:
            LogGroup: ""
            Enabled: ""
      title: ClusterInfo_LoggingInfo
    ClusterInfo_StateInfo:
      allOf:
      - $ref: '#/components/schemas/StateInfo'
      - xml:
          name: stateInfo
      example:
        Message: ""
        Code: ""
      title: ClusterInfo_StateInfo
    Provisioned_CurrentBrokerSoftwareInfo:
      allOf:
      - $ref: '#/components/schemas/BrokerSoftwareInfo'
      - description: "\n            <p>Information about the Apache Kafka version\
          \ deployed on the brokers.</p>\n         "
        xml:
          name: currentBrokerSoftwareInfo
      example:
        KafkaVersion: ""
        ConfigurationRevision: ""
        ConfigurationArn: ""
      title: Provisioned_CurrentBrokerSoftwareInfo
    Cluster_StateInfo:
      allOf:
      - $ref: '#/components/schemas/StateInfo'
      - description: "\n            <p>State Info for the Amazon MSK cluster.</p>\n\
          \         "
        xml:
          name: stateInfo
      example:
        Message: ""
        Code: ""
      title: Cluster_StateInfo
    Cluster_Provisioned:
      allOf:
      - $ref: '#/components/schemas/Provisioned'
      - description: "\n            <p>Information about the provisioned cluster.</p>\n\
          \         "
        xml:
          name: provisioned
      example:
        BrokerNodeGroupInfo:
          SecurityGroups: ""
          ClientSubnets: ""
          ConnectivityInfo:
            VpcConnectivity:
              ClientAuthentication:
                Sasl:
                  Iam:
                    Enabled: ""
                  Scram:
                    Enabled: ""
                Tls:
                  Enabled: ""
            PublicAccess:
              Type: ""
          StorageInfo:
            EbsStorageInfo:
              ProvisionedThroughput:
                VolumeThroughput: ""
                Enabled: ""
              VolumeSize: ""
          BrokerAZDistribution: ""
          ZoneIds: ""
          InstanceType: ""
        EnhancedMonitoring: ""
        NumberOfBrokerNodes: ""
        EncryptionInfo:
          EncryptionAtRest:
            DataVolumeKMSKeyId: ""
          EncryptionInTransit:
            ClientBroker: ""
            InCluster: ""
        OpenMonitoring:
          Prometheus:
            JmxExporter:
              EnabledInBroker: ""
            NodeExporter:
              EnabledInBroker: ""
        ZookeeperConnectString: ""
        CurrentBrokerSoftwareInfo:
          KafkaVersion: ""
          ConfigurationRevision: ""
          ConfigurationArn: ""
        ZookeeperConnectStringTls: ""
        StorageMode: ""
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
            Scram:
              Enabled: ""
          Unauthenticated:
            Enabled: ""
          Tls:
            Enabled: ""
            CertificateAuthorityArnList: ""
        LoggingInfo:
          BrokerLogs:
            S3:
              Bucket: ""
              Enabled: ""
              Prefix: ""
            Firehose:
              DeliveryStream: ""
              Enabled: ""
            CloudWatchLogs:
              LogGroup: ""
              Enabled: ""
      title: Cluster_Provisioned
    Cluster_Serverless:
      allOf:
      - $ref: '#/components/schemas/Serverless'
      - description: "\n            <p>Information about the serverless cluster.</p>\n\
          \         "
        xml:
          name: serverless
      example:
        VpcConfigs: ""
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
      title: Cluster_Serverless
    MutableClusterInfo_ConfigurationInfo:
      allOf:
      - $ref: '#/components/schemas/ConfigurationInfo'
      - description: "\n            <p>Information about the changes in the configuration\
          \ of the brokers.</p>\n         "
        xml:
          name: configurationInfo
      example:
        Revision: ""
        Arn: ""
      title: MutableClusterInfo_ConfigurationInfo
    MutableClusterInfo_OpenMonitoring:
      allOf:
      - $ref: '#/components/schemas/OpenMonitoring'
      - description: "\n            <p>The settings for open monitoring.</p>\n   \
          \      "
        xml:
          name: openMonitoring
      example:
        Prometheus:
          JmxExporter:
            EnabledInBroker: ""
          NodeExporter:
            EnabledInBroker: ""
      title: MutableClusterInfo_OpenMonitoring
    MutableClusterInfo_LoggingInfo:
      allOf:
      - $ref: '#/components/schemas/LoggingInfo'
      - description: "\n            <p>You can configure your MSK cluster to send\
          \ broker logs to different destination types. This is a container for the\
          \ configuration details related to broker logs.</p>\n            "
        xml:
          name: loggingInfo
      example:
        BrokerLogs:
          S3:
            Bucket: ""
            Enabled: ""
            Prefix: ""
          Firehose:
            DeliveryStream: ""
            Enabled: ""
          CloudWatchLogs:
            LogGroup: ""
            Enabled: ""
      title: MutableClusterInfo_LoggingInfo
    VpcConnectionInfo_UserIdentity:
      allOf:
      - $ref: '#/components/schemas/UserIdentity'
      - description: "\n            <p>Description of the requester that calls the\
          \ API operation.</p>\n         "
        xml:
          name: userIdentity
      example:
        Type: ""
        PrincipalId: ""
      title: VpcConnectionInfo_UserIdentity
    ClusterOperationInfo_ErrorInfo:
      allOf:
      - $ref: '#/components/schemas/ErrorInfo'
      - description: "\n            <p>Describes the error if the operation fails.</p>\n\
          \         "
        xml:
          name: errorInfo
      example:
        ErrorCode: ""
        ErrorString: ""
      title: ClusterOperationInfo_ErrorInfo
    ClusterOperationInfo_SourceClusterInfo:
      allOf:
      - $ref: '#/components/schemas/MutableClusterInfo'
      - description: "\n            <p>Information about cluster attributes before\
          \ a cluster is updated.</p>\n         "
        xml:
          name: sourceClusterInfo
      example:
        EnhancedMonitoring: ""
        KafkaVersion: ""
        NumberOfBrokerNodes: ""
        ConnectivityInfo:
          VpcConnectivity:
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Tls:
                Enabled: ""
          PublicAccess:
            Type: ""
        EncryptionInfo:
          EncryptionAtRest:
            DataVolumeKMSKeyId: ""
          EncryptionInTransit:
            ClientBroker: ""
            InCluster: ""
        OpenMonitoring:
          Prometheus:
            JmxExporter:
              EnabledInBroker: ""
            NodeExporter:
              EnabledInBroker: ""
        BrokerEBSVolumeInfo: ""
        InstanceType: ""
        StorageMode: ""
        LoggingInfo:
          BrokerLogs:
            S3:
              Bucket: ""
              Enabled: ""
              Prefix: ""
            Firehose:
              DeliveryStream: ""
              Enabled: ""
            CloudWatchLogs:
              LogGroup: ""
              Enabled: ""
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
            Scram:
              Enabled: ""
          Unauthenticated:
            Enabled: ""
          Tls:
            Enabled: ""
            CertificateAuthorityArnList: ""
        ConfigurationInfo:
          Revision: ""
          Arn: ""
      title: ClusterOperationInfo_SourceClusterInfo
    ClusterOperationInfo_TargetClusterInfo:
      allOf:
      - $ref: '#/components/schemas/MutableClusterInfo'
      - description: "\n            <p>Information about cluster attributes after\
          \ a cluster is updated.</p>\n         "
        xml:
          name: targetClusterInfo
      example:
        EnhancedMonitoring: ""
        KafkaVersion: ""
        NumberOfBrokerNodes: ""
        ConnectivityInfo:
          VpcConnectivity:
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Tls:
                Enabled: ""
          PublicAccess:
            Type: ""
        EncryptionInfo:
          EncryptionAtRest:
            DataVolumeKMSKeyId: ""
          EncryptionInTransit:
            ClientBroker: ""
            InCluster: ""
        OpenMonitoring:
          Prometheus:
            JmxExporter:
              EnabledInBroker: ""
            NodeExporter:
              EnabledInBroker: ""
        BrokerEBSVolumeInfo: ""
        InstanceType: ""
        StorageMode: ""
        LoggingInfo:
          BrokerLogs:
            S3:
              Bucket: ""
              Enabled: ""
              Prefix: ""
            Firehose:
              DeliveryStream: ""
              Enabled: ""
            CloudWatchLogs:
              LogGroup: ""
              Enabled: ""
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
            Scram:
              Enabled: ""
          Unauthenticated:
            Enabled: ""
          Tls:
            Enabled: ""
            CertificateAuthorityArnList: ""
        ConfigurationInfo:
          Revision: ""
          Arn: ""
      title: ClusterOperationInfo_TargetClusterInfo
    ClusterOperationInfo_VpcConnectionInfo:
      allOf:
      - $ref: '#/components/schemas/VpcConnectionInfo'
      - description: "\n            <p>Description of the VPC connection for CreateVpcConnection\
          \ and DeleteVpcConnection operations.</p>\n         "
        xml:
          name: vpcConnectionInfo
      example:
        Owner: ""
        UserIdentity:
          Type: ""
          PrincipalId: ""
        CreationTime: ""
        VpcConnectionArn: ""
      title: ClusterOperationInfo_VpcConnectionInfo
    ClusterOperationStep_StepInfo:
      allOf:
      - $ref: '#/components/schemas/ClusterOperationStepInfo'
      - description: "\n            <p>Information about the step and its status.</p>\n\
          \         "
        xml:
          name: stepInfo
      title: ClusterOperationStep_StepInfo
    CreateClusterV2Request_Provisioned:
      allOf:
      - $ref: '#/components/schemas/ProvisionedRequest'
      - description: "\n            <p>Information about the provisioned cluster.</p>\n\
          \         "
        xml:
          name: provisioned
      example:
        BrokerNodeGroupInfo:
          SecurityGroups: ""
          ClientSubnets: ""
          ConnectivityInfo:
            VpcConnectivity:
              ClientAuthentication:
                Sasl:
                  Iam:
                    Enabled: ""
                  Scram:
                    Enabled: ""
                Tls:
                  Enabled: ""
            PublicAccess:
              Type: ""
          StorageInfo:
            EbsStorageInfo:
              ProvisionedThroughput:
                VolumeThroughput: ""
                Enabled: ""
              VolumeSize: ""
          BrokerAZDistribution: ""
          ZoneIds: ""
          InstanceType: ""
        EnhancedMonitoring: ""
        KafkaVersion: ""
        NumberOfBrokerNodes: ""
        EncryptionInfo:
          EncryptionAtRest:
            DataVolumeKMSKeyId: ""
          EncryptionInTransit:
            ClientBroker: ""
            InCluster: ""
        OpenMonitoring:
          Prometheus:
            JmxExporter:
              EnabledInBroker: ""
            NodeExporter:
              EnabledInBroker: ""
        StorageMode: ""
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
            Scram:
              Enabled: ""
          Unauthenticated:
            Enabled: ""
          Tls:
            Enabled: ""
            CertificateAuthorityArnList: ""
        LoggingInfo:
          BrokerLogs:
            S3:
              Bucket: ""
              Enabled: ""
              Prefix: ""
            Firehose:
              DeliveryStream: ""
              Enabled: ""
            CloudWatchLogs:
              LogGroup: ""
              Enabled: ""
        ConfigurationInfo:
          Revision: ""
          Arn: ""
      title: CreateClusterV2Request_Provisioned
    CreateClusterV2Request_Serverless:
      allOf:
      - $ref: '#/components/schemas/ServerlessRequest'
      - description: "\n            <p>Information about the serverless cluster.</p>\n\
          \         "
        xml:
          name: serverless
      example:
        VpcConfigs: ""
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
      title: CreateClusterV2Request_Serverless
    CreateClusterRequest_BrokerNodeGroupInfo:
      allOf:
      - $ref: '#/components/schemas/BrokerNodeGroupInfo'
      - description: "\n            <p>Information about the broker nodes in the cluster.</p>\n\
          \         "
        xml:
          name: brokerNodeGroupInfo
      example:
        SecurityGroups: ""
        ClientSubnets: ""
        ConnectivityInfo:
          VpcConnectivity:
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Tls:
                Enabled: ""
          PublicAccess:
            Type: ""
        StorageInfo:
          EbsStorageInfo:
            ProvisionedThroughput:
              VolumeThroughput: ""
              Enabled: ""
            VolumeSize: ""
        BrokerAZDistribution: ""
        ZoneIds: ""
        InstanceType: ""
      title: CreateClusterRequest_BrokerNodeGroupInfo
    CreateClusterRequest_ClientAuthentication:
      allOf:
      - $ref: '#/components/schemas/ClientAuthentication'
      - description: "\n            <p>Includes all client authentication related\
          \ information.</p>\n         "
        xml:
          name: clientAuthentication
      example:
        Sasl:
          Iam:
            Enabled: ""
          Scram:
            Enabled: ""
        Unauthenticated:
          Enabled: ""
        Tls:
          Enabled: ""
          CertificateAuthorityArnList: ""
      title: CreateClusterRequest_ClientAuthentication
    CreateClusterRequest_ConfigurationInfo:
      allOf:
      - $ref: '#/components/schemas/ConfigurationInfo'
      - description: "\n            <p>Represents the configuration that you want\
          \ MSK to use for the brokers in a cluster.</p>\n         "
        xml:
          name: configurationInfo
      example:
        Revision: ""
        Arn: ""
      title: CreateClusterRequest_ConfigurationInfo
    ClusterOperationV2Provisioned_SourceClusterInfo:
      allOf:
      - $ref: '#/components/schemas/MutableClusterInfo'
      - description: |2-

                      <p>Information about cluster attributes before a cluster is updated.</p>
        xml:
          name: sourceClusterInfo
      example:
        EnhancedMonitoring: ""
        KafkaVersion: ""
        NumberOfBrokerNodes: ""
        ConnectivityInfo:
          VpcConnectivity:
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Tls:
                Enabled: ""
          PublicAccess:
            Type: ""
        EncryptionInfo:
          EncryptionAtRest:
            DataVolumeKMSKeyId: ""
          EncryptionInTransit:
            ClientBroker: ""
            InCluster: ""
        OpenMonitoring:
          Prometheus:
            JmxExporter:
              EnabledInBroker: ""
            NodeExporter:
              EnabledInBroker: ""
        BrokerEBSVolumeInfo: ""
        InstanceType: ""
        StorageMode: ""
        LoggingInfo:
          BrokerLogs:
            S3:
              Bucket: ""
              Enabled: ""
              Prefix: ""
            Firehose:
              DeliveryStream: ""
              Enabled: ""
            CloudWatchLogs:
              LogGroup: ""
              Enabled: ""
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
            Scram:
              Enabled: ""
          Unauthenticated:
            Enabled: ""
          Tls:
            Enabled: ""
            CertificateAuthorityArnList: ""
        ConfigurationInfo:
          Revision: ""
          Arn: ""
      title: ClusterOperationV2Provisioned_SourceClusterInfo
    ClusterOperationV2Provisioned_TargetClusterInfo:
      allOf:
      - $ref: '#/components/schemas/MutableClusterInfo'
      - description: |2-

                      <p>Information about cluster attributes after a cluster is updated.</p>
        xml:
          name: targetClusterInfo
      example:
        EnhancedMonitoring: ""
        KafkaVersion: ""
        NumberOfBrokerNodes: ""
        ConnectivityInfo:
          VpcConnectivity:
            ClientAuthentication:
              Sasl:
                Iam:
                  Enabled: ""
                Scram:
                  Enabled: ""
              Tls:
                Enabled: ""
          PublicAccess:
            Type: ""
        EncryptionInfo:
          EncryptionAtRest:
            DataVolumeKMSKeyId: ""
          EncryptionInTransit:
            ClientBroker: ""
            InCluster: ""
        OpenMonitoring:
          Prometheus:
            JmxExporter:
              EnabledInBroker: ""
            NodeExporter:
              EnabledInBroker: ""
        BrokerEBSVolumeInfo: ""
        InstanceType: ""
        StorageMode: ""
        LoggingInfo:
          BrokerLogs:
            S3:
              Bucket: ""
              Enabled: ""
              Prefix: ""
            Firehose:
              DeliveryStream: ""
              Enabled: ""
            CloudWatchLogs:
              LogGroup: ""
              Enabled: ""
        ClientAuthentication:
          Sasl:
            Iam:
              Enabled: ""
            Scram:
              Enabled: ""
          Unauthenticated:
            Enabled: ""
          Tls:
            Enabled: ""
            CertificateAuthorityArnList: ""
        ConfigurationInfo:
          Revision: ""
          Arn: ""
      title: ClusterOperationV2Provisioned_TargetClusterInfo
    ClusterOperationV2Provisioned_VpcConnectionInfo:
      allOf:
      - $ref: '#/components/schemas/VpcConnectionInfo'
      - description: |2-

                      <p>Description of the VPC connection for CreateVpcConnection and DeleteVpcConnection operations.</p>
        xml:
          name: vpcConnectionInfo
      example:
        Owner: ""
        UserIdentity:
          Type: ""
          PrincipalId: ""
        CreationTime: ""
        VpcConnectionArn: ""
      title: ClusterOperationV2Provisioned_VpcConnectionInfo
    ClusterOperationV2Serverless_VpcConnectionInfo:
      allOf:
      - $ref: '#/components/schemas/VpcConnectionInfoServerless'
      - description: |2-

                      <p>Description of the VPC connection for CreateVpcConnection and DeleteVpcConnection operations.</p>
        xml:
          name: vpcConnectionInfo
      example:
        Owner: ""
        UserIdentity:
          Type: ""
          PrincipalId: ""
        CreationTime: ""
        VpcConnectionArn: ""
      title: ClusterOperationV2Serverless_VpcConnectionInfo
    ClusterOperationV2_ErrorInfo:
      allOf:
      - $ref: '#/components/schemas/ErrorInfo'
      - description: |2-

                      <p>If cluster operation failed from an error, it describes the error.</p>
        xml:
          name: errorInfo
      example:
        ErrorCode: ""
        ErrorString: ""
      title: ClusterOperationV2_ErrorInfo
    ClusterOperationV2_Provisioned:
      allOf:
      - $ref: '#/components/schemas/ClusterOperationV2Provisioned'
      - description: |2-

                      <p>Properties of a provisioned cluster.</p>
        xml:
          name: provisioned
      example:
        OperationSteps: ""
        SourceClusterInfo:
          EnhancedMonitoring: ""
          KafkaVersion: ""
          NumberOfBrokerNodes: ""
          ConnectivityInfo:
            VpcConnectivity:
              ClientAuthentication:
                Sasl:
                  Iam:
                    Enabled: ""
                  Scram:
                    Enabled: ""
                Tls:
                  Enabled: ""
            PublicAccess:
              Type: ""
          EncryptionInfo:
            EncryptionAtRest:
              DataVolumeKMSKeyId: ""
            EncryptionInTransit:
              ClientBroker: ""
              InCluster: ""
          OpenMonitoring:
            Prometheus:
              JmxExporter:
                EnabledInBroker: ""
              NodeExporter:
                EnabledInBroker: ""
          BrokerEBSVolumeInfo: ""
          InstanceType: ""
          StorageMode: ""
          LoggingInfo:
            BrokerLogs:
              S3:
                Bucket: ""
                Enabled: ""
                Prefix: ""
              Firehose:
                DeliveryStream: ""
                Enabled: ""
              CloudWatchLogs:
                LogGroup: ""
                Enabled: ""
          ClientAuthentication:
            Sasl:
              Iam:
                Enabled: ""
              Scram:
                Enabled: ""
            Unauthenticated:
              Enabled: ""
            Tls:
              Enabled: ""
              CertificateAuthorityArnList: ""
          ConfigurationInfo:
            Revision: ""
            Arn: ""
        VpcConnectionInfo:
          Owner: ""
          UserIdentity:
            Type: ""
            PrincipalId: ""
          CreationTime: ""
          VpcConnectionArn: ""
        TargetClusterInfo:
          EnhancedMonitoring: ""
          KafkaVersion: ""
          NumberOfBrokerNodes: ""
          ConnectivityInfo:
            VpcConnectivity:
              ClientAuthentication:
                Sasl:
                  Iam:
                    Enabled: ""
                  Scram:
                    Enabled: ""
                Tls:
                  Enabled: ""
            PublicAccess:
              Type: ""
          EncryptionInfo:
            EncryptionAtRest:
              DataVolumeKMSKeyId: ""
            EncryptionInTransit:
              ClientBroker: ""
              InCluster: ""
          OpenMonitoring:
            Prometheus:
              JmxExporter:
                EnabledInBroker: ""
              NodeExporter:
                EnabledInBroker: ""
          BrokerEBSVolumeInfo: ""
          InstanceType: ""
          StorageMode: ""
          LoggingInfo:
            BrokerLogs:
              S3:
                Bucket: ""
                Enabled: ""
                Prefix: ""
              Firehose:
                DeliveryStream: ""
                Enabled: ""
              CloudWatchLogs:
                LogGroup: ""
                Enabled: ""
          ClientAuthentication:
            Sasl:
              Iam:
                Enabled: ""
              Scram:
                Enabled: ""
            Unauthenticated:
              Enabled: ""
            Tls:
              Enabled: ""
              CertificateAuthorityArnList: ""
          ConfigurationInfo:
            Revision: ""
            Arn: ""
      title: ClusterOperationV2_Provisioned
    ClusterOperationV2_Serverless:
      allOf:
      - $ref: '#/components/schemas/ClusterOperationV2Serverless'
      - description: |2-

                      <p>Properties of a serverless cluster.</p>
        xml:
          name: serverless
      example:
        VpcConnectionInfo:
          Owner: ""
          UserIdentity:
            Type: ""
            PrincipalId: ""
          CreationTime: ""
          VpcConnectionArn: ""
      title: ClusterOperationV2_Serverless
    VpcConnectionInfoServerless_UserIdentity:
      allOf:
      - $ref: '#/components/schemas/UserIdentity'
      - description: |2-

                      <p>Description of the requester that calls the API operation.</p>
        xml:
          name: userIdentity
      example:
        Type: ""
        PrincipalId: ""
      title: VpcConnectionInfoServerless_UserIdentity
    Prometheus_JmxExporter:
      allOf:
      - $ref: '#/components/schemas/JmxExporter'
      - description: "\n            <p>Indicates whether you want to turn on or turn\
          \ off the JMX Exporter.</p>\n         "
        xml:
          name: jmxExporter
      example:
        EnabledInBroker: ""
      title: Prometheus_JmxExporter
    Prometheus_NodeExporter:
      allOf:
      - $ref: '#/components/schemas/NodeExporter'
      - description: "\n            <p>Indicates whether you want to turn on or turn\
          \ off the Node Exporter.</p>\n         "
        xml:
          name: nodeExporter
      example:
        EnabledInBroker: ""
      title: Prometheus_NodeExporter
    NodeInfo_BrokerNodeInfo:
      allOf:
      - $ref: '#/components/schemas/BrokerNodeInfo'
      - description: "\n            <p>The broker node info.</p>\n         "
        xml:
          name: brokerNodeInfo
      title: NodeInfo_BrokerNodeInfo
    NodeInfo_ZookeeperNodeInfo:
      allOf:
      - $ref: '#/components/schemas/ZookeeperNodeInfo'
      - description: "\n            <p>The ZookeeperNodeInfo.</p>\n         "
        xml:
          name: zookeeperNodeInfo
      title: NodeInfo_ZookeeperNodeInfo
    UpdateClusterKafkaVersionRequest_ConfigurationInfo:
      allOf:
      - $ref: '#/components/schemas/ConfigurationInfo'
      - description: "\n            <p>The custom configuration that should be applied\
          \ on the new version of cluster.</p>\n            "
        xml:
          name: configurationInfo
      example:
        Revision: ""
        Arn: ""
      title: UpdateClusterKafkaVersionRequest_ConfigurationInfo
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
