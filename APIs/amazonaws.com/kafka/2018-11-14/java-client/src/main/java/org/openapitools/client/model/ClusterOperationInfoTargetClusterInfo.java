/*
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo;
import org.openapitools.client.model.CreateClusterV2RequestProvisionedClientAuthentication;
import org.openapitools.client.model.CreateClusterV2RequestProvisionedEncryptionInfo;
import org.openapitools.client.model.EnhancedMonitoring;
import org.openapitools.client.model.MutableClusterInfoConfigurationInfo;
import org.openapitools.client.model.MutableClusterInfoLoggingInfo;
import org.openapitools.client.model.MutableClusterInfoOpenMonitoring;
import org.openapitools.client.model.StorageMode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ClusterOperationInfoTargetClusterInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:48.211683-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ClusterOperationInfoTargetClusterInfo {
  public static final String SERIALIZED_NAME_BROKER_E_B_S_VOLUME_INFO = "BrokerEBSVolumeInfo";
  @SerializedName(SERIALIZED_NAME_BROKER_E_B_S_VOLUME_INFO)
  private List brokerEBSVolumeInfo;

  public static final String SERIALIZED_NAME_CONFIGURATION_INFO = "ConfigurationInfo";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_INFO)
  private MutableClusterInfoConfigurationInfo configurationInfo;

  public static final String SERIALIZED_NAME_NUMBER_OF_BROKER_NODES = "NumberOfBrokerNodes";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_BROKER_NODES)
  private Integer numberOfBrokerNodes;

  public static final String SERIALIZED_NAME_ENHANCED_MONITORING = "EnhancedMonitoring";
  @SerializedName(SERIALIZED_NAME_ENHANCED_MONITORING)
  private EnhancedMonitoring enhancedMonitoring;

  public static final String SERIALIZED_NAME_OPEN_MONITORING = "OpenMonitoring";
  @SerializedName(SERIALIZED_NAME_OPEN_MONITORING)
  private MutableClusterInfoOpenMonitoring openMonitoring;

  public static final String SERIALIZED_NAME_KAFKA_VERSION = "KafkaVersion";
  @SerializedName(SERIALIZED_NAME_KAFKA_VERSION)
  private String kafkaVersion;

  public static final String SERIALIZED_NAME_LOGGING_INFO = "LoggingInfo";
  @SerializedName(SERIALIZED_NAME_LOGGING_INFO)
  private MutableClusterInfoLoggingInfo loggingInfo;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "InstanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private String instanceType;

  public static final String SERIALIZED_NAME_CLIENT_AUTHENTICATION = "ClientAuthentication";
  @SerializedName(SERIALIZED_NAME_CLIENT_AUTHENTICATION)
  private CreateClusterV2RequestProvisionedClientAuthentication clientAuthentication;

  public static final String SERIALIZED_NAME_ENCRYPTION_INFO = "EncryptionInfo";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_INFO)
  private CreateClusterV2RequestProvisionedEncryptionInfo encryptionInfo;

  public static final String SERIALIZED_NAME_CONNECTIVITY_INFO = "ConnectivityInfo";
  @SerializedName(SERIALIZED_NAME_CONNECTIVITY_INFO)
  private CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo connectivityInfo;

  public static final String SERIALIZED_NAME_STORAGE_MODE = "StorageMode";
  @SerializedName(SERIALIZED_NAME_STORAGE_MODE)
  private StorageMode storageMode;

  public ClusterOperationInfoTargetClusterInfo() {
  }

  public ClusterOperationInfoTargetClusterInfo brokerEBSVolumeInfo(List brokerEBSVolumeInfo) {
    this.brokerEBSVolumeInfo = brokerEBSVolumeInfo;
    return this;
  }

  /**
   * Get brokerEBSVolumeInfo
   * @return brokerEBSVolumeInfo
   */
  @javax.annotation.Nullable
  public List getBrokerEBSVolumeInfo() {
    return brokerEBSVolumeInfo;
  }

  public void setBrokerEBSVolumeInfo(List brokerEBSVolumeInfo) {
    this.brokerEBSVolumeInfo = brokerEBSVolumeInfo;
  }


  public ClusterOperationInfoTargetClusterInfo configurationInfo(MutableClusterInfoConfigurationInfo configurationInfo) {
    this.configurationInfo = configurationInfo;
    return this;
  }

  /**
   * Get configurationInfo
   * @return configurationInfo
   */
  @javax.annotation.Nullable
  public MutableClusterInfoConfigurationInfo getConfigurationInfo() {
    return configurationInfo;
  }

  public void setConfigurationInfo(MutableClusterInfoConfigurationInfo configurationInfo) {
    this.configurationInfo = configurationInfo;
  }


  public ClusterOperationInfoTargetClusterInfo numberOfBrokerNodes(Integer numberOfBrokerNodes) {
    this.numberOfBrokerNodes = numberOfBrokerNodes;
    return this;
  }

  /**
   * Get numberOfBrokerNodes
   * @return numberOfBrokerNodes
   */
  @javax.annotation.Nullable
  public Integer getNumberOfBrokerNodes() {
    return numberOfBrokerNodes;
  }

  public void setNumberOfBrokerNodes(Integer numberOfBrokerNodes) {
    this.numberOfBrokerNodes = numberOfBrokerNodes;
  }


  public ClusterOperationInfoTargetClusterInfo enhancedMonitoring(EnhancedMonitoring enhancedMonitoring) {
    this.enhancedMonitoring = enhancedMonitoring;
    return this;
  }

  /**
   * Get enhancedMonitoring
   * @return enhancedMonitoring
   */
  @javax.annotation.Nullable
  public EnhancedMonitoring getEnhancedMonitoring() {
    return enhancedMonitoring;
  }

  public void setEnhancedMonitoring(EnhancedMonitoring enhancedMonitoring) {
    this.enhancedMonitoring = enhancedMonitoring;
  }


  public ClusterOperationInfoTargetClusterInfo openMonitoring(MutableClusterInfoOpenMonitoring openMonitoring) {
    this.openMonitoring = openMonitoring;
    return this;
  }

  /**
   * Get openMonitoring
   * @return openMonitoring
   */
  @javax.annotation.Nullable
  public MutableClusterInfoOpenMonitoring getOpenMonitoring() {
    return openMonitoring;
  }

  public void setOpenMonitoring(MutableClusterInfoOpenMonitoring openMonitoring) {
    this.openMonitoring = openMonitoring;
  }


  public ClusterOperationInfoTargetClusterInfo kafkaVersion(String kafkaVersion) {
    this.kafkaVersion = kafkaVersion;
    return this;
  }

  /**
   * Get kafkaVersion
   * @return kafkaVersion
   */
  @javax.annotation.Nullable
  public String getKafkaVersion() {
    return kafkaVersion;
  }

  public void setKafkaVersion(String kafkaVersion) {
    this.kafkaVersion = kafkaVersion;
  }


  public ClusterOperationInfoTargetClusterInfo loggingInfo(MutableClusterInfoLoggingInfo loggingInfo) {
    this.loggingInfo = loggingInfo;
    return this;
  }

  /**
   * Get loggingInfo
   * @return loggingInfo
   */
  @javax.annotation.Nullable
  public MutableClusterInfoLoggingInfo getLoggingInfo() {
    return loggingInfo;
  }

  public void setLoggingInfo(MutableClusterInfoLoggingInfo loggingInfo) {
    this.loggingInfo = loggingInfo;
  }


  public ClusterOperationInfoTargetClusterInfo instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Get instanceType
   * @return instanceType
   */
  @javax.annotation.Nullable
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }


  public ClusterOperationInfoTargetClusterInfo clientAuthentication(CreateClusterV2RequestProvisionedClientAuthentication clientAuthentication) {
    this.clientAuthentication = clientAuthentication;
    return this;
  }

  /**
   * Get clientAuthentication
   * @return clientAuthentication
   */
  @javax.annotation.Nullable
  public CreateClusterV2RequestProvisionedClientAuthentication getClientAuthentication() {
    return clientAuthentication;
  }

  public void setClientAuthentication(CreateClusterV2RequestProvisionedClientAuthentication clientAuthentication) {
    this.clientAuthentication = clientAuthentication;
  }


  public ClusterOperationInfoTargetClusterInfo encryptionInfo(CreateClusterV2RequestProvisionedEncryptionInfo encryptionInfo) {
    this.encryptionInfo = encryptionInfo;
    return this;
  }

  /**
   * Get encryptionInfo
   * @return encryptionInfo
   */
  @javax.annotation.Nullable
  public CreateClusterV2RequestProvisionedEncryptionInfo getEncryptionInfo() {
    return encryptionInfo;
  }

  public void setEncryptionInfo(CreateClusterV2RequestProvisionedEncryptionInfo encryptionInfo) {
    this.encryptionInfo = encryptionInfo;
  }


  public ClusterOperationInfoTargetClusterInfo connectivityInfo(CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo connectivityInfo) {
    this.connectivityInfo = connectivityInfo;
    return this;
  }

  /**
   * Get connectivityInfo
   * @return connectivityInfo
   */
  @javax.annotation.Nullable
  public CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo getConnectivityInfo() {
    return connectivityInfo;
  }

  public void setConnectivityInfo(CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo connectivityInfo) {
    this.connectivityInfo = connectivityInfo;
  }


  public ClusterOperationInfoTargetClusterInfo storageMode(StorageMode storageMode) {
    this.storageMode = storageMode;
    return this;
  }

  /**
   * Get storageMode
   * @return storageMode
   */
  @javax.annotation.Nullable
  public StorageMode getStorageMode() {
    return storageMode;
  }

  public void setStorageMode(StorageMode storageMode) {
    this.storageMode = storageMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterOperationInfoTargetClusterInfo clusterOperationInfoTargetClusterInfo = (ClusterOperationInfoTargetClusterInfo) o;
    return Objects.equals(this.brokerEBSVolumeInfo, clusterOperationInfoTargetClusterInfo.brokerEBSVolumeInfo) &&
        Objects.equals(this.configurationInfo, clusterOperationInfoTargetClusterInfo.configurationInfo) &&
        Objects.equals(this.numberOfBrokerNodes, clusterOperationInfoTargetClusterInfo.numberOfBrokerNodes) &&
        Objects.equals(this.enhancedMonitoring, clusterOperationInfoTargetClusterInfo.enhancedMonitoring) &&
        Objects.equals(this.openMonitoring, clusterOperationInfoTargetClusterInfo.openMonitoring) &&
        Objects.equals(this.kafkaVersion, clusterOperationInfoTargetClusterInfo.kafkaVersion) &&
        Objects.equals(this.loggingInfo, clusterOperationInfoTargetClusterInfo.loggingInfo) &&
        Objects.equals(this.instanceType, clusterOperationInfoTargetClusterInfo.instanceType) &&
        Objects.equals(this.clientAuthentication, clusterOperationInfoTargetClusterInfo.clientAuthentication) &&
        Objects.equals(this.encryptionInfo, clusterOperationInfoTargetClusterInfo.encryptionInfo) &&
        Objects.equals(this.connectivityInfo, clusterOperationInfoTargetClusterInfo.connectivityInfo) &&
        Objects.equals(this.storageMode, clusterOperationInfoTargetClusterInfo.storageMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(brokerEBSVolumeInfo, configurationInfo, numberOfBrokerNodes, enhancedMonitoring, openMonitoring, kafkaVersion, loggingInfo, instanceType, clientAuthentication, encryptionInfo, connectivityInfo, storageMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterOperationInfoTargetClusterInfo {\n");
    sb.append("    brokerEBSVolumeInfo: ").append(toIndentedString(brokerEBSVolumeInfo)).append("\n");
    sb.append("    configurationInfo: ").append(toIndentedString(configurationInfo)).append("\n");
    sb.append("    numberOfBrokerNodes: ").append(toIndentedString(numberOfBrokerNodes)).append("\n");
    sb.append("    enhancedMonitoring: ").append(toIndentedString(enhancedMonitoring)).append("\n");
    sb.append("    openMonitoring: ").append(toIndentedString(openMonitoring)).append("\n");
    sb.append("    kafkaVersion: ").append(toIndentedString(kafkaVersion)).append("\n");
    sb.append("    loggingInfo: ").append(toIndentedString(loggingInfo)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    clientAuthentication: ").append(toIndentedString(clientAuthentication)).append("\n");
    sb.append("    encryptionInfo: ").append(toIndentedString(encryptionInfo)).append("\n");
    sb.append("    connectivityInfo: ").append(toIndentedString(connectivityInfo)).append("\n");
    sb.append("    storageMode: ").append(toIndentedString(storageMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BrokerEBSVolumeInfo");
    openapiFields.add("ConfigurationInfo");
    openapiFields.add("NumberOfBrokerNodes");
    openapiFields.add("EnhancedMonitoring");
    openapiFields.add("OpenMonitoring");
    openapiFields.add("KafkaVersion");
    openapiFields.add("LoggingInfo");
    openapiFields.add("InstanceType");
    openapiFields.add("ClientAuthentication");
    openapiFields.add("EncryptionInfo");
    openapiFields.add("ConnectivityInfo");
    openapiFields.add("StorageMode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ClusterOperationInfoTargetClusterInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ClusterOperationInfoTargetClusterInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClusterOperationInfoTargetClusterInfo is not found in the empty JSON string", ClusterOperationInfoTargetClusterInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ClusterOperationInfoTargetClusterInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ClusterOperationInfoTargetClusterInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `BrokerEBSVolumeInfo`
      if (jsonObj.get("BrokerEBSVolumeInfo") != null && !jsonObj.get("BrokerEBSVolumeInfo").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("BrokerEBSVolumeInfo"));
      }
      // validate the optional field `ConfigurationInfo`
      if (jsonObj.get("ConfigurationInfo") != null && !jsonObj.get("ConfigurationInfo").isJsonNull()) {
        MutableClusterInfoConfigurationInfo.validateJsonElement(jsonObj.get("ConfigurationInfo"));
      }
      // validate the optional field `NumberOfBrokerNodes`
      if (jsonObj.get("NumberOfBrokerNodes") != null && !jsonObj.get("NumberOfBrokerNodes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfBrokerNodes"));
      }
      // validate the optional field `EnhancedMonitoring`
      if (jsonObj.get("EnhancedMonitoring") != null && !jsonObj.get("EnhancedMonitoring").isJsonNull()) {
        EnhancedMonitoring.validateJsonElement(jsonObj.get("EnhancedMonitoring"));
      }
      // validate the optional field `OpenMonitoring`
      if (jsonObj.get("OpenMonitoring") != null && !jsonObj.get("OpenMonitoring").isJsonNull()) {
        MutableClusterInfoOpenMonitoring.validateJsonElement(jsonObj.get("OpenMonitoring"));
      }
      // validate the optional field `KafkaVersion`
      if (jsonObj.get("KafkaVersion") != null && !jsonObj.get("KafkaVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KafkaVersion"));
      }
      // validate the optional field `LoggingInfo`
      if (jsonObj.get("LoggingInfo") != null && !jsonObj.get("LoggingInfo").isJsonNull()) {
        MutableClusterInfoLoggingInfo.validateJsonElement(jsonObj.get("LoggingInfo"));
      }
      // validate the optional field `InstanceType`
      if (jsonObj.get("InstanceType") != null && !jsonObj.get("InstanceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceType"));
      }
      // validate the optional field `ClientAuthentication`
      if (jsonObj.get("ClientAuthentication") != null && !jsonObj.get("ClientAuthentication").isJsonNull()) {
        CreateClusterV2RequestProvisionedClientAuthentication.validateJsonElement(jsonObj.get("ClientAuthentication"));
      }
      // validate the optional field `EncryptionInfo`
      if (jsonObj.get("EncryptionInfo") != null && !jsonObj.get("EncryptionInfo").isJsonNull()) {
        CreateClusterV2RequestProvisionedEncryptionInfo.validateJsonElement(jsonObj.get("EncryptionInfo"));
      }
      // validate the optional field `ConnectivityInfo`
      if (jsonObj.get("ConnectivityInfo") != null && !jsonObj.get("ConnectivityInfo").isJsonNull()) {
        CreateClusterRequestBrokerNodeGroupInfoConnectivityInfo.validateJsonElement(jsonObj.get("ConnectivityInfo"));
      }
      // validate the optional field `StorageMode`
      if (jsonObj.get("StorageMode") != null && !jsonObj.get("StorageMode").isJsonNull()) {
        StorageMode.validateJsonElement(jsonObj.get("StorageMode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClusterOperationInfoTargetClusterInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClusterOperationInfoTargetClusterInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClusterOperationInfoTargetClusterInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClusterOperationInfoTargetClusterInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ClusterOperationInfoTargetClusterInfo>() {
           @Override
           public void write(JsonWriter out, ClusterOperationInfoTargetClusterInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClusterOperationInfoTargetClusterInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ClusterOperationInfoTargetClusterInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ClusterOperationInfoTargetClusterInfo
   * @throws IOException if the JSON string is invalid with respect to ClusterOperationInfoTargetClusterInfo
   */
  public static ClusterOperationInfoTargetClusterInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClusterOperationInfoTargetClusterInfo.class);
  }

  /**
   * Convert an instance of ClusterOperationInfoTargetClusterInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

