/*
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreateClusterRequestBrokerNodeGroupInfo;
import org.openapitools.client.model.CreateClusterRequestClientAuthentication;
import org.openapitools.client.model.CreateClusterRequestConfigurationInfo;
import org.openapitools.client.model.CreateClusterRequestEncryptionInfo;
import org.openapitools.client.model.CreateClusterRequestLoggingInfo;
import org.openapitools.client.model.CreateClusterRequestOpenMonitoring;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateClusterRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:48.211683-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateClusterRequest {
  public static final String SERIALIZED_NAME_BROKER_NODE_GROUP_INFO = "brokerNodeGroupInfo";
  @SerializedName(SERIALIZED_NAME_BROKER_NODE_GROUP_INFO)
  private CreateClusterRequestBrokerNodeGroupInfo brokerNodeGroupInfo;

  public static final String SERIALIZED_NAME_CLIENT_AUTHENTICATION = "clientAuthentication";
  @SerializedName(SERIALIZED_NAME_CLIENT_AUTHENTICATION)
  private CreateClusterRequestClientAuthentication clientAuthentication;

  public static final String SERIALIZED_NAME_CLUSTER_NAME = "clusterName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAME)
  private String clusterName;

  public static final String SERIALIZED_NAME_CONFIGURATION_INFO = "configurationInfo";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_INFO)
  private CreateClusterRequestConfigurationInfo configurationInfo;

  public static final String SERIALIZED_NAME_ENCRYPTION_INFO = "encryptionInfo";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_INFO)
  private CreateClusterRequestEncryptionInfo encryptionInfo;

  /**
   *              &lt;p&gt;Specifies which metrics are gathered for the MSK cluster. This property has the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each of these levels of monitoring, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html\&quot;&gt;Monitoring&lt;/a&gt;.&lt;/p&gt;          
   */
  @JsonAdapter(EnhancedMonitoringEnum.Adapter.class)
  public enum EnhancedMonitoringEnum {
    DEFAULT("DEFAULT"),
    
    PER_BROKER("PER_BROKER"),
    
    PER_TOPIC_PER_BROKER("PER_TOPIC_PER_BROKER"),
    
    PER_TOPIC_PER_PARTITION("PER_TOPIC_PER_PARTITION");

    private String value;

    EnhancedMonitoringEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EnhancedMonitoringEnum fromValue(String value) {
      for (EnhancedMonitoringEnum b : EnhancedMonitoringEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EnhancedMonitoringEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EnhancedMonitoringEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EnhancedMonitoringEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EnhancedMonitoringEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EnhancedMonitoringEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENHANCED_MONITORING = "enhancedMonitoring";
  @SerializedName(SERIALIZED_NAME_ENHANCED_MONITORING)
  private EnhancedMonitoringEnum enhancedMonitoring;

  public static final String SERIALIZED_NAME_OPEN_MONITORING = "openMonitoring";
  @SerializedName(SERIALIZED_NAME_OPEN_MONITORING)
  private CreateClusterRequestOpenMonitoring openMonitoring;

  public static final String SERIALIZED_NAME_KAFKA_VERSION = "kafkaVersion";
  @SerializedName(SERIALIZED_NAME_KAFKA_VERSION)
  private String kafkaVersion;

  public static final String SERIALIZED_NAME_LOGGING_INFO = "loggingInfo";
  @SerializedName(SERIALIZED_NAME_LOGGING_INFO)
  private CreateClusterRequestLoggingInfo loggingInfo;

  public static final String SERIALIZED_NAME_NUMBER_OF_BROKER_NODES = "numberOfBrokerNodes";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_BROKER_NODES)
  private Integer numberOfBrokerNodes;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  /**
   * Controls storage mode for various supported storage tiers.
   */
  @JsonAdapter(StorageModeEnum.Adapter.class)
  public enum StorageModeEnum {
    LOCAL("LOCAL"),
    
    TIERED("TIERED");

    private String value;

    StorageModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StorageModeEnum fromValue(String value) {
      for (StorageModeEnum b : StorageModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StorageModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StorageModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StorageModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StorageModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StorageModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STORAGE_MODE = "storageMode";
  @SerializedName(SERIALIZED_NAME_STORAGE_MODE)
  private StorageModeEnum storageMode;

  public CreateClusterRequest() {
  }

  public CreateClusterRequest brokerNodeGroupInfo(CreateClusterRequestBrokerNodeGroupInfo brokerNodeGroupInfo) {
    this.brokerNodeGroupInfo = brokerNodeGroupInfo;
    return this;
  }

  /**
   * Get brokerNodeGroupInfo
   * @return brokerNodeGroupInfo
   */
  @javax.annotation.Nonnull
  public CreateClusterRequestBrokerNodeGroupInfo getBrokerNodeGroupInfo() {
    return brokerNodeGroupInfo;
  }

  public void setBrokerNodeGroupInfo(CreateClusterRequestBrokerNodeGroupInfo brokerNodeGroupInfo) {
    this.brokerNodeGroupInfo = brokerNodeGroupInfo;
  }


  public CreateClusterRequest clientAuthentication(CreateClusterRequestClientAuthentication clientAuthentication) {
    this.clientAuthentication = clientAuthentication;
    return this;
  }

  /**
   * Get clientAuthentication
   * @return clientAuthentication
   */
  @javax.annotation.Nullable
  public CreateClusterRequestClientAuthentication getClientAuthentication() {
    return clientAuthentication;
  }

  public void setClientAuthentication(CreateClusterRequestClientAuthentication clientAuthentication) {
    this.clientAuthentication = clientAuthentication;
  }


  public CreateClusterRequest clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

  /**
   *              &lt;p&gt;The name of the cluster.&lt;/p&gt;          
   * @return clusterName
   */
  @javax.annotation.Nonnull
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }


  public CreateClusterRequest configurationInfo(CreateClusterRequestConfigurationInfo configurationInfo) {
    this.configurationInfo = configurationInfo;
    return this;
  }

  /**
   * Get configurationInfo
   * @return configurationInfo
   */
  @javax.annotation.Nullable
  public CreateClusterRequestConfigurationInfo getConfigurationInfo() {
    return configurationInfo;
  }

  public void setConfigurationInfo(CreateClusterRequestConfigurationInfo configurationInfo) {
    this.configurationInfo = configurationInfo;
  }


  public CreateClusterRequest encryptionInfo(CreateClusterRequestEncryptionInfo encryptionInfo) {
    this.encryptionInfo = encryptionInfo;
    return this;
  }

  /**
   * Get encryptionInfo
   * @return encryptionInfo
   */
  @javax.annotation.Nullable
  public CreateClusterRequestEncryptionInfo getEncryptionInfo() {
    return encryptionInfo;
  }

  public void setEncryptionInfo(CreateClusterRequestEncryptionInfo encryptionInfo) {
    this.encryptionInfo = encryptionInfo;
  }


  public CreateClusterRequest enhancedMonitoring(EnhancedMonitoringEnum enhancedMonitoring) {
    this.enhancedMonitoring = enhancedMonitoring;
    return this;
  }

  /**
   *              &lt;p&gt;Specifies which metrics are gathered for the MSK cluster. This property has the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each of these levels of monitoring, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html\&quot;&gt;Monitoring&lt;/a&gt;.&lt;/p&gt;          
   * @return enhancedMonitoring
   */
  @javax.annotation.Nullable
  public EnhancedMonitoringEnum getEnhancedMonitoring() {
    return enhancedMonitoring;
  }

  public void setEnhancedMonitoring(EnhancedMonitoringEnum enhancedMonitoring) {
    this.enhancedMonitoring = enhancedMonitoring;
  }


  public CreateClusterRequest openMonitoring(CreateClusterRequestOpenMonitoring openMonitoring) {
    this.openMonitoring = openMonitoring;
    return this;
  }

  /**
   * Get openMonitoring
   * @return openMonitoring
   */
  @javax.annotation.Nullable
  public CreateClusterRequestOpenMonitoring getOpenMonitoring() {
    return openMonitoring;
  }

  public void setOpenMonitoring(CreateClusterRequestOpenMonitoring openMonitoring) {
    this.openMonitoring = openMonitoring;
  }


  public CreateClusterRequest kafkaVersion(String kafkaVersion) {
    this.kafkaVersion = kafkaVersion;
    return this;
  }

  /**
   *              &lt;p&gt;The version of Apache Kafka.&lt;/p&gt;          
   * @return kafkaVersion
   */
  @javax.annotation.Nonnull
  public String getKafkaVersion() {
    return kafkaVersion;
  }

  public void setKafkaVersion(String kafkaVersion) {
    this.kafkaVersion = kafkaVersion;
  }


  public CreateClusterRequest loggingInfo(CreateClusterRequestLoggingInfo loggingInfo) {
    this.loggingInfo = loggingInfo;
    return this;
  }

  /**
   * Get loggingInfo
   * @return loggingInfo
   */
  @javax.annotation.Nullable
  public CreateClusterRequestLoggingInfo getLoggingInfo() {
    return loggingInfo;
  }

  public void setLoggingInfo(CreateClusterRequestLoggingInfo loggingInfo) {
    this.loggingInfo = loggingInfo;
  }


  public CreateClusterRequest numberOfBrokerNodes(Integer numberOfBrokerNodes) {
    this.numberOfBrokerNodes = numberOfBrokerNodes;
    return this;
  }

  /**
   *              &lt;p&gt;The number of broker nodes in the cluster.&lt;/p&gt;          
   * minimum: 1
   * maximum: 15
   * @return numberOfBrokerNodes
   */
  @javax.annotation.Nonnull
  public Integer getNumberOfBrokerNodes() {
    return numberOfBrokerNodes;
  }

  public void setNumberOfBrokerNodes(Integer numberOfBrokerNodes) {
    this.numberOfBrokerNodes = numberOfBrokerNodes;
  }


  public CreateClusterRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateClusterRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   *              &lt;p&gt;Create tags when creating the cluster.&lt;/p&gt;          
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  public CreateClusterRequest storageMode(StorageModeEnum storageMode) {
    this.storageMode = storageMode;
    return this;
  }

  /**
   * Controls storage mode for various supported storage tiers.
   * @return storageMode
   */
  @javax.annotation.Nullable
  public StorageModeEnum getStorageMode() {
    return storageMode;
  }

  public void setStorageMode(StorageModeEnum storageMode) {
    this.storageMode = storageMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateClusterRequest createClusterRequest = (CreateClusterRequest) o;
    return Objects.equals(this.brokerNodeGroupInfo, createClusterRequest.brokerNodeGroupInfo) &&
        Objects.equals(this.clientAuthentication, createClusterRequest.clientAuthentication) &&
        Objects.equals(this.clusterName, createClusterRequest.clusterName) &&
        Objects.equals(this.configurationInfo, createClusterRequest.configurationInfo) &&
        Objects.equals(this.encryptionInfo, createClusterRequest.encryptionInfo) &&
        Objects.equals(this.enhancedMonitoring, createClusterRequest.enhancedMonitoring) &&
        Objects.equals(this.openMonitoring, createClusterRequest.openMonitoring) &&
        Objects.equals(this.kafkaVersion, createClusterRequest.kafkaVersion) &&
        Objects.equals(this.loggingInfo, createClusterRequest.loggingInfo) &&
        Objects.equals(this.numberOfBrokerNodes, createClusterRequest.numberOfBrokerNodes) &&
        Objects.equals(this.tags, createClusterRequest.tags) &&
        Objects.equals(this.storageMode, createClusterRequest.storageMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(brokerNodeGroupInfo, clientAuthentication, clusterName, configurationInfo, encryptionInfo, enhancedMonitoring, openMonitoring, kafkaVersion, loggingInfo, numberOfBrokerNodes, tags, storageMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateClusterRequest {\n");
    sb.append("    brokerNodeGroupInfo: ").append(toIndentedString(brokerNodeGroupInfo)).append("\n");
    sb.append("    clientAuthentication: ").append(toIndentedString(clientAuthentication)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    configurationInfo: ").append(toIndentedString(configurationInfo)).append("\n");
    sb.append("    encryptionInfo: ").append(toIndentedString(encryptionInfo)).append("\n");
    sb.append("    enhancedMonitoring: ").append(toIndentedString(enhancedMonitoring)).append("\n");
    sb.append("    openMonitoring: ").append(toIndentedString(openMonitoring)).append("\n");
    sb.append("    kafkaVersion: ").append(toIndentedString(kafkaVersion)).append("\n");
    sb.append("    loggingInfo: ").append(toIndentedString(loggingInfo)).append("\n");
    sb.append("    numberOfBrokerNodes: ").append(toIndentedString(numberOfBrokerNodes)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    storageMode: ").append(toIndentedString(storageMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("brokerNodeGroupInfo");
    openapiFields.add("clientAuthentication");
    openapiFields.add("clusterName");
    openapiFields.add("configurationInfo");
    openapiFields.add("encryptionInfo");
    openapiFields.add("enhancedMonitoring");
    openapiFields.add("openMonitoring");
    openapiFields.add("kafkaVersion");
    openapiFields.add("loggingInfo");
    openapiFields.add("numberOfBrokerNodes");
    openapiFields.add("tags");
    openapiFields.add("storageMode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("brokerNodeGroupInfo");
    openapiRequiredFields.add("clusterName");
    openapiRequiredFields.add("kafkaVersion");
    openapiRequiredFields.add("numberOfBrokerNodes");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateClusterRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateClusterRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateClusterRequest is not found in the empty JSON string", CreateClusterRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateClusterRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateClusterRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateClusterRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `brokerNodeGroupInfo`
      CreateClusterRequestBrokerNodeGroupInfo.validateJsonElement(jsonObj.get("brokerNodeGroupInfo"));
      // validate the optional field `clientAuthentication`
      if (jsonObj.get("clientAuthentication") != null && !jsonObj.get("clientAuthentication").isJsonNull()) {
        CreateClusterRequestClientAuthentication.validateJsonElement(jsonObj.get("clientAuthentication"));
      }
      if (!jsonObj.get("clusterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clusterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clusterName").toString()));
      }
      // validate the optional field `configurationInfo`
      if (jsonObj.get("configurationInfo") != null && !jsonObj.get("configurationInfo").isJsonNull()) {
        CreateClusterRequestConfigurationInfo.validateJsonElement(jsonObj.get("configurationInfo"));
      }
      // validate the optional field `encryptionInfo`
      if (jsonObj.get("encryptionInfo") != null && !jsonObj.get("encryptionInfo").isJsonNull()) {
        CreateClusterRequestEncryptionInfo.validateJsonElement(jsonObj.get("encryptionInfo"));
      }
      if ((jsonObj.get("enhancedMonitoring") != null && !jsonObj.get("enhancedMonitoring").isJsonNull()) && !jsonObj.get("enhancedMonitoring").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enhancedMonitoring` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enhancedMonitoring").toString()));
      }
      // validate the optional field `enhancedMonitoring`
      if (jsonObj.get("enhancedMonitoring") != null && !jsonObj.get("enhancedMonitoring").isJsonNull()) {
        EnhancedMonitoringEnum.validateJsonElement(jsonObj.get("enhancedMonitoring"));
      }
      // validate the optional field `openMonitoring`
      if (jsonObj.get("openMonitoring") != null && !jsonObj.get("openMonitoring").isJsonNull()) {
        CreateClusterRequestOpenMonitoring.validateJsonElement(jsonObj.get("openMonitoring"));
      }
      if (!jsonObj.get("kafkaVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kafkaVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kafkaVersion").toString()));
      }
      // validate the optional field `loggingInfo`
      if (jsonObj.get("loggingInfo") != null && !jsonObj.get("loggingInfo").isJsonNull()) {
        CreateClusterRequestLoggingInfo.validateJsonElement(jsonObj.get("loggingInfo"));
      }
      if ((jsonObj.get("storageMode") != null && !jsonObj.get("storageMode").isJsonNull()) && !jsonObj.get("storageMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storageMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storageMode").toString()));
      }
      // validate the optional field `storageMode`
      if (jsonObj.get("storageMode") != null && !jsonObj.get("storageMode").isJsonNull()) {
        StorageModeEnum.validateJsonElement(jsonObj.get("storageMode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateClusterRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateClusterRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateClusterRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateClusterRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateClusterRequest>() {
           @Override
           public void write(JsonWriter out, CreateClusterRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateClusterRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateClusterRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateClusterRequest
   * @throws IOException if the JSON string is invalid with respect to CreateClusterRequest
   */
  public static CreateClusterRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateClusterRequest.class);
  }

  /**
   * Convert an instance of CreateClusterRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

