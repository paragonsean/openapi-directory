/*
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 *              &lt;p&gt;Specifies which metrics are gathered for the MSK cluster. This property has the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each of these levels of monitoring, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html\&quot;&gt;Monitoring&lt;/a&gt;.&lt;/p&gt;          
 */
@JsonAdapter(EnhancedMonitoring.Adapter.class)
public enum EnhancedMonitoring {
  
  DEFAULT("DEFAULT"),
  
  PER_BROKER("PER_BROKER"),
  
  PER_TOPIC_PER_BROKER("PER_TOPIC_PER_BROKER"),
  
  PER_TOPIC_PER_PARTITION("PER_TOPIC_PER_PARTITION");

  private String value;

  EnhancedMonitoring(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnhancedMonitoring fromValue(String value) {
    for (EnhancedMonitoring b : EnhancedMonitoring.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnhancedMonitoring> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnhancedMonitoring enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnhancedMonitoring read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnhancedMonitoring.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    EnhancedMonitoring.fromValue(value);
  }
}

