/*
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ClusterOperationV2ErrorInfo;
import org.openapitools.client.model.ClusterOperationV2Provisioned;
import org.openapitools.client.model.ClusterOperationV2Serverless;
import org.openapitools.client.model.ClusterType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeClusterOperationV2ResponseClusterOperationInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:48.211683-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeClusterOperationV2ResponseClusterOperationInfo {
  public static final String SERIALIZED_NAME_CLUSTER_ARN = "ClusterArn";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ARN)
  private String clusterArn;

  public static final String SERIALIZED_NAME_CLUSTER_TYPE = "ClusterType";
  @SerializedName(SERIALIZED_NAME_CLUSTER_TYPE)
  private ClusterType clusterType;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_ERROR_INFO = "ErrorInfo";
  @SerializedName(SERIALIZED_NAME_ERROR_INFO)
  private ClusterOperationV2ErrorInfo errorInfo;

  public static final String SERIALIZED_NAME_OPERATION_ARN = "OperationArn";
  @SerializedName(SERIALIZED_NAME_OPERATION_ARN)
  private String operationArn;

  public static final String SERIALIZED_NAME_OPERATION_STATE = "OperationState";
  @SerializedName(SERIALIZED_NAME_OPERATION_STATE)
  private String operationState;

  public static final String SERIALIZED_NAME_OPERATION_TYPE = "OperationType";
  @SerializedName(SERIALIZED_NAME_OPERATION_TYPE)
  private String operationType;

  public static final String SERIALIZED_NAME_PROVISIONED = "Provisioned";
  @SerializedName(SERIALIZED_NAME_PROVISIONED)
  private ClusterOperationV2Provisioned provisioned;

  public static final String SERIALIZED_NAME_SERVERLESS = "Serverless";
  @SerializedName(SERIALIZED_NAME_SERVERLESS)
  private ClusterOperationV2Serverless serverless;

  public DescribeClusterOperationV2ResponseClusterOperationInfo() {
  }

  public DescribeClusterOperationV2ResponseClusterOperationInfo clusterArn(String clusterArn) {
    this.clusterArn = clusterArn;
    return this;
  }

  /**
   * Get clusterArn
   * @return clusterArn
   */
  @javax.annotation.Nullable
  public String getClusterArn() {
    return clusterArn;
  }

  public void setClusterArn(String clusterArn) {
    this.clusterArn = clusterArn;
  }


  public DescribeClusterOperationV2ResponseClusterOperationInfo clusterType(ClusterType clusterType) {
    this.clusterType = clusterType;
    return this;
  }

  /**
   * Get clusterType
   * @return clusterType
   */
  @javax.annotation.Nullable
  public ClusterType getClusterType() {
    return clusterType;
  }

  public void setClusterType(ClusterType clusterType) {
    this.clusterType = clusterType;
  }


  public DescribeClusterOperationV2ResponseClusterOperationInfo startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public DescribeClusterOperationV2ResponseClusterOperationInfo endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public DescribeClusterOperationV2ResponseClusterOperationInfo errorInfo(ClusterOperationV2ErrorInfo errorInfo) {
    this.errorInfo = errorInfo;
    return this;
  }

  /**
   * Get errorInfo
   * @return errorInfo
   */
  @javax.annotation.Nullable
  public ClusterOperationV2ErrorInfo getErrorInfo() {
    return errorInfo;
  }

  public void setErrorInfo(ClusterOperationV2ErrorInfo errorInfo) {
    this.errorInfo = errorInfo;
  }


  public DescribeClusterOperationV2ResponseClusterOperationInfo operationArn(String operationArn) {
    this.operationArn = operationArn;
    return this;
  }

  /**
   * Get operationArn
   * @return operationArn
   */
  @javax.annotation.Nullable
  public String getOperationArn() {
    return operationArn;
  }

  public void setOperationArn(String operationArn) {
    this.operationArn = operationArn;
  }


  public DescribeClusterOperationV2ResponseClusterOperationInfo operationState(String operationState) {
    this.operationState = operationState;
    return this;
  }

  /**
   * Get operationState
   * @return operationState
   */
  @javax.annotation.Nullable
  public String getOperationState() {
    return operationState;
  }

  public void setOperationState(String operationState) {
    this.operationState = operationState;
  }


  public DescribeClusterOperationV2ResponseClusterOperationInfo operationType(String operationType) {
    this.operationType = operationType;
    return this;
  }

  /**
   * Get operationType
   * @return operationType
   */
  @javax.annotation.Nullable
  public String getOperationType() {
    return operationType;
  }

  public void setOperationType(String operationType) {
    this.operationType = operationType;
  }


  public DescribeClusterOperationV2ResponseClusterOperationInfo provisioned(ClusterOperationV2Provisioned provisioned) {
    this.provisioned = provisioned;
    return this;
  }

  /**
   * Get provisioned
   * @return provisioned
   */
  @javax.annotation.Nullable
  public ClusterOperationV2Provisioned getProvisioned() {
    return provisioned;
  }

  public void setProvisioned(ClusterOperationV2Provisioned provisioned) {
    this.provisioned = provisioned;
  }


  public DescribeClusterOperationV2ResponseClusterOperationInfo serverless(ClusterOperationV2Serverless serverless) {
    this.serverless = serverless;
    return this;
  }

  /**
   * Get serverless
   * @return serverless
   */
  @javax.annotation.Nullable
  public ClusterOperationV2Serverless getServerless() {
    return serverless;
  }

  public void setServerless(ClusterOperationV2Serverless serverless) {
    this.serverless = serverless;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeClusterOperationV2ResponseClusterOperationInfo describeClusterOperationV2ResponseClusterOperationInfo = (DescribeClusterOperationV2ResponseClusterOperationInfo) o;
    return Objects.equals(this.clusterArn, describeClusterOperationV2ResponseClusterOperationInfo.clusterArn) &&
        Objects.equals(this.clusterType, describeClusterOperationV2ResponseClusterOperationInfo.clusterType) &&
        Objects.equals(this.startTime, describeClusterOperationV2ResponseClusterOperationInfo.startTime) &&
        Objects.equals(this.endTime, describeClusterOperationV2ResponseClusterOperationInfo.endTime) &&
        Objects.equals(this.errorInfo, describeClusterOperationV2ResponseClusterOperationInfo.errorInfo) &&
        Objects.equals(this.operationArn, describeClusterOperationV2ResponseClusterOperationInfo.operationArn) &&
        Objects.equals(this.operationState, describeClusterOperationV2ResponseClusterOperationInfo.operationState) &&
        Objects.equals(this.operationType, describeClusterOperationV2ResponseClusterOperationInfo.operationType) &&
        Objects.equals(this.provisioned, describeClusterOperationV2ResponseClusterOperationInfo.provisioned) &&
        Objects.equals(this.serverless, describeClusterOperationV2ResponseClusterOperationInfo.serverless);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterArn, clusterType, startTime, endTime, errorInfo, operationArn, operationState, operationType, provisioned, serverless);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeClusterOperationV2ResponseClusterOperationInfo {\n");
    sb.append("    clusterArn: ").append(toIndentedString(clusterArn)).append("\n");
    sb.append("    clusterType: ").append(toIndentedString(clusterType)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    errorInfo: ").append(toIndentedString(errorInfo)).append("\n");
    sb.append("    operationArn: ").append(toIndentedString(operationArn)).append("\n");
    sb.append("    operationState: ").append(toIndentedString(operationState)).append("\n");
    sb.append("    operationType: ").append(toIndentedString(operationType)).append("\n");
    sb.append("    provisioned: ").append(toIndentedString(provisioned)).append("\n");
    sb.append("    serverless: ").append(toIndentedString(serverless)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClusterArn");
    openapiFields.add("ClusterType");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("ErrorInfo");
    openapiFields.add("OperationArn");
    openapiFields.add("OperationState");
    openapiFields.add("OperationType");
    openapiFields.add("Provisioned");
    openapiFields.add("Serverless");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeClusterOperationV2ResponseClusterOperationInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeClusterOperationV2ResponseClusterOperationInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeClusterOperationV2ResponseClusterOperationInfo is not found in the empty JSON string", DescribeClusterOperationV2ResponseClusterOperationInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeClusterOperationV2ResponseClusterOperationInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeClusterOperationV2ResponseClusterOperationInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ClusterArn`
      if (jsonObj.get("ClusterArn") != null && !jsonObj.get("ClusterArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterArn"));
      }
      // validate the optional field `ClusterType`
      if (jsonObj.get("ClusterType") != null && !jsonObj.get("ClusterType").isJsonNull()) {
        ClusterType.validateJsonElement(jsonObj.get("ClusterType"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `ErrorInfo`
      if (jsonObj.get("ErrorInfo") != null && !jsonObj.get("ErrorInfo").isJsonNull()) {
        ClusterOperationV2ErrorInfo.validateJsonElement(jsonObj.get("ErrorInfo"));
      }
      // validate the optional field `OperationArn`
      if (jsonObj.get("OperationArn") != null && !jsonObj.get("OperationArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OperationArn"));
      }
      // validate the optional field `OperationState`
      if (jsonObj.get("OperationState") != null && !jsonObj.get("OperationState").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OperationState"));
      }
      // validate the optional field `OperationType`
      if (jsonObj.get("OperationType") != null && !jsonObj.get("OperationType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OperationType"));
      }
      // validate the optional field `Provisioned`
      if (jsonObj.get("Provisioned") != null && !jsonObj.get("Provisioned").isJsonNull()) {
        ClusterOperationV2Provisioned.validateJsonElement(jsonObj.get("Provisioned"));
      }
      // validate the optional field `Serverless`
      if (jsonObj.get("Serverless") != null && !jsonObj.get("Serverless").isJsonNull()) {
        ClusterOperationV2Serverless.validateJsonElement(jsonObj.get("Serverless"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeClusterOperationV2ResponseClusterOperationInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeClusterOperationV2ResponseClusterOperationInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeClusterOperationV2ResponseClusterOperationInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeClusterOperationV2ResponseClusterOperationInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeClusterOperationV2ResponseClusterOperationInfo>() {
           @Override
           public void write(JsonWriter out, DescribeClusterOperationV2ResponseClusterOperationInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeClusterOperationV2ResponseClusterOperationInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeClusterOperationV2ResponseClusterOperationInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeClusterOperationV2ResponseClusterOperationInfo
   * @throws IOException if the JSON string is invalid with respect to DescribeClusterOperationV2ResponseClusterOperationInfo
   */
  public static DescribeClusterOperationV2ResponseClusterOperationInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeClusterOperationV2ResponseClusterOperationInfo.class);
  }

  /**
   * Convert an instance of DescribeClusterOperationV2ResponseClusterOperationInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

