/*
 * Managed Streaming for Kafka
 *                 <p>The operations for managing an Amazon MSK cluster.</p>             
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetBootstrapBrokersResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:48.211683-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetBootstrapBrokersResponse {
  public static final String SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING = "BootstrapBrokerString";
  @SerializedName(SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING)
  private String bootstrapBrokerString;

  public static final String SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_TLS = "BootstrapBrokerStringTls";
  @SerializedName(SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_TLS)
  private String bootstrapBrokerStringTls;

  public static final String SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_SASL_SCRAM = "BootstrapBrokerStringSaslScram";
  @SerializedName(SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_SASL_SCRAM)
  private String bootstrapBrokerStringSaslScram;

  public static final String SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_SASL_IAM = "BootstrapBrokerStringSaslIam";
  @SerializedName(SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_SASL_IAM)
  private String bootstrapBrokerStringSaslIam;

  public static final String SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_PUBLIC_TLS = "BootstrapBrokerStringPublicTls";
  @SerializedName(SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_PUBLIC_TLS)
  private String bootstrapBrokerStringPublicTls;

  public static final String SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_PUBLIC_SASL_SCRAM = "BootstrapBrokerStringPublicSaslScram";
  @SerializedName(SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_PUBLIC_SASL_SCRAM)
  private String bootstrapBrokerStringPublicSaslScram;

  public static final String SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_PUBLIC_SASL_IAM = "BootstrapBrokerStringPublicSaslIam";
  @SerializedName(SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_PUBLIC_SASL_IAM)
  private String bootstrapBrokerStringPublicSaslIam;

  public static final String SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_VPC_CONNECTIVITY_TLS = "BootstrapBrokerStringVpcConnectivityTls";
  @SerializedName(SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_VPC_CONNECTIVITY_TLS)
  private String bootstrapBrokerStringVpcConnectivityTls;

  public static final String SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_VPC_CONNECTIVITY_SASL_SCRAM = "BootstrapBrokerStringVpcConnectivitySaslScram";
  @SerializedName(SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_VPC_CONNECTIVITY_SASL_SCRAM)
  private String bootstrapBrokerStringVpcConnectivitySaslScram;

  public static final String SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_VPC_CONNECTIVITY_SASL_IAM = "BootstrapBrokerStringVpcConnectivitySaslIam";
  @SerializedName(SERIALIZED_NAME_BOOTSTRAP_BROKER_STRING_VPC_CONNECTIVITY_SASL_IAM)
  private String bootstrapBrokerStringVpcConnectivitySaslIam;

  public GetBootstrapBrokersResponse() {
  }

  public GetBootstrapBrokersResponse bootstrapBrokerString(String bootstrapBrokerString) {
    this.bootstrapBrokerString = bootstrapBrokerString;
    return this;
  }

  /**
   * Get bootstrapBrokerString
   * @return bootstrapBrokerString
   */
  @javax.annotation.Nullable
  public String getBootstrapBrokerString() {
    return bootstrapBrokerString;
  }

  public void setBootstrapBrokerString(String bootstrapBrokerString) {
    this.bootstrapBrokerString = bootstrapBrokerString;
  }


  public GetBootstrapBrokersResponse bootstrapBrokerStringTls(String bootstrapBrokerStringTls) {
    this.bootstrapBrokerStringTls = bootstrapBrokerStringTls;
    return this;
  }

  /**
   * Get bootstrapBrokerStringTls
   * @return bootstrapBrokerStringTls
   */
  @javax.annotation.Nullable
  public String getBootstrapBrokerStringTls() {
    return bootstrapBrokerStringTls;
  }

  public void setBootstrapBrokerStringTls(String bootstrapBrokerStringTls) {
    this.bootstrapBrokerStringTls = bootstrapBrokerStringTls;
  }


  public GetBootstrapBrokersResponse bootstrapBrokerStringSaslScram(String bootstrapBrokerStringSaslScram) {
    this.bootstrapBrokerStringSaslScram = bootstrapBrokerStringSaslScram;
    return this;
  }

  /**
   * Get bootstrapBrokerStringSaslScram
   * @return bootstrapBrokerStringSaslScram
   */
  @javax.annotation.Nullable
  public String getBootstrapBrokerStringSaslScram() {
    return bootstrapBrokerStringSaslScram;
  }

  public void setBootstrapBrokerStringSaslScram(String bootstrapBrokerStringSaslScram) {
    this.bootstrapBrokerStringSaslScram = bootstrapBrokerStringSaslScram;
  }


  public GetBootstrapBrokersResponse bootstrapBrokerStringSaslIam(String bootstrapBrokerStringSaslIam) {
    this.bootstrapBrokerStringSaslIam = bootstrapBrokerStringSaslIam;
    return this;
  }

  /**
   * Get bootstrapBrokerStringSaslIam
   * @return bootstrapBrokerStringSaslIam
   */
  @javax.annotation.Nullable
  public String getBootstrapBrokerStringSaslIam() {
    return bootstrapBrokerStringSaslIam;
  }

  public void setBootstrapBrokerStringSaslIam(String bootstrapBrokerStringSaslIam) {
    this.bootstrapBrokerStringSaslIam = bootstrapBrokerStringSaslIam;
  }


  public GetBootstrapBrokersResponse bootstrapBrokerStringPublicTls(String bootstrapBrokerStringPublicTls) {
    this.bootstrapBrokerStringPublicTls = bootstrapBrokerStringPublicTls;
    return this;
  }

  /**
   * Get bootstrapBrokerStringPublicTls
   * @return bootstrapBrokerStringPublicTls
   */
  @javax.annotation.Nullable
  public String getBootstrapBrokerStringPublicTls() {
    return bootstrapBrokerStringPublicTls;
  }

  public void setBootstrapBrokerStringPublicTls(String bootstrapBrokerStringPublicTls) {
    this.bootstrapBrokerStringPublicTls = bootstrapBrokerStringPublicTls;
  }


  public GetBootstrapBrokersResponse bootstrapBrokerStringPublicSaslScram(String bootstrapBrokerStringPublicSaslScram) {
    this.bootstrapBrokerStringPublicSaslScram = bootstrapBrokerStringPublicSaslScram;
    return this;
  }

  /**
   * Get bootstrapBrokerStringPublicSaslScram
   * @return bootstrapBrokerStringPublicSaslScram
   */
  @javax.annotation.Nullable
  public String getBootstrapBrokerStringPublicSaslScram() {
    return bootstrapBrokerStringPublicSaslScram;
  }

  public void setBootstrapBrokerStringPublicSaslScram(String bootstrapBrokerStringPublicSaslScram) {
    this.bootstrapBrokerStringPublicSaslScram = bootstrapBrokerStringPublicSaslScram;
  }


  public GetBootstrapBrokersResponse bootstrapBrokerStringPublicSaslIam(String bootstrapBrokerStringPublicSaslIam) {
    this.bootstrapBrokerStringPublicSaslIam = bootstrapBrokerStringPublicSaslIam;
    return this;
  }

  /**
   * Get bootstrapBrokerStringPublicSaslIam
   * @return bootstrapBrokerStringPublicSaslIam
   */
  @javax.annotation.Nullable
  public String getBootstrapBrokerStringPublicSaslIam() {
    return bootstrapBrokerStringPublicSaslIam;
  }

  public void setBootstrapBrokerStringPublicSaslIam(String bootstrapBrokerStringPublicSaslIam) {
    this.bootstrapBrokerStringPublicSaslIam = bootstrapBrokerStringPublicSaslIam;
  }


  public GetBootstrapBrokersResponse bootstrapBrokerStringVpcConnectivityTls(String bootstrapBrokerStringVpcConnectivityTls) {
    this.bootstrapBrokerStringVpcConnectivityTls = bootstrapBrokerStringVpcConnectivityTls;
    return this;
  }

  /**
   * Get bootstrapBrokerStringVpcConnectivityTls
   * @return bootstrapBrokerStringVpcConnectivityTls
   */
  @javax.annotation.Nullable
  public String getBootstrapBrokerStringVpcConnectivityTls() {
    return bootstrapBrokerStringVpcConnectivityTls;
  }

  public void setBootstrapBrokerStringVpcConnectivityTls(String bootstrapBrokerStringVpcConnectivityTls) {
    this.bootstrapBrokerStringVpcConnectivityTls = bootstrapBrokerStringVpcConnectivityTls;
  }


  public GetBootstrapBrokersResponse bootstrapBrokerStringVpcConnectivitySaslScram(String bootstrapBrokerStringVpcConnectivitySaslScram) {
    this.bootstrapBrokerStringVpcConnectivitySaslScram = bootstrapBrokerStringVpcConnectivitySaslScram;
    return this;
  }

  /**
   * Get bootstrapBrokerStringVpcConnectivitySaslScram
   * @return bootstrapBrokerStringVpcConnectivitySaslScram
   */
  @javax.annotation.Nullable
  public String getBootstrapBrokerStringVpcConnectivitySaslScram() {
    return bootstrapBrokerStringVpcConnectivitySaslScram;
  }

  public void setBootstrapBrokerStringVpcConnectivitySaslScram(String bootstrapBrokerStringVpcConnectivitySaslScram) {
    this.bootstrapBrokerStringVpcConnectivitySaslScram = bootstrapBrokerStringVpcConnectivitySaslScram;
  }


  public GetBootstrapBrokersResponse bootstrapBrokerStringVpcConnectivitySaslIam(String bootstrapBrokerStringVpcConnectivitySaslIam) {
    this.bootstrapBrokerStringVpcConnectivitySaslIam = bootstrapBrokerStringVpcConnectivitySaslIam;
    return this;
  }

  /**
   * Get bootstrapBrokerStringVpcConnectivitySaslIam
   * @return bootstrapBrokerStringVpcConnectivitySaslIam
   */
  @javax.annotation.Nullable
  public String getBootstrapBrokerStringVpcConnectivitySaslIam() {
    return bootstrapBrokerStringVpcConnectivitySaslIam;
  }

  public void setBootstrapBrokerStringVpcConnectivitySaslIam(String bootstrapBrokerStringVpcConnectivitySaslIam) {
    this.bootstrapBrokerStringVpcConnectivitySaslIam = bootstrapBrokerStringVpcConnectivitySaslIam;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetBootstrapBrokersResponse getBootstrapBrokersResponse = (GetBootstrapBrokersResponse) o;
    return Objects.equals(this.bootstrapBrokerString, getBootstrapBrokersResponse.bootstrapBrokerString) &&
        Objects.equals(this.bootstrapBrokerStringTls, getBootstrapBrokersResponse.bootstrapBrokerStringTls) &&
        Objects.equals(this.bootstrapBrokerStringSaslScram, getBootstrapBrokersResponse.bootstrapBrokerStringSaslScram) &&
        Objects.equals(this.bootstrapBrokerStringSaslIam, getBootstrapBrokersResponse.bootstrapBrokerStringSaslIam) &&
        Objects.equals(this.bootstrapBrokerStringPublicTls, getBootstrapBrokersResponse.bootstrapBrokerStringPublicTls) &&
        Objects.equals(this.bootstrapBrokerStringPublicSaslScram, getBootstrapBrokersResponse.bootstrapBrokerStringPublicSaslScram) &&
        Objects.equals(this.bootstrapBrokerStringPublicSaslIam, getBootstrapBrokersResponse.bootstrapBrokerStringPublicSaslIam) &&
        Objects.equals(this.bootstrapBrokerStringVpcConnectivityTls, getBootstrapBrokersResponse.bootstrapBrokerStringVpcConnectivityTls) &&
        Objects.equals(this.bootstrapBrokerStringVpcConnectivitySaslScram, getBootstrapBrokersResponse.bootstrapBrokerStringVpcConnectivitySaslScram) &&
        Objects.equals(this.bootstrapBrokerStringVpcConnectivitySaslIam, getBootstrapBrokersResponse.bootstrapBrokerStringVpcConnectivitySaslIam);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bootstrapBrokerString, bootstrapBrokerStringTls, bootstrapBrokerStringSaslScram, bootstrapBrokerStringSaslIam, bootstrapBrokerStringPublicTls, bootstrapBrokerStringPublicSaslScram, bootstrapBrokerStringPublicSaslIam, bootstrapBrokerStringVpcConnectivityTls, bootstrapBrokerStringVpcConnectivitySaslScram, bootstrapBrokerStringVpcConnectivitySaslIam);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetBootstrapBrokersResponse {\n");
    sb.append("    bootstrapBrokerString: ").append(toIndentedString(bootstrapBrokerString)).append("\n");
    sb.append("    bootstrapBrokerStringTls: ").append(toIndentedString(bootstrapBrokerStringTls)).append("\n");
    sb.append("    bootstrapBrokerStringSaslScram: ").append(toIndentedString(bootstrapBrokerStringSaslScram)).append("\n");
    sb.append("    bootstrapBrokerStringSaslIam: ").append(toIndentedString(bootstrapBrokerStringSaslIam)).append("\n");
    sb.append("    bootstrapBrokerStringPublicTls: ").append(toIndentedString(bootstrapBrokerStringPublicTls)).append("\n");
    sb.append("    bootstrapBrokerStringPublicSaslScram: ").append(toIndentedString(bootstrapBrokerStringPublicSaslScram)).append("\n");
    sb.append("    bootstrapBrokerStringPublicSaslIam: ").append(toIndentedString(bootstrapBrokerStringPublicSaslIam)).append("\n");
    sb.append("    bootstrapBrokerStringVpcConnectivityTls: ").append(toIndentedString(bootstrapBrokerStringVpcConnectivityTls)).append("\n");
    sb.append("    bootstrapBrokerStringVpcConnectivitySaslScram: ").append(toIndentedString(bootstrapBrokerStringVpcConnectivitySaslScram)).append("\n");
    sb.append("    bootstrapBrokerStringVpcConnectivitySaslIam: ").append(toIndentedString(bootstrapBrokerStringVpcConnectivitySaslIam)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BootstrapBrokerString");
    openapiFields.add("BootstrapBrokerStringTls");
    openapiFields.add("BootstrapBrokerStringSaslScram");
    openapiFields.add("BootstrapBrokerStringSaslIam");
    openapiFields.add("BootstrapBrokerStringPublicTls");
    openapiFields.add("BootstrapBrokerStringPublicSaslScram");
    openapiFields.add("BootstrapBrokerStringPublicSaslIam");
    openapiFields.add("BootstrapBrokerStringVpcConnectivityTls");
    openapiFields.add("BootstrapBrokerStringVpcConnectivitySaslScram");
    openapiFields.add("BootstrapBrokerStringVpcConnectivitySaslIam");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetBootstrapBrokersResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetBootstrapBrokersResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetBootstrapBrokersResponse is not found in the empty JSON string", GetBootstrapBrokersResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetBootstrapBrokersResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetBootstrapBrokersResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `BootstrapBrokerString`
      if (jsonObj.get("BootstrapBrokerString") != null && !jsonObj.get("BootstrapBrokerString").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BootstrapBrokerString"));
      }
      // validate the optional field `BootstrapBrokerStringTls`
      if (jsonObj.get("BootstrapBrokerStringTls") != null && !jsonObj.get("BootstrapBrokerStringTls").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BootstrapBrokerStringTls"));
      }
      // validate the optional field `BootstrapBrokerStringSaslScram`
      if (jsonObj.get("BootstrapBrokerStringSaslScram") != null && !jsonObj.get("BootstrapBrokerStringSaslScram").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BootstrapBrokerStringSaslScram"));
      }
      // validate the optional field `BootstrapBrokerStringSaslIam`
      if (jsonObj.get("BootstrapBrokerStringSaslIam") != null && !jsonObj.get("BootstrapBrokerStringSaslIam").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BootstrapBrokerStringSaslIam"));
      }
      // validate the optional field `BootstrapBrokerStringPublicTls`
      if (jsonObj.get("BootstrapBrokerStringPublicTls") != null && !jsonObj.get("BootstrapBrokerStringPublicTls").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BootstrapBrokerStringPublicTls"));
      }
      // validate the optional field `BootstrapBrokerStringPublicSaslScram`
      if (jsonObj.get("BootstrapBrokerStringPublicSaslScram") != null && !jsonObj.get("BootstrapBrokerStringPublicSaslScram").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BootstrapBrokerStringPublicSaslScram"));
      }
      // validate the optional field `BootstrapBrokerStringPublicSaslIam`
      if (jsonObj.get("BootstrapBrokerStringPublicSaslIam") != null && !jsonObj.get("BootstrapBrokerStringPublicSaslIam").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BootstrapBrokerStringPublicSaslIam"));
      }
      // validate the optional field `BootstrapBrokerStringVpcConnectivityTls`
      if (jsonObj.get("BootstrapBrokerStringVpcConnectivityTls") != null && !jsonObj.get("BootstrapBrokerStringVpcConnectivityTls").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BootstrapBrokerStringVpcConnectivityTls"));
      }
      // validate the optional field `BootstrapBrokerStringVpcConnectivitySaslScram`
      if (jsonObj.get("BootstrapBrokerStringVpcConnectivitySaslScram") != null && !jsonObj.get("BootstrapBrokerStringVpcConnectivitySaslScram").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BootstrapBrokerStringVpcConnectivitySaslScram"));
      }
      // validate the optional field `BootstrapBrokerStringVpcConnectivitySaslIam`
      if (jsonObj.get("BootstrapBrokerStringVpcConnectivitySaslIam") != null && !jsonObj.get("BootstrapBrokerStringVpcConnectivitySaslIam").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BootstrapBrokerStringVpcConnectivitySaslIam"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetBootstrapBrokersResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetBootstrapBrokersResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetBootstrapBrokersResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetBootstrapBrokersResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetBootstrapBrokersResponse>() {
           @Override
           public void write(JsonWriter out, GetBootstrapBrokersResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetBootstrapBrokersResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetBootstrapBrokersResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetBootstrapBrokersResponse
   * @throws IOException if the JSON string is invalid with respect to GetBootstrapBrokersResponse
   */
  public static GetBootstrapBrokersResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetBootstrapBrokersResponse.class);
  }

  /**
   * Convert an instance of GetBootstrapBrokersResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

