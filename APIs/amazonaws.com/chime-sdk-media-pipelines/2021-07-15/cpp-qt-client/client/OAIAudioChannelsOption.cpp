/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAudioChannelsOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAudioChannelsOption::OAIAudioChannelsOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAudioChannelsOption::OAIAudioChannelsOption() {
    this->initializeModel();
}

OAIAudioChannelsOption::~OAIAudioChannelsOption() {}

void OAIAudioChannelsOption::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAudioChannelsOption::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAudioChannelsOption::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Stereo", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAudioChannelsOption::STEREO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Mono", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAudioChannelsOption::MONO;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAudioChannelsOption::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAudioChannelsOption::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAudioChannelsOption::STEREO:
            val = "Stereo";
            break;
        case eOAIAudioChannelsOption::MONO:
            val = "Mono";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAudioChannelsOption::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAudioChannelsOption::eOAIAudioChannelsOption OAIAudioChannelsOption::getValue() const {
    return m_value;
}

void OAIAudioChannelsOption::setValue(const OAIAudioChannelsOption::eOAIAudioChannelsOption& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAudioChannelsOption::isSet() const {
    
    return m_value_isSet;
}

bool OAIAudioChannelsOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
