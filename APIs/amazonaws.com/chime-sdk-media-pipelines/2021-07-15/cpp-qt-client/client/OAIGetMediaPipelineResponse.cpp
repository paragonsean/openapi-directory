/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetMediaPipelineResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetMediaPipelineResponse::OAIGetMediaPipelineResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetMediaPipelineResponse::OAIGetMediaPipelineResponse() {
    this->initializeModel();
}

OAIGetMediaPipelineResponse::~OAIGetMediaPipelineResponse() {}

void OAIGetMediaPipelineResponse::initializeModel() {

    m_media_pipeline_isSet = false;
    m_media_pipeline_isValid = false;
}

void OAIGetMediaPipelineResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetMediaPipelineResponse::fromJsonObject(QJsonObject json) {

    m_media_pipeline_isValid = ::OpenAPI::fromJsonValue(m_media_pipeline, json[QString("MediaPipeline")]);
    m_media_pipeline_isSet = !json[QString("MediaPipeline")].isNull() && m_media_pipeline_isValid;
}

QString OAIGetMediaPipelineResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetMediaPipelineResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_media_pipeline.isSet()) {
        obj.insert(QString("MediaPipeline"), ::OpenAPI::toJsonValue(m_media_pipeline));
    }
    return obj;
}

OAIGetMediaPipelineResponse_MediaPipeline OAIGetMediaPipelineResponse::getMediaPipeline() const {
    return m_media_pipeline;
}
void OAIGetMediaPipelineResponse::setMediaPipeline(const OAIGetMediaPipelineResponse_MediaPipeline &media_pipeline) {
    m_media_pipeline = media_pipeline;
    m_media_pipeline_isSet = true;
}

bool OAIGetMediaPipelineResponse::is_media_pipeline_Set() const{
    return m_media_pipeline_isSet;
}

bool OAIGetMediaPipelineResponse::is_media_pipeline_Valid() const{
    return m_media_pipeline_isValid;
}

bool OAIGetMediaPipelineResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_media_pipeline.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetMediaPipelineResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
