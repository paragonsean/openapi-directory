/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration() {
    this->initializeModel();
}

OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::~OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration() {}

void OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::initializeModel() {

    m_disabled_isSet = false;
    m_disabled_isValid = false;

    m_rules_isSet = false;
    m_rules_isValid = false;
}

void OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::fromJsonObject(QJsonObject json) {

    m_disabled_isValid = ::OpenAPI::fromJsonValue(m_disabled, json[QString("Disabled")]);
    m_disabled_isSet = !json[QString("Disabled")].isNull() && m_disabled_isValid;

    m_rules_isValid = ::OpenAPI::fromJsonValue(m_rules, json[QString("Rules")]);
    m_rules_isSet = !json[QString("Rules")].isNull() && m_rules_isValid;
}

QString OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_isSet) {
        obj.insert(QString("Disabled"), ::OpenAPI::toJsonValue(m_disabled));
    }
    if (m_rules.isSet()) {
        obj.insert(QString("Rules"), ::OpenAPI::toJsonValue(m_rules));
    }
    return obj;
}

bool OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::getDisabled() const {
    return m_disabled;
}
void OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::setDisabled(const bool &disabled) {
    m_disabled = disabled;
    m_disabled_isSet = true;
}

bool OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::is_disabled_Set() const{
    return m_disabled_isSet;
}

bool OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::is_disabled_Valid() const{
    return m_disabled_isValid;
}

QList OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::getRules() const {
    return m_rules;
}
void OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::setRules(const QList &rules) {
    m_rules = rules;
    m_rules_isSet = true;
}

bool OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::is_rules_Set() const{
    return m_rules_isSet;
}

bool OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::is_rules_Valid() const{
    return m_rules_isValid;
}

bool OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rules.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
