/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITileOrder.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITileOrder::OAITileOrder(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITileOrder::OAITileOrder() {
    this->initializeModel();
}

OAITileOrder::~OAITileOrder() {}

void OAITileOrder::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITileOrder::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITileOrder::fromJson(QString jsonString) {
    
    if ( jsonString.compare("JoinSequence", Qt::CaseInsensitive) == 0) {
        m_value = eOAITileOrder::JOINSEQUENCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SpeakerSequence", Qt::CaseInsensitive) == 0) {
        m_value = eOAITileOrder::SPEAKERSEQUENCE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITileOrder::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITileOrder::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITileOrder::JOINSEQUENCE:
            val = "JoinSequence";
            break;
        case eOAITileOrder::SPEAKERSEQUENCE:
            val = "SpeakerSequence";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITileOrder::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITileOrder::eOAITileOrder OAITileOrder::getValue() const {
    return m_value;
}

void OAITileOrder::setValue(const OAITileOrder::eOAITileOrder& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITileOrder::isSet() const {
    
    return m_value_isSet;
}

bool OAITileOrder::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
