/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHorizontalTilePosition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHorizontalTilePosition::OAIHorizontalTilePosition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHorizontalTilePosition::OAIHorizontalTilePosition() {
    this->initializeModel();
}

OAIHorizontalTilePosition::~OAIHorizontalTilePosition() {}

void OAIHorizontalTilePosition::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIHorizontalTilePosition::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIHorizontalTilePosition::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Top", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHorizontalTilePosition::TOP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Bottom", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHorizontalTilePosition::BOTTOM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIHorizontalTilePosition::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIHorizontalTilePosition::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIHorizontalTilePosition::TOP:
            val = "Top";
            break;
        case eOAIHorizontalTilePosition::BOTTOM:
            val = "Bottom";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIHorizontalTilePosition::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIHorizontalTilePosition::eOAIHorizontalTilePosition OAIHorizontalTilePosition::getValue() const {
    return m_value;
}

void OAIHorizontalTilePosition::setValue(const OAIHorizontalTilePosition::eOAIHorizontalTilePosition& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIHorizontalTilePosition::isSet() const {
    
    return m_value_isSet;
}

bool OAIHorizontalTilePosition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
