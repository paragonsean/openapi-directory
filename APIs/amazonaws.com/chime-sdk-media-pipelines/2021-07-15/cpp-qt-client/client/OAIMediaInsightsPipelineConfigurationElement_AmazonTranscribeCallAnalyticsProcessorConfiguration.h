/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration.h
 *
 * 
 */

#ifndef OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration_H
#define OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration_H

#include <QJsonObject>

#include "OAIAmazonTranscribeCallAnalyticsProcessorConfiguration_PostCallAnalyticsSettings.h"
#include "OAICallAnalyticsLanguageCode.h"
#include "OAIContentType.h"
#include "OAIPartialResultsStability.h"
#include "OAIVocabularyFilterMethod.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmazonTranscribeCallAnalyticsProcessorConfiguration_PostCallAnalyticsSettings;

class OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration : public OAIObject {
public:
    OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration();
    OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration(QString json);
    ~OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICallAnalyticsLanguageCode getLanguageCode() const;
    void setLanguageCode(const OAICallAnalyticsLanguageCode &language_code);
    bool is_language_code_Set() const;
    bool is_language_code_Valid() const;

    QString getVocabularyName() const;
    void setVocabularyName(const QString &vocabulary_name);
    bool is_vocabulary_name_Set() const;
    bool is_vocabulary_name_Valid() const;

    QString getVocabularyFilterName() const;
    void setVocabularyFilterName(const QString &vocabulary_filter_name);
    bool is_vocabulary_filter_name_Set() const;
    bool is_vocabulary_filter_name_Valid() const;

    OAIVocabularyFilterMethod getVocabularyFilterMethod() const;
    void setVocabularyFilterMethod(const OAIVocabularyFilterMethod &vocabulary_filter_method);
    bool is_vocabulary_filter_method_Set() const;
    bool is_vocabulary_filter_method_Valid() const;

    QString getLanguageModelName() const;
    void setLanguageModelName(const QString &language_model_name);
    bool is_language_model_name_Set() const;
    bool is_language_model_name_Valid() const;

    bool getEnablePartialResultsStabilization() const;
    void setEnablePartialResultsStabilization(const bool &enable_partial_results_stabilization);
    bool is_enable_partial_results_stabilization_Set() const;
    bool is_enable_partial_results_stabilization_Valid() const;

    OAIPartialResultsStability getPartialResultsStability() const;
    void setPartialResultsStability(const OAIPartialResultsStability &partial_results_stability);
    bool is_partial_results_stability_Set() const;
    bool is_partial_results_stability_Valid() const;

    OAIContentType getContentIdentificationType() const;
    void setContentIdentificationType(const OAIContentType &content_identification_type);
    bool is_content_identification_type_Set() const;
    bool is_content_identification_type_Valid() const;

    OAIContentType getContentRedactionType() const;
    void setContentRedactionType(const OAIContentType &content_redaction_type);
    bool is_content_redaction_type_Set() const;
    bool is_content_redaction_type_Valid() const;

    QString getPiiEntityTypes() const;
    void setPiiEntityTypes(const QString &pii_entity_types);
    bool is_pii_entity_types_Set() const;
    bool is_pii_entity_types_Valid() const;

    bool getFilterPartialResults() const;
    void setFilterPartialResults(const bool &filter_partial_results);
    bool is_filter_partial_results_Set() const;
    bool is_filter_partial_results_Valid() const;

    OAIAmazonTranscribeCallAnalyticsProcessorConfiguration_PostCallAnalyticsSettings getPostCallAnalyticsSettings() const;
    void setPostCallAnalyticsSettings(const OAIAmazonTranscribeCallAnalyticsProcessorConfiguration_PostCallAnalyticsSettings &post_call_analytics_settings);
    bool is_post_call_analytics_settings_Set() const;
    bool is_post_call_analytics_settings_Valid() const;

    QList getCallAnalyticsStreamCategories() const;
    void setCallAnalyticsStreamCategories(const QList &call_analytics_stream_categories);
    bool is_call_analytics_stream_categories_Set() const;
    bool is_call_analytics_stream_categories_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICallAnalyticsLanguageCode m_language_code;
    bool m_language_code_isSet;
    bool m_language_code_isValid;

    QString m_vocabulary_name;
    bool m_vocabulary_name_isSet;
    bool m_vocabulary_name_isValid;

    QString m_vocabulary_filter_name;
    bool m_vocabulary_filter_name_isSet;
    bool m_vocabulary_filter_name_isValid;

    OAIVocabularyFilterMethod m_vocabulary_filter_method;
    bool m_vocabulary_filter_method_isSet;
    bool m_vocabulary_filter_method_isValid;

    QString m_language_model_name;
    bool m_language_model_name_isSet;
    bool m_language_model_name_isValid;

    bool m_enable_partial_results_stabilization;
    bool m_enable_partial_results_stabilization_isSet;
    bool m_enable_partial_results_stabilization_isValid;

    OAIPartialResultsStability m_partial_results_stability;
    bool m_partial_results_stability_isSet;
    bool m_partial_results_stability_isValid;

    OAIContentType m_content_identification_type;
    bool m_content_identification_type_isSet;
    bool m_content_identification_type_isValid;

    OAIContentType m_content_redaction_type;
    bool m_content_redaction_type_isSet;
    bool m_content_redaction_type_isValid;

    QString m_pii_entity_types;
    bool m_pii_entity_types_isSet;
    bool m_pii_entity_types_isValid;

    bool m_filter_partial_results;
    bool m_filter_partial_results_isSet;
    bool m_filter_partial_results_isValid;

    OAIAmazonTranscribeCallAnalyticsProcessorConfiguration_PostCallAnalyticsSettings m_post_call_analytics_settings;
    bool m_post_call_analytics_settings_isSet;
    bool m_post_call_analytics_settings_isValid;

    QList m_call_analytics_stream_categories;
    bool m_call_analytics_stream_categories_isSet;
    bool m_call_analytics_stream_categories_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration)

#endif // OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration_H
