/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChimeSdkMeetingConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChimeSdkMeetingConfiguration::OAIChimeSdkMeetingConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChimeSdkMeetingConfiguration::OAIChimeSdkMeetingConfiguration() {
    this->initializeModel();
}

OAIChimeSdkMeetingConfiguration::~OAIChimeSdkMeetingConfiguration() {}

void OAIChimeSdkMeetingConfiguration::initializeModel() {

    m_source_configuration_isSet = false;
    m_source_configuration_isValid = false;

    m_artifacts_configuration_isSet = false;
    m_artifacts_configuration_isValid = false;
}

void OAIChimeSdkMeetingConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChimeSdkMeetingConfiguration::fromJsonObject(QJsonObject json) {

    m_source_configuration_isValid = ::OpenAPI::fromJsonValue(m_source_configuration, json[QString("SourceConfiguration")]);
    m_source_configuration_isSet = !json[QString("SourceConfiguration")].isNull() && m_source_configuration_isValid;

    m_artifacts_configuration_isValid = ::OpenAPI::fromJsonValue(m_artifacts_configuration, json[QString("ArtifactsConfiguration")]);
    m_artifacts_configuration_isSet = !json[QString("ArtifactsConfiguration")].isNull() && m_artifacts_configuration_isValid;
}

QString OAIChimeSdkMeetingConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChimeSdkMeetingConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_source_configuration.isSet()) {
        obj.insert(QString("SourceConfiguration"), ::OpenAPI::toJsonValue(m_source_configuration));
    }
    if (m_artifacts_configuration.isSet()) {
        obj.insert(QString("ArtifactsConfiguration"), ::OpenAPI::toJsonValue(m_artifacts_configuration));
    }
    return obj;
}

OAICreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_SourceConfiguration OAIChimeSdkMeetingConfiguration::getSourceConfiguration() const {
    return m_source_configuration;
}
void OAIChimeSdkMeetingConfiguration::setSourceConfiguration(const OAICreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_SourceConfiguration &source_configuration) {
    m_source_configuration = source_configuration;
    m_source_configuration_isSet = true;
}

bool OAIChimeSdkMeetingConfiguration::is_source_configuration_Set() const{
    return m_source_configuration_isSet;
}

bool OAIChimeSdkMeetingConfiguration::is_source_configuration_Valid() const{
    return m_source_configuration_isValid;
}

OAICreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_ArtifactsConfiguration OAIChimeSdkMeetingConfiguration::getArtifactsConfiguration() const {
    return m_artifacts_configuration;
}
void OAIChimeSdkMeetingConfiguration::setArtifactsConfiguration(const OAICreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_ArtifactsConfiguration &artifacts_configuration) {
    m_artifacts_configuration = artifacts_configuration;
    m_artifacts_configuration_isSet = true;
}

bool OAIChimeSdkMeetingConfiguration::is_artifacts_configuration_Set() const{
    return m_artifacts_configuration_isSet;
}

bool OAIChimeSdkMeetingConfiguration::is_artifacts_configuration_Valid() const{
    return m_artifacts_configuration_isValid;
}

bool OAIChimeSdkMeetingConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_source_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_artifacts_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChimeSdkMeetingConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
