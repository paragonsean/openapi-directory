/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMediaLiveConnectorPipeline.h
 *
 * The connector pipeline.
 */

#ifndef OAIMediaLiveConnectorPipeline_H
#define OAIMediaLiveConnectorPipeline_H

#include <QJsonObject>

#include "OAIMediaPipelineStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMediaLiveConnectorPipeline : public OAIObject {
public:
    OAIMediaLiveConnectorPipeline();
    OAIMediaLiveConnectorPipeline(QString json);
    ~OAIMediaLiveConnectorPipeline() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getSources() const;
    void setSources(const QList &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    QList getSinks() const;
    void setSinks(const QList &sinks);
    bool is_sinks_Set() const;
    bool is_sinks_Valid() const;

    QString getMediaPipelineId() const;
    void setMediaPipelineId(const QString &media_pipeline_id);
    bool is_media_pipeline_id_Set() const;
    bool is_media_pipeline_id_Valid() const;

    QString getMediaPipelineArn() const;
    void setMediaPipelineArn(const QString &media_pipeline_arn);
    bool is_media_pipeline_arn_Set() const;
    bool is_media_pipeline_arn_Valid() const;

    OAIMediaPipelineStatus getStatus() const;
    void setStatus(const OAIMediaPipelineStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getCreatedTimestamp() const;
    void setCreatedTimestamp(const QDateTime &created_timestamp);
    bool is_created_timestamp_Set() const;
    bool is_created_timestamp_Valid() const;

    QDateTime getUpdatedTimestamp() const;
    void setUpdatedTimestamp(const QDateTime &updated_timestamp);
    bool is_updated_timestamp_Set() const;
    bool is_updated_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;

    QList m_sinks;
    bool m_sinks_isSet;
    bool m_sinks_isValid;

    QString m_media_pipeline_id;
    bool m_media_pipeline_id_isSet;
    bool m_media_pipeline_id_isValid;

    QString m_media_pipeline_arn;
    bool m_media_pipeline_arn_isSet;
    bool m_media_pipeline_arn_isValid;

    OAIMediaPipelineStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_created_timestamp;
    bool m_created_timestamp_isSet;
    bool m_created_timestamp_isValid;

    QDateTime m_updated_timestamp;
    bool m_updated_timestamp_isSet;
    bool m_updated_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMediaLiveConnectorPipeline)

#endif // OAIMediaLiveConnectorPipeline_H
