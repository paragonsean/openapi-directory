/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateMediaInsightsPipelineConfigurationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateMediaInsightsPipelineConfigurationResponse::OAICreateMediaInsightsPipelineConfigurationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateMediaInsightsPipelineConfigurationResponse::OAICreateMediaInsightsPipelineConfigurationResponse() {
    this->initializeModel();
}

OAICreateMediaInsightsPipelineConfigurationResponse::~OAICreateMediaInsightsPipelineConfigurationResponse() {}

void OAICreateMediaInsightsPipelineConfigurationResponse::initializeModel() {

    m_media_insights_pipeline_configuration_isSet = false;
    m_media_insights_pipeline_configuration_isValid = false;
}

void OAICreateMediaInsightsPipelineConfigurationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateMediaInsightsPipelineConfigurationResponse::fromJsonObject(QJsonObject json) {

    m_media_insights_pipeline_configuration_isValid = ::OpenAPI::fromJsonValue(m_media_insights_pipeline_configuration, json[QString("MediaInsightsPipelineConfiguration")]);
    m_media_insights_pipeline_configuration_isSet = !json[QString("MediaInsightsPipelineConfiguration")].isNull() && m_media_insights_pipeline_configuration_isValid;
}

QString OAICreateMediaInsightsPipelineConfigurationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateMediaInsightsPipelineConfigurationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_media_insights_pipeline_configuration.isSet()) {
        obj.insert(QString("MediaInsightsPipelineConfiguration"), ::OpenAPI::toJsonValue(m_media_insights_pipeline_configuration));
    }
    return obj;
}

OAICreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration OAICreateMediaInsightsPipelineConfigurationResponse::getMediaInsightsPipelineConfiguration() const {
    return m_media_insights_pipeline_configuration;
}
void OAICreateMediaInsightsPipelineConfigurationResponse::setMediaInsightsPipelineConfiguration(const OAICreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration &media_insights_pipeline_configuration) {
    m_media_insights_pipeline_configuration = media_insights_pipeline_configuration;
    m_media_insights_pipeline_configuration_isSet = true;
}

bool OAICreateMediaInsightsPipelineConfigurationResponse::is_media_insights_pipeline_configuration_Set() const{
    return m_media_insights_pipeline_configuration_isSet;
}

bool OAICreateMediaInsightsPipelineConfigurationResponse::is_media_insights_pipeline_configuration_Valid() const{
    return m_media_insights_pipeline_configuration_isValid;
}

bool OAICreateMediaInsightsPipelineConfigurationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_media_insights_pipeline_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateMediaInsightsPipelineConfigurationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
