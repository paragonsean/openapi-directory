/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateMediaInsightsPipelineConfigurationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateMediaInsightsPipelineConfigurationRequest::OAIUpdateMediaInsightsPipelineConfigurationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateMediaInsightsPipelineConfigurationRequest::OAIUpdateMediaInsightsPipelineConfigurationRequest() {
    this->initializeModel();
}

OAIUpdateMediaInsightsPipelineConfigurationRequest::~OAIUpdateMediaInsightsPipelineConfigurationRequest() {}

void OAIUpdateMediaInsightsPipelineConfigurationRequest::initializeModel() {

    m_resource_access_role_arn_isSet = false;
    m_resource_access_role_arn_isValid = false;

    m_real_time_alert_configuration_isSet = false;
    m_real_time_alert_configuration_isValid = false;

    m_elements_isSet = false;
    m_elements_isValid = false;
}

void OAIUpdateMediaInsightsPipelineConfigurationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateMediaInsightsPipelineConfigurationRequest::fromJsonObject(QJsonObject json) {

    m_resource_access_role_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_access_role_arn, json[QString("ResourceAccessRoleArn")]);
    m_resource_access_role_arn_isSet = !json[QString("ResourceAccessRoleArn")].isNull() && m_resource_access_role_arn_isValid;

    m_real_time_alert_configuration_isValid = ::OpenAPI::fromJsonValue(m_real_time_alert_configuration, json[QString("RealTimeAlertConfiguration")]);
    m_real_time_alert_configuration_isSet = !json[QString("RealTimeAlertConfiguration")].isNull() && m_real_time_alert_configuration_isValid;

    m_elements_isValid = ::OpenAPI::fromJsonValue(m_elements, json[QString("Elements")]);
    m_elements_isSet = !json[QString("Elements")].isNull() && m_elements_isValid;
}

QString OAIUpdateMediaInsightsPipelineConfigurationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateMediaInsightsPipelineConfigurationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_access_role_arn_isSet) {
        obj.insert(QString("ResourceAccessRoleArn"), ::OpenAPI::toJsonValue(m_resource_access_role_arn));
    }
    if (m_real_time_alert_configuration.isSet()) {
        obj.insert(QString("RealTimeAlertConfiguration"), ::OpenAPI::toJsonValue(m_real_time_alert_configuration));
    }
    if (m_elements.isSet()) {
        obj.insert(QString("Elements"), ::OpenAPI::toJsonValue(m_elements));
    }
    return obj;
}

QString OAIUpdateMediaInsightsPipelineConfigurationRequest::getResourceAccessRoleArn() const {
    return m_resource_access_role_arn;
}
void OAIUpdateMediaInsightsPipelineConfigurationRequest::setResourceAccessRoleArn(const QString &resource_access_role_arn) {
    m_resource_access_role_arn = resource_access_role_arn;
    m_resource_access_role_arn_isSet = true;
}

bool OAIUpdateMediaInsightsPipelineConfigurationRequest::is_resource_access_role_arn_Set() const{
    return m_resource_access_role_arn_isSet;
}

bool OAIUpdateMediaInsightsPipelineConfigurationRequest::is_resource_access_role_arn_Valid() const{
    return m_resource_access_role_arn_isValid;
}

OAIUpdateMediaInsightsPipelineConfigurationRequest_RealTimeAlertConfiguration OAIUpdateMediaInsightsPipelineConfigurationRequest::getRealTimeAlertConfiguration() const {
    return m_real_time_alert_configuration;
}
void OAIUpdateMediaInsightsPipelineConfigurationRequest::setRealTimeAlertConfiguration(const OAIUpdateMediaInsightsPipelineConfigurationRequest_RealTimeAlertConfiguration &real_time_alert_configuration) {
    m_real_time_alert_configuration = real_time_alert_configuration;
    m_real_time_alert_configuration_isSet = true;
}

bool OAIUpdateMediaInsightsPipelineConfigurationRequest::is_real_time_alert_configuration_Set() const{
    return m_real_time_alert_configuration_isSet;
}

bool OAIUpdateMediaInsightsPipelineConfigurationRequest::is_real_time_alert_configuration_Valid() const{
    return m_real_time_alert_configuration_isValid;
}

QList OAIUpdateMediaInsightsPipelineConfigurationRequest::getElements() const {
    return m_elements;
}
void OAIUpdateMediaInsightsPipelineConfigurationRequest::setElements(const QList &elements) {
    m_elements = elements;
    m_elements_isSet = true;
}

bool OAIUpdateMediaInsightsPipelineConfigurationRequest::is_elements_Set() const{
    return m_elements_isSet;
}

bool OAIUpdateMediaInsightsPipelineConfigurationRequest::is_elements_Valid() const{
    return m_elements_isValid;
}

bool OAIUpdateMediaInsightsPipelineConfigurationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_access_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_real_time_alert_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_elements.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateMediaInsightsPipelineConfigurationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_resource_access_role_arn_isValid && m_elements_isValid && true;
}

} // namespace OpenAPI
