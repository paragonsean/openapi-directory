/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecordingFileFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecordingFileFormat::OAIRecordingFileFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecordingFileFormat::OAIRecordingFileFormat() {
    this->initializeModel();
}

OAIRecordingFileFormat::~OAIRecordingFileFormat() {}

void OAIRecordingFileFormat::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRecordingFileFormat::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRecordingFileFormat::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Wav", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecordingFileFormat::WAV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Opus", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecordingFileFormat::OPUS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRecordingFileFormat::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRecordingFileFormat::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRecordingFileFormat::WAV:
            val = "Wav";
            break;
        case eOAIRecordingFileFormat::OPUS:
            val = "Opus";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRecordingFileFormat::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRecordingFileFormat::eOAIRecordingFileFormat OAIRecordingFileFormat::getValue() const {
    return m_value;
}

void OAIRecordingFileFormat::setValue(const OAIRecordingFileFormat::eOAIRecordingFileFormat& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRecordingFileFormat::isSet() const {
    
    return m_value_isSet;
}

bool OAIRecordingFileFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
