/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILiveConnectorMuxType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILiveConnectorMuxType::OAILiveConnectorMuxType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILiveConnectorMuxType::OAILiveConnectorMuxType() {
    this->initializeModel();
}

OAILiveConnectorMuxType::~OAILiveConnectorMuxType() {}

void OAILiveConnectorMuxType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILiveConnectorMuxType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILiveConnectorMuxType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AudioWithCompositedVideo", Qt::CaseInsensitive) == 0) {
        m_value = eOAILiveConnectorMuxType::AUDIOWITHCOMPOSITEDVIDEO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AudioWithActiveSpeakerVideo", Qt::CaseInsensitive) == 0) {
        m_value = eOAILiveConnectorMuxType::AUDIOWITHACTIVESPEAKERVIDEO;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILiveConnectorMuxType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAILiveConnectorMuxType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILiveConnectorMuxType::AUDIOWITHCOMPOSITEDVIDEO:
            val = "AudioWithCompositedVideo";
            break;
        case eOAILiveConnectorMuxType::AUDIOWITHACTIVESPEAKERVIDEO:
            val = "AudioWithActiveSpeakerVideo";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILiveConnectorMuxType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILiveConnectorMuxType::eOAILiveConnectorMuxType OAILiveConnectorMuxType::getValue() const {
    return m_value;
}

void OAILiveConnectorMuxType::setValue(const OAILiveConnectorMuxType::eOAILiveConnectorMuxType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILiveConnectorMuxType::isSet() const {
    
    return m_value_isSet;
}

bool OAILiveConnectorMuxType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
