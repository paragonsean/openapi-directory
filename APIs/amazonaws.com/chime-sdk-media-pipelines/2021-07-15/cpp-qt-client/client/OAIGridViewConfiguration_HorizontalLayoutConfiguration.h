/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGridViewConfiguration_HorizontalLayoutConfiguration.h
 *
 * 
 */

#ifndef OAIGridViewConfiguration_HorizontalLayoutConfiguration_H
#define OAIGridViewConfiguration_HorizontalLayoutConfiguration_H

#include <QJsonObject>

#include "OAIHorizontalTilePosition.h"
#include "OAITileOrder.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGridViewConfiguration_HorizontalLayoutConfiguration : public OAIObject {
public:
    OAIGridViewConfiguration_HorizontalLayoutConfiguration();
    OAIGridViewConfiguration_HorizontalLayoutConfiguration(QString json);
    ~OAIGridViewConfiguration_HorizontalLayoutConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITileOrder getTileOrder() const;
    void setTileOrder(const OAITileOrder &tile_order);
    bool is_tile_order_Set() const;
    bool is_tile_order_Valid() const;

    OAIHorizontalTilePosition getTilePosition() const;
    void setTilePosition(const OAIHorizontalTilePosition &tile_position);
    bool is_tile_position_Set() const;
    bool is_tile_position_Valid() const;

    qint32 getTileCount() const;
    void setTileCount(const qint32 &tile_count);
    bool is_tile_count_Set() const;
    bool is_tile_count_Valid() const;

    QString getTileAspectRatio() const;
    void setTileAspectRatio(const QString &tile_aspect_ratio);
    bool is_tile_aspect_ratio_Set() const;
    bool is_tile_aspect_ratio_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITileOrder m_tile_order;
    bool m_tile_order_isSet;
    bool m_tile_order_isValid;

    OAIHorizontalTilePosition m_tile_position;
    bool m_tile_position_isSet;
    bool m_tile_position_isValid;

    qint32 m_tile_count;
    bool m_tile_count_isSet;
    bool m_tile_count_isValid;

    QString m_tile_aspect_ratio;
    bool m_tile_aspect_ratio_isSet;
    bool m_tile_aspect_ratio_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGridViewConfiguration_HorizontalLayoutConfiguration)

#endif // OAIGridViewConfiguration_HorizontalLayoutConfiguration_H
