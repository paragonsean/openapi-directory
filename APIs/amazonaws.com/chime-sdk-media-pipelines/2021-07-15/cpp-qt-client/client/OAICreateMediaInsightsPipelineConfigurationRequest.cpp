/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateMediaInsightsPipelineConfigurationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateMediaInsightsPipelineConfigurationRequest::OAICreateMediaInsightsPipelineConfigurationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateMediaInsightsPipelineConfigurationRequest::OAICreateMediaInsightsPipelineConfigurationRequest() {
    this->initializeModel();
}

OAICreateMediaInsightsPipelineConfigurationRequest::~OAICreateMediaInsightsPipelineConfigurationRequest() {}

void OAICreateMediaInsightsPipelineConfigurationRequest::initializeModel() {

    m_media_insights_pipeline_configuration_name_isSet = false;
    m_media_insights_pipeline_configuration_name_isValid = false;

    m_resource_access_role_arn_isSet = false;
    m_resource_access_role_arn_isValid = false;

    m_real_time_alert_configuration_isSet = false;
    m_real_time_alert_configuration_isValid = false;

    m_elements_isSet = false;
    m_elements_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_client_request_token_isSet = false;
    m_client_request_token_isValid = false;
}

void OAICreateMediaInsightsPipelineConfigurationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateMediaInsightsPipelineConfigurationRequest::fromJsonObject(QJsonObject json) {

    m_media_insights_pipeline_configuration_name_isValid = ::OpenAPI::fromJsonValue(m_media_insights_pipeline_configuration_name, json[QString("MediaInsightsPipelineConfigurationName")]);
    m_media_insights_pipeline_configuration_name_isSet = !json[QString("MediaInsightsPipelineConfigurationName")].isNull() && m_media_insights_pipeline_configuration_name_isValid;

    m_resource_access_role_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_access_role_arn, json[QString("ResourceAccessRoleArn")]);
    m_resource_access_role_arn_isSet = !json[QString("ResourceAccessRoleArn")].isNull() && m_resource_access_role_arn_isValid;

    m_real_time_alert_configuration_isValid = ::OpenAPI::fromJsonValue(m_real_time_alert_configuration, json[QString("RealTimeAlertConfiguration")]);
    m_real_time_alert_configuration_isSet = !json[QString("RealTimeAlertConfiguration")].isNull() && m_real_time_alert_configuration_isValid;

    m_elements_isValid = ::OpenAPI::fromJsonValue(m_elements, json[QString("Elements")]);
    m_elements_isSet = !json[QString("Elements")].isNull() && m_elements_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_client_request_token_isValid = ::OpenAPI::fromJsonValue(m_client_request_token, json[QString("ClientRequestToken")]);
    m_client_request_token_isSet = !json[QString("ClientRequestToken")].isNull() && m_client_request_token_isValid;
}

QString OAICreateMediaInsightsPipelineConfigurationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateMediaInsightsPipelineConfigurationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_media_insights_pipeline_configuration_name_isSet) {
        obj.insert(QString("MediaInsightsPipelineConfigurationName"), ::OpenAPI::toJsonValue(m_media_insights_pipeline_configuration_name));
    }
    if (m_resource_access_role_arn_isSet) {
        obj.insert(QString("ResourceAccessRoleArn"), ::OpenAPI::toJsonValue(m_resource_access_role_arn));
    }
    if (m_real_time_alert_configuration.isSet()) {
        obj.insert(QString("RealTimeAlertConfiguration"), ::OpenAPI::toJsonValue(m_real_time_alert_configuration));
    }
    if (m_elements.isSet()) {
        obj.insert(QString("Elements"), ::OpenAPI::toJsonValue(m_elements));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_client_request_token_isSet) {
        obj.insert(QString("ClientRequestToken"), ::OpenAPI::toJsonValue(m_client_request_token));
    }
    return obj;
}

QString OAICreateMediaInsightsPipelineConfigurationRequest::getMediaInsightsPipelineConfigurationName() const {
    return m_media_insights_pipeline_configuration_name;
}
void OAICreateMediaInsightsPipelineConfigurationRequest::setMediaInsightsPipelineConfigurationName(const QString &media_insights_pipeline_configuration_name) {
    m_media_insights_pipeline_configuration_name = media_insights_pipeline_configuration_name;
    m_media_insights_pipeline_configuration_name_isSet = true;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_media_insights_pipeline_configuration_name_Set() const{
    return m_media_insights_pipeline_configuration_name_isSet;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_media_insights_pipeline_configuration_name_Valid() const{
    return m_media_insights_pipeline_configuration_name_isValid;
}

QString OAICreateMediaInsightsPipelineConfigurationRequest::getResourceAccessRoleArn() const {
    return m_resource_access_role_arn;
}
void OAICreateMediaInsightsPipelineConfigurationRequest::setResourceAccessRoleArn(const QString &resource_access_role_arn) {
    m_resource_access_role_arn = resource_access_role_arn;
    m_resource_access_role_arn_isSet = true;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_resource_access_role_arn_Set() const{
    return m_resource_access_role_arn_isSet;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_resource_access_role_arn_Valid() const{
    return m_resource_access_role_arn_isValid;
}

OAICreateMediaInsightsPipelineConfigurationRequest_RealTimeAlertConfiguration OAICreateMediaInsightsPipelineConfigurationRequest::getRealTimeAlertConfiguration() const {
    return m_real_time_alert_configuration;
}
void OAICreateMediaInsightsPipelineConfigurationRequest::setRealTimeAlertConfiguration(const OAICreateMediaInsightsPipelineConfigurationRequest_RealTimeAlertConfiguration &real_time_alert_configuration) {
    m_real_time_alert_configuration = real_time_alert_configuration;
    m_real_time_alert_configuration_isSet = true;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_real_time_alert_configuration_Set() const{
    return m_real_time_alert_configuration_isSet;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_real_time_alert_configuration_Valid() const{
    return m_real_time_alert_configuration_isValid;
}

QList OAICreateMediaInsightsPipelineConfigurationRequest::getElements() const {
    return m_elements;
}
void OAICreateMediaInsightsPipelineConfigurationRequest::setElements(const QList &elements) {
    m_elements = elements;
    m_elements_isSet = true;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_elements_Set() const{
    return m_elements_isSet;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_elements_Valid() const{
    return m_elements_isValid;
}

QList OAICreateMediaInsightsPipelineConfigurationRequest::getTags() const {
    return m_tags;
}
void OAICreateMediaInsightsPipelineConfigurationRequest::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAICreateMediaInsightsPipelineConfigurationRequest::getClientRequestToken() const {
    return m_client_request_token;
}
void OAICreateMediaInsightsPipelineConfigurationRequest::setClientRequestToken(const QString &client_request_token) {
    m_client_request_token = client_request_token;
    m_client_request_token_isSet = true;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_client_request_token_Set() const{
    return m_client_request_token_isSet;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::is_client_request_token_Valid() const{
    return m_client_request_token_isValid;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_media_insights_pipeline_configuration_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_access_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_real_time_alert_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_elements.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateMediaInsightsPipelineConfigurationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_media_insights_pipeline_configuration_name_isValid && m_resource_access_role_arn_isValid && m_elements_isValid && true;
}

} // namespace OpenAPI
