/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration.h
 *
 * 
 */

#ifndef OAICreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration_H
#define OAICreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration_H

#include <QJsonObject>

#include "OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration;

class OAICreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration : public OAIObject {
public:
    OAICreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration();
    OAICreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration(QString json);
    ~OAICreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMediaInsightsPipelineConfigurationName() const;
    void setMediaInsightsPipelineConfigurationName(const QString &media_insights_pipeline_configuration_name);
    bool is_media_insights_pipeline_configuration_name_Set() const;
    bool is_media_insights_pipeline_configuration_name_Valid() const;

    QString getMediaInsightsPipelineConfigurationArn() const;
    void setMediaInsightsPipelineConfigurationArn(const QString &media_insights_pipeline_configuration_arn);
    bool is_media_insights_pipeline_configuration_arn_Set() const;
    bool is_media_insights_pipeline_configuration_arn_Valid() const;

    QString getResourceAccessRoleArn() const;
    void setResourceAccessRoleArn(const QString &resource_access_role_arn);
    bool is_resource_access_role_arn_Set() const;
    bool is_resource_access_role_arn_Valid() const;

    OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration getRealTimeAlertConfiguration() const;
    void setRealTimeAlertConfiguration(const OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration &real_time_alert_configuration);
    bool is_real_time_alert_configuration_Set() const;
    bool is_real_time_alert_configuration_Valid() const;

    QList getElements() const;
    void setElements(const QList &elements);
    bool is_elements_Set() const;
    bool is_elements_Valid() const;

    QString getMediaInsightsPipelineConfigurationId() const;
    void setMediaInsightsPipelineConfigurationId(const QString &media_insights_pipeline_configuration_id);
    bool is_media_insights_pipeline_configuration_id_Set() const;
    bool is_media_insights_pipeline_configuration_id_Valid() const;

    QDateTime getCreatedTimestamp() const;
    void setCreatedTimestamp(const QDateTime &created_timestamp);
    bool is_created_timestamp_Set() const;
    bool is_created_timestamp_Valid() const;

    QDateTime getUpdatedTimestamp() const;
    void setUpdatedTimestamp(const QDateTime &updated_timestamp);
    bool is_updated_timestamp_Set() const;
    bool is_updated_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_media_insights_pipeline_configuration_name;
    bool m_media_insights_pipeline_configuration_name_isSet;
    bool m_media_insights_pipeline_configuration_name_isValid;

    QString m_media_insights_pipeline_configuration_arn;
    bool m_media_insights_pipeline_configuration_arn_isSet;
    bool m_media_insights_pipeline_configuration_arn_isValid;

    QString m_resource_access_role_arn;
    bool m_resource_access_role_arn_isSet;
    bool m_resource_access_role_arn_isValid;

    OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration m_real_time_alert_configuration;
    bool m_real_time_alert_configuration_isSet;
    bool m_real_time_alert_configuration_isValid;

    QList m_elements;
    bool m_elements_isSet;
    bool m_elements_isValid;

    QString m_media_insights_pipeline_configuration_id;
    bool m_media_insights_pipeline_configuration_id_isSet;
    bool m_media_insights_pipeline_configuration_id_isValid;

    QDateTime m_created_timestamp;
    bool m_created_timestamp_isSet;
    bool m_created_timestamp_isValid;

    QDateTime m_updated_timestamp;
    bool m_updated_timestamp_isSet;
    bool m_updated_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration)

#endif // OAICreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration_H
