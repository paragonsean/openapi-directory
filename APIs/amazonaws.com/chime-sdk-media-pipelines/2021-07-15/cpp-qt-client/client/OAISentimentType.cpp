/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISentimentType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISentimentType::OAISentimentType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISentimentType::OAISentimentType() {
    this->initializeModel();
}

OAISentimentType::~OAISentimentType() {}

void OAISentimentType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISentimentType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISentimentType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NEGATIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAISentimentType::NEGATIVE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISentimentType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISentimentType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISentimentType::NEGATIVE:
            val = "NEGATIVE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISentimentType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISentimentType::eOAISentimentType OAISentimentType::getValue() const {
    return m_value;
}

void OAISentimentType::setValue(const OAISentimentType::eOAISentimentType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISentimentType::isSet() const {
    
    return m_value_isSet;
}

bool OAISentimentType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
