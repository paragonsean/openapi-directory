/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISentimentConfiguration.h
 *
 * A structure that contains the configuration settings for a sentiment analysis task.
 */

#ifndef OAISentimentConfiguration_H
#define OAISentimentConfiguration_H

#include <QJsonObject>

#include "OAISentimentType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISentimentConfiguration : public OAIObject {
public:
    OAISentimentConfiguration();
    OAISentimentConfiguration(QString json);
    ~OAISentimentConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRuleName() const;
    void setRuleName(const QString &rule_name);
    bool is_rule_name_Set() const;
    bool is_rule_name_Valid() const;

    OAISentimentType getSentimentType() const;
    void setSentimentType(const OAISentimentType &sentiment_type);
    bool is_sentiment_type_Set() const;
    bool is_sentiment_type_Valid() const;

    qint32 getTimePeriod() const;
    void setTimePeriod(const qint32 &time_period);
    bool is_time_period_Set() const;
    bool is_time_period_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_rule_name;
    bool m_rule_name_isSet;
    bool m_rule_name_isValid;

    OAISentimentType m_sentiment_type;
    bool m_sentiment_type_isSet;
    bool m_sentiment_type_isValid;

    qint32 m_time_period;
    bool m_time_period_isSet;
    bool m_time_period_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISentimentConfiguration)

#endif // OAISentimentConfiguration_H
