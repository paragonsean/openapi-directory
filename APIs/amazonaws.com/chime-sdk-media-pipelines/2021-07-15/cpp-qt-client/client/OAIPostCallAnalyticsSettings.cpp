/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostCallAnalyticsSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostCallAnalyticsSettings::OAIPostCallAnalyticsSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostCallAnalyticsSettings::OAIPostCallAnalyticsSettings() {
    this->initializeModel();
}

OAIPostCallAnalyticsSettings::~OAIPostCallAnalyticsSettings() {}

void OAIPostCallAnalyticsSettings::initializeModel() {

    m_output_location_isSet = false;
    m_output_location_isValid = false;

    m_data_access_role_arn_isSet = false;
    m_data_access_role_arn_isValid = false;

    m_content_redaction_output_isSet = false;
    m_content_redaction_output_isValid = false;

    m_output_encryption_kms_key_id_isSet = false;
    m_output_encryption_kms_key_id_isValid = false;
}

void OAIPostCallAnalyticsSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostCallAnalyticsSettings::fromJsonObject(QJsonObject json) {

    m_output_location_isValid = ::OpenAPI::fromJsonValue(m_output_location, json[QString("OutputLocation")]);
    m_output_location_isSet = !json[QString("OutputLocation")].isNull() && m_output_location_isValid;

    m_data_access_role_arn_isValid = ::OpenAPI::fromJsonValue(m_data_access_role_arn, json[QString("DataAccessRoleArn")]);
    m_data_access_role_arn_isSet = !json[QString("DataAccessRoleArn")].isNull() && m_data_access_role_arn_isValid;

    m_content_redaction_output_isValid = ::OpenAPI::fromJsonValue(m_content_redaction_output, json[QString("ContentRedactionOutput")]);
    m_content_redaction_output_isSet = !json[QString("ContentRedactionOutput")].isNull() && m_content_redaction_output_isValid;

    m_output_encryption_kms_key_id_isValid = ::OpenAPI::fromJsonValue(m_output_encryption_kms_key_id, json[QString("OutputEncryptionKMSKeyId")]);
    m_output_encryption_kms_key_id_isSet = !json[QString("OutputEncryptionKMSKeyId")].isNull() && m_output_encryption_kms_key_id_isValid;
}

QString OAIPostCallAnalyticsSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostCallAnalyticsSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_output_location_isSet) {
        obj.insert(QString("OutputLocation"), ::OpenAPI::toJsonValue(m_output_location));
    }
    if (m_data_access_role_arn_isSet) {
        obj.insert(QString("DataAccessRoleArn"), ::OpenAPI::toJsonValue(m_data_access_role_arn));
    }
    if (m_content_redaction_output.isSet()) {
        obj.insert(QString("ContentRedactionOutput"), ::OpenAPI::toJsonValue(m_content_redaction_output));
    }
    if (m_output_encryption_kms_key_id_isSet) {
        obj.insert(QString("OutputEncryptionKMSKeyId"), ::OpenAPI::toJsonValue(m_output_encryption_kms_key_id));
    }
    return obj;
}

QString OAIPostCallAnalyticsSettings::getOutputLocation() const {
    return m_output_location;
}
void OAIPostCallAnalyticsSettings::setOutputLocation(const QString &output_location) {
    m_output_location = output_location;
    m_output_location_isSet = true;
}

bool OAIPostCallAnalyticsSettings::is_output_location_Set() const{
    return m_output_location_isSet;
}

bool OAIPostCallAnalyticsSettings::is_output_location_Valid() const{
    return m_output_location_isValid;
}

QString OAIPostCallAnalyticsSettings::getDataAccessRoleArn() const {
    return m_data_access_role_arn;
}
void OAIPostCallAnalyticsSettings::setDataAccessRoleArn(const QString &data_access_role_arn) {
    m_data_access_role_arn = data_access_role_arn;
    m_data_access_role_arn_isSet = true;
}

bool OAIPostCallAnalyticsSettings::is_data_access_role_arn_Set() const{
    return m_data_access_role_arn_isSet;
}

bool OAIPostCallAnalyticsSettings::is_data_access_role_arn_Valid() const{
    return m_data_access_role_arn_isValid;
}

OAIContentRedactionOutput OAIPostCallAnalyticsSettings::getContentRedactionOutput() const {
    return m_content_redaction_output;
}
void OAIPostCallAnalyticsSettings::setContentRedactionOutput(const OAIContentRedactionOutput &content_redaction_output) {
    m_content_redaction_output = content_redaction_output;
    m_content_redaction_output_isSet = true;
}

bool OAIPostCallAnalyticsSettings::is_content_redaction_output_Set() const{
    return m_content_redaction_output_isSet;
}

bool OAIPostCallAnalyticsSettings::is_content_redaction_output_Valid() const{
    return m_content_redaction_output_isValid;
}

QString OAIPostCallAnalyticsSettings::getOutputEncryptionKmsKeyId() const {
    return m_output_encryption_kms_key_id;
}
void OAIPostCallAnalyticsSettings::setOutputEncryptionKmsKeyId(const QString &output_encryption_kms_key_id) {
    m_output_encryption_kms_key_id = output_encryption_kms_key_id;
    m_output_encryption_kms_key_id_isSet = true;
}

bool OAIPostCallAnalyticsSettings::is_output_encryption_kms_key_id_Set() const{
    return m_output_encryption_kms_key_id_isSet;
}

bool OAIPostCallAnalyticsSettings::is_output_encryption_kms_key_id_Valid() const{
    return m_output_encryption_kms_key_id_isValid;
}

bool OAIPostCallAnalyticsSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_output_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_access_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_redaction_output.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_encryption_kms_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostCallAnalyticsSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_output_location_isValid && m_data_access_role_arn_isValid && true;
}

} // namespace OpenAPI
