/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMediaInsightsPipelineConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMediaInsightsPipelineConfiguration::OAIMediaInsightsPipelineConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMediaInsightsPipelineConfiguration::OAIMediaInsightsPipelineConfiguration() {
    this->initializeModel();
}

OAIMediaInsightsPipelineConfiguration::~OAIMediaInsightsPipelineConfiguration() {}

void OAIMediaInsightsPipelineConfiguration::initializeModel() {

    m_media_insights_pipeline_configuration_name_isSet = false;
    m_media_insights_pipeline_configuration_name_isValid = false;

    m_media_insights_pipeline_configuration_arn_isSet = false;
    m_media_insights_pipeline_configuration_arn_isValid = false;

    m_resource_access_role_arn_isSet = false;
    m_resource_access_role_arn_isValid = false;

    m_real_time_alert_configuration_isSet = false;
    m_real_time_alert_configuration_isValid = false;

    m_elements_isSet = false;
    m_elements_isValid = false;

    m_media_insights_pipeline_configuration_id_isSet = false;
    m_media_insights_pipeline_configuration_id_isValid = false;

    m_created_timestamp_isSet = false;
    m_created_timestamp_isValid = false;

    m_updated_timestamp_isSet = false;
    m_updated_timestamp_isValid = false;
}

void OAIMediaInsightsPipelineConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMediaInsightsPipelineConfiguration::fromJsonObject(QJsonObject json) {

    m_media_insights_pipeline_configuration_name_isValid = ::OpenAPI::fromJsonValue(m_media_insights_pipeline_configuration_name, json[QString("MediaInsightsPipelineConfigurationName")]);
    m_media_insights_pipeline_configuration_name_isSet = !json[QString("MediaInsightsPipelineConfigurationName")].isNull() && m_media_insights_pipeline_configuration_name_isValid;

    m_media_insights_pipeline_configuration_arn_isValid = ::OpenAPI::fromJsonValue(m_media_insights_pipeline_configuration_arn, json[QString("MediaInsightsPipelineConfigurationArn")]);
    m_media_insights_pipeline_configuration_arn_isSet = !json[QString("MediaInsightsPipelineConfigurationArn")].isNull() && m_media_insights_pipeline_configuration_arn_isValid;

    m_resource_access_role_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_access_role_arn, json[QString("ResourceAccessRoleArn")]);
    m_resource_access_role_arn_isSet = !json[QString("ResourceAccessRoleArn")].isNull() && m_resource_access_role_arn_isValid;

    m_real_time_alert_configuration_isValid = ::OpenAPI::fromJsonValue(m_real_time_alert_configuration, json[QString("RealTimeAlertConfiguration")]);
    m_real_time_alert_configuration_isSet = !json[QString("RealTimeAlertConfiguration")].isNull() && m_real_time_alert_configuration_isValid;

    m_elements_isValid = ::OpenAPI::fromJsonValue(m_elements, json[QString("Elements")]);
    m_elements_isSet = !json[QString("Elements")].isNull() && m_elements_isValid;

    m_media_insights_pipeline_configuration_id_isValid = ::OpenAPI::fromJsonValue(m_media_insights_pipeline_configuration_id, json[QString("MediaInsightsPipelineConfigurationId")]);
    m_media_insights_pipeline_configuration_id_isSet = !json[QString("MediaInsightsPipelineConfigurationId")].isNull() && m_media_insights_pipeline_configuration_id_isValid;

    m_created_timestamp_isValid = ::OpenAPI::fromJsonValue(m_created_timestamp, json[QString("CreatedTimestamp")]);
    m_created_timestamp_isSet = !json[QString("CreatedTimestamp")].isNull() && m_created_timestamp_isValid;

    m_updated_timestamp_isValid = ::OpenAPI::fromJsonValue(m_updated_timestamp, json[QString("UpdatedTimestamp")]);
    m_updated_timestamp_isSet = !json[QString("UpdatedTimestamp")].isNull() && m_updated_timestamp_isValid;
}

QString OAIMediaInsightsPipelineConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMediaInsightsPipelineConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_media_insights_pipeline_configuration_name_isSet) {
        obj.insert(QString("MediaInsightsPipelineConfigurationName"), ::OpenAPI::toJsonValue(m_media_insights_pipeline_configuration_name));
    }
    if (m_media_insights_pipeline_configuration_arn_isSet) {
        obj.insert(QString("MediaInsightsPipelineConfigurationArn"), ::OpenAPI::toJsonValue(m_media_insights_pipeline_configuration_arn));
    }
    if (m_resource_access_role_arn_isSet) {
        obj.insert(QString("ResourceAccessRoleArn"), ::OpenAPI::toJsonValue(m_resource_access_role_arn));
    }
    if (m_real_time_alert_configuration.isSet()) {
        obj.insert(QString("RealTimeAlertConfiguration"), ::OpenAPI::toJsonValue(m_real_time_alert_configuration));
    }
    if (m_elements.isSet()) {
        obj.insert(QString("Elements"), ::OpenAPI::toJsonValue(m_elements));
    }
    if (m_media_insights_pipeline_configuration_id_isSet) {
        obj.insert(QString("MediaInsightsPipelineConfigurationId"), ::OpenAPI::toJsonValue(m_media_insights_pipeline_configuration_id));
    }
    if (m_created_timestamp_isSet) {
        obj.insert(QString("CreatedTimestamp"), ::OpenAPI::toJsonValue(m_created_timestamp));
    }
    if (m_updated_timestamp_isSet) {
        obj.insert(QString("UpdatedTimestamp"), ::OpenAPI::toJsonValue(m_updated_timestamp));
    }
    return obj;
}

QString OAIMediaInsightsPipelineConfiguration::getMediaInsightsPipelineConfigurationName() const {
    return m_media_insights_pipeline_configuration_name;
}
void OAIMediaInsightsPipelineConfiguration::setMediaInsightsPipelineConfigurationName(const QString &media_insights_pipeline_configuration_name) {
    m_media_insights_pipeline_configuration_name = media_insights_pipeline_configuration_name;
    m_media_insights_pipeline_configuration_name_isSet = true;
}

bool OAIMediaInsightsPipelineConfiguration::is_media_insights_pipeline_configuration_name_Set() const{
    return m_media_insights_pipeline_configuration_name_isSet;
}

bool OAIMediaInsightsPipelineConfiguration::is_media_insights_pipeline_configuration_name_Valid() const{
    return m_media_insights_pipeline_configuration_name_isValid;
}

QString OAIMediaInsightsPipelineConfiguration::getMediaInsightsPipelineConfigurationArn() const {
    return m_media_insights_pipeline_configuration_arn;
}
void OAIMediaInsightsPipelineConfiguration::setMediaInsightsPipelineConfigurationArn(const QString &media_insights_pipeline_configuration_arn) {
    m_media_insights_pipeline_configuration_arn = media_insights_pipeline_configuration_arn;
    m_media_insights_pipeline_configuration_arn_isSet = true;
}

bool OAIMediaInsightsPipelineConfiguration::is_media_insights_pipeline_configuration_arn_Set() const{
    return m_media_insights_pipeline_configuration_arn_isSet;
}

bool OAIMediaInsightsPipelineConfiguration::is_media_insights_pipeline_configuration_arn_Valid() const{
    return m_media_insights_pipeline_configuration_arn_isValid;
}

QString OAIMediaInsightsPipelineConfiguration::getResourceAccessRoleArn() const {
    return m_resource_access_role_arn;
}
void OAIMediaInsightsPipelineConfiguration::setResourceAccessRoleArn(const QString &resource_access_role_arn) {
    m_resource_access_role_arn = resource_access_role_arn;
    m_resource_access_role_arn_isSet = true;
}

bool OAIMediaInsightsPipelineConfiguration::is_resource_access_role_arn_Set() const{
    return m_resource_access_role_arn_isSet;
}

bool OAIMediaInsightsPipelineConfiguration::is_resource_access_role_arn_Valid() const{
    return m_resource_access_role_arn_isValid;
}

OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration OAIMediaInsightsPipelineConfiguration::getRealTimeAlertConfiguration() const {
    return m_real_time_alert_configuration;
}
void OAIMediaInsightsPipelineConfiguration::setRealTimeAlertConfiguration(const OAIMediaInsightsPipelineConfiguration_RealTimeAlertConfiguration &real_time_alert_configuration) {
    m_real_time_alert_configuration = real_time_alert_configuration;
    m_real_time_alert_configuration_isSet = true;
}

bool OAIMediaInsightsPipelineConfiguration::is_real_time_alert_configuration_Set() const{
    return m_real_time_alert_configuration_isSet;
}

bool OAIMediaInsightsPipelineConfiguration::is_real_time_alert_configuration_Valid() const{
    return m_real_time_alert_configuration_isValid;
}

QList OAIMediaInsightsPipelineConfiguration::getElements() const {
    return m_elements;
}
void OAIMediaInsightsPipelineConfiguration::setElements(const QList &elements) {
    m_elements = elements;
    m_elements_isSet = true;
}

bool OAIMediaInsightsPipelineConfiguration::is_elements_Set() const{
    return m_elements_isSet;
}

bool OAIMediaInsightsPipelineConfiguration::is_elements_Valid() const{
    return m_elements_isValid;
}

QString OAIMediaInsightsPipelineConfiguration::getMediaInsightsPipelineConfigurationId() const {
    return m_media_insights_pipeline_configuration_id;
}
void OAIMediaInsightsPipelineConfiguration::setMediaInsightsPipelineConfigurationId(const QString &media_insights_pipeline_configuration_id) {
    m_media_insights_pipeline_configuration_id = media_insights_pipeline_configuration_id;
    m_media_insights_pipeline_configuration_id_isSet = true;
}

bool OAIMediaInsightsPipelineConfiguration::is_media_insights_pipeline_configuration_id_Set() const{
    return m_media_insights_pipeline_configuration_id_isSet;
}

bool OAIMediaInsightsPipelineConfiguration::is_media_insights_pipeline_configuration_id_Valid() const{
    return m_media_insights_pipeline_configuration_id_isValid;
}

QDateTime OAIMediaInsightsPipelineConfiguration::getCreatedTimestamp() const {
    return m_created_timestamp;
}
void OAIMediaInsightsPipelineConfiguration::setCreatedTimestamp(const QDateTime &created_timestamp) {
    m_created_timestamp = created_timestamp;
    m_created_timestamp_isSet = true;
}

bool OAIMediaInsightsPipelineConfiguration::is_created_timestamp_Set() const{
    return m_created_timestamp_isSet;
}

bool OAIMediaInsightsPipelineConfiguration::is_created_timestamp_Valid() const{
    return m_created_timestamp_isValid;
}

QDateTime OAIMediaInsightsPipelineConfiguration::getUpdatedTimestamp() const {
    return m_updated_timestamp;
}
void OAIMediaInsightsPipelineConfiguration::setUpdatedTimestamp(const QDateTime &updated_timestamp) {
    m_updated_timestamp = updated_timestamp;
    m_updated_timestamp_isSet = true;
}

bool OAIMediaInsightsPipelineConfiguration::is_updated_timestamp_Set() const{
    return m_updated_timestamp_isSet;
}

bool OAIMediaInsightsPipelineConfiguration::is_updated_timestamp_Valid() const{
    return m_updated_timestamp_isValid;
}

bool OAIMediaInsightsPipelineConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_media_insights_pipeline_configuration_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_insights_pipeline_configuration_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_access_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_real_time_alert_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_elements.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_insights_pipeline_configuration_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMediaInsightsPipelineConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
