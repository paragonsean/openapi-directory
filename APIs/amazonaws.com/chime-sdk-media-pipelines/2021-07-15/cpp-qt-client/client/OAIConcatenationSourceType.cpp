/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConcatenationSourceType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConcatenationSourceType::OAIConcatenationSourceType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConcatenationSourceType::OAIConcatenationSourceType() {
    this->initializeModel();
}

OAIConcatenationSourceType::~OAIConcatenationSourceType() {}

void OAIConcatenationSourceType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIConcatenationSourceType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIConcatenationSourceType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MediaCapturePipeline", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConcatenationSourceType::MEDIACAPTUREPIPELINE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIConcatenationSourceType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIConcatenationSourceType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIConcatenationSourceType::MEDIACAPTUREPIPELINE:
            val = "MediaCapturePipeline";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIConcatenationSourceType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIConcatenationSourceType::eOAIConcatenationSourceType OAIConcatenationSourceType::getValue() const {
    return m_value;
}

void OAIConcatenationSourceType::setValue(const OAIConcatenationSourceType::eOAIConcatenationSourceType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIConcatenationSourceType::isSet() const {
    
    return m_value_isSet;
}

bool OAIConcatenationSourceType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
