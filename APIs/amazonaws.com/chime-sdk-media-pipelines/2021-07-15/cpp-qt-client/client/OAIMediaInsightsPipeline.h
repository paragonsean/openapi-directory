/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMediaInsightsPipeline.h
 *
 * A media pipeline that streams call analytics data.
 */

#ifndef OAIMediaInsightsPipeline_H
#define OAIMediaInsightsPipeline_H

#include <QJsonObject>

#include "OAIMediaInsightsPipeline_KinesisVideoStreamRecordingSourceRuntimeConfiguration.h"
#include "OAIMediaInsightsPipeline_KinesisVideoStreamSourceRuntimeConfiguration.h"
#include "OAIMediaInsightsPipeline_S3RecordingSinkRuntimeConfiguration.h"
#include "OAIMediaPipelineStatus.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMediaInsightsPipeline_KinesisVideoStreamSourceRuntimeConfiguration;
class OAIMediaInsightsPipeline_KinesisVideoStreamRecordingSourceRuntimeConfiguration;
class OAIMediaInsightsPipeline_S3RecordingSinkRuntimeConfiguration;

class OAIMediaInsightsPipeline : public OAIObject {
public:
    OAIMediaInsightsPipeline();
    OAIMediaInsightsPipeline(QString json);
    ~OAIMediaInsightsPipeline() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMediaPipelineId() const;
    void setMediaPipelineId(const QString &media_pipeline_id);
    bool is_media_pipeline_id_Set() const;
    bool is_media_pipeline_id_Valid() const;

    QString getMediaPipelineArn() const;
    void setMediaPipelineArn(const QString &media_pipeline_arn);
    bool is_media_pipeline_arn_Set() const;
    bool is_media_pipeline_arn_Valid() const;

    QString getMediaInsightsPipelineConfigurationArn() const;
    void setMediaInsightsPipelineConfigurationArn(const QString &media_insights_pipeline_configuration_arn);
    bool is_media_insights_pipeline_configuration_arn_Set() const;
    bool is_media_insights_pipeline_configuration_arn_Valid() const;

    OAIMediaPipelineStatus getStatus() const;
    void setStatus(const OAIMediaPipelineStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIMediaInsightsPipeline_KinesisVideoStreamSourceRuntimeConfiguration getKinesisVideoStreamSourceRuntimeConfiguration() const;
    void setKinesisVideoStreamSourceRuntimeConfiguration(const OAIMediaInsightsPipeline_KinesisVideoStreamSourceRuntimeConfiguration &kinesis_video_stream_source_runtime_configuration);
    bool is_kinesis_video_stream_source_runtime_configuration_Set() const;
    bool is_kinesis_video_stream_source_runtime_configuration_Valid() const;

    QMap getMediaInsightsRuntimeMetadata() const;
    void setMediaInsightsRuntimeMetadata(const QMap &media_insights_runtime_metadata);
    bool is_media_insights_runtime_metadata_Set() const;
    bool is_media_insights_runtime_metadata_Valid() const;

    OAIMediaInsightsPipeline_KinesisVideoStreamRecordingSourceRuntimeConfiguration getKinesisVideoStreamRecordingSourceRuntimeConfiguration() const;
    void setKinesisVideoStreamRecordingSourceRuntimeConfiguration(const OAIMediaInsightsPipeline_KinesisVideoStreamRecordingSourceRuntimeConfiguration &kinesis_video_stream_recording_source_runtime_configuration);
    bool is_kinesis_video_stream_recording_source_runtime_configuration_Set() const;
    bool is_kinesis_video_stream_recording_source_runtime_configuration_Valid() const;

    OAIMediaInsightsPipeline_S3RecordingSinkRuntimeConfiguration getS3RecordingSinkRuntimeConfiguration() const;
    void setS3RecordingSinkRuntimeConfiguration(const OAIMediaInsightsPipeline_S3RecordingSinkRuntimeConfiguration &s3_recording_sink_runtime_configuration);
    bool is_s3_recording_sink_runtime_configuration_Set() const;
    bool is_s3_recording_sink_runtime_configuration_Valid() const;

    QDateTime getCreatedTimestamp() const;
    void setCreatedTimestamp(const QDateTime &created_timestamp);
    bool is_created_timestamp_Set() const;
    bool is_created_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_media_pipeline_id;
    bool m_media_pipeline_id_isSet;
    bool m_media_pipeline_id_isValid;

    QString m_media_pipeline_arn;
    bool m_media_pipeline_arn_isSet;
    bool m_media_pipeline_arn_isValid;

    QString m_media_insights_pipeline_configuration_arn;
    bool m_media_insights_pipeline_configuration_arn_isSet;
    bool m_media_insights_pipeline_configuration_arn_isValid;

    OAIMediaPipelineStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIMediaInsightsPipeline_KinesisVideoStreamSourceRuntimeConfiguration m_kinesis_video_stream_source_runtime_configuration;
    bool m_kinesis_video_stream_source_runtime_configuration_isSet;
    bool m_kinesis_video_stream_source_runtime_configuration_isValid;

    QMap m_media_insights_runtime_metadata;
    bool m_media_insights_runtime_metadata_isSet;
    bool m_media_insights_runtime_metadata_isValid;

    OAIMediaInsightsPipeline_KinesisVideoStreamRecordingSourceRuntimeConfiguration m_kinesis_video_stream_recording_source_runtime_configuration;
    bool m_kinesis_video_stream_recording_source_runtime_configuration_isSet;
    bool m_kinesis_video_stream_recording_source_runtime_configuration_isValid;

    OAIMediaInsightsPipeline_S3RecordingSinkRuntimeConfiguration m_s3_recording_sink_runtime_configuration;
    bool m_s3_recording_sink_runtime_configuration_isSet;
    bool m_s3_recording_sink_runtime_configuration_isValid;

    QDateTime m_created_timestamp;
    bool m_created_timestamp_isSet;
    bool m_created_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMediaInsightsPipeline)

#endif // OAIMediaInsightsPipeline_H
