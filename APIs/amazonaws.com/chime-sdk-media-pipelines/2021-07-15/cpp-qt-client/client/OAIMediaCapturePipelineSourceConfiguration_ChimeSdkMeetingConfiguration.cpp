/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration() {
    this->initializeModel();
}

OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::~OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration() {}

void OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::initializeModel() {

    m_artifacts_configuration_isSet = false;
    m_artifacts_configuration_isValid = false;
}

void OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::fromJsonObject(QJsonObject json) {

    m_artifacts_configuration_isValid = ::OpenAPI::fromJsonValue(m_artifacts_configuration, json[QString("ArtifactsConfiguration")]);
    m_artifacts_configuration_isSet = !json[QString("ArtifactsConfiguration")].isNull() && m_artifacts_configuration_isValid;
}

QString OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_artifacts_configuration.isSet()) {
        obj.insert(QString("ArtifactsConfiguration"), ::OpenAPI::toJsonValue(m_artifacts_configuration));
    }
    return obj;
}

OAIChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::getArtifactsConfiguration() const {
    return m_artifacts_configuration;
}
void OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::setArtifactsConfiguration(const OAIChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration &artifacts_configuration) {
    m_artifacts_configuration = artifacts_configuration;
    m_artifacts_configuration_isSet = true;
}

bool OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::is_artifacts_configuration_Set() const{
    return m_artifacts_configuration_isSet;
}

bool OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::is_artifacts_configuration_Valid() const{
    return m_artifacts_configuration_isValid;
}

bool OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_artifacts_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_artifacts_configuration_isValid && true;
}

} // namespace OpenAPI
