/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStreamConfiguration_StreamChannelDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStreamConfiguration_StreamChannelDefinition::OAIStreamConfiguration_StreamChannelDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStreamConfiguration_StreamChannelDefinition::OAIStreamConfiguration_StreamChannelDefinition() {
    this->initializeModel();
}

OAIStreamConfiguration_StreamChannelDefinition::~OAIStreamConfiguration_StreamChannelDefinition() {}

void OAIStreamConfiguration_StreamChannelDefinition::initializeModel() {

    m_number_of_channels_isSet = false;
    m_number_of_channels_isValid = false;

    m_channel_definitions_isSet = false;
    m_channel_definitions_isValid = false;
}

void OAIStreamConfiguration_StreamChannelDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStreamConfiguration_StreamChannelDefinition::fromJsonObject(QJsonObject json) {

    m_number_of_channels_isValid = ::OpenAPI::fromJsonValue(m_number_of_channels, json[QString("NumberOfChannels")]);
    m_number_of_channels_isSet = !json[QString("NumberOfChannels")].isNull() && m_number_of_channels_isValid;

    m_channel_definitions_isValid = ::OpenAPI::fromJsonValue(m_channel_definitions, json[QString("ChannelDefinitions")]);
    m_channel_definitions_isSet = !json[QString("ChannelDefinitions")].isNull() && m_channel_definitions_isValid;
}

QString OAIStreamConfiguration_StreamChannelDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStreamConfiguration_StreamChannelDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_number_of_channels_isSet) {
        obj.insert(QString("NumberOfChannels"), ::OpenAPI::toJsonValue(m_number_of_channels));
    }
    if (m_channel_definitions.isSet()) {
        obj.insert(QString("ChannelDefinitions"), ::OpenAPI::toJsonValue(m_channel_definitions));
    }
    return obj;
}

qint32 OAIStreamConfiguration_StreamChannelDefinition::getNumberOfChannels() const {
    return m_number_of_channels;
}
void OAIStreamConfiguration_StreamChannelDefinition::setNumberOfChannels(const qint32 &number_of_channels) {
    m_number_of_channels = number_of_channels;
    m_number_of_channels_isSet = true;
}

bool OAIStreamConfiguration_StreamChannelDefinition::is_number_of_channels_Set() const{
    return m_number_of_channels_isSet;
}

bool OAIStreamConfiguration_StreamChannelDefinition::is_number_of_channels_Valid() const{
    return m_number_of_channels_isValid;
}

QList OAIStreamConfiguration_StreamChannelDefinition::getChannelDefinitions() const {
    return m_channel_definitions;
}
void OAIStreamConfiguration_StreamChannelDefinition::setChannelDefinitions(const QList &channel_definitions) {
    m_channel_definitions = channel_definitions;
    m_channel_definitions_isSet = true;
}

bool OAIStreamConfiguration_StreamChannelDefinition::is_channel_definitions_Set() const{
    return m_channel_definitions_isSet;
}

bool OAIStreamConfiguration_StreamChannelDefinition::is_channel_definitions_Valid() const{
    return m_channel_definitions_isValid;
}

bool OAIStreamConfiguration_StreamChannelDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_number_of_channels_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_definitions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStreamConfiguration_StreamChannelDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_number_of_channels_isValid && true;
}

} // namespace OpenAPI
