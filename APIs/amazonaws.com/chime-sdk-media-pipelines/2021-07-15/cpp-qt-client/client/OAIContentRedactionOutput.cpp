/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContentRedactionOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContentRedactionOutput::OAIContentRedactionOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContentRedactionOutput::OAIContentRedactionOutput() {
    this->initializeModel();
}

OAIContentRedactionOutput::~OAIContentRedactionOutput() {}

void OAIContentRedactionOutput::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIContentRedactionOutput::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIContentRedactionOutput::fromJson(QString jsonString) {
    
    if ( jsonString.compare("redacted", Qt::CaseInsensitive) == 0) {
        m_value = eOAIContentRedactionOutput::REDACTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("redacted_and_unredacted", Qt::CaseInsensitive) == 0) {
        m_value = eOAIContentRedactionOutput::REDACTED_AND_UNREDACTED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIContentRedactionOutput::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIContentRedactionOutput::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIContentRedactionOutput::REDACTED:
            val = "redacted";
            break;
        case eOAIContentRedactionOutput::REDACTED_AND_UNREDACTED:
            val = "redacted_and_unredacted";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIContentRedactionOutput::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIContentRedactionOutput::eOAIContentRedactionOutput OAIContentRedactionOutput::getValue() const {
    return m_value;
}

void OAIContentRedactionOutput::setValue(const OAIContentRedactionOutput::eOAIContentRedactionOutput& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIContentRedactionOutput::isSet() const {
    
    return m_value_isSet;
}

bool OAIContentRedactionOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
