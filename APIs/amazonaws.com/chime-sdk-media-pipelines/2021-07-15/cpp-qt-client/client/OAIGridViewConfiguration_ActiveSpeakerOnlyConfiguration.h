/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration.h
 *
 * 
 */

#ifndef OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration_H
#define OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration_H

#include <QJsonObject>

#include "OAIActiveSpeakerPosition.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration : public OAIObject {
public:
    OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration();
    OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration(QString json);
    ~OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIActiveSpeakerPosition getActiveSpeakerPosition() const;
    void setActiveSpeakerPosition(const OAIActiveSpeakerPosition &active_speaker_position);
    bool is_active_speaker_position_Set() const;
    bool is_active_speaker_position_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIActiveSpeakerPosition m_active_speaker_position;
    bool m_active_speaker_position_isSet;
    bool m_active_speaker_position_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration)

#endif // OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration_H
