/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICanvasOrientation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICanvasOrientation::OAICanvasOrientation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICanvasOrientation::OAICanvasOrientation() {
    this->initializeModel();
}

OAICanvasOrientation::~OAICanvasOrientation() {}

void OAICanvasOrientation::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICanvasOrientation::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICanvasOrientation::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Landscape", Qt::CaseInsensitive) == 0) {
        m_value = eOAICanvasOrientation::LANDSCAPE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Portrait", Qt::CaseInsensitive) == 0) {
        m_value = eOAICanvasOrientation::PORTRAIT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICanvasOrientation::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICanvasOrientation::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICanvasOrientation::LANDSCAPE:
            val = "Landscape";
            break;
        case eOAICanvasOrientation::PORTRAIT:
            val = "Portrait";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICanvasOrientation::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICanvasOrientation::eOAICanvasOrientation OAICanvasOrientation::getValue() const {
    return m_value;
}

void OAICanvasOrientation::setValue(const OAICanvasOrientation::eOAICanvasOrientation& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICanvasOrientation::isSet() const {
    
    return m_value_isSet;
}

bool OAICanvasOrientation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
