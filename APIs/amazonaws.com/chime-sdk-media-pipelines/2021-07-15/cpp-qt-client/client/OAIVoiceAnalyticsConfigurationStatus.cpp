/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVoiceAnalyticsConfigurationStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVoiceAnalyticsConfigurationStatus::OAIVoiceAnalyticsConfigurationStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVoiceAnalyticsConfigurationStatus::OAIVoiceAnalyticsConfigurationStatus() {
    this->initializeModel();
}

OAIVoiceAnalyticsConfigurationStatus::~OAIVoiceAnalyticsConfigurationStatus() {}

void OAIVoiceAnalyticsConfigurationStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIVoiceAnalyticsConfigurationStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIVoiceAnalyticsConfigurationStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Enabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVoiceAnalyticsConfigurationStatus::ENABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Disabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVoiceAnalyticsConfigurationStatus::DISABLED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIVoiceAnalyticsConfigurationStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIVoiceAnalyticsConfigurationStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIVoiceAnalyticsConfigurationStatus::ENABLED:
            val = "Enabled";
            break;
        case eOAIVoiceAnalyticsConfigurationStatus::DISABLED:
            val = "Disabled";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIVoiceAnalyticsConfigurationStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIVoiceAnalyticsConfigurationStatus::eOAIVoiceAnalyticsConfigurationStatus OAIVoiceAnalyticsConfigurationStatus::getValue() const {
    return m_value;
}

void OAIVoiceAnalyticsConfigurationStatus::setValue(const OAIVoiceAnalyticsConfigurationStatus::eOAIVoiceAnalyticsConfigurationStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIVoiceAnalyticsConfigurationStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIVoiceAnalyticsConfigurationStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
