/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateMediaCapturePipelineRequest.h
 *
 * 
 */

#ifndef OAICreateMediaCapturePipelineRequest_H
#define OAICreateMediaCapturePipelineRequest_H

#include <QJsonObject>

#include "OAICreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration.h"
#include "OAIMediaPipelineSinkType.h"
#include "OAIMediaPipelineSourceType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration;

class OAICreateMediaCapturePipelineRequest : public OAIObject {
public:
    OAICreateMediaCapturePipelineRequest();
    OAICreateMediaCapturePipelineRequest(QString json);
    ~OAICreateMediaCapturePipelineRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMediaPipelineSourceType getSourceType() const;
    void setSourceType(const OAIMediaPipelineSourceType &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    QString getSourceArn() const;
    void setSourceArn(const QString &source_arn);
    bool is_source_arn_Set() const;
    bool is_source_arn_Valid() const;

    OAIMediaPipelineSinkType getSinkType() const;
    void setSinkType(const OAIMediaPipelineSinkType &sink_type);
    bool is_sink_type_Set() const;
    bool is_sink_type_Valid() const;

    QString getSinkArn() const;
    void setSinkArn(const QString &sink_arn);
    bool is_sink_arn_Set() const;
    bool is_sink_arn_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    OAICreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration getChimeSdkMeetingConfiguration() const;
    void setChimeSdkMeetingConfiguration(const OAICreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration &chime_sdk_meeting_configuration);
    bool is_chime_sdk_meeting_configuration_Set() const;
    bool is_chime_sdk_meeting_configuration_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMediaPipelineSourceType m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    QString m_source_arn;
    bool m_source_arn_isSet;
    bool m_source_arn_isValid;

    OAIMediaPipelineSinkType m_sink_type;
    bool m_sink_type_isSet;
    bool m_sink_type_isValid;

    QString m_sink_arn;
    bool m_sink_arn_isSet;
    bool m_sink_arn_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;

    OAICreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration m_chime_sdk_meeting_configuration;
    bool m_chime_sdk_meeting_configuration_isSet;
    bool m_chime_sdk_meeting_configuration_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateMediaCapturePipelineRequest)

#endif // OAICreateMediaCapturePipelineRequest_H
