/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMediaEncoding.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMediaEncoding::OAIMediaEncoding(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMediaEncoding::OAIMediaEncoding() {
    this->initializeModel();
}

OAIMediaEncoding::~OAIMediaEncoding() {}

void OAIMediaEncoding::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMediaEncoding::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMediaEncoding::fromJson(QString jsonString) {
    
    if ( jsonString.compare("pcm", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMediaEncoding::PCM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMediaEncoding::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMediaEncoding::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMediaEncoding::PCM:
            val = "pcm";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMediaEncoding::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMediaEncoding::eOAIMediaEncoding OAIMediaEncoding::getValue() const {
    return m_value;
}

void OAIMediaEncoding::setValue(const OAIMediaEncoding::eOAIMediaEncoding& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMediaEncoding::isSet() const {
    
    return m_value_isSet;
}

bool OAIMediaEncoding::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
