/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration() {
    this->initializeModel();
}

OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::~OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration() {}

void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::initializeModel() {

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_vocabulary_name_isSet = false;
    m_vocabulary_name_isValid = false;

    m_vocabulary_filter_name_isSet = false;
    m_vocabulary_filter_name_isValid = false;

    m_vocabulary_filter_method_isSet = false;
    m_vocabulary_filter_method_isValid = false;

    m_show_speaker_label_isSet = false;
    m_show_speaker_label_isValid = false;

    m_enable_partial_results_stabilization_isSet = false;
    m_enable_partial_results_stabilization_isValid = false;

    m_partial_results_stability_isSet = false;
    m_partial_results_stability_isValid = false;

    m_content_identification_type_isSet = false;
    m_content_identification_type_isValid = false;

    m_content_redaction_type_isSet = false;
    m_content_redaction_type_isValid = false;

    m_pii_entity_types_isSet = false;
    m_pii_entity_types_isValid = false;

    m_language_model_name_isSet = false;
    m_language_model_name_isValid = false;

    m_filter_partial_results_isSet = false;
    m_filter_partial_results_isValid = false;

    m_identify_language_isSet = false;
    m_identify_language_isValid = false;

    m_language_options_isSet = false;
    m_language_options_isValid = false;

    m_preferred_language_isSet = false;
    m_preferred_language_isValid = false;

    m_vocabulary_names_isSet = false;
    m_vocabulary_names_isValid = false;

    m_vocabulary_filter_names_isSet = false;
    m_vocabulary_filter_names_isValid = false;
}

void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::fromJsonObject(QJsonObject json) {

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("LanguageCode")]);
    m_language_code_isSet = !json[QString("LanguageCode")].isNull() && m_language_code_isValid;

    m_vocabulary_name_isValid = ::OpenAPI::fromJsonValue(m_vocabulary_name, json[QString("VocabularyName")]);
    m_vocabulary_name_isSet = !json[QString("VocabularyName")].isNull() && m_vocabulary_name_isValid;

    m_vocabulary_filter_name_isValid = ::OpenAPI::fromJsonValue(m_vocabulary_filter_name, json[QString("VocabularyFilterName")]);
    m_vocabulary_filter_name_isSet = !json[QString("VocabularyFilterName")].isNull() && m_vocabulary_filter_name_isValid;

    m_vocabulary_filter_method_isValid = ::OpenAPI::fromJsonValue(m_vocabulary_filter_method, json[QString("VocabularyFilterMethod")]);
    m_vocabulary_filter_method_isSet = !json[QString("VocabularyFilterMethod")].isNull() && m_vocabulary_filter_method_isValid;

    m_show_speaker_label_isValid = ::OpenAPI::fromJsonValue(m_show_speaker_label, json[QString("ShowSpeakerLabel")]);
    m_show_speaker_label_isSet = !json[QString("ShowSpeakerLabel")].isNull() && m_show_speaker_label_isValid;

    m_enable_partial_results_stabilization_isValid = ::OpenAPI::fromJsonValue(m_enable_partial_results_stabilization, json[QString("EnablePartialResultsStabilization")]);
    m_enable_partial_results_stabilization_isSet = !json[QString("EnablePartialResultsStabilization")].isNull() && m_enable_partial_results_stabilization_isValid;

    m_partial_results_stability_isValid = ::OpenAPI::fromJsonValue(m_partial_results_stability, json[QString("PartialResultsStability")]);
    m_partial_results_stability_isSet = !json[QString("PartialResultsStability")].isNull() && m_partial_results_stability_isValid;

    m_content_identification_type_isValid = ::OpenAPI::fromJsonValue(m_content_identification_type, json[QString("ContentIdentificationType")]);
    m_content_identification_type_isSet = !json[QString("ContentIdentificationType")].isNull() && m_content_identification_type_isValid;

    m_content_redaction_type_isValid = ::OpenAPI::fromJsonValue(m_content_redaction_type, json[QString("ContentRedactionType")]);
    m_content_redaction_type_isSet = !json[QString("ContentRedactionType")].isNull() && m_content_redaction_type_isValid;

    m_pii_entity_types_isValid = ::OpenAPI::fromJsonValue(m_pii_entity_types, json[QString("PiiEntityTypes")]);
    m_pii_entity_types_isSet = !json[QString("PiiEntityTypes")].isNull() && m_pii_entity_types_isValid;

    m_language_model_name_isValid = ::OpenAPI::fromJsonValue(m_language_model_name, json[QString("LanguageModelName")]);
    m_language_model_name_isSet = !json[QString("LanguageModelName")].isNull() && m_language_model_name_isValid;

    m_filter_partial_results_isValid = ::OpenAPI::fromJsonValue(m_filter_partial_results, json[QString("FilterPartialResults")]);
    m_filter_partial_results_isSet = !json[QString("FilterPartialResults")].isNull() && m_filter_partial_results_isValid;

    m_identify_language_isValid = ::OpenAPI::fromJsonValue(m_identify_language, json[QString("IdentifyLanguage")]);
    m_identify_language_isSet = !json[QString("IdentifyLanguage")].isNull() && m_identify_language_isValid;

    m_language_options_isValid = ::OpenAPI::fromJsonValue(m_language_options, json[QString("LanguageOptions")]);
    m_language_options_isSet = !json[QString("LanguageOptions")].isNull() && m_language_options_isValid;

    m_preferred_language_isValid = ::OpenAPI::fromJsonValue(m_preferred_language, json[QString("PreferredLanguage")]);
    m_preferred_language_isSet = !json[QString("PreferredLanguage")].isNull() && m_preferred_language_isValid;

    m_vocabulary_names_isValid = ::OpenAPI::fromJsonValue(m_vocabulary_names, json[QString("VocabularyNames")]);
    m_vocabulary_names_isSet = !json[QString("VocabularyNames")].isNull() && m_vocabulary_names_isValid;

    m_vocabulary_filter_names_isValid = ::OpenAPI::fromJsonValue(m_vocabulary_filter_names, json[QString("VocabularyFilterNames")]);
    m_vocabulary_filter_names_isSet = !json[QString("VocabularyFilterNames")].isNull() && m_vocabulary_filter_names_isValid;
}

QString OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_language_code.isSet()) {
        obj.insert(QString("LanguageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_vocabulary_name_isSet) {
        obj.insert(QString("VocabularyName"), ::OpenAPI::toJsonValue(m_vocabulary_name));
    }
    if (m_vocabulary_filter_name_isSet) {
        obj.insert(QString("VocabularyFilterName"), ::OpenAPI::toJsonValue(m_vocabulary_filter_name));
    }
    if (m_vocabulary_filter_method.isSet()) {
        obj.insert(QString("VocabularyFilterMethod"), ::OpenAPI::toJsonValue(m_vocabulary_filter_method));
    }
    if (m_show_speaker_label_isSet) {
        obj.insert(QString("ShowSpeakerLabel"), ::OpenAPI::toJsonValue(m_show_speaker_label));
    }
    if (m_enable_partial_results_stabilization_isSet) {
        obj.insert(QString("EnablePartialResultsStabilization"), ::OpenAPI::toJsonValue(m_enable_partial_results_stabilization));
    }
    if (m_partial_results_stability.isSet()) {
        obj.insert(QString("PartialResultsStability"), ::OpenAPI::toJsonValue(m_partial_results_stability));
    }
    if (m_content_identification_type.isSet()) {
        obj.insert(QString("ContentIdentificationType"), ::OpenAPI::toJsonValue(m_content_identification_type));
    }
    if (m_content_redaction_type.isSet()) {
        obj.insert(QString("ContentRedactionType"), ::OpenAPI::toJsonValue(m_content_redaction_type));
    }
    if (m_pii_entity_types_isSet) {
        obj.insert(QString("PiiEntityTypes"), ::OpenAPI::toJsonValue(m_pii_entity_types));
    }
    if (m_language_model_name_isSet) {
        obj.insert(QString("LanguageModelName"), ::OpenAPI::toJsonValue(m_language_model_name));
    }
    if (m_filter_partial_results_isSet) {
        obj.insert(QString("FilterPartialResults"), ::OpenAPI::toJsonValue(m_filter_partial_results));
    }
    if (m_identify_language_isSet) {
        obj.insert(QString("IdentifyLanguage"), ::OpenAPI::toJsonValue(m_identify_language));
    }
    if (m_language_options_isSet) {
        obj.insert(QString("LanguageOptions"), ::OpenAPI::toJsonValue(m_language_options));
    }
    if (m_preferred_language.isSet()) {
        obj.insert(QString("PreferredLanguage"), ::OpenAPI::toJsonValue(m_preferred_language));
    }
    if (m_vocabulary_names_isSet) {
        obj.insert(QString("VocabularyNames"), ::OpenAPI::toJsonValue(m_vocabulary_names));
    }
    if (m_vocabulary_filter_names_isSet) {
        obj.insert(QString("VocabularyFilterNames"), ::OpenAPI::toJsonValue(m_vocabulary_filter_names));
    }
    return obj;
}

OAICallAnalyticsLanguageCode OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getLanguageCode() const {
    return m_language_code;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setLanguageCode(const OAICallAnalyticsLanguageCode &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QString OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getVocabularyName() const {
    return m_vocabulary_name;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setVocabularyName(const QString &vocabulary_name) {
    m_vocabulary_name = vocabulary_name;
    m_vocabulary_name_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_vocabulary_name_Set() const{
    return m_vocabulary_name_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_vocabulary_name_Valid() const{
    return m_vocabulary_name_isValid;
}

QString OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getVocabularyFilterName() const {
    return m_vocabulary_filter_name;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setVocabularyFilterName(const QString &vocabulary_filter_name) {
    m_vocabulary_filter_name = vocabulary_filter_name;
    m_vocabulary_filter_name_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_vocabulary_filter_name_Set() const{
    return m_vocabulary_filter_name_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_vocabulary_filter_name_Valid() const{
    return m_vocabulary_filter_name_isValid;
}

OAIVocabularyFilterMethod OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getVocabularyFilterMethod() const {
    return m_vocabulary_filter_method;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setVocabularyFilterMethod(const OAIVocabularyFilterMethod &vocabulary_filter_method) {
    m_vocabulary_filter_method = vocabulary_filter_method;
    m_vocabulary_filter_method_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_vocabulary_filter_method_Set() const{
    return m_vocabulary_filter_method_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_vocabulary_filter_method_Valid() const{
    return m_vocabulary_filter_method_isValid;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getShowSpeakerLabel() const {
    return m_show_speaker_label;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setShowSpeakerLabel(const bool &show_speaker_label) {
    m_show_speaker_label = show_speaker_label;
    m_show_speaker_label_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_show_speaker_label_Set() const{
    return m_show_speaker_label_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_show_speaker_label_Valid() const{
    return m_show_speaker_label_isValid;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getEnablePartialResultsStabilization() const {
    return m_enable_partial_results_stabilization;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setEnablePartialResultsStabilization(const bool &enable_partial_results_stabilization) {
    m_enable_partial_results_stabilization = enable_partial_results_stabilization;
    m_enable_partial_results_stabilization_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_enable_partial_results_stabilization_Set() const{
    return m_enable_partial_results_stabilization_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_enable_partial_results_stabilization_Valid() const{
    return m_enable_partial_results_stabilization_isValid;
}

OAIPartialResultsStability OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getPartialResultsStability() const {
    return m_partial_results_stability;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setPartialResultsStability(const OAIPartialResultsStability &partial_results_stability) {
    m_partial_results_stability = partial_results_stability;
    m_partial_results_stability_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_partial_results_stability_Set() const{
    return m_partial_results_stability_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_partial_results_stability_Valid() const{
    return m_partial_results_stability_isValid;
}

OAIContentType OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getContentIdentificationType() const {
    return m_content_identification_type;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setContentIdentificationType(const OAIContentType &content_identification_type) {
    m_content_identification_type = content_identification_type;
    m_content_identification_type_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_content_identification_type_Set() const{
    return m_content_identification_type_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_content_identification_type_Valid() const{
    return m_content_identification_type_isValid;
}

OAIContentType OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getContentRedactionType() const {
    return m_content_redaction_type;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setContentRedactionType(const OAIContentType &content_redaction_type) {
    m_content_redaction_type = content_redaction_type;
    m_content_redaction_type_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_content_redaction_type_Set() const{
    return m_content_redaction_type_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_content_redaction_type_Valid() const{
    return m_content_redaction_type_isValid;
}

QString OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getPiiEntityTypes() const {
    return m_pii_entity_types;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setPiiEntityTypes(const QString &pii_entity_types) {
    m_pii_entity_types = pii_entity_types;
    m_pii_entity_types_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_pii_entity_types_Set() const{
    return m_pii_entity_types_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_pii_entity_types_Valid() const{
    return m_pii_entity_types_isValid;
}

QString OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getLanguageModelName() const {
    return m_language_model_name;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setLanguageModelName(const QString &language_model_name) {
    m_language_model_name = language_model_name;
    m_language_model_name_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_language_model_name_Set() const{
    return m_language_model_name_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_language_model_name_Valid() const{
    return m_language_model_name_isValid;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getFilterPartialResults() const {
    return m_filter_partial_results;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setFilterPartialResults(const bool &filter_partial_results) {
    m_filter_partial_results = filter_partial_results;
    m_filter_partial_results_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_filter_partial_results_Set() const{
    return m_filter_partial_results_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_filter_partial_results_Valid() const{
    return m_filter_partial_results_isValid;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getIdentifyLanguage() const {
    return m_identify_language;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setIdentifyLanguage(const bool &identify_language) {
    m_identify_language = identify_language;
    m_identify_language_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_identify_language_Set() const{
    return m_identify_language_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_identify_language_Valid() const{
    return m_identify_language_isValid;
}

QString OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getLanguageOptions() const {
    return m_language_options;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setLanguageOptions(const QString &language_options) {
    m_language_options = language_options;
    m_language_options_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_language_options_Set() const{
    return m_language_options_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_language_options_Valid() const{
    return m_language_options_isValid;
}

OAICallAnalyticsLanguageCode OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getPreferredLanguage() const {
    return m_preferred_language;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setPreferredLanguage(const OAICallAnalyticsLanguageCode &preferred_language) {
    m_preferred_language = preferred_language;
    m_preferred_language_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_preferred_language_Set() const{
    return m_preferred_language_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_preferred_language_Valid() const{
    return m_preferred_language_isValid;
}

QString OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getVocabularyNames() const {
    return m_vocabulary_names;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setVocabularyNames(const QString &vocabulary_names) {
    m_vocabulary_names = vocabulary_names;
    m_vocabulary_names_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_vocabulary_names_Set() const{
    return m_vocabulary_names_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_vocabulary_names_Valid() const{
    return m_vocabulary_names_isValid;
}

QString OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::getVocabularyFilterNames() const {
    return m_vocabulary_filter_names;
}
void OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::setVocabularyFilterNames(const QString &vocabulary_filter_names) {
    m_vocabulary_filter_names = vocabulary_filter_names;
    m_vocabulary_filter_names_isSet = true;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_vocabulary_filter_names_Set() const{
    return m_vocabulary_filter_names_isSet;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::is_vocabulary_filter_names_Valid() const{
    return m_vocabulary_filter_names_isValid;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_language_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vocabulary_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vocabulary_filter_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vocabulary_filter_method.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_speaker_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_partial_results_stabilization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_partial_results_stability.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_identification_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_redaction_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pii_entity_types_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_model_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_partial_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identify_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_options_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_preferred_language.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vocabulary_names_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vocabulary_filter_names_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
