/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration.h
 *
 * 
 */

#ifndef OAICreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration_H
#define OAICreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration_H

#include <QJsonObject>

#include "OAICreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration_FragmentSelector.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration_FragmentSelector;

class OAICreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration : public OAIObject {
public:
    OAICreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration();
    OAICreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration(QString json);
    ~OAICreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getStreams() const;
    void setStreams(const QList &streams);
    bool is_streams_Set() const;
    bool is_streams_Valid() const;

    OAICreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration_FragmentSelector getFragmentSelector() const;
    void setFragmentSelector(const OAICreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration_FragmentSelector &fragment_selector);
    bool is_fragment_selector_Set() const;
    bool is_fragment_selector_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_streams;
    bool m_streams_isSet;
    bool m_streams_isValid;

    OAICreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration_FragmentSelector m_fragment_selector;
    bool m_fragment_selector_isSet;
    bool m_fragment_selector_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration)

#endif // OAICreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration_H
