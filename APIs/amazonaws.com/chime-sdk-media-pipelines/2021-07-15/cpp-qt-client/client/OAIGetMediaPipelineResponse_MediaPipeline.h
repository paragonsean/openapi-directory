/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetMediaPipelineResponse_MediaPipeline.h
 *
 * 
 */

#ifndef OAIGetMediaPipelineResponse_MediaPipeline_H
#define OAIGetMediaPipelineResponse_MediaPipeline_H

#include <QJsonObject>

#include "OAIMediaPipeline_MediaCapturePipeline.h"
#include "OAIMediaPipeline_MediaConcatenationPipeline.h"
#include "OAIMediaPipeline_MediaInsightsPipeline.h"
#include "OAIMediaPipeline_MediaLiveConnectorPipeline.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMediaPipeline_MediaCapturePipeline;
class OAIMediaPipeline_MediaLiveConnectorPipeline;
class OAIMediaPipeline_MediaConcatenationPipeline;
class OAIMediaPipeline_MediaInsightsPipeline;

class OAIGetMediaPipelineResponse_MediaPipeline : public OAIObject {
public:
    OAIGetMediaPipelineResponse_MediaPipeline();
    OAIGetMediaPipelineResponse_MediaPipeline(QString json);
    ~OAIGetMediaPipelineResponse_MediaPipeline() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMediaPipeline_MediaCapturePipeline getMediaCapturePipeline() const;
    void setMediaCapturePipeline(const OAIMediaPipeline_MediaCapturePipeline &media_capture_pipeline);
    bool is_media_capture_pipeline_Set() const;
    bool is_media_capture_pipeline_Valid() const;

    OAIMediaPipeline_MediaLiveConnectorPipeline getMediaLiveConnectorPipeline() const;
    void setMediaLiveConnectorPipeline(const OAIMediaPipeline_MediaLiveConnectorPipeline &media_live_connector_pipeline);
    bool is_media_live_connector_pipeline_Set() const;
    bool is_media_live_connector_pipeline_Valid() const;

    OAIMediaPipeline_MediaConcatenationPipeline getMediaConcatenationPipeline() const;
    void setMediaConcatenationPipeline(const OAIMediaPipeline_MediaConcatenationPipeline &media_concatenation_pipeline);
    bool is_media_concatenation_pipeline_Set() const;
    bool is_media_concatenation_pipeline_Valid() const;

    OAIMediaPipeline_MediaInsightsPipeline getMediaInsightsPipeline() const;
    void setMediaInsightsPipeline(const OAIMediaPipeline_MediaInsightsPipeline &media_insights_pipeline);
    bool is_media_insights_pipeline_Set() const;
    bool is_media_insights_pipeline_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMediaPipeline_MediaCapturePipeline m_media_capture_pipeline;
    bool m_media_capture_pipeline_isSet;
    bool m_media_capture_pipeline_isValid;

    OAIMediaPipeline_MediaLiveConnectorPipeline m_media_live_connector_pipeline;
    bool m_media_live_connector_pipeline_isSet;
    bool m_media_live_connector_pipeline_isValid;

    OAIMediaPipeline_MediaConcatenationPipeline m_media_concatenation_pipeline;
    bool m_media_concatenation_pipeline_isSet;
    bool m_media_concatenation_pipeline_isValid;

    OAIMediaPipeline_MediaInsightsPipeline m_media_insights_pipeline;
    bool m_media_insights_pipeline_isSet;
    bool m_media_insights_pipeline_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetMediaPipelineResponse_MediaPipeline)

#endif // OAIGetMediaPipelineResponse_MediaPipeline_H
