/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration.h
 *
 * 
 */

#ifndef OAIChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration_H
#define OAIChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration_H

#include <QJsonObject>

#include "OAIArtifactsConcatenationConfiguration_Audio.h"
#include "OAIArtifactsConcatenationConfiguration_CompositedVideo.h"
#include "OAIArtifactsConcatenationConfiguration_Content.h"
#include "OAIArtifactsConcatenationConfiguration_DataChannel.h"
#include "OAIArtifactsConcatenationConfiguration_MeetingEvents.h"
#include "OAIArtifactsConcatenationConfiguration_TranscriptionMessages.h"
#include "OAIArtifactsConcatenationConfiguration_Video.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArtifactsConcatenationConfiguration_Audio;
class OAIArtifactsConcatenationConfiguration_Video;
class OAIArtifactsConcatenationConfiguration_Content;
class OAIArtifactsConcatenationConfiguration_DataChannel;
class OAIArtifactsConcatenationConfiguration_TranscriptionMessages;
class OAIArtifactsConcatenationConfiguration_MeetingEvents;
class OAIArtifactsConcatenationConfiguration_CompositedVideo;

class OAIChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration : public OAIObject {
public:
    OAIChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration();
    OAIChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration(QString json);
    ~OAIChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIArtifactsConcatenationConfiguration_Audio getAudio() const;
    void setAudio(const OAIArtifactsConcatenationConfiguration_Audio &audio);
    bool is_audio_Set() const;
    bool is_audio_Valid() const;

    OAIArtifactsConcatenationConfiguration_Video getVideo() const;
    void setVideo(const OAIArtifactsConcatenationConfiguration_Video &video);
    bool is_video_Set() const;
    bool is_video_Valid() const;

    OAIArtifactsConcatenationConfiguration_Content getContent() const;
    void setContent(const OAIArtifactsConcatenationConfiguration_Content &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    OAIArtifactsConcatenationConfiguration_DataChannel getDataChannel() const;
    void setDataChannel(const OAIArtifactsConcatenationConfiguration_DataChannel &data_channel);
    bool is_data_channel_Set() const;
    bool is_data_channel_Valid() const;

    OAIArtifactsConcatenationConfiguration_TranscriptionMessages getTranscriptionMessages() const;
    void setTranscriptionMessages(const OAIArtifactsConcatenationConfiguration_TranscriptionMessages &transcription_messages);
    bool is_transcription_messages_Set() const;
    bool is_transcription_messages_Valid() const;

    OAIArtifactsConcatenationConfiguration_MeetingEvents getMeetingEvents() const;
    void setMeetingEvents(const OAIArtifactsConcatenationConfiguration_MeetingEvents &meeting_events);
    bool is_meeting_events_Set() const;
    bool is_meeting_events_Valid() const;

    OAIArtifactsConcatenationConfiguration_CompositedVideo getCompositedVideo() const;
    void setCompositedVideo(const OAIArtifactsConcatenationConfiguration_CompositedVideo &composited_video);
    bool is_composited_video_Set() const;
    bool is_composited_video_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIArtifactsConcatenationConfiguration_Audio m_audio;
    bool m_audio_isSet;
    bool m_audio_isValid;

    OAIArtifactsConcatenationConfiguration_Video m_video;
    bool m_video_isSet;
    bool m_video_isValid;

    OAIArtifactsConcatenationConfiguration_Content m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    OAIArtifactsConcatenationConfiguration_DataChannel m_data_channel;
    bool m_data_channel_isSet;
    bool m_data_channel_isValid;

    OAIArtifactsConcatenationConfiguration_TranscriptionMessages m_transcription_messages;
    bool m_transcription_messages_isSet;
    bool m_transcription_messages_isValid;

    OAIArtifactsConcatenationConfiguration_MeetingEvents m_meeting_events;
    bool m_meeting_events_isSet;
    bool m_meeting_events_isValid;

    OAIArtifactsConcatenationConfiguration_CompositedVideo m_composited_video;
    bool m_composited_video_isSet;
    bool m_composited_video_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration)

#endif // OAIChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration_H
