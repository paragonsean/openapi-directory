/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICompositedVideoArtifactsConfiguration_GridViewConfiguration.h
 *
 * 
 */

#ifndef OAICompositedVideoArtifactsConfiguration_GridViewConfiguration_H
#define OAICompositedVideoArtifactsConfiguration_GridViewConfiguration_H

#include <QJsonObject>

#include "OAICanvasOrientation.h"
#include "OAIContentShareLayoutOption.h"
#include "OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration.h"
#include "OAIGridViewConfiguration_HorizontalLayoutConfiguration.h"
#include "OAIGridViewConfiguration_PresenterOnlyConfiguration.h"
#include "OAIGridViewConfiguration_VerticalLayoutConfiguration.h"
#include "OAIGridViewConfiguration_VideoAttribute.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGridViewConfiguration_PresenterOnlyConfiguration;
class OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration;
class OAIGridViewConfiguration_HorizontalLayoutConfiguration;
class OAIGridViewConfiguration_VerticalLayoutConfiguration;
class OAIGridViewConfiguration_VideoAttribute;

class OAICompositedVideoArtifactsConfiguration_GridViewConfiguration : public OAIObject {
public:
    OAICompositedVideoArtifactsConfiguration_GridViewConfiguration();
    OAICompositedVideoArtifactsConfiguration_GridViewConfiguration(QString json);
    ~OAICompositedVideoArtifactsConfiguration_GridViewConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContentShareLayoutOption getContentShareLayout() const;
    void setContentShareLayout(const OAIContentShareLayoutOption &content_share_layout);
    bool is_content_share_layout_Set() const;
    bool is_content_share_layout_Valid() const;

    OAIGridViewConfiguration_PresenterOnlyConfiguration getPresenterOnlyConfiguration() const;
    void setPresenterOnlyConfiguration(const OAIGridViewConfiguration_PresenterOnlyConfiguration &presenter_only_configuration);
    bool is_presenter_only_configuration_Set() const;
    bool is_presenter_only_configuration_Valid() const;

    OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration getActiveSpeakerOnlyConfiguration() const;
    void setActiveSpeakerOnlyConfiguration(const OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration &active_speaker_only_configuration);
    bool is_active_speaker_only_configuration_Set() const;
    bool is_active_speaker_only_configuration_Valid() const;

    OAIGridViewConfiguration_HorizontalLayoutConfiguration getHorizontalLayoutConfiguration() const;
    void setHorizontalLayoutConfiguration(const OAIGridViewConfiguration_HorizontalLayoutConfiguration &horizontal_layout_configuration);
    bool is_horizontal_layout_configuration_Set() const;
    bool is_horizontal_layout_configuration_Valid() const;

    OAIGridViewConfiguration_VerticalLayoutConfiguration getVerticalLayoutConfiguration() const;
    void setVerticalLayoutConfiguration(const OAIGridViewConfiguration_VerticalLayoutConfiguration &vertical_layout_configuration);
    bool is_vertical_layout_configuration_Set() const;
    bool is_vertical_layout_configuration_Valid() const;

    OAIGridViewConfiguration_VideoAttribute getVideoAttribute() const;
    void setVideoAttribute(const OAIGridViewConfiguration_VideoAttribute &video_attribute);
    bool is_video_attribute_Set() const;
    bool is_video_attribute_Valid() const;

    OAICanvasOrientation getCanvasOrientation() const;
    void setCanvasOrientation(const OAICanvasOrientation &canvas_orientation);
    bool is_canvas_orientation_Set() const;
    bool is_canvas_orientation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContentShareLayoutOption m_content_share_layout;
    bool m_content_share_layout_isSet;
    bool m_content_share_layout_isValid;

    OAIGridViewConfiguration_PresenterOnlyConfiguration m_presenter_only_configuration;
    bool m_presenter_only_configuration_isSet;
    bool m_presenter_only_configuration_isValid;

    OAIGridViewConfiguration_ActiveSpeakerOnlyConfiguration m_active_speaker_only_configuration;
    bool m_active_speaker_only_configuration_isSet;
    bool m_active_speaker_only_configuration_isValid;

    OAIGridViewConfiguration_HorizontalLayoutConfiguration m_horizontal_layout_configuration;
    bool m_horizontal_layout_configuration_isSet;
    bool m_horizontal_layout_configuration_isValid;

    OAIGridViewConfiguration_VerticalLayoutConfiguration m_vertical_layout_configuration;
    bool m_vertical_layout_configuration_isSet;
    bool m_vertical_layout_configuration_isValid;

    OAIGridViewConfiguration_VideoAttribute m_video_attribute;
    bool m_video_attribute_isSet;
    bool m_video_attribute_isValid;

    OAICanvasOrientation m_canvas_orientation;
    bool m_canvas_orientation_isSet;
    bool m_canvas_orientation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICompositedVideoArtifactsConfiguration_GridViewConfiguration)

#endif // OAICompositedVideoArtifactsConfiguration_GridViewConfiguration_H
