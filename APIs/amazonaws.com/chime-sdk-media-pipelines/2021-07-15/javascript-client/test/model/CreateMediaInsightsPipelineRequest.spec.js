/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonChimeSdkMediaPipelines);
  }
}(this, function(expect, AmazonChimeSdkMediaPipelines) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonChimeSdkMediaPipelines.CreateMediaInsightsPipelineRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateMediaInsightsPipelineRequest', function() {
    it('should create an instance of CreateMediaInsightsPipelineRequest', function() {
      // uncomment below and update the code to test CreateMediaInsightsPipelineRequest
      //var instance = new AmazonChimeSdkMediaPipelines.CreateMediaInsightsPipelineRequest();
      //expect(instance).to.be.a(AmazonChimeSdkMediaPipelines.CreateMediaInsightsPipelineRequest);
    });

    it('should have the property mediaInsightsPipelineConfigurationArn (base name: "MediaInsightsPipelineConfigurationArn")', function() {
      // uncomment below and update the code to test the property mediaInsightsPipelineConfigurationArn
      //var instance = new AmazonChimeSdkMediaPipelines.CreateMediaInsightsPipelineRequest();
      //expect(instance).to.be();
    });

    it('should have the property kinesisVideoStreamSourceRuntimeConfiguration (base name: "KinesisVideoStreamSourceRuntimeConfiguration")', function() {
      // uncomment below and update the code to test the property kinesisVideoStreamSourceRuntimeConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.CreateMediaInsightsPipelineRequest();
      //expect(instance).to.be();
    });

    it('should have the property mediaInsightsRuntimeMetadata (base name: "MediaInsightsRuntimeMetadata")', function() {
      // uncomment below and update the code to test the property mediaInsightsRuntimeMetadata
      //var instance = new AmazonChimeSdkMediaPipelines.CreateMediaInsightsPipelineRequest();
      //expect(instance).to.be();
    });

    it('should have the property kinesisVideoStreamRecordingSourceRuntimeConfiguration (base name: "KinesisVideoStreamRecordingSourceRuntimeConfiguration")', function() {
      // uncomment below and update the code to test the property kinesisVideoStreamRecordingSourceRuntimeConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.CreateMediaInsightsPipelineRequest();
      //expect(instance).to.be();
    });

    it('should have the property s3RecordingSinkRuntimeConfiguration (base name: "S3RecordingSinkRuntimeConfiguration")', function() {
      // uncomment below and update the code to test the property s3RecordingSinkRuntimeConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.CreateMediaInsightsPipelineRequest();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonChimeSdkMediaPipelines.CreateMediaInsightsPipelineRequest();
      //expect(instance).to.be();
    });

    it('should have the property clientRequestToken (base name: "ClientRequestToken")', function() {
      // uncomment below and update the code to test the property clientRequestToken
      //var instance = new AmazonChimeSdkMediaPipelines.CreateMediaInsightsPipelineRequest();
      //expect(instance).to.be();
    });

  });

}));
