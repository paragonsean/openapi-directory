/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonChimeSdkMediaPipelines);
  }
}(this, function(expect, AmazonChimeSdkMediaPipelines) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonChimeSdkMediaPipelines.GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration', function() {
    it('should create an instance of GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration', function() {
      // uncomment below and update the code to test GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration();
      //expect(instance).to.be.a(AmazonChimeSdkMediaPipelines.GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration);
    });

    it('should have the property mediaInsightsPipelineConfigurationName (base name: "MediaInsightsPipelineConfigurationName")', function() {
      // uncomment below and update the code to test the property mediaInsightsPipelineConfigurationName
      //var instance = new AmazonChimeSdkMediaPipelines.GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property mediaInsightsPipelineConfigurationArn (base name: "MediaInsightsPipelineConfigurationArn")', function() {
      // uncomment below and update the code to test the property mediaInsightsPipelineConfigurationArn
      //var instance = new AmazonChimeSdkMediaPipelines.GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property resourceAccessRoleArn (base name: "ResourceAccessRoleArn")', function() {
      // uncomment below and update the code to test the property resourceAccessRoleArn
      //var instance = new AmazonChimeSdkMediaPipelines.GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property realTimeAlertConfiguration (base name: "RealTimeAlertConfiguration")', function() {
      // uncomment below and update the code to test the property realTimeAlertConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property elements (base name: "Elements")', function() {
      // uncomment below and update the code to test the property elements
      //var instance = new AmazonChimeSdkMediaPipelines.GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property mediaInsightsPipelineConfigurationId (base name: "MediaInsightsPipelineConfigurationId")', function() {
      // uncomment below and update the code to test the property mediaInsightsPipelineConfigurationId
      //var instance = new AmazonChimeSdkMediaPipelines.GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property createdTimestamp (base name: "CreatedTimestamp")', function() {
      // uncomment below and update the code to test the property createdTimestamp
      //var instance = new AmazonChimeSdkMediaPipelines.GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property updatedTimestamp (base name: "UpdatedTimestamp")', function() {
      // uncomment below and update the code to test the property updatedTimestamp
      //var instance = new AmazonChimeSdkMediaPipelines.GetMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration();
      //expect(instance).to.be();
    });

  });

}));
