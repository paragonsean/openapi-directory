/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonChimeSdkMediaPipelines);
  }
}(this, function(expect, AmazonChimeSdkMediaPipelines) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MediaInsightsPipelineConfigurationElement', function() {
    it('should create an instance of MediaInsightsPipelineConfigurationElement', function() {
      // uncomment below and update the code to test MediaInsightsPipelineConfigurationElement
      //var instance = new AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement();
      //expect(instance).to.be.a(AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement);
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement();
      //expect(instance).to.be();
    });

    it('should have the property amazonTranscribeCallAnalyticsProcessorConfiguration (base name: "AmazonTranscribeCallAnalyticsProcessorConfiguration")', function() {
      // uncomment below and update the code to test the property amazonTranscribeCallAnalyticsProcessorConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement();
      //expect(instance).to.be();
    });

    it('should have the property amazonTranscribeProcessorConfiguration (base name: "AmazonTranscribeProcessorConfiguration")', function() {
      // uncomment below and update the code to test the property amazonTranscribeProcessorConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement();
      //expect(instance).to.be();
    });

    it('should have the property kinesisDataStreamSinkConfiguration (base name: "KinesisDataStreamSinkConfiguration")', function() {
      // uncomment below and update the code to test the property kinesisDataStreamSinkConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement();
      //expect(instance).to.be();
    });

    it('should have the property s3RecordingSinkConfiguration (base name: "S3RecordingSinkConfiguration")', function() {
      // uncomment below and update the code to test the property s3RecordingSinkConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement();
      //expect(instance).to.be();
    });

    it('should have the property voiceAnalyticsProcessorConfiguration (base name: "VoiceAnalyticsProcessorConfiguration")', function() {
      // uncomment below and update the code to test the property voiceAnalyticsProcessorConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement();
      //expect(instance).to.be();
    });

    it('should have the property lambdaFunctionSinkConfiguration (base name: "LambdaFunctionSinkConfiguration")', function() {
      // uncomment below and update the code to test the property lambdaFunctionSinkConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement();
      //expect(instance).to.be();
    });

    it('should have the property sqsQueueSinkConfiguration (base name: "SqsQueueSinkConfiguration")', function() {
      // uncomment below and update the code to test the property sqsQueueSinkConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement();
      //expect(instance).to.be();
    });

    it('should have the property snsTopicSinkConfiguration (base name: "SnsTopicSinkConfiguration")', function() {
      // uncomment below and update the code to test the property snsTopicSinkConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.MediaInsightsPipelineConfigurationElement();
      //expect(instance).to.be();
    });

  });

}));
