/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonChimeSdkMediaPipelines);
  }
}(this, function(expect, AmazonChimeSdkMediaPipelines) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonChimeSdkMediaPipelines.ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration', function() {
    it('should create an instance of ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration', function() {
      // uncomment below and update the code to test ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration();
      //expect(instance).to.be.a(AmazonChimeSdkMediaPipelines.ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration);
    });

    it('should have the property audio (base name: "Audio")', function() {
      // uncomment below and update the code to test the property audio
      //var instance = new AmazonChimeSdkMediaPipelines.ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property video (base name: "Video")', function() {
      // uncomment below and update the code to test the property video
      //var instance = new AmazonChimeSdkMediaPipelines.ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property content (base name: "Content")', function() {
      // uncomment below and update the code to test the property content
      //var instance = new AmazonChimeSdkMediaPipelines.ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property dataChannel (base name: "DataChannel")', function() {
      // uncomment below and update the code to test the property dataChannel
      //var instance = new AmazonChimeSdkMediaPipelines.ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property transcriptionMessages (base name: "TranscriptionMessages")', function() {
      // uncomment below and update the code to test the property transcriptionMessages
      //var instance = new AmazonChimeSdkMediaPipelines.ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property meetingEvents (base name: "MeetingEvents")', function() {
      // uncomment below and update the code to test the property meetingEvents
      //var instance = new AmazonChimeSdkMediaPipelines.ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property compositedVideo (base name: "CompositedVideo")', function() {
      // uncomment below and update the code to test the property compositedVideo
      //var instance = new AmazonChimeSdkMediaPipelines.ChimeSdkMeetingConcatenationConfigurationArtifactsConfiguration();
      //expect(instance).to.be();
    });

  });

}));
