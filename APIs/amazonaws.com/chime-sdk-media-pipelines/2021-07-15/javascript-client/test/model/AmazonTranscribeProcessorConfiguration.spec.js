/**
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonChimeSdkMediaPipelines);
  }
}(this, function(expect, AmazonChimeSdkMediaPipelines) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AmazonTranscribeProcessorConfiguration', function() {
    it('should create an instance of AmazonTranscribeProcessorConfiguration', function() {
      // uncomment below and update the code to test AmazonTranscribeProcessorConfiguration
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be.a(AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration);
    });

    it('should have the property languageCode (base name: "LanguageCode")', function() {
      // uncomment below and update the code to test the property languageCode
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property vocabularyName (base name: "VocabularyName")', function() {
      // uncomment below and update the code to test the property vocabularyName
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property vocabularyFilterName (base name: "VocabularyFilterName")', function() {
      // uncomment below and update the code to test the property vocabularyFilterName
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property vocabularyFilterMethod (base name: "VocabularyFilterMethod")', function() {
      // uncomment below and update the code to test the property vocabularyFilterMethod
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property showSpeakerLabel (base name: "ShowSpeakerLabel")', function() {
      // uncomment below and update the code to test the property showSpeakerLabel
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property enablePartialResultsStabilization (base name: "EnablePartialResultsStabilization")', function() {
      // uncomment below and update the code to test the property enablePartialResultsStabilization
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property partialResultsStability (base name: "PartialResultsStability")', function() {
      // uncomment below and update the code to test the property partialResultsStability
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property contentIdentificationType (base name: "ContentIdentificationType")', function() {
      // uncomment below and update the code to test the property contentIdentificationType
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property contentRedactionType (base name: "ContentRedactionType")', function() {
      // uncomment below and update the code to test the property contentRedactionType
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property piiEntityTypes (base name: "PiiEntityTypes")', function() {
      // uncomment below and update the code to test the property piiEntityTypes
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property languageModelName (base name: "LanguageModelName")', function() {
      // uncomment below and update the code to test the property languageModelName
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property filterPartialResults (base name: "FilterPartialResults")', function() {
      // uncomment below and update the code to test the property filterPartialResults
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property identifyLanguage (base name: "IdentifyLanguage")', function() {
      // uncomment below and update the code to test the property identifyLanguage
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property languageOptions (base name: "LanguageOptions")', function() {
      // uncomment below and update the code to test the property languageOptions
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property preferredLanguage (base name: "PreferredLanguage")', function() {
      // uncomment below and update the code to test the property preferredLanguage
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property vocabularyNames (base name: "VocabularyNames")', function() {
      // uncomment below and update the code to test the property vocabularyNames
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property vocabularyFilterNames (base name: "VocabularyFilterNames")', function() {
      // uncomment below and update the code to test the property vocabularyFilterNames
      //var instance = new AmazonChimeSdkMediaPipelines.AmazonTranscribeProcessorConfiguration();
      //expect(instance).to.be();
    });

  });

}));
