# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateMediaInsightsPipelineStatusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, update_status: str=None):
        """UpdateMediaInsightsPipelineStatusRequest - a model defined in OpenAPI

        :param update_status: The update_status of this UpdateMediaInsightsPipelineStatusRequest.
        """
        self.openapi_types = {
            'update_status': str
        }

        self.attribute_map = {
            'update_status': 'UpdateStatus'
        }

        self._update_status = update_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateMediaInsightsPipelineStatusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateMediaInsightsPipelineStatus_request of this UpdateMediaInsightsPipelineStatusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def update_status(self):
        """Gets the update_status of this UpdateMediaInsightsPipelineStatusRequest.

        The requested status of the media insights pipeline.

        :return: The update_status of this UpdateMediaInsightsPipelineStatusRequest.
        :rtype: str
        """
        return self._update_status

    @update_status.setter
    def update_status(self, update_status):
        """Sets the update_status of this UpdateMediaInsightsPipelineStatusRequest.

        The requested status of the media insights pipeline.

        :param update_status: The update_status of this UpdateMediaInsightsPipelineStatusRequest.
        :type update_status: str
        """
        allowed_values = ["Pause", "Resume"]  # noqa: E501
        if update_status not in allowed_values:
            raise ValueError(
                "Invalid value for `update_status` ({0}), must be one of {1}"
                .format(update_status, allowed_values)
            )

        self._update_status = update_status
