# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.live_connector_sink_configuration_rtmp_configuration import LiveConnectorSinkConfigurationRTMPConfiguration
from openapi_server.models.live_connector_sink_type import LiveConnectorSinkType
from openapi_server import util


class LiveConnectorSinkConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sink_type: LiveConnectorSinkType=None, rtmp_configuration: LiveConnectorSinkConfigurationRTMPConfiguration=None):
        """LiveConnectorSinkConfiguration - a model defined in OpenAPI

        :param sink_type: The sink_type of this LiveConnectorSinkConfiguration.
        :param rtmp_configuration: The rtmp_configuration of this LiveConnectorSinkConfiguration.
        """
        self.openapi_types = {
            'sink_type': LiveConnectorSinkType,
            'rtmp_configuration': LiveConnectorSinkConfigurationRTMPConfiguration
        }

        self.attribute_map = {
            'sink_type': 'SinkType',
            'rtmp_configuration': 'RTMPConfiguration'
        }

        self._sink_type = sink_type
        self._rtmp_configuration = rtmp_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveConnectorSinkConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveConnectorSinkConfiguration of this LiveConnectorSinkConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sink_type(self):
        """Gets the sink_type of this LiveConnectorSinkConfiguration.


        :return: The sink_type of this LiveConnectorSinkConfiguration.
        :rtype: LiveConnectorSinkType
        """
        return self._sink_type

    @sink_type.setter
    def sink_type(self, sink_type):
        """Sets the sink_type of this LiveConnectorSinkConfiguration.


        :param sink_type: The sink_type of this LiveConnectorSinkConfiguration.
        :type sink_type: LiveConnectorSinkType
        """
        if sink_type is None:
            raise ValueError("Invalid value for `sink_type`, must not be `None`")

        self._sink_type = sink_type

    @property
    def rtmp_configuration(self):
        """Gets the rtmp_configuration of this LiveConnectorSinkConfiguration.


        :return: The rtmp_configuration of this LiveConnectorSinkConfiguration.
        :rtype: LiveConnectorSinkConfigurationRTMPConfiguration
        """
        return self._rtmp_configuration

    @rtmp_configuration.setter
    def rtmp_configuration(self, rtmp_configuration):
        """Sets the rtmp_configuration of this LiveConnectorSinkConfiguration.


        :param rtmp_configuration: The rtmp_configuration of this LiveConnectorSinkConfiguration.
        :type rtmp_configuration: LiveConnectorSinkConfigurationRTMPConfiguration
        """
        if rtmp_configuration is None:
            raise ValueError("Invalid value for `rtmp_configuration`, must not be `None`")

        self._rtmp_configuration = rtmp_configuration
