# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audio_mux_type import AudioMuxType
from openapi_server import util


class AudioArtifactsConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mux_type: AudioMuxType=None):
        """AudioArtifactsConfiguration - a model defined in OpenAPI

        :param mux_type: The mux_type of this AudioArtifactsConfiguration.
        """
        self.openapi_types = {
            'mux_type': AudioMuxType
        }

        self.attribute_map = {
            'mux_type': 'MuxType'
        }

        self._mux_type = mux_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioArtifactsConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioArtifactsConfiguration of this AudioArtifactsConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mux_type(self):
        """Gets the mux_type of this AudioArtifactsConfiguration.


        :return: The mux_type of this AudioArtifactsConfiguration.
        :rtype: AudioMuxType
        """
        return self._mux_type

    @mux_type.setter
    def mux_type(self, mux_type):
        """Sets the mux_type of this AudioArtifactsConfiguration.


        :param mux_type: The mux_type of this AudioArtifactsConfiguration.
        :type mux_type: AudioMuxType
        """
        if mux_type is None:
            raise ValueError("Invalid value for `mux_type`, must not be `None`")

        self._mux_type = mux_type
