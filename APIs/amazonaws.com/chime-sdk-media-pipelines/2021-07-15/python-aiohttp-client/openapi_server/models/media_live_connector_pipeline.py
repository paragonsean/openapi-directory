# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.media_pipeline_status import MediaPipelineStatus
from openapi_server import util


class MediaLiveConnectorPipeline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sources: List=None, sinks: List=None, media_pipeline_id: str=None, media_pipeline_arn: str=None, status: MediaPipelineStatus=None, created_timestamp: datetime=None, updated_timestamp: datetime=None):
        """MediaLiveConnectorPipeline - a model defined in OpenAPI

        :param sources: The sources of this MediaLiveConnectorPipeline.
        :param sinks: The sinks of this MediaLiveConnectorPipeline.
        :param media_pipeline_id: The media_pipeline_id of this MediaLiveConnectorPipeline.
        :param media_pipeline_arn: The media_pipeline_arn of this MediaLiveConnectorPipeline.
        :param status: The status of this MediaLiveConnectorPipeline.
        :param created_timestamp: The created_timestamp of this MediaLiveConnectorPipeline.
        :param updated_timestamp: The updated_timestamp of this MediaLiveConnectorPipeline.
        """
        self.openapi_types = {
            'sources': List,
            'sinks': List,
            'media_pipeline_id': str,
            'media_pipeline_arn': str,
            'status': MediaPipelineStatus,
            'created_timestamp': datetime,
            'updated_timestamp': datetime
        }

        self.attribute_map = {
            'sources': 'Sources',
            'sinks': 'Sinks',
            'media_pipeline_id': 'MediaPipelineId',
            'media_pipeline_arn': 'MediaPipelineArn',
            'status': 'Status',
            'created_timestamp': 'CreatedTimestamp',
            'updated_timestamp': 'UpdatedTimestamp'
        }

        self._sources = sources
        self._sinks = sinks
        self._media_pipeline_id = media_pipeline_id
        self._media_pipeline_arn = media_pipeline_arn
        self._status = status
        self._created_timestamp = created_timestamp
        self._updated_timestamp = updated_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediaLiveConnectorPipeline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MediaLiveConnectorPipeline of this MediaLiveConnectorPipeline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sources(self):
        """Gets the sources of this MediaLiveConnectorPipeline.


        :return: The sources of this MediaLiveConnectorPipeline.
        :rtype: List
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this MediaLiveConnectorPipeline.


        :param sources: The sources of this MediaLiveConnectorPipeline.
        :type sources: List
        """

        self._sources = sources

    @property
    def sinks(self):
        """Gets the sinks of this MediaLiveConnectorPipeline.


        :return: The sinks of this MediaLiveConnectorPipeline.
        :rtype: List
        """
        return self._sinks

    @sinks.setter
    def sinks(self, sinks):
        """Sets the sinks of this MediaLiveConnectorPipeline.


        :param sinks: The sinks of this MediaLiveConnectorPipeline.
        :type sinks: List
        """

        self._sinks = sinks

    @property
    def media_pipeline_id(self):
        """Gets the media_pipeline_id of this MediaLiveConnectorPipeline.


        :return: The media_pipeline_id of this MediaLiveConnectorPipeline.
        :rtype: str
        """
        return self._media_pipeline_id

    @media_pipeline_id.setter
    def media_pipeline_id(self, media_pipeline_id):
        """Sets the media_pipeline_id of this MediaLiveConnectorPipeline.


        :param media_pipeline_id: The media_pipeline_id of this MediaLiveConnectorPipeline.
        :type media_pipeline_id: str
        """

        self._media_pipeline_id = media_pipeline_id

    @property
    def media_pipeline_arn(self):
        """Gets the media_pipeline_arn of this MediaLiveConnectorPipeline.


        :return: The media_pipeline_arn of this MediaLiveConnectorPipeline.
        :rtype: str
        """
        return self._media_pipeline_arn

    @media_pipeline_arn.setter
    def media_pipeline_arn(self, media_pipeline_arn):
        """Sets the media_pipeline_arn of this MediaLiveConnectorPipeline.


        :param media_pipeline_arn: The media_pipeline_arn of this MediaLiveConnectorPipeline.
        :type media_pipeline_arn: str
        """

        self._media_pipeline_arn = media_pipeline_arn

    @property
    def status(self):
        """Gets the status of this MediaLiveConnectorPipeline.


        :return: The status of this MediaLiveConnectorPipeline.
        :rtype: MediaPipelineStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MediaLiveConnectorPipeline.


        :param status: The status of this MediaLiveConnectorPipeline.
        :type status: MediaPipelineStatus
        """

        self._status = status

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this MediaLiveConnectorPipeline.


        :return: The created_timestamp of this MediaLiveConnectorPipeline.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this MediaLiveConnectorPipeline.


        :param created_timestamp: The created_timestamp of this MediaLiveConnectorPipeline.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp

    @property
    def updated_timestamp(self):
        """Gets the updated_timestamp of this MediaLiveConnectorPipeline.


        :return: The updated_timestamp of this MediaLiveConnectorPipeline.
        :rtype: datetime
        """
        return self._updated_timestamp

    @updated_timestamp.setter
    def updated_timestamp(self, updated_timestamp):
        """Sets the updated_timestamp of this MediaLiveConnectorPipeline.


        :param updated_timestamp: The updated_timestamp of this MediaLiveConnectorPipeline.
        :type updated_timestamp: datetime
        """

        self._updated_timestamp = updated_timestamp
