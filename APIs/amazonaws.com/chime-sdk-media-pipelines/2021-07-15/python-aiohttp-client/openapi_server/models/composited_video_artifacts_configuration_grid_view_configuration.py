# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.canvas_orientation import CanvasOrientation
from openapi_server.models.content_share_layout_option import ContentShareLayoutOption
from openapi_server.models.grid_view_configuration_active_speaker_only_configuration import GridViewConfigurationActiveSpeakerOnlyConfiguration
from openapi_server.models.grid_view_configuration_horizontal_layout_configuration import GridViewConfigurationHorizontalLayoutConfiguration
from openapi_server.models.grid_view_configuration_presenter_only_configuration import GridViewConfigurationPresenterOnlyConfiguration
from openapi_server.models.grid_view_configuration_vertical_layout_configuration import GridViewConfigurationVerticalLayoutConfiguration
from openapi_server.models.grid_view_configuration_video_attribute import GridViewConfigurationVideoAttribute
from openapi_server import util


class CompositedVideoArtifactsConfigurationGridViewConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_share_layout: ContentShareLayoutOption=None, presenter_only_configuration: GridViewConfigurationPresenterOnlyConfiguration=None, active_speaker_only_configuration: GridViewConfigurationActiveSpeakerOnlyConfiguration=None, horizontal_layout_configuration: GridViewConfigurationHorizontalLayoutConfiguration=None, vertical_layout_configuration: GridViewConfigurationVerticalLayoutConfiguration=None, video_attribute: GridViewConfigurationVideoAttribute=None, canvas_orientation: CanvasOrientation=None):
        """CompositedVideoArtifactsConfigurationGridViewConfiguration - a model defined in OpenAPI

        :param content_share_layout: The content_share_layout of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :param presenter_only_configuration: The presenter_only_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :param active_speaker_only_configuration: The active_speaker_only_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :param horizontal_layout_configuration: The horizontal_layout_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :param vertical_layout_configuration: The vertical_layout_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :param video_attribute: The video_attribute of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :param canvas_orientation: The canvas_orientation of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        """
        self.openapi_types = {
            'content_share_layout': ContentShareLayoutOption,
            'presenter_only_configuration': GridViewConfigurationPresenterOnlyConfiguration,
            'active_speaker_only_configuration': GridViewConfigurationActiveSpeakerOnlyConfiguration,
            'horizontal_layout_configuration': GridViewConfigurationHorizontalLayoutConfiguration,
            'vertical_layout_configuration': GridViewConfigurationVerticalLayoutConfiguration,
            'video_attribute': GridViewConfigurationVideoAttribute,
            'canvas_orientation': CanvasOrientation
        }

        self.attribute_map = {
            'content_share_layout': 'ContentShareLayout',
            'presenter_only_configuration': 'PresenterOnlyConfiguration',
            'active_speaker_only_configuration': 'ActiveSpeakerOnlyConfiguration',
            'horizontal_layout_configuration': 'HorizontalLayoutConfiguration',
            'vertical_layout_configuration': 'VerticalLayoutConfiguration',
            'video_attribute': 'VideoAttribute',
            'canvas_orientation': 'CanvasOrientation'
        }

        self._content_share_layout = content_share_layout
        self._presenter_only_configuration = presenter_only_configuration
        self._active_speaker_only_configuration = active_speaker_only_configuration
        self._horizontal_layout_configuration = horizontal_layout_configuration
        self._vertical_layout_configuration = vertical_layout_configuration
        self._video_attribute = video_attribute
        self._canvas_orientation = canvas_orientation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompositedVideoArtifactsConfigurationGridViewConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompositedVideoArtifactsConfiguration_GridViewConfiguration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_share_layout(self):
        """Gets the content_share_layout of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :return: The content_share_layout of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :rtype: ContentShareLayoutOption
        """
        return self._content_share_layout

    @content_share_layout.setter
    def content_share_layout(self, content_share_layout):
        """Sets the content_share_layout of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :param content_share_layout: The content_share_layout of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :type content_share_layout: ContentShareLayoutOption
        """
        if content_share_layout is None:
            raise ValueError("Invalid value for `content_share_layout`, must not be `None`")

        self._content_share_layout = content_share_layout

    @property
    def presenter_only_configuration(self):
        """Gets the presenter_only_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :return: The presenter_only_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :rtype: GridViewConfigurationPresenterOnlyConfiguration
        """
        return self._presenter_only_configuration

    @presenter_only_configuration.setter
    def presenter_only_configuration(self, presenter_only_configuration):
        """Sets the presenter_only_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :param presenter_only_configuration: The presenter_only_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :type presenter_only_configuration: GridViewConfigurationPresenterOnlyConfiguration
        """

        self._presenter_only_configuration = presenter_only_configuration

    @property
    def active_speaker_only_configuration(self):
        """Gets the active_speaker_only_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :return: The active_speaker_only_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :rtype: GridViewConfigurationActiveSpeakerOnlyConfiguration
        """
        return self._active_speaker_only_configuration

    @active_speaker_only_configuration.setter
    def active_speaker_only_configuration(self, active_speaker_only_configuration):
        """Sets the active_speaker_only_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :param active_speaker_only_configuration: The active_speaker_only_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :type active_speaker_only_configuration: GridViewConfigurationActiveSpeakerOnlyConfiguration
        """

        self._active_speaker_only_configuration = active_speaker_only_configuration

    @property
    def horizontal_layout_configuration(self):
        """Gets the horizontal_layout_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :return: The horizontal_layout_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :rtype: GridViewConfigurationHorizontalLayoutConfiguration
        """
        return self._horizontal_layout_configuration

    @horizontal_layout_configuration.setter
    def horizontal_layout_configuration(self, horizontal_layout_configuration):
        """Sets the horizontal_layout_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :param horizontal_layout_configuration: The horizontal_layout_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :type horizontal_layout_configuration: GridViewConfigurationHorizontalLayoutConfiguration
        """

        self._horizontal_layout_configuration = horizontal_layout_configuration

    @property
    def vertical_layout_configuration(self):
        """Gets the vertical_layout_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :return: The vertical_layout_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :rtype: GridViewConfigurationVerticalLayoutConfiguration
        """
        return self._vertical_layout_configuration

    @vertical_layout_configuration.setter
    def vertical_layout_configuration(self, vertical_layout_configuration):
        """Sets the vertical_layout_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :param vertical_layout_configuration: The vertical_layout_configuration of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :type vertical_layout_configuration: GridViewConfigurationVerticalLayoutConfiguration
        """

        self._vertical_layout_configuration = vertical_layout_configuration

    @property
    def video_attribute(self):
        """Gets the video_attribute of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :return: The video_attribute of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :rtype: GridViewConfigurationVideoAttribute
        """
        return self._video_attribute

    @video_attribute.setter
    def video_attribute(self, video_attribute):
        """Sets the video_attribute of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :param video_attribute: The video_attribute of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :type video_attribute: GridViewConfigurationVideoAttribute
        """

        self._video_attribute = video_attribute

    @property
    def canvas_orientation(self):
        """Gets the canvas_orientation of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :return: The canvas_orientation of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :rtype: CanvasOrientation
        """
        return self._canvas_orientation

    @canvas_orientation.setter
    def canvas_orientation(self, canvas_orientation):
        """Sets the canvas_orientation of this CompositedVideoArtifactsConfigurationGridViewConfiguration.


        :param canvas_orientation: The canvas_orientation of this CompositedVideoArtifactsConfigurationGridViewConfiguration.
        :type canvas_orientation: CanvasOrientation
        """

        self._canvas_orientation = canvas_orientation
