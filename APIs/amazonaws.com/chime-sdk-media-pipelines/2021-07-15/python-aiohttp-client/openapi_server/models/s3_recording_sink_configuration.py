# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recording_file_format import RecordingFileFormat
from openapi_server import util


class S3RecordingSinkConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination: str=None, recording_file_format: RecordingFileFormat=None):
        """S3RecordingSinkConfiguration - a model defined in OpenAPI

        :param destination: The destination of this S3RecordingSinkConfiguration.
        :param recording_file_format: The recording_file_format of this S3RecordingSinkConfiguration.
        """
        self.openapi_types = {
            'destination': str,
            'recording_file_format': RecordingFileFormat
        }

        self.attribute_map = {
            'destination': 'Destination',
            'recording_file_format': 'RecordingFileFormat'
        }

        self._destination = destination
        self._recording_file_format = recording_file_format

    @classmethod
    def from_dict(cls, dikt: dict) -> 'S3RecordingSinkConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The S3RecordingSinkConfiguration of this S3RecordingSinkConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self):
        """Gets the destination of this S3RecordingSinkConfiguration.


        :return: The destination of this S3RecordingSinkConfiguration.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this S3RecordingSinkConfiguration.


        :param destination: The destination of this S3RecordingSinkConfiguration.
        :type destination: str
        """

        self._destination = destination

    @property
    def recording_file_format(self):
        """Gets the recording_file_format of this S3RecordingSinkConfiguration.


        :return: The recording_file_format of this S3RecordingSinkConfiguration.
        :rtype: RecordingFileFormat
        """
        return self._recording_file_format

    @recording_file_format.setter
    def recording_file_format(self, recording_file_format):
        """Sets the recording_file_format of this S3RecordingSinkConfiguration.


        :param recording_file_format: The recording_file_format of this S3RecordingSinkConfiguration.
        :type recording_file_format: RecordingFileFormat
        """

        self._recording_file_format = recording_file_format
