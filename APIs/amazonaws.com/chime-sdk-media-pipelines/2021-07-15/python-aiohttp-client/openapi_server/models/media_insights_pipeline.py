# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.media_insights_pipeline_kinesis_video_stream_recording_source_runtime_configuration import MediaInsightsPipelineKinesisVideoStreamRecordingSourceRuntimeConfiguration
from openapi_server.models.media_insights_pipeline_kinesis_video_stream_source_runtime_configuration import MediaInsightsPipelineKinesisVideoStreamSourceRuntimeConfiguration
from openapi_server.models.media_insights_pipeline_s3_recording_sink_runtime_configuration import MediaInsightsPipelineS3RecordingSinkRuntimeConfiguration
from openapi_server.models.media_pipeline_status import MediaPipelineStatus
from openapi_server import util


class MediaInsightsPipeline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_pipeline_id: str=None, media_pipeline_arn: str=None, media_insights_pipeline_configuration_arn: str=None, status: MediaPipelineStatus=None, kinesis_video_stream_source_runtime_configuration: MediaInsightsPipelineKinesisVideoStreamSourceRuntimeConfiguration=None, media_insights_runtime_metadata: Dict=None, kinesis_video_stream_recording_source_runtime_configuration: MediaInsightsPipelineKinesisVideoStreamRecordingSourceRuntimeConfiguration=None, s3_recording_sink_runtime_configuration: MediaInsightsPipelineS3RecordingSinkRuntimeConfiguration=None, created_timestamp: datetime=None):
        """MediaInsightsPipeline - a model defined in OpenAPI

        :param media_pipeline_id: The media_pipeline_id of this MediaInsightsPipeline.
        :param media_pipeline_arn: The media_pipeline_arn of this MediaInsightsPipeline.
        :param media_insights_pipeline_configuration_arn: The media_insights_pipeline_configuration_arn of this MediaInsightsPipeline.
        :param status: The status of this MediaInsightsPipeline.
        :param kinesis_video_stream_source_runtime_configuration: The kinesis_video_stream_source_runtime_configuration of this MediaInsightsPipeline.
        :param media_insights_runtime_metadata: The media_insights_runtime_metadata of this MediaInsightsPipeline.
        :param kinesis_video_stream_recording_source_runtime_configuration: The kinesis_video_stream_recording_source_runtime_configuration of this MediaInsightsPipeline.
        :param s3_recording_sink_runtime_configuration: The s3_recording_sink_runtime_configuration of this MediaInsightsPipeline.
        :param created_timestamp: The created_timestamp of this MediaInsightsPipeline.
        """
        self.openapi_types = {
            'media_pipeline_id': str,
            'media_pipeline_arn': str,
            'media_insights_pipeline_configuration_arn': str,
            'status': MediaPipelineStatus,
            'kinesis_video_stream_source_runtime_configuration': MediaInsightsPipelineKinesisVideoStreamSourceRuntimeConfiguration,
            'media_insights_runtime_metadata': Dict,
            'kinesis_video_stream_recording_source_runtime_configuration': MediaInsightsPipelineKinesisVideoStreamRecordingSourceRuntimeConfiguration,
            's3_recording_sink_runtime_configuration': MediaInsightsPipelineS3RecordingSinkRuntimeConfiguration,
            'created_timestamp': datetime
        }

        self.attribute_map = {
            'media_pipeline_id': 'MediaPipelineId',
            'media_pipeline_arn': 'MediaPipelineArn',
            'media_insights_pipeline_configuration_arn': 'MediaInsightsPipelineConfigurationArn',
            'status': 'Status',
            'kinesis_video_stream_source_runtime_configuration': 'KinesisVideoStreamSourceRuntimeConfiguration',
            'media_insights_runtime_metadata': 'MediaInsightsRuntimeMetadata',
            'kinesis_video_stream_recording_source_runtime_configuration': 'KinesisVideoStreamRecordingSourceRuntimeConfiguration',
            's3_recording_sink_runtime_configuration': 'S3RecordingSinkRuntimeConfiguration',
            'created_timestamp': 'CreatedTimestamp'
        }

        self._media_pipeline_id = media_pipeline_id
        self._media_pipeline_arn = media_pipeline_arn
        self._media_insights_pipeline_configuration_arn = media_insights_pipeline_configuration_arn
        self._status = status
        self._kinesis_video_stream_source_runtime_configuration = kinesis_video_stream_source_runtime_configuration
        self._media_insights_runtime_metadata = media_insights_runtime_metadata
        self._kinesis_video_stream_recording_source_runtime_configuration = kinesis_video_stream_recording_source_runtime_configuration
        self._s3_recording_sink_runtime_configuration = s3_recording_sink_runtime_configuration
        self._created_timestamp = created_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediaInsightsPipeline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MediaInsightsPipeline of this MediaInsightsPipeline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_pipeline_id(self):
        """Gets the media_pipeline_id of this MediaInsightsPipeline.


        :return: The media_pipeline_id of this MediaInsightsPipeline.
        :rtype: str
        """
        return self._media_pipeline_id

    @media_pipeline_id.setter
    def media_pipeline_id(self, media_pipeline_id):
        """Sets the media_pipeline_id of this MediaInsightsPipeline.


        :param media_pipeline_id: The media_pipeline_id of this MediaInsightsPipeline.
        :type media_pipeline_id: str
        """

        self._media_pipeline_id = media_pipeline_id

    @property
    def media_pipeline_arn(self):
        """Gets the media_pipeline_arn of this MediaInsightsPipeline.


        :return: The media_pipeline_arn of this MediaInsightsPipeline.
        :rtype: str
        """
        return self._media_pipeline_arn

    @media_pipeline_arn.setter
    def media_pipeline_arn(self, media_pipeline_arn):
        """Sets the media_pipeline_arn of this MediaInsightsPipeline.


        :param media_pipeline_arn: The media_pipeline_arn of this MediaInsightsPipeline.
        :type media_pipeline_arn: str
        """

        self._media_pipeline_arn = media_pipeline_arn

    @property
    def media_insights_pipeline_configuration_arn(self):
        """Gets the media_insights_pipeline_configuration_arn of this MediaInsightsPipeline.


        :return: The media_insights_pipeline_configuration_arn of this MediaInsightsPipeline.
        :rtype: str
        """
        return self._media_insights_pipeline_configuration_arn

    @media_insights_pipeline_configuration_arn.setter
    def media_insights_pipeline_configuration_arn(self, media_insights_pipeline_configuration_arn):
        """Sets the media_insights_pipeline_configuration_arn of this MediaInsightsPipeline.


        :param media_insights_pipeline_configuration_arn: The media_insights_pipeline_configuration_arn of this MediaInsightsPipeline.
        :type media_insights_pipeline_configuration_arn: str
        """

        self._media_insights_pipeline_configuration_arn = media_insights_pipeline_configuration_arn

    @property
    def status(self):
        """Gets the status of this MediaInsightsPipeline.


        :return: The status of this MediaInsightsPipeline.
        :rtype: MediaPipelineStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MediaInsightsPipeline.


        :param status: The status of this MediaInsightsPipeline.
        :type status: MediaPipelineStatus
        """

        self._status = status

    @property
    def kinesis_video_stream_source_runtime_configuration(self):
        """Gets the kinesis_video_stream_source_runtime_configuration of this MediaInsightsPipeline.


        :return: The kinesis_video_stream_source_runtime_configuration of this MediaInsightsPipeline.
        :rtype: MediaInsightsPipelineKinesisVideoStreamSourceRuntimeConfiguration
        """
        return self._kinesis_video_stream_source_runtime_configuration

    @kinesis_video_stream_source_runtime_configuration.setter
    def kinesis_video_stream_source_runtime_configuration(self, kinesis_video_stream_source_runtime_configuration):
        """Sets the kinesis_video_stream_source_runtime_configuration of this MediaInsightsPipeline.


        :param kinesis_video_stream_source_runtime_configuration: The kinesis_video_stream_source_runtime_configuration of this MediaInsightsPipeline.
        :type kinesis_video_stream_source_runtime_configuration: MediaInsightsPipelineKinesisVideoStreamSourceRuntimeConfiguration
        """

        self._kinesis_video_stream_source_runtime_configuration = kinesis_video_stream_source_runtime_configuration

    @property
    def media_insights_runtime_metadata(self):
        """Gets the media_insights_runtime_metadata of this MediaInsightsPipeline.


        :return: The media_insights_runtime_metadata of this MediaInsightsPipeline.
        :rtype: Dict
        """
        return self._media_insights_runtime_metadata

    @media_insights_runtime_metadata.setter
    def media_insights_runtime_metadata(self, media_insights_runtime_metadata):
        """Sets the media_insights_runtime_metadata of this MediaInsightsPipeline.


        :param media_insights_runtime_metadata: The media_insights_runtime_metadata of this MediaInsightsPipeline.
        :type media_insights_runtime_metadata: Dict
        """

        self._media_insights_runtime_metadata = media_insights_runtime_metadata

    @property
    def kinesis_video_stream_recording_source_runtime_configuration(self):
        """Gets the kinesis_video_stream_recording_source_runtime_configuration of this MediaInsightsPipeline.


        :return: The kinesis_video_stream_recording_source_runtime_configuration of this MediaInsightsPipeline.
        :rtype: MediaInsightsPipelineKinesisVideoStreamRecordingSourceRuntimeConfiguration
        """
        return self._kinesis_video_stream_recording_source_runtime_configuration

    @kinesis_video_stream_recording_source_runtime_configuration.setter
    def kinesis_video_stream_recording_source_runtime_configuration(self, kinesis_video_stream_recording_source_runtime_configuration):
        """Sets the kinesis_video_stream_recording_source_runtime_configuration of this MediaInsightsPipeline.


        :param kinesis_video_stream_recording_source_runtime_configuration: The kinesis_video_stream_recording_source_runtime_configuration of this MediaInsightsPipeline.
        :type kinesis_video_stream_recording_source_runtime_configuration: MediaInsightsPipelineKinesisVideoStreamRecordingSourceRuntimeConfiguration
        """

        self._kinesis_video_stream_recording_source_runtime_configuration = kinesis_video_stream_recording_source_runtime_configuration

    @property
    def s3_recording_sink_runtime_configuration(self):
        """Gets the s3_recording_sink_runtime_configuration of this MediaInsightsPipeline.


        :return: The s3_recording_sink_runtime_configuration of this MediaInsightsPipeline.
        :rtype: MediaInsightsPipelineS3RecordingSinkRuntimeConfiguration
        """
        return self._s3_recording_sink_runtime_configuration

    @s3_recording_sink_runtime_configuration.setter
    def s3_recording_sink_runtime_configuration(self, s3_recording_sink_runtime_configuration):
        """Sets the s3_recording_sink_runtime_configuration of this MediaInsightsPipeline.


        :param s3_recording_sink_runtime_configuration: The s3_recording_sink_runtime_configuration of this MediaInsightsPipeline.
        :type s3_recording_sink_runtime_configuration: MediaInsightsPipelineS3RecordingSinkRuntimeConfiguration
        """

        self._s3_recording_sink_runtime_configuration = s3_recording_sink_runtime_configuration

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this MediaInsightsPipeline.


        :return: The created_timestamp of this MediaInsightsPipeline.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this MediaInsightsPipeline.


        :param created_timestamp: The created_timestamp of this MediaInsightsPipeline.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp
