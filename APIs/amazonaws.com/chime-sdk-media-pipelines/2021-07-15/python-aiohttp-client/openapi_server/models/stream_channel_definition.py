# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StreamChannelDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_of_channels: int=None, channel_definitions: List=None):
        """StreamChannelDefinition - a model defined in OpenAPI

        :param number_of_channels: The number_of_channels of this StreamChannelDefinition.
        :param channel_definitions: The channel_definitions of this StreamChannelDefinition.
        """
        self.openapi_types = {
            'number_of_channels': int,
            'channel_definitions': List
        }

        self.attribute_map = {
            'number_of_channels': 'NumberOfChannels',
            'channel_definitions': 'ChannelDefinitions'
        }

        self._number_of_channels = number_of_channels
        self._channel_definitions = channel_definitions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamChannelDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamChannelDefinition of this StreamChannelDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_channels(self):
        """Gets the number_of_channels of this StreamChannelDefinition.


        :return: The number_of_channels of this StreamChannelDefinition.
        :rtype: int
        """
        return self._number_of_channels

    @number_of_channels.setter
    def number_of_channels(self, number_of_channels):
        """Sets the number_of_channels of this StreamChannelDefinition.


        :param number_of_channels: The number_of_channels of this StreamChannelDefinition.
        :type number_of_channels: int
        """
        if number_of_channels is None:
            raise ValueError("Invalid value for `number_of_channels`, must not be `None`")

        self._number_of_channels = number_of_channels

    @property
    def channel_definitions(self):
        """Gets the channel_definitions of this StreamChannelDefinition.


        :return: The channel_definitions of this StreamChannelDefinition.
        :rtype: List
        """
        return self._channel_definitions

    @channel_definitions.setter
    def channel_definitions(self, channel_definitions):
        """Sets the channel_definitions of this StreamChannelDefinition.


        :param channel_definitions: The channel_definitions of this StreamChannelDefinition.
        :type channel_definitions: List
        """

        self._channel_definitions = channel_definitions
