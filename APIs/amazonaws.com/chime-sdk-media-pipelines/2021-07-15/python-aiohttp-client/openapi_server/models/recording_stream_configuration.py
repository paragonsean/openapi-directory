# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecordingStreamConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_arn: str=None):
        """RecordingStreamConfiguration - a model defined in OpenAPI

        :param stream_arn: The stream_arn of this RecordingStreamConfiguration.
        """
        self.openapi_types = {
            'stream_arn': str
        }

        self.attribute_map = {
            'stream_arn': 'StreamArn'
        }

        self._stream_arn = stream_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecordingStreamConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecordingStreamConfiguration of this RecordingStreamConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_arn(self):
        """Gets the stream_arn of this RecordingStreamConfiguration.


        :return: The stream_arn of this RecordingStreamConfiguration.
        :rtype: str
        """
        return self._stream_arn

    @stream_arn.setter
    def stream_arn(self, stream_arn):
        """Sets the stream_arn of this RecordingStreamConfiguration.


        :param stream_arn: The stream_arn of this RecordingStreamConfiguration.
        :type stream_arn: str
        """

        self._stream_arn = stream_arn
