# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_media_pipeline_response_media_pipeline import GetMediaPipelineResponseMediaPipeline
from openapi_server import util


class GetMediaPipelineResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_pipeline: GetMediaPipelineResponseMediaPipeline=None):
        """GetMediaPipelineResponse - a model defined in OpenAPI

        :param media_pipeline: The media_pipeline of this GetMediaPipelineResponse.
        """
        self.openapi_types = {
            'media_pipeline': GetMediaPipelineResponseMediaPipeline
        }

        self.attribute_map = {
            'media_pipeline': 'MediaPipeline'
        }

        self._media_pipeline = media_pipeline

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMediaPipelineResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetMediaPipelineResponse of this GetMediaPipelineResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_pipeline(self):
        """Gets the media_pipeline of this GetMediaPipelineResponse.


        :return: The media_pipeline of this GetMediaPipelineResponse.
        :rtype: GetMediaPipelineResponseMediaPipeline
        """
        return self._media_pipeline

    @media_pipeline.setter
    def media_pipeline(self, media_pipeline):
        """Sets the media_pipeline of this GetMediaPipelineResponse.


        :param media_pipeline: The media_pipeline of this GetMediaPipelineResponse.
        :type media_pipeline: GetMediaPipelineResponseMediaPipeline
        """

        self._media_pipeline = media_pipeline
