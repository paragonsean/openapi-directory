# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.border_color import BorderColor
from openapi_server.models.highlight_color import HighlightColor
from openapi_server import util


class VideoAttribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, corner_radius: int=None, border_color: BorderColor=None, highlight_color: HighlightColor=None, border_thickness: int=None):
        """VideoAttribute - a model defined in OpenAPI

        :param corner_radius: The corner_radius of this VideoAttribute.
        :param border_color: The border_color of this VideoAttribute.
        :param highlight_color: The highlight_color of this VideoAttribute.
        :param border_thickness: The border_thickness of this VideoAttribute.
        """
        self.openapi_types = {
            'corner_radius': int,
            'border_color': BorderColor,
            'highlight_color': HighlightColor,
            'border_thickness': int
        }

        self.attribute_map = {
            'corner_radius': 'CornerRadius',
            'border_color': 'BorderColor',
            'highlight_color': 'HighlightColor',
            'border_thickness': 'BorderThickness'
        }

        self._corner_radius = corner_radius
        self._border_color = border_color
        self._highlight_color = highlight_color
        self._border_thickness = border_thickness

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoAttribute of this VideoAttribute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def corner_radius(self):
        """Gets the corner_radius of this VideoAttribute.


        :return: The corner_radius of this VideoAttribute.
        :rtype: int
        """
        return self._corner_radius

    @corner_radius.setter
    def corner_radius(self, corner_radius):
        """Sets the corner_radius of this VideoAttribute.


        :param corner_radius: The corner_radius of this VideoAttribute.
        :type corner_radius: int
        """

        self._corner_radius = corner_radius

    @property
    def border_color(self):
        """Gets the border_color of this VideoAttribute.


        :return: The border_color of this VideoAttribute.
        :rtype: BorderColor
        """
        return self._border_color

    @border_color.setter
    def border_color(self, border_color):
        """Sets the border_color of this VideoAttribute.


        :param border_color: The border_color of this VideoAttribute.
        :type border_color: BorderColor
        """

        self._border_color = border_color

    @property
    def highlight_color(self):
        """Gets the highlight_color of this VideoAttribute.


        :return: The highlight_color of this VideoAttribute.
        :rtype: HighlightColor
        """
        return self._highlight_color

    @highlight_color.setter
    def highlight_color(self, highlight_color):
        """Sets the highlight_color of this VideoAttribute.


        :param highlight_color: The highlight_color of this VideoAttribute.
        :type highlight_color: HighlightColor
        """

        self._highlight_color = highlight_color

    @property
    def border_thickness(self):
        """Gets the border_thickness of this VideoAttribute.


        :return: The border_thickness of this VideoAttribute.
        :rtype: int
        """
        return self._border_thickness

    @border_thickness.setter
    def border_thickness(self, border_thickness):
        """Sets the border_thickness of this VideoAttribute.


        :param border_thickness: The border_thickness of this VideoAttribute.
        :type border_thickness: int
        """

        self._border_thickness = border_thickness
