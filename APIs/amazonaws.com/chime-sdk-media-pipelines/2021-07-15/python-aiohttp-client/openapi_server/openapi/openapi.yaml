openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "The Amazon Chime SDK media pipeline APIs in this section allow software\
    \ developers to create Amazon Chime SDK media pipelines that capture, concatenate,\
    \ or stream your Amazon Chime SDK meetings. For more information about media pipelines,\
    \ see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\"\
    >Amazon Chime SDK media pipelines</a>. "
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Chime SDK Media Pipelines
  version: 2021-07-15
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: chime-sdk-media-pipelines
  x-aws-signingName: chime
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/chime-sdk-media-pipelines-2021-07-15.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/media-pipelines-chime/
servers:
- description: The Amazon Chime SDK Media Pipelines multi-region endpoint
  url: "http://media-pipelines-chime.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Chime SDK Media Pipelines multi-region endpoint
  url: "https://media-pipelines-chime.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Chime SDK Media Pipelines endpoint for China (Beijing) and
    China (Ningxia)
  url: "http://media-pipelines-chime.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Chime SDK Media Pipelines endpoint for China (Beijing) and
    China (Ningxia)
  url: "https://media-pipelines-chime.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /media-insights-pipeline-configurations:
    get:
      description: Lists the available media insights pipeline configurations.
      operationId: list_media_insights_pipeline_configurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The token used to return the next page of results.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 4096
          pattern: .*
          type: string
        style: form
      - description: The maximum number of results to return in a single call.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMediaInsightsPipelineConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: A structure that contains the static configurations for a media
        insights pipeline.
      operationId: create_media_insights_pipeline_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMediaInsightsPipelineConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMediaInsightsPipelineConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /media-insights-pipeline-configurations/{identifier}:
    delete:
      description: Deletes the specified configuration settings.
      operationId: delete_media_insights_pipeline_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the resource to be deleted. Valid values
          include the name and ARN of the media insights pipeline configuration.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          maxLength: 1024
          pattern: .*\S.*
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Gets the configuration settings for a media insights pipeline.
      operationId: get_media_insights_pipeline_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the requested resource. Valid values
          include the name and ARN of the media insights pipeline configuration.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          maxLength: 1024
          pattern: .*\S.*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMediaInsightsPipelineConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates the media insights pipeline's configuration settings.
      operationId: update_media_insights_pipeline_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the resource to be updated. Valid values
          include the name and ARN of the media insights pipeline configuration.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          maxLength: 1024
          pattern: .*\S.*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMediaInsightsPipelineConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMediaInsightsPipelineConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /media-insights-pipeline-status/{identifier}:
    put:
      description: Updates the status of a media insights pipeline.
      operationId: update_media_insights_pipeline_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the resource to be updated. Valid values
          include the ID and ARN of the media insights pipeline.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          maxLength: 1024
          pattern: .*\S.*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMediaInsightsPipelineStatus_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /media-insights-pipelines:
    post:
      description: Creates a media insights pipeline.
      operationId: create_media_insights_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMediaInsightsPipeline_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMediaInsightsPipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sdk-media-capture-pipelines:
    get:
      description: Returns a list of media pipelines.
      operationId: list_media_capture_pipelines
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The token used to retrieve the next page of results.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 4096
          pattern: .*
          type: string
        style: form
      - description: "The maximum number of results to return in a single call. Valid\
          \ Range: 1 - 99."
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMediaCapturePipelinesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a media pipeline.
      operationId: create_media_capture_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMediaCapturePipeline_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMediaCapturePipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sdk-media-capture-pipelines/{mediaPipelineId}:
    delete:
      description: Deletes the media pipeline.
      operationId: delete_media_capture_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The ID of the media pipeline being deleted. '
        explode: false
        in: path
        name: mediaPipelineId
        required: true
        schema:
          maxLength: 36
          minLength: 36
          pattern: "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Gets an existing media pipeline.
      operationId: get_media_capture_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the pipeline that you want to get.
        explode: false
        in: path
        name: mediaPipelineId
        required: true
        schema:
          maxLength: 36
          minLength: 36
          pattern: "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMediaCapturePipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /sdk-media-concatenation-pipelines:
    post:
      description: Creates a media concatenation pipeline.
      operationId: create_media_concatenation_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMediaConcatenationPipeline_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMediaConcatenationPipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sdk-media-live-connector-pipelines:
    post:
      description: Creates a media live connector pipeline in an Amazon Chime SDK
        meeting.
      operationId: create_media_live_connector_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMediaLiveConnectorPipeline_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMediaLiveConnectorPipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sdk-media-pipelines:
    get:
      description: Returns a list of media pipelines.
      operationId: list_media_pipelines
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The token used to retrieve the next page of results.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 4096
          pattern: .*
          type: string
        style: form
      - description: "The maximum number of results to return in a single call. Valid\
          \ Range: 1 - 99."
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMediaPipelinesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /sdk-media-pipelines/{mediaPipelineId}:
    delete:
      description: Deletes the media pipeline.
      operationId: delete_media_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the media pipeline to delete.
        explode: false
        in: path
        name: mediaPipelineId
        required: true
        schema:
          maxLength: 36
          minLength: 36
          pattern: "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Gets an existing media pipeline.
      operationId: get_media_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the pipeline that you want to get.
        explode: false
        in: path
        name: mediaPipelineId
        required: true
        schema:
          maxLength: 36
          minLength: 36
          pattern: "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMediaPipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags#arn:
    get:
      description: Lists the tags available for a media pipeline.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The ARN of the media pipeline associated with any tags. The\
          \ ARN consists of the pipeline's region, resource ID, and pipeline ID."
        explode: true
        in: query
        name: arn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          pattern: "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags#operation=tag-resource:
    post:
      description: "The ARN of the media pipeline that you want to tag. Consists of\
        \ the pipeline's endpoint region, resource ID, and pipeline ID."
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: operation
        required: true
        schema:
          enum:
          - tag-resource
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags#operation=untag-resource:
    post:
      description: Removes any tags from a media pipeline.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: operation
        required: true
        schema:
          enum:
          - untag-resource
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResource_request'
        required: true
        x-body-name: body
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateMediaCapturePipelineResponse:
      example:
        MediaCapturePipeline:
          Status: ""
          UpdatedTimestamp: ""
          CreatedTimestamp: ""
          SourceArn: ""
          ChimeSdkMeetingConfiguration:
            SourceConfiguration:
              SelectedVideoStreams:
                ExternalUserIds: ""
                AttendeeIds: ""
            ArtifactsConfiguration:
              Video:
                MuxType: ""
                State: ""
              Content:
                MuxType: ""
                State: ""
              Audio:
                MuxType: ""
              CompositedVideo:
                Layout: ""
                GridViewConfiguration:
                  ContentShareLayout: ""
                  PresenterOnlyConfiguration:
                    PresenterPosition: ""
                  VideoAttribute:
                    CornerRadius: ""
                    BorderThickness: ""
                    BorderColor: ""
                    HighlightColor: ""
                  HorizontalLayoutConfiguration:
                    TileAspectRatio: ""
                    TilePosition: ""
                    TileOrder: ""
                    TileCount: ""
                  CanvasOrientation: ""
                  ActiveSpeakerOnlyConfiguration:
                    ActiveSpeakerPosition: ""
                  VerticalLayoutConfiguration:
                    TileAspectRatio: ""
                    TilePosition: ""
                    TileOrder: ""
                    TileCount: ""
                Resolution: ""
          MediaPipelineId: ""
          SourceType: ""
          SinkArn: ""
          MediaPipelineArn: ""
          SinkType: ""
      properties:
        MediaCapturePipeline:
          $ref: '#/components/schemas/CreateMediaCapturePipelineResponse_MediaCapturePipeline'
      title: CreateMediaCapturePipelineResponse
      type: object
    SourceConfiguration:
      description: Source configuration for a specified media pipeline.
      properties:
        SelectedVideoStreams:
          $ref: '#/components/schemas/SourceConfiguration_SelectedVideoStreams'
      title: SourceConfiguration
      type: object
    ArtifactsConfiguration:
      description: The configuration for the artifacts.
      properties:
        Audio:
          $ref: '#/components/schemas/ArtifactsConfiguration_Audio'
        Video:
          $ref: '#/components/schemas/ArtifactsConfiguration_Video'
        Content:
          $ref: '#/components/schemas/ArtifactsConfiguration_Content'
        CompositedVideo:
          $ref: '#/components/schemas/ArtifactsConfiguration_CompositedVideo'
      required:
      - Audio
      - Content
      - Video
      title: ArtifactsConfiguration
      type: object
    Tag:
      description: A key/value pair that grants users access to meeting resources.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key half of a tag.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value half of a tag.
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    BadRequestException: {}
    ForbiddenException: {}
    UnauthorizedClientException: {}
    ThrottledClientException: {}
    ResourceLimitExceededException: {}
    ServiceUnavailableException: {}
    ServiceFailureException: {}
    CreateMediaConcatenationPipelineResponse:
      example:
        MediaConcatenationPipeline:
          Status: ""
          UpdatedTimestamp: ""
          Sinks: ""
          CreatedTimestamp: ""
          MediaPipelineId: ""
          MediaPipelineArn: ""
          Sources: ""
      properties:
        MediaConcatenationPipeline:
          $ref: '#/components/schemas/CreateMediaConcatenationPipelineResponse_MediaConcatenationPipeline'
      title: CreateMediaConcatenationPipelineResponse
      type: object
    ConcatenationSource:
      description: The source type and media pipeline configuration settings in a
        configuration object.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSourceType'
          - description: The type of concatenation source in a configuration object.
          title: Type
        MediaCapturePipelineSourceConfiguration:
          $ref: '#/components/schemas/ConcatenationSource_MediaCapturePipelineSourceConfiguration'
      required:
      - MediaCapturePipelineSourceConfiguration
      - Type
      title: ConcatenationSource
      type: object
    ConcatenationSink:
      description: The data sink of the configuration object.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSinkType'
          - description: The type of data sink in the configuration object.
          title: Type
        S3BucketSinkConfiguration:
          $ref: '#/components/schemas/ConcatenationSink_S3BucketSinkConfiguration'
      required:
      - S3BucketSinkConfiguration
      - Type
      title: ConcatenationSink
      type: object
    CreateMediaInsightsPipelineResponse:
      example:
        MediaInsightsPipeline:
          Status: ""
          KinesisVideoStreamSourceRuntimeConfiguration:
            MediaSampleRate: ""
            MediaEncoding: ""
            Streams: ""
          CreatedTimestamp: ""
          MediaPipelineId: ""
          S3RecordingSinkRuntimeConfiguration:
            Destination: ""
            RecordingFileFormat: ""
          MediaInsightsRuntimeMetadata: ""
          MediaPipelineArn: ""
          KinesisVideoStreamRecordingSourceRuntimeConfiguration:
            FragmentSelector:
              FragmentSelectorType: ""
              TimestampRange:
                StartTimestamp: ""
                EndTimestamp: ""
            Streams: ""
          MediaInsightsPipelineConfigurationArn: ""
      properties:
        MediaInsightsPipeline:
          $ref: '#/components/schemas/CreateMediaInsightsPipelineResponse_MediaInsightsPipeline'
      required:
      - MediaInsightsPipeline
      title: CreateMediaInsightsPipelineResponse
      type: object
    Streams:
      items:
        $ref: '#/components/schemas/StreamConfiguration'
      maxItems: 2
      minItems: 1
      type: array
    MediaEncoding:
      enum:
      - pcm
      title: MediaEncoding
      type: string
    MediaSampleRateHertz:
      maximum: 48000
      minimum: 8000
      type: integer
    String:
      maxLength: 4096
      pattern: .*
      title: String
      type: string
    RecordingStreamList:
      items:
        $ref: '#/components/schemas/RecordingStreamConfiguration'
      maxItems: 2
      minItems: 2
      type: array
    FragmentSelector:
      description: "<p>Describes the timestamp range and timestamp origin of a range\
        \ of fragments.</p> <p>Only fragments with a start timestamp greater than\
        \ or equal to the given start time and less than or equal to the end time\
        \ are returned. For example, say a stream contains fragments with the following\
        \ start timestamps:</p> <ul> <li> <p>00:00:00</p> </li> <li> <p>00:00:02</p>\
        \ </li> <li> <p>00:00:04</p> </li> <li> <p>00:00:06</p> </li> </ul> <p>A fragment\
        \ selector range with a start time of 00:00:01 and end time of 00:00:04 would\
        \ return the fragments with start times of 00:00:02 and 00:00:04.</p>"
      properties:
        FragmentSelectorType:
          allOf:
          - $ref: '#/components/schemas/FragmentSelectorType'
          - description: "The origin of the timestamps to use, <code>Server</code>\
              \ or <code>Producer</code>. For more information, see <a href=\"kinesisvideostreams/latest/dg/API_dataplane_StartSelector.html#KinesisVideo-Type-dataplane_StartSelector-StartSelectorType\"\
              >StartSelectorType</a> in the <i>Amazon Kinesis Video Streams Developer\
              \ Guide</i>."
          title: FragmentSelectorType
        TimestampRange:
          $ref: '#/components/schemas/FragmentSelector_TimestampRange'
      required:
      - FragmentSelectorType
      - TimestampRange
      title: FragmentSelector
      type: object
    Arn:
      format: password
      maxLength: 1024
      minLength: 1
      pattern: "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$"
      type: string
    RecordingFileFormat:
      enum:
      - Wav
      - Opus
      title: RecordingFileFormat
      type: string
    NotFoundException: {}
    CreateMediaInsightsPipelineConfigurationResponse:
      example:
        MediaInsightsPipelineConfiguration:
          RealTimeAlertConfiguration:
            Disabled: ""
            Rules: ""
          MediaInsightsPipelineConfigurationId: ""
          UpdatedTimestamp: ""
          ResourceAccessRoleArn: ""
          CreatedTimestamp: ""
          Elements: ""
          MediaInsightsPipelineConfigurationName: ""
          MediaInsightsPipelineConfigurationArn: ""
      properties:
        MediaInsightsPipelineConfiguration:
          $ref: '#/components/schemas/CreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration'
      title: CreateMediaInsightsPipelineConfigurationResponse
      type: object
    Boolean:
      type: boolean
    RealTimeAlertRuleList:
      items:
        $ref: '#/components/schemas/RealTimeAlertRule'
      maxItems: 3
      minItems: 1
      type: array
    MediaInsightsPipelineConfigurationElement:
      description: An element in a media insights pipeline configuration.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElementType'
          - description: The element type.
          title: Type
        AmazonTranscribeCallAnalyticsProcessorConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration'
        AmazonTranscribeProcessorConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration'
        KinesisDataStreamSinkConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement_KinesisDataStreamSinkConfiguration'
        S3RecordingSinkConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement_S3RecordingSinkConfiguration'
        VoiceAnalyticsProcessorConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement_VoiceAnalyticsProcessorConfiguration'
        LambdaFunctionSinkConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement_LambdaFunctionSinkConfiguration'
        SqsQueueSinkConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement_SqsQueueSinkConfiguration'
        SnsTopicSinkConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement_SnsTopicSinkConfiguration'
      required:
      - Type
      title: MediaInsightsPipelineConfigurationElement
      type: object
    CreateMediaLiveConnectorPipelineResponse:
      example:
        MediaLiveConnectorPipeline:
          Status: ""
          UpdatedTimestamp: ""
          Sinks: ""
          CreatedTimestamp: ""
          MediaPipelineId: ""
          Sources: ""
          MediaPipelineArn: ""
      properties:
        MediaLiveConnectorPipeline:
          $ref: '#/components/schemas/CreateMediaLiveConnectorPipelineResponse_MediaLiveConnectorPipeline'
      title: CreateMediaLiveConnectorPipelineResponse
      type: object
    LiveConnectorSourceConfiguration:
      description: The data source configuration object of a streaming media pipeline.
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSourceType'
          - description: The source configuration's media source type.
          title: SourceType
        ChimeSdkMeetingLiveConnectorConfiguration:
          $ref: '#/components/schemas/LiveConnectorSourceConfiguration_ChimeSdkMeetingLiveConnectorConfiguration'
      required:
      - ChimeSdkMeetingLiveConnectorConfiguration
      - SourceType
      title: LiveConnectorSourceConfiguration
      type: object
    LiveConnectorSinkConfiguration:
      description: The media pipeline's sink configuration settings.
      properties:
        SinkType:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSinkType'
          - description: The sink configuration's sink type.
          title: SinkType
        RTMPConfiguration:
          $ref: '#/components/schemas/LiveConnectorSinkConfiguration_RTMPConfiguration'
      required:
      - RTMPConfiguration
      - SinkType
      title: LiveConnectorSinkConfiguration
      type: object
    ConflictException: {}
    GetMediaCapturePipelineResponse:
      example:
        MediaCapturePipeline:
          Status: ""
          UpdatedTimestamp: ""
          CreatedTimestamp: ""
          SourceArn: ""
          ChimeSdkMeetingConfiguration:
            SourceConfiguration:
              SelectedVideoStreams:
                ExternalUserIds: ""
                AttendeeIds: ""
            ArtifactsConfiguration:
              Video:
                MuxType: ""
                State: ""
              Content:
                MuxType: ""
                State: ""
              Audio:
                MuxType: ""
              CompositedVideo:
                Layout: ""
                GridViewConfiguration:
                  ContentShareLayout: ""
                  PresenterOnlyConfiguration:
                    PresenterPosition: ""
                  VideoAttribute:
                    CornerRadius: ""
                    BorderThickness: ""
                    BorderColor: ""
                    HighlightColor: ""
                  HorizontalLayoutConfiguration:
                    TileAspectRatio: ""
                    TilePosition: ""
                    TileOrder: ""
                    TileCount: ""
                  CanvasOrientation: ""
                  ActiveSpeakerOnlyConfiguration:
                    ActiveSpeakerPosition: ""
                  VerticalLayoutConfiguration:
                    TileAspectRatio: ""
                    TilePosition: ""
                    TileOrder: ""
                    TileCount: ""
                Resolution: ""
          MediaPipelineId: ""
          SourceType: ""
          SinkArn: ""
          MediaPipelineArn: ""
          SinkType: ""
      properties:
        MediaCapturePipeline:
          $ref: '#/components/schemas/GetMediaCapturePipelineResponse_MediaCapturePipeline'
      title: GetMediaCapturePipelineResponse
      type: object
    GetMediaInsightsPipelineConfigurationResponse:
      example:
        MediaInsightsPipelineConfiguration:
          RealTimeAlertConfiguration:
            Disabled: ""
            Rules: ""
          MediaInsightsPipelineConfigurationId: ""
          UpdatedTimestamp: ""
          ResourceAccessRoleArn: ""
          CreatedTimestamp: ""
          Elements: ""
          MediaInsightsPipelineConfigurationName: ""
          MediaInsightsPipelineConfigurationArn: ""
      properties:
        MediaInsightsPipelineConfiguration:
          $ref: '#/components/schemas/GetMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration'
      title: GetMediaInsightsPipelineConfigurationResponse
      type: object
    GetMediaPipelineResponse:
      example:
        MediaPipeline:
          MediaConcatenationPipeline:
            Status: ""
            UpdatedTimestamp: ""
            Sinks: ""
            CreatedTimestamp: ""
            MediaPipelineId: ""
            MediaPipelineArn: ""
            Sources: ""
          MediaCapturePipeline:
            Status: ""
            UpdatedTimestamp: ""
            CreatedTimestamp: ""
            SourceArn: ""
            ChimeSdkMeetingConfiguration:
              SourceConfiguration:
                SelectedVideoStreams:
                  ExternalUserIds: ""
                  AttendeeIds: ""
              ArtifactsConfiguration:
                Video:
                  MuxType: ""
                  State: ""
                Content:
                  MuxType: ""
                  State: ""
                Audio:
                  MuxType: ""
                CompositedVideo:
                  Layout: ""
                  GridViewConfiguration:
                    ContentShareLayout: ""
                    PresenterOnlyConfiguration:
                      PresenterPosition: ""
                    VideoAttribute:
                      CornerRadius: ""
                      BorderThickness: ""
                      BorderColor: ""
                      HighlightColor: ""
                    HorizontalLayoutConfiguration:
                      TileAspectRatio: ""
                      TilePosition: ""
                      TileOrder: ""
                      TileCount: ""
                    CanvasOrientation: ""
                    ActiveSpeakerOnlyConfiguration:
                      ActiveSpeakerPosition: ""
                    VerticalLayoutConfiguration:
                      TileAspectRatio: ""
                      TilePosition: ""
                      TileOrder: ""
                      TileCount: ""
                  Resolution: ""
            MediaPipelineId: ""
            SourceType: ""
            SinkArn: ""
            MediaPipelineArn: ""
            SinkType: ""
          MediaLiveConnectorPipeline:
            Status: ""
            UpdatedTimestamp: ""
            Sinks: ""
            CreatedTimestamp: ""
            MediaPipelineId: ""
            Sources: ""
            MediaPipelineArn: ""
          MediaInsightsPipeline:
            Status: ""
            KinesisVideoStreamSourceRuntimeConfiguration:
              MediaSampleRate: ""
              MediaEncoding: ""
              Streams: ""
            CreatedTimestamp: ""
            MediaPipelineId: ""
            S3RecordingSinkRuntimeConfiguration:
              Destination: ""
              RecordingFileFormat: ""
            MediaInsightsRuntimeMetadata: ""
            MediaPipelineArn: ""
            KinesisVideoStreamRecordingSourceRuntimeConfiguration:
              FragmentSelector:
                FragmentSelectorType: ""
                TimestampRange:
                  StartTimestamp: ""
                  EndTimestamp: ""
              Streams: ""
            MediaInsightsPipelineConfigurationArn: ""
      properties:
        MediaPipeline:
          $ref: '#/components/schemas/GetMediaPipelineResponse_MediaPipeline'
      title: GetMediaPipelineResponse
      type: object
    ListMediaCapturePipelinesResponse:
      example:
        NextToken: ""
        MediaCapturePipelines: ""
      properties:
        MediaCapturePipelines:
          allOf:
          - $ref: '#/components/schemas/MediaCapturePipelineSummaryList'
          - description: The media pipeline objects in the list.
          title: MediaCapturePipelines
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The token used to retrieve the next page of results. '
          title: NextToken
      title: ListMediaCapturePipelinesResponse
      type: object
    ListMediaInsightsPipelineConfigurationsResponse:
      example:
        NextToken: ""
        MediaInsightsPipelineConfigurations: ""
      properties:
        MediaInsightsPipelineConfigurations:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationSummaryList'
          - description: The requested list of media insights pipeline configurations.
          title: MediaInsightsPipelineConfigurations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The token used to return the next page of results. '
          title: NextToken
      title: ListMediaInsightsPipelineConfigurationsResponse
      type: object
    ListMediaPipelinesResponse:
      example:
        NextToken: ""
        MediaPipelines: ""
      properties:
        MediaPipelines:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineList'
          - description: The media pipeline objects in the list.
          title: MediaPipelines
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The token used to retrieve the next page of results. '
          title: NextToken
      title: ListMediaPipelinesResponse
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags associated with the specified media pipeline.
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    UpdateMediaInsightsPipelineConfigurationResponse:
      example:
        MediaInsightsPipelineConfiguration:
          RealTimeAlertConfiguration:
            Disabled: ""
            Rules: ""
          MediaInsightsPipelineConfigurationId: ""
          UpdatedTimestamp: ""
          ResourceAccessRoleArn: ""
          CreatedTimestamp: ""
          Elements: ""
          MediaInsightsPipelineConfigurationName: ""
          MediaInsightsPipelineConfigurationArn: ""
      properties:
        MediaInsightsPipelineConfiguration:
          $ref: '#/components/schemas/UpdateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration'
      title: UpdateMediaInsightsPipelineConfigurationResponse
      type: object
    ActiveSpeakerPosition:
      enum:
      - TopLeft
      - TopRight
      - BottomLeft
      - BottomRight
      title: ActiveSpeakerPosition
      type: string
    ActiveSpeakerOnlyConfiguration:
      description: Defines the configuration for an <code>ActiveSpeakerOnly</code>
        video tile.
      properties:
        ActiveSpeakerPosition:
          allOf:
          - $ref: '#/components/schemas/ActiveSpeakerPosition'
          - description: The position of the <code>ActiveSpeakerOnly</code> video
              tile.
          title: ActiveSpeakerPosition
      title: ActiveSpeakerOnlyConfiguration
      type: object
    AmazonResourceName:
      maxLength: 1011
      minLength: 1
      pattern: "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$"
      type: string
    CallAnalyticsLanguageCode:
      enum:
      - en-US
      - en-GB
      - es-US
      - fr-CA
      - fr-FR
      - en-AU
      - it-IT
      - de-DE
      - pt-BR
      title: CallAnalyticsLanguageCode
      type: string
    VocabularyName:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z._-]+"
      type: string
    VocabularyFilterName:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z._-]+"
      type: string
    VocabularyFilterMethod:
      enum:
      - remove
      - mask
      - tag
      title: VocabularyFilterMethod
      type: string
    ModelName:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z._-]+"
      type: string
    PartialResultsStability:
      enum:
      - high
      - medium
      - low
      title: PartialResultsStability
      type: string
    ContentType:
      enum:
      - PII
      title: ContentType
      type: string
    PiiEntityTypes:
      maxLength: 300
      minLength: 1
      pattern: "^[A-Z_, ]+"
      type: string
    PostCallAnalyticsSettings:
      description: "<p>Allows you to specify additional settings for your Call Analytics\
        \ post-call request, including output locations for your redacted transcript,\
        \ which IAM role to use, and which encryption key to use.</p> <p> <code>DataAccessRoleArn</code>\
        \ and <code>OutputLocation</code> are required fields.</p> <p> <code>PostCallAnalyticsSettings</code>\
        \ provides the same insights as a Call Analytics post-call transcription.\
        \ For more information, refer to <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/tca-post-call.html\"\
        >Post-call analytics with real-time transcriptions</a> in the <i>Amazon Transcribe\
        \ Developer Guide</i>.</p>"
      properties:
        OutputLocation:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The URL of the Amazon S3 bucket that contains the post-call
              data.
          title: OutputLocation
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ARN of the role used by Amazon Web Services Transcribe\
              \ to upload your post call analysis. For more information, see <a href=\"\
              https://docs.aws.amazon.com/transcribe/latest/dg/tca-post-call.html\"\
              >Post-call analytics with real-time transcriptions</a> in the <i>Amazon\
              \ Transcribe Developer Guide</i>."
          title: DataAccessRoleArn
        ContentRedactionOutput:
          allOf:
          - $ref: '#/components/schemas/ContentRedactionOutput'
          - description: The content redaction output settings for a post-call analysis
              task.
          title: ContentRedactionOutput
        OutputEncryptionKMSKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the KMS (Key Management Service) key used to encrypt
              the output.
          title: OutputEncryptionKMSKeyId
      required:
      - DataAccessRoleArn
      - OutputLocation
      title: PostCallAnalyticsSettings
      type: object
    CategoryNameList:
      items:
        $ref: '#/components/schemas/CategoryName'
      maxItems: 20
      minItems: 1
      type: array
    AmazonTranscribeCallAnalyticsProcessorConfiguration:
      description: A structure that contains the configuration settings for an Amazon
        Transcribe call analytics processor.
      properties:
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/CallAnalyticsLanguageCode'
          - description: The language code in the configuration.
          title: LanguageCode
        VocabularyName:
          allOf:
          - $ref: '#/components/schemas/VocabularyName'
          - description: "<p>Specifies the name of the custom vocabulary to use when\
              \ processing a transcription. Note that vocabulary names are case sensitive.</p>\
              \ <p>If the language of the specified custom vocabulary doesn't match\
              \ the language identified in your media, the custom vocabulary is not\
              \ applied to your transcription.</p> <p>For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html\"\
              >Custom vocabularies</a> in the <i>Amazon Transcribe Developer Guide</i>.</p>\
              \ <p>Length Constraints: Minimum length of 1. Maximum length of 200.\
              \ </p>"
          title: VocabularyName
        VocabularyFilterName:
          allOf:
          - $ref: '#/components/schemas/VocabularyFilterName'
          - description: "<p>Specifies the name of the custom vocabulary filter to\
              \ use when processing a transcription. Note that vocabulary filter names\
              \ are case sensitive.</p> <p>If the language of the specified custom\
              \ vocabulary filter doesn't match the language identified in your media,\
              \ the vocabulary filter is not applied to your transcription.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/vocabulary-filtering.html\"\
              >Using vocabulary filtering with unwanted words</a> in the <i>Amazon\
              \ Transcribe Developer Guide</i>.</p> <p>Length Constraints: Minimum\
              \ length of 1. Maximum length of 200. </p>"
          title: VocabularyFilterName
        VocabularyFilterMethod:
          allOf:
          - $ref: '#/components/schemas/VocabularyFilterMethod'
          - description: "<p>Specifies how to apply a vocabulary filter to a transcript.</p>\
              \ <p>To replace words with <b>***</b>, choose <code>mask</code>.</p>\
              \ <p>To delete words, choose <code>remove</code>.</p> <p>To flag words\
              \ without changing them, choose <code>tag</code>. </p>"
          title: VocabularyFilterMethod
        LanguageModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: "<p>Specifies the name of the custom language model to use\
              \ when processing a transcription. Note that language model names are\
              \ case sensitive.</p> <p>The language of the specified language model\
              \ must match the language code specified in the transcription request.\
              \ If the languages don't match, the custom language model isn't applied.\
              \ Language mismatches don't generate errors or warnings.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/custom-language-models.html\"\
              >Custom language models</a> in the <i>Amazon Transcribe Developer Guide</i>.</p>"
          title: LanguageModelName
        EnablePartialResultsStabilization:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Enables partial result stabilization for your transcription.\
              \ Partial result stabilization can reduce latency in your output, but\
              \ may impact accuracy. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/streaming.html#streaming-partial-result-stabilization\"\
              >Partial-result stabilization</a> in the <i>Amazon Transcribe Developer\
              \ Guide</i>."
          title: EnablePartialResultsStabilization
        PartialResultsStability:
          allOf:
          - $ref: '#/components/schemas/PartialResultsStability'
          - description: "<p>Specifies the level of stability to use when you enable\
              \ partial results stabilization (<code>EnablePartialResultsStabilization</code>).</p>\
              \ <p>Low stability provides the highest accuracy. High stability transcribes\
              \ faster, but with slightly lower accuracy.</p> <p>For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/streaming.html#streaming-partial-result-stabilization\"\
              >Partial-result stabilization</a> in the <i>Amazon Transcribe Developer\
              \ Guide</i>.</p>"
          title: PartialResultsStability
        ContentIdentificationType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "<p>Labels all personally identifiable information (PII)\
              \ identified in your transcript.</p> <p>Content identification is performed\
              \ at the segment level; PII specified in <code>PiiEntityTypes</code>\
              \ is flagged upon complete transcription of an audio segment.</p> <p>You\
              \ can’t set <code>ContentIdentificationType</code> and <code>ContentRedactionType</code>\
              \ in the same request. If you do, your request returns a <code>BadRequestException</code>.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/pii-redaction.html\"\
              >Redacting or identifying personally identifiable information</a> in\
              \ the <i>Amazon Transcribe Developer Guide</i>.</p>"
          title: ContentIdentificationType
        ContentRedactionType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "<p>Redacts all personally identifiable information (PII)\
              \ identified in your transcript.</p> <p>Content redaction is performed\
              \ at the segment level; PII specified in <code>PiiEntityTypes</code>\
              \ is redacted upon complete transcription of an audio segment.</p> <p>You\
              \ can’t set <code>ContentRedactionType</code> and <code>ContentIdentificationType</code>\
              \ in the same request. If you do, your request returns a <code>BadRequestException</code>.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/pii-redaction.html\"\
              >Redacting or identifying personally identifiable information</a> in\
              \ the <i>Amazon Transcribe Developer Guide</i>.</p>"
          title: ContentRedactionType
        PiiEntityTypes:
          allOf:
          - $ref: '#/components/schemas/PiiEntityTypes'
          - description: "<p>Specifies the types of personally identifiable information\
              \ (PII) to redact from a transcript. You can include as many types as\
              \ you'd like, or you can select <code>ALL</code>.</p> <p>To include\
              \ <code>PiiEntityTypes</code> in your Call Analytics request, you must\
              \ also include <code>ContentIdentificationType</code> or <code>ContentRedactionType</code>,\
              \ but you can't include both. </p> <p>Values must be comma-separated\
              \ and can include: <code>ADDRESS</code>, <code>BANK_ACCOUNT_NUMBER</code>,\
              \ <code>BANK_ROUTING</code>, <code>CREDIT_DEBIT_CVV</code>, <code>CREDIT_DEBIT_EXPIRY</code>,\
              \ <code>CREDIT_DEBIT_NUMBER</code>, <code>EMAIL</code>, <code>NAME</code>,\
              \ <code>PHONE</code>, <code>PIN</code>, <code>SSN</code>, or <code>ALL</code>.</p>\
              \ <p>Length Constraints: Minimum length of 1. Maximum length of 300.</p>"
          title: PiiEntityTypes
        FilterPartialResults:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If true, <code>UtteranceEvents</code> with <code>IsPartial:\
              \ true</code> are filtered out of the insights target."
          title: FilterPartialResults
        PostCallAnalyticsSettings:
          $ref: '#/components/schemas/AmazonTranscribeCallAnalyticsProcessorConfiguration_PostCallAnalyticsSettings'
        CallAnalyticsStreamCategories:
          allOf:
          - $ref: '#/components/schemas/CategoryNameList'
          - description: "By default, all <code>CategoryEvents</code> are sent to\
              \ the insights target. If this parameter is specified, only included\
              \ categories are sent to the insights target. "
          title: CallAnalyticsStreamCategories
      required:
      - LanguageCode
      title: AmazonTranscribeCallAnalyticsProcessorConfiguration
      type: object
    LanguageOptions:
      maxLength: 200
      minLength: 1
      pattern: "^[a-zA-Z-,]+"
      type: string
    VocabularyNames:
      maxLength: 3000
      minLength: 1
      pattern: "^[a-zA-Z0-9,-._]+"
      type: string
    VocabularyFilterNames:
      maxLength: 3000
      minLength: 1
      pattern: "^[a-zA-Z0-9,-._]+"
      type: string
    AmazonTranscribeProcessorConfiguration:
      description: A structure that contains the configuration settings for an Amazon
        Transcribe processor.
      properties:
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/CallAnalyticsLanguageCode'
          - description: "<p>The language code that represents the language spoken\
              \ in your audio.</p> <p>If you're unsure of the language spoken in your\
              \ audio, consider using <code>IdentifyLanguage</code> to enable automatic\
              \ language identification.</p> <p>For a list of languages that real-time\
              \ Call Analytics supports, see the <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html\"\
              >Supported languages table</a> in the <i>Amazon Transcribe Developer\
              \ Guide</i>.</p>"
          title: LanguageCode
        VocabularyName:
          allOf:
          - $ref: '#/components/schemas/VocabularyName'
          - description: "<p>The name of the custom vocabulary that you specified\
              \ in your Call Analytics request.</p> <p>Length Constraints: Minimum\
              \ length of 1. Maximum length of 200.</p>"
          title: VocabularyName
        VocabularyFilterName:
          allOf:
          - $ref: '#/components/schemas/VocabularyFilterName'
          - description: "<p>The name of the custom vocabulary filter that you specified\
              \ in your Call Analytics request.</p> <p>Length Constraints: Minimum\
              \ length of 1. Maximum length of 200.</p>"
          title: VocabularyFilterName
        VocabularyFilterMethod:
          allOf:
          - $ref: '#/components/schemas/VocabularyFilterMethod'
          - description: The vocabulary filtering method used in your Call Analytics
              transcription.
          title: VocabularyFilterMethod
        ShowSpeakerLabel:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Enables speaker partitioning (diarization) in your transcription\
              \ output. Speaker partitioning labels the speech from individual speakers\
              \ in your media file.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/diarization.html\"\
              >Partitioning speakers (diarization)</a> in the <i>Amazon Transcribe\
              \ Developer Guide</i>.</p>"
          title: ShowSpeakerLabel
        EnablePartialResultsStabilization:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Enables partial result stabilization for your transcription.\
              \ Partial result stabilization can reduce latency in your output, but\
              \ may impact accuracy.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/streaming.html#streaming-partial-result-stabilization\"\
              >Partial-result stabilization</a> in the <i>Amazon Transcribe Developer\
              \ Guide</i>.</p>"
          title: EnablePartialResultsStabilization
        PartialResultsStability:
          allOf:
          - $ref: '#/components/schemas/PartialResultsStability'
          - description: "<p>The level of stability to use when you enable partial\
              \ results stabilization (<code>EnablePartialResultsStabilization</code>).</p>\
              \ <p>Low stability provides the highest accuracy. High stability transcribes\
              \ faster, but with slightly lower accuracy.</p> <p>For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/streaming.html#streaming-partial-result-stabilization\"\
              >Partial-result stabilization</a> in the <i>Amazon Transcribe Developer\
              \ Guide</i>.</p>"
          title: PartialResultsStability
        ContentIdentificationType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "<p>Labels all personally identifiable information (PII)\
              \ identified in your transcript.</p> <p>Content identification is performed\
              \ at the segment level; PII specified in <code>PiiEntityTypes</code>\
              \ is flagged upon complete transcription of an audio segment.</p> <p>You\
              \ can’t set <code>ContentIdentificationType</code> and <code>ContentRedactionType</code>\
              \ in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/pii-redaction.html\"\
              >Redacting or identifying personally identifiable information</a> in\
              \ the <i>Amazon Transcribe Developer Guide</i>.</p>"
          title: ContentIdentificationType
        ContentRedactionType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "<p>Redacts all personally identifiable information (PII)\
              \ identified in your transcript.</p> <p>Content redaction is performed\
              \ at the segment level; PII specified in PiiEntityTypes is redacted\
              \ upon complete transcription of an audio segment.</p> <p>You can’t\
              \ set ContentRedactionType and ContentIdentificationType in the same\
              \ request. If you set both, your request returns a <code>BadRequestException</code>.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/pii-redaction.html\"\
              >Redacting or identifying personally identifiable information</a> in\
              \ the <i>Amazon Transcribe Developer Guide</i>.</p>"
          title: ContentRedactionType
        PiiEntityTypes:
          allOf:
          - $ref: '#/components/schemas/PiiEntityTypes'
          - description: "<p>The types of personally identifiable information (PII)\
              \ to redact from a transcript. You can include as many types as you'd\
              \ like, or you can select <code>ALL</code>.</p> <p>To include <code>PiiEntityTypes</code>\
              \ in your Call Analytics request, you must also include <code>ContentIdentificationType</code>\
              \ or <code>ContentRedactionType</code>, but you can't include both.</p>\
              \ <p>Values must be comma-separated and can include: <code>ADDRESS</code>,\
              \ <code>BANK_ACCOUNT_NUMBER</code>, <code>BANK_ROUTING</code>, <code>CREDIT_DEBIT_CVV</code>,\
              \ <code>CREDIT_DEBIT_EXPIRY</code>, <code>CREDIT_DEBIT_NUMBER</code>,\
              \ <code>EMAIL</code>, <code>NAME</code>, <code>PHONE</code>, <code>PIN</code>,\
              \ <code>SSN</code>, or <code>ALL</code>.</p> <p>If you leave this parameter\
              \ empty, the default behavior is equivalent to <code>ALL</code>.</p>"
          title: PiiEntityTypes
        LanguageModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: "<p>The name of the custom language model that you want to\
              \ use when processing your transcription. Note that language model names\
              \ are case sensitive.</p> <p>The language of the specified language\
              \ model must match the language code you specify in your transcription\
              \ request. If the languages don't match, the custom language model isn't\
              \ applied. There are no errors or warnings associated with a language\
              \ mismatch.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/custom-language-models.html\"\
              >Custom language models</a> in the <i>Amazon Transcribe Developer Guide</i>.</p>"
          title: LanguageModelName
        FilterPartialResults:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If true, <code>TranscriptEvents</code> with <code>IsPartial:\
              \ true</code> are filtered out of the insights target."
          title: FilterPartialResults
        IdentifyLanguage:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Turns language identification on or off.
          title: IdentifyLanguage
        LanguageOptions:
          allOf:
          - $ref: '#/components/schemas/LanguageOptions'
          - description: "The language options for the transcription, such as automatic\
              \ language detection."
          title: LanguageOptions
        PreferredLanguage:
          allOf:
          - $ref: '#/components/schemas/CallAnalyticsLanguageCode'
          - description: The preferred language for the transcription.
          title: PreferredLanguage
        VocabularyNames:
          allOf:
          - $ref: '#/components/schemas/VocabularyNames'
          - description: The names of the custom vocabulary or vocabularies used during
              transcription.
          title: VocabularyNames
        VocabularyFilterNames:
          allOf:
          - $ref: '#/components/schemas/VocabularyFilterNames'
          - description: The names of the custom vocabulary filter or filters using
              during transcription.
          title: VocabularyFilterNames
      title: AmazonTranscribeProcessorConfiguration
      type: object
    AudioConcatenationConfiguration:
      description: The audio artifact concatenation configuration object.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/AudioArtifactsConcatenationState'
          - description: Enables or disables the configuration object.
          title: State
      required:
      - State
      title: AudioConcatenationConfiguration
      type: object
    VideoConcatenationConfiguration:
      description: The configuration object of a video concatenation pipeline.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          - description: Enables or disables the configuration object.
          title: State
      required:
      - State
      title: VideoConcatenationConfiguration
      type: object
    ContentConcatenationConfiguration:
      description: 'The composited content configuration object for a specified media
        pipeline. '
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          - description: Enables or disables the configuration object.
          title: State
      required:
      - State
      title: ContentConcatenationConfiguration
      type: object
    DataChannelConcatenationConfiguration:
      description: The content configuration object's data channel.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          - description: Enables or disables the configuration object.
          title: State
      required:
      - State
      title: DataChannelConcatenationConfiguration
      type: object
    TranscriptionMessagesConcatenationConfiguration:
      description: The configuration object for concatenating transcription messages.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          - description: Enables or disables the configuration object.
          title: State
      required:
      - State
      title: TranscriptionMessagesConcatenationConfiguration
      type: object
    MeetingEventsConcatenationConfiguration:
      description: The configuration object for an event concatenation pipeline.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          - description: Enables or disables the configuration object.
          title: State
      required:
      - State
      title: MeetingEventsConcatenationConfiguration
      type: object
    CompositedVideoConcatenationConfiguration:
      description: The composited video configuration object for a specified media
        pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          - description: Enables or disables the configuration object.
          title: State
      required:
      - State
      title: CompositedVideoConcatenationConfiguration
      type: object
    ArtifactsConcatenationConfiguration:
      description: The configuration for the artifacts concatenation.
      properties:
        Audio:
          $ref: '#/components/schemas/ArtifactsConcatenationConfiguration_Audio'
        Video:
          $ref: '#/components/schemas/ArtifactsConcatenationConfiguration_Video'
        Content:
          $ref: '#/components/schemas/ArtifactsConcatenationConfiguration_Content'
        DataChannel:
          $ref: '#/components/schemas/ArtifactsConcatenationConfiguration_DataChannel'
        TranscriptionMessages:
          $ref: '#/components/schemas/ArtifactsConcatenationConfiguration_TranscriptionMessages'
        MeetingEvents:
          $ref: '#/components/schemas/ArtifactsConcatenationConfiguration_MeetingEvents'
        CompositedVideo:
          $ref: '#/components/schemas/ArtifactsConcatenationConfiguration_CompositedVideo'
      required:
      - Audio
      - CompositedVideo
      - Content
      - DataChannel
      - MeetingEvents
      - TranscriptionMessages
      - Video
      title: ArtifactsConcatenationConfiguration
      type: object
    ArtifactsConcatenationState:
      enum:
      - Enabled
      - Disabled
      title: ArtifactsConcatenationState
      type: string
    AudioArtifactsConfiguration:
      description: The audio artifact configuration object.
      properties:
        MuxType:
          allOf:
          - $ref: '#/components/schemas/AudioMuxType'
          - description: The MUX type of the audio artifact configuration object.
          title: MuxType
      required:
      - MuxType
      title: AudioArtifactsConfiguration
      type: object
    VideoArtifactsConfiguration:
      description: The video artifact configuration object.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsState'
          - description: Indicates whether the video artifact is enabled or disabled.
          title: State
        MuxType:
          allOf:
          - $ref: '#/components/schemas/VideoMuxType'
          - description: The MUX type of the video artifact configuration object.
          title: MuxType
      required:
      - State
      title: VideoArtifactsConfiguration
      type: object
    ContentArtifactsConfiguration:
      description: The content artifact object.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsState'
          - description: Indicates whether the content artifact is enabled or disabled.
          title: State
        MuxType:
          allOf:
          - $ref: '#/components/schemas/ContentMuxType'
          - description: The MUX type of the artifact configuration.
          title: MuxType
      required:
      - State
      title: ContentArtifactsConfiguration
      type: object
    CompositedVideoArtifactsConfiguration:
      description: Specifies the configuration for compositing video artifacts.
      properties:
        Layout:
          allOf:
          - $ref: '#/components/schemas/LayoutOption'
          - description: "The layout setting, such as <code>GridView</code> in the\
              \ configuration object."
          title: Layout
        Resolution:
          allOf:
          - $ref: '#/components/schemas/ResolutionOption'
          - description: "The video resolution setting in the configuration object.\
              \ Default: HD at 1280 x 720. FHD resolution: 1920 x 1080."
          title: Resolution
        GridViewConfiguration:
          $ref: '#/components/schemas/CompositedVideoArtifactsConfiguration_GridViewConfiguration'
      required:
      - GridViewConfiguration
      title: CompositedVideoArtifactsConfiguration
      type: object
    ArtifactsState:
      enum:
      - Enabled
      - Disabled
      title: ArtifactsState
      type: string
    GuidString:
      maxLength: 36
      minLength: 36
      pattern: "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
      title: GuidString
      type: string
    AttendeeIdList:
      items:
        $ref: '#/components/schemas/GuidString'
      minItems: 1
      type: array
    AudioArtifactsConcatenationState:
      enum:
      - Enabled
      title: AudioArtifactsConcatenationState
      type: string
    AudioMuxType:
      enum:
      - AudioOnly
      - AudioWithActiveSpeakerVideo
      - AudioWithCompositedVideo
      title: AudioMuxType
      type: string
    AudioChannelsOption:
      enum:
      - Stereo
      - Mono
      title: AudioChannelsOption
      type: string
    AudioSampleRateOption:
      pattern: 44100|48000
      type: string
    BorderColor:
      enum:
      - Black
      - Blue
      - Red
      - Green
      - White
      - Yellow
      title: BorderColor
      type: string
    BorderThickness:
      maximum: 20
      minimum: 1
      type: integer
    CanvasOrientation:
      enum:
      - Landscape
      - Portrait
      title: CanvasOrientation
      type: string
    CategoryName:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z._-]+"
      title: CategoryName
      type: string
    ChannelId:
      maximum: 1
      minimum: 0
      type: integer
    ParticipantRole:
      enum:
      - AGENT
      - CUSTOMER
      title: ParticipantRole
      type: string
    ChannelDefinition:
      description: Defines an audio channel in a Kinesis video stream.
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/ChannelId'
          - description: The channel ID.
          title: ChannelId
        ParticipantRole:
          allOf:
          - $ref: '#/components/schemas/ParticipantRole'
          - description: Specifies whether the audio in a channel belongs to the <code>AGENT</code>
              or <code>CUSTOMER</code>.
          title: ParticipantRole
      required:
      - ChannelId
      title: ChannelDefinition
      type: object
    ChannelDefinitions:
      items:
        $ref: '#/components/schemas/ChannelDefinition'
      maxItems: 2
      minItems: 1
      type: array
    ChimeSdkMeetingConcatenationConfiguration:
      description: The configuration object of the Amazon Chime SDK meeting concatenation
        for a specified media pipeline.
      properties:
        ArtifactsConfiguration:
          $ref: '#/components/schemas/ChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration'
      required:
      - ArtifactsConfiguration
      title: ChimeSdkMeetingConcatenationConfiguration
      type: object
    ChimeSdkMeetingConfiguration:
      description: The configuration object of the Amazon Chime SDK meeting for a
        specified media pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.
      properties:
        SourceConfiguration:
          $ref: '#/components/schemas/CreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_SourceConfiguration'
        ArtifactsConfiguration:
          $ref: '#/components/schemas/CreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_ArtifactsConfiguration'
      title: ChimeSdkMeetingConfiguration
      type: object
    LiveConnectorMuxType:
      enum:
      - AudioWithCompositedVideo
      - AudioWithActiveSpeakerVideo
      title: LiveConnectorMuxType
      type: string
    ChimeSdkMeetingLiveConnectorConfiguration:
      description: The media pipeline's configuration object.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The configuration object's Chime SDK meeting ARN.
          title: Arn
        MuxType:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorMuxType'
          - description: The configuration object's multiplex type.
          title: MuxType
        CompositedVideo:
          $ref: '#/components/schemas/ChimeSdkMeetingLiveConnectorConfiguration_CompositedVideo'
        SourceConfiguration:
          $ref: '#/components/schemas/ChimeSdkMeetingLiveConnectorConfiguration_SourceConfiguration'
      required:
      - Arn
      - MuxType
      title: ChimeSdkMeetingLiveConnectorConfiguration
      type: object
    ClientRequestToken:
      format: password
      maxLength: 64
      minLength: 2
      pattern: "[-_a-zA-Z0-9]*"
      type: string
    LayoutOption:
      enum:
      - GridView
      title: LayoutOption
      type: string
    ResolutionOption:
      enum:
      - HD
      - FHD
      title: ResolutionOption
      type: string
    GridViewConfiguration:
      description: Specifies the type of grid layout.
      properties:
        ContentShareLayout:
          allOf:
          - $ref: '#/components/schemas/ContentShareLayoutOption'
          - description: Defines the layout of the video tiles when content sharing
              is enabled.
          title: ContentShareLayout
        PresenterOnlyConfiguration:
          $ref: '#/components/schemas/GridViewConfiguration_PresenterOnlyConfiguration'
        ActiveSpeakerOnlyConfiguration:
          $ref: '#/components/schemas/GridViewConfiguration_ActiveSpeakerOnlyConfiguration'
        HorizontalLayoutConfiguration:
          $ref: '#/components/schemas/GridViewConfiguration_HorizontalLayoutConfiguration'
        VerticalLayoutConfiguration:
          $ref: '#/components/schemas/GridViewConfiguration_VerticalLayoutConfiguration'
        VideoAttribute:
          $ref: '#/components/schemas/GridViewConfiguration_VideoAttribute'
        CanvasOrientation:
          allOf:
          - $ref: '#/components/schemas/CanvasOrientation'
          - description: "The orientation setting, horizontal or vertical."
          title: CanvasOrientation
      required:
      - ContentShareLayout
      title: GridViewConfiguration
      type: object
    ConcatenationSinkType:
      enum:
      - S3Bucket
      title: ConcatenationSinkType
      type: string
    S3BucketSinkConfiguration:
      description: The configuration settings for the S3 bucket.
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The destination URL of the S3 bucket.
          title: Destination
      required:
      - Destination
      title: S3BucketSinkConfiguration
      type: object
    ConcatenationSinkList:
      items:
        $ref: '#/components/schemas/ConcatenationSink'
      maxItems: 1
      minItems: 1
      type: array
    ConcatenationSourceType:
      enum:
      - MediaCapturePipeline
      title: ConcatenationSourceType
      type: string
    MediaCapturePipelineSourceConfiguration:
      description: The source configuration object of a media capture pipeline.
      properties:
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The media pipeline ARN in the configuration object of a media
              capture pipeline.
          title: MediaPipelineArn
        ChimeSdkMeetingConfiguration:
          $ref: '#/components/schemas/MediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration'
      required:
      - ChimeSdkMeetingConfiguration
      - MediaPipelineArn
      title: MediaCapturePipelineSourceConfiguration
      type: object
    ConcatenationSourceList:
      items:
        $ref: '#/components/schemas/ConcatenationSource'
      maxItems: 1
      minItems: 1
      type: array
    ContentMuxType:
      enum:
      - ContentOnly
      title: ContentMuxType
      type: string
    ContentRedactionOutput:
      enum:
      - redacted
      - redacted_and_unredacted
      title: ContentRedactionOutput
      type: string
    ContentShareLayoutOption:
      enum:
      - PresenterOnly
      - Horizontal
      - Vertical
      - ActiveSpeakerOnly
      title: ContentShareLayoutOption
      type: string
    CornerRadius:
      maximum: 20
      minimum: 1
      type: integer
    MediaPipelineSourceType:
      enum:
      - ChimeSdkMeeting
      title: MediaPipelineSourceType
      type: string
    MediaPipelineSinkType:
      enum:
      - S3Bucket
      title: MediaPipelineSinkType
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 1
      type: array
    CreateMediaCapturePipelineRequest:
      example:
        ClientRequestToken: ""
        SourceArn: ""
        ChimeSdkMeetingConfiguration:
          SourceConfiguration:
            SelectedVideoStreams:
              ExternalUserIds: ""
              AttendeeIds: ""
          ArtifactsConfiguration:
            Video:
              MuxType: ""
              State: ""
            Content:
              MuxType: ""
              State: ""
            Audio:
              MuxType: ""
            CompositedVideo:
              Layout: ""
              GridViewConfiguration:
                ContentShareLayout: ""
                PresenterOnlyConfiguration:
                  PresenterPosition: ""
                VideoAttribute:
                  CornerRadius: ""
                  BorderThickness: ""
                  BorderColor: ""
                  HighlightColor: ""
                HorizontalLayoutConfiguration:
                  TileAspectRatio: ""
                  TilePosition: ""
                  TileOrder: ""
                  TileCount: ""
                CanvasOrientation: ""
                ActiveSpeakerOnlyConfiguration:
                  ActiveSpeakerPosition: ""
                VerticalLayoutConfiguration:
                  TileAspectRatio: ""
                  TilePosition: ""
                  TileOrder: ""
                  TileCount: ""
              Resolution: ""
        SourceType: ""
        SinkArn: ""
        SinkType: ""
        Tags: ""
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineSourceType'
          - description: Source type from which the media artifacts are captured.
              A Chime SDK Meeting is the only supported source.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: ARN of the source from which the media artifacts are captured.
        SinkType:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineSinkType'
          - description: Destination type to which the media artifacts are saved.
              You must use an S3 bucket.
        SinkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the sink type.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The unique identifier for the client request. The token makes
              the API request idempotent. Use a unique token for each media pipeline
              request.
        ChimeSdkMeetingConfiguration:
          $ref: '#/components/schemas/CreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tag key-value pairs.
      required:
      - SinkArn
      - SinkType
      - SourceArn
      - SourceType
      title: CreateMediaCapturePipelineRequest
      type: object
    MediaCapturePipeline:
      description: "A media pipeline object consisting of an ID, source type, source\
        \ ARN, a sink type, a sink ARN, and a configuration object."
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          - description: The ID of a media pipeline.
          title: MediaPipelineId
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the media capture pipeline
          title: MediaPipelineArn
        SourceType:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineSourceType'
          - description: Source type from which media artifacts are saved. You must
              use <code>ChimeMeeting</code>.
          title: SourceType
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: ARN of the source from which the media artifacts are saved.
          title: SourceArn
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineStatus'
          - description: The status of the media pipeline.
          title: Status
        SinkType:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineSinkType'
          - description: Destination type to which the media artifacts are saved.
              You must use an S3 Bucket.
          title: SinkType
        SinkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: ARN of the destination to which the media artifacts are saved.
          title: SinkArn
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          - description: "The time at which the pipeline was created, in ISO 8601\
              \ format."
          title: CreatedTimestamp
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          - description: "The time at which the pipeline was updated, in ISO 8601\
              \ format."
          title: UpdatedTimestamp
        ChimeSdkMeetingConfiguration:
          $ref: '#/components/schemas/CreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration'
      title: MediaCapturePipeline
      type: object
    CreateMediaConcatenationPipelineRequest:
      example:
        ClientRequestToken: ""
        Sinks: ""
        Sources: ""
        Tags: ""
      properties:
        Sources:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSourceList'
          - description: An object that specifies the sources for the media concatenation
              pipeline.
        Sinks:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSinkList'
          - description: An object that specifies the data sinks for the media concatenation
              pipeline.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The unique identifier for the client request. The token makes
              the API request idempotent. Use a unique token for each media concatenation
              pipeline request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags associated with the media concatenation pipeline.
      required:
      - Sinks
      - Sources
      title: CreateMediaConcatenationPipelineRequest
      type: object
    MediaConcatenationPipeline:
      description: Concatenates audio and video data from one or more data streams.
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          - description: The ID of the media pipeline being concatenated.
          title: MediaPipelineId
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the media pipeline that you specify in the <code>SourceConfiguration</code>
              object.
          title: MediaPipelineArn
        Sources:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSourceList'
          - description: The data sources being concatenated.
          title: Sources
        Sinks:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSinkList'
          - description: The data sinks of the concatenation pipeline.
          title: Sinks
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineStatus'
          - description: The status of the concatenation pipeline.
          title: Status
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          - description: The time at which the concatenation pipeline was created.
          title: CreatedTimestamp
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          - description: The time at which the concatenation pipeline was last updated.
          title: UpdatedTimestamp
      title: MediaConcatenationPipeline
      type: object
    MediaInsightsPipelineConfigurationNameString:
      maxLength: 64
      minLength: 2
      pattern: "^[0-9a-zA-Z._-]+"
      type: string
    RealTimeAlertConfiguration:
      description: A structure that contains the configuration settings for real-time
        alerts.
      properties:
        Disabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Turns off real-time alerts.
          title: Disabled
        Rules:
          allOf:
          - $ref: '#/components/schemas/RealTimeAlertRuleList'
          - description: The rules in the alert. Rules specify the words or phrases
              that you want to be notified about.
          title: Rules
      title: RealTimeAlertConfiguration
      type: object
    MediaInsightsPipelineConfigurationElements:
      items:
        $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement'
      type: array
    CreateMediaInsightsPipelineConfigurationRequest:
      example:
        RealTimeAlertConfiguration:
          Disabled: ""
          Rules: ""
        ClientRequestToken: ""
        ResourceAccessRoleArn: ""
        Elements: ""
        MediaInsightsPipelineConfigurationName: ""
        Tags: ""
      properties:
        MediaInsightsPipelineConfigurationName:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationNameString'
          - description: The name of the media insights pipeline configuration.
        ResourceAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN of the role used by the service to access Amazon\
              \ Web Services resources, including <code>Transcribe</code> and <code>Transcribe\
              \ Call Analytics</code>, on the caller’s behalf."
        RealTimeAlertConfiguration:
          $ref: '#/components/schemas/CreateMediaInsightsPipelineConfigurationRequest_RealTimeAlertConfiguration'
        Elements:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElements'
          - description: "The elements in the request, such as a processor for Amazon\
              \ Transcribe or a sink for a Kinesis Data Stream."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags assigned to the media insights pipeline configuration.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The unique identifier for the media insights pipeline configuration
              request.
      required:
      - Elements
      - MediaInsightsPipelineConfigurationName
      - ResourceAccessRoleArn
      title: CreateMediaInsightsPipelineConfigurationRequest
      type: object
    MediaInsightsPipelineConfiguration:
      description: A structure that contains the configuration settings for a media
        insights pipeline.
      properties:
        MediaInsightsPipelineConfigurationName:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationNameString'
          - description: The name of the configuration.
          title: MediaInsightsPipelineConfigurationName
        MediaInsightsPipelineConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the configuration.
          title: MediaInsightsPipelineConfigurationArn
        ResourceAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the role used by the service to access Amazon
              Web Services resources.
          title: ResourceAccessRoleArn
        RealTimeAlertConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipelineConfiguration_RealTimeAlertConfiguration'
        Elements:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElements'
          - description: The elements in the configuration.
          title: Elements
        MediaInsightsPipelineConfigurationId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          - description: The ID of the configuration.
          title: MediaInsightsPipelineConfigurationId
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          - description: The time at which the configuration was created.
          title: CreatedTimestamp
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          - description: The time at which the configuration was last updated.
          title: UpdatedTimestamp
      title: MediaInsightsPipelineConfiguration
      type: object
    KinesisVideoStreamSourceRuntimeConfiguration:
      description: The runtime configuration settings for the Kinesis video stream
        source.
      properties:
        Streams:
          allOf:
          - $ref: '#/components/schemas/Streams'
          - description: The streams in the source runtime configuration of a Kinesis
              video stream.
          title: Streams
        MediaEncoding:
          allOf:
          - $ref: '#/components/schemas/MediaEncoding'
          - description: "<p>Specifies the encoding of your input audio. Supported\
              \ format: PCM (only signed 16-bit little-endian audio formats, which\
              \ does not include WAV)</p> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/transcribe/latest/dg/how-input.html#how-input-audio\"\
              >Media formats</a> in the <i>Amazon Transcribe Developer Guide</i>.</p>"
          title: MediaEncoding
        MediaSampleRate:
          allOf:
          - $ref: '#/components/schemas/MediaSampleRateHertz'
          - description: "<p>The sample rate of the input audio (in hertz). Low-quality\
              \ audio, such as telephone audio, is typically around 8,000 Hz. High-quality\
              \ audio typically ranges from 16,000 Hz to 48,000 Hz. Note that the\
              \ sample rate you specify must match that of your audio.</p> <p>Valid\
              \ Range: Minimum value of 8000. Maximum value of 48000.</p>"
          title: MediaSampleRate
      required:
      - MediaEncoding
      - MediaSampleRate
      - Streams
      title: KinesisVideoStreamSourceRuntimeConfiguration
      type: object
    MediaInsightsRuntimeMetadata:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    KinesisVideoStreamRecordingSourceRuntimeConfiguration:
      description: A structure that contains the runtime settings for recording a
        Kinesis video stream.
      properties:
        Streams:
          allOf:
          - $ref: '#/components/schemas/RecordingStreamList'
          - description: The stream or streams to be recorded.
          title: Streams
        FragmentSelector:
          $ref: '#/components/schemas/CreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration_FragmentSelector'
      required:
      - FragmentSelector
      - Streams
      title: KinesisVideoStreamRecordingSourceRuntimeConfiguration
      type: object
    S3RecordingSinkRuntimeConfiguration:
      description: "A structure that holds the settings for transmitting media files\
        \ to the Amazon S3 bucket. If specified, the settings in this structure override\
        \ any settings in <code>S3RecordingSinkConfiguration</code>."
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The URI of the S3 bucket used as the sink.
          title: Destination
        RecordingFileFormat:
          allOf:
          - $ref: '#/components/schemas/RecordingFileFormat'
          - description: The file format for the media files sent to the Amazon S3
              bucket.
          title: RecordingFileFormat
      required:
      - Destination
      - RecordingFileFormat
      title: S3RecordingSinkRuntimeConfiguration
      type: object
    CreateMediaInsightsPipelineRequest:
      example:
        ClientRequestToken: ""
        KinesisVideoStreamSourceRuntimeConfiguration:
          MediaSampleRate: ""
          MediaEncoding: ""
          Streams: ""
        S3RecordingSinkRuntimeConfiguration:
          Destination: ""
          RecordingFileFormat: ""
        MediaInsightsRuntimeMetadata: ""
        KinesisVideoStreamRecordingSourceRuntimeConfiguration:
          FragmentSelector:
            FragmentSelectorType: ""
            TimestampRange:
              StartTimestamp: ""
              EndTimestamp: ""
          Streams: ""
        Tags: ""
        MediaInsightsPipelineConfigurationArn: ""
      properties:
        MediaInsightsPipelineConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the pipeline's configuration.
        KinesisVideoStreamSourceRuntimeConfiguration:
          $ref: '#/components/schemas/CreateMediaInsightsPipelineRequest_KinesisVideoStreamSourceRuntimeConfiguration'
        MediaInsightsRuntimeMetadata:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsRuntimeMetadata'
          - description: The runtime metadata for the media insights pipeline. Consists
              of a key-value map of strings.
        KinesisVideoStreamRecordingSourceRuntimeConfiguration:
          $ref: '#/components/schemas/CreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration'
        S3RecordingSinkRuntimeConfiguration:
          $ref: '#/components/schemas/CreateMediaInsightsPipelineRequest_S3RecordingSinkRuntimeConfiguration'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags assigned to the media insights pipeline.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The unique identifier for the media insights pipeline request.
      required:
      - MediaInsightsPipelineConfigurationArn
      title: CreateMediaInsightsPipelineRequest
      type: object
    MediaInsightsPipeline:
      description: A media pipeline that streams call analytics data.
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          - description: The ID of a media insights pipeline.
          title: MediaPipelineId
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a media insights pipeline.
          title: MediaPipelineArn
        MediaInsightsPipelineConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a media insight pipeline's configuration settings.
          title: MediaInsightsPipelineConfigurationArn
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineStatus'
          - description: The status of a media insights pipeline.
          title: Status
        KinesisVideoStreamSourceRuntimeConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipeline_KinesisVideoStreamSourceRuntimeConfiguration'
        MediaInsightsRuntimeMetadata:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsRuntimeMetadata'
          - description: The runtime metadata of a media insights pipeline.
          title: MediaInsightsRuntimeMetadata
        KinesisVideoStreamRecordingSourceRuntimeConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipeline_KinesisVideoStreamRecordingSourceRuntimeConfiguration'
        S3RecordingSinkRuntimeConfiguration:
          $ref: '#/components/schemas/MediaInsightsPipeline_S3RecordingSinkRuntimeConfiguration'
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          - description: The time at which the media insights pipeline was created.
          title: CreatedTimestamp
      title: MediaInsightsPipeline
      type: object
    LiveConnectorSourceList:
      items:
        $ref: '#/components/schemas/LiveConnectorSourceConfiguration'
      maxItems: 1
      minItems: 1
      type: array
    LiveConnectorSinkList:
      items:
        $ref: '#/components/schemas/LiveConnectorSinkConfiguration'
      maxItems: 1
      minItems: 1
      type: array
    CreateMediaLiveConnectorPipelineRequest:
      example:
        ClientRequestToken: ""
        Sinks: ""
        Sources: ""
        Tags: ""
      properties:
        Sources:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSourceList'
          - description: The media live connector pipeline's data sources.
        Sinks:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSinkList'
          - description: The media live connector pipeline's data sinks.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The token assigned to the client making the request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags associated with the media live connector pipeline.
      required:
      - Sinks
      - Sources
      title: CreateMediaLiveConnectorPipelineRequest
      type: object
    MediaLiveConnectorPipeline:
      description: The connector pipeline.
      properties:
        Sources:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSourceList'
          - description: The connector pipeline's data sources.
          title: Sources
        Sinks:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSinkList'
          - description: The connector pipeline's data sinks.
          title: Sinks
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          - description: The connector pipeline's ID.
          title: MediaPipelineId
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The connector pipeline's ARN.
          title: MediaPipelineArn
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineStatus'
          - description: The connector pipeline's status.
          title: Status
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          - description: The time at which the connector pipeline was created.
          title: CreatedTimestamp
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          - description: The time at which the connector pipeline was last updated.
          title: UpdatedTimestamp
      title: MediaLiveConnectorPipeline
      type: object
    DeleteMediaCapturePipelineRequest:
      properties: {}
      title: DeleteMediaCapturePipelineRequest
      type: object
    NonEmptyString:
      maxLength: 1024
      pattern: .*\S.*
      type: string
    DeleteMediaInsightsPipelineConfigurationRequest:
      properties: {}
      title: DeleteMediaInsightsPipelineConfigurationRequest
      type: object
    DeleteMediaPipelineRequest:
      properties: {}
      title: DeleteMediaPipelineRequest
      type: object
    ExternalUserIdType:
      format: password
      maxLength: 64
      minLength: 2
      title: ExternalUserIdType
      type: string
    ExternalUserIdList:
      items:
        $ref: '#/components/schemas/ExternalUserIdType'
      minItems: 1
      type: array
    FragmentNumberString:
      maxLength: 128
      minLength: 1
      pattern: "^[0-9]+$"
      type: string
    FragmentSelectorType:
      enum:
      - ProducerTimestamp
      - ServerTimestamp
      title: FragmentSelectorType
      type: string
    TimestampRange:
      description: The range of timestamps to return.
      properties:
        StartTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The starting timestamp for the specified range.
          title: StartTimestamp
        EndTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ending timestamp for the specified range.
          title: EndTimestamp
      required:
      - EndTimestamp
      - StartTimestamp
      title: TimestampRange
      type: object
    GetMediaCapturePipelineRequest:
      properties: {}
      title: GetMediaCapturePipelineRequest
      type: object
    GetMediaInsightsPipelineConfigurationRequest:
      properties: {}
      title: GetMediaInsightsPipelineConfigurationRequest
      type: object
    GetMediaPipelineRequest:
      properties: {}
      title: GetMediaPipelineRequest
      type: object
    MediaPipeline:
      description: "A pipeline consisting of a media capture, media concatenation,\
        \ or live-streaming pipeline."
      properties:
        MediaCapturePipeline:
          $ref: '#/components/schemas/MediaPipeline_MediaCapturePipeline'
        MediaLiveConnectorPipeline:
          $ref: '#/components/schemas/MediaPipeline_MediaLiveConnectorPipeline'
        MediaConcatenationPipeline:
          $ref: '#/components/schemas/MediaPipeline_MediaConcatenationPipeline'
        MediaInsightsPipeline:
          $ref: '#/components/schemas/MediaPipeline_MediaInsightsPipeline'
      title: MediaPipeline
      type: object
    PresenterOnlyConfiguration:
      description: Defines the configuration for a presenter-only video tile.
      properties:
        PresenterPosition:
          allOf:
          - $ref: '#/components/schemas/PresenterPosition'
          - description: "Defines the position of the presenter video tile. Default:\
              \ <code>TopRight</code>."
          title: PresenterPosition
      title: PresenterOnlyConfiguration
      type: object
    HorizontalLayoutConfiguration:
      description: Defines the configuration settings for the horizontal layout.
      properties:
        TileOrder:
          allOf:
          - $ref: '#/components/schemas/TileOrder'
          - description: Sets the automatic ordering of the video tiles.
          title: TileOrder
        TilePosition:
          allOf:
          - $ref: '#/components/schemas/HorizontalTilePosition'
          - description: Sets the position of horizontal tiles.
          title: TilePosition
        TileCount:
          allOf:
          - $ref: '#/components/schemas/TileCount'
          - description: The maximum number of video tiles to display.
          title: TileCount
        TileAspectRatio:
          allOf:
          - $ref: '#/components/schemas/TileAspectRatio'
          - description: "Sets the aspect ratio of the video tiles, such as 16:9."
          title: TileAspectRatio
      title: HorizontalLayoutConfiguration
      type: object
    VerticalLayoutConfiguration:
      description: Defines the configuration settings for a vertial layout.
      properties:
        TileOrder:
          allOf:
          - $ref: '#/components/schemas/TileOrder'
          - description: Sets the automatic ordering of the video tiles.
          title: TileOrder
        TilePosition:
          allOf:
          - $ref: '#/components/schemas/VerticalTilePosition'
          - description: Sets the position of vertical tiles.
          title: TilePosition
        TileCount:
          allOf:
          - $ref: '#/components/schemas/TileCount'
          - description: The maximum number of tiles to display.
          title: TileCount
        TileAspectRatio:
          allOf:
          - $ref: '#/components/schemas/TileAspectRatio'
          - description: "Sets the aspect ratio of the video tiles, such as 16:9."
          title: TileAspectRatio
      title: VerticalLayoutConfiguration
      type: object
    VideoAttribute:
      description: Defines the settings for a video tile.
      properties:
        CornerRadius:
          allOf:
          - $ref: '#/components/schemas/CornerRadius'
          - description: Sets the corner radius of all video tiles.
          title: CornerRadius
        BorderColor:
          allOf:
          - $ref: '#/components/schemas/BorderColor'
          - description: Defines the border color of all video tiles.
          title: BorderColor
        HighlightColor:
          allOf:
          - $ref: '#/components/schemas/HighlightColor'
          - description: Defines the highlight color for the active video tile.
          title: HighlightColor
        BorderThickness:
          allOf:
          - $ref: '#/components/schemas/BorderThickness'
          - description: Defines the border thickness for all video tiles.
          title: BorderThickness
      title: VideoAttribute
      type: object
    HighlightColor:
      enum:
      - Black
      - Blue
      - Red
      - Green
      - White
      - Yellow
      title: HighlightColor
      type: string
    TileOrder:
      enum:
      - JoinSequence
      - SpeakerSequence
      title: TileOrder
      type: string
    HorizontalTilePosition:
      enum:
      - Top
      - Bottom
      title: HorizontalTilePosition
      type: string
    TileCount:
      maximum: 10
      minimum: 1
      type: integer
    TileAspectRatio:
      pattern: "^\\d{1,2}\\/\\d{1,2}$"
      type: string
    Iso8601Timestamp:
      format: date-time
      type: string
    RuleName:
      maxLength: 64
      minLength: 2
      pattern: "^[0-9a-zA-Z._-]+"
      type: string
    IssueDetectionConfiguration:
      description: A structure that contains the configuration settings for an issue
        detection task.
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the issue detection rule.
          title: RuleName
      required:
      - RuleName
      title: IssueDetectionConfiguration
      type: object
    Keyword:
      maxLength: 100
      minLength: 1
      pattern: "^[\\s0-9a-zA-Z'-]+"
      title: Keyword
      type: string
    KeywordMatchWordList:
      items:
        $ref: '#/components/schemas/Keyword'
      maxItems: 10
      minItems: 1
      type: array
    KeywordMatchConfiguration:
      description: A structure that contains the settings for a keyword match task.
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the keyword match rule.
          title: RuleName
        Keywords:
          allOf:
          - $ref: '#/components/schemas/KeywordMatchWordList'
          - description: The keywords or phrases that you want to match.
          title: Keywords
        Negate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Matches keywords or phrases on their presence or absence.\
              \ If set to <code>TRUE</code>, the rule matches when all the specified\
              \ keywords or phrases are absent. Default: <code>FALSE</code>."
          title: Negate
      required:
      - Keywords
      - RuleName
      title: KeywordMatchConfiguration
      type: object
    KinesisDataStreamSinkConfiguration:
      description: A structure that contains the configuration settings for a Kinesis
        Data Stream sink.
      properties:
        InsightsTarget:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the sink.
          title: InsightsTarget
      title: KinesisDataStreamSinkConfiguration
      type: object
    KinesisVideoStreamArn:
      maxLength: 1024
      minLength: 1
      pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
      type: string
    LambdaFunctionSinkConfiguration:
      description: A structure that contains the configuration settings for an AWS
        Lambda function's data sink.
      properties:
        InsightsTarget:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the sink.
          title: InsightsTarget
      title: LambdaFunctionSinkConfiguration
      type: object
    ResultMax:
      maximum: 100
      minimum: 1
      type: integer
    ListMediaCapturePipelinesRequest:
      properties: {}
      title: ListMediaCapturePipelinesRequest
      type: object
    MediaCapturePipelineSummaryList:
      items:
        $ref: '#/components/schemas/MediaCapturePipelineSummary'
      type: array
    ListMediaInsightsPipelineConfigurationsRequest:
      properties: {}
      title: ListMediaInsightsPipelineConfigurationsRequest
      type: object
    MediaInsightsPipelineConfigurationSummaryList:
      items:
        $ref: '#/components/schemas/MediaInsightsPipelineConfigurationSummary'
      type: array
    ListMediaPipelinesRequest:
      properties: {}
      title: ListMediaPipelinesRequest
      type: object
    MediaPipelineList:
      items:
        $ref: '#/components/schemas/MediaPipelineSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    SensitiveString:
      format: password
      maxLength: 1024
      minLength: 1
      type: string
    LiveConnectorRTMPConfiguration:
      description: The media pipeline's RTMP configuration object.
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The URL of the RTMP configuration.
          title: Url
        AudioChannels:
          allOf:
          - $ref: '#/components/schemas/AudioChannelsOption'
          - description: The audio channels set for the RTMP configuration
          title: AudioChannels
        AudioSampleRate:
          allOf:
          - $ref: '#/components/schemas/AudioSampleRateOption'
          - description: "The audio sample rate set for the RTMP configuration. Default:\
              \ 48000."
          title: AudioSampleRate
      required:
      - Url
      title: LiveConnectorRTMPConfiguration
      type: object
    LiveConnectorSinkType:
      enum:
      - RTMP
      title: LiveConnectorSinkType
      type: string
    LiveConnectorSourceType:
      enum:
      - ChimeSdkMeeting
      title: LiveConnectorSourceType
      type: string
    MediaPipelineStatus:
      enum:
      - Initializing
      - InProgress
      - Failed
      - Stopping
      - Stopped
      - Paused
      title: MediaPipelineStatus
      type: string
    MediaCapturePipelineSummary:
      description: The summary data of a media capture pipeline.
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          - description: The ID of the media pipeline in the summary.
          title: MediaPipelineId
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the media pipeline in the summary.
          title: MediaPipelineArn
      title: MediaCapturePipelineSummary
      type: object
    MediaInsightsPipelineConfigurationElementType:
      enum:
      - AmazonTranscribeCallAnalyticsProcessor
      - VoiceAnalyticsProcessor
      - AmazonTranscribeProcessor
      - KinesisDataStreamSink
      - LambdaFunctionSink
      - SqsQueueSink
      - SnsTopicSink
      - S3RecordingSink
      title: MediaInsightsPipelineConfigurationElementType
      type: string
    S3RecordingSinkConfiguration:
      description: The structure that holds the settings for transmitting media to
        the Amazon S3 bucket. These values are used as defaults if <code>S3RecordingSinkRuntimeConfiguration</code>
        is not specified.
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The default URI of the Amazon S3 bucket used as the recording
              sink.
          title: Destination
        RecordingFileFormat:
          allOf:
          - $ref: '#/components/schemas/RecordingFileFormat'
          - description: The default file format for the media files sent to the Amazon
              S3 bucket.
          title: RecordingFileFormat
      title: S3RecordingSinkConfiguration
      type: object
    VoiceAnalyticsProcessorConfiguration:
      description: The configuration settings for a voice analytics processor.
      properties:
        SpeakerSearchStatus:
          allOf:
          - $ref: '#/components/schemas/VoiceAnalyticsConfigurationStatus'
          - description: The status of the speaker search task.
          title: SpeakerSearchStatus
        VoiceToneAnalysisStatus:
          allOf:
          - $ref: '#/components/schemas/VoiceAnalyticsConfigurationStatus'
          - description: The status of the voice tone analysis task.
          title: VoiceToneAnalysisStatus
      title: VoiceAnalyticsProcessorConfiguration
      type: object
    SqsQueueSinkConfiguration:
      description: The configuration settings for the SQS sink.
      properties:
        InsightsTarget:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the SQS sink.
          title: InsightsTarget
      title: SqsQueueSinkConfiguration
      type: object
    SnsTopicSinkConfiguration:
      description: The configuration settings for the SNS topic sink.
      properties:
        InsightsTarget:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the SNS sink.
          title: InsightsTarget
      title: SnsTopicSinkConfiguration
      type: object
    MediaInsightsPipelineConfigurationSummary:
      description: A summary of the media insights pipeline configuration.
      properties:
        MediaInsightsPipelineConfigurationName:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationNameString'
          - description: The name of the media insights pipeline configuration.
          title: MediaInsightsPipelineConfigurationName
        MediaInsightsPipelineConfigurationId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          - description: The ID of the media insights pipeline configuration.
          title: MediaInsightsPipelineConfigurationId
        MediaInsightsPipelineConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the media insights pipeline configuration.
          title: MediaInsightsPipelineConfigurationArn
      title: MediaInsightsPipelineConfigurationSummary
      type: object
    MediaPipelineSummary:
      description: The summary of the media pipeline.
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          - description: The ID of the media pipeline in the summary.
          title: MediaPipelineId
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the media pipeline in the summary.
          title: MediaPipelineArn
      title: MediaPipelineSummary
      type: object
    MediaPipelineStatusUpdate:
      enum:
      - Pause
      - Resume
      title: MediaPipelineStatusUpdate
      type: string
    NumberOfChannels:
      maximum: 2
      minimum: 1
      type: integer
    PresenterPosition:
      enum:
      - TopLeft
      - TopRight
      - BottomLeft
      - BottomRight
      title: PresenterPosition
      type: string
    RealTimeAlertRuleType:
      enum:
      - KeywordMatch
      - Sentiment
      - IssueDetection
      title: RealTimeAlertRuleType
      type: string
    SentimentConfiguration:
      description: A structure that contains the configuration settings for a sentiment
        analysis task.
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule in the sentiment configuration.
          title: RuleName
        SentimentType:
          allOf:
          - $ref: '#/components/schemas/SentimentType'
          - description: "The type of sentiment, <code>POSITIVE</code>, <code>NEGATIVE</code>,\
              \ or <code>NEUTRAL</code>."
          title: SentimentType
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/SentimentTimePeriodInSeconds'
          - description: Specifies the analysis interval.
          title: TimePeriod
      required:
      - RuleName
      - SentimentType
      - TimePeriod
      title: SentimentConfiguration
      type: object
    RealTimeAlertRule:
      description: Specifies the words or phrases that trigger an alert.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/RealTimeAlertRuleType'
          - description: The type of alert rule.
          title: Type
        KeywordMatchConfiguration:
          $ref: '#/components/schemas/RealTimeAlertRule_KeywordMatchConfiguration'
        SentimentConfiguration:
          $ref: '#/components/schemas/RealTimeAlertRule_SentimentConfiguration'
        IssueDetectionConfiguration:
          $ref: '#/components/schemas/RealTimeAlertRule_IssueDetectionConfiguration'
      required:
      - Type
      title: RealTimeAlertRule
      type: object
    RecordingStreamConfiguration:
      description: A structure that holds the settings for recording media.
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamArn'
          - description: The ARN of the recording stream.
          title: StreamArn
      title: RecordingStreamConfiguration
      type: object
    SelectedVideoStreams:
      description: The video streams for a specified media pipeline. The total number
        of video streams can't exceed 25.
      properties:
        AttendeeIds:
          allOf:
          - $ref: '#/components/schemas/AttendeeIdList'
          - description: 'The attendee IDs of the streams selected for a media pipeline. '
          title: AttendeeIds
        ExternalUserIds:
          allOf:
          - $ref: '#/components/schemas/ExternalUserIdList'
          - description: The external user IDs of the streams selected for a media
              pipeline.
          title: ExternalUserIds
      title: SelectedVideoStreams
      type: object
    SentimentType:
      enum:
      - NEGATIVE
      title: SentimentType
      type: string
    SentimentTimePeriodInSeconds:
      maximum: 1800
      minimum: 60
      type: integer
    StreamChannelDefinition:
      description: Defines a streaming channel.
      properties:
        NumberOfChannels:
          allOf:
          - $ref: '#/components/schemas/NumberOfChannels'
          - description: The number of channels in a streaming channel.
          title: NumberOfChannels
        ChannelDefinitions:
          allOf:
          - $ref: '#/components/schemas/ChannelDefinitions'
          - description: The definitions of the channels in a streaming channel.
          title: ChannelDefinitions
      required:
      - NumberOfChannels
      title: StreamChannelDefinition
      type: object
    StreamConfiguration:
      description: The configuration settings for a stream.
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamArn'
          - description: The ARN of the stream.
          title: StreamArn
        FragmentNumber:
          allOf:
          - $ref: '#/components/schemas/FragmentNumberString'
          - description: The unique identifier of the fragment to begin processing.
          title: FragmentNumber
        StreamChannelDefinition:
          $ref: '#/components/schemas/StreamConfiguration_StreamChannelDefinition'
      required:
      - StreamArn
      - StreamChannelDefinition
      title: StreamConfiguration
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        ResourceARN: ""
        Tags: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The ARN of the media pipeline associated with any tags.\
              \ The ARN consists of the pipeline's endpoint region, resource ID, and\
              \ pipeline ID."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags associated with the specified media pipeline.
      required:
      - ResourceARN
      - Tags
      title: TagResourceRequest
      type: object
    Timestamp:
      format: date-time
      type: string
    UntagResourceRequest:
      example:
        ResourceARN: ""
        TagKeys: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the pipeline that you want to untag.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The key/value pairs in the tag that you want to remove.
      required:
      - ResourceARN
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateMediaInsightsPipelineConfigurationRequest:
      example:
        RealTimeAlertConfiguration:
          Disabled: ""
          Rules: ""
        ResourceAccessRoleArn: ""
        Elements: ""
      properties:
        ResourceAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the role used by the service to access Amazon
              Web Services resources.
        RealTimeAlertConfiguration:
          $ref: '#/components/schemas/UpdateMediaInsightsPipelineConfigurationRequest_RealTimeAlertConfiguration'
        Elements:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElements'
          - description: "The elements in the request, such as a processor for Amazon\
              \ Transcribe or a sink for a Kinesis Data Stream.."
      required:
      - Elements
      - ResourceAccessRoleArn
      title: UpdateMediaInsightsPipelineConfigurationRequest
      type: object
    UpdateMediaInsightsPipelineStatusRequest:
      example:
        UpdateStatus: ""
      properties:
        UpdateStatus:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineStatusUpdate'
          - description: The requested status of the media insights pipeline.
      required:
      - UpdateStatus
      title: UpdateMediaInsightsPipelineStatusRequest
      type: object
    VerticalTilePosition:
      enum:
      - Left
      - Right
      title: VerticalTilePosition
      type: string
    VideoMuxType:
      enum:
      - VideoOnly
      title: VideoMuxType
      type: string
    VoiceAnalyticsConfigurationStatus:
      enum:
      - Enabled
      - Disabled
      title: VoiceAnalyticsConfigurationStatus
      type: string
    CreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_SourceConfiguration:
      allOf:
      - $ref: '#/components/schemas/SourceConfiguration'
      - description: The source configuration for a specified media pipeline.
      example:
        SelectedVideoStreams:
          ExternalUserIds: ""
          AttendeeIds: ""
      title: CreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_SourceConfiguration
    CreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_ArtifactsConfiguration:
      allOf:
      - $ref: '#/components/schemas/ArtifactsConfiguration'
      - description: The configuration for the artifacts in an Amazon Chime SDK meeting.
      example:
        Video:
          MuxType: ""
          State: ""
        Content:
          MuxType: ""
          State: ""
        Audio:
          MuxType: ""
        CompositedVideo:
          Layout: ""
          GridViewConfiguration:
            ContentShareLayout: ""
            PresenterOnlyConfiguration:
              PresenterPosition: ""
            VideoAttribute:
              CornerRadius: ""
              BorderThickness: ""
              BorderColor: ""
              HighlightColor: ""
            HorizontalLayoutConfiguration:
              TileAspectRatio: ""
              TilePosition: ""
              TileOrder: ""
              TileCount: ""
            CanvasOrientation: ""
            ActiveSpeakerOnlyConfiguration:
              ActiveSpeakerPosition: ""
            VerticalLayoutConfiguration:
              TileAspectRatio: ""
              TilePosition: ""
              TileOrder: ""
              TileCount: ""
          Resolution: ""
      title: CreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_ArtifactsConfiguration
    CreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration:
      description: The configuration object of the Amazon Chime SDK meeting for a
        specified media pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.
      properties:
        SourceConfiguration:
          $ref: '#/components/schemas/CreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_SourceConfiguration'
        ArtifactsConfiguration:
          $ref: '#/components/schemas/CreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration_ArtifactsConfiguration'
      title: CreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration
      type: object
    CreateMediaCapturePipeline_request:
      properties:
        SourceType:
          description: Source type from which the media artifacts are captured. A
            Chime SDK Meeting is the only supported source.
          enum:
          - ChimeSdkMeeting
          title: SourceType
          type: string
        SourceArn:
          description: ARN of the source from which the media artifacts are captured.
          format: password
          maxLength: 1024
          minLength: 1
          pattern: "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$"
          title: SourceArn
          type: string
        SinkType:
          description: Destination type to which the media artifacts are saved. You
            must use an S3 bucket.
          enum:
          - S3Bucket
          title: SinkType
          type: string
        SinkArn:
          description: The ARN of the sink type.
          format: password
          maxLength: 1024
          minLength: 1
          pattern: "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$"
          title: SinkArn
          type: string
        ClientRequestToken:
          description: The unique identifier for the client request. The token makes
            the API request idempotent. Use a unique token for each media pipeline
            request.
          format: password
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          title: ClientRequestToken
          type: string
        ChimeSdkMeetingConfiguration:
          $ref: '#/components/schemas/CreateMediaCapturePipeline_request_ChimeSdkMeetingConfiguration'
        Tags:
          description: The tag key-value pairs.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          title: Tags
          type: array
      required:
      - SinkArn
      - SinkType
      - SourceArn
      - SourceType
      title: CreateMediaCapturePipeline_request
      type: object
    CreateMediaConcatenationPipeline_request:
      properties:
        Sources:
          description: An object that specifies the sources for the media concatenation
            pipeline.
          items:
            $ref: '#/components/schemas/ConcatenationSource'
          maxItems: 1
          minItems: 1
          title: Sources
          type: array
        Sinks:
          description: An object that specifies the data sinks for the media concatenation
            pipeline.
          items:
            $ref: '#/components/schemas/ConcatenationSink'
          maxItems: 1
          minItems: 1
          title: Sinks
          type: array
        ClientRequestToken:
          description: The unique identifier for the client request. The token makes
            the API request idempotent. Use a unique token for each media concatenation
            pipeline request.
          format: password
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          title: ClientRequestToken
          type: string
        Tags:
          description: The tags associated with the media concatenation pipeline.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          title: Tags
          type: array
      required:
      - Sinks
      - Sources
      title: CreateMediaConcatenationPipeline_request
      type: object
    CreateMediaInsightsPipeline_request_KinesisVideoStreamSourceRuntimeConfiguration:
      description: The runtime configuration settings for the Kinesis video stream
        source.
      properties:
        Streams:
          allOf:
          - $ref: '#/components/schemas/Streams'
          - description: The streams in the source runtime configuration of a Kinesis
              video stream.
          title: Streams
        MediaEncoding:
          allOf:
          - $ref: '#/components/schemas/MediaEncoding'
          - description: "<p>Specifies the encoding of your input audio. Supported\
              \ format: PCM (only signed 16-bit little-endian audio formats, which\
              \ does not include WAV)</p> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/transcribe/latest/dg/how-input.html#how-input-audio\"\
              >Media formats</a> in the <i>Amazon Transcribe Developer Guide</i>.</p>"
          title: MediaEncoding
        MediaSampleRate:
          allOf:
          - $ref: '#/components/schemas/MediaSampleRateHertz'
          - description: "<p>The sample rate of the input audio (in hertz). Low-quality\
              \ audio, such as telephone audio, is typically around 8,000 Hz. High-quality\
              \ audio typically ranges from 16,000 Hz to 48,000 Hz. Note that the\
              \ sample rate you specify must match that of your audio.</p> <p>Valid\
              \ Range: Minimum value of 8000. Maximum value of 48000.</p>"
          title: MediaSampleRate
      title: CreateMediaInsightsPipeline_request_KinesisVideoStreamSourceRuntimeConfiguration
      type: object
    CreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration_FragmentSelector:
      allOf:
      - $ref: '#/components/schemas/FragmentSelector'
      - description: Describes the timestamp range and timestamp origin of a range
          of fragments in the Kinesis video stream.
      example:
        FragmentSelectorType: ""
        TimestampRange:
          StartTimestamp: ""
          EndTimestamp: ""
      title: CreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration_FragmentSelector
    CreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration:
      description: A structure that contains the runtime settings for recording a
        Kinesis video stream.
      properties:
        Streams:
          allOf:
          - $ref: '#/components/schemas/RecordingStreamList'
          - description: The stream or streams to be recorded.
          title: Streams
        FragmentSelector:
          $ref: '#/components/schemas/CreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration_FragmentSelector'
      title: CreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration
      type: object
    CreateMediaInsightsPipeline_request_S3RecordingSinkRuntimeConfiguration:
      description: "A structure that holds the settings for transmitting media files\
        \ to the Amazon S3 bucket. If specified, the settings in this structure override\
        \ any settings in <code>S3RecordingSinkConfiguration</code>."
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The URI of the S3 bucket used as the sink.
          title: Destination
        RecordingFileFormat:
          allOf:
          - $ref: '#/components/schemas/RecordingFileFormat'
          - description: The file format for the media files sent to the Amazon S3
              bucket.
          title: RecordingFileFormat
      title: CreateMediaInsightsPipeline_request_S3RecordingSinkRuntimeConfiguration
      type: object
    CreateMediaInsightsPipeline_request:
      properties:
        MediaInsightsPipelineConfigurationArn:
          description: The ARN of the pipeline's configuration.
          format: password
          maxLength: 1024
          minLength: 1
          pattern: "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$"
          title: MediaInsightsPipelineConfigurationArn
          type: string
        KinesisVideoStreamSourceRuntimeConfiguration:
          $ref: '#/components/schemas/CreateMediaInsightsPipeline_request_KinesisVideoStreamSourceRuntimeConfiguration'
        MediaInsightsRuntimeMetadata:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: The runtime metadata for the media insights pipeline. Consists
            of a key-value map of strings.
          title: MediaInsightsRuntimeMetadata
          type: object
        KinesisVideoStreamRecordingSourceRuntimeConfiguration:
          $ref: '#/components/schemas/CreateMediaInsightsPipeline_request_KinesisVideoStreamRecordingSourceRuntimeConfiguration'
        S3RecordingSinkRuntimeConfiguration:
          $ref: '#/components/schemas/CreateMediaInsightsPipeline_request_S3RecordingSinkRuntimeConfiguration'
        Tags:
          description: The tags assigned to the media insights pipeline.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          title: Tags
          type: array
        ClientRequestToken:
          description: The unique identifier for the media insights pipeline request.
          format: password
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          title: ClientRequestToken
          type: string
      required:
      - MediaInsightsPipelineConfigurationArn
      title: CreateMediaInsightsPipeline_request
      type: object
    CreateMediaInsightsPipelineConfiguration_request_RealTimeAlertConfiguration:
      description: A structure that contains the configuration settings for real-time
        alerts.
      properties:
        Disabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Turns off real-time alerts.
          title: Disabled
        Rules:
          allOf:
          - $ref: '#/components/schemas/RealTimeAlertRuleList'
          - description: The rules in the alert. Rules specify the words or phrases
              that you want to be notified about.
          title: Rules
      title: CreateMediaInsightsPipelineConfiguration_request_RealTimeAlertConfiguration
      type: object
    CreateMediaInsightsPipelineConfiguration_request:
      properties:
        MediaInsightsPipelineConfigurationName:
          description: The name of the media insights pipeline configuration.
          maxLength: 64
          minLength: 2
          pattern: "^[0-9a-zA-Z._-]+"
          title: MediaInsightsPipelineConfigurationName
          type: string
        ResourceAccessRoleArn:
          description: "The ARN of the role used by the service to access Amazon Web\
            \ Services resources, including <code>Transcribe</code> and <code>Transcribe\
            \ Call Analytics</code>, on the caller’s behalf."
          format: password
          maxLength: 1024
          minLength: 1
          pattern: "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$"
          title: ResourceAccessRoleArn
          type: string
        RealTimeAlertConfiguration:
          $ref: '#/components/schemas/CreateMediaInsightsPipelineConfiguration_request_RealTimeAlertConfiguration'
        Elements:
          description: "The elements in the request, such as a processor for Amazon\
            \ Transcribe or a sink for a Kinesis Data Stream."
          items:
            $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement'
          title: Elements
          type: array
        Tags:
          description: The tags assigned to the media insights pipeline configuration.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          title: Tags
          type: array
        ClientRequestToken:
          description: The unique identifier for the media insights pipeline configuration
            request.
          format: password
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          title: ClientRequestToken
          type: string
      required:
      - Elements
      - MediaInsightsPipelineConfigurationName
      - ResourceAccessRoleArn
      title: CreateMediaInsightsPipelineConfiguration_request
      type: object
    CreateMediaLiveConnectorPipeline_request:
      properties:
        Sources:
          description: The media live connector pipeline's data sources.
          items:
            $ref: '#/components/schemas/LiveConnectorSourceConfiguration'
          maxItems: 1
          minItems: 1
          title: Sources
          type: array
        Sinks:
          description: The media live connector pipeline's data sinks.
          items:
            $ref: '#/components/schemas/LiveConnectorSinkConfiguration'
          maxItems: 1
          minItems: 1
          title: Sinks
          type: array
        ClientRequestToken:
          description: The token assigned to the client making the request.
          format: password
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          title: ClientRequestToken
          type: string
        Tags:
          description: The tags associated with the media live connector pipeline.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          title: Tags
          type: array
      required:
      - Sinks
      - Sources
      title: CreateMediaLiveConnectorPipeline_request
      type: object
    UpdateMediaInsightsPipelineConfiguration_request:
      properties:
        ResourceAccessRoleArn:
          description: The ARN of the role used by the service to access Amazon Web
            Services resources.
          format: password
          maxLength: 1024
          minLength: 1
          pattern: "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$"
          title: ResourceAccessRoleArn
          type: string
        RealTimeAlertConfiguration:
          $ref: '#/components/schemas/CreateMediaInsightsPipelineConfiguration_request_RealTimeAlertConfiguration'
        Elements:
          description: "The elements in the request, such as a processor for Amazon\
            \ Transcribe or a sink for a Kinesis Data Stream.."
          items:
            $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement'
          title: Elements
          type: array
      required:
      - Elements
      - ResourceAccessRoleArn
      title: UpdateMediaInsightsPipelineConfiguration_request
      type: object
    TagResource_request:
      properties:
        ResourceARN:
          description: "The ARN of the media pipeline associated with any tags. The\
            \ ARN consists of the pipeline's endpoint region, resource ID, and pipeline\
            \ ID."
          maxLength: 1011
          minLength: 1
          pattern: "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$"
          title: ResourceARN
          type: string
        Tags:
          description: The tags associated with the specified media pipeline.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          title: Tags
          type: array
      required:
      - ResourceARN
      - Tags
      title: TagResource_request
      type: object
    UntagResource_request:
      properties:
        ResourceARN:
          description: The ARN of the pipeline that you want to untag.
          maxLength: 1011
          minLength: 1
          pattern: "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$"
          title: ResourceARN
          type: string
        TagKeys:
          description: The key/value pairs in the tag that you want to remove.
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 1
          title: TagKeys
          type: array
      required:
      - ResourceARN
      - TagKeys
      title: UntagResource_request
      type: object
    UpdateMediaInsightsPipelineStatus_request:
      properties:
        UpdateStatus:
          description: The requested status of the media insights pipeline.
          enum:
          - Pause
          - Resume
          title: UpdateStatus
          type: string
      required:
      - UpdateStatus
      title: UpdateMediaInsightsPipelineStatus_request
      type: object
    CreateMediaCapturePipelineResponse_MediaCapturePipeline:
      allOf:
      - $ref: '#/components/schemas/MediaCapturePipeline'
      - description: "A media pipeline object, the ID, source type, source ARN, sink\
          \ type, and sink ARN of a media pipeline object."
      example:
        Status: ""
        UpdatedTimestamp: ""
        CreatedTimestamp: ""
        SourceArn: ""
        ChimeSdkMeetingConfiguration:
          SourceConfiguration:
            SelectedVideoStreams:
              ExternalUserIds: ""
              AttendeeIds: ""
          ArtifactsConfiguration:
            Video:
              MuxType: ""
              State: ""
            Content:
              MuxType: ""
              State: ""
            Audio:
              MuxType: ""
            CompositedVideo:
              Layout: ""
              GridViewConfiguration:
                ContentShareLayout: ""
                PresenterOnlyConfiguration:
                  PresenterPosition: ""
                VideoAttribute:
                  CornerRadius: ""
                  BorderThickness: ""
                  BorderColor: ""
                  HighlightColor: ""
                HorizontalLayoutConfiguration:
                  TileAspectRatio: ""
                  TilePosition: ""
                  TileOrder: ""
                  TileCount: ""
                CanvasOrientation: ""
                ActiveSpeakerOnlyConfiguration:
                  ActiveSpeakerPosition: ""
                VerticalLayoutConfiguration:
                  TileAspectRatio: ""
                  TilePosition: ""
                  TileOrder: ""
                  TileCount: ""
              Resolution: ""
        MediaPipelineId: ""
        SourceType: ""
        SinkArn: ""
        MediaPipelineArn: ""
        SinkType: ""
      title: CreateMediaCapturePipelineResponse_MediaCapturePipeline
    SourceConfiguration_SelectedVideoStreams:
      allOf:
      - $ref: '#/components/schemas/SelectedVideoStreams'
      - description: The selected video streams for a specified media pipeline. The
          number of video streams can't exceed 25.
      example:
        ExternalUserIds: ""
        AttendeeIds: ""
      title: SourceConfiguration_SelectedVideoStreams
    ArtifactsConfiguration_Audio:
      allOf:
      - $ref: '#/components/schemas/AudioArtifactsConfiguration'
      - description: The configuration for the audio artifacts.
      example:
        MuxType: ""
      title: ArtifactsConfiguration_Audio
    ArtifactsConfiguration_Video:
      allOf:
      - $ref: '#/components/schemas/VideoArtifactsConfiguration'
      - description: The configuration for the video artifacts.
      example:
        MuxType: ""
        State: ""
      title: ArtifactsConfiguration_Video
    ArtifactsConfiguration_Content:
      allOf:
      - $ref: '#/components/schemas/ContentArtifactsConfiguration'
      - description: The configuration for the content artifacts.
      example:
        MuxType: ""
        State: ""
      title: ArtifactsConfiguration_Content
    ArtifactsConfiguration_CompositedVideo:
      allOf:
      - $ref: '#/components/schemas/CompositedVideoArtifactsConfiguration'
      - description: Enables video compositing.
      example:
        Layout: ""
        GridViewConfiguration:
          ContentShareLayout: ""
          PresenterOnlyConfiguration:
            PresenterPosition: ""
          VideoAttribute:
            CornerRadius: ""
            BorderThickness: ""
            BorderColor: ""
            HighlightColor: ""
          HorizontalLayoutConfiguration:
            TileAspectRatio: ""
            TilePosition: ""
            TileOrder: ""
            TileCount: ""
          CanvasOrientation: ""
          ActiveSpeakerOnlyConfiguration:
            ActiveSpeakerPosition: ""
          VerticalLayoutConfiguration:
            TileAspectRatio: ""
            TilePosition: ""
            TileOrder: ""
            TileCount: ""
        Resolution: ""
      title: ArtifactsConfiguration_CompositedVideo
    CreateMediaConcatenationPipelineResponse_MediaConcatenationPipeline:
      allOf:
      - $ref: '#/components/schemas/MediaConcatenationPipeline'
      - description: "A media concatenation pipeline object, the ID, source type,\
          \ <code>MediaPipelineARN</code>, and sink of a media concatenation pipeline\
          \ object."
      example:
        Status: ""
        UpdatedTimestamp: ""
        Sinks: ""
        CreatedTimestamp: ""
        MediaPipelineId: ""
        MediaPipelineArn: ""
        Sources: ""
      title: CreateMediaConcatenationPipelineResponse_MediaConcatenationPipeline
    ConcatenationSource_MediaCapturePipelineSourceConfiguration:
      allOf:
      - $ref: '#/components/schemas/MediaCapturePipelineSourceConfiguration'
      - description: The concatenation settings for the media pipeline in a configuration
          object.
      title: ConcatenationSource_MediaCapturePipelineSourceConfiguration
    ConcatenationSink_S3BucketSinkConfiguration:
      allOf:
      - $ref: '#/components/schemas/S3BucketSinkConfiguration'
      - description: The configuration settings for an Amazon S3 bucket sink.
      title: ConcatenationSink_S3BucketSinkConfiguration
    CreateMediaInsightsPipelineResponse_MediaInsightsPipeline:
      allOf:
      - $ref: '#/components/schemas/MediaInsightsPipeline'
      - description: The media insights pipeline object.
      example:
        Status: ""
        KinesisVideoStreamSourceRuntimeConfiguration:
          MediaSampleRate: ""
          MediaEncoding: ""
          Streams: ""
        CreatedTimestamp: ""
        MediaPipelineId: ""
        S3RecordingSinkRuntimeConfiguration:
          Destination: ""
          RecordingFileFormat: ""
        MediaInsightsRuntimeMetadata: ""
        MediaPipelineArn: ""
        KinesisVideoStreamRecordingSourceRuntimeConfiguration:
          FragmentSelector:
            FragmentSelectorType: ""
            TimestampRange:
              StartTimestamp: ""
              EndTimestamp: ""
          Streams: ""
        MediaInsightsPipelineConfigurationArn: ""
      title: CreateMediaInsightsPipelineResponse_MediaInsightsPipeline
    FragmentSelector_TimestampRange:
      allOf:
      - $ref: '#/components/schemas/TimestampRange'
      - description: The range of timestamps to return.
      example:
        StartTimestamp: ""
        EndTimestamp: ""
      title: FragmentSelector_TimestampRange
    CreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration:
      allOf:
      - $ref: '#/components/schemas/MediaInsightsPipelineConfiguration'
      - description: The configuration settings for the media insights pipeline.
      example:
        RealTimeAlertConfiguration:
          Disabled: ""
          Rules: ""
        MediaInsightsPipelineConfigurationId: ""
        UpdatedTimestamp: ""
        ResourceAccessRoleArn: ""
        CreatedTimestamp: ""
        Elements: ""
        MediaInsightsPipelineConfigurationName: ""
        MediaInsightsPipelineConfigurationArn: ""
      title: CreateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration
    MediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration:
      allOf:
      - $ref: '#/components/schemas/AmazonTranscribeCallAnalyticsProcessorConfiguration'
      - description: The analytics configuration settings for transcribing audio in
          a media insights pipeline configuration element.
      title: MediaInsightsPipelineConfigurationElement_AmazonTranscribeCallAnalyticsProcessorConfiguration
    MediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration:
      allOf:
      - $ref: '#/components/schemas/AmazonTranscribeProcessorConfiguration'
      - description: The transcription processor configuration settings in a media
          insights pipeline configuration element.
      title: MediaInsightsPipelineConfigurationElement_AmazonTranscribeProcessorConfiguration
    MediaInsightsPipelineConfigurationElement_KinesisDataStreamSinkConfiguration:
      allOf:
      - $ref: '#/components/schemas/KinesisDataStreamSinkConfiguration'
      - description: The configuration settings for the Kinesis Data Stream Sink in
          a media insights pipeline configuration element.
      title: MediaInsightsPipelineConfigurationElement_KinesisDataStreamSinkConfiguration
    MediaInsightsPipelineConfigurationElement_S3RecordingSinkConfiguration:
      allOf:
      - $ref: '#/components/schemas/S3RecordingSinkConfiguration'
      - description: The configuration settings for the Amazon S3 recording bucket
          in a media insights pipeline configuration element.
      title: MediaInsightsPipelineConfigurationElement_S3RecordingSinkConfiguration
    MediaInsightsPipelineConfigurationElement_VoiceAnalyticsProcessorConfiguration:
      allOf:
      - $ref: '#/components/schemas/VoiceAnalyticsProcessorConfiguration'
      - description: The voice analytics configuration settings in a media insights
          pipeline configuration element.
      title: MediaInsightsPipelineConfigurationElement_VoiceAnalyticsProcessorConfiguration
    MediaInsightsPipelineConfigurationElement_LambdaFunctionSinkConfiguration:
      allOf:
      - $ref: '#/components/schemas/LambdaFunctionSinkConfiguration'
      - description: The configuration settings for the Amazon Web Services Lambda
          sink in a media insights pipeline configuration element.
      title: MediaInsightsPipelineConfigurationElement_LambdaFunctionSinkConfiguration
    MediaInsightsPipelineConfigurationElement_SqsQueueSinkConfiguration:
      allOf:
      - $ref: '#/components/schemas/SqsQueueSinkConfiguration'
      - description: The configuration settings for an SQS queue sink in a media insights
          pipeline configuration element.
      title: MediaInsightsPipelineConfigurationElement_SqsQueueSinkConfiguration
    MediaInsightsPipelineConfigurationElement_SnsTopicSinkConfiguration:
      allOf:
      - $ref: '#/components/schemas/SnsTopicSinkConfiguration'
      - description: The configuration settings for an SNS topic sink in a media insights
          pipeline configuration element.
      title: MediaInsightsPipelineConfigurationElement_SnsTopicSinkConfiguration
    CreateMediaLiveConnectorPipelineResponse_MediaLiveConnectorPipeline:
      allOf:
      - $ref: '#/components/schemas/MediaLiveConnectorPipeline'
      - description: The new media live connector pipeline.
      example:
        Status: ""
        UpdatedTimestamp: ""
        Sinks: ""
        CreatedTimestamp: ""
        MediaPipelineId: ""
        Sources: ""
        MediaPipelineArn: ""
      title: CreateMediaLiveConnectorPipelineResponse_MediaLiveConnectorPipeline
    LiveConnectorSourceConfiguration_ChimeSdkMeetingLiveConnectorConfiguration:
      allOf:
      - $ref: '#/components/schemas/ChimeSdkMeetingLiveConnectorConfiguration'
      - description: The configuration settings of the connector pipeline.
      title: LiveConnectorSourceConfiguration_ChimeSdkMeetingLiveConnectorConfiguration
    LiveConnectorSinkConfiguration_RTMPConfiguration:
      allOf:
      - $ref: '#/components/schemas/LiveConnectorRTMPConfiguration'
      - description: The sink configuration's RTMP configuration settings.
      title: LiveConnectorSinkConfiguration_RTMPConfiguration
    GetMediaCapturePipelineResponse_MediaCapturePipeline:
      allOf:
      - $ref: '#/components/schemas/MediaCapturePipeline'
      - description: The media pipeline object.
      example:
        Status: ""
        UpdatedTimestamp: ""
        CreatedTimestamp: ""
        SourceArn: ""
        ChimeSdkMeetingConfiguration:
          SourceConfiguration:
            SelectedVideoStreams:
              ExternalUserIds: ""
              AttendeeIds: ""
          ArtifactsConfiguration:
            Video:
              MuxType: ""
              State: ""
            Content:
              MuxType: ""
              State: ""
            Audio:
              MuxType: ""
            CompositedVideo:
              Layout: ""
              GridViewConfiguration:
                ContentShareLayout: ""
                PresenterOnlyConfiguration:
                  PresenterPosition: ""
                VideoAttribute:
                  CornerRadius: ""
                  BorderThickness: ""
                  BorderColor: ""
                  HighlightColor: ""
                HorizontalLayoutConfiguration:
                  TileAspectRatio: ""
                  TilePosition: ""
                  TileOrder: ""
                  TileCount: ""
                CanvasOrientation: ""
                ActiveSpeakerOnlyConfiguration:
                  ActiveSpeakerPosition: ""
                VerticalLayoutConfiguration:
                  TileAspectRatio: ""
                  TilePosition: ""
                  TileOrder: ""
                  TileCount: ""
              Resolution: ""
        MediaPipelineId: ""
        SourceType: ""
        SinkArn: ""
        MediaPipelineArn: ""
        SinkType: ""
      title: GetMediaCapturePipelineResponse_MediaCapturePipeline
    GetMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration:
      allOf:
      - $ref: '#/components/schemas/MediaInsightsPipelineConfiguration'
      - description: The requested media insights pipeline configuration.
      example:
        RealTimeAlertConfiguration:
          Disabled: ""
          Rules: ""
        MediaInsightsPipelineConfigurationId: ""
        UpdatedTimestamp: ""
        ResourceAccessRoleArn: ""
        CreatedTimestamp: ""
        Elements: ""
        MediaInsightsPipelineConfigurationName: ""
        MediaInsightsPipelineConfigurationArn: ""
      title: GetMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration
    GetMediaPipelineResponse_MediaPipeline:
      allOf:
      - $ref: '#/components/schemas/MediaPipeline'
      - description: The media pipeline object.
      example:
        MediaConcatenationPipeline:
          Status: ""
          UpdatedTimestamp: ""
          Sinks: ""
          CreatedTimestamp: ""
          MediaPipelineId: ""
          MediaPipelineArn: ""
          Sources: ""
        MediaCapturePipeline:
          Status: ""
          UpdatedTimestamp: ""
          CreatedTimestamp: ""
          SourceArn: ""
          ChimeSdkMeetingConfiguration:
            SourceConfiguration:
              SelectedVideoStreams:
                ExternalUserIds: ""
                AttendeeIds: ""
            ArtifactsConfiguration:
              Video:
                MuxType: ""
                State: ""
              Content:
                MuxType: ""
                State: ""
              Audio:
                MuxType: ""
              CompositedVideo:
                Layout: ""
                GridViewConfiguration:
                  ContentShareLayout: ""
                  PresenterOnlyConfiguration:
                    PresenterPosition: ""
                  VideoAttribute:
                    CornerRadius: ""
                    BorderThickness: ""
                    BorderColor: ""
                    HighlightColor: ""
                  HorizontalLayoutConfiguration:
                    TileAspectRatio: ""
                    TilePosition: ""
                    TileOrder: ""
                    TileCount: ""
                  CanvasOrientation: ""
                  ActiveSpeakerOnlyConfiguration:
                    ActiveSpeakerPosition: ""
                  VerticalLayoutConfiguration:
                    TileAspectRatio: ""
                    TilePosition: ""
                    TileOrder: ""
                    TileCount: ""
                Resolution: ""
          MediaPipelineId: ""
          SourceType: ""
          SinkArn: ""
          MediaPipelineArn: ""
          SinkType: ""
        MediaLiveConnectorPipeline:
          Status: ""
          UpdatedTimestamp: ""
          Sinks: ""
          CreatedTimestamp: ""
          MediaPipelineId: ""
          Sources: ""
          MediaPipelineArn: ""
        MediaInsightsPipeline:
          Status: ""
          KinesisVideoStreamSourceRuntimeConfiguration:
            MediaSampleRate: ""
            MediaEncoding: ""
            Streams: ""
          CreatedTimestamp: ""
          MediaPipelineId: ""
          S3RecordingSinkRuntimeConfiguration:
            Destination: ""
            RecordingFileFormat: ""
          MediaInsightsRuntimeMetadata: ""
          MediaPipelineArn: ""
          KinesisVideoStreamRecordingSourceRuntimeConfiguration:
            FragmentSelector:
              FragmentSelectorType: ""
              TimestampRange:
                StartTimestamp: ""
                EndTimestamp: ""
            Streams: ""
          MediaInsightsPipelineConfigurationArn: ""
      title: GetMediaPipelineResponse_MediaPipeline
    UpdateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration:
      allOf:
      - $ref: '#/components/schemas/MediaInsightsPipelineConfiguration'
      - description: The updated configuration settings.
      example:
        RealTimeAlertConfiguration:
          Disabled: ""
          Rules: ""
        MediaInsightsPipelineConfigurationId: ""
        UpdatedTimestamp: ""
        ResourceAccessRoleArn: ""
        CreatedTimestamp: ""
        Elements: ""
        MediaInsightsPipelineConfigurationName: ""
        MediaInsightsPipelineConfigurationArn: ""
      title: UpdateMediaInsightsPipelineConfigurationResponse_MediaInsightsPipelineConfiguration
    AmazonTranscribeCallAnalyticsProcessorConfiguration_PostCallAnalyticsSettings:
      allOf:
      - $ref: '#/components/schemas/PostCallAnalyticsSettings'
      - description: The settings for a post-call analysis task in an analytics configuration.
      title: AmazonTranscribeCallAnalyticsProcessorConfiguration_PostCallAnalyticsSettings
    ArtifactsConcatenationConfiguration_Audio:
      allOf:
      - $ref: '#/components/schemas/AudioConcatenationConfiguration'
      - description: The configuration for the audio artifacts concatenation.
      title: ArtifactsConcatenationConfiguration_Audio
    ArtifactsConcatenationConfiguration_Video:
      allOf:
      - $ref: '#/components/schemas/VideoConcatenationConfiguration'
      - description: The configuration for the video artifacts concatenation.
      title: ArtifactsConcatenationConfiguration_Video
    ArtifactsConcatenationConfiguration_Content:
      allOf:
      - $ref: '#/components/schemas/ContentConcatenationConfiguration'
      - description: The configuration for the content artifacts concatenation.
      title: ArtifactsConcatenationConfiguration_Content
    ArtifactsConcatenationConfiguration_DataChannel:
      allOf:
      - $ref: '#/components/schemas/DataChannelConcatenationConfiguration'
      - description: The configuration for the data channel artifacts concatenation.
      title: ArtifactsConcatenationConfiguration_DataChannel
    ArtifactsConcatenationConfiguration_TranscriptionMessages:
      allOf:
      - $ref: '#/components/schemas/TranscriptionMessagesConcatenationConfiguration'
      - description: The configuration for the transcription messages artifacts concatenation.
      title: ArtifactsConcatenationConfiguration_TranscriptionMessages
    ArtifactsConcatenationConfiguration_MeetingEvents:
      allOf:
      - $ref: '#/components/schemas/MeetingEventsConcatenationConfiguration'
      - description: The configuration for the meeting events artifacts concatenation.
      title: ArtifactsConcatenationConfiguration_MeetingEvents
    ArtifactsConcatenationConfiguration_CompositedVideo:
      allOf:
      - $ref: '#/components/schemas/CompositedVideoConcatenationConfiguration'
      - description: The configuration for the composited video artifacts concatenation.
      title: ArtifactsConcatenationConfiguration_CompositedVideo
    CompositedVideoArtifactsConfiguration_GridViewConfiguration:
      allOf:
      - $ref: '#/components/schemas/GridViewConfiguration'
      - description: The <code>GridView</code> configuration setting.
      example:
        ContentShareLayout: ""
        PresenterOnlyConfiguration:
          PresenterPosition: ""
        VideoAttribute:
          CornerRadius: ""
          BorderThickness: ""
          BorderColor: ""
          HighlightColor: ""
        HorizontalLayoutConfiguration:
          TileAspectRatio: ""
          TilePosition: ""
          TileOrder: ""
          TileCount: ""
        CanvasOrientation: ""
        ActiveSpeakerOnlyConfiguration:
          ActiveSpeakerPosition: ""
        VerticalLayoutConfiguration:
          TileAspectRatio: ""
          TilePosition: ""
          TileOrder: ""
          TileCount: ""
      title: CompositedVideoArtifactsConfiguration_GridViewConfiguration
    ChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration:
      allOf:
      - $ref: '#/components/schemas/ArtifactsConcatenationConfiguration'
      - description: The configuration for the artifacts in an Amazon Chime SDK meeting
          concatenation.
      title: ChimeSdkMeetingConcatenationConfiguration_ArtifactsConfiguration
    ChimeSdkMeetingLiveConnectorConfiguration_CompositedVideo:
      allOf:
      - $ref: '#/components/schemas/CompositedVideoArtifactsConfiguration'
      - description: The media pipeline's composited video.
      title: ChimeSdkMeetingLiveConnectorConfiguration_CompositedVideo
    ChimeSdkMeetingLiveConnectorConfiguration_SourceConfiguration:
      allOf:
      - $ref: '#/components/schemas/SourceConfiguration'
      - description: The source configuration settings of the media pipeline's configuration
          object.
      title: ChimeSdkMeetingLiveConnectorConfiguration_SourceConfiguration
    GridViewConfiguration_PresenterOnlyConfiguration:
      allOf:
      - $ref: '#/components/schemas/PresenterOnlyConfiguration'
      - description: Defines the configuration options for a presenter only video
          tile.
      example:
        PresenterPosition: ""
      title: GridViewConfiguration_PresenterOnlyConfiguration
    GridViewConfiguration_ActiveSpeakerOnlyConfiguration:
      allOf:
      - $ref: '#/components/schemas/ActiveSpeakerOnlyConfiguration'
      - description: The configuration settings for an <code>ActiveSpeakerOnly</code>
          video tile.
      example:
        ActiveSpeakerPosition: ""
      title: GridViewConfiguration_ActiveSpeakerOnlyConfiguration
    GridViewConfiguration_HorizontalLayoutConfiguration:
      allOf:
      - $ref: '#/components/schemas/HorizontalLayoutConfiguration'
      - description: The configuration settings for a horizontal layout.
      example:
        TileAspectRatio: ""
        TilePosition: ""
        TileOrder: ""
        TileCount: ""
      title: GridViewConfiguration_HorizontalLayoutConfiguration
    GridViewConfiguration_VerticalLayoutConfiguration:
      allOf:
      - $ref: '#/components/schemas/VerticalLayoutConfiguration'
      - description: The configuration settings for a vertical layout.
      example:
        TileAspectRatio: ""
        TilePosition: ""
        TileOrder: ""
        TileCount: ""
      title: GridViewConfiguration_VerticalLayoutConfiguration
    GridViewConfiguration_VideoAttribute:
      allOf:
      - $ref: '#/components/schemas/VideoAttribute'
      - description: The attribute settings for the video tiles.
      example:
        CornerRadius: ""
        BorderThickness: ""
        BorderColor: ""
        HighlightColor: ""
      title: GridViewConfiguration_VideoAttribute
    MediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration:
      allOf:
      - $ref: '#/components/schemas/ChimeSdkMeetingConcatenationConfiguration'
      - description: 'The meeting configuration settings in a media capture pipeline
          configuration object. '
      title: MediaCapturePipelineSourceConfiguration_ChimeSdkMeetingConfiguration
    CreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration:
      allOf:
      - $ref: '#/components/schemas/ChimeSdkMeetingConfiguration'
      - description: The configuration for a specified media pipeline. <code>SourceType</code>
          must be <code>ChimeSdkMeeting</code>.
      example:
        SourceConfiguration:
          SelectedVideoStreams:
            ExternalUserIds: ""
            AttendeeIds: ""
        ArtifactsConfiguration:
          Video:
            MuxType: ""
            State: ""
          Content:
            MuxType: ""
            State: ""
          Audio:
            MuxType: ""
          CompositedVideo:
            Layout: ""
            GridViewConfiguration:
              ContentShareLayout: ""
              PresenterOnlyConfiguration:
                PresenterPosition: ""
              VideoAttribute:
                CornerRadius: ""
                BorderThickness: ""
                BorderColor: ""
                HighlightColor: ""
              HorizontalLayoutConfiguration:
                TileAspectRatio: ""
                TilePosition: ""
                TileOrder: ""
                TileCount: ""
              CanvasOrientation: ""
              ActiveSpeakerOnlyConfiguration:
                ActiveSpeakerPosition: ""
              VerticalLayoutConfiguration:
                TileAspectRatio: ""
                TilePosition: ""
                TileOrder: ""
                TileCount: ""
            Resolution: ""
      title: CreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration
    CreateMediaInsightsPipelineConfigurationRequest_RealTimeAlertConfiguration:
      allOf:
      - $ref: '#/components/schemas/RealTimeAlertConfiguration'
      - description: The configuration settings for the real-time alerts in a media
          insights pipeline configuration.
      example:
        Disabled: ""
        Rules: ""
      title: CreateMediaInsightsPipelineConfigurationRequest_RealTimeAlertConfiguration
    MediaInsightsPipelineConfiguration_RealTimeAlertConfiguration:
      allOf:
      - $ref: '#/components/schemas/RealTimeAlertConfiguration'
      - description: Lists the rules that trigger a real-time alert.
      example:
        Disabled: ""
        Rules: ""
      title: MediaInsightsPipelineConfiguration_RealTimeAlertConfiguration
    CreateMediaInsightsPipelineRequest_KinesisVideoStreamSourceRuntimeConfiguration:
      allOf:
      - $ref: '#/components/schemas/KinesisVideoStreamSourceRuntimeConfiguration'
      - description: The runtime configuration for the Kinesis video stream source
          of the media insights pipeline.
      example:
        MediaSampleRate: ""
        MediaEncoding: ""
        Streams: ""
      title: CreateMediaInsightsPipelineRequest_KinesisVideoStreamSourceRuntimeConfiguration
    CreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration:
      allOf:
      - $ref: '#/components/schemas/KinesisVideoStreamRecordingSourceRuntimeConfiguration'
      - description: The runtime configuration for the Kinesis video recording stream
          source.
      example:
        FragmentSelector:
          FragmentSelectorType: ""
          TimestampRange:
            StartTimestamp: ""
            EndTimestamp: ""
        Streams: ""
      title: CreateMediaInsightsPipelineRequest_KinesisVideoStreamRecordingSourceRuntimeConfiguration
    CreateMediaInsightsPipelineRequest_S3RecordingSinkRuntimeConfiguration:
      allOf:
      - $ref: '#/components/schemas/S3RecordingSinkRuntimeConfiguration'
      - description: "The runtime configuration for the S3 recording sink. If specified,\
          \ the settings in this structure override any settings in <code>S3RecordingSinkConfiguration</code>."
      example:
        Destination: ""
        RecordingFileFormat: ""
      title: CreateMediaInsightsPipelineRequest_S3RecordingSinkRuntimeConfiguration
    MediaInsightsPipeline_KinesisVideoStreamSourceRuntimeConfiguration:
      allOf:
      - $ref: '#/components/schemas/KinesisVideoStreamSourceRuntimeConfiguration'
      - description: The configuration settings for a Kinesis runtime video stream
          in a media insights pipeline.
      example:
        MediaSampleRate: ""
        MediaEncoding: ""
        Streams: ""
      title: MediaInsightsPipeline_KinesisVideoStreamSourceRuntimeConfiguration
    MediaInsightsPipeline_KinesisVideoStreamRecordingSourceRuntimeConfiguration:
      allOf:
      - $ref: '#/components/schemas/KinesisVideoStreamRecordingSourceRuntimeConfiguration'
      - description: The runtime configuration settings for a Kinesis recording video
          stream in a media insights pipeline.
      example:
        FragmentSelector:
          FragmentSelectorType: ""
          TimestampRange:
            StartTimestamp: ""
            EndTimestamp: ""
        Streams: ""
      title: MediaInsightsPipeline_KinesisVideoStreamRecordingSourceRuntimeConfiguration
    MediaInsightsPipeline_S3RecordingSinkRuntimeConfiguration:
      allOf:
      - $ref: '#/components/schemas/S3RecordingSinkRuntimeConfiguration'
      - description: The runtime configuration of the Amazon S3 bucket that stores
          recordings in a media insights pipeline.
      example:
        Destination: ""
        RecordingFileFormat: ""
      title: MediaInsightsPipeline_S3RecordingSinkRuntimeConfiguration
    MediaPipeline_MediaCapturePipeline:
      allOf:
      - $ref: '#/components/schemas/MediaCapturePipeline'
      - description: A pipeline that enables users to capture audio and video.
      example:
        Status: ""
        UpdatedTimestamp: ""
        CreatedTimestamp: ""
        SourceArn: ""
        ChimeSdkMeetingConfiguration:
          SourceConfiguration:
            SelectedVideoStreams:
              ExternalUserIds: ""
              AttendeeIds: ""
          ArtifactsConfiguration:
            Video:
              MuxType: ""
              State: ""
            Content:
              MuxType: ""
              State: ""
            Audio:
              MuxType: ""
            CompositedVideo:
              Layout: ""
              GridViewConfiguration:
                ContentShareLayout: ""
                PresenterOnlyConfiguration:
                  PresenterPosition: ""
                VideoAttribute:
                  CornerRadius: ""
                  BorderThickness: ""
                  BorderColor: ""
                  HighlightColor: ""
                HorizontalLayoutConfiguration:
                  TileAspectRatio: ""
                  TilePosition: ""
                  TileOrder: ""
                  TileCount: ""
                CanvasOrientation: ""
                ActiveSpeakerOnlyConfiguration:
                  ActiveSpeakerPosition: ""
                VerticalLayoutConfiguration:
                  TileAspectRatio: ""
                  TilePosition: ""
                  TileOrder: ""
                  TileCount: ""
              Resolution: ""
        MediaPipelineId: ""
        SourceType: ""
        SinkArn: ""
        MediaPipelineArn: ""
        SinkType: ""
      title: MediaPipeline_MediaCapturePipeline
    MediaPipeline_MediaLiveConnectorPipeline:
      allOf:
      - $ref: '#/components/schemas/MediaLiveConnectorPipeline'
      - description: The connector pipeline of the media pipeline.
      example:
        Status: ""
        UpdatedTimestamp: ""
        Sinks: ""
        CreatedTimestamp: ""
        MediaPipelineId: ""
        Sources: ""
        MediaPipelineArn: ""
      title: MediaPipeline_MediaLiveConnectorPipeline
    MediaPipeline_MediaConcatenationPipeline:
      allOf:
      - $ref: '#/components/schemas/MediaConcatenationPipeline'
      - description: The media concatenation pipeline in a media pipeline.
      example:
        Status: ""
        UpdatedTimestamp: ""
        Sinks: ""
        CreatedTimestamp: ""
        MediaPipelineId: ""
        MediaPipelineArn: ""
        Sources: ""
      title: MediaPipeline_MediaConcatenationPipeline
    MediaPipeline_MediaInsightsPipeline:
      allOf:
      - $ref: '#/components/schemas/MediaInsightsPipeline'
      - description: The media insights pipeline of a media pipeline.
      example:
        Status: ""
        KinesisVideoStreamSourceRuntimeConfiguration:
          MediaSampleRate: ""
          MediaEncoding: ""
          Streams: ""
        CreatedTimestamp: ""
        MediaPipelineId: ""
        S3RecordingSinkRuntimeConfiguration:
          Destination: ""
          RecordingFileFormat: ""
        MediaInsightsRuntimeMetadata: ""
        MediaPipelineArn: ""
        KinesisVideoStreamRecordingSourceRuntimeConfiguration:
          FragmentSelector:
            FragmentSelectorType: ""
            TimestampRange:
              StartTimestamp: ""
              EndTimestamp: ""
          Streams: ""
        MediaInsightsPipelineConfigurationArn: ""
      title: MediaPipeline_MediaInsightsPipeline
    RealTimeAlertRule_KeywordMatchConfiguration:
      allOf:
      - $ref: '#/components/schemas/KeywordMatchConfiguration'
      - description: Specifies the settings for matching the keywords in a real-time
          alert rule.
      title: RealTimeAlertRule_KeywordMatchConfiguration
    RealTimeAlertRule_SentimentConfiguration:
      allOf:
      - $ref: '#/components/schemas/SentimentConfiguration'
      - description: Specifies the settings for predicting sentiment in a real-time
          alert rule.
      title: RealTimeAlertRule_SentimentConfiguration
    RealTimeAlertRule_IssueDetectionConfiguration:
      allOf:
      - $ref: '#/components/schemas/IssueDetectionConfiguration'
      - description: Specifies the issue detection settings for a real-time alert
          rule.
      title: RealTimeAlertRule_IssueDetectionConfiguration
    StreamConfiguration_StreamChannelDefinition:
      allOf:
      - $ref: '#/components/schemas/StreamChannelDefinition'
      - description: The streaming channel definition in the stream configuration.
      title: StreamConfiguration_StreamChannelDefinition
    UpdateMediaInsightsPipelineConfigurationRequest_RealTimeAlertConfiguration:
      allOf:
      - $ref: '#/components/schemas/RealTimeAlertConfiguration'
      - description: The configuration settings for real-time alerts for the media
          insights pipeline.
      example:
        Disabled: ""
        Rules: ""
      title: UpdateMediaInsightsPipelineConfigurationRequest_RealTimeAlertConfiguration
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
