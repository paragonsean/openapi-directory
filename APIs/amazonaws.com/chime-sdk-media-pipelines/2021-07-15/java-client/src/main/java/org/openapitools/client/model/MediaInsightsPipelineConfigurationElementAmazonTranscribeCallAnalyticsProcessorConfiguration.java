/*
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettings;
import org.openapitools.client.model.CallAnalyticsLanguageCode;
import org.openapitools.client.model.ContentType;
import org.openapitools.client.model.PartialResultsStability;
import org.openapitools.client.model.VocabularyFilterMethod;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:10.342276-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration {
  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "LanguageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private CallAnalyticsLanguageCode languageCode;

  public static final String SERIALIZED_NAME_VOCABULARY_NAME = "VocabularyName";
  @SerializedName(SERIALIZED_NAME_VOCABULARY_NAME)
  private String vocabularyName;

  public static final String SERIALIZED_NAME_VOCABULARY_FILTER_NAME = "VocabularyFilterName";
  @SerializedName(SERIALIZED_NAME_VOCABULARY_FILTER_NAME)
  private String vocabularyFilterName;

  public static final String SERIALIZED_NAME_VOCABULARY_FILTER_METHOD = "VocabularyFilterMethod";
  @SerializedName(SERIALIZED_NAME_VOCABULARY_FILTER_METHOD)
  private VocabularyFilterMethod vocabularyFilterMethod;

  public static final String SERIALIZED_NAME_LANGUAGE_MODEL_NAME = "LanguageModelName";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_MODEL_NAME)
  private String languageModelName;

  public static final String SERIALIZED_NAME_ENABLE_PARTIAL_RESULTS_STABILIZATION = "EnablePartialResultsStabilization";
  @SerializedName(SERIALIZED_NAME_ENABLE_PARTIAL_RESULTS_STABILIZATION)
  private Boolean enablePartialResultsStabilization;

  public static final String SERIALIZED_NAME_PARTIAL_RESULTS_STABILITY = "PartialResultsStability";
  @SerializedName(SERIALIZED_NAME_PARTIAL_RESULTS_STABILITY)
  private PartialResultsStability partialResultsStability;

  public static final String SERIALIZED_NAME_CONTENT_IDENTIFICATION_TYPE = "ContentIdentificationType";
  @SerializedName(SERIALIZED_NAME_CONTENT_IDENTIFICATION_TYPE)
  private ContentType contentIdentificationType;

  public static final String SERIALIZED_NAME_CONTENT_REDACTION_TYPE = "ContentRedactionType";
  @SerializedName(SERIALIZED_NAME_CONTENT_REDACTION_TYPE)
  private ContentType contentRedactionType;

  public static final String SERIALIZED_NAME_PII_ENTITY_TYPES = "PiiEntityTypes";
  @SerializedName(SERIALIZED_NAME_PII_ENTITY_TYPES)
  private String piiEntityTypes;

  public static final String SERIALIZED_NAME_FILTER_PARTIAL_RESULTS = "FilterPartialResults";
  @SerializedName(SERIALIZED_NAME_FILTER_PARTIAL_RESULTS)
  private Boolean filterPartialResults;

  public static final String SERIALIZED_NAME_POST_CALL_ANALYTICS_SETTINGS = "PostCallAnalyticsSettings";
  @SerializedName(SERIALIZED_NAME_POST_CALL_ANALYTICS_SETTINGS)
  private AmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettings postCallAnalyticsSettings;

  public static final String SERIALIZED_NAME_CALL_ANALYTICS_STREAM_CATEGORIES = "CallAnalyticsStreamCategories";
  @SerializedName(SERIALIZED_NAME_CALL_ANALYTICS_STREAM_CATEGORIES)
  private List callAnalyticsStreamCategories;

  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration() {
  }

  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration languageCode(CallAnalyticsLanguageCode languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Get languageCode
   * @return languageCode
   */
  @javax.annotation.Nonnull
  public CallAnalyticsLanguageCode getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(CallAnalyticsLanguageCode languageCode) {
    this.languageCode = languageCode;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration vocabularyName(String vocabularyName) {
    this.vocabularyName = vocabularyName;
    return this;
  }

  /**
   * Get vocabularyName
   * @return vocabularyName
   */
  @javax.annotation.Nullable
  public String getVocabularyName() {
    return vocabularyName;
  }

  public void setVocabularyName(String vocabularyName) {
    this.vocabularyName = vocabularyName;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration vocabularyFilterName(String vocabularyFilterName) {
    this.vocabularyFilterName = vocabularyFilterName;
    return this;
  }

  /**
   * Get vocabularyFilterName
   * @return vocabularyFilterName
   */
  @javax.annotation.Nullable
  public String getVocabularyFilterName() {
    return vocabularyFilterName;
  }

  public void setVocabularyFilterName(String vocabularyFilterName) {
    this.vocabularyFilterName = vocabularyFilterName;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration vocabularyFilterMethod(VocabularyFilterMethod vocabularyFilterMethod) {
    this.vocabularyFilterMethod = vocabularyFilterMethod;
    return this;
  }

  /**
   * Get vocabularyFilterMethod
   * @return vocabularyFilterMethod
   */
  @javax.annotation.Nullable
  public VocabularyFilterMethod getVocabularyFilterMethod() {
    return vocabularyFilterMethod;
  }

  public void setVocabularyFilterMethod(VocabularyFilterMethod vocabularyFilterMethod) {
    this.vocabularyFilterMethod = vocabularyFilterMethod;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration languageModelName(String languageModelName) {
    this.languageModelName = languageModelName;
    return this;
  }

  /**
   * Get languageModelName
   * @return languageModelName
   */
  @javax.annotation.Nullable
  public String getLanguageModelName() {
    return languageModelName;
  }

  public void setLanguageModelName(String languageModelName) {
    this.languageModelName = languageModelName;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration enablePartialResultsStabilization(Boolean enablePartialResultsStabilization) {
    this.enablePartialResultsStabilization = enablePartialResultsStabilization;
    return this;
  }

  /**
   * Get enablePartialResultsStabilization
   * @return enablePartialResultsStabilization
   */
  @javax.annotation.Nullable
  public Boolean getEnablePartialResultsStabilization() {
    return enablePartialResultsStabilization;
  }

  public void setEnablePartialResultsStabilization(Boolean enablePartialResultsStabilization) {
    this.enablePartialResultsStabilization = enablePartialResultsStabilization;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration partialResultsStability(PartialResultsStability partialResultsStability) {
    this.partialResultsStability = partialResultsStability;
    return this;
  }

  /**
   * Get partialResultsStability
   * @return partialResultsStability
   */
  @javax.annotation.Nullable
  public PartialResultsStability getPartialResultsStability() {
    return partialResultsStability;
  }

  public void setPartialResultsStability(PartialResultsStability partialResultsStability) {
    this.partialResultsStability = partialResultsStability;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration contentIdentificationType(ContentType contentIdentificationType) {
    this.contentIdentificationType = contentIdentificationType;
    return this;
  }

  /**
   * Get contentIdentificationType
   * @return contentIdentificationType
   */
  @javax.annotation.Nullable
  public ContentType getContentIdentificationType() {
    return contentIdentificationType;
  }

  public void setContentIdentificationType(ContentType contentIdentificationType) {
    this.contentIdentificationType = contentIdentificationType;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration contentRedactionType(ContentType contentRedactionType) {
    this.contentRedactionType = contentRedactionType;
    return this;
  }

  /**
   * Get contentRedactionType
   * @return contentRedactionType
   */
  @javax.annotation.Nullable
  public ContentType getContentRedactionType() {
    return contentRedactionType;
  }

  public void setContentRedactionType(ContentType contentRedactionType) {
    this.contentRedactionType = contentRedactionType;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration piiEntityTypes(String piiEntityTypes) {
    this.piiEntityTypes = piiEntityTypes;
    return this;
  }

  /**
   * Get piiEntityTypes
   * @return piiEntityTypes
   */
  @javax.annotation.Nullable
  public String getPiiEntityTypes() {
    return piiEntityTypes;
  }

  public void setPiiEntityTypes(String piiEntityTypes) {
    this.piiEntityTypes = piiEntityTypes;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration filterPartialResults(Boolean filterPartialResults) {
    this.filterPartialResults = filterPartialResults;
    return this;
  }

  /**
   * Get filterPartialResults
   * @return filterPartialResults
   */
  @javax.annotation.Nullable
  public Boolean getFilterPartialResults() {
    return filterPartialResults;
  }

  public void setFilterPartialResults(Boolean filterPartialResults) {
    this.filterPartialResults = filterPartialResults;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration postCallAnalyticsSettings(AmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettings postCallAnalyticsSettings) {
    this.postCallAnalyticsSettings = postCallAnalyticsSettings;
    return this;
  }

  /**
   * Get postCallAnalyticsSettings
   * @return postCallAnalyticsSettings
   */
  @javax.annotation.Nullable
  public AmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettings getPostCallAnalyticsSettings() {
    return postCallAnalyticsSettings;
  }

  public void setPostCallAnalyticsSettings(AmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettings postCallAnalyticsSettings) {
    this.postCallAnalyticsSettings = postCallAnalyticsSettings;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration callAnalyticsStreamCategories(List callAnalyticsStreamCategories) {
    this.callAnalyticsStreamCategories = callAnalyticsStreamCategories;
    return this;
  }

  /**
   * Get callAnalyticsStreamCategories
   * @return callAnalyticsStreamCategories
   */
  @javax.annotation.Nullable
  public List getCallAnalyticsStreamCategories() {
    return callAnalyticsStreamCategories;
  }

  public void setCallAnalyticsStreamCategories(List callAnalyticsStreamCategories) {
    this.callAnalyticsStreamCategories = callAnalyticsStreamCategories;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration = (MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration) o;
    return Objects.equals(this.languageCode, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.languageCode) &&
        Objects.equals(this.vocabularyName, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.vocabularyName) &&
        Objects.equals(this.vocabularyFilterName, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.vocabularyFilterName) &&
        Objects.equals(this.vocabularyFilterMethod, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.vocabularyFilterMethod) &&
        Objects.equals(this.languageModelName, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.languageModelName) &&
        Objects.equals(this.enablePartialResultsStabilization, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.enablePartialResultsStabilization) &&
        Objects.equals(this.partialResultsStability, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.partialResultsStability) &&
        Objects.equals(this.contentIdentificationType, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.contentIdentificationType) &&
        Objects.equals(this.contentRedactionType, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.contentRedactionType) &&
        Objects.equals(this.piiEntityTypes, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.piiEntityTypes) &&
        Objects.equals(this.filterPartialResults, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.filterPartialResults) &&
        Objects.equals(this.postCallAnalyticsSettings, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.postCallAnalyticsSettings) &&
        Objects.equals(this.callAnalyticsStreamCategories, mediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.callAnalyticsStreamCategories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(languageCode, vocabularyName, vocabularyFilterName, vocabularyFilterMethod, languageModelName, enablePartialResultsStabilization, partialResultsStability, contentIdentificationType, contentRedactionType, piiEntityTypes, filterPartialResults, postCallAnalyticsSettings, callAnalyticsStreamCategories);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration {\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    vocabularyName: ").append(toIndentedString(vocabularyName)).append("\n");
    sb.append("    vocabularyFilterName: ").append(toIndentedString(vocabularyFilterName)).append("\n");
    sb.append("    vocabularyFilterMethod: ").append(toIndentedString(vocabularyFilterMethod)).append("\n");
    sb.append("    languageModelName: ").append(toIndentedString(languageModelName)).append("\n");
    sb.append("    enablePartialResultsStabilization: ").append(toIndentedString(enablePartialResultsStabilization)).append("\n");
    sb.append("    partialResultsStability: ").append(toIndentedString(partialResultsStability)).append("\n");
    sb.append("    contentIdentificationType: ").append(toIndentedString(contentIdentificationType)).append("\n");
    sb.append("    contentRedactionType: ").append(toIndentedString(contentRedactionType)).append("\n");
    sb.append("    piiEntityTypes: ").append(toIndentedString(piiEntityTypes)).append("\n");
    sb.append("    filterPartialResults: ").append(toIndentedString(filterPartialResults)).append("\n");
    sb.append("    postCallAnalyticsSettings: ").append(toIndentedString(postCallAnalyticsSettings)).append("\n");
    sb.append("    callAnalyticsStreamCategories: ").append(toIndentedString(callAnalyticsStreamCategories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LanguageCode");
    openapiFields.add("VocabularyName");
    openapiFields.add("VocabularyFilterName");
    openapiFields.add("VocabularyFilterMethod");
    openapiFields.add("LanguageModelName");
    openapiFields.add("EnablePartialResultsStabilization");
    openapiFields.add("PartialResultsStability");
    openapiFields.add("ContentIdentificationType");
    openapiFields.add("ContentRedactionType");
    openapiFields.add("PiiEntityTypes");
    openapiFields.add("FilterPartialResults");
    openapiFields.add("PostCallAnalyticsSettings");
    openapiFields.add("CallAnalyticsStreamCategories");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("LanguageCode");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration is not found in the empty JSON string", MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `LanguageCode`
      CallAnalyticsLanguageCode.validateJsonElement(jsonObj.get("LanguageCode"));
      // validate the optional field `VocabularyName`
      if (jsonObj.get("VocabularyName") != null && !jsonObj.get("VocabularyName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VocabularyName"));
      }
      // validate the optional field `VocabularyFilterName`
      if (jsonObj.get("VocabularyFilterName") != null && !jsonObj.get("VocabularyFilterName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VocabularyFilterName"));
      }
      // validate the optional field `VocabularyFilterMethod`
      if (jsonObj.get("VocabularyFilterMethod") != null && !jsonObj.get("VocabularyFilterMethod").isJsonNull()) {
        VocabularyFilterMethod.validateJsonElement(jsonObj.get("VocabularyFilterMethod"));
      }
      // validate the optional field `LanguageModelName`
      if (jsonObj.get("LanguageModelName") != null && !jsonObj.get("LanguageModelName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LanguageModelName"));
      }
      // validate the optional field `EnablePartialResultsStabilization`
      if (jsonObj.get("EnablePartialResultsStabilization") != null && !jsonObj.get("EnablePartialResultsStabilization").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnablePartialResultsStabilization"));
      }
      // validate the optional field `PartialResultsStability`
      if (jsonObj.get("PartialResultsStability") != null && !jsonObj.get("PartialResultsStability").isJsonNull()) {
        PartialResultsStability.validateJsonElement(jsonObj.get("PartialResultsStability"));
      }
      // validate the optional field `ContentIdentificationType`
      if (jsonObj.get("ContentIdentificationType") != null && !jsonObj.get("ContentIdentificationType").isJsonNull()) {
        ContentType.validateJsonElement(jsonObj.get("ContentIdentificationType"));
      }
      // validate the optional field `ContentRedactionType`
      if (jsonObj.get("ContentRedactionType") != null && !jsonObj.get("ContentRedactionType").isJsonNull()) {
        ContentType.validateJsonElement(jsonObj.get("ContentRedactionType"));
      }
      // validate the optional field `PiiEntityTypes`
      if (jsonObj.get("PiiEntityTypes") != null && !jsonObj.get("PiiEntityTypes").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PiiEntityTypes"));
      }
      // validate the optional field `FilterPartialResults`
      if (jsonObj.get("FilterPartialResults") != null && !jsonObj.get("FilterPartialResults").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("FilterPartialResults"));
      }
      // validate the optional field `PostCallAnalyticsSettings`
      if (jsonObj.get("PostCallAnalyticsSettings") != null && !jsonObj.get("PostCallAnalyticsSettings").isJsonNull()) {
        AmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettings.validateJsonElement(jsonObj.get("PostCallAnalyticsSettings"));
      }
      // validate the optional field `CallAnalyticsStreamCategories`
      if (jsonObj.get("CallAnalyticsStreamCategories") != null && !jsonObj.get("CallAnalyticsStreamCategories").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CallAnalyticsStreamCategories"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration>() {
           @Override
           public void write(JsonWriter out, MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration
   * @throws IOException if the JSON string is invalid with respect to MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration
   */
  public static MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.class);
  }

  /**
   * Convert an instance of MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

