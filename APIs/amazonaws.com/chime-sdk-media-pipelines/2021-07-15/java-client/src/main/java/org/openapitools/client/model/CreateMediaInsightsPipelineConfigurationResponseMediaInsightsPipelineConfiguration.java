/*
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MediaInsightsPipelineConfigurationRealTimeAlertConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:10.342276-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration {
  public static final String SERIALIZED_NAME_MEDIA_INSIGHTS_PIPELINE_CONFIGURATION_NAME = "MediaInsightsPipelineConfigurationName";
  @SerializedName(SERIALIZED_NAME_MEDIA_INSIGHTS_PIPELINE_CONFIGURATION_NAME)
  private String mediaInsightsPipelineConfigurationName;

  public static final String SERIALIZED_NAME_MEDIA_INSIGHTS_PIPELINE_CONFIGURATION_ARN = "MediaInsightsPipelineConfigurationArn";
  @SerializedName(SERIALIZED_NAME_MEDIA_INSIGHTS_PIPELINE_CONFIGURATION_ARN)
  private String mediaInsightsPipelineConfigurationArn;

  public static final String SERIALIZED_NAME_RESOURCE_ACCESS_ROLE_ARN = "ResourceAccessRoleArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ACCESS_ROLE_ARN)
  private String resourceAccessRoleArn;

  public static final String SERIALIZED_NAME_REAL_TIME_ALERT_CONFIGURATION = "RealTimeAlertConfiguration";
  @SerializedName(SERIALIZED_NAME_REAL_TIME_ALERT_CONFIGURATION)
  private MediaInsightsPipelineConfigurationRealTimeAlertConfiguration realTimeAlertConfiguration;

  public static final String SERIALIZED_NAME_ELEMENTS = "Elements";
  @SerializedName(SERIALIZED_NAME_ELEMENTS)
  private List elements;

  public static final String SERIALIZED_NAME_MEDIA_INSIGHTS_PIPELINE_CONFIGURATION_ID = "MediaInsightsPipelineConfigurationId";
  @SerializedName(SERIALIZED_NAME_MEDIA_INSIGHTS_PIPELINE_CONFIGURATION_ID)
  private String mediaInsightsPipelineConfigurationId;

  public static final String SERIALIZED_NAME_CREATED_TIMESTAMP = "CreatedTimestamp";
  @SerializedName(SERIALIZED_NAME_CREATED_TIMESTAMP)
  private OffsetDateTime createdTimestamp;

  public static final String SERIALIZED_NAME_UPDATED_TIMESTAMP = "UpdatedTimestamp";
  @SerializedName(SERIALIZED_NAME_UPDATED_TIMESTAMP)
  private OffsetDateTime updatedTimestamp;

  public CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration() {
  }

  public CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration mediaInsightsPipelineConfigurationName(String mediaInsightsPipelineConfigurationName) {
    this.mediaInsightsPipelineConfigurationName = mediaInsightsPipelineConfigurationName;
    return this;
  }

  /**
   * Get mediaInsightsPipelineConfigurationName
   * @return mediaInsightsPipelineConfigurationName
   */
  @javax.annotation.Nullable
  public String getMediaInsightsPipelineConfigurationName() {
    return mediaInsightsPipelineConfigurationName;
  }

  public void setMediaInsightsPipelineConfigurationName(String mediaInsightsPipelineConfigurationName) {
    this.mediaInsightsPipelineConfigurationName = mediaInsightsPipelineConfigurationName;
  }


  public CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration mediaInsightsPipelineConfigurationArn(String mediaInsightsPipelineConfigurationArn) {
    this.mediaInsightsPipelineConfigurationArn = mediaInsightsPipelineConfigurationArn;
    return this;
  }

  /**
   * Get mediaInsightsPipelineConfigurationArn
   * @return mediaInsightsPipelineConfigurationArn
   */
  @javax.annotation.Nullable
  public String getMediaInsightsPipelineConfigurationArn() {
    return mediaInsightsPipelineConfigurationArn;
  }

  public void setMediaInsightsPipelineConfigurationArn(String mediaInsightsPipelineConfigurationArn) {
    this.mediaInsightsPipelineConfigurationArn = mediaInsightsPipelineConfigurationArn;
  }


  public CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration resourceAccessRoleArn(String resourceAccessRoleArn) {
    this.resourceAccessRoleArn = resourceAccessRoleArn;
    return this;
  }

  /**
   * Get resourceAccessRoleArn
   * @return resourceAccessRoleArn
   */
  @javax.annotation.Nullable
  public String getResourceAccessRoleArn() {
    return resourceAccessRoleArn;
  }

  public void setResourceAccessRoleArn(String resourceAccessRoleArn) {
    this.resourceAccessRoleArn = resourceAccessRoleArn;
  }


  public CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration realTimeAlertConfiguration(MediaInsightsPipelineConfigurationRealTimeAlertConfiguration realTimeAlertConfiguration) {
    this.realTimeAlertConfiguration = realTimeAlertConfiguration;
    return this;
  }

  /**
   * Get realTimeAlertConfiguration
   * @return realTimeAlertConfiguration
   */
  @javax.annotation.Nullable
  public MediaInsightsPipelineConfigurationRealTimeAlertConfiguration getRealTimeAlertConfiguration() {
    return realTimeAlertConfiguration;
  }

  public void setRealTimeAlertConfiguration(MediaInsightsPipelineConfigurationRealTimeAlertConfiguration realTimeAlertConfiguration) {
    this.realTimeAlertConfiguration = realTimeAlertConfiguration;
  }


  public CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration elements(List elements) {
    this.elements = elements;
    return this;
  }

  /**
   * Get elements
   * @return elements
   */
  @javax.annotation.Nullable
  public List getElements() {
    return elements;
  }

  public void setElements(List elements) {
    this.elements = elements;
  }


  public CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration mediaInsightsPipelineConfigurationId(String mediaInsightsPipelineConfigurationId) {
    this.mediaInsightsPipelineConfigurationId = mediaInsightsPipelineConfigurationId;
    return this;
  }

  /**
   * Get mediaInsightsPipelineConfigurationId
   * @return mediaInsightsPipelineConfigurationId
   */
  @javax.annotation.Nullable
  public String getMediaInsightsPipelineConfigurationId() {
    return mediaInsightsPipelineConfigurationId;
  }

  public void setMediaInsightsPipelineConfigurationId(String mediaInsightsPipelineConfigurationId) {
    this.mediaInsightsPipelineConfigurationId = mediaInsightsPipelineConfigurationId;
  }


  public CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration createdTimestamp(OffsetDateTime createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
    return this;
  }

  /**
   * Get createdTimestamp
   * @return createdTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedTimestamp() {
    return createdTimestamp;
  }

  public void setCreatedTimestamp(OffsetDateTime createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
  }


  public CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration updatedTimestamp(OffsetDateTime updatedTimestamp) {
    this.updatedTimestamp = updatedTimestamp;
    return this;
  }

  /**
   * Get updatedTimestamp
   * @return updatedTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedTimestamp() {
    return updatedTimestamp;
  }

  public void setUpdatedTimestamp(OffsetDateTime updatedTimestamp) {
    this.updatedTimestamp = updatedTimestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration createMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration = (CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration) o;
    return Objects.equals(this.mediaInsightsPipelineConfigurationName, createMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.mediaInsightsPipelineConfigurationName) &&
        Objects.equals(this.mediaInsightsPipelineConfigurationArn, createMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.mediaInsightsPipelineConfigurationArn) &&
        Objects.equals(this.resourceAccessRoleArn, createMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.resourceAccessRoleArn) &&
        Objects.equals(this.realTimeAlertConfiguration, createMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.realTimeAlertConfiguration) &&
        Objects.equals(this.elements, createMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.elements) &&
        Objects.equals(this.mediaInsightsPipelineConfigurationId, createMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.mediaInsightsPipelineConfigurationId) &&
        Objects.equals(this.createdTimestamp, createMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.createdTimestamp) &&
        Objects.equals(this.updatedTimestamp, createMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.updatedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mediaInsightsPipelineConfigurationName, mediaInsightsPipelineConfigurationArn, resourceAccessRoleArn, realTimeAlertConfiguration, elements, mediaInsightsPipelineConfigurationId, createdTimestamp, updatedTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration {\n");
    sb.append("    mediaInsightsPipelineConfigurationName: ").append(toIndentedString(mediaInsightsPipelineConfigurationName)).append("\n");
    sb.append("    mediaInsightsPipelineConfigurationArn: ").append(toIndentedString(mediaInsightsPipelineConfigurationArn)).append("\n");
    sb.append("    resourceAccessRoleArn: ").append(toIndentedString(resourceAccessRoleArn)).append("\n");
    sb.append("    realTimeAlertConfiguration: ").append(toIndentedString(realTimeAlertConfiguration)).append("\n");
    sb.append("    elements: ").append(toIndentedString(elements)).append("\n");
    sb.append("    mediaInsightsPipelineConfigurationId: ").append(toIndentedString(mediaInsightsPipelineConfigurationId)).append("\n");
    sb.append("    createdTimestamp: ").append(toIndentedString(createdTimestamp)).append("\n");
    sb.append("    updatedTimestamp: ").append(toIndentedString(updatedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MediaInsightsPipelineConfigurationName");
    openapiFields.add("MediaInsightsPipelineConfigurationArn");
    openapiFields.add("ResourceAccessRoleArn");
    openapiFields.add("RealTimeAlertConfiguration");
    openapiFields.add("Elements");
    openapiFields.add("MediaInsightsPipelineConfigurationId");
    openapiFields.add("CreatedTimestamp");
    openapiFields.add("UpdatedTimestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration is not found in the empty JSON string", CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `MediaInsightsPipelineConfigurationName`
      if (jsonObj.get("MediaInsightsPipelineConfigurationName") != null && !jsonObj.get("MediaInsightsPipelineConfigurationName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MediaInsightsPipelineConfigurationName"));
      }
      // validate the optional field `MediaInsightsPipelineConfigurationArn`
      if (jsonObj.get("MediaInsightsPipelineConfigurationArn") != null && !jsonObj.get("MediaInsightsPipelineConfigurationArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MediaInsightsPipelineConfigurationArn"));
      }
      // validate the optional field `ResourceAccessRoleArn`
      if (jsonObj.get("ResourceAccessRoleArn") != null && !jsonObj.get("ResourceAccessRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceAccessRoleArn"));
      }
      // validate the optional field `RealTimeAlertConfiguration`
      if (jsonObj.get("RealTimeAlertConfiguration") != null && !jsonObj.get("RealTimeAlertConfiguration").isJsonNull()) {
        MediaInsightsPipelineConfigurationRealTimeAlertConfiguration.validateJsonElement(jsonObj.get("RealTimeAlertConfiguration"));
      }
      // validate the optional field `Elements`
      if (jsonObj.get("Elements") != null && !jsonObj.get("Elements").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Elements"));
      }
      // validate the optional field `MediaInsightsPipelineConfigurationId`
      if (jsonObj.get("MediaInsightsPipelineConfigurationId") != null && !jsonObj.get("MediaInsightsPipelineConfigurationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MediaInsightsPipelineConfigurationId"));
      }
      // validate the optional field `CreatedTimestamp`
      if (jsonObj.get("CreatedTimestamp") != null && !jsonObj.get("CreatedTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedTimestamp"));
      }
      // validate the optional field `UpdatedTimestamp`
      if (jsonObj.get("UpdatedTimestamp") != null && !jsonObj.get("UpdatedTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("UpdatedTimestamp"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration>() {
           @Override
           public void write(JsonWriter out, CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration
   * @throws IOException if the JSON string is invalid with respect to CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration
   */
  public static CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration.class);
  }

  /**
   * Convert an instance of CreateMediaInsightsPipelineConfigurationResponseMediaInsightsPipelineConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

