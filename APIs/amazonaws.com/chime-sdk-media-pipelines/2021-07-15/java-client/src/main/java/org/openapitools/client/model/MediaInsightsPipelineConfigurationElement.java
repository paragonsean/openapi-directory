/*
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration;
import org.openapitools.client.model.MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration;
import org.openapitools.client.model.MediaInsightsPipelineConfigurationElementKinesisDataStreamSinkConfiguration;
import org.openapitools.client.model.MediaInsightsPipelineConfigurationElementLambdaFunctionSinkConfiguration;
import org.openapitools.client.model.MediaInsightsPipelineConfigurationElementS3RecordingSinkConfiguration;
import org.openapitools.client.model.MediaInsightsPipelineConfigurationElementSnsTopicSinkConfiguration;
import org.openapitools.client.model.MediaInsightsPipelineConfigurationElementSqsQueueSinkConfiguration;
import org.openapitools.client.model.MediaInsightsPipelineConfigurationElementType;
import org.openapitools.client.model.MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An element in a media insights pipeline configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:10.342276-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MediaInsightsPipelineConfigurationElement {
  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private MediaInsightsPipelineConfigurationElementType type;

  public static final String SERIALIZED_NAME_AMAZON_TRANSCRIBE_CALL_ANALYTICS_PROCESSOR_CONFIGURATION = "AmazonTranscribeCallAnalyticsProcessorConfiguration";
  @SerializedName(SERIALIZED_NAME_AMAZON_TRANSCRIBE_CALL_ANALYTICS_PROCESSOR_CONFIGURATION)
  private MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration amazonTranscribeCallAnalyticsProcessorConfiguration;

  public static final String SERIALIZED_NAME_AMAZON_TRANSCRIBE_PROCESSOR_CONFIGURATION = "AmazonTranscribeProcessorConfiguration";
  @SerializedName(SERIALIZED_NAME_AMAZON_TRANSCRIBE_PROCESSOR_CONFIGURATION)
  private MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration amazonTranscribeProcessorConfiguration;

  public static final String SERIALIZED_NAME_KINESIS_DATA_STREAM_SINK_CONFIGURATION = "KinesisDataStreamSinkConfiguration";
  @SerializedName(SERIALIZED_NAME_KINESIS_DATA_STREAM_SINK_CONFIGURATION)
  private MediaInsightsPipelineConfigurationElementKinesisDataStreamSinkConfiguration kinesisDataStreamSinkConfiguration;

  public static final String SERIALIZED_NAME_S3_RECORDING_SINK_CONFIGURATION = "S3RecordingSinkConfiguration";
  @SerializedName(SERIALIZED_NAME_S3_RECORDING_SINK_CONFIGURATION)
  private MediaInsightsPipelineConfigurationElementS3RecordingSinkConfiguration s3RecordingSinkConfiguration;

  public static final String SERIALIZED_NAME_VOICE_ANALYTICS_PROCESSOR_CONFIGURATION = "VoiceAnalyticsProcessorConfiguration";
  @SerializedName(SERIALIZED_NAME_VOICE_ANALYTICS_PROCESSOR_CONFIGURATION)
  private MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfiguration voiceAnalyticsProcessorConfiguration;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_SINK_CONFIGURATION = "LambdaFunctionSinkConfiguration";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_SINK_CONFIGURATION)
  private MediaInsightsPipelineConfigurationElementLambdaFunctionSinkConfiguration lambdaFunctionSinkConfiguration;

  public static final String SERIALIZED_NAME_SQS_QUEUE_SINK_CONFIGURATION = "SqsQueueSinkConfiguration";
  @SerializedName(SERIALIZED_NAME_SQS_QUEUE_SINK_CONFIGURATION)
  private MediaInsightsPipelineConfigurationElementSqsQueueSinkConfiguration sqsQueueSinkConfiguration;

  public static final String SERIALIZED_NAME_SNS_TOPIC_SINK_CONFIGURATION = "SnsTopicSinkConfiguration";
  @SerializedName(SERIALIZED_NAME_SNS_TOPIC_SINK_CONFIGURATION)
  private MediaInsightsPipelineConfigurationElementSnsTopicSinkConfiguration snsTopicSinkConfiguration;

  public MediaInsightsPipelineConfigurationElement() {
  }

  public MediaInsightsPipelineConfigurationElement type(MediaInsightsPipelineConfigurationElementType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  public MediaInsightsPipelineConfigurationElementType getType() {
    return type;
  }

  public void setType(MediaInsightsPipelineConfigurationElementType type) {
    this.type = type;
  }


  public MediaInsightsPipelineConfigurationElement amazonTranscribeCallAnalyticsProcessorConfiguration(MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration amazonTranscribeCallAnalyticsProcessorConfiguration) {
    this.amazonTranscribeCallAnalyticsProcessorConfiguration = amazonTranscribeCallAnalyticsProcessorConfiguration;
    return this;
  }

  /**
   * Get amazonTranscribeCallAnalyticsProcessorConfiguration
   * @return amazonTranscribeCallAnalyticsProcessorConfiguration
   */
  @javax.annotation.Nullable
  public MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration getAmazonTranscribeCallAnalyticsProcessorConfiguration() {
    return amazonTranscribeCallAnalyticsProcessorConfiguration;
  }

  public void setAmazonTranscribeCallAnalyticsProcessorConfiguration(MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration amazonTranscribeCallAnalyticsProcessorConfiguration) {
    this.amazonTranscribeCallAnalyticsProcessorConfiguration = amazonTranscribeCallAnalyticsProcessorConfiguration;
  }


  public MediaInsightsPipelineConfigurationElement amazonTranscribeProcessorConfiguration(MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration amazonTranscribeProcessorConfiguration) {
    this.amazonTranscribeProcessorConfiguration = amazonTranscribeProcessorConfiguration;
    return this;
  }

  /**
   * Get amazonTranscribeProcessorConfiguration
   * @return amazonTranscribeProcessorConfiguration
   */
  @javax.annotation.Nullable
  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration getAmazonTranscribeProcessorConfiguration() {
    return amazonTranscribeProcessorConfiguration;
  }

  public void setAmazonTranscribeProcessorConfiguration(MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration amazonTranscribeProcessorConfiguration) {
    this.amazonTranscribeProcessorConfiguration = amazonTranscribeProcessorConfiguration;
  }


  public MediaInsightsPipelineConfigurationElement kinesisDataStreamSinkConfiguration(MediaInsightsPipelineConfigurationElementKinesisDataStreamSinkConfiguration kinesisDataStreamSinkConfiguration) {
    this.kinesisDataStreamSinkConfiguration = kinesisDataStreamSinkConfiguration;
    return this;
  }

  /**
   * Get kinesisDataStreamSinkConfiguration
   * @return kinesisDataStreamSinkConfiguration
   */
  @javax.annotation.Nullable
  public MediaInsightsPipelineConfigurationElementKinesisDataStreamSinkConfiguration getKinesisDataStreamSinkConfiguration() {
    return kinesisDataStreamSinkConfiguration;
  }

  public void setKinesisDataStreamSinkConfiguration(MediaInsightsPipelineConfigurationElementKinesisDataStreamSinkConfiguration kinesisDataStreamSinkConfiguration) {
    this.kinesisDataStreamSinkConfiguration = kinesisDataStreamSinkConfiguration;
  }


  public MediaInsightsPipelineConfigurationElement s3RecordingSinkConfiguration(MediaInsightsPipelineConfigurationElementS3RecordingSinkConfiguration s3RecordingSinkConfiguration) {
    this.s3RecordingSinkConfiguration = s3RecordingSinkConfiguration;
    return this;
  }

  /**
   * Get s3RecordingSinkConfiguration
   * @return s3RecordingSinkConfiguration
   */
  @javax.annotation.Nullable
  public MediaInsightsPipelineConfigurationElementS3RecordingSinkConfiguration getS3RecordingSinkConfiguration() {
    return s3RecordingSinkConfiguration;
  }

  public void setS3RecordingSinkConfiguration(MediaInsightsPipelineConfigurationElementS3RecordingSinkConfiguration s3RecordingSinkConfiguration) {
    this.s3RecordingSinkConfiguration = s3RecordingSinkConfiguration;
  }


  public MediaInsightsPipelineConfigurationElement voiceAnalyticsProcessorConfiguration(MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfiguration voiceAnalyticsProcessorConfiguration) {
    this.voiceAnalyticsProcessorConfiguration = voiceAnalyticsProcessorConfiguration;
    return this;
  }

  /**
   * Get voiceAnalyticsProcessorConfiguration
   * @return voiceAnalyticsProcessorConfiguration
   */
  @javax.annotation.Nullable
  public MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfiguration getVoiceAnalyticsProcessorConfiguration() {
    return voiceAnalyticsProcessorConfiguration;
  }

  public void setVoiceAnalyticsProcessorConfiguration(MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfiguration voiceAnalyticsProcessorConfiguration) {
    this.voiceAnalyticsProcessorConfiguration = voiceAnalyticsProcessorConfiguration;
  }


  public MediaInsightsPipelineConfigurationElement lambdaFunctionSinkConfiguration(MediaInsightsPipelineConfigurationElementLambdaFunctionSinkConfiguration lambdaFunctionSinkConfiguration) {
    this.lambdaFunctionSinkConfiguration = lambdaFunctionSinkConfiguration;
    return this;
  }

  /**
   * Get lambdaFunctionSinkConfiguration
   * @return lambdaFunctionSinkConfiguration
   */
  @javax.annotation.Nullable
  public MediaInsightsPipelineConfigurationElementLambdaFunctionSinkConfiguration getLambdaFunctionSinkConfiguration() {
    return lambdaFunctionSinkConfiguration;
  }

  public void setLambdaFunctionSinkConfiguration(MediaInsightsPipelineConfigurationElementLambdaFunctionSinkConfiguration lambdaFunctionSinkConfiguration) {
    this.lambdaFunctionSinkConfiguration = lambdaFunctionSinkConfiguration;
  }


  public MediaInsightsPipelineConfigurationElement sqsQueueSinkConfiguration(MediaInsightsPipelineConfigurationElementSqsQueueSinkConfiguration sqsQueueSinkConfiguration) {
    this.sqsQueueSinkConfiguration = sqsQueueSinkConfiguration;
    return this;
  }

  /**
   * Get sqsQueueSinkConfiguration
   * @return sqsQueueSinkConfiguration
   */
  @javax.annotation.Nullable
  public MediaInsightsPipelineConfigurationElementSqsQueueSinkConfiguration getSqsQueueSinkConfiguration() {
    return sqsQueueSinkConfiguration;
  }

  public void setSqsQueueSinkConfiguration(MediaInsightsPipelineConfigurationElementSqsQueueSinkConfiguration sqsQueueSinkConfiguration) {
    this.sqsQueueSinkConfiguration = sqsQueueSinkConfiguration;
  }


  public MediaInsightsPipelineConfigurationElement snsTopicSinkConfiguration(MediaInsightsPipelineConfigurationElementSnsTopicSinkConfiguration snsTopicSinkConfiguration) {
    this.snsTopicSinkConfiguration = snsTopicSinkConfiguration;
    return this;
  }

  /**
   * Get snsTopicSinkConfiguration
   * @return snsTopicSinkConfiguration
   */
  @javax.annotation.Nullable
  public MediaInsightsPipelineConfigurationElementSnsTopicSinkConfiguration getSnsTopicSinkConfiguration() {
    return snsTopicSinkConfiguration;
  }

  public void setSnsTopicSinkConfiguration(MediaInsightsPipelineConfigurationElementSnsTopicSinkConfiguration snsTopicSinkConfiguration) {
    this.snsTopicSinkConfiguration = snsTopicSinkConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MediaInsightsPipelineConfigurationElement mediaInsightsPipelineConfigurationElement = (MediaInsightsPipelineConfigurationElement) o;
    return Objects.equals(this.type, mediaInsightsPipelineConfigurationElement.type) &&
        Objects.equals(this.amazonTranscribeCallAnalyticsProcessorConfiguration, mediaInsightsPipelineConfigurationElement.amazonTranscribeCallAnalyticsProcessorConfiguration) &&
        Objects.equals(this.amazonTranscribeProcessorConfiguration, mediaInsightsPipelineConfigurationElement.amazonTranscribeProcessorConfiguration) &&
        Objects.equals(this.kinesisDataStreamSinkConfiguration, mediaInsightsPipelineConfigurationElement.kinesisDataStreamSinkConfiguration) &&
        Objects.equals(this.s3RecordingSinkConfiguration, mediaInsightsPipelineConfigurationElement.s3RecordingSinkConfiguration) &&
        Objects.equals(this.voiceAnalyticsProcessorConfiguration, mediaInsightsPipelineConfigurationElement.voiceAnalyticsProcessorConfiguration) &&
        Objects.equals(this.lambdaFunctionSinkConfiguration, mediaInsightsPipelineConfigurationElement.lambdaFunctionSinkConfiguration) &&
        Objects.equals(this.sqsQueueSinkConfiguration, mediaInsightsPipelineConfigurationElement.sqsQueueSinkConfiguration) &&
        Objects.equals(this.snsTopicSinkConfiguration, mediaInsightsPipelineConfigurationElement.snsTopicSinkConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, amazonTranscribeCallAnalyticsProcessorConfiguration, amazonTranscribeProcessorConfiguration, kinesisDataStreamSinkConfiguration, s3RecordingSinkConfiguration, voiceAnalyticsProcessorConfiguration, lambdaFunctionSinkConfiguration, sqsQueueSinkConfiguration, snsTopicSinkConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MediaInsightsPipelineConfigurationElement {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    amazonTranscribeCallAnalyticsProcessorConfiguration: ").append(toIndentedString(amazonTranscribeCallAnalyticsProcessorConfiguration)).append("\n");
    sb.append("    amazonTranscribeProcessorConfiguration: ").append(toIndentedString(amazonTranscribeProcessorConfiguration)).append("\n");
    sb.append("    kinesisDataStreamSinkConfiguration: ").append(toIndentedString(kinesisDataStreamSinkConfiguration)).append("\n");
    sb.append("    s3RecordingSinkConfiguration: ").append(toIndentedString(s3RecordingSinkConfiguration)).append("\n");
    sb.append("    voiceAnalyticsProcessorConfiguration: ").append(toIndentedString(voiceAnalyticsProcessorConfiguration)).append("\n");
    sb.append("    lambdaFunctionSinkConfiguration: ").append(toIndentedString(lambdaFunctionSinkConfiguration)).append("\n");
    sb.append("    sqsQueueSinkConfiguration: ").append(toIndentedString(sqsQueueSinkConfiguration)).append("\n");
    sb.append("    snsTopicSinkConfiguration: ").append(toIndentedString(snsTopicSinkConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Type");
    openapiFields.add("AmazonTranscribeCallAnalyticsProcessorConfiguration");
    openapiFields.add("AmazonTranscribeProcessorConfiguration");
    openapiFields.add("KinesisDataStreamSinkConfiguration");
    openapiFields.add("S3RecordingSinkConfiguration");
    openapiFields.add("VoiceAnalyticsProcessorConfiguration");
    openapiFields.add("LambdaFunctionSinkConfiguration");
    openapiFields.add("SqsQueueSinkConfiguration");
    openapiFields.add("SnsTopicSinkConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Type");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MediaInsightsPipelineConfigurationElement
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MediaInsightsPipelineConfigurationElement.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MediaInsightsPipelineConfigurationElement is not found in the empty JSON string", MediaInsightsPipelineConfigurationElement.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MediaInsightsPipelineConfigurationElement.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MediaInsightsPipelineConfigurationElement` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MediaInsightsPipelineConfigurationElement.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Type`
      MediaInsightsPipelineConfigurationElementType.validateJsonElement(jsonObj.get("Type"));
      // validate the optional field `AmazonTranscribeCallAnalyticsProcessorConfiguration`
      if (jsonObj.get("AmazonTranscribeCallAnalyticsProcessorConfiguration") != null && !jsonObj.get("AmazonTranscribeCallAnalyticsProcessorConfiguration").isJsonNull()) {
        MediaInsightsPipelineConfigurationElementAmazonTranscribeCallAnalyticsProcessorConfiguration.validateJsonElement(jsonObj.get("AmazonTranscribeCallAnalyticsProcessorConfiguration"));
      }
      // validate the optional field `AmazonTranscribeProcessorConfiguration`
      if (jsonObj.get("AmazonTranscribeProcessorConfiguration") != null && !jsonObj.get("AmazonTranscribeProcessorConfiguration").isJsonNull()) {
        MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.validateJsonElement(jsonObj.get("AmazonTranscribeProcessorConfiguration"));
      }
      // validate the optional field `KinesisDataStreamSinkConfiguration`
      if (jsonObj.get("KinesisDataStreamSinkConfiguration") != null && !jsonObj.get("KinesisDataStreamSinkConfiguration").isJsonNull()) {
        MediaInsightsPipelineConfigurationElementKinesisDataStreamSinkConfiguration.validateJsonElement(jsonObj.get("KinesisDataStreamSinkConfiguration"));
      }
      // validate the optional field `S3RecordingSinkConfiguration`
      if (jsonObj.get("S3RecordingSinkConfiguration") != null && !jsonObj.get("S3RecordingSinkConfiguration").isJsonNull()) {
        MediaInsightsPipelineConfigurationElementS3RecordingSinkConfiguration.validateJsonElement(jsonObj.get("S3RecordingSinkConfiguration"));
      }
      // validate the optional field `VoiceAnalyticsProcessorConfiguration`
      if (jsonObj.get("VoiceAnalyticsProcessorConfiguration") != null && !jsonObj.get("VoiceAnalyticsProcessorConfiguration").isJsonNull()) {
        MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfiguration.validateJsonElement(jsonObj.get("VoiceAnalyticsProcessorConfiguration"));
      }
      // validate the optional field `LambdaFunctionSinkConfiguration`
      if (jsonObj.get("LambdaFunctionSinkConfiguration") != null && !jsonObj.get("LambdaFunctionSinkConfiguration").isJsonNull()) {
        MediaInsightsPipelineConfigurationElementLambdaFunctionSinkConfiguration.validateJsonElement(jsonObj.get("LambdaFunctionSinkConfiguration"));
      }
      // validate the optional field `SqsQueueSinkConfiguration`
      if (jsonObj.get("SqsQueueSinkConfiguration") != null && !jsonObj.get("SqsQueueSinkConfiguration").isJsonNull()) {
        MediaInsightsPipelineConfigurationElementSqsQueueSinkConfiguration.validateJsonElement(jsonObj.get("SqsQueueSinkConfiguration"));
      }
      // validate the optional field `SnsTopicSinkConfiguration`
      if (jsonObj.get("SnsTopicSinkConfiguration") != null && !jsonObj.get("SnsTopicSinkConfiguration").isJsonNull()) {
        MediaInsightsPipelineConfigurationElementSnsTopicSinkConfiguration.validateJsonElement(jsonObj.get("SnsTopicSinkConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MediaInsightsPipelineConfigurationElement.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MediaInsightsPipelineConfigurationElement' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MediaInsightsPipelineConfigurationElement> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MediaInsightsPipelineConfigurationElement.class));

       return (TypeAdapter<T>) new TypeAdapter<MediaInsightsPipelineConfigurationElement>() {
           @Override
           public void write(JsonWriter out, MediaInsightsPipelineConfigurationElement value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MediaInsightsPipelineConfigurationElement read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MediaInsightsPipelineConfigurationElement given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MediaInsightsPipelineConfigurationElement
   * @throws IOException if the JSON string is invalid with respect to MediaInsightsPipelineConfigurationElement
   */
  public static MediaInsightsPipelineConfigurationElement fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MediaInsightsPipelineConfigurationElement.class);
  }

  /**
   * Convert an instance of MediaInsightsPipelineConfigurationElement to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

