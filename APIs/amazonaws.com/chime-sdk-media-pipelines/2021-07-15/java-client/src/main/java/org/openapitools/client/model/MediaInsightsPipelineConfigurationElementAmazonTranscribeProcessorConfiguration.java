/*
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CallAnalyticsLanguageCode;
import org.openapitools.client.model.ContentType;
import org.openapitools.client.model.PartialResultsStability;
import org.openapitools.client.model.VocabularyFilterMethod;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:10.342276-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration {
  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "LanguageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private CallAnalyticsLanguageCode languageCode;

  public static final String SERIALIZED_NAME_VOCABULARY_NAME = "VocabularyName";
  @SerializedName(SERIALIZED_NAME_VOCABULARY_NAME)
  private String vocabularyName;

  public static final String SERIALIZED_NAME_VOCABULARY_FILTER_NAME = "VocabularyFilterName";
  @SerializedName(SERIALIZED_NAME_VOCABULARY_FILTER_NAME)
  private String vocabularyFilterName;

  public static final String SERIALIZED_NAME_VOCABULARY_FILTER_METHOD = "VocabularyFilterMethod";
  @SerializedName(SERIALIZED_NAME_VOCABULARY_FILTER_METHOD)
  private VocabularyFilterMethod vocabularyFilterMethod;

  public static final String SERIALIZED_NAME_SHOW_SPEAKER_LABEL = "ShowSpeakerLabel";
  @SerializedName(SERIALIZED_NAME_SHOW_SPEAKER_LABEL)
  private Boolean showSpeakerLabel;

  public static final String SERIALIZED_NAME_ENABLE_PARTIAL_RESULTS_STABILIZATION = "EnablePartialResultsStabilization";
  @SerializedName(SERIALIZED_NAME_ENABLE_PARTIAL_RESULTS_STABILIZATION)
  private Boolean enablePartialResultsStabilization;

  public static final String SERIALIZED_NAME_PARTIAL_RESULTS_STABILITY = "PartialResultsStability";
  @SerializedName(SERIALIZED_NAME_PARTIAL_RESULTS_STABILITY)
  private PartialResultsStability partialResultsStability;

  public static final String SERIALIZED_NAME_CONTENT_IDENTIFICATION_TYPE = "ContentIdentificationType";
  @SerializedName(SERIALIZED_NAME_CONTENT_IDENTIFICATION_TYPE)
  private ContentType contentIdentificationType;

  public static final String SERIALIZED_NAME_CONTENT_REDACTION_TYPE = "ContentRedactionType";
  @SerializedName(SERIALIZED_NAME_CONTENT_REDACTION_TYPE)
  private ContentType contentRedactionType;

  public static final String SERIALIZED_NAME_PII_ENTITY_TYPES = "PiiEntityTypes";
  @SerializedName(SERIALIZED_NAME_PII_ENTITY_TYPES)
  private String piiEntityTypes;

  public static final String SERIALIZED_NAME_LANGUAGE_MODEL_NAME = "LanguageModelName";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_MODEL_NAME)
  private String languageModelName;

  public static final String SERIALIZED_NAME_FILTER_PARTIAL_RESULTS = "FilterPartialResults";
  @SerializedName(SERIALIZED_NAME_FILTER_PARTIAL_RESULTS)
  private Boolean filterPartialResults;

  public static final String SERIALIZED_NAME_IDENTIFY_LANGUAGE = "IdentifyLanguage";
  @SerializedName(SERIALIZED_NAME_IDENTIFY_LANGUAGE)
  private Boolean identifyLanguage;

  public static final String SERIALIZED_NAME_LANGUAGE_OPTIONS = "LanguageOptions";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_OPTIONS)
  private String languageOptions;

  public static final String SERIALIZED_NAME_PREFERRED_LANGUAGE = "PreferredLanguage";
  @SerializedName(SERIALIZED_NAME_PREFERRED_LANGUAGE)
  private CallAnalyticsLanguageCode preferredLanguage;

  public static final String SERIALIZED_NAME_VOCABULARY_NAMES = "VocabularyNames";
  @SerializedName(SERIALIZED_NAME_VOCABULARY_NAMES)
  private String vocabularyNames;

  public static final String SERIALIZED_NAME_VOCABULARY_FILTER_NAMES = "VocabularyFilterNames";
  @SerializedName(SERIALIZED_NAME_VOCABULARY_FILTER_NAMES)
  private String vocabularyFilterNames;

  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration() {
  }

  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration languageCode(CallAnalyticsLanguageCode languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Get languageCode
   * @return languageCode
   */
  @javax.annotation.Nullable
  public CallAnalyticsLanguageCode getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(CallAnalyticsLanguageCode languageCode) {
    this.languageCode = languageCode;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration vocabularyName(String vocabularyName) {
    this.vocabularyName = vocabularyName;
    return this;
  }

  /**
   * Get vocabularyName
   * @return vocabularyName
   */
  @javax.annotation.Nullable
  public String getVocabularyName() {
    return vocabularyName;
  }

  public void setVocabularyName(String vocabularyName) {
    this.vocabularyName = vocabularyName;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration vocabularyFilterName(String vocabularyFilterName) {
    this.vocabularyFilterName = vocabularyFilterName;
    return this;
  }

  /**
   * Get vocabularyFilterName
   * @return vocabularyFilterName
   */
  @javax.annotation.Nullable
  public String getVocabularyFilterName() {
    return vocabularyFilterName;
  }

  public void setVocabularyFilterName(String vocabularyFilterName) {
    this.vocabularyFilterName = vocabularyFilterName;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration vocabularyFilterMethod(VocabularyFilterMethod vocabularyFilterMethod) {
    this.vocabularyFilterMethod = vocabularyFilterMethod;
    return this;
  }

  /**
   * Get vocabularyFilterMethod
   * @return vocabularyFilterMethod
   */
  @javax.annotation.Nullable
  public VocabularyFilterMethod getVocabularyFilterMethod() {
    return vocabularyFilterMethod;
  }

  public void setVocabularyFilterMethod(VocabularyFilterMethod vocabularyFilterMethod) {
    this.vocabularyFilterMethod = vocabularyFilterMethod;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration showSpeakerLabel(Boolean showSpeakerLabel) {
    this.showSpeakerLabel = showSpeakerLabel;
    return this;
  }

  /**
   * Get showSpeakerLabel
   * @return showSpeakerLabel
   */
  @javax.annotation.Nullable
  public Boolean getShowSpeakerLabel() {
    return showSpeakerLabel;
  }

  public void setShowSpeakerLabel(Boolean showSpeakerLabel) {
    this.showSpeakerLabel = showSpeakerLabel;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration enablePartialResultsStabilization(Boolean enablePartialResultsStabilization) {
    this.enablePartialResultsStabilization = enablePartialResultsStabilization;
    return this;
  }

  /**
   * Get enablePartialResultsStabilization
   * @return enablePartialResultsStabilization
   */
  @javax.annotation.Nullable
  public Boolean getEnablePartialResultsStabilization() {
    return enablePartialResultsStabilization;
  }

  public void setEnablePartialResultsStabilization(Boolean enablePartialResultsStabilization) {
    this.enablePartialResultsStabilization = enablePartialResultsStabilization;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration partialResultsStability(PartialResultsStability partialResultsStability) {
    this.partialResultsStability = partialResultsStability;
    return this;
  }

  /**
   * Get partialResultsStability
   * @return partialResultsStability
   */
  @javax.annotation.Nullable
  public PartialResultsStability getPartialResultsStability() {
    return partialResultsStability;
  }

  public void setPartialResultsStability(PartialResultsStability partialResultsStability) {
    this.partialResultsStability = partialResultsStability;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration contentIdentificationType(ContentType contentIdentificationType) {
    this.contentIdentificationType = contentIdentificationType;
    return this;
  }

  /**
   * Get contentIdentificationType
   * @return contentIdentificationType
   */
  @javax.annotation.Nullable
  public ContentType getContentIdentificationType() {
    return contentIdentificationType;
  }

  public void setContentIdentificationType(ContentType contentIdentificationType) {
    this.contentIdentificationType = contentIdentificationType;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration contentRedactionType(ContentType contentRedactionType) {
    this.contentRedactionType = contentRedactionType;
    return this;
  }

  /**
   * Get contentRedactionType
   * @return contentRedactionType
   */
  @javax.annotation.Nullable
  public ContentType getContentRedactionType() {
    return contentRedactionType;
  }

  public void setContentRedactionType(ContentType contentRedactionType) {
    this.contentRedactionType = contentRedactionType;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration piiEntityTypes(String piiEntityTypes) {
    this.piiEntityTypes = piiEntityTypes;
    return this;
  }

  /**
   * Get piiEntityTypes
   * @return piiEntityTypes
   */
  @javax.annotation.Nullable
  public String getPiiEntityTypes() {
    return piiEntityTypes;
  }

  public void setPiiEntityTypes(String piiEntityTypes) {
    this.piiEntityTypes = piiEntityTypes;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration languageModelName(String languageModelName) {
    this.languageModelName = languageModelName;
    return this;
  }

  /**
   * Get languageModelName
   * @return languageModelName
   */
  @javax.annotation.Nullable
  public String getLanguageModelName() {
    return languageModelName;
  }

  public void setLanguageModelName(String languageModelName) {
    this.languageModelName = languageModelName;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration filterPartialResults(Boolean filterPartialResults) {
    this.filterPartialResults = filterPartialResults;
    return this;
  }

  /**
   * Get filterPartialResults
   * @return filterPartialResults
   */
  @javax.annotation.Nullable
  public Boolean getFilterPartialResults() {
    return filterPartialResults;
  }

  public void setFilterPartialResults(Boolean filterPartialResults) {
    this.filterPartialResults = filterPartialResults;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration identifyLanguage(Boolean identifyLanguage) {
    this.identifyLanguage = identifyLanguage;
    return this;
  }

  /**
   * Get identifyLanguage
   * @return identifyLanguage
   */
  @javax.annotation.Nullable
  public Boolean getIdentifyLanguage() {
    return identifyLanguage;
  }

  public void setIdentifyLanguage(Boolean identifyLanguage) {
    this.identifyLanguage = identifyLanguage;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration languageOptions(String languageOptions) {
    this.languageOptions = languageOptions;
    return this;
  }

  /**
   * Get languageOptions
   * @return languageOptions
   */
  @javax.annotation.Nullable
  public String getLanguageOptions() {
    return languageOptions;
  }

  public void setLanguageOptions(String languageOptions) {
    this.languageOptions = languageOptions;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration preferredLanguage(CallAnalyticsLanguageCode preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
    return this;
  }

  /**
   * Get preferredLanguage
   * @return preferredLanguage
   */
  @javax.annotation.Nullable
  public CallAnalyticsLanguageCode getPreferredLanguage() {
    return preferredLanguage;
  }

  public void setPreferredLanguage(CallAnalyticsLanguageCode preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration vocabularyNames(String vocabularyNames) {
    this.vocabularyNames = vocabularyNames;
    return this;
  }

  /**
   * Get vocabularyNames
   * @return vocabularyNames
   */
  @javax.annotation.Nullable
  public String getVocabularyNames() {
    return vocabularyNames;
  }

  public void setVocabularyNames(String vocabularyNames) {
    this.vocabularyNames = vocabularyNames;
  }


  public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration vocabularyFilterNames(String vocabularyFilterNames) {
    this.vocabularyFilterNames = vocabularyFilterNames;
    return this;
  }

  /**
   * Get vocabularyFilterNames
   * @return vocabularyFilterNames
   */
  @javax.annotation.Nullable
  public String getVocabularyFilterNames() {
    return vocabularyFilterNames;
  }

  public void setVocabularyFilterNames(String vocabularyFilterNames) {
    this.vocabularyFilterNames = vocabularyFilterNames;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration = (MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration) o;
    return Objects.equals(this.languageCode, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.languageCode) &&
        Objects.equals(this.vocabularyName, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.vocabularyName) &&
        Objects.equals(this.vocabularyFilterName, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.vocabularyFilterName) &&
        Objects.equals(this.vocabularyFilterMethod, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.vocabularyFilterMethod) &&
        Objects.equals(this.showSpeakerLabel, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.showSpeakerLabel) &&
        Objects.equals(this.enablePartialResultsStabilization, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.enablePartialResultsStabilization) &&
        Objects.equals(this.partialResultsStability, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.partialResultsStability) &&
        Objects.equals(this.contentIdentificationType, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.contentIdentificationType) &&
        Objects.equals(this.contentRedactionType, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.contentRedactionType) &&
        Objects.equals(this.piiEntityTypes, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.piiEntityTypes) &&
        Objects.equals(this.languageModelName, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.languageModelName) &&
        Objects.equals(this.filterPartialResults, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.filterPartialResults) &&
        Objects.equals(this.identifyLanguage, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.identifyLanguage) &&
        Objects.equals(this.languageOptions, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.languageOptions) &&
        Objects.equals(this.preferredLanguage, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.preferredLanguage) &&
        Objects.equals(this.vocabularyNames, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.vocabularyNames) &&
        Objects.equals(this.vocabularyFilterNames, mediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.vocabularyFilterNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(languageCode, vocabularyName, vocabularyFilterName, vocabularyFilterMethod, showSpeakerLabel, enablePartialResultsStabilization, partialResultsStability, contentIdentificationType, contentRedactionType, piiEntityTypes, languageModelName, filterPartialResults, identifyLanguage, languageOptions, preferredLanguage, vocabularyNames, vocabularyFilterNames);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration {\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    vocabularyName: ").append(toIndentedString(vocabularyName)).append("\n");
    sb.append("    vocabularyFilterName: ").append(toIndentedString(vocabularyFilterName)).append("\n");
    sb.append("    vocabularyFilterMethod: ").append(toIndentedString(vocabularyFilterMethod)).append("\n");
    sb.append("    showSpeakerLabel: ").append(toIndentedString(showSpeakerLabel)).append("\n");
    sb.append("    enablePartialResultsStabilization: ").append(toIndentedString(enablePartialResultsStabilization)).append("\n");
    sb.append("    partialResultsStability: ").append(toIndentedString(partialResultsStability)).append("\n");
    sb.append("    contentIdentificationType: ").append(toIndentedString(contentIdentificationType)).append("\n");
    sb.append("    contentRedactionType: ").append(toIndentedString(contentRedactionType)).append("\n");
    sb.append("    piiEntityTypes: ").append(toIndentedString(piiEntityTypes)).append("\n");
    sb.append("    languageModelName: ").append(toIndentedString(languageModelName)).append("\n");
    sb.append("    filterPartialResults: ").append(toIndentedString(filterPartialResults)).append("\n");
    sb.append("    identifyLanguage: ").append(toIndentedString(identifyLanguage)).append("\n");
    sb.append("    languageOptions: ").append(toIndentedString(languageOptions)).append("\n");
    sb.append("    preferredLanguage: ").append(toIndentedString(preferredLanguage)).append("\n");
    sb.append("    vocabularyNames: ").append(toIndentedString(vocabularyNames)).append("\n");
    sb.append("    vocabularyFilterNames: ").append(toIndentedString(vocabularyFilterNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LanguageCode");
    openapiFields.add("VocabularyName");
    openapiFields.add("VocabularyFilterName");
    openapiFields.add("VocabularyFilterMethod");
    openapiFields.add("ShowSpeakerLabel");
    openapiFields.add("EnablePartialResultsStabilization");
    openapiFields.add("PartialResultsStability");
    openapiFields.add("ContentIdentificationType");
    openapiFields.add("ContentRedactionType");
    openapiFields.add("PiiEntityTypes");
    openapiFields.add("LanguageModelName");
    openapiFields.add("FilterPartialResults");
    openapiFields.add("IdentifyLanguage");
    openapiFields.add("LanguageOptions");
    openapiFields.add("PreferredLanguage");
    openapiFields.add("VocabularyNames");
    openapiFields.add("VocabularyFilterNames");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration is not found in the empty JSON string", MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `LanguageCode`
      if (jsonObj.get("LanguageCode") != null && !jsonObj.get("LanguageCode").isJsonNull()) {
        CallAnalyticsLanguageCode.validateJsonElement(jsonObj.get("LanguageCode"));
      }
      // validate the optional field `VocabularyName`
      if (jsonObj.get("VocabularyName") != null && !jsonObj.get("VocabularyName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VocabularyName"));
      }
      // validate the optional field `VocabularyFilterName`
      if (jsonObj.get("VocabularyFilterName") != null && !jsonObj.get("VocabularyFilterName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VocabularyFilterName"));
      }
      // validate the optional field `VocabularyFilterMethod`
      if (jsonObj.get("VocabularyFilterMethod") != null && !jsonObj.get("VocabularyFilterMethod").isJsonNull()) {
        VocabularyFilterMethod.validateJsonElement(jsonObj.get("VocabularyFilterMethod"));
      }
      // validate the optional field `ShowSpeakerLabel`
      if (jsonObj.get("ShowSpeakerLabel") != null && !jsonObj.get("ShowSpeakerLabel").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ShowSpeakerLabel"));
      }
      // validate the optional field `EnablePartialResultsStabilization`
      if (jsonObj.get("EnablePartialResultsStabilization") != null && !jsonObj.get("EnablePartialResultsStabilization").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnablePartialResultsStabilization"));
      }
      // validate the optional field `PartialResultsStability`
      if (jsonObj.get("PartialResultsStability") != null && !jsonObj.get("PartialResultsStability").isJsonNull()) {
        PartialResultsStability.validateJsonElement(jsonObj.get("PartialResultsStability"));
      }
      // validate the optional field `ContentIdentificationType`
      if (jsonObj.get("ContentIdentificationType") != null && !jsonObj.get("ContentIdentificationType").isJsonNull()) {
        ContentType.validateJsonElement(jsonObj.get("ContentIdentificationType"));
      }
      // validate the optional field `ContentRedactionType`
      if (jsonObj.get("ContentRedactionType") != null && !jsonObj.get("ContentRedactionType").isJsonNull()) {
        ContentType.validateJsonElement(jsonObj.get("ContentRedactionType"));
      }
      // validate the optional field `PiiEntityTypes`
      if (jsonObj.get("PiiEntityTypes") != null && !jsonObj.get("PiiEntityTypes").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PiiEntityTypes"));
      }
      // validate the optional field `LanguageModelName`
      if (jsonObj.get("LanguageModelName") != null && !jsonObj.get("LanguageModelName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LanguageModelName"));
      }
      // validate the optional field `FilterPartialResults`
      if (jsonObj.get("FilterPartialResults") != null && !jsonObj.get("FilterPartialResults").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("FilterPartialResults"));
      }
      // validate the optional field `IdentifyLanguage`
      if (jsonObj.get("IdentifyLanguage") != null && !jsonObj.get("IdentifyLanguage").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IdentifyLanguage"));
      }
      // validate the optional field `LanguageOptions`
      if (jsonObj.get("LanguageOptions") != null && !jsonObj.get("LanguageOptions").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LanguageOptions"));
      }
      // validate the optional field `PreferredLanguage`
      if (jsonObj.get("PreferredLanguage") != null && !jsonObj.get("PreferredLanguage").isJsonNull()) {
        CallAnalyticsLanguageCode.validateJsonElement(jsonObj.get("PreferredLanguage"));
      }
      // validate the optional field `VocabularyNames`
      if (jsonObj.get("VocabularyNames") != null && !jsonObj.get("VocabularyNames").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VocabularyNames"));
      }
      // validate the optional field `VocabularyFilterNames`
      if (jsonObj.get("VocabularyFilterNames") != null && !jsonObj.get("VocabularyFilterNames").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VocabularyFilterNames"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration>() {
           @Override
           public void write(JsonWriter out, MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration
   * @throws IOException if the JSON string is invalid with respect to MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration
   */
  public static MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration.class);
  }

  /**
   * Convert an instance of MediaInsightsPipelineConfigurationElementAmazonTranscribeProcessorConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

