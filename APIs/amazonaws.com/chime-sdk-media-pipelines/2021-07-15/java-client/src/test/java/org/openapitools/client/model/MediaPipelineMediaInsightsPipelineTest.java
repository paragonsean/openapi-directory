/*
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.MediaInsightsPipelineKinesisVideoStreamRecordingSourceRuntimeConfiguration;
import org.openapitools.client.model.MediaInsightsPipelineKinesisVideoStreamSourceRuntimeConfiguration;
import org.openapitools.client.model.MediaInsightsPipelineS3RecordingSinkRuntimeConfiguration;
import org.openapitools.client.model.MediaPipelineStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MediaPipelineMediaInsightsPipeline
 */
public class MediaPipelineMediaInsightsPipelineTest {
    private final MediaPipelineMediaInsightsPipeline model = new MediaPipelineMediaInsightsPipeline();

    /**
     * Model tests for MediaPipelineMediaInsightsPipeline
     */
    @Test
    public void testMediaPipelineMediaInsightsPipeline() {
        // TODO: test MediaPipelineMediaInsightsPipeline
    }

    /**
     * Test the property 'mediaPipelineId'
     */
    @Test
    public void mediaPipelineIdTest() {
        // TODO: test mediaPipelineId
    }

    /**
     * Test the property 'mediaPipelineArn'
     */
    @Test
    public void mediaPipelineArnTest() {
        // TODO: test mediaPipelineArn
    }

    /**
     * Test the property 'mediaInsightsPipelineConfigurationArn'
     */
    @Test
    public void mediaInsightsPipelineConfigurationArnTest() {
        // TODO: test mediaInsightsPipelineConfigurationArn
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'kinesisVideoStreamSourceRuntimeConfiguration'
     */
    @Test
    public void kinesisVideoStreamSourceRuntimeConfigurationTest() {
        // TODO: test kinesisVideoStreamSourceRuntimeConfiguration
    }

    /**
     * Test the property 'mediaInsightsRuntimeMetadata'
     */
    @Test
    public void mediaInsightsRuntimeMetadataTest() {
        // TODO: test mediaInsightsRuntimeMetadata
    }

    /**
     * Test the property 'kinesisVideoStreamRecordingSourceRuntimeConfiguration'
     */
    @Test
    public void kinesisVideoStreamRecordingSourceRuntimeConfigurationTest() {
        // TODO: test kinesisVideoStreamRecordingSourceRuntimeConfiguration
    }

    /**
     * Test the property 's3RecordingSinkRuntimeConfiguration'
     */
    @Test
    public void s3RecordingSinkRuntimeConfigurationTest() {
        // TODO: test s3RecordingSinkRuntimeConfiguration
    }

    /**
     * Test the property 'createdTimestamp'
     */
    @Test
    public void createdTimestampTest() {
        // TODO: test createdTimestamp
    }

}
