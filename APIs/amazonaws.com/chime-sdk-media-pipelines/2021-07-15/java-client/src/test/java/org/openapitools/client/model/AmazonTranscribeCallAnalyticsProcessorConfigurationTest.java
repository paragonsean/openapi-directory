/*
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettings;
import org.openapitools.client.model.CallAnalyticsLanguageCode;
import org.openapitools.client.model.ContentType;
import org.openapitools.client.model.PartialResultsStability;
import org.openapitools.client.model.VocabularyFilterMethod;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AmazonTranscribeCallAnalyticsProcessorConfiguration
 */
public class AmazonTranscribeCallAnalyticsProcessorConfigurationTest {
    private final AmazonTranscribeCallAnalyticsProcessorConfiguration model = new AmazonTranscribeCallAnalyticsProcessorConfiguration();

    /**
     * Model tests for AmazonTranscribeCallAnalyticsProcessorConfiguration
     */
    @Test
    public void testAmazonTranscribeCallAnalyticsProcessorConfiguration() {
        // TODO: test AmazonTranscribeCallAnalyticsProcessorConfiguration
    }

    /**
     * Test the property 'languageCode'
     */
    @Test
    public void languageCodeTest() {
        // TODO: test languageCode
    }

    /**
     * Test the property 'vocabularyName'
     */
    @Test
    public void vocabularyNameTest() {
        // TODO: test vocabularyName
    }

    /**
     * Test the property 'vocabularyFilterName'
     */
    @Test
    public void vocabularyFilterNameTest() {
        // TODO: test vocabularyFilterName
    }

    /**
     * Test the property 'vocabularyFilterMethod'
     */
    @Test
    public void vocabularyFilterMethodTest() {
        // TODO: test vocabularyFilterMethod
    }

    /**
     * Test the property 'languageModelName'
     */
    @Test
    public void languageModelNameTest() {
        // TODO: test languageModelName
    }

    /**
     * Test the property 'enablePartialResultsStabilization'
     */
    @Test
    public void enablePartialResultsStabilizationTest() {
        // TODO: test enablePartialResultsStabilization
    }

    /**
     * Test the property 'partialResultsStability'
     */
    @Test
    public void partialResultsStabilityTest() {
        // TODO: test partialResultsStability
    }

    /**
     * Test the property 'contentIdentificationType'
     */
    @Test
    public void contentIdentificationTypeTest() {
        // TODO: test contentIdentificationType
    }

    /**
     * Test the property 'contentRedactionType'
     */
    @Test
    public void contentRedactionTypeTest() {
        // TODO: test contentRedactionType
    }

    /**
     * Test the property 'piiEntityTypes'
     */
    @Test
    public void piiEntityTypesTest() {
        // TODO: test piiEntityTypes
    }

    /**
     * Test the property 'filterPartialResults'
     */
    @Test
    public void filterPartialResultsTest() {
        // TODO: test filterPartialResults
    }

    /**
     * Test the property 'postCallAnalyticsSettings'
     */
    @Test
    public void postCallAnalyticsSettingsTest() {
        // TODO: test postCallAnalyticsSettings
    }

    /**
     * Test the property 'callAnalyticsStreamCategories'
     */
    @Test
    public void callAnalyticsStreamCategoriesTest() {
        // TODO: test callAnalyticsStreamCategories
    }

}
