/*
 * Amazon Chime SDK Media Pipelines
 * The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. 
 *
 * The version of the OpenAPI document: 2021-07-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CallAnalyticsLanguageCode;
import org.openapitools.client.model.ContentType;
import org.openapitools.client.model.PartialResultsStability;
import org.openapitools.client.model.VocabularyFilterMethod;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AmazonTranscribeProcessorConfiguration
 */
public class AmazonTranscribeProcessorConfigurationTest {
    private final AmazonTranscribeProcessorConfiguration model = new AmazonTranscribeProcessorConfiguration();

    /**
     * Model tests for AmazonTranscribeProcessorConfiguration
     */
    @Test
    public void testAmazonTranscribeProcessorConfiguration() {
        // TODO: test AmazonTranscribeProcessorConfiguration
    }

    /**
     * Test the property 'languageCode'
     */
    @Test
    public void languageCodeTest() {
        // TODO: test languageCode
    }

    /**
     * Test the property 'vocabularyName'
     */
    @Test
    public void vocabularyNameTest() {
        // TODO: test vocabularyName
    }

    /**
     * Test the property 'vocabularyFilterName'
     */
    @Test
    public void vocabularyFilterNameTest() {
        // TODO: test vocabularyFilterName
    }

    /**
     * Test the property 'vocabularyFilterMethod'
     */
    @Test
    public void vocabularyFilterMethodTest() {
        // TODO: test vocabularyFilterMethod
    }

    /**
     * Test the property 'showSpeakerLabel'
     */
    @Test
    public void showSpeakerLabelTest() {
        // TODO: test showSpeakerLabel
    }

    /**
     * Test the property 'enablePartialResultsStabilization'
     */
    @Test
    public void enablePartialResultsStabilizationTest() {
        // TODO: test enablePartialResultsStabilization
    }

    /**
     * Test the property 'partialResultsStability'
     */
    @Test
    public void partialResultsStabilityTest() {
        // TODO: test partialResultsStability
    }

    /**
     * Test the property 'contentIdentificationType'
     */
    @Test
    public void contentIdentificationTypeTest() {
        // TODO: test contentIdentificationType
    }

    /**
     * Test the property 'contentRedactionType'
     */
    @Test
    public void contentRedactionTypeTest() {
        // TODO: test contentRedactionType
    }

    /**
     * Test the property 'piiEntityTypes'
     */
    @Test
    public void piiEntityTypesTest() {
        // TODO: test piiEntityTypes
    }

    /**
     * Test the property 'languageModelName'
     */
    @Test
    public void languageModelNameTest() {
        // TODO: test languageModelName
    }

    /**
     * Test the property 'filterPartialResults'
     */
    @Test
    public void filterPartialResultsTest() {
        // TODO: test filterPartialResults
    }

    /**
     * Test the property 'identifyLanguage'
     */
    @Test
    public void identifyLanguageTest() {
        // TODO: test identifyLanguage
    }

    /**
     * Test the property 'languageOptions'
     */
    @Test
    public void languageOptionsTest() {
        // TODO: test languageOptions
    }

    /**
     * Test the property 'preferredLanguage'
     */
    @Test
    public void preferredLanguageTest() {
        // TODO: test preferredLanguage
    }

    /**
     * Test the property 'vocabularyNames'
     */
    @Test
    public void vocabularyNamesTest() {
        // TODO: test vocabularyNames
    }

    /**
     * Test the property 'vocabularyFilterNames'
     */
    @Test
    public void vocabularyFilterNamesTest() {
        // TODO: test vocabularyFilterNames
    }

}
