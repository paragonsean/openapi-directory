# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteSinkInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identifier: str=None):
        """DeleteSinkInput - a model defined in OpenAPI

        :param identifier: The identifier of this DeleteSinkInput.
        """
        self.openapi_types = {
            'identifier': str
        }

        self.attribute_map = {
            'identifier': 'Identifier'
        }

        self._identifier = identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteSinkInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteSinkInput of this DeleteSinkInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identifier(self):
        """Gets the identifier of this DeleteSinkInput.


        :return: The identifier of this DeleteSinkInput.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this DeleteSinkInput.


        :param identifier: The identifier of this DeleteSinkInput.
        :type identifier: str
        """
        if identifier is None:
            raise ValueError("Invalid value for `identifier`, must not be `None`")

        self._identifier = identifier
