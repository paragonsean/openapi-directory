/**
 * AWS Marketplace Commerce Analytics
 * Provides AWS Marketplace business intelligence data on-demand.
 *
 * The version of the OpenAPI document: 2015-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GenerateDataSetRequest from '../model/GenerateDataSetRequest';
import GenerateDataSetResult from '../model/GenerateDataSetResult';
import StartSupportDataExportRequest from '../model/StartSupportDataExportRequest';
import StartSupportDataExportResult from '../model/StartSupportDataExportResult';

/**
* Default service.
* @module api/DefaultApi
* @version 2015-07-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the generateDataSet operation.
     * @callback module:api/DefaultApi~generateDataSetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenerateDataSetResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Given a data set type and data set publication date, asynchronously publishes the requested data set to the specified S3 bucket and notifies the specified SNS topic once the data is available. Returns a unique request identifier that can be used to correlate requests with notifications from the SNS topic. Data sets will be published in comma-separated values (CSV) format with the file name {data_set_type}_YYYY-MM-DD.csv. If a file with the same name already exists (e.g. if the same data set is requested twice), the original file will be overwritten by the new file. Requires a Role with an attached permissions policy providing Allow permissions for the following actions: s3:PutObject, s3:GetBucketLocation, sns:GetTopicAttributes, sns:Publish, iam:GetRolePolicy.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GenerateDataSetRequest} generateDataSetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~generateDataSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenerateDataSetResult}
     */
    generateDataSet(xAmzTarget, generateDataSetRequest, opts, callback) {
      opts = opts || {};
      let postBody = generateDataSetRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling generateDataSet");
      }
      // verify the required parameter 'generateDataSetRequest' is set
      if (generateDataSetRequest === undefined || generateDataSetRequest === null) {
        throw new Error("Missing the required parameter 'generateDataSetRequest' when calling generateDataSet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenerateDataSetResult;
      return this.apiClient.callApi(
        '/#X-Amz-Target=MarketplaceCommerceAnalytics20150701.GenerateDataSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startSupportDataExport operation.
     * @callback module:api/DefaultApi~startSupportDataExportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartSupportDataExportResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Given a data set type and a from date, asynchronously publishes the requested customer support data to the specified S3 bucket and notifies the specified SNS topic once the data is available. Returns a unique request identifier that can be used to correlate requests with notifications from the SNS topic. Data sets will be published in comma-separated values (CSV) format with the file name {data_set_type}_YYYY-MM-DD'T'HH-mm-ss'Z'.csv. If a file with the same name already exists (e.g. if the same data set is requested twice), the original file will be overwritten by the new file. Requires a Role with an attached permissions policy providing Allow permissions for the following actions: s3:PutObject, s3:GetBucketLocation, sns:GetTopicAttributes, sns:Publish, iam:GetRolePolicy.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/StartSupportDataExportRequest} startSupportDataExportRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~startSupportDataExportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartSupportDataExportResult}
     */
    startSupportDataExport(xAmzTarget, startSupportDataExportRequest, opts, callback) {
      opts = opts || {};
      let postBody = startSupportDataExportRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling startSupportDataExport");
      }
      // verify the required parameter 'startSupportDataExportRequest' is set
      if (startSupportDataExportRequest === undefined || startSupportDataExportRequest === null) {
        throw new Error("Missing the required parameter 'startSupportDataExportRequest' when calling startSupportDataExport");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StartSupportDataExportResult;
      return this.apiClient.callApi(
        '/#X-Amz-Target=MarketplaceCommerceAnalytics20150701.StartSupportDataExport', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
