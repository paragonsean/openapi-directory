/**
 * Amazon Cognito Identity Provider
 * <p>With the Amazon Cognito user pools API, you can set up user pools and app clients, and authenticate users. To authenticate users from third-party identity providers (IdPs) in this API, you can <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html\">link IdP users to native user profiles</a>. Learn more about the authentication and authorization of federated users in the <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-userpools-server-contract-reference.html\">Using the Amazon Cognito user pools API and user pool endpoints</a>.</p> <p>This API reference provides detailed information about API operations and object types in Amazon Cognito. At the bottom of the page for each API operation and object, under <i>See Also</i>, you can learn how to use it in an Amazon Web Services SDK in the language of your choice.</p> <p>Along with resource management operations, the Amazon Cognito user pools API includes classes of operations and authorization models for client-side and server-side user operations. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\">Using the Amazon Cognito native and OIDC APIs</a> in the <i>Amazon Cognito Developer Guide</i>.</p> <p>You can also start reading about the <code>CognitoIdentityProvider</code> client in the following SDK guides.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/cli/latest/reference/cognito-idp/index.html#cli-aws-cognito-idp\">Amazon Web Services Command Line Interface</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdkfornet/v3/apidocs/items/CognitoIdentityProvider/TCognitoIdentityProviderClient.html\">Amazon Web Services SDK for .NET</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/cpp/api/LATEST/aws-cpp-sdk-cognito-idp/html/class_aws_1_1_cognito_identity_provider_1_1_cognito_identity_provider_client.html\">Amazon Web Services SDK for C++</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/#CognitoIdentityProvider\">Amazon Web Services SDK for Go</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cognitoidentityprovider/CognitoIdentityProviderClient.html\">Amazon Web Services SDK for Java V2</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html\">Amazon Web Services SDK for JavaScript</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-cognito-idp-2016-04-18.html\">Amazon Web Services SDK for PHP V3</a> </p> </li> <li> <p> <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cognito-idp.html\">Amazon Web Services SDK for Python</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CognitoIdentityProvider/Client.html\">Amazon Web Services SDK for Ruby V3</a> </p> </li> </ul> <p>To get started with an Amazon Web Services SDK, see <a href=\"http://aws.amazon.com/developer/tools/\">Tools to Build on Amazon Web Services</a>. For example actions and scenarios, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/service_code_examples_cognito-identity-provider.html\">Code examples for Amazon Cognito Identity Provider using Amazon Web Services SDKs</a>.</p>
 *
 * The version of the OpenAPI document: 2016-04-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfirmForgotPasswordRequestAnalyticsMetadata from './ConfirmForgotPasswordRequestAnalyticsMetadata';
import ConfirmForgotPasswordRequestUserContextData from './ConfirmForgotPasswordRequestUserContextData';

/**
 * The ConfirmForgotPasswordRequest model module.
 * @module model/ConfirmForgotPasswordRequest
 * @version 2016-04-18
 */
class ConfirmForgotPasswordRequest {
    /**
     * Constructs a new <code>ConfirmForgotPasswordRequest</code>.
     * The request representing the confirmation for a password reset.
     * @alias module:model/ConfirmForgotPasswordRequest
     * @param clientId {String} 
     * @param username {String} 
     * @param confirmationCode {String} 
     * @param password {String} 
     */
    constructor(clientId, username, confirmationCode, password) { 
        
        ConfirmForgotPasswordRequest.initialize(this, clientId, username, confirmationCode, password);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientId, username, confirmationCode, password) { 
        obj['ClientId'] = clientId;
        obj['Username'] = username;
        obj['ConfirmationCode'] = confirmationCode;
        obj['Password'] = password;
    }

    /**
     * Constructs a <code>ConfirmForgotPasswordRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfirmForgotPasswordRequest} obj Optional instance to populate.
     * @return {module:model/ConfirmForgotPasswordRequest} The populated <code>ConfirmForgotPasswordRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfirmForgotPasswordRequest();

            if (data.hasOwnProperty('ClientId')) {
                obj['ClientId'] = ApiClient.convertToType(data['ClientId'], 'String');
            }
            if (data.hasOwnProperty('SecretHash')) {
                obj['SecretHash'] = ApiClient.convertToType(data['SecretHash'], 'String');
            }
            if (data.hasOwnProperty('Username')) {
                obj['Username'] = ApiClient.convertToType(data['Username'], 'String');
            }
            if (data.hasOwnProperty('ConfirmationCode')) {
                obj['ConfirmationCode'] = ApiClient.convertToType(data['ConfirmationCode'], 'String');
            }
            if (data.hasOwnProperty('Password')) {
                obj['Password'] = ApiClient.convertToType(data['Password'], 'String');
            }
            if (data.hasOwnProperty('AnalyticsMetadata')) {
                obj['AnalyticsMetadata'] = ConfirmForgotPasswordRequestAnalyticsMetadata.constructFromObject(data['AnalyticsMetadata']);
            }
            if (data.hasOwnProperty('UserContextData')) {
                obj['UserContextData'] = ConfirmForgotPasswordRequestUserContextData.constructFromObject(data['UserContextData']);
            }
            if (data.hasOwnProperty('ClientMetadata')) {
                obj['ClientMetadata'] = ApiClient.convertToType(data['ClientMetadata'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConfirmForgotPasswordRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConfirmForgotPasswordRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConfirmForgotPasswordRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ClientId`
        if (data['ClientId']) { // data not null
          String.validateJSON(data['ClientId']);
        }
        // validate the optional field `SecretHash`
        if (data['SecretHash']) { // data not null
          String.validateJSON(data['SecretHash']);
        }
        // validate the optional field `Username`
        if (data['Username']) { // data not null
          String.validateJSON(data['Username']);
        }
        // validate the optional field `ConfirmationCode`
        if (data['ConfirmationCode']) { // data not null
          String.validateJSON(data['ConfirmationCode']);
        }
        // validate the optional field `Password`
        if (data['Password']) { // data not null
          String.validateJSON(data['Password']);
        }
        // validate the optional field `AnalyticsMetadata`
        if (data['AnalyticsMetadata']) { // data not null
          ConfirmForgotPasswordRequestAnalyticsMetadata.validateJSON(data['AnalyticsMetadata']);
        }
        // validate the optional field `UserContextData`
        if (data['UserContextData']) { // data not null
          ConfirmForgotPasswordRequestUserContextData.validateJSON(data['UserContextData']);
        }
        // validate the optional field `ClientMetadata`
        if (data['ClientMetadata']) { // data not null
          Object.validateJSON(data['ClientMetadata']);
        }

        return true;
    }


}

ConfirmForgotPasswordRequest.RequiredProperties = ["ClientId", "Username", "ConfirmationCode", "Password"];

/**
 * @member {String} ClientId
 */
ConfirmForgotPasswordRequest.prototype['ClientId'] = undefined;

/**
 * @member {String} SecretHash
 */
ConfirmForgotPasswordRequest.prototype['SecretHash'] = undefined;

/**
 * @member {String} Username
 */
ConfirmForgotPasswordRequest.prototype['Username'] = undefined;

/**
 * @member {String} ConfirmationCode
 */
ConfirmForgotPasswordRequest.prototype['ConfirmationCode'] = undefined;

/**
 * @member {String} Password
 */
ConfirmForgotPasswordRequest.prototype['Password'] = undefined;

/**
 * @member {module:model/ConfirmForgotPasswordRequestAnalyticsMetadata} AnalyticsMetadata
 */
ConfirmForgotPasswordRequest.prototype['AnalyticsMetadata'] = undefined;

/**
 * @member {module:model/ConfirmForgotPasswordRequestUserContextData} UserContextData
 */
ConfirmForgotPasswordRequest.prototype['UserContextData'] = undefined;

/**
 * @member {Object} ClientMetadata
 */
ConfirmForgotPasswordRequest.prototype['ClientMetadata'] = undefined;






export default ConfirmForgotPasswordRequest;

