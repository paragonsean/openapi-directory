/**
 * Amazon Cognito Identity Provider
 * <p>With the Amazon Cognito user pools API, you can set up user pools and app clients, and authenticate users. To authenticate users from third-party identity providers (IdPs) in this API, you can <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html\">link IdP users to native user profiles</a>. Learn more about the authentication and authorization of federated users in the <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-userpools-server-contract-reference.html\">Using the Amazon Cognito user pools API and user pool endpoints</a>.</p> <p>This API reference provides detailed information about API operations and object types in Amazon Cognito. At the bottom of the page for each API operation and object, under <i>See Also</i>, you can learn how to use it in an Amazon Web Services SDK in the language of your choice.</p> <p>Along with resource management operations, the Amazon Cognito user pools API includes classes of operations and authorization models for client-side and server-side user operations. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\">Using the Amazon Cognito native and OIDC APIs</a> in the <i>Amazon Cognito Developer Guide</i>.</p> <p>You can also start reading about the <code>CognitoIdentityProvider</code> client in the following SDK guides.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/cli/latest/reference/cognito-idp/index.html#cli-aws-cognito-idp\">Amazon Web Services Command Line Interface</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdkfornet/v3/apidocs/items/CognitoIdentityProvider/TCognitoIdentityProviderClient.html\">Amazon Web Services SDK for .NET</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/cpp/api/LATEST/aws-cpp-sdk-cognito-idp/html/class_aws_1_1_cognito_identity_provider_1_1_cognito_identity_provider_client.html\">Amazon Web Services SDK for C++</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/#CognitoIdentityProvider\">Amazon Web Services SDK for Go</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cognitoidentityprovider/CognitoIdentityProviderClient.html\">Amazon Web Services SDK for Java V2</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html\">Amazon Web Services SDK for JavaScript</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-cognito-idp-2016-04-18.html\">Amazon Web Services SDK for PHP V3</a> </p> </li> <li> <p> <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cognito-idp.html\">Amazon Web Services SDK for Python</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CognitoIdentityProvider/Client.html\">Amazon Web Services SDK for Ruby V3</a> </p> </li> </ul> <p>To get started with an Amazon Web Services SDK, see <a href=\"http://aws.amazon.com/developer/tools/\">Tools to Build on Amazon Web Services</a>. For example actions and scenarios, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/service_code_examples_cognito-identity-provider.html\">Code examples for Amazon Cognito Identity Provider using Amazon Web Services SDKs</a>.</p>
 *
 * The version of the OpenAPI document: 2016-04-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonCognitoIdentityProvider);
  }
}(this, function(expect, AmazonCognitoIdentityProvider) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonCognitoIdentityProvider.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('addCustomAttributes', function() {
      it('should call addCustomAttributes successfully', function(done) {
        //uncomment below and update the code to test addCustomAttributes
        //instance.addCustomAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminAddUserToGroup', function() {
      it('should call adminAddUserToGroup successfully', function(done) {
        //uncomment below and update the code to test adminAddUserToGroup
        //instance.adminAddUserToGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConfirmSignUp', function() {
      it('should call adminConfirmSignUp successfully', function(done) {
        //uncomment below and update the code to test adminConfirmSignUp
        //instance.adminConfirmSignUp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminCreateUser', function() {
      it('should call adminCreateUser successfully', function(done) {
        //uncomment below and update the code to test adminCreateUser
        //instance.adminCreateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminDeleteUser', function() {
      it('should call adminDeleteUser successfully', function(done) {
        //uncomment below and update the code to test adminDeleteUser
        //instance.adminDeleteUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminDeleteUserAttributes', function() {
      it('should call adminDeleteUserAttributes successfully', function(done) {
        //uncomment below and update the code to test adminDeleteUserAttributes
        //instance.adminDeleteUserAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminDisableProviderForUser', function() {
      it('should call adminDisableProviderForUser successfully', function(done) {
        //uncomment below and update the code to test adminDisableProviderForUser
        //instance.adminDisableProviderForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminDisableUser', function() {
      it('should call adminDisableUser successfully', function(done) {
        //uncomment below and update the code to test adminDisableUser
        //instance.adminDisableUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminEnableUser', function() {
      it('should call adminEnableUser successfully', function(done) {
        //uncomment below and update the code to test adminEnableUser
        //instance.adminEnableUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminForgetDevice', function() {
      it('should call adminForgetDevice successfully', function(done) {
        //uncomment below and update the code to test adminForgetDevice
        //instance.adminForgetDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminGetDevice', function() {
      it('should call adminGetDevice successfully', function(done) {
        //uncomment below and update the code to test adminGetDevice
        //instance.adminGetDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminGetUser', function() {
      it('should call adminGetUser successfully', function(done) {
        //uncomment below and update the code to test adminGetUser
        //instance.adminGetUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminInitiateAuth', function() {
      it('should call adminInitiateAuth successfully', function(done) {
        //uncomment below and update the code to test adminInitiateAuth
        //instance.adminInitiateAuth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminLinkProviderForUser', function() {
      it('should call adminLinkProviderForUser successfully', function(done) {
        //uncomment below and update the code to test adminLinkProviderForUser
        //instance.adminLinkProviderForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminListDevices', function() {
      it('should call adminListDevices successfully', function(done) {
        //uncomment below and update the code to test adminListDevices
        //instance.adminListDevices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminListGroupsForUser', function() {
      it('should call adminListGroupsForUser successfully', function(done) {
        //uncomment below and update the code to test adminListGroupsForUser
        //instance.adminListGroupsForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminListUserAuthEvents', function() {
      it('should call adminListUserAuthEvents successfully', function(done) {
        //uncomment below and update the code to test adminListUserAuthEvents
        //instance.adminListUserAuthEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminRemoveUserFromGroup', function() {
      it('should call adminRemoveUserFromGroup successfully', function(done) {
        //uncomment below and update the code to test adminRemoveUserFromGroup
        //instance.adminRemoveUserFromGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminResetUserPassword', function() {
      it('should call adminResetUserPassword successfully', function(done) {
        //uncomment below and update the code to test adminResetUserPassword
        //instance.adminResetUserPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminRespondToAuthChallenge', function() {
      it('should call adminRespondToAuthChallenge successfully', function(done) {
        //uncomment below and update the code to test adminRespondToAuthChallenge
        //instance.adminRespondToAuthChallenge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminSetUserMFAPreference', function() {
      it('should call adminSetUserMFAPreference successfully', function(done) {
        //uncomment below and update the code to test adminSetUserMFAPreference
        //instance.adminSetUserMFAPreference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminSetUserPassword', function() {
      it('should call adminSetUserPassword successfully', function(done) {
        //uncomment below and update the code to test adminSetUserPassword
        //instance.adminSetUserPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminSetUserSettings', function() {
      it('should call adminSetUserSettings successfully', function(done) {
        //uncomment below and update the code to test adminSetUserSettings
        //instance.adminSetUserSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminUpdateAuthEventFeedback', function() {
      it('should call adminUpdateAuthEventFeedback successfully', function(done) {
        //uncomment below and update the code to test adminUpdateAuthEventFeedback
        //instance.adminUpdateAuthEventFeedback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminUpdateDeviceStatus', function() {
      it('should call adminUpdateDeviceStatus successfully', function(done) {
        //uncomment below and update the code to test adminUpdateDeviceStatus
        //instance.adminUpdateDeviceStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminUpdateUserAttributes', function() {
      it('should call adminUpdateUserAttributes successfully', function(done) {
        //uncomment below and update the code to test adminUpdateUserAttributes
        //instance.adminUpdateUserAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminUserGlobalSignOut', function() {
      it('should call adminUserGlobalSignOut successfully', function(done) {
        //uncomment below and update the code to test adminUserGlobalSignOut
        //instance.adminUserGlobalSignOut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateSoftwareToken', function() {
      it('should call associateSoftwareToken successfully', function(done) {
        //uncomment below and update the code to test associateSoftwareToken
        //instance.associateSoftwareToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('changePassword', function() {
      it('should call changePassword successfully', function(done) {
        //uncomment below and update the code to test changePassword
        //instance.changePassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('confirmDevice', function() {
      it('should call confirmDevice successfully', function(done) {
        //uncomment below and update the code to test confirmDevice
        //instance.confirmDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('confirmForgotPassword', function() {
      it('should call confirmForgotPassword successfully', function(done) {
        //uncomment below and update the code to test confirmForgotPassword
        //instance.confirmForgotPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('confirmSignUp', function() {
      it('should call confirmSignUp successfully', function(done) {
        //uncomment below and update the code to test confirmSignUp
        //instance.confirmSignUp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGroup', function() {
      it('should call createGroup successfully', function(done) {
        //uncomment below and update the code to test createGroup
        //instance.createGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createIdentityProvider', function() {
      it('should call createIdentityProvider successfully', function(done) {
        //uncomment below and update the code to test createIdentityProvider
        //instance.createIdentityProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createResourceServer', function() {
      it('should call createResourceServer successfully', function(done) {
        //uncomment below and update the code to test createResourceServer
        //instance.createResourceServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUserImportJob', function() {
      it('should call createUserImportJob successfully', function(done) {
        //uncomment below and update the code to test createUserImportJob
        //instance.createUserImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUserPool', function() {
      it('should call createUserPool successfully', function(done) {
        //uncomment below and update the code to test createUserPool
        //instance.createUserPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUserPoolClient', function() {
      it('should call createUserPoolClient successfully', function(done) {
        //uncomment below and update the code to test createUserPoolClient
        //instance.createUserPoolClient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUserPoolDomain', function() {
      it('should call createUserPoolDomain successfully', function(done) {
        //uncomment below and update the code to test createUserPoolDomain
        //instance.createUserPoolDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGroup', function() {
      it('should call deleteGroup successfully', function(done) {
        //uncomment below and update the code to test deleteGroup
        //instance.deleteGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteIdentityProvider', function() {
      it('should call deleteIdentityProvider successfully', function(done) {
        //uncomment below and update the code to test deleteIdentityProvider
        //instance.deleteIdentityProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteResourceServer', function() {
      it('should call deleteResourceServer successfully', function(done) {
        //uncomment below and update the code to test deleteResourceServer
        //instance.deleteResourceServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUser', function() {
      it('should call deleteUser successfully', function(done) {
        //uncomment below and update the code to test deleteUser
        //instance.deleteUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUserAttributes', function() {
      it('should call deleteUserAttributes successfully', function(done) {
        //uncomment below and update the code to test deleteUserAttributes
        //instance.deleteUserAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUserPool', function() {
      it('should call deleteUserPool successfully', function(done) {
        //uncomment below and update the code to test deleteUserPool
        //instance.deleteUserPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUserPoolClient', function() {
      it('should call deleteUserPoolClient successfully', function(done) {
        //uncomment below and update the code to test deleteUserPoolClient
        //instance.deleteUserPoolClient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUserPoolDomain', function() {
      it('should call deleteUserPoolDomain successfully', function(done) {
        //uncomment below and update the code to test deleteUserPoolDomain
        //instance.deleteUserPoolDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeIdentityProvider', function() {
      it('should call describeIdentityProvider successfully', function(done) {
        //uncomment below and update the code to test describeIdentityProvider
        //instance.describeIdentityProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeResourceServer', function() {
      it('should call describeResourceServer successfully', function(done) {
        //uncomment below and update the code to test describeResourceServer
        //instance.describeResourceServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeRiskConfiguration', function() {
      it('should call describeRiskConfiguration successfully', function(done) {
        //uncomment below and update the code to test describeRiskConfiguration
        //instance.describeRiskConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeUserImportJob', function() {
      it('should call describeUserImportJob successfully', function(done) {
        //uncomment below and update the code to test describeUserImportJob
        //instance.describeUserImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeUserPool', function() {
      it('should call describeUserPool successfully', function(done) {
        //uncomment below and update the code to test describeUserPool
        //instance.describeUserPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeUserPoolClient', function() {
      it('should call describeUserPoolClient successfully', function(done) {
        //uncomment below and update the code to test describeUserPoolClient
        //instance.describeUserPoolClient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeUserPoolDomain', function() {
      it('should call describeUserPoolDomain successfully', function(done) {
        //uncomment below and update the code to test describeUserPoolDomain
        //instance.describeUserPoolDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('forgetDevice', function() {
      it('should call forgetDevice successfully', function(done) {
        //uncomment below and update the code to test forgetDevice
        //instance.forgetDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('forgotPassword', function() {
      it('should call forgotPassword successfully', function(done) {
        //uncomment below and update the code to test forgotPassword
        //instance.forgotPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCSVHeader', function() {
      it('should call getCSVHeader successfully', function(done) {
        //uncomment below and update the code to test getCSVHeader
        //instance.getCSVHeader(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDevice', function() {
      it('should call getDevice successfully', function(done) {
        //uncomment below and update the code to test getDevice
        //instance.getDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroup', function() {
      it('should call getGroup successfully', function(done) {
        //uncomment below and update the code to test getGroup
        //instance.getGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getIdentityProviderByIdentifier', function() {
      it('should call getIdentityProviderByIdentifier successfully', function(done) {
        //uncomment below and update the code to test getIdentityProviderByIdentifier
        //instance.getIdentityProviderByIdentifier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLogDeliveryConfiguration', function() {
      it('should call getLogDeliveryConfiguration successfully', function(done) {
        //uncomment below and update the code to test getLogDeliveryConfiguration
        //instance.getLogDeliveryConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSigningCertificate', function() {
      it('should call getSigningCertificate successfully', function(done) {
        //uncomment below and update the code to test getSigningCertificate
        //instance.getSigningCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUICustomization', function() {
      it('should call getUICustomization successfully', function(done) {
        //uncomment below and update the code to test getUICustomization
        //instance.getUICustomization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUser', function() {
      it('should call getUser successfully', function(done) {
        //uncomment below and update the code to test getUser
        //instance.getUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserAttributeVerificationCode', function() {
      it('should call getUserAttributeVerificationCode successfully', function(done) {
        //uncomment below and update the code to test getUserAttributeVerificationCode
        //instance.getUserAttributeVerificationCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserPoolMfaConfig', function() {
      it('should call getUserPoolMfaConfig successfully', function(done) {
        //uncomment below and update the code to test getUserPoolMfaConfig
        //instance.getUserPoolMfaConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('globalSignOut', function() {
      it('should call globalSignOut successfully', function(done) {
        //uncomment below and update the code to test globalSignOut
        //instance.globalSignOut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('initiateAuth', function() {
      it('should call initiateAuth successfully', function(done) {
        //uncomment below and update the code to test initiateAuth
        //instance.initiateAuth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDevices', function() {
      it('should call listDevices successfully', function(done) {
        //uncomment below and update the code to test listDevices
        //instance.listDevices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listGroups', function() {
      it('should call listGroups successfully', function(done) {
        //uncomment below and update the code to test listGroups
        //instance.listGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listIdentityProviders', function() {
      it('should call listIdentityProviders successfully', function(done) {
        //uncomment below and update the code to test listIdentityProviders
        //instance.listIdentityProviders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listResourceServers', function() {
      it('should call listResourceServers successfully', function(done) {
        //uncomment below and update the code to test listResourceServers
        //instance.listResourceServers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUserImportJobs', function() {
      it('should call listUserImportJobs successfully', function(done) {
        //uncomment below and update the code to test listUserImportJobs
        //instance.listUserImportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUserPoolClients', function() {
      it('should call listUserPoolClients successfully', function(done) {
        //uncomment below and update the code to test listUserPoolClients
        //instance.listUserPoolClients(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUserPools', function() {
      it('should call listUserPools successfully', function(done) {
        //uncomment below and update the code to test listUserPools
        //instance.listUserPools(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUsers', function() {
      it('should call listUsers successfully', function(done) {
        //uncomment below and update the code to test listUsers
        //instance.listUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUsersInGroup', function() {
      it('should call listUsersInGroup successfully', function(done) {
        //uncomment below and update the code to test listUsersInGroup
        //instance.listUsersInGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resendConfirmationCode', function() {
      it('should call resendConfirmationCode successfully', function(done) {
        //uncomment below and update the code to test resendConfirmationCode
        //instance.resendConfirmationCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('respondToAuthChallenge', function() {
      it('should call respondToAuthChallenge successfully', function(done) {
        //uncomment below and update the code to test respondToAuthChallenge
        //instance.respondToAuthChallenge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('revokeToken', function() {
      it('should call revokeToken successfully', function(done) {
        //uncomment below and update the code to test revokeToken
        //instance.revokeToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setLogDeliveryConfiguration', function() {
      it('should call setLogDeliveryConfiguration successfully', function(done) {
        //uncomment below and update the code to test setLogDeliveryConfiguration
        //instance.setLogDeliveryConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setRiskConfiguration', function() {
      it('should call setRiskConfiguration successfully', function(done) {
        //uncomment below and update the code to test setRiskConfiguration
        //instance.setRiskConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setUICustomization', function() {
      it('should call setUICustomization successfully', function(done) {
        //uncomment below and update the code to test setUICustomization
        //instance.setUICustomization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setUserMFAPreference', function() {
      it('should call setUserMFAPreference successfully', function(done) {
        //uncomment below and update the code to test setUserMFAPreference
        //instance.setUserMFAPreference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setUserPoolMfaConfig', function() {
      it('should call setUserPoolMfaConfig successfully', function(done) {
        //uncomment below and update the code to test setUserPoolMfaConfig
        //instance.setUserPoolMfaConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setUserSettings', function() {
      it('should call setUserSettings successfully', function(done) {
        //uncomment below and update the code to test setUserSettings
        //instance.setUserSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('signUp', function() {
      it('should call signUp successfully', function(done) {
        //uncomment below and update the code to test signUp
        //instance.signUp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startUserImportJob', function() {
      it('should call startUserImportJob successfully', function(done) {
        //uncomment below and update the code to test startUserImportJob
        //instance.startUserImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopUserImportJob', function() {
      it('should call stopUserImportJob successfully', function(done) {
        //uncomment below and update the code to test stopUserImportJob
        //instance.stopUserImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAuthEventFeedback', function() {
      it('should call updateAuthEventFeedback successfully', function(done) {
        //uncomment below and update the code to test updateAuthEventFeedback
        //instance.updateAuthEventFeedback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDeviceStatus', function() {
      it('should call updateDeviceStatus successfully', function(done) {
        //uncomment below and update the code to test updateDeviceStatus
        //instance.updateDeviceStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGroup', function() {
      it('should call updateGroup successfully', function(done) {
        //uncomment below and update the code to test updateGroup
        //instance.updateGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateIdentityProvider', function() {
      it('should call updateIdentityProvider successfully', function(done) {
        //uncomment below and update the code to test updateIdentityProvider
        //instance.updateIdentityProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateResourceServer', function() {
      it('should call updateResourceServer successfully', function(done) {
        //uncomment below and update the code to test updateResourceServer
        //instance.updateResourceServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserAttributes', function() {
      it('should call updateUserAttributes successfully', function(done) {
        //uncomment below and update the code to test updateUserAttributes
        //instance.updateUserAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserPool', function() {
      it('should call updateUserPool successfully', function(done) {
        //uncomment below and update the code to test updateUserPool
        //instance.updateUserPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserPoolClient', function() {
      it('should call updateUserPoolClient successfully', function(done) {
        //uncomment below and update the code to test updateUserPoolClient
        //instance.updateUserPoolClient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserPoolDomain', function() {
      it('should call updateUserPoolDomain successfully', function(done) {
        //uncomment below and update the code to test updateUserPoolDomain
        //instance.updateUserPoolDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('verifySoftwareToken', function() {
      it('should call verifySoftwareToken successfully', function(done) {
        //uncomment below and update the code to test verifySoftwareToken
        //instance.verifySoftwareToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('verifyUserAttribute', function() {
      it('should call verifyUserAttribute successfully', function(done) {
        //uncomment below and update the code to test verifyUserAttribute
        //instance.verifyUserAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
