/**
 * Amazon Cognito Identity Provider
 * <p>With the Amazon Cognito user pools API, you can set up user pools and app clients, and authenticate users. To authenticate users from third-party identity providers (IdPs) in this API, you can <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html\">link IdP users to native user profiles</a>. Learn more about the authentication and authorization of federated users in the <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-userpools-server-contract-reference.html\">Using the Amazon Cognito user pools API and user pool endpoints</a>.</p> <p>This API reference provides detailed information about API operations and object types in Amazon Cognito. At the bottom of the page for each API operation and object, under <i>See Also</i>, you can learn how to use it in an Amazon Web Services SDK in the language of your choice.</p> <p>Along with resource management operations, the Amazon Cognito user pools API includes classes of operations and authorization models for client-side and server-side user operations. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\">Using the Amazon Cognito native and OIDC APIs</a> in the <i>Amazon Cognito Developer Guide</i>.</p> <p>You can also start reading about the <code>CognitoIdentityProvider</code> client in the following SDK guides.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/cli/latest/reference/cognito-idp/index.html#cli-aws-cognito-idp\">Amazon Web Services Command Line Interface</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdkfornet/v3/apidocs/items/CognitoIdentityProvider/TCognitoIdentityProviderClient.html\">Amazon Web Services SDK for .NET</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/cpp/api/LATEST/aws-cpp-sdk-cognito-idp/html/class_aws_1_1_cognito_identity_provider_1_1_cognito_identity_provider_client.html\">Amazon Web Services SDK for C++</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/#CognitoIdentityProvider\">Amazon Web Services SDK for Go</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cognitoidentityprovider/CognitoIdentityProviderClient.html\">Amazon Web Services SDK for Java V2</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html\">Amazon Web Services SDK for JavaScript</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-cognito-idp-2016-04-18.html\">Amazon Web Services SDK for PHP V3</a> </p> </li> <li> <p> <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cognito-idp.html\">Amazon Web Services SDK for Python</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CognitoIdentityProvider/Client.html\">Amazon Web Services SDK for Ruby V3</a> </p> </li> </ul> <p>To get started with an Amazon Web Services SDK, see <a href=\"http://aws.amazon.com/developer/tools/\">Tools to Build on Amazon Web Services</a>. For example actions and scenarios, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/service_code_examples_cognito-identity-provider.html\">Code examples for Amazon Cognito Identity Provider using Amazon Web Services SDKs</a>.</p>
 *
 * The version of the OpenAPI document: 2016-04-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserPoolClientType.h
 *
 * Contains information about a user pool client.
 */

#ifndef OAIUserPoolClientType_H
#define OAIUserPoolClientType_H

#include <QJsonObject>

#include "OAIPreventUserExistenceErrorTypes.h"
#include "OAIUserPoolClientType_AnalyticsConfiguration.h"
#include "OAIUserPoolClientType_TokenValidityUnits.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserPoolClientType_TokenValidityUnits;
class OAIUserPoolClientType_AnalyticsConfiguration;

class OAIUserPoolClientType : public OAIObject {
public:
    OAIUserPoolClientType();
    OAIUserPoolClientType(QString json);
    ~OAIUserPoolClientType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getUserPoolId() const;
    void setUserPoolId(const QString &user_pool_id);
    bool is_user_pool_id_Set() const;
    bool is_user_pool_id_Valid() const;

    QString getClientName() const;
    void setClientName(const QString &client_name);
    bool is_client_name_Set() const;
    bool is_client_name_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getClientSecret() const;
    void setClientSecret(const QString &client_secret);
    bool is_client_secret_Set() const;
    bool is_client_secret_Valid() const;

    QDateTime getLastModifiedDate() const;
    void setLastModifiedDate(const QDateTime &last_modified_date);
    bool is_last_modified_date_Set() const;
    bool is_last_modified_date_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    qint32 getRefreshTokenValidity() const;
    void setRefreshTokenValidity(const qint32 &refresh_token_validity);
    bool is_refresh_token_validity_Set() const;
    bool is_refresh_token_validity_Valid() const;

    qint32 getAccessTokenValidity() const;
    void setAccessTokenValidity(const qint32 &access_token_validity);
    bool is_access_token_validity_Set() const;
    bool is_access_token_validity_Valid() const;

    qint32 getIdTokenValidity() const;
    void setIdTokenValidity(const qint32 &id_token_validity);
    bool is_id_token_validity_Set() const;
    bool is_id_token_validity_Valid() const;

    OAIUserPoolClientType_TokenValidityUnits getTokenValidityUnits() const;
    void setTokenValidityUnits(const OAIUserPoolClientType_TokenValidityUnits &token_validity_units);
    bool is_token_validity_units_Set() const;
    bool is_token_validity_units_Valid() const;

    QList getReadAttributes() const;
    void setReadAttributes(const QList &read_attributes);
    bool is_read_attributes_Set() const;
    bool is_read_attributes_Valid() const;

    QList getWriteAttributes() const;
    void setWriteAttributes(const QList &write_attributes);
    bool is_write_attributes_Set() const;
    bool is_write_attributes_Valid() const;

    QList getExplicitAuthFlows() const;
    void setExplicitAuthFlows(const QList &explicit_auth_flows);
    bool is_explicit_auth_flows_Set() const;
    bool is_explicit_auth_flows_Valid() const;

    QList getSupportedIdentityProviders() const;
    void setSupportedIdentityProviders(const QList &supported_identity_providers);
    bool is_supported_identity_providers_Set() const;
    bool is_supported_identity_providers_Valid() const;

    QList getCallbackUrls() const;
    void setCallbackUrls(const QList &callback_urls);
    bool is_callback_urls_Set() const;
    bool is_callback_urls_Valid() const;

    QList getLogoutUrls() const;
    void setLogoutUrls(const QList &logout_urls);
    bool is_logout_urls_Set() const;
    bool is_logout_urls_Valid() const;

    QString getDefaultRedirectUri() const;
    void setDefaultRedirectUri(const QString &default_redirect_uri);
    bool is_default_redirect_uri_Set() const;
    bool is_default_redirect_uri_Valid() const;

    QList getAllowedOAuthFlows() const;
    void setAllowedOAuthFlows(const QList &allowed_o_auth_flows);
    bool is_allowed_o_auth_flows_Set() const;
    bool is_allowed_o_auth_flows_Valid() const;

    QList getAllowedOAuthScopes() const;
    void setAllowedOAuthScopes(const QList &allowed_o_auth_scopes);
    bool is_allowed_o_auth_scopes_Set() const;
    bool is_allowed_o_auth_scopes_Valid() const;

    bool getAllowedOAuthFlowsUserPoolClient() const;
    void setAllowedOAuthFlowsUserPoolClient(const bool &allowed_o_auth_flows_user_pool_client);
    bool is_allowed_o_auth_flows_user_pool_client_Set() const;
    bool is_allowed_o_auth_flows_user_pool_client_Valid() const;

    OAIUserPoolClientType_AnalyticsConfiguration getAnalyticsConfiguration() const;
    void setAnalyticsConfiguration(const OAIUserPoolClientType_AnalyticsConfiguration &analytics_configuration);
    bool is_analytics_configuration_Set() const;
    bool is_analytics_configuration_Valid() const;

    OAIPreventUserExistenceErrorTypes getPreventUserExistenceErrors() const;
    void setPreventUserExistenceErrors(const OAIPreventUserExistenceErrorTypes &prevent_user_existence_errors);
    bool is_prevent_user_existence_errors_Set() const;
    bool is_prevent_user_existence_errors_Valid() const;

    bool getEnableTokenRevocation() const;
    void setEnableTokenRevocation(const bool &enable_token_revocation);
    bool is_enable_token_revocation_Set() const;
    bool is_enable_token_revocation_Valid() const;

    bool getEnablePropagateAdditionalUserContextData() const;
    void setEnablePropagateAdditionalUserContextData(const bool &enable_propagate_additional_user_context_data);
    bool is_enable_propagate_additional_user_context_data_Set() const;
    bool is_enable_propagate_additional_user_context_data_Valid() const;

    qint32 getAuthSessionValidity() const;
    void setAuthSessionValidity(const qint32 &auth_session_validity);
    bool is_auth_session_validity_Set() const;
    bool is_auth_session_validity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_user_pool_id;
    bool m_user_pool_id_isSet;
    bool m_user_pool_id_isValid;

    QString m_client_name;
    bool m_client_name_isSet;
    bool m_client_name_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_client_secret;
    bool m_client_secret_isSet;
    bool m_client_secret_isValid;

    QDateTime m_last_modified_date;
    bool m_last_modified_date_isSet;
    bool m_last_modified_date_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    qint32 m_refresh_token_validity;
    bool m_refresh_token_validity_isSet;
    bool m_refresh_token_validity_isValid;

    qint32 m_access_token_validity;
    bool m_access_token_validity_isSet;
    bool m_access_token_validity_isValid;

    qint32 m_id_token_validity;
    bool m_id_token_validity_isSet;
    bool m_id_token_validity_isValid;

    OAIUserPoolClientType_TokenValidityUnits m_token_validity_units;
    bool m_token_validity_units_isSet;
    bool m_token_validity_units_isValid;

    QList m_read_attributes;
    bool m_read_attributes_isSet;
    bool m_read_attributes_isValid;

    QList m_write_attributes;
    bool m_write_attributes_isSet;
    bool m_write_attributes_isValid;

    QList m_explicit_auth_flows;
    bool m_explicit_auth_flows_isSet;
    bool m_explicit_auth_flows_isValid;

    QList m_supported_identity_providers;
    bool m_supported_identity_providers_isSet;
    bool m_supported_identity_providers_isValid;

    QList m_callback_urls;
    bool m_callback_urls_isSet;
    bool m_callback_urls_isValid;

    QList m_logout_urls;
    bool m_logout_urls_isSet;
    bool m_logout_urls_isValid;

    QString m_default_redirect_uri;
    bool m_default_redirect_uri_isSet;
    bool m_default_redirect_uri_isValid;

    QList m_allowed_o_auth_flows;
    bool m_allowed_o_auth_flows_isSet;
    bool m_allowed_o_auth_flows_isValid;

    QList m_allowed_o_auth_scopes;
    bool m_allowed_o_auth_scopes_isSet;
    bool m_allowed_o_auth_scopes_isValid;

    bool m_allowed_o_auth_flows_user_pool_client;
    bool m_allowed_o_auth_flows_user_pool_client_isSet;
    bool m_allowed_o_auth_flows_user_pool_client_isValid;

    OAIUserPoolClientType_AnalyticsConfiguration m_analytics_configuration;
    bool m_analytics_configuration_isSet;
    bool m_analytics_configuration_isValid;

    OAIPreventUserExistenceErrorTypes m_prevent_user_existence_errors;
    bool m_prevent_user_existence_errors_isSet;
    bool m_prevent_user_existence_errors_isValid;

    bool m_enable_token_revocation;
    bool m_enable_token_revocation_isSet;
    bool m_enable_token_revocation_isValid;

    bool m_enable_propagate_additional_user_context_data;
    bool m_enable_propagate_additional_user_context_data_isSet;
    bool m_enable_propagate_additional_user_context_data_isValid;

    qint32 m_auth_session_validity;
    bool m_auth_session_validity_isSet;
    bool m_auth_session_validity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserPoolClientType)

#endif // OAIUserPoolClientType_H
