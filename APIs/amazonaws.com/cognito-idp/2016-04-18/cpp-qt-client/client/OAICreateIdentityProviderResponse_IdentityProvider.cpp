/**
 * Amazon Cognito Identity Provider
 * <p>With the Amazon Cognito user pools API, you can set up user pools and app clients, and authenticate users. To authenticate users from third-party identity providers (IdPs) in this API, you can <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html\">link IdP users to native user profiles</a>. Learn more about the authentication and authorization of federated users in the <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-userpools-server-contract-reference.html\">Using the Amazon Cognito user pools API and user pool endpoints</a>.</p> <p>This API reference provides detailed information about API operations and object types in Amazon Cognito. At the bottom of the page for each API operation and object, under <i>See Also</i>, you can learn how to use it in an Amazon Web Services SDK in the language of your choice.</p> <p>Along with resource management operations, the Amazon Cognito user pools API includes classes of operations and authorization models for client-side and server-side user operations. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\">Using the Amazon Cognito native and OIDC APIs</a> in the <i>Amazon Cognito Developer Guide</i>.</p> <p>You can also start reading about the <code>CognitoIdentityProvider</code> client in the following SDK guides.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/cli/latest/reference/cognito-idp/index.html#cli-aws-cognito-idp\">Amazon Web Services Command Line Interface</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdkfornet/v3/apidocs/items/CognitoIdentityProvider/TCognitoIdentityProviderClient.html\">Amazon Web Services SDK for .NET</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/cpp/api/LATEST/aws-cpp-sdk-cognito-idp/html/class_aws_1_1_cognito_identity_provider_1_1_cognito_identity_provider_client.html\">Amazon Web Services SDK for C++</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/#CognitoIdentityProvider\">Amazon Web Services SDK for Go</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cognitoidentityprovider/CognitoIdentityProviderClient.html\">Amazon Web Services SDK for Java V2</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html\">Amazon Web Services SDK for JavaScript</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-cognito-idp-2016-04-18.html\">Amazon Web Services SDK for PHP V3</a> </p> </li> <li> <p> <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cognito-idp.html\">Amazon Web Services SDK for Python</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CognitoIdentityProvider/Client.html\">Amazon Web Services SDK for Ruby V3</a> </p> </li> </ul> <p>To get started with an Amazon Web Services SDK, see <a href=\"http://aws.amazon.com/developer/tools/\">Tools to Build on Amazon Web Services</a>. For example actions and scenarios, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/service_code_examples_cognito-identity-provider.html\">Code examples for Amazon Cognito Identity Provider using Amazon Web Services SDKs</a>.</p>
 *
 * The version of the OpenAPI document: 2016-04-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateIdentityProviderResponse_IdentityProvider.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateIdentityProviderResponse_IdentityProvider::OAICreateIdentityProviderResponse_IdentityProvider(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateIdentityProviderResponse_IdentityProvider::OAICreateIdentityProviderResponse_IdentityProvider() {
    this->initializeModel();
}

OAICreateIdentityProviderResponse_IdentityProvider::~OAICreateIdentityProviderResponse_IdentityProvider() {}

void OAICreateIdentityProviderResponse_IdentityProvider::initializeModel() {

    m_user_pool_id_isSet = false;
    m_user_pool_id_isValid = false;

    m_provider_name_isSet = false;
    m_provider_name_isValid = false;

    m_provider_type_isSet = false;
    m_provider_type_isValid = false;

    m_provider_details_isSet = false;
    m_provider_details_isValid = false;

    m_attribute_mapping_isSet = false;
    m_attribute_mapping_isValid = false;

    m_idp_identifiers_isSet = false;
    m_idp_identifiers_isValid = false;

    m_last_modified_date_isSet = false;
    m_last_modified_date_isValid = false;

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;
}

void OAICreateIdentityProviderResponse_IdentityProvider::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateIdentityProviderResponse_IdentityProvider::fromJsonObject(QJsonObject json) {

    m_user_pool_id_isValid = ::OpenAPI::fromJsonValue(m_user_pool_id, json[QString("UserPoolId")]);
    m_user_pool_id_isSet = !json[QString("UserPoolId")].isNull() && m_user_pool_id_isValid;

    m_provider_name_isValid = ::OpenAPI::fromJsonValue(m_provider_name, json[QString("ProviderName")]);
    m_provider_name_isSet = !json[QString("ProviderName")].isNull() && m_provider_name_isValid;

    m_provider_type_isValid = ::OpenAPI::fromJsonValue(m_provider_type, json[QString("ProviderType")]);
    m_provider_type_isSet = !json[QString("ProviderType")].isNull() && m_provider_type_isValid;

    m_provider_details_isValid = ::OpenAPI::fromJsonValue(m_provider_details, json[QString("ProviderDetails")]);
    m_provider_details_isSet = !json[QString("ProviderDetails")].isNull() && m_provider_details_isValid;

    m_attribute_mapping_isValid = ::OpenAPI::fromJsonValue(m_attribute_mapping, json[QString("AttributeMapping")]);
    m_attribute_mapping_isSet = !json[QString("AttributeMapping")].isNull() && m_attribute_mapping_isValid;

    m_idp_identifiers_isValid = ::OpenAPI::fromJsonValue(m_idp_identifiers, json[QString("IdpIdentifiers")]);
    m_idp_identifiers_isSet = !json[QString("IdpIdentifiers")].isNull() && m_idp_identifiers_isValid;

    m_last_modified_date_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date, json[QString("LastModifiedDate")]);
    m_last_modified_date_isSet = !json[QString("LastModifiedDate")].isNull() && m_last_modified_date_isValid;

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("CreationDate")]);
    m_creation_date_isSet = !json[QString("CreationDate")].isNull() && m_creation_date_isValid;
}

QString OAICreateIdentityProviderResponse_IdentityProvider::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateIdentityProviderResponse_IdentityProvider::asJsonObject() const {
    QJsonObject obj;
    if (m_user_pool_id_isSet) {
        obj.insert(QString("UserPoolId"), ::OpenAPI::toJsonValue(m_user_pool_id));
    }
    if (m_provider_name_isSet) {
        obj.insert(QString("ProviderName"), ::OpenAPI::toJsonValue(m_provider_name));
    }
    if (m_provider_type.isSet()) {
        obj.insert(QString("ProviderType"), ::OpenAPI::toJsonValue(m_provider_type));
    }
    if (m_provider_details.isSet()) {
        obj.insert(QString("ProviderDetails"), ::OpenAPI::toJsonValue(m_provider_details));
    }
    if (m_attribute_mapping.isSet()) {
        obj.insert(QString("AttributeMapping"), ::OpenAPI::toJsonValue(m_attribute_mapping));
    }
    if (m_idp_identifiers.isSet()) {
        obj.insert(QString("IdpIdentifiers"), ::OpenAPI::toJsonValue(m_idp_identifiers));
    }
    if (m_last_modified_date_isSet) {
        obj.insert(QString("LastModifiedDate"), ::OpenAPI::toJsonValue(m_last_modified_date));
    }
    if (m_creation_date_isSet) {
        obj.insert(QString("CreationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    return obj;
}

QString OAICreateIdentityProviderResponse_IdentityProvider::getUserPoolId() const {
    return m_user_pool_id;
}
void OAICreateIdentityProviderResponse_IdentityProvider::setUserPoolId(const QString &user_pool_id) {
    m_user_pool_id = user_pool_id;
    m_user_pool_id_isSet = true;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_user_pool_id_Set() const{
    return m_user_pool_id_isSet;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_user_pool_id_Valid() const{
    return m_user_pool_id_isValid;
}

QString OAICreateIdentityProviderResponse_IdentityProvider::getProviderName() const {
    return m_provider_name;
}
void OAICreateIdentityProviderResponse_IdentityProvider::setProviderName(const QString &provider_name) {
    m_provider_name = provider_name;
    m_provider_name_isSet = true;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_provider_name_Set() const{
    return m_provider_name_isSet;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_provider_name_Valid() const{
    return m_provider_name_isValid;
}

OAIIdentityProviderTypeType OAICreateIdentityProviderResponse_IdentityProvider::getProviderType() const {
    return m_provider_type;
}
void OAICreateIdentityProviderResponse_IdentityProvider::setProviderType(const OAIIdentityProviderTypeType &provider_type) {
    m_provider_type = provider_type;
    m_provider_type_isSet = true;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_provider_type_Set() const{
    return m_provider_type_isSet;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_provider_type_Valid() const{
    return m_provider_type_isValid;
}

QMap OAICreateIdentityProviderResponse_IdentityProvider::getProviderDetails() const {
    return m_provider_details;
}
void OAICreateIdentityProviderResponse_IdentityProvider::setProviderDetails(const QMap &provider_details) {
    m_provider_details = provider_details;
    m_provider_details_isSet = true;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_provider_details_Set() const{
    return m_provider_details_isSet;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_provider_details_Valid() const{
    return m_provider_details_isValid;
}

QMap OAICreateIdentityProviderResponse_IdentityProvider::getAttributeMapping() const {
    return m_attribute_mapping;
}
void OAICreateIdentityProviderResponse_IdentityProvider::setAttributeMapping(const QMap &attribute_mapping) {
    m_attribute_mapping = attribute_mapping;
    m_attribute_mapping_isSet = true;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_attribute_mapping_Set() const{
    return m_attribute_mapping_isSet;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_attribute_mapping_Valid() const{
    return m_attribute_mapping_isValid;
}

QList OAICreateIdentityProviderResponse_IdentityProvider::getIdpIdentifiers() const {
    return m_idp_identifiers;
}
void OAICreateIdentityProviderResponse_IdentityProvider::setIdpIdentifiers(const QList &idp_identifiers) {
    m_idp_identifiers = idp_identifiers;
    m_idp_identifiers_isSet = true;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_idp_identifiers_Set() const{
    return m_idp_identifiers_isSet;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_idp_identifiers_Valid() const{
    return m_idp_identifiers_isValid;
}

QDateTime OAICreateIdentityProviderResponse_IdentityProvider::getLastModifiedDate() const {
    return m_last_modified_date;
}
void OAICreateIdentityProviderResponse_IdentityProvider::setLastModifiedDate(const QDateTime &last_modified_date) {
    m_last_modified_date = last_modified_date;
    m_last_modified_date_isSet = true;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_last_modified_date_Set() const{
    return m_last_modified_date_isSet;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_last_modified_date_Valid() const{
    return m_last_modified_date_isValid;
}

QDateTime OAICreateIdentityProviderResponse_IdentityProvider::getCreationDate() const {
    return m_creation_date;
}
void OAICreateIdentityProviderResponse_IdentityProvider::setCreationDate(const QDateTime &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_pool_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_mapping.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_idp_identifiers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateIdentityProviderResponse_IdentityProvider::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
