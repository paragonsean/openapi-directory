/**
 * Amazon Cognito Identity Provider
 * <p>With the Amazon Cognito user pools API, you can set up user pools and app clients, and authenticate users. To authenticate users from third-party identity providers (IdPs) in this API, you can <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html\">link IdP users to native user profiles</a>. Learn more about the authentication and authorization of federated users in the <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-userpools-server-contract-reference.html\">Using the Amazon Cognito user pools API and user pool endpoints</a>.</p> <p>This API reference provides detailed information about API operations and object types in Amazon Cognito. At the bottom of the page for each API operation and object, under <i>See Also</i>, you can learn how to use it in an Amazon Web Services SDK in the language of your choice.</p> <p>Along with resource management operations, the Amazon Cognito user pools API includes classes of operations and authorization models for client-side and server-side user operations. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\">Using the Amazon Cognito native and OIDC APIs</a> in the <i>Amazon Cognito Developer Guide</i>.</p> <p>You can also start reading about the <code>CognitoIdentityProvider</code> client in the following SDK guides.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/cli/latest/reference/cognito-idp/index.html#cli-aws-cognito-idp\">Amazon Web Services Command Line Interface</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdkfornet/v3/apidocs/items/CognitoIdentityProvider/TCognitoIdentityProviderClient.html\">Amazon Web Services SDK for .NET</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/cpp/api/LATEST/aws-cpp-sdk-cognito-idp/html/class_aws_1_1_cognito_identity_provider_1_1_cognito_identity_provider_client.html\">Amazon Web Services SDK for C++</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/#CognitoIdentityProvider\">Amazon Web Services SDK for Go</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cognitoidentityprovider/CognitoIdentityProviderClient.html\">Amazon Web Services SDK for Java V2</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html\">Amazon Web Services SDK for JavaScript</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-cognito-idp-2016-04-18.html\">Amazon Web Services SDK for PHP V3</a> </p> </li> <li> <p> <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cognito-idp.html\">Amazon Web Services SDK for Python</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CognitoIdentityProvider/Client.html\">Amazon Web Services SDK for Ruby V3</a> </p> </li> </ul> <p>To get started with an Amazon Web Services SDK, see <a href=\"http://aws.amazon.com/developer/tools/\">Tools to Build on Amazon Web Services</a>. For example actions and scenarios, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/service_code_examples_cognito-identity-provider.html\">Code examples for Amazon Cognito Identity Provider using Amazon Web Services SDKs</a>.</p>
 *
 * The version of the OpenAPI document: 2016-04-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRiskConfigurationType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRiskConfigurationType::OAIRiskConfigurationType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRiskConfigurationType::OAIRiskConfigurationType() {
    this->initializeModel();
}

OAIRiskConfigurationType::~OAIRiskConfigurationType() {}

void OAIRiskConfigurationType::initializeModel() {

    m_user_pool_id_isSet = false;
    m_user_pool_id_isValid = false;

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_compromised_credentials_risk_configuration_isSet = false;
    m_compromised_credentials_risk_configuration_isValid = false;

    m_account_takeover_risk_configuration_isSet = false;
    m_account_takeover_risk_configuration_isValid = false;

    m_risk_exception_configuration_isSet = false;
    m_risk_exception_configuration_isValid = false;

    m_last_modified_date_isSet = false;
    m_last_modified_date_isValid = false;
}

void OAIRiskConfigurationType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRiskConfigurationType::fromJsonObject(QJsonObject json) {

    m_user_pool_id_isValid = ::OpenAPI::fromJsonValue(m_user_pool_id, json[QString("UserPoolId")]);
    m_user_pool_id_isSet = !json[QString("UserPoolId")].isNull() && m_user_pool_id_isValid;

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("ClientId")]);
    m_client_id_isSet = !json[QString("ClientId")].isNull() && m_client_id_isValid;

    m_compromised_credentials_risk_configuration_isValid = ::OpenAPI::fromJsonValue(m_compromised_credentials_risk_configuration, json[QString("CompromisedCredentialsRiskConfiguration")]);
    m_compromised_credentials_risk_configuration_isSet = !json[QString("CompromisedCredentialsRiskConfiguration")].isNull() && m_compromised_credentials_risk_configuration_isValid;

    m_account_takeover_risk_configuration_isValid = ::OpenAPI::fromJsonValue(m_account_takeover_risk_configuration, json[QString("AccountTakeoverRiskConfiguration")]);
    m_account_takeover_risk_configuration_isSet = !json[QString("AccountTakeoverRiskConfiguration")].isNull() && m_account_takeover_risk_configuration_isValid;

    m_risk_exception_configuration_isValid = ::OpenAPI::fromJsonValue(m_risk_exception_configuration, json[QString("RiskExceptionConfiguration")]);
    m_risk_exception_configuration_isSet = !json[QString("RiskExceptionConfiguration")].isNull() && m_risk_exception_configuration_isValid;

    m_last_modified_date_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date, json[QString("LastModifiedDate")]);
    m_last_modified_date_isSet = !json[QString("LastModifiedDate")].isNull() && m_last_modified_date_isValid;
}

QString OAIRiskConfigurationType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRiskConfigurationType::asJsonObject() const {
    QJsonObject obj;
    if (m_user_pool_id_isSet) {
        obj.insert(QString("UserPoolId"), ::OpenAPI::toJsonValue(m_user_pool_id));
    }
    if (m_client_id_isSet) {
        obj.insert(QString("ClientId"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_compromised_credentials_risk_configuration.isSet()) {
        obj.insert(QString("CompromisedCredentialsRiskConfiguration"), ::OpenAPI::toJsonValue(m_compromised_credentials_risk_configuration));
    }
    if (m_account_takeover_risk_configuration.isSet()) {
        obj.insert(QString("AccountTakeoverRiskConfiguration"), ::OpenAPI::toJsonValue(m_account_takeover_risk_configuration));
    }
    if (m_risk_exception_configuration.isSet()) {
        obj.insert(QString("RiskExceptionConfiguration"), ::OpenAPI::toJsonValue(m_risk_exception_configuration));
    }
    if (m_last_modified_date_isSet) {
        obj.insert(QString("LastModifiedDate"), ::OpenAPI::toJsonValue(m_last_modified_date));
    }
    return obj;
}

QString OAIRiskConfigurationType::getUserPoolId() const {
    return m_user_pool_id;
}
void OAIRiskConfigurationType::setUserPoolId(const QString &user_pool_id) {
    m_user_pool_id = user_pool_id;
    m_user_pool_id_isSet = true;
}

bool OAIRiskConfigurationType::is_user_pool_id_Set() const{
    return m_user_pool_id_isSet;
}

bool OAIRiskConfigurationType::is_user_pool_id_Valid() const{
    return m_user_pool_id_isValid;
}

QString OAIRiskConfigurationType::getClientId() const {
    return m_client_id;
}
void OAIRiskConfigurationType::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIRiskConfigurationType::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIRiskConfigurationType::is_client_id_Valid() const{
    return m_client_id_isValid;
}

OAIRiskConfigurationType_CompromisedCredentialsRiskConfiguration OAIRiskConfigurationType::getCompromisedCredentialsRiskConfiguration() const {
    return m_compromised_credentials_risk_configuration;
}
void OAIRiskConfigurationType::setCompromisedCredentialsRiskConfiguration(const OAIRiskConfigurationType_CompromisedCredentialsRiskConfiguration &compromised_credentials_risk_configuration) {
    m_compromised_credentials_risk_configuration = compromised_credentials_risk_configuration;
    m_compromised_credentials_risk_configuration_isSet = true;
}

bool OAIRiskConfigurationType::is_compromised_credentials_risk_configuration_Set() const{
    return m_compromised_credentials_risk_configuration_isSet;
}

bool OAIRiskConfigurationType::is_compromised_credentials_risk_configuration_Valid() const{
    return m_compromised_credentials_risk_configuration_isValid;
}

OAIRiskConfigurationType_AccountTakeoverRiskConfiguration OAIRiskConfigurationType::getAccountTakeoverRiskConfiguration() const {
    return m_account_takeover_risk_configuration;
}
void OAIRiskConfigurationType::setAccountTakeoverRiskConfiguration(const OAIRiskConfigurationType_AccountTakeoverRiskConfiguration &account_takeover_risk_configuration) {
    m_account_takeover_risk_configuration = account_takeover_risk_configuration;
    m_account_takeover_risk_configuration_isSet = true;
}

bool OAIRiskConfigurationType::is_account_takeover_risk_configuration_Set() const{
    return m_account_takeover_risk_configuration_isSet;
}

bool OAIRiskConfigurationType::is_account_takeover_risk_configuration_Valid() const{
    return m_account_takeover_risk_configuration_isValid;
}

OAISetRiskConfigurationRequest_RiskExceptionConfiguration OAIRiskConfigurationType::getRiskExceptionConfiguration() const {
    return m_risk_exception_configuration;
}
void OAIRiskConfigurationType::setRiskExceptionConfiguration(const OAISetRiskConfigurationRequest_RiskExceptionConfiguration &risk_exception_configuration) {
    m_risk_exception_configuration = risk_exception_configuration;
    m_risk_exception_configuration_isSet = true;
}

bool OAIRiskConfigurationType::is_risk_exception_configuration_Set() const{
    return m_risk_exception_configuration_isSet;
}

bool OAIRiskConfigurationType::is_risk_exception_configuration_Valid() const{
    return m_risk_exception_configuration_isValid;
}

QDateTime OAIRiskConfigurationType::getLastModifiedDate() const {
    return m_last_modified_date;
}
void OAIRiskConfigurationType::setLastModifiedDate(const QDateTime &last_modified_date) {
    m_last_modified_date = last_modified_date;
    m_last_modified_date_isSet = true;
}

bool OAIRiskConfigurationType::is_last_modified_date_Set() const{
    return m_last_modified_date_isSet;
}

bool OAIRiskConfigurationType::is_last_modified_date_Valid() const{
    return m_last_modified_date_isValid;
}

bool OAIRiskConfigurationType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_pool_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_compromised_credentials_risk_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_takeover_risk_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_risk_exception_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRiskConfigurationType::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
