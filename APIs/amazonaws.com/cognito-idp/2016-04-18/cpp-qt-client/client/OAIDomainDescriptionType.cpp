/**
 * Amazon Cognito Identity Provider
 * <p>With the Amazon Cognito user pools API, you can set up user pools and app clients, and authenticate users. To authenticate users from third-party identity providers (IdPs) in this API, you can <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html\">link IdP users to native user profiles</a>. Learn more about the authentication and authorization of federated users in the <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-userpools-server-contract-reference.html\">Using the Amazon Cognito user pools API and user pool endpoints</a>.</p> <p>This API reference provides detailed information about API operations and object types in Amazon Cognito. At the bottom of the page for each API operation and object, under <i>See Also</i>, you can learn how to use it in an Amazon Web Services SDK in the language of your choice.</p> <p>Along with resource management operations, the Amazon Cognito user pools API includes classes of operations and authorization models for client-side and server-side user operations. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\">Using the Amazon Cognito native and OIDC APIs</a> in the <i>Amazon Cognito Developer Guide</i>.</p> <p>You can also start reading about the <code>CognitoIdentityProvider</code> client in the following SDK guides.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/cli/latest/reference/cognito-idp/index.html#cli-aws-cognito-idp\">Amazon Web Services Command Line Interface</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdkfornet/v3/apidocs/items/CognitoIdentityProvider/TCognitoIdentityProviderClient.html\">Amazon Web Services SDK for .NET</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/cpp/api/LATEST/aws-cpp-sdk-cognito-idp/html/class_aws_1_1_cognito_identity_provider_1_1_cognito_identity_provider_client.html\">Amazon Web Services SDK for C++</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/#CognitoIdentityProvider\">Amazon Web Services SDK for Go</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cognitoidentityprovider/CognitoIdentityProviderClient.html\">Amazon Web Services SDK for Java V2</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html\">Amazon Web Services SDK for JavaScript</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-cognito-idp-2016-04-18.html\">Amazon Web Services SDK for PHP V3</a> </p> </li> <li> <p> <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cognito-idp.html\">Amazon Web Services SDK for Python</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CognitoIdentityProvider/Client.html\">Amazon Web Services SDK for Ruby V3</a> </p> </li> </ul> <p>To get started with an Amazon Web Services SDK, see <a href=\"http://aws.amazon.com/developer/tools/\">Tools to Build on Amazon Web Services</a>. For example actions and scenarios, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/service_code_examples_cognito-identity-provider.html\">Code examples for Amazon Cognito Identity Provider using Amazon Web Services SDKs</a>.</p>
 *
 * The version of the OpenAPI document: 2016-04-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDomainDescriptionType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDomainDescriptionType::OAIDomainDescriptionType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDomainDescriptionType::OAIDomainDescriptionType() {
    this->initializeModel();
}

OAIDomainDescriptionType::~OAIDomainDescriptionType() {}

void OAIDomainDescriptionType::initializeModel() {

    m_user_pool_id_isSet = false;
    m_user_pool_id_isValid = false;

    m_aws_account_id_isSet = false;
    m_aws_account_id_isValid = false;

    m_domain_isSet = false;
    m_domain_isValid = false;

    m_s3_bucket_isSet = false;
    m_s3_bucket_isValid = false;

    m_cloud_front_distribution_isSet = false;
    m_cloud_front_distribution_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_custom_domain_config_isSet = false;
    m_custom_domain_config_isValid = false;
}

void OAIDomainDescriptionType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDomainDescriptionType::fromJsonObject(QJsonObject json) {

    m_user_pool_id_isValid = ::OpenAPI::fromJsonValue(m_user_pool_id, json[QString("UserPoolId")]);
    m_user_pool_id_isSet = !json[QString("UserPoolId")].isNull() && m_user_pool_id_isValid;

    m_aws_account_id_isValid = ::OpenAPI::fromJsonValue(m_aws_account_id, json[QString("AWSAccountId")]);
    m_aws_account_id_isSet = !json[QString("AWSAccountId")].isNull() && m_aws_account_id_isValid;

    m_domain_isValid = ::OpenAPI::fromJsonValue(m_domain, json[QString("Domain")]);
    m_domain_isSet = !json[QString("Domain")].isNull() && m_domain_isValid;

    m_s3_bucket_isValid = ::OpenAPI::fromJsonValue(m_s3_bucket, json[QString("S3Bucket")]);
    m_s3_bucket_isSet = !json[QString("S3Bucket")].isNull() && m_s3_bucket_isValid;

    m_cloud_front_distribution_isValid = ::OpenAPI::fromJsonValue(m_cloud_front_distribution, json[QString("CloudFrontDistribution")]);
    m_cloud_front_distribution_isSet = !json[QString("CloudFrontDistribution")].isNull() && m_cloud_front_distribution_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_custom_domain_config_isValid = ::OpenAPI::fromJsonValue(m_custom_domain_config, json[QString("CustomDomainConfig")]);
    m_custom_domain_config_isSet = !json[QString("CustomDomainConfig")].isNull() && m_custom_domain_config_isValid;
}

QString OAIDomainDescriptionType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDomainDescriptionType::asJsonObject() const {
    QJsonObject obj;
    if (m_user_pool_id_isSet) {
        obj.insert(QString("UserPoolId"), ::OpenAPI::toJsonValue(m_user_pool_id));
    }
    if (m_aws_account_id_isSet) {
        obj.insert(QString("AWSAccountId"), ::OpenAPI::toJsonValue(m_aws_account_id));
    }
    if (m_domain_isSet) {
        obj.insert(QString("Domain"), ::OpenAPI::toJsonValue(m_domain));
    }
    if (m_s3_bucket_isSet) {
        obj.insert(QString("S3Bucket"), ::OpenAPI::toJsonValue(m_s3_bucket));
    }
    if (m_cloud_front_distribution_isSet) {
        obj.insert(QString("CloudFrontDistribution"), ::OpenAPI::toJsonValue(m_cloud_front_distribution));
    }
    if (m_version_isSet) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_custom_domain_config.isSet()) {
        obj.insert(QString("CustomDomainConfig"), ::OpenAPI::toJsonValue(m_custom_domain_config));
    }
    return obj;
}

QString OAIDomainDescriptionType::getUserPoolId() const {
    return m_user_pool_id;
}
void OAIDomainDescriptionType::setUserPoolId(const QString &user_pool_id) {
    m_user_pool_id = user_pool_id;
    m_user_pool_id_isSet = true;
}

bool OAIDomainDescriptionType::is_user_pool_id_Set() const{
    return m_user_pool_id_isSet;
}

bool OAIDomainDescriptionType::is_user_pool_id_Valid() const{
    return m_user_pool_id_isValid;
}

QString OAIDomainDescriptionType::getAwsAccountId() const {
    return m_aws_account_id;
}
void OAIDomainDescriptionType::setAwsAccountId(const QString &aws_account_id) {
    m_aws_account_id = aws_account_id;
    m_aws_account_id_isSet = true;
}

bool OAIDomainDescriptionType::is_aws_account_id_Set() const{
    return m_aws_account_id_isSet;
}

bool OAIDomainDescriptionType::is_aws_account_id_Valid() const{
    return m_aws_account_id_isValid;
}

QString OAIDomainDescriptionType::getDomain() const {
    return m_domain;
}
void OAIDomainDescriptionType::setDomain(const QString &domain) {
    m_domain = domain;
    m_domain_isSet = true;
}

bool OAIDomainDescriptionType::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAIDomainDescriptionType::is_domain_Valid() const{
    return m_domain_isValid;
}

QString OAIDomainDescriptionType::getS3Bucket() const {
    return m_s3_bucket;
}
void OAIDomainDescriptionType::setS3Bucket(const QString &s3_bucket) {
    m_s3_bucket = s3_bucket;
    m_s3_bucket_isSet = true;
}

bool OAIDomainDescriptionType::is_s3_bucket_Set() const{
    return m_s3_bucket_isSet;
}

bool OAIDomainDescriptionType::is_s3_bucket_Valid() const{
    return m_s3_bucket_isValid;
}

QString OAIDomainDescriptionType::getCloudFrontDistribution() const {
    return m_cloud_front_distribution;
}
void OAIDomainDescriptionType::setCloudFrontDistribution(const QString &cloud_front_distribution) {
    m_cloud_front_distribution = cloud_front_distribution;
    m_cloud_front_distribution_isSet = true;
}

bool OAIDomainDescriptionType::is_cloud_front_distribution_Set() const{
    return m_cloud_front_distribution_isSet;
}

bool OAIDomainDescriptionType::is_cloud_front_distribution_Valid() const{
    return m_cloud_front_distribution_isValid;
}

QString OAIDomainDescriptionType::getVersion() const {
    return m_version;
}
void OAIDomainDescriptionType::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIDomainDescriptionType::is_version_Set() const{
    return m_version_isSet;
}

bool OAIDomainDescriptionType::is_version_Valid() const{
    return m_version_isValid;
}

OAIDomainStatusType OAIDomainDescriptionType::getStatus() const {
    return m_status;
}
void OAIDomainDescriptionType::setStatus(const OAIDomainStatusType &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDomainDescriptionType::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDomainDescriptionType::is_status_Valid() const{
    return m_status_isValid;
}

OAIDomainDescriptionType_CustomDomainConfig OAIDomainDescriptionType::getCustomDomainConfig() const {
    return m_custom_domain_config;
}
void OAIDomainDescriptionType::setCustomDomainConfig(const OAIDomainDescriptionType_CustomDomainConfig &custom_domain_config) {
    m_custom_domain_config = custom_domain_config;
    m_custom_domain_config_isSet = true;
}

bool OAIDomainDescriptionType::is_custom_domain_config_Set() const{
    return m_custom_domain_config_isSet;
}

bool OAIDomainDescriptionType::is_custom_domain_config_Valid() const{
    return m_custom_domain_config_isValid;
}

bool OAIDomainDescriptionType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_pool_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aws_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_bucket_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_front_distribution_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_domain_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDomainDescriptionType::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
