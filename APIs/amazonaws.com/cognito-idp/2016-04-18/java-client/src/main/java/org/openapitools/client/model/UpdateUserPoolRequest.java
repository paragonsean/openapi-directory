/*
 * Amazon Cognito Identity Provider
 * <p>With the Amazon Cognito user pools API, you can set up user pools and app clients, and authenticate users. To authenticate users from third-party identity providers (IdPs) in this API, you can <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html\">link IdP users to native user profiles</a>. Learn more about the authentication and authorization of federated users in the <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-userpools-server-contract-reference.html\">Using the Amazon Cognito user pools API and user pool endpoints</a>.</p> <p>This API reference provides detailed information about API operations and object types in Amazon Cognito. At the bottom of the page for each API operation and object, under <i>See Also</i>, you can learn how to use it in an Amazon Web Services SDK in the language of your choice.</p> <p>Along with resource management operations, the Amazon Cognito user pools API includes classes of operations and authorization models for client-side and server-side user operations. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\">Using the Amazon Cognito native and OIDC APIs</a> in the <i>Amazon Cognito Developer Guide</i>.</p> <p>You can also start reading about the <code>CognitoIdentityProvider</code> client in the following SDK guides.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/cli/latest/reference/cognito-idp/index.html#cli-aws-cognito-idp\">Amazon Web Services Command Line Interface</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdkfornet/v3/apidocs/items/CognitoIdentityProvider/TCognitoIdentityProviderClient.html\">Amazon Web Services SDK for .NET</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/cpp/api/LATEST/aws-cpp-sdk-cognito-idp/html/class_aws_1_1_cognito_identity_provider_1_1_cognito_identity_provider_client.html\">Amazon Web Services SDK for C++</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/#CognitoIdentityProvider\">Amazon Web Services SDK for Go</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cognitoidentityprovider/CognitoIdentityProviderClient.html\">Amazon Web Services SDK for Java V2</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html\">Amazon Web Services SDK for JavaScript</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-cognito-idp-2016-04-18.html\">Amazon Web Services SDK for PHP V3</a> </p> </li> <li> <p> <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cognito-idp.html\">Amazon Web Services SDK for Python</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CognitoIdentityProvider/Client.html\">Amazon Web Services SDK for Ruby V3</a> </p> </li> </ul> <p>To get started with an Amazon Web Services SDK, see <a href=\"http://aws.amazon.com/developer/tools/\">Tools to Build on Amazon Web Services</a>. For example actions and scenarios, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/service_code_examples_cognito-identity-provider.html\">Code examples for Amazon Cognito Identity Provider using Amazon Web Services SDKs</a>.</p>
 *
 * The version of the OpenAPI document: 2016-04-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateUserPoolRequestAccountRecoverySetting;
import org.openapitools.client.model.CreateUserPoolRequestAdminCreateUserConfig;
import org.openapitools.client.model.CreateUserPoolRequestDeviceConfiguration;
import org.openapitools.client.model.CreateUserPoolRequestSmsConfiguration;
import org.openapitools.client.model.CreateUserPoolRequestUserAttributeUpdateSettings;
import org.openapitools.client.model.CreateUserPoolRequestUserPoolAddOns;
import org.openapitools.client.model.DeletionProtectionType;
import org.openapitools.client.model.UpdateUserPoolRequestEmailConfiguration;
import org.openapitools.client.model.UpdateUserPoolRequestLambdaConfig;
import org.openapitools.client.model.UpdateUserPoolRequestPolicies;
import org.openapitools.client.model.UpdateUserPoolRequestVerificationMessageTemplate;
import org.openapitools.client.model.UserPoolMfaType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the request to update the user pool.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:34.148435-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateUserPoolRequest {
  public static final String SERIALIZED_NAME_USER_POOL_ID = "UserPoolId";
  @SerializedName(SERIALIZED_NAME_USER_POOL_ID)
  private String userPoolId;

  public static final String SERIALIZED_NAME_POLICIES = "Policies";
  @SerializedName(SERIALIZED_NAME_POLICIES)
  private UpdateUserPoolRequestPolicies policies;

  public static final String SERIALIZED_NAME_DELETION_PROTECTION = "DeletionProtection";
  @SerializedName(SERIALIZED_NAME_DELETION_PROTECTION)
  private DeletionProtectionType deletionProtection;

  public static final String SERIALIZED_NAME_LAMBDA_CONFIG = "LambdaConfig";
  @SerializedName(SERIALIZED_NAME_LAMBDA_CONFIG)
  private UpdateUserPoolRequestLambdaConfig lambdaConfig;

  public static final String SERIALIZED_NAME_AUTO_VERIFIED_ATTRIBUTES = "AutoVerifiedAttributes";
  @SerializedName(SERIALIZED_NAME_AUTO_VERIFIED_ATTRIBUTES)
  private List autoVerifiedAttributes;

  public static final String SERIALIZED_NAME_SMS_VERIFICATION_MESSAGE = "SmsVerificationMessage";
  @SerializedName(SERIALIZED_NAME_SMS_VERIFICATION_MESSAGE)
  private String smsVerificationMessage;

  public static final String SERIALIZED_NAME_EMAIL_VERIFICATION_MESSAGE = "EmailVerificationMessage";
  @SerializedName(SERIALIZED_NAME_EMAIL_VERIFICATION_MESSAGE)
  private String emailVerificationMessage;

  public static final String SERIALIZED_NAME_EMAIL_VERIFICATION_SUBJECT = "EmailVerificationSubject";
  @SerializedName(SERIALIZED_NAME_EMAIL_VERIFICATION_SUBJECT)
  private String emailVerificationSubject;

  public static final String SERIALIZED_NAME_VERIFICATION_MESSAGE_TEMPLATE = "VerificationMessageTemplate";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_MESSAGE_TEMPLATE)
  private UpdateUserPoolRequestVerificationMessageTemplate verificationMessageTemplate;

  public static final String SERIALIZED_NAME_SMS_AUTHENTICATION_MESSAGE = "SmsAuthenticationMessage";
  @SerializedName(SERIALIZED_NAME_SMS_AUTHENTICATION_MESSAGE)
  private String smsAuthenticationMessage;

  public static final String SERIALIZED_NAME_USER_ATTRIBUTE_UPDATE_SETTINGS = "UserAttributeUpdateSettings";
  @SerializedName(SERIALIZED_NAME_USER_ATTRIBUTE_UPDATE_SETTINGS)
  private CreateUserPoolRequestUserAttributeUpdateSettings userAttributeUpdateSettings;

  public static final String SERIALIZED_NAME_MFA_CONFIGURATION = "MfaConfiguration";
  @SerializedName(SERIALIZED_NAME_MFA_CONFIGURATION)
  private UserPoolMfaType mfaConfiguration;

  public static final String SERIALIZED_NAME_DEVICE_CONFIGURATION = "DeviceConfiguration";
  @SerializedName(SERIALIZED_NAME_DEVICE_CONFIGURATION)
  private CreateUserPoolRequestDeviceConfiguration deviceConfiguration;

  public static final String SERIALIZED_NAME_EMAIL_CONFIGURATION = "EmailConfiguration";
  @SerializedName(SERIALIZED_NAME_EMAIL_CONFIGURATION)
  private UpdateUserPoolRequestEmailConfiguration emailConfiguration;

  public static final String SERIALIZED_NAME_SMS_CONFIGURATION = "SmsConfiguration";
  @SerializedName(SERIALIZED_NAME_SMS_CONFIGURATION)
  private CreateUserPoolRequestSmsConfiguration smsConfiguration;

  public static final String SERIALIZED_NAME_USER_POOL_TAGS = "UserPoolTags";
  @SerializedName(SERIALIZED_NAME_USER_POOL_TAGS)
  private Map userPoolTags;

  public static final String SERIALIZED_NAME_ADMIN_CREATE_USER_CONFIG = "AdminCreateUserConfig";
  @SerializedName(SERIALIZED_NAME_ADMIN_CREATE_USER_CONFIG)
  private CreateUserPoolRequestAdminCreateUserConfig adminCreateUserConfig;

  public static final String SERIALIZED_NAME_USER_POOL_ADD_ONS = "UserPoolAddOns";
  @SerializedName(SERIALIZED_NAME_USER_POOL_ADD_ONS)
  private CreateUserPoolRequestUserPoolAddOns userPoolAddOns;

  public static final String SERIALIZED_NAME_ACCOUNT_RECOVERY_SETTING = "AccountRecoverySetting";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_RECOVERY_SETTING)
  private CreateUserPoolRequestAccountRecoverySetting accountRecoverySetting;

  public UpdateUserPoolRequest() {
  }

  public UpdateUserPoolRequest userPoolId(String userPoolId) {
    this.userPoolId = userPoolId;
    return this;
  }

  /**
   * Get userPoolId
   * @return userPoolId
   */
  @javax.annotation.Nonnull
  public String getUserPoolId() {
    return userPoolId;
  }

  public void setUserPoolId(String userPoolId) {
    this.userPoolId = userPoolId;
  }


  public UpdateUserPoolRequest policies(UpdateUserPoolRequestPolicies policies) {
    this.policies = policies;
    return this;
  }

  /**
   * Get policies
   * @return policies
   */
  @javax.annotation.Nullable
  public UpdateUserPoolRequestPolicies getPolicies() {
    return policies;
  }

  public void setPolicies(UpdateUserPoolRequestPolicies policies) {
    this.policies = policies;
  }


  public UpdateUserPoolRequest deletionProtection(DeletionProtectionType deletionProtection) {
    this.deletionProtection = deletionProtection;
    return this;
  }

  /**
   * Get deletionProtection
   * @return deletionProtection
   */
  @javax.annotation.Nullable
  public DeletionProtectionType getDeletionProtection() {
    return deletionProtection;
  }

  public void setDeletionProtection(DeletionProtectionType deletionProtection) {
    this.deletionProtection = deletionProtection;
  }


  public UpdateUserPoolRequest lambdaConfig(UpdateUserPoolRequestLambdaConfig lambdaConfig) {
    this.lambdaConfig = lambdaConfig;
    return this;
  }

  /**
   * Get lambdaConfig
   * @return lambdaConfig
   */
  @javax.annotation.Nullable
  public UpdateUserPoolRequestLambdaConfig getLambdaConfig() {
    return lambdaConfig;
  }

  public void setLambdaConfig(UpdateUserPoolRequestLambdaConfig lambdaConfig) {
    this.lambdaConfig = lambdaConfig;
  }


  public UpdateUserPoolRequest autoVerifiedAttributes(List autoVerifiedAttributes) {
    this.autoVerifiedAttributes = autoVerifiedAttributes;
    return this;
  }

  /**
   * Get autoVerifiedAttributes
   * @return autoVerifiedAttributes
   */
  @javax.annotation.Nullable
  public List getAutoVerifiedAttributes() {
    return autoVerifiedAttributes;
  }

  public void setAutoVerifiedAttributes(List autoVerifiedAttributes) {
    this.autoVerifiedAttributes = autoVerifiedAttributes;
  }


  public UpdateUserPoolRequest smsVerificationMessage(String smsVerificationMessage) {
    this.smsVerificationMessage = smsVerificationMessage;
    return this;
  }

  /**
   * Get smsVerificationMessage
   * @return smsVerificationMessage
   */
  @javax.annotation.Nullable
  public String getSmsVerificationMessage() {
    return smsVerificationMessage;
  }

  public void setSmsVerificationMessage(String smsVerificationMessage) {
    this.smsVerificationMessage = smsVerificationMessage;
  }


  public UpdateUserPoolRequest emailVerificationMessage(String emailVerificationMessage) {
    this.emailVerificationMessage = emailVerificationMessage;
    return this;
  }

  /**
   * Get emailVerificationMessage
   * @return emailVerificationMessage
   */
  @javax.annotation.Nullable
  public String getEmailVerificationMessage() {
    return emailVerificationMessage;
  }

  public void setEmailVerificationMessage(String emailVerificationMessage) {
    this.emailVerificationMessage = emailVerificationMessage;
  }


  public UpdateUserPoolRequest emailVerificationSubject(String emailVerificationSubject) {
    this.emailVerificationSubject = emailVerificationSubject;
    return this;
  }

  /**
   * Get emailVerificationSubject
   * @return emailVerificationSubject
   */
  @javax.annotation.Nullable
  public String getEmailVerificationSubject() {
    return emailVerificationSubject;
  }

  public void setEmailVerificationSubject(String emailVerificationSubject) {
    this.emailVerificationSubject = emailVerificationSubject;
  }


  public UpdateUserPoolRequest verificationMessageTemplate(UpdateUserPoolRequestVerificationMessageTemplate verificationMessageTemplate) {
    this.verificationMessageTemplate = verificationMessageTemplate;
    return this;
  }

  /**
   * Get verificationMessageTemplate
   * @return verificationMessageTemplate
   */
  @javax.annotation.Nullable
  public UpdateUserPoolRequestVerificationMessageTemplate getVerificationMessageTemplate() {
    return verificationMessageTemplate;
  }

  public void setVerificationMessageTemplate(UpdateUserPoolRequestVerificationMessageTemplate verificationMessageTemplate) {
    this.verificationMessageTemplate = verificationMessageTemplate;
  }


  public UpdateUserPoolRequest smsAuthenticationMessage(String smsAuthenticationMessage) {
    this.smsAuthenticationMessage = smsAuthenticationMessage;
    return this;
  }

  /**
   * Get smsAuthenticationMessage
   * @return smsAuthenticationMessage
   */
  @javax.annotation.Nullable
  public String getSmsAuthenticationMessage() {
    return smsAuthenticationMessage;
  }

  public void setSmsAuthenticationMessage(String smsAuthenticationMessage) {
    this.smsAuthenticationMessage = smsAuthenticationMessage;
  }


  public UpdateUserPoolRequest userAttributeUpdateSettings(CreateUserPoolRequestUserAttributeUpdateSettings userAttributeUpdateSettings) {
    this.userAttributeUpdateSettings = userAttributeUpdateSettings;
    return this;
  }

  /**
   * Get userAttributeUpdateSettings
   * @return userAttributeUpdateSettings
   */
  @javax.annotation.Nullable
  public CreateUserPoolRequestUserAttributeUpdateSettings getUserAttributeUpdateSettings() {
    return userAttributeUpdateSettings;
  }

  public void setUserAttributeUpdateSettings(CreateUserPoolRequestUserAttributeUpdateSettings userAttributeUpdateSettings) {
    this.userAttributeUpdateSettings = userAttributeUpdateSettings;
  }


  public UpdateUserPoolRequest mfaConfiguration(UserPoolMfaType mfaConfiguration) {
    this.mfaConfiguration = mfaConfiguration;
    return this;
  }

  /**
   * Get mfaConfiguration
   * @return mfaConfiguration
   */
  @javax.annotation.Nullable
  public UserPoolMfaType getMfaConfiguration() {
    return mfaConfiguration;
  }

  public void setMfaConfiguration(UserPoolMfaType mfaConfiguration) {
    this.mfaConfiguration = mfaConfiguration;
  }


  public UpdateUserPoolRequest deviceConfiguration(CreateUserPoolRequestDeviceConfiguration deviceConfiguration) {
    this.deviceConfiguration = deviceConfiguration;
    return this;
  }

  /**
   * Get deviceConfiguration
   * @return deviceConfiguration
   */
  @javax.annotation.Nullable
  public CreateUserPoolRequestDeviceConfiguration getDeviceConfiguration() {
    return deviceConfiguration;
  }

  public void setDeviceConfiguration(CreateUserPoolRequestDeviceConfiguration deviceConfiguration) {
    this.deviceConfiguration = deviceConfiguration;
  }


  public UpdateUserPoolRequest emailConfiguration(UpdateUserPoolRequestEmailConfiguration emailConfiguration) {
    this.emailConfiguration = emailConfiguration;
    return this;
  }

  /**
   * Get emailConfiguration
   * @return emailConfiguration
   */
  @javax.annotation.Nullable
  public UpdateUserPoolRequestEmailConfiguration getEmailConfiguration() {
    return emailConfiguration;
  }

  public void setEmailConfiguration(UpdateUserPoolRequestEmailConfiguration emailConfiguration) {
    this.emailConfiguration = emailConfiguration;
  }


  public UpdateUserPoolRequest smsConfiguration(CreateUserPoolRequestSmsConfiguration smsConfiguration) {
    this.smsConfiguration = smsConfiguration;
    return this;
  }

  /**
   * Get smsConfiguration
   * @return smsConfiguration
   */
  @javax.annotation.Nullable
  public CreateUserPoolRequestSmsConfiguration getSmsConfiguration() {
    return smsConfiguration;
  }

  public void setSmsConfiguration(CreateUserPoolRequestSmsConfiguration smsConfiguration) {
    this.smsConfiguration = smsConfiguration;
  }


  public UpdateUserPoolRequest userPoolTags(Map userPoolTags) {
    this.userPoolTags = userPoolTags;
    return this;
  }

  /**
   * Get userPoolTags
   * @return userPoolTags
   */
  @javax.annotation.Nullable
  public Map getUserPoolTags() {
    return userPoolTags;
  }

  public void setUserPoolTags(Map userPoolTags) {
    this.userPoolTags = userPoolTags;
  }


  public UpdateUserPoolRequest adminCreateUserConfig(CreateUserPoolRequestAdminCreateUserConfig adminCreateUserConfig) {
    this.adminCreateUserConfig = adminCreateUserConfig;
    return this;
  }

  /**
   * Get adminCreateUserConfig
   * @return adminCreateUserConfig
   */
  @javax.annotation.Nullable
  public CreateUserPoolRequestAdminCreateUserConfig getAdminCreateUserConfig() {
    return adminCreateUserConfig;
  }

  public void setAdminCreateUserConfig(CreateUserPoolRequestAdminCreateUserConfig adminCreateUserConfig) {
    this.adminCreateUserConfig = adminCreateUserConfig;
  }


  public UpdateUserPoolRequest userPoolAddOns(CreateUserPoolRequestUserPoolAddOns userPoolAddOns) {
    this.userPoolAddOns = userPoolAddOns;
    return this;
  }

  /**
   * Get userPoolAddOns
   * @return userPoolAddOns
   */
  @javax.annotation.Nullable
  public CreateUserPoolRequestUserPoolAddOns getUserPoolAddOns() {
    return userPoolAddOns;
  }

  public void setUserPoolAddOns(CreateUserPoolRequestUserPoolAddOns userPoolAddOns) {
    this.userPoolAddOns = userPoolAddOns;
  }


  public UpdateUserPoolRequest accountRecoverySetting(CreateUserPoolRequestAccountRecoverySetting accountRecoverySetting) {
    this.accountRecoverySetting = accountRecoverySetting;
    return this;
  }

  /**
   * Get accountRecoverySetting
   * @return accountRecoverySetting
   */
  @javax.annotation.Nullable
  public CreateUserPoolRequestAccountRecoverySetting getAccountRecoverySetting() {
    return accountRecoverySetting;
  }

  public void setAccountRecoverySetting(CreateUserPoolRequestAccountRecoverySetting accountRecoverySetting) {
    this.accountRecoverySetting = accountRecoverySetting;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateUserPoolRequest updateUserPoolRequest = (UpdateUserPoolRequest) o;
    return Objects.equals(this.userPoolId, updateUserPoolRequest.userPoolId) &&
        Objects.equals(this.policies, updateUserPoolRequest.policies) &&
        Objects.equals(this.deletionProtection, updateUserPoolRequest.deletionProtection) &&
        Objects.equals(this.lambdaConfig, updateUserPoolRequest.lambdaConfig) &&
        Objects.equals(this.autoVerifiedAttributes, updateUserPoolRequest.autoVerifiedAttributes) &&
        Objects.equals(this.smsVerificationMessage, updateUserPoolRequest.smsVerificationMessage) &&
        Objects.equals(this.emailVerificationMessage, updateUserPoolRequest.emailVerificationMessage) &&
        Objects.equals(this.emailVerificationSubject, updateUserPoolRequest.emailVerificationSubject) &&
        Objects.equals(this.verificationMessageTemplate, updateUserPoolRequest.verificationMessageTemplate) &&
        Objects.equals(this.smsAuthenticationMessage, updateUserPoolRequest.smsAuthenticationMessage) &&
        Objects.equals(this.userAttributeUpdateSettings, updateUserPoolRequest.userAttributeUpdateSettings) &&
        Objects.equals(this.mfaConfiguration, updateUserPoolRequest.mfaConfiguration) &&
        Objects.equals(this.deviceConfiguration, updateUserPoolRequest.deviceConfiguration) &&
        Objects.equals(this.emailConfiguration, updateUserPoolRequest.emailConfiguration) &&
        Objects.equals(this.smsConfiguration, updateUserPoolRequest.smsConfiguration) &&
        Objects.equals(this.userPoolTags, updateUserPoolRequest.userPoolTags) &&
        Objects.equals(this.adminCreateUserConfig, updateUserPoolRequest.adminCreateUserConfig) &&
        Objects.equals(this.userPoolAddOns, updateUserPoolRequest.userPoolAddOns) &&
        Objects.equals(this.accountRecoverySetting, updateUserPoolRequest.accountRecoverySetting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userPoolId, policies, deletionProtection, lambdaConfig, autoVerifiedAttributes, smsVerificationMessage, emailVerificationMessage, emailVerificationSubject, verificationMessageTemplate, smsAuthenticationMessage, userAttributeUpdateSettings, mfaConfiguration, deviceConfiguration, emailConfiguration, smsConfiguration, userPoolTags, adminCreateUserConfig, userPoolAddOns, accountRecoverySetting);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateUserPoolRequest {\n");
    sb.append("    userPoolId: ").append(toIndentedString(userPoolId)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    deletionProtection: ").append(toIndentedString(deletionProtection)).append("\n");
    sb.append("    lambdaConfig: ").append(toIndentedString(lambdaConfig)).append("\n");
    sb.append("    autoVerifiedAttributes: ").append(toIndentedString(autoVerifiedAttributes)).append("\n");
    sb.append("    smsVerificationMessage: ").append(toIndentedString(smsVerificationMessage)).append("\n");
    sb.append("    emailVerificationMessage: ").append(toIndentedString(emailVerificationMessage)).append("\n");
    sb.append("    emailVerificationSubject: ").append(toIndentedString(emailVerificationSubject)).append("\n");
    sb.append("    verificationMessageTemplate: ").append(toIndentedString(verificationMessageTemplate)).append("\n");
    sb.append("    smsAuthenticationMessage: ").append(toIndentedString(smsAuthenticationMessage)).append("\n");
    sb.append("    userAttributeUpdateSettings: ").append(toIndentedString(userAttributeUpdateSettings)).append("\n");
    sb.append("    mfaConfiguration: ").append(toIndentedString(mfaConfiguration)).append("\n");
    sb.append("    deviceConfiguration: ").append(toIndentedString(deviceConfiguration)).append("\n");
    sb.append("    emailConfiguration: ").append(toIndentedString(emailConfiguration)).append("\n");
    sb.append("    smsConfiguration: ").append(toIndentedString(smsConfiguration)).append("\n");
    sb.append("    userPoolTags: ").append(toIndentedString(userPoolTags)).append("\n");
    sb.append("    adminCreateUserConfig: ").append(toIndentedString(adminCreateUserConfig)).append("\n");
    sb.append("    userPoolAddOns: ").append(toIndentedString(userPoolAddOns)).append("\n");
    sb.append("    accountRecoverySetting: ").append(toIndentedString(accountRecoverySetting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("UserPoolId");
    openapiFields.add("Policies");
    openapiFields.add("DeletionProtection");
    openapiFields.add("LambdaConfig");
    openapiFields.add("AutoVerifiedAttributes");
    openapiFields.add("SmsVerificationMessage");
    openapiFields.add("EmailVerificationMessage");
    openapiFields.add("EmailVerificationSubject");
    openapiFields.add("VerificationMessageTemplate");
    openapiFields.add("SmsAuthenticationMessage");
    openapiFields.add("UserAttributeUpdateSettings");
    openapiFields.add("MfaConfiguration");
    openapiFields.add("DeviceConfiguration");
    openapiFields.add("EmailConfiguration");
    openapiFields.add("SmsConfiguration");
    openapiFields.add("UserPoolTags");
    openapiFields.add("AdminCreateUserConfig");
    openapiFields.add("UserPoolAddOns");
    openapiFields.add("AccountRecoverySetting");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("UserPoolId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateUserPoolRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateUserPoolRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateUserPoolRequest is not found in the empty JSON string", UpdateUserPoolRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateUserPoolRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateUserPoolRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateUserPoolRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `UserPoolId`
      String.validateJsonElement(jsonObj.get("UserPoolId"));
      // validate the optional field `Policies`
      if (jsonObj.get("Policies") != null && !jsonObj.get("Policies").isJsonNull()) {
        UpdateUserPoolRequestPolicies.validateJsonElement(jsonObj.get("Policies"));
      }
      // validate the optional field `DeletionProtection`
      if (jsonObj.get("DeletionProtection") != null && !jsonObj.get("DeletionProtection").isJsonNull()) {
        DeletionProtectionType.validateJsonElement(jsonObj.get("DeletionProtection"));
      }
      // validate the optional field `LambdaConfig`
      if (jsonObj.get("LambdaConfig") != null && !jsonObj.get("LambdaConfig").isJsonNull()) {
        UpdateUserPoolRequestLambdaConfig.validateJsonElement(jsonObj.get("LambdaConfig"));
      }
      // validate the optional field `AutoVerifiedAttributes`
      if (jsonObj.get("AutoVerifiedAttributes") != null && !jsonObj.get("AutoVerifiedAttributes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AutoVerifiedAttributes"));
      }
      // validate the optional field `SmsVerificationMessage`
      if (jsonObj.get("SmsVerificationMessage") != null && !jsonObj.get("SmsVerificationMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SmsVerificationMessage"));
      }
      // validate the optional field `EmailVerificationMessage`
      if (jsonObj.get("EmailVerificationMessage") != null && !jsonObj.get("EmailVerificationMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EmailVerificationMessage"));
      }
      // validate the optional field `EmailVerificationSubject`
      if (jsonObj.get("EmailVerificationSubject") != null && !jsonObj.get("EmailVerificationSubject").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EmailVerificationSubject"));
      }
      // validate the optional field `VerificationMessageTemplate`
      if (jsonObj.get("VerificationMessageTemplate") != null && !jsonObj.get("VerificationMessageTemplate").isJsonNull()) {
        UpdateUserPoolRequestVerificationMessageTemplate.validateJsonElement(jsonObj.get("VerificationMessageTemplate"));
      }
      // validate the optional field `SmsAuthenticationMessage`
      if (jsonObj.get("SmsAuthenticationMessage") != null && !jsonObj.get("SmsAuthenticationMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SmsAuthenticationMessage"));
      }
      // validate the optional field `UserAttributeUpdateSettings`
      if (jsonObj.get("UserAttributeUpdateSettings") != null && !jsonObj.get("UserAttributeUpdateSettings").isJsonNull()) {
        CreateUserPoolRequestUserAttributeUpdateSettings.validateJsonElement(jsonObj.get("UserAttributeUpdateSettings"));
      }
      // validate the optional field `MfaConfiguration`
      if (jsonObj.get("MfaConfiguration") != null && !jsonObj.get("MfaConfiguration").isJsonNull()) {
        UserPoolMfaType.validateJsonElement(jsonObj.get("MfaConfiguration"));
      }
      // validate the optional field `DeviceConfiguration`
      if (jsonObj.get("DeviceConfiguration") != null && !jsonObj.get("DeviceConfiguration").isJsonNull()) {
        CreateUserPoolRequestDeviceConfiguration.validateJsonElement(jsonObj.get("DeviceConfiguration"));
      }
      // validate the optional field `EmailConfiguration`
      if (jsonObj.get("EmailConfiguration") != null && !jsonObj.get("EmailConfiguration").isJsonNull()) {
        UpdateUserPoolRequestEmailConfiguration.validateJsonElement(jsonObj.get("EmailConfiguration"));
      }
      // validate the optional field `SmsConfiguration`
      if (jsonObj.get("SmsConfiguration") != null && !jsonObj.get("SmsConfiguration").isJsonNull()) {
        CreateUserPoolRequestSmsConfiguration.validateJsonElement(jsonObj.get("SmsConfiguration"));
      }
      // validate the optional field `UserPoolTags`
      if (jsonObj.get("UserPoolTags") != null && !jsonObj.get("UserPoolTags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("UserPoolTags"));
      }
      // validate the optional field `AdminCreateUserConfig`
      if (jsonObj.get("AdminCreateUserConfig") != null && !jsonObj.get("AdminCreateUserConfig").isJsonNull()) {
        CreateUserPoolRequestAdminCreateUserConfig.validateJsonElement(jsonObj.get("AdminCreateUserConfig"));
      }
      // validate the optional field `UserPoolAddOns`
      if (jsonObj.get("UserPoolAddOns") != null && !jsonObj.get("UserPoolAddOns").isJsonNull()) {
        CreateUserPoolRequestUserPoolAddOns.validateJsonElement(jsonObj.get("UserPoolAddOns"));
      }
      // validate the optional field `AccountRecoverySetting`
      if (jsonObj.get("AccountRecoverySetting") != null && !jsonObj.get("AccountRecoverySetting").isJsonNull()) {
        CreateUserPoolRequestAccountRecoverySetting.validateJsonElement(jsonObj.get("AccountRecoverySetting"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateUserPoolRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateUserPoolRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateUserPoolRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateUserPoolRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateUserPoolRequest>() {
           @Override
           public void write(JsonWriter out, UpdateUserPoolRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateUserPoolRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateUserPoolRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateUserPoolRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateUserPoolRequest
   */
  public static UpdateUserPoolRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateUserPoolRequest.class);
  }

  /**
   * Convert an instance of UpdateUserPoolRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

