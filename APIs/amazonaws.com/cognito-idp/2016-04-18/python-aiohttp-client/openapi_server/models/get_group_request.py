# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetGroupRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_name: str=None, user_pool_id: str=None):
        """GetGroupRequest - a model defined in OpenAPI

        :param group_name: The group_name of this GetGroupRequest.
        :param user_pool_id: The user_pool_id of this GetGroupRequest.
        """
        self.openapi_types = {
            'group_name': str,
            'user_pool_id': str
        }

        self.attribute_map = {
            'group_name': 'GroupName',
            'user_pool_id': 'UserPoolId'
        }

        self._group_name = group_name
        self._user_pool_id = user_pool_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetGroupRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetGroupRequest of this GetGroupRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_name(self):
        """Gets the group_name of this GetGroupRequest.


        :return: The group_name of this GetGroupRequest.
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name):
        """Sets the group_name of this GetGroupRequest.


        :param group_name: The group_name of this GetGroupRequest.
        :type group_name: str
        """
        if group_name is None:
            raise ValueError("Invalid value for `group_name`, must not be `None`")

        self._group_name = group_name

    @property
    def user_pool_id(self):
        """Gets the user_pool_id of this GetGroupRequest.


        :return: The user_pool_id of this GetGroupRequest.
        :rtype: str
        """
        return self._user_pool_id

    @user_pool_id.setter
    def user_pool_id(self, user_pool_id):
        """Sets the user_pool_id of this GetGroupRequest.


        :param user_pool_id: The user_pool_id of this GetGroupRequest.
        :type user_pool_id: str
        """
        if user_pool_id is None:
            raise ValueError("Invalid value for `user_pool_id`, must not be `None`")

        self._user_pool_id = user_pool_id
