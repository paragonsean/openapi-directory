# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateResourceServerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_pool_id: str=None, identifier: str=None, name: str=None, scopes: List=None):
        """UpdateResourceServerRequest - a model defined in OpenAPI

        :param user_pool_id: The user_pool_id of this UpdateResourceServerRequest.
        :param identifier: The identifier of this UpdateResourceServerRequest.
        :param name: The name of this UpdateResourceServerRequest.
        :param scopes: The scopes of this UpdateResourceServerRequest.
        """
        self.openapi_types = {
            'user_pool_id': str,
            'identifier': str,
            'name': str,
            'scopes': List
        }

        self.attribute_map = {
            'user_pool_id': 'UserPoolId',
            'identifier': 'Identifier',
            'name': 'Name',
            'scopes': 'Scopes'
        }

        self._user_pool_id = user_pool_id
        self._identifier = identifier
        self._name = name
        self._scopes = scopes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateResourceServerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateResourceServerRequest of this UpdateResourceServerRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_pool_id(self):
        """Gets the user_pool_id of this UpdateResourceServerRequest.


        :return: The user_pool_id of this UpdateResourceServerRequest.
        :rtype: str
        """
        return self._user_pool_id

    @user_pool_id.setter
    def user_pool_id(self, user_pool_id):
        """Sets the user_pool_id of this UpdateResourceServerRequest.


        :param user_pool_id: The user_pool_id of this UpdateResourceServerRequest.
        :type user_pool_id: str
        """
        if user_pool_id is None:
            raise ValueError("Invalid value for `user_pool_id`, must not be `None`")

        self._user_pool_id = user_pool_id

    @property
    def identifier(self):
        """Gets the identifier of this UpdateResourceServerRequest.


        :return: The identifier of this UpdateResourceServerRequest.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this UpdateResourceServerRequest.


        :param identifier: The identifier of this UpdateResourceServerRequest.
        :type identifier: str
        """
        if identifier is None:
            raise ValueError("Invalid value for `identifier`, must not be `None`")

        self._identifier = identifier

    @property
    def name(self):
        """Gets the name of this UpdateResourceServerRequest.


        :return: The name of this UpdateResourceServerRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateResourceServerRequest.


        :param name: The name of this UpdateResourceServerRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def scopes(self):
        """Gets the scopes of this UpdateResourceServerRequest.


        :return: The scopes of this UpdateResourceServerRequest.
        :rtype: List
        """
        return self._scopes

    @scopes.setter
    def scopes(self, scopes):
        """Sets the scopes of this UpdateResourceServerRequest.


        :param scopes: The scopes of this UpdateResourceServerRequest.
        :type scopes: List
        """

        self._scopes = scopes
