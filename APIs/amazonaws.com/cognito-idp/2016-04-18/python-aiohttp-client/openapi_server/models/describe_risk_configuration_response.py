# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_risk_configuration_response_risk_configuration import DescribeRiskConfigurationResponseRiskConfiguration
from openapi_server import util


class DescribeRiskConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, risk_configuration: DescribeRiskConfigurationResponseRiskConfiguration=None):
        """DescribeRiskConfigurationResponse - a model defined in OpenAPI

        :param risk_configuration: The risk_configuration of this DescribeRiskConfigurationResponse.
        """
        self.openapi_types = {
            'risk_configuration': DescribeRiskConfigurationResponseRiskConfiguration
        }

        self.attribute_map = {
            'risk_configuration': 'RiskConfiguration'
        }

        self._risk_configuration = risk_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeRiskConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeRiskConfigurationResponse of this DescribeRiskConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def risk_configuration(self):
        """Gets the risk_configuration of this DescribeRiskConfigurationResponse.


        :return: The risk_configuration of this DescribeRiskConfigurationResponse.
        :rtype: DescribeRiskConfigurationResponseRiskConfiguration
        """
        return self._risk_configuration

    @risk_configuration.setter
    def risk_configuration(self, risk_configuration):
        """Sets the risk_configuration of this DescribeRiskConfigurationResponse.


        :param risk_configuration: The risk_configuration of this DescribeRiskConfigurationResponse.
        :type risk_configuration: DescribeRiskConfigurationResponseRiskConfiguration
        """
        if risk_configuration is None:
            raise ValueError("Invalid value for `risk_configuration`, must not be `None`")

        self._risk_configuration = risk_configuration
