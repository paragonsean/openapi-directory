# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RiskExceptionConfigurationType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blocked_ip_range_list: List=None, skipped_ip_range_list: List=None):
        """RiskExceptionConfigurationType - a model defined in OpenAPI

        :param blocked_ip_range_list: The blocked_ip_range_list of this RiskExceptionConfigurationType.
        :param skipped_ip_range_list: The skipped_ip_range_list of this RiskExceptionConfigurationType.
        """
        self.openapi_types = {
            'blocked_ip_range_list': List,
            'skipped_ip_range_list': List
        }

        self.attribute_map = {
            'blocked_ip_range_list': 'BlockedIPRangeList',
            'skipped_ip_range_list': 'SkippedIPRangeList'
        }

        self._blocked_ip_range_list = blocked_ip_range_list
        self._skipped_ip_range_list = skipped_ip_range_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RiskExceptionConfigurationType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RiskExceptionConfigurationType of this RiskExceptionConfigurationType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blocked_ip_range_list(self):
        """Gets the blocked_ip_range_list of this RiskExceptionConfigurationType.


        :return: The blocked_ip_range_list of this RiskExceptionConfigurationType.
        :rtype: List
        """
        return self._blocked_ip_range_list

    @blocked_ip_range_list.setter
    def blocked_ip_range_list(self, blocked_ip_range_list):
        """Sets the blocked_ip_range_list of this RiskExceptionConfigurationType.


        :param blocked_ip_range_list: The blocked_ip_range_list of this RiskExceptionConfigurationType.
        :type blocked_ip_range_list: List
        """

        self._blocked_ip_range_list = blocked_ip_range_list

    @property
    def skipped_ip_range_list(self):
        """Gets the skipped_ip_range_list of this RiskExceptionConfigurationType.


        :return: The skipped_ip_range_list of this RiskExceptionConfigurationType.
        :rtype: List
        """
        return self._skipped_ip_range_list

    @skipped_ip_range_list.setter
    def skipped_ip_range_list(self, skipped_ip_range_list):
        """Sets the skipped_ip_range_list of this RiskExceptionConfigurationType.


        :param skipped_ip_range_list: The skipped_ip_range_list of this RiskExceptionConfigurationType.
        :type skipped_ip_range_list: List
        """

        self._skipped_ip_range_list = skipped_ip_range_list
