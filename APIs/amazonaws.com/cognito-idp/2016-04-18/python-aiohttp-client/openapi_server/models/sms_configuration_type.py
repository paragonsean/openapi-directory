# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SmsConfigurationType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sns_caller_arn: str=None, external_id: str=None, sns_region: str=None):
        """SmsConfigurationType - a model defined in OpenAPI

        :param sns_caller_arn: The sns_caller_arn of this SmsConfigurationType.
        :param external_id: The external_id of this SmsConfigurationType.
        :param sns_region: The sns_region of this SmsConfigurationType.
        """
        self.openapi_types = {
            'sns_caller_arn': str,
            'external_id': str,
            'sns_region': str
        }

        self.attribute_map = {
            'sns_caller_arn': 'SnsCallerArn',
            'external_id': 'ExternalId',
            'sns_region': 'SnsRegion'
        }

        self._sns_caller_arn = sns_caller_arn
        self._external_id = external_id
        self._sns_region = sns_region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SmsConfigurationType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SmsConfigurationType of this SmsConfigurationType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sns_caller_arn(self):
        """Gets the sns_caller_arn of this SmsConfigurationType.


        :return: The sns_caller_arn of this SmsConfigurationType.
        :rtype: str
        """
        return self._sns_caller_arn

    @sns_caller_arn.setter
    def sns_caller_arn(self, sns_caller_arn):
        """Sets the sns_caller_arn of this SmsConfigurationType.


        :param sns_caller_arn: The sns_caller_arn of this SmsConfigurationType.
        :type sns_caller_arn: str
        """
        if sns_caller_arn is None:
            raise ValueError("Invalid value for `sns_caller_arn`, must not be `None`")

        self._sns_caller_arn = sns_caller_arn

    @property
    def external_id(self):
        """Gets the external_id of this SmsConfigurationType.


        :return: The external_id of this SmsConfigurationType.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this SmsConfigurationType.


        :param external_id: The external_id of this SmsConfigurationType.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def sns_region(self):
        """Gets the sns_region of this SmsConfigurationType.


        :return: The sns_region of this SmsConfigurationType.
        :rtype: str
        """
        return self._sns_region

    @sns_region.setter
    def sns_region(self, sns_region):
        """Sets the sns_region of this SmsConfigurationType.


        :param sns_region: The sns_region of this SmsConfigurationType.
        :type sns_region: str
        """

        self._sns_region = sns_region
