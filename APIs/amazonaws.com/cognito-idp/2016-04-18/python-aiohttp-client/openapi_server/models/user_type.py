# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_status_type import UserStatusType
from openapi_server import util


class UserType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, username: str=None, attributes: List=None, user_create_date: datetime=None, user_last_modified_date: datetime=None, enabled: bool=None, user_status: UserStatusType=None, mfa_options: List=None):
        """UserType - a model defined in OpenAPI

        :param username: The username of this UserType.
        :param attributes: The attributes of this UserType.
        :param user_create_date: The user_create_date of this UserType.
        :param user_last_modified_date: The user_last_modified_date of this UserType.
        :param enabled: The enabled of this UserType.
        :param user_status: The user_status of this UserType.
        :param mfa_options: The mfa_options of this UserType.
        """
        self.openapi_types = {
            'username': str,
            'attributes': List,
            'user_create_date': datetime,
            'user_last_modified_date': datetime,
            'enabled': bool,
            'user_status': UserStatusType,
            'mfa_options': List
        }

        self.attribute_map = {
            'username': 'Username',
            'attributes': 'Attributes',
            'user_create_date': 'UserCreateDate',
            'user_last_modified_date': 'UserLastModifiedDate',
            'enabled': 'Enabled',
            'user_status': 'UserStatus',
            'mfa_options': 'MFAOptions'
        }

        self._username = username
        self._attributes = attributes
        self._user_create_date = user_create_date
        self._user_last_modified_date = user_last_modified_date
        self._enabled = enabled
        self._user_status = user_status
        self._mfa_options = mfa_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserType of this UserType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self):
        """Gets the username of this UserType.


        :return: The username of this UserType.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this UserType.


        :param username: The username of this UserType.
        :type username: str
        """

        self._username = username

    @property
    def attributes(self):
        """Gets the attributes of this UserType.


        :return: The attributes of this UserType.
        :rtype: List
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this UserType.


        :param attributes: The attributes of this UserType.
        :type attributes: List
        """

        self._attributes = attributes

    @property
    def user_create_date(self):
        """Gets the user_create_date of this UserType.


        :return: The user_create_date of this UserType.
        :rtype: datetime
        """
        return self._user_create_date

    @user_create_date.setter
    def user_create_date(self, user_create_date):
        """Sets the user_create_date of this UserType.


        :param user_create_date: The user_create_date of this UserType.
        :type user_create_date: datetime
        """

        self._user_create_date = user_create_date

    @property
    def user_last_modified_date(self):
        """Gets the user_last_modified_date of this UserType.


        :return: The user_last_modified_date of this UserType.
        :rtype: datetime
        """
        return self._user_last_modified_date

    @user_last_modified_date.setter
    def user_last_modified_date(self, user_last_modified_date):
        """Sets the user_last_modified_date of this UserType.


        :param user_last_modified_date: The user_last_modified_date of this UserType.
        :type user_last_modified_date: datetime
        """

        self._user_last_modified_date = user_last_modified_date

    @property
    def enabled(self):
        """Gets the enabled of this UserType.


        :return: The enabled of this UserType.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this UserType.


        :param enabled: The enabled of this UserType.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def user_status(self):
        """Gets the user_status of this UserType.


        :return: The user_status of this UserType.
        :rtype: UserStatusType
        """
        return self._user_status

    @user_status.setter
    def user_status(self, user_status):
        """Sets the user_status of this UserType.


        :param user_status: The user_status of this UserType.
        :type user_status: UserStatusType
        """

        self._user_status = user_status

    @property
    def mfa_options(self):
        """Gets the mfa_options of this UserType.


        :return: The mfa_options of this UserType.
        :rtype: List
        """
        return self._mfa_options

    @mfa_options.setter
    def mfa_options(self, mfa_options):
        """Sets the mfa_options of this UserType.


        :param mfa_options: The mfa_options of this UserType.
        :type mfa_options: List
        """

        self._mfa_options = mfa_options
