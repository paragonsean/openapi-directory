# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.challenge_name import ChallengeName
from openapi_server.models.challenge_response import ChallengeResponse
from openapi_server import util


class ChallengeResponseType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, challenge_name: ChallengeName=None, challenge_response: ChallengeResponse=None):
        """ChallengeResponseType - a model defined in OpenAPI

        :param challenge_name: The challenge_name of this ChallengeResponseType.
        :param challenge_response: The challenge_response of this ChallengeResponseType.
        """
        self.openapi_types = {
            'challenge_name': ChallengeName,
            'challenge_response': ChallengeResponse
        }

        self.attribute_map = {
            'challenge_name': 'ChallengeName',
            'challenge_response': 'ChallengeResponse'
        }

        self._challenge_name = challenge_name
        self._challenge_response = challenge_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChallengeResponseType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChallengeResponseType of this ChallengeResponseType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def challenge_name(self):
        """Gets the challenge_name of this ChallengeResponseType.


        :return: The challenge_name of this ChallengeResponseType.
        :rtype: ChallengeName
        """
        return self._challenge_name

    @challenge_name.setter
    def challenge_name(self, challenge_name):
        """Sets the challenge_name of this ChallengeResponseType.


        :param challenge_name: The challenge_name of this ChallengeResponseType.
        :type challenge_name: ChallengeName
        """

        self._challenge_name = challenge_name

    @property
    def challenge_response(self):
        """Gets the challenge_response of this ChallengeResponseType.


        :return: The challenge_response of this ChallengeResponseType.
        :rtype: ChallengeResponse
        """
        return self._challenge_response

    @challenge_response.setter
    def challenge_response(self, challenge_response):
        """Sets the challenge_response of this ChallengeResponseType.


        :param challenge_response: The challenge_response of this ChallengeResponseType.
        :type challenge_response: ChallengeResponse
        """

        self._challenge_response = challenge_response
