# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateUserPoolRequestDeviceConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, challenge_required_on_new_device: bool=None, device_only_remembered_on_user_prompt: bool=None):
        """CreateUserPoolRequestDeviceConfiguration - a model defined in OpenAPI

        :param challenge_required_on_new_device: The challenge_required_on_new_device of this CreateUserPoolRequestDeviceConfiguration.
        :param device_only_remembered_on_user_prompt: The device_only_remembered_on_user_prompt of this CreateUserPoolRequestDeviceConfiguration.
        """
        self.openapi_types = {
            'challenge_required_on_new_device': bool,
            'device_only_remembered_on_user_prompt': bool
        }

        self.attribute_map = {
            'challenge_required_on_new_device': 'ChallengeRequiredOnNewDevice',
            'device_only_remembered_on_user_prompt': 'DeviceOnlyRememberedOnUserPrompt'
        }

        self._challenge_required_on_new_device = challenge_required_on_new_device
        self._device_only_remembered_on_user_prompt = device_only_remembered_on_user_prompt

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateUserPoolRequestDeviceConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateUserPoolRequest_DeviceConfiguration of this CreateUserPoolRequestDeviceConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def challenge_required_on_new_device(self):
        """Gets the challenge_required_on_new_device of this CreateUserPoolRequestDeviceConfiguration.


        :return: The challenge_required_on_new_device of this CreateUserPoolRequestDeviceConfiguration.
        :rtype: bool
        """
        return self._challenge_required_on_new_device

    @challenge_required_on_new_device.setter
    def challenge_required_on_new_device(self, challenge_required_on_new_device):
        """Sets the challenge_required_on_new_device of this CreateUserPoolRequestDeviceConfiguration.


        :param challenge_required_on_new_device: The challenge_required_on_new_device of this CreateUserPoolRequestDeviceConfiguration.
        :type challenge_required_on_new_device: bool
        """

        self._challenge_required_on_new_device = challenge_required_on_new_device

    @property
    def device_only_remembered_on_user_prompt(self):
        """Gets the device_only_remembered_on_user_prompt of this CreateUserPoolRequestDeviceConfiguration.


        :return: The device_only_remembered_on_user_prompt of this CreateUserPoolRequestDeviceConfiguration.
        :rtype: bool
        """
        return self._device_only_remembered_on_user_prompt

    @device_only_remembered_on_user_prompt.setter
    def device_only_remembered_on_user_prompt(self, device_only_remembered_on_user_prompt):
        """Sets the device_only_remembered_on_user_prompt of this CreateUserPoolRequestDeviceConfiguration.


        :param device_only_remembered_on_user_prompt: The device_only_remembered_on_user_prompt of this CreateUserPoolRequestDeviceConfiguration.
        :type device_only_remembered_on_user_prompt: bool
        """

        self._device_only_remembered_on_user_prompt = device_only_remembered_on_user_prompt
