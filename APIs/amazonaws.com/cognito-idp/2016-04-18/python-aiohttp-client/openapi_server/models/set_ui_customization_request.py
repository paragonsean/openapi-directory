# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SetUICustomizationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_pool_id: str=None, client_id: str=None, css: str=None, image_file: str=None):
        """SetUICustomizationRequest - a model defined in OpenAPI

        :param user_pool_id: The user_pool_id of this SetUICustomizationRequest.
        :param client_id: The client_id of this SetUICustomizationRequest.
        :param css: The css of this SetUICustomizationRequest.
        :param image_file: The image_file of this SetUICustomizationRequest.
        """
        self.openapi_types = {
            'user_pool_id': str,
            'client_id': str,
            'css': str,
            'image_file': str
        }

        self.attribute_map = {
            'user_pool_id': 'UserPoolId',
            'client_id': 'ClientId',
            'css': 'CSS',
            'image_file': 'ImageFile'
        }

        self._user_pool_id = user_pool_id
        self._client_id = client_id
        self._css = css
        self._image_file = image_file

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetUICustomizationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetUICustomizationRequest of this SetUICustomizationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_pool_id(self):
        """Gets the user_pool_id of this SetUICustomizationRequest.


        :return: The user_pool_id of this SetUICustomizationRequest.
        :rtype: str
        """
        return self._user_pool_id

    @user_pool_id.setter
    def user_pool_id(self, user_pool_id):
        """Sets the user_pool_id of this SetUICustomizationRequest.


        :param user_pool_id: The user_pool_id of this SetUICustomizationRequest.
        :type user_pool_id: str
        """
        if user_pool_id is None:
            raise ValueError("Invalid value for `user_pool_id`, must not be `None`")

        self._user_pool_id = user_pool_id

    @property
    def client_id(self):
        """Gets the client_id of this SetUICustomizationRequest.


        :return: The client_id of this SetUICustomizationRequest.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this SetUICustomizationRequest.


        :param client_id: The client_id of this SetUICustomizationRequest.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def css(self):
        """Gets the css of this SetUICustomizationRequest.


        :return: The css of this SetUICustomizationRequest.
        :rtype: str
        """
        return self._css

    @css.setter
    def css(self, css):
        """Sets the css of this SetUICustomizationRequest.


        :param css: The css of this SetUICustomizationRequest.
        :type css: str
        """

        self._css = css

    @property
    def image_file(self):
        """Gets the image_file of this SetUICustomizationRequest.


        :return: The image_file of this SetUICustomizationRequest.
        :rtype: str
        """
        return self._image_file

    @image_file.setter
    def image_file(self, image_file):
        """Sets the image_file of this SetUICustomizationRequest.


        :param image_file: The image_file of this SetUICustomizationRequest.
        :type image_file: str
        """

        self._image_file = image_file
