# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListDevicesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token: str=None, limit: int=None, pagination_token: str=None):
        """ListDevicesRequest - a model defined in OpenAPI

        :param access_token: The access_token of this ListDevicesRequest.
        :param limit: The limit of this ListDevicesRequest.
        :param pagination_token: The pagination_token of this ListDevicesRequest.
        """
        self.openapi_types = {
            'access_token': str,
            'limit': int,
            'pagination_token': str
        }

        self.attribute_map = {
            'access_token': 'AccessToken',
            'limit': 'Limit',
            'pagination_token': 'PaginationToken'
        }

        self._access_token = access_token
        self._limit = limit
        self._pagination_token = pagination_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDevicesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDevicesRequest of this ListDevicesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self):
        """Gets the access_token of this ListDevicesRequest.


        :return: The access_token of this ListDevicesRequest.
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this ListDevicesRequest.


        :param access_token: The access_token of this ListDevicesRequest.
        :type access_token: str
        """
        if access_token is None:
            raise ValueError("Invalid value for `access_token`, must not be `None`")

        self._access_token = access_token

    @property
    def limit(self):
        """Gets the limit of this ListDevicesRequest.


        :return: The limit of this ListDevicesRequest.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this ListDevicesRequest.


        :param limit: The limit of this ListDevicesRequest.
        :type limit: int
        """

        self._limit = limit

    @property
    def pagination_token(self):
        """Gets the pagination_token of this ListDevicesRequest.


        :return: The pagination_token of this ListDevicesRequest.
        :rtype: str
        """
        return self._pagination_token

    @pagination_token.setter
    def pagination_token(self, pagination_token):
        """Sets the pagination_token of this ListDevicesRequest.


        :param pagination_token: The pagination_token of this ListDevicesRequest.
        :type pagination_token: str
        """

        self._pagination_token = pagination_token
