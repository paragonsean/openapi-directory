# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetUserResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, username: str=None, user_attributes: List=None, mfa_options: List=None, preferred_mfa_setting: str=None, user_mfa_setting_list: List=None):
        """GetUserResponse - a model defined in OpenAPI

        :param username: The username of this GetUserResponse.
        :param user_attributes: The user_attributes of this GetUserResponse.
        :param mfa_options: The mfa_options of this GetUserResponse.
        :param preferred_mfa_setting: The preferred_mfa_setting of this GetUserResponse.
        :param user_mfa_setting_list: The user_mfa_setting_list of this GetUserResponse.
        """
        self.openapi_types = {
            'username': str,
            'user_attributes': List,
            'mfa_options': List,
            'preferred_mfa_setting': str,
            'user_mfa_setting_list': List
        }

        self.attribute_map = {
            'username': 'Username',
            'user_attributes': 'UserAttributes',
            'mfa_options': 'MFAOptions',
            'preferred_mfa_setting': 'PreferredMfaSetting',
            'user_mfa_setting_list': 'UserMFASettingList'
        }

        self._username = username
        self._user_attributes = user_attributes
        self._mfa_options = mfa_options
        self._preferred_mfa_setting = preferred_mfa_setting
        self._user_mfa_setting_list = user_mfa_setting_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetUserResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetUserResponse of this GetUserResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self):
        """Gets the username of this GetUserResponse.


        :return: The username of this GetUserResponse.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this GetUserResponse.


        :param username: The username of this GetUserResponse.
        :type username: str
        """
        if username is None:
            raise ValueError("Invalid value for `username`, must not be `None`")

        self._username = username

    @property
    def user_attributes(self):
        """Gets the user_attributes of this GetUserResponse.


        :return: The user_attributes of this GetUserResponse.
        :rtype: List
        """
        return self._user_attributes

    @user_attributes.setter
    def user_attributes(self, user_attributes):
        """Sets the user_attributes of this GetUserResponse.


        :param user_attributes: The user_attributes of this GetUserResponse.
        :type user_attributes: List
        """
        if user_attributes is None:
            raise ValueError("Invalid value for `user_attributes`, must not be `None`")

        self._user_attributes = user_attributes

    @property
    def mfa_options(self):
        """Gets the mfa_options of this GetUserResponse.


        :return: The mfa_options of this GetUserResponse.
        :rtype: List
        """
        return self._mfa_options

    @mfa_options.setter
    def mfa_options(self, mfa_options):
        """Sets the mfa_options of this GetUserResponse.


        :param mfa_options: The mfa_options of this GetUserResponse.
        :type mfa_options: List
        """

        self._mfa_options = mfa_options

    @property
    def preferred_mfa_setting(self):
        """Gets the preferred_mfa_setting of this GetUserResponse.


        :return: The preferred_mfa_setting of this GetUserResponse.
        :rtype: str
        """
        return self._preferred_mfa_setting

    @preferred_mfa_setting.setter
    def preferred_mfa_setting(self, preferred_mfa_setting):
        """Sets the preferred_mfa_setting of this GetUserResponse.


        :param preferred_mfa_setting: The preferred_mfa_setting of this GetUserResponse.
        :type preferred_mfa_setting: str
        """

        self._preferred_mfa_setting = preferred_mfa_setting

    @property
    def user_mfa_setting_list(self):
        """Gets the user_mfa_setting_list of this GetUserResponse.


        :return: The user_mfa_setting_list of this GetUserResponse.
        :rtype: List
        """
        return self._user_mfa_setting_list

    @user_mfa_setting_list.setter
    def user_mfa_setting_list(self, user_mfa_setting_list):
        """Sets the user_mfa_setting_list of this GetUserResponse.


        :param user_mfa_setting_list: The user_mfa_setting_list of this GetUserResponse.
        :type user_mfa_setting_list: List
        """

        self._user_mfa_setting_list = user_mfa_setting_list
