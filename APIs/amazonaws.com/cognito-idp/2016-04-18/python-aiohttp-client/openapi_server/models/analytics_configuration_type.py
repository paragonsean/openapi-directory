# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnalyticsConfigurationType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, application_arn: str=None, role_arn: str=None, external_id: str=None, user_data_shared: bool=None):
        """AnalyticsConfigurationType - a model defined in OpenAPI

        :param application_id: The application_id of this AnalyticsConfigurationType.
        :param application_arn: The application_arn of this AnalyticsConfigurationType.
        :param role_arn: The role_arn of this AnalyticsConfigurationType.
        :param external_id: The external_id of this AnalyticsConfigurationType.
        :param user_data_shared: The user_data_shared of this AnalyticsConfigurationType.
        """
        self.openapi_types = {
            'application_id': str,
            'application_arn': str,
            'role_arn': str,
            'external_id': str,
            'user_data_shared': bool
        }

        self.attribute_map = {
            'application_id': 'ApplicationId',
            'application_arn': 'ApplicationArn',
            'role_arn': 'RoleArn',
            'external_id': 'ExternalId',
            'user_data_shared': 'UserDataShared'
        }

        self._application_id = application_id
        self._application_arn = application_arn
        self._role_arn = role_arn
        self._external_id = external_id
        self._user_data_shared = user_data_shared

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyticsConfigurationType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalyticsConfigurationType of this AnalyticsConfigurationType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this AnalyticsConfigurationType.


        :return: The application_id of this AnalyticsConfigurationType.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this AnalyticsConfigurationType.


        :param application_id: The application_id of this AnalyticsConfigurationType.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def application_arn(self):
        """Gets the application_arn of this AnalyticsConfigurationType.


        :return: The application_arn of this AnalyticsConfigurationType.
        :rtype: str
        """
        return self._application_arn

    @application_arn.setter
    def application_arn(self, application_arn):
        """Sets the application_arn of this AnalyticsConfigurationType.


        :param application_arn: The application_arn of this AnalyticsConfigurationType.
        :type application_arn: str
        """

        self._application_arn = application_arn

    @property
    def role_arn(self):
        """Gets the role_arn of this AnalyticsConfigurationType.


        :return: The role_arn of this AnalyticsConfigurationType.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this AnalyticsConfigurationType.


        :param role_arn: The role_arn of this AnalyticsConfigurationType.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def external_id(self):
        """Gets the external_id of this AnalyticsConfigurationType.


        :return: The external_id of this AnalyticsConfigurationType.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this AnalyticsConfigurationType.


        :param external_id: The external_id of this AnalyticsConfigurationType.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def user_data_shared(self):
        """Gets the user_data_shared of this AnalyticsConfigurationType.


        :return: The user_data_shared of this AnalyticsConfigurationType.
        :rtype: bool
        """
        return self._user_data_shared

    @user_data_shared.setter
    def user_data_shared(self, user_data_shared):
        """Sets the user_data_shared of this AnalyticsConfigurationType.


        :param user_data_shared: The user_data_shared of this AnalyticsConfigurationType.
        :type user_data_shared: bool
        """

        self._user_data_shared = user_data_shared
