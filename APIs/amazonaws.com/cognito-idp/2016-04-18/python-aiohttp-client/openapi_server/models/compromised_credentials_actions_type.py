# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compromised_credentials_event_action_type import CompromisedCredentialsEventActionType
from openapi_server import util


class CompromisedCredentialsActionsType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_action: CompromisedCredentialsEventActionType=None):
        """CompromisedCredentialsActionsType - a model defined in OpenAPI

        :param event_action: The event_action of this CompromisedCredentialsActionsType.
        """
        self.openapi_types = {
            'event_action': CompromisedCredentialsEventActionType
        }

        self.attribute_map = {
            'event_action': 'EventAction'
        }

        self._event_action = event_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompromisedCredentialsActionsType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompromisedCredentialsActionsType of this CompromisedCredentialsActionsType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_action(self):
        """Gets the event_action of this CompromisedCredentialsActionsType.


        :return: The event_action of this CompromisedCredentialsActionsType.
        :rtype: CompromisedCredentialsEventActionType
        """
        return self._event_action

    @event_action.setter
    def event_action(self, event_action):
        """Sets the event_action of this CompromisedCredentialsActionsType.


        :param event_action: The event_action of this CompromisedCredentialsActionsType.
        :type event_action: CompromisedCredentialsEventActionType
        """
        if event_action is None:
            raise ValueError("Invalid value for `event_action`, must not be `None`")

        self._event_action = event_action
