# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.confirm_device_request_device_secret_verifier_config import ConfirmDeviceRequestDeviceSecretVerifierConfig
from openapi_server import util


class ConfirmDeviceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token: str=None, device_key: str=None, device_secret_verifier_config: ConfirmDeviceRequestDeviceSecretVerifierConfig=None, device_name: str=None):
        """ConfirmDeviceRequest - a model defined in OpenAPI

        :param access_token: The access_token of this ConfirmDeviceRequest.
        :param device_key: The device_key of this ConfirmDeviceRequest.
        :param device_secret_verifier_config: The device_secret_verifier_config of this ConfirmDeviceRequest.
        :param device_name: The device_name of this ConfirmDeviceRequest.
        """
        self.openapi_types = {
            'access_token': str,
            'device_key': str,
            'device_secret_verifier_config': ConfirmDeviceRequestDeviceSecretVerifierConfig,
            'device_name': str
        }

        self.attribute_map = {
            'access_token': 'AccessToken',
            'device_key': 'DeviceKey',
            'device_secret_verifier_config': 'DeviceSecretVerifierConfig',
            'device_name': 'DeviceName'
        }

        self._access_token = access_token
        self._device_key = device_key
        self._device_secret_verifier_config = device_secret_verifier_config
        self._device_name = device_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfirmDeviceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfirmDeviceRequest of this ConfirmDeviceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self):
        """Gets the access_token of this ConfirmDeviceRequest.


        :return: The access_token of this ConfirmDeviceRequest.
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this ConfirmDeviceRequest.


        :param access_token: The access_token of this ConfirmDeviceRequest.
        :type access_token: str
        """
        if access_token is None:
            raise ValueError("Invalid value for `access_token`, must not be `None`")

        self._access_token = access_token

    @property
    def device_key(self):
        """Gets the device_key of this ConfirmDeviceRequest.


        :return: The device_key of this ConfirmDeviceRequest.
        :rtype: str
        """
        return self._device_key

    @device_key.setter
    def device_key(self, device_key):
        """Sets the device_key of this ConfirmDeviceRequest.


        :param device_key: The device_key of this ConfirmDeviceRequest.
        :type device_key: str
        """
        if device_key is None:
            raise ValueError("Invalid value for `device_key`, must not be `None`")

        self._device_key = device_key

    @property
    def device_secret_verifier_config(self):
        """Gets the device_secret_verifier_config of this ConfirmDeviceRequest.


        :return: The device_secret_verifier_config of this ConfirmDeviceRequest.
        :rtype: ConfirmDeviceRequestDeviceSecretVerifierConfig
        """
        return self._device_secret_verifier_config

    @device_secret_verifier_config.setter
    def device_secret_verifier_config(self, device_secret_verifier_config):
        """Sets the device_secret_verifier_config of this ConfirmDeviceRequest.


        :param device_secret_verifier_config: The device_secret_verifier_config of this ConfirmDeviceRequest.
        :type device_secret_verifier_config: ConfirmDeviceRequestDeviceSecretVerifierConfig
        """

        self._device_secret_verifier_config = device_secret_verifier_config

    @property
    def device_name(self):
        """Gets the device_name of this ConfirmDeviceRequest.


        :return: The device_name of this ConfirmDeviceRequest.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this ConfirmDeviceRequest.


        :param device_name: The device_name of this ConfirmDeviceRequest.
        :type device_name: str
        """

        self._device_name = device_name
