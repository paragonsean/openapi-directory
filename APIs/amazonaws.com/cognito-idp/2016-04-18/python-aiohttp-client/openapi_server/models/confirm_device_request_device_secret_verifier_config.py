# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfirmDeviceRequestDeviceSecretVerifierConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, password_verifier: str=None, salt: str=None):
        """ConfirmDeviceRequestDeviceSecretVerifierConfig - a model defined in OpenAPI

        :param password_verifier: The password_verifier of this ConfirmDeviceRequestDeviceSecretVerifierConfig.
        :param salt: The salt of this ConfirmDeviceRequestDeviceSecretVerifierConfig.
        """
        self.openapi_types = {
            'password_verifier': str,
            'salt': str
        }

        self.attribute_map = {
            'password_verifier': 'PasswordVerifier',
            'salt': 'Salt'
        }

        self._password_verifier = password_verifier
        self._salt = salt

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfirmDeviceRequestDeviceSecretVerifierConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfirmDeviceRequest_DeviceSecretVerifierConfig of this ConfirmDeviceRequestDeviceSecretVerifierConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def password_verifier(self):
        """Gets the password_verifier of this ConfirmDeviceRequestDeviceSecretVerifierConfig.


        :return: The password_verifier of this ConfirmDeviceRequestDeviceSecretVerifierConfig.
        :rtype: str
        """
        return self._password_verifier

    @password_verifier.setter
    def password_verifier(self, password_verifier):
        """Sets the password_verifier of this ConfirmDeviceRequestDeviceSecretVerifierConfig.


        :param password_verifier: The password_verifier of this ConfirmDeviceRequestDeviceSecretVerifierConfig.
        :type password_verifier: str
        """

        self._password_verifier = password_verifier

    @property
    def salt(self):
        """Gets the salt of this ConfirmDeviceRequestDeviceSecretVerifierConfig.


        :return: The salt of this ConfirmDeviceRequestDeviceSecretVerifierConfig.
        :rtype: str
        """
        return self._salt

    @salt.setter
    def salt(self, salt):
        """Sets the salt of this ConfirmDeviceRequestDeviceSecretVerifierConfig.


        :param salt: The salt of this ConfirmDeviceRequestDeviceSecretVerifierConfig.
        :type salt: str
        """

        self._salt = salt
