# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_user_pool_mfa_config_response_sms_mfa_configuration import GetUserPoolMfaConfigResponseSmsMfaConfiguration
from openapi_server.models.get_user_pool_mfa_config_response_software_token_mfa_configuration import GetUserPoolMfaConfigResponseSoftwareTokenMfaConfiguration
from openapi_server.models.user_pool_mfa_type import UserPoolMfaType
from openapi_server import util


class GetUserPoolMfaConfigResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sms_mfa_configuration: GetUserPoolMfaConfigResponseSmsMfaConfiguration=None, software_token_mfa_configuration: GetUserPoolMfaConfigResponseSoftwareTokenMfaConfiguration=None, mfa_configuration: UserPoolMfaType=None):
        """GetUserPoolMfaConfigResponse - a model defined in OpenAPI

        :param sms_mfa_configuration: The sms_mfa_configuration of this GetUserPoolMfaConfigResponse.
        :param software_token_mfa_configuration: The software_token_mfa_configuration of this GetUserPoolMfaConfigResponse.
        :param mfa_configuration: The mfa_configuration of this GetUserPoolMfaConfigResponse.
        """
        self.openapi_types = {
            'sms_mfa_configuration': GetUserPoolMfaConfigResponseSmsMfaConfiguration,
            'software_token_mfa_configuration': GetUserPoolMfaConfigResponseSoftwareTokenMfaConfiguration,
            'mfa_configuration': UserPoolMfaType
        }

        self.attribute_map = {
            'sms_mfa_configuration': 'SmsMfaConfiguration',
            'software_token_mfa_configuration': 'SoftwareTokenMfaConfiguration',
            'mfa_configuration': 'MfaConfiguration'
        }

        self._sms_mfa_configuration = sms_mfa_configuration
        self._software_token_mfa_configuration = software_token_mfa_configuration
        self._mfa_configuration = mfa_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetUserPoolMfaConfigResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetUserPoolMfaConfigResponse of this GetUserPoolMfaConfigResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sms_mfa_configuration(self):
        """Gets the sms_mfa_configuration of this GetUserPoolMfaConfigResponse.


        :return: The sms_mfa_configuration of this GetUserPoolMfaConfigResponse.
        :rtype: GetUserPoolMfaConfigResponseSmsMfaConfiguration
        """
        return self._sms_mfa_configuration

    @sms_mfa_configuration.setter
    def sms_mfa_configuration(self, sms_mfa_configuration):
        """Sets the sms_mfa_configuration of this GetUserPoolMfaConfigResponse.


        :param sms_mfa_configuration: The sms_mfa_configuration of this GetUserPoolMfaConfigResponse.
        :type sms_mfa_configuration: GetUserPoolMfaConfigResponseSmsMfaConfiguration
        """

        self._sms_mfa_configuration = sms_mfa_configuration

    @property
    def software_token_mfa_configuration(self):
        """Gets the software_token_mfa_configuration of this GetUserPoolMfaConfigResponse.


        :return: The software_token_mfa_configuration of this GetUserPoolMfaConfigResponse.
        :rtype: GetUserPoolMfaConfigResponseSoftwareTokenMfaConfiguration
        """
        return self._software_token_mfa_configuration

    @software_token_mfa_configuration.setter
    def software_token_mfa_configuration(self, software_token_mfa_configuration):
        """Sets the software_token_mfa_configuration of this GetUserPoolMfaConfigResponse.


        :param software_token_mfa_configuration: The software_token_mfa_configuration of this GetUserPoolMfaConfigResponse.
        :type software_token_mfa_configuration: GetUserPoolMfaConfigResponseSoftwareTokenMfaConfiguration
        """

        self._software_token_mfa_configuration = software_token_mfa_configuration

    @property
    def mfa_configuration(self):
        """Gets the mfa_configuration of this GetUserPoolMfaConfigResponse.


        :return: The mfa_configuration of this GetUserPoolMfaConfigResponse.
        :rtype: UserPoolMfaType
        """
        return self._mfa_configuration

    @mfa_configuration.setter
    def mfa_configuration(self, mfa_configuration):
        """Sets the mfa_configuration of this GetUserPoolMfaConfigResponse.


        :param mfa_configuration: The mfa_configuration of this GetUserPoolMfaConfigResponse.
        :type mfa_configuration: UserPoolMfaType
        """

        self._mfa_configuration = mfa_configuration
