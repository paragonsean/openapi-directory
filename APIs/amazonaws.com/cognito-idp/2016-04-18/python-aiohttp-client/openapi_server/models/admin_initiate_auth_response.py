# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.admin_initiate_auth_response_authentication_result import AdminInitiateAuthResponseAuthenticationResult
from openapi_server.models.challenge_name_type import ChallengeNameType
from openapi_server import util


class AdminInitiateAuthResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, challenge_name: ChallengeNameType=None, session: str=None, challenge_parameters: Dict=None, authentication_result: AdminInitiateAuthResponseAuthenticationResult=None):
        """AdminInitiateAuthResponse - a model defined in OpenAPI

        :param challenge_name: The challenge_name of this AdminInitiateAuthResponse.
        :param session: The session of this AdminInitiateAuthResponse.
        :param challenge_parameters: The challenge_parameters of this AdminInitiateAuthResponse.
        :param authentication_result: The authentication_result of this AdminInitiateAuthResponse.
        """
        self.openapi_types = {
            'challenge_name': ChallengeNameType,
            'session': str,
            'challenge_parameters': Dict,
            'authentication_result': AdminInitiateAuthResponseAuthenticationResult
        }

        self.attribute_map = {
            'challenge_name': 'ChallengeName',
            'session': 'Session',
            'challenge_parameters': 'ChallengeParameters',
            'authentication_result': 'AuthenticationResult'
        }

        self._challenge_name = challenge_name
        self._session = session
        self._challenge_parameters = challenge_parameters
        self._authentication_result = authentication_result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminInitiateAuthResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdminInitiateAuthResponse of this AdminInitiateAuthResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def challenge_name(self):
        """Gets the challenge_name of this AdminInitiateAuthResponse.


        :return: The challenge_name of this AdminInitiateAuthResponse.
        :rtype: ChallengeNameType
        """
        return self._challenge_name

    @challenge_name.setter
    def challenge_name(self, challenge_name):
        """Sets the challenge_name of this AdminInitiateAuthResponse.


        :param challenge_name: The challenge_name of this AdminInitiateAuthResponse.
        :type challenge_name: ChallengeNameType
        """

        self._challenge_name = challenge_name

    @property
    def session(self):
        """Gets the session of this AdminInitiateAuthResponse.


        :return: The session of this AdminInitiateAuthResponse.
        :rtype: str
        """
        return self._session

    @session.setter
    def session(self, session):
        """Sets the session of this AdminInitiateAuthResponse.


        :param session: The session of this AdminInitiateAuthResponse.
        :type session: str
        """

        self._session = session

    @property
    def challenge_parameters(self):
        """Gets the challenge_parameters of this AdminInitiateAuthResponse.


        :return: The challenge_parameters of this AdminInitiateAuthResponse.
        :rtype: Dict
        """
        return self._challenge_parameters

    @challenge_parameters.setter
    def challenge_parameters(self, challenge_parameters):
        """Sets the challenge_parameters of this AdminInitiateAuthResponse.


        :param challenge_parameters: The challenge_parameters of this AdminInitiateAuthResponse.
        :type challenge_parameters: Dict
        """

        self._challenge_parameters = challenge_parameters

    @property
    def authentication_result(self):
        """Gets the authentication_result of this AdminInitiateAuthResponse.


        :return: The authentication_result of this AdminInitiateAuthResponse.
        :rtype: AdminInitiateAuthResponseAuthenticationResult
        """
        return self._authentication_result

    @authentication_result.setter
    def authentication_result(self, authentication_result):
        """Sets the authentication_result of this AdminInitiateAuthResponse.


        :param authentication_result: The authentication_result of this AdminInitiateAuthResponse.
        :type authentication_result: AdminInitiateAuthResponseAuthenticationResult
        """

        self._authentication_result = authentication_result
