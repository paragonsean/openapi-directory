# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChallengeNameType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    SMS_MFA = 'SMS_MFA'
    SOFTWARE_TOKEN_MFA = 'SOFTWARE_TOKEN_MFA'
    SELECT_MFA_TYPE = 'SELECT_MFA_TYPE'
    MFA_SETUP = 'MFA_SETUP'
    PASSWORD_VERIFIER = 'PASSWORD_VERIFIER'
    CUSTOM_CHALLENGE = 'CUSTOM_CHALLENGE'
    DEVICE_SRP_AUTH = 'DEVICE_SRP_AUTH'
    DEVICE_PASSWORD_VERIFIER = 'DEVICE_PASSWORD_VERIFIER'
    ADMIN_NO_SRP_AUTH = 'ADMIN_NO_SRP_AUTH'
    NEW_PASSWORD_REQUIRED = 'NEW_PASSWORD_REQUIRED'

    def __init__(self):
        """ChallengeNameType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChallengeNameType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChallengeNameType of this ChallengeNameType.
        """
        return util.deserialize_model(dikt, cls)
