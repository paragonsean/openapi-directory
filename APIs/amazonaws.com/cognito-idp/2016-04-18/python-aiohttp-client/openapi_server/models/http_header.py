# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HttpHeader(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, header_name: str=None, header_value: str=None):
        """HttpHeader - a model defined in OpenAPI

        :param header_name: The header_name of this HttpHeader.
        :param header_value: The header_value of this HttpHeader.
        """
        self.openapi_types = {
            'header_name': str,
            'header_value': str
        }

        self.attribute_map = {
            'header_name': 'headerName',
            'header_value': 'headerValue'
        }

        self._header_name = header_name
        self._header_value = header_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HttpHeader':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HttpHeader of this HttpHeader.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def header_name(self):
        """Gets the header_name of this HttpHeader.


        :return: The header_name of this HttpHeader.
        :rtype: str
        """
        return self._header_name

    @header_name.setter
    def header_name(self, header_name):
        """Sets the header_name of this HttpHeader.


        :param header_name: The header_name of this HttpHeader.
        :type header_name: str
        """

        self._header_name = header_name

    @property
    def header_value(self):
        """Gets the header_value of this HttpHeader.


        :return: The header_value of this HttpHeader.
        :rtype: str
        """
        return self._header_value

    @header_value.setter
    def header_value(self, header_value):
        """Sets the header_value of this HttpHeader.


        :param header_value: The header_value of this HttpHeader.
        :type header_value: str
        """

        self._header_value = header_value
