# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.admin_get_device_response_device import AdminGetDeviceResponseDevice
from openapi_server import util


class GetDeviceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device: AdminGetDeviceResponseDevice=None):
        """GetDeviceResponse - a model defined in OpenAPI

        :param device: The device of this GetDeviceResponse.
        """
        self.openapi_types = {
            'device': AdminGetDeviceResponseDevice
        }

        self.attribute_map = {
            'device': 'Device'
        }

        self._device = device

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDeviceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDeviceResponse of this GetDeviceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device(self):
        """Gets the device of this GetDeviceResponse.


        :return: The device of this GetDeviceResponse.
        :rtype: AdminGetDeviceResponseDevice
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this GetDeviceResponse.


        :param device: The device of this GetDeviceResponse.
        :type device: AdminGetDeviceResponseDevice
        """
        if device is None:
            raise ValueError("Invalid value for `device`, must not be `None`")

        self._device = device
