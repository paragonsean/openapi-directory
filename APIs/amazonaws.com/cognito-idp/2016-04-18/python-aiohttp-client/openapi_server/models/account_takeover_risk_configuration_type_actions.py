# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_takeover_actions_type_high_action import AccountTakeoverActionsTypeHighAction
from openapi_server.models.account_takeover_actions_type_low_action import AccountTakeoverActionsTypeLowAction
from openapi_server.models.account_takeover_actions_type_medium_action import AccountTakeoverActionsTypeMediumAction
from openapi_server import util


class AccountTakeoverRiskConfigurationTypeActions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, low_action: AccountTakeoverActionsTypeLowAction=None, medium_action: AccountTakeoverActionsTypeMediumAction=None, high_action: AccountTakeoverActionsTypeHighAction=None):
        """AccountTakeoverRiskConfigurationTypeActions - a model defined in OpenAPI

        :param low_action: The low_action of this AccountTakeoverRiskConfigurationTypeActions.
        :param medium_action: The medium_action of this AccountTakeoverRiskConfigurationTypeActions.
        :param high_action: The high_action of this AccountTakeoverRiskConfigurationTypeActions.
        """
        self.openapi_types = {
            'low_action': AccountTakeoverActionsTypeLowAction,
            'medium_action': AccountTakeoverActionsTypeMediumAction,
            'high_action': AccountTakeoverActionsTypeHighAction
        }

        self.attribute_map = {
            'low_action': 'LowAction',
            'medium_action': 'MediumAction',
            'high_action': 'HighAction'
        }

        self._low_action = low_action
        self._medium_action = medium_action
        self._high_action = high_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountTakeoverRiskConfigurationTypeActions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountTakeoverRiskConfigurationType_Actions of this AccountTakeoverRiskConfigurationTypeActions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def low_action(self):
        """Gets the low_action of this AccountTakeoverRiskConfigurationTypeActions.


        :return: The low_action of this AccountTakeoverRiskConfigurationTypeActions.
        :rtype: AccountTakeoverActionsTypeLowAction
        """
        return self._low_action

    @low_action.setter
    def low_action(self, low_action):
        """Sets the low_action of this AccountTakeoverRiskConfigurationTypeActions.


        :param low_action: The low_action of this AccountTakeoverRiskConfigurationTypeActions.
        :type low_action: AccountTakeoverActionsTypeLowAction
        """

        self._low_action = low_action

    @property
    def medium_action(self):
        """Gets the medium_action of this AccountTakeoverRiskConfigurationTypeActions.


        :return: The medium_action of this AccountTakeoverRiskConfigurationTypeActions.
        :rtype: AccountTakeoverActionsTypeMediumAction
        """
        return self._medium_action

    @medium_action.setter
    def medium_action(self, medium_action):
        """Sets the medium_action of this AccountTakeoverRiskConfigurationTypeActions.


        :param medium_action: The medium_action of this AccountTakeoverRiskConfigurationTypeActions.
        :type medium_action: AccountTakeoverActionsTypeMediumAction
        """

        self._medium_action = medium_action

    @property
    def high_action(self):
        """Gets the high_action of this AccountTakeoverRiskConfigurationTypeActions.


        :return: The high_action of this AccountTakeoverRiskConfigurationTypeActions.
        :rtype: AccountTakeoverActionsTypeHighAction
        """
        return self._high_action

    @high_action.setter
    def high_action(self, high_action):
        """Sets the high_action of this AccountTakeoverRiskConfigurationTypeActions.


        :param high_action: The high_action of this AccountTakeoverRiskConfigurationTypeActions.
        :type high_action: AccountTakeoverActionsTypeHighAction
        """

        self._high_action = high_action
