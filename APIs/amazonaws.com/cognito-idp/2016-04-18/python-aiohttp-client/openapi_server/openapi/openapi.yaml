openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>With the Amazon Cognito user pools API, you can set up user pools\
    \ and app clients, and authenticate users. To authenticate users from third-party\
    \ identity providers (IdPs) in this API, you can <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html\"\
    >link IdP users to native user profiles</a>. Learn more about the authentication\
    \ and authorization of federated users in the <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-userpools-server-contract-reference.html\"\
    >Using the Amazon Cognito user pools API and user pool endpoints</a>.</p> <p>This\
    \ API reference provides detailed information about API operations and object\
    \ types in Amazon Cognito. At the bottom of the page for each API operation and\
    \ object, under <i>See Also</i>, you can learn how to use it in an Amazon Web\
    \ Services SDK in the language of your choice.</p> <p>Along with resource management\
    \ operations, the Amazon Cognito user pools API includes classes of operations\
    \ and authorization models for client-side and server-side user operations. For\
    \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
    >Using the Amazon Cognito native and OIDC APIs</a> in the <i>Amazon Cognito Developer\
    \ Guide</i>.</p> <p>You can also start reading about the <code>CognitoIdentityProvider</code>\
    \ client in the following SDK guides.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/cli/latest/reference/cognito-idp/index.html#cli-aws-cognito-idp\"\
    >Amazon Web Services Command Line Interface</a> </p> </li> <li> <p> <a href=\"\
    https://docs.aws.amazon.com/sdkfornet/v3/apidocs/items/CognitoIdentityProvider/TCognitoIdentityProviderClient.html\"\
    >Amazon Web Services SDK for .NET</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/cpp/api/LATEST/aws-cpp-sdk-cognito-idp/html/class_aws_1_1_cognito_identity_provider_1_1_cognito_identity_provider_client.html\"\
    >Amazon Web Services SDK for C++</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/#CognitoIdentityProvider\"\
    >Amazon Web Services SDK for Go</a> </p> </li> <li> <p> <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cognitoidentityprovider/CognitoIdentityProviderClient.html\"\
    >Amazon Web Services SDK for Java V2</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html\"\
    >Amazon Web Services SDK for JavaScript</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-cognito-idp-2016-04-18.html\"\
    >Amazon Web Services SDK for PHP V3</a> </p> </li> <li> <p> <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cognito-idp.html\"\
    >Amazon Web Services SDK for Python</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CognitoIdentityProvider/Client.html\"\
    >Amazon Web Services SDK for Ruby V3</a> </p> </li> </ul> <p>To get started with\
    \ an Amazon Web Services SDK, see <a href=\"http://aws.amazon.com/developer/tools/\"\
    >Tools to Build on Amazon Web Services</a>. For example actions and scenarios,\
    \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/service_code_examples_cognito-identity-provider.html\"\
    >Code examples for Amazon Cognito Identity Provider using Amazon Web Services\
    \ SDKs</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Cognito Identity Provider
  version: 2016-04-18
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: cognito-idp
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cognito-idp-2016-04-18.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/cognito-idp/
servers:
- description: The Amazon Cognito Identity Provider multi-region endpoint
  url: "http://cognito-idp.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Cognito Identity Provider multi-region endpoint
  url: "https://cognito-idp.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Cognito Identity Provider endpoint for China (Beijing) and
    China (Ningxia)
  url: "http://cognito-idp.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Cognito Identity Provider endpoint for China (Beijing) and
    China (Ningxia)
  url: "https://cognito-idp.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AddCustomAttributes:
    post:
      description: "<p>Adds additional user attributes to the user pool schema.</p>\
        \ <note> <p>Amazon Cognito evaluates Identity and Access Management (IAM)\
        \ policies in requests for this API operation. For this operation, you must\
        \ use IAM credentials to authorize requests, and you must grant yourself the\
        \ corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: add_custom_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AddCustomAttributes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCustomAttributesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCustomAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserImportInProgressException'
          description: UserImportInProgressException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminAddUserToGroup:
    post:
      description: "<p>Adds the specified user to the specified group.</p> <note>\
        \ <p>Amazon Cognito evaluates Identity and Access Management (IAM) policies\
        \ in requests for this API operation. For this operation, you must use IAM\
        \ credentials to authorize requests, and you must grant yourself the corresponding\
        \ IAM permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_add_user_to_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminAddUserToGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminAddUserToGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminConfirmSignUp:
    post:
      description: "<p>Confirms user registration as an admin without using a confirmation\
        \ code. Works on any user.</p> <note> <p>Amazon Cognito evaluates Identity\
        \ and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you must use IAM credentials to authorize requests,\
        \ and you must grant yourself the corresponding IAM permission in a policy.</p>\
        \ <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_confirm_sign_up
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminConfirmSignUp
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminConfirmSignUpRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminConfirmSignUpResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyFailedAttemptsException'
          description: TooManyFailedAttemptsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminCreateUser:
    post:
      description: "<p>Creates a new user in the specified user pool.</p> <p>If <code>MessageAction</code>\
        \ isn't set, the default is to send a welcome message via email or phone (SMS).</p>\
        \ <note> <p>This action might generate an SMS text message. Starting June\
        \ 1, 2021, US telecom carriers require you to register an origination phone\
        \ number before you can send SMS messages to US phone numbers. If you use\
        \ SMS text messages in Amazon Cognito, you must register a phone number with\
        \ <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>.\
        \ Amazon Cognito uses the registered number automatically. Otherwise, Amazon\
        \ Cognito users who must receive SMS messages might not be able to sign up,\
        \ activate their accounts, or sign in.</p> <p>If you have never used SMS text\
        \ messages with Amazon Cognito or any other Amazon Web Service, Amazon Simple\
        \ Notification Service might place your account in the SMS sandbox. In <i>\
        \ <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note> <p>This message is based on a template\
        \ that you configured in your call to create or update a user pool. This template\
        \ includes your custom sign-up instructions and placeholders for user name\
        \ and temporary password.</p> <p>Alternatively, you can call <code>AdminCreateUser</code>\
        \ with <code>SUPPRESS</code> for the <code>MessageAction</code> parameter,\
        \ and Amazon Cognito won't send any email. </p> <p>In either case, the user\
        \ will be in the <code>FORCE_CHANGE_PASSWORD</code> state until they sign\
        \ in and change their password.</p> <note> <p>Amazon Cognito evaluates Identity\
        \ and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you must use IAM credentials to authorize requests,\
        \ and you must grant yourself the corresponding IAM permission in a policy.</p>\
        \ <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_create_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminCreateUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCreateUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCreateUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameExistsException'
          description: UsernameExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
          description: InvalidPasswordException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeDeliveryFailureException'
          description: CodeDeliveryFailureException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
          description: PreconditionNotMetException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserStateException'
          description: UnsupportedUserStateException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDeleteUser:
    post:
      description: "<p>Deletes a user as an administrator. Works on any user.</p>\
        \ <note> <p>Amazon Cognito evaluates Identity and Access Management (IAM)\
        \ policies in requests for this API operation. For this operation, you must\
        \ use IAM credentials to authorize requests, and you must grant yourself the\
        \ corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_delete_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminDeleteUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminDeleteUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDeleteUserAttributes:
    post:
      description: "<p>Deletes the user attributes in a user pool as an administrator.\
        \ Works on any user.</p> <note> <p>Amazon Cognito evaluates Identity and Access\
        \ Management (IAM) policies in requests for this API operation. For this operation,\
        \ you must use IAM credentials to authorize requests, and you must grant yourself\
        \ the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_delete_user_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminDeleteUserAttributes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminDeleteUserAttributesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDeleteUserAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDisableProviderForUser:
    post:
      description: "<p>Prevents the user from signing in with the specified external\
        \ (SAML or social) identity provider (IdP). If the user that you want to deactivate\
        \ is a Amazon Cognito user pools native username + password user, they can't\
        \ use their password to sign in. If the user to deactivate is a linked external\
        \ IdP user, any link between that user and an existing user is removed. When\
        \ the external user signs in again, and the user is no longer attached to\
        \ the previously linked <code>DestinationUser</code>, the user must create\
        \ a new user account. See <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminLinkProviderForUser.html\"\
        >AdminLinkProviderForUser</a>.</p> <p>The <code>ProviderName</code> must match\
        \ the value specified when creating an IdP for the pool. </p> <p>To deactivate\
        \ a native username + password user, the <code>ProviderName</code> value must\
        \ be <code>Cognito</code> and the <code>ProviderAttributeName</code> must\
        \ be <code>Cognito_Subject</code>. The <code>ProviderAttributeValue</code>\
        \ must be the name that is used in the user pool for the user.</p> <p>The\
        \ <code>ProviderAttributeName</code> must always be <code>Cognito_Subject</code>\
        \ for social IdPs. The <code>ProviderAttributeValue</code> must always be\
        \ the exact subject that was used when the user was originally linked as a\
        \ source user.</p> <p>For de-linking a SAML identity, there are two scenarios.\
        \ If the linked identity has not yet been used to sign in, the <code>ProviderAttributeName</code>\
        \ and <code>ProviderAttributeValue</code> must be the same values that were\
        \ used for the <code>SourceUser</code> when the identities were originally\
        \ linked using <code> AdminLinkProviderForUser</code> call. (If the linking\
        \ was done with <code>ProviderAttributeName</code> set to <code>Cognito_Subject</code>,\
        \ the same applies here). However, if the user has already signed in, the\
        \ <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code>\
        \ and <code>ProviderAttributeValue</code> must be the subject of the SAML\
        \ assertion.</p> <note> <p>Amazon Cognito evaluates Identity and Access Management\
        \ (IAM) policies in requests for this API operation. For this operation, you\
        \ must use IAM credentials to authorize requests, and you must grant yourself\
        \ the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_disable_provider_for_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminDisableProviderForUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminDisableProviderForUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDisableProviderForUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasExistsException'
          description: AliasExistsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDisableUser:
    post:
      description: "<p>Deactivates a user and revokes all access tokens for the user.\
        \ A deactivated user can't sign in, but still appears in the responses to\
        \ <code>GetUser</code> and <code>ListUsers</code> API requests.</p> <note>\
        \ <p>Amazon Cognito evaluates Identity and Access Management (IAM) policies\
        \ in requests for this API operation. For this operation, you must use IAM\
        \ credentials to authorize requests, and you must grant yourself the corresponding\
        \ IAM permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_disable_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminDisableUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminDisableUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDisableUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminEnableUser:
    post:
      description: "<p>Enables the specified user as an administrator. Works on any\
        \ user.</p> <note> <p>Amazon Cognito evaluates Identity and Access Management\
        \ (IAM) policies in requests for this API operation. For this operation, you\
        \ must use IAM credentials to authorize requests, and you must grant yourself\
        \ the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_enable_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminEnableUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminEnableUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminEnableUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminForgetDevice:
    post:
      description: "<p>Forgets the device, as an administrator.</p> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_forget_device
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminForgetDevice
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminForgetDeviceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminGetDevice:
    post:
      description: "<p>Gets the device, as an administrator.</p> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_get_device
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminGetDevice
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminGetDeviceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminGetDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminGetUser:
    post:
      description: "<p>Gets the specified user by user name in a user pool as an administrator.\
        \ Works on any user.</p> <note> <p>Amazon Cognito evaluates Identity and Access\
        \ Management (IAM) policies in requests for this API operation. For this operation,\
        \ you must use IAM credentials to authorize requests, and you must grant yourself\
        \ the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_get_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminGetUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminGetUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminGetUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminInitiateAuth:
    post:
      description: "<p>Initiates the authentication flow, as an administrator.</p>\
        \ <note> <p>This action might generate an SMS text message. Starting June\
        \ 1, 2021, US telecom carriers require you to register an origination phone\
        \ number before you can send SMS messages to US phone numbers. If you use\
        \ SMS text messages in Amazon Cognito, you must register a phone number with\
        \ <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>.\
        \ Amazon Cognito uses the registered number automatically. Otherwise, Amazon\
        \ Cognito users who must receive SMS messages might not be able to sign up,\
        \ activate their accounts, or sign in.</p> <p>If you have never used SMS text\
        \ messages with Amazon Cognito or any other Amazon Web Service, Amazon Simple\
        \ Notification Service might place your account in the SMS sandbox. In <i>\
        \ <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note> <note> <p>Amazon Cognito evaluates\
        \ Identity and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you must use IAM credentials to authorize requests,\
        \ and you must grant yourself the corresponding IAM permission in a policy.</p>\
        \ <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_initiate_auth
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminInitiateAuth
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminInitiateAuthRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInitiateAuthResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAMethodNotFoundException'
          description: MFAMethodNotFoundException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminLinkProviderForUser:
    post:
      description: "<p>Links an existing user account in a user pool (<code>DestinationUser</code>)\
        \ to an identity from an external IdP (<code>SourceUser</code>) based on a\
        \ specified attribute name and value from the external IdP. This allows you\
        \ to create a link from the existing user account to an external federated\
        \ user identity that has not yet been used to sign in. You can then use the\
        \ federated user identity to sign in as the existing user account. </p> <p>\
        \ For example, if there is an existing user with a username and password,\
        \ this API links that user to a federated user identity. When the user signs\
        \ in with a federated user identity, they sign in as the existing user account.</p>\
        \ <note> <p>The maximum number of federated identities linked to a user is\
        \ five.</p> </note> <important> <p>Because this API allows a user with an\
        \ external federated identity to sign in as an existing user in the user pool,\
        \ it is critical that it only be used with external IdPs and provider attributes\
        \ that have been trusted by the application owner.</p> </important> <note>\
        \ <p>Amazon Cognito evaluates Identity and Access Management (IAM) policies\
        \ in requests for this API operation. For this operation, you must use IAM\
        \ credentials to authorize requests, and you must grant yourself the corresponding\
        \ IAM permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_link_provider_for_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminLinkProviderForUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLinkProviderForUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminLinkProviderForUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasExistsException'
          description: AliasExistsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListDevices:
    post:
      description: "<p>Lists devices, as an administrator.</p> <note> <p>Amazon Cognito\
        \ evaluates Identity and Access Management (IAM) policies in requests for\
        \ this API operation. For this operation, you must use IAM credentials to\
        \ authorize requests, and you must grant yourself the corresponding IAM permission\
        \ in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p>\
        \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_list_devices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminListDevices
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminListDevicesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminListDevicesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListGroupsForUser:
    post:
      description: "<p>Lists the groups that the user belongs to.</p> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_list_groups_for_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminListGroupsForUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminListGroupsForUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminListGroupsForUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListUserAuthEvents:
    post:
      description: "<p>A history of user activity and any risks detected as part of\
        \ Amazon Cognito advanced security.</p> <note> <p>Amazon Cognito evaluates\
        \ Identity and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you must use IAM credentials to authorize requests,\
        \ and you must grant yourself the corresponding IAM permission in a policy.</p>\
        \ <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_list_user_auth_events
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminListUserAuthEvents
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminListUserAuthEventsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminListUserAuthEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPoolAddOnNotEnabledException'
          description: UserPoolAddOnNotEnabledException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminRemoveUserFromGroup:
    post:
      description: "<p>Removes the specified user from the specified group.</p> <note>\
        \ <p>Amazon Cognito evaluates Identity and Access Management (IAM) policies\
        \ in requests for this API operation. For this operation, you must use IAM\
        \ credentials to authorize requests, and you must grant yourself the corresponding\
        \ IAM permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_remove_user_from_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminRemoveUserFromGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRemoveUserFromGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminResetUserPassword:
    post:
      description: "<p>Resets the specified user's password in a user pool as an administrator.\
        \ Works on any user.</p> <note> <p>This action might generate an SMS text\
        \ message. Starting June 1, 2021, US telecom carriers require you to register\
        \ an origination phone number before you can send SMS messages to US phone\
        \ numbers. If you use SMS text messages in Amazon Cognito, you must register\
        \ a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\"\
        >Amazon Pinpoint</a>. Amazon Cognito uses the registered number automatically.\
        \ Otherwise, Amazon Cognito users who must receive SMS messages might not\
        \ be able to sign up, activate their accounts, or sign in.</p> <p>If you have\
        \ never used SMS text messages with Amazon Cognito or any other Amazon Web\
        \ Service, Amazon Simple Notification Service might place your account in\
        \ the SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note> <p>Deactivates a user's password,\
        \ requiring them to change it. If a user tries to sign in after the API is\
        \ called, Amazon Cognito responds with a <code>PasswordResetRequiredException</code>\
        \ error. Your app must then perform the actions that reset your user's password:\
        \ the forgot-password flow. In addition, if the user pool has phone verification\
        \ selected and a verified phone number exists for the user, or if email verification\
        \ is selected and a verified email exists for the user, calling this API will\
        \ also result in sending a message to the end user with the code to change\
        \ their password.</p> <note> <p>Amazon Cognito evaluates Identity and Access\
        \ Management (IAM) policies in requests for this API operation. For this operation,\
        \ you must use IAM credentials to authorize requests, and you must grant yourself\
        \ the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_reset_user_password
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminResetUserPassword
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminResetUserPasswordRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminResetUserPasswordResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEmailRoleAccessPolicyException'
          description: InvalidEmailRoleAccessPolicyException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminRespondToAuthChallenge:
    post:
      description: "<p>Responds to an authentication challenge, as an administrator.</p>\
        \ <note> <p>This action might generate an SMS text message. Starting June\
        \ 1, 2021, US telecom carriers require you to register an origination phone\
        \ number before you can send SMS messages to US phone numbers. If you use\
        \ SMS text messages in Amazon Cognito, you must register a phone number with\
        \ <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>.\
        \ Amazon Cognito uses the registered number automatically. Otherwise, Amazon\
        \ Cognito users who must receive SMS messages might not be able to sign up,\
        \ activate their accounts, or sign in.</p> <p>If you have never used SMS text\
        \ messages with Amazon Cognito or any other Amazon Web Service, Amazon Simple\
        \ Notification Service might place your account in the SMS sandbox. In <i>\
        \ <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note> <note> <p>Amazon Cognito evaluates\
        \ Identity and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you must use IAM credentials to authorize requests,\
        \ and you must grant yourself the corresponding IAM permission in a policy.</p>\
        \ <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_respond_to_auth_challenge
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminRespondToAuthChallenge
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRespondToAuthChallengeRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRespondToAuthChallengeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeMismatchException'
          description: CodeMismatchException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredCodeException'
          description: ExpiredCodeException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
          description: InvalidPasswordException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAMethodNotFoundException'
          description: MFAMethodNotFoundException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasExistsException'
          description: AliasExistsException
        "496":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "497":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "498":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "499":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareTokenMFANotFoundException'
          description: SoftwareTokenMFANotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserMFAPreference:
    post:
      description: "<p>The user's multi-factor authentication (MFA) preference, including\
        \ which MFA options are activated, and if any are preferred. Only one factor\
        \ can be set as preferred. The preferred MFA factor will be used to authenticate\
        \ a user if multiple factors are activated. If multiple options are activated\
        \ and no preference is set, a challenge to choose an MFA option will be returned\
        \ during sign-in.</p> <note> <p>Amazon Cognito evaluates Identity and Access\
        \ Management (IAM) policies in requests for this API operation. For this operation,\
        \ you must use IAM credentials to authorize requests, and you must grant yourself\
        \ the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_set_user_mfa_preference
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminSetUserMFAPreference
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSetUserMFAPreferenceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSetUserMFAPreferenceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserPassword:
    post:
      description: "<p>Sets the specified user's password in a user pool as an administrator.\
        \ Works on any user. </p> <p>The password can be temporary or permanent. If\
        \ it is temporary, the user status enters the <code>FORCE_CHANGE_PASSWORD</code>\
        \ state. When the user next tries to sign in, the InitiateAuth/AdminInitiateAuth\
        \ response will contain the <code>NEW_PASSWORD_REQUIRED</code> challenge.\
        \ If the user doesn't sign in before it expires, the user won't be able to\
        \ sign in, and an administrator must reset their password. </p> <p>Once the\
        \ user has set a new password, or the password is permanent, the user status\
        \ is set to <code>Confirmed</code>.</p> <p> <code>AdminSetUserPassword</code>\
        \ can set a password for the user profile that Amazon Cognito creates for\
        \ third-party federated users. When you set a password, the federated user's\
        \ status changes from <code>EXTERNAL_PROVIDER</code> to <code>CONFIRMED</code>.\
        \ A user in this state can sign in as a federated user, and initiate authentication\
        \ flows in the API like a linked native user. They can also modify their password\
        \ and attributes in token-authenticated API requests like <code>ChangePassword</code>\
        \ and <code>UpdateUserAttributes</code>. As a best security practice and to\
        \ keep users in sync with your external IdP, don't set passwords on federated\
        \ user profiles. To set up a federated user for native sign-in with a linked\
        \ native user, refer to <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html\"\
        >Linking federated users to an existing user profile</a>.</p> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_set_user_password
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminSetUserPassword
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSetUserPasswordRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSetUserPasswordResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
          description: InvalidPasswordException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserSettings:
    post:
      description: "<p> <i>This action is no longer supported.</i> You can use it\
        \ to configure only SMS MFA. You can't use it to configure time-based one-time\
        \ password (TOTP) software token MFA. To configure either type of MFA, use\
        \ <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminSetUserMFAPreference.html\"\
        >AdminSetUserMFAPreference</a> instead.</p> <note> <p>Amazon Cognito evaluates\
        \ Identity and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you must use IAM credentials to authorize requests,\
        \ and you must grant yourself the corresponding IAM permission in a policy.</p>\
        \ <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_set_user_settings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminSetUserSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSetUserSettingsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSetUserSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateAuthEventFeedback:
    post:
      description: "<p>Provides feedback for an authentication event indicating if\
        \ it was from a valid user. This feedback is used for improving the risk evaluation\
        \ decision for the user pool as part of Amazon Cognito advanced security.</p>\
        \ <note> <p>Amazon Cognito evaluates Identity and Access Management (IAM)\
        \ policies in requests for this API operation. For this operation, you must\
        \ use IAM credentials to authorize requests, and you must grant yourself the\
        \ corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_update_auth_event_feedback
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminUpdateAuthEventFeedback
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateAuthEventFeedbackRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUpdateAuthEventFeedbackResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPoolAddOnNotEnabledException'
          description: UserPoolAddOnNotEnabledException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateDeviceStatus:
    post:
      description: "<p>Updates the device status as an administrator.</p> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_update_device_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminUpdateDeviceStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateDeviceStatusRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUpdateDeviceStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateUserAttributes:
    post:
      description: "<note> <p>This action might generate an SMS text message. Starting\
        \ June 1, 2021, US telecom carriers require you to register an origination\
        \ phone number before you can send SMS messages to US phone numbers. If you\
        \ use SMS text messages in Amazon Cognito, you must register a phone number\
        \ with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>.\
        \ Amazon Cognito uses the registered number automatically. Otherwise, Amazon\
        \ Cognito users who must receive SMS messages might not be able to sign up,\
        \ activate their accounts, or sign in.</p> <p>If you have never used SMS text\
        \ messages with Amazon Cognito or any other Amazon Web Service, Amazon Simple\
        \ Notification Service might place your account in the SMS sandbox. In <i>\
        \ <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note> <p>Updates the specified user's\
        \ attributes, including developer attributes, as an administrator. Works on\
        \ any user.</p> <p>For custom attributes, you must prepend the <code>custom:</code>\
        \ prefix to the attribute name.</p> <p>In addition to updating user attributes,\
        \ this API can also be used to mark phone and email as verified.</p> <note>\
        \ <p>Amazon Cognito evaluates Identity and Access Management (IAM) policies\
        \ in requests for this API operation. For this operation, you must use IAM\
        \ credentials to authorize requests, and you must grant yourself the corresponding\
        \ IAM permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_update_user_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminUpdateUserAttributes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateUserAttributesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUpdateUserAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasExistsException'
          description: AliasExistsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEmailRoleAccessPolicyException'
          description: InvalidEmailRoleAccessPolicyException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUserGlobalSignOut:
    post:
      description: "<p>Signs out a user from all devices. <code>AdminUserGlobalSignOut</code>\
        \ invalidates all identity, access and refresh tokens that Amazon Cognito\
        \ has issued to a user. A user can still use a hosted UI cookie to retrieve\
        \ new tokens for the duration of the 1-hour cookie validity period.</p> <p>Your\
        \ app isn't aware that a user's access token is revoked unless it attempts\
        \ to authorize a user pools API request with an access token that contains\
        \ the scope <code>aws.cognito.signin.user.admin</code>. Your app might otherwise\
        \ accept access tokens until they expire.</p> <note> <p>Amazon Cognito evaluates\
        \ Identity and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you must use IAM credentials to authorize requests,\
        \ and you must grant yourself the corresponding IAM permission in a policy.</p>\
        \ <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: admin_user_global_sign_out
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AdminUserGlobalSignOut
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserGlobalSignOutRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserGlobalSignOutResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.AssociateSoftwareToken:
    post:
      description: "<p>Begins setup of time-based one-time password (TOTP) multi-factor\
        \ authentication (MFA) for a user, with a unique private key that Amazon Cognito\
        \ generates and returns in the API response. You can authorize an <code>AssociateSoftwareToken</code>\
        \ request with either the user's access token, or a session string from a\
        \ challenge response that you received from Amazon Cognito.</p> <note> <p>Amazon\
        \ Cognito disassociates an existing software token when you verify the new\
        \ token in a <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifySoftwareToken.html\"\
        > VerifySoftwareToken</a> API request. If you don't verify the software token\
        \ and your user pool doesn't require MFA, the user can then authenticate with\
        \ user name and password credentials alone. If your user pool requires TOTP\
        \ MFA, Amazon Cognito generates an <code>MFA_SETUP</code> or <code>SOFTWARE_TOKEN_SETUP</code>\
        \ challenge each time your user signs. Complete setup with <code>AssociateSoftwareToken</code>\
        \ and <code>VerifySoftwareToken</code>.</p> <p>After you set up software token\
        \ MFA for your user, Amazon Cognito generates a <code>SOFTWARE_TOKEN_MFA</code>\
        \ challenge when they authenticate. Respond to this challenge with your user's\
        \ TOTP.</p> </note> <note> <p>Amazon Cognito doesn't evaluate Identity and\
        \ Access Management (IAM) policies in requests for this API operation. For\
        \ this operation, you can't use IAM credentials to authorize requests, and\
        \ you can't grant IAM permissions in policies. For more information about\
        \ authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: associate_software_token
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.AssociateSoftwareToken
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateSoftwareTokenRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateSoftwareTokenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareTokenMFANotFoundException'
          description: SoftwareTokenMFANotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ChangePassword:
    post:
      description: "<p>Changes the password for a specified user in a user pool.</p>\
        \ <note> <p>Amazon Cognito doesn't evaluate Identity and Access Management\
        \ (IAM) policies in requests for this API operation. For this operation, you\
        \ can't use IAM credentials to authorize requests, and you can't grant IAM\
        \ permissions in policies. For more information about authorization models\
        \ in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: change_password
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ChangePassword
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
          description: InvalidPasswordException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmDevice:
    post:
      description: "<p>Confirms tracking of the device. This API call is the call\
        \ that begins device tracking.</p> <note> <p>Amazon Cognito doesn't evaluate\
        \ Identity and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you can't use IAM credentials to authorize requests,\
        \ and you can't grant IAM permissions in policies. For more information about\
        \ authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: confirm_device
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ConfirmDevice
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmDeviceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
          description: InvalidPasswordException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameExistsException'
          description: UsernameExistsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmForgotPassword:
    post:
      description: "<p>Allows a user to enter a confirmation code to reset a forgotten\
        \ password.</p> <note> <p>Amazon Cognito doesn't evaluate Identity and Access\
        \ Management (IAM) policies in requests for this API operation. For this operation,\
        \ you can't use IAM credentials to authorize requests, and you can't grant\
        \ IAM permissions in policies. For more information about authorization models\
        \ in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: confirm_forgot_password
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ConfirmForgotPassword
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmForgotPasswordRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmForgotPasswordResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
          description: InvalidPasswordException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeMismatchException'
          description: CodeMismatchException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredCodeException'
          description: ExpiredCodeException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyFailedAttemptsException'
          description: TooManyFailedAttemptsException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmSignUp:
    post:
      description: "<p>Confirms registration of a new user.</p> <note> <p>Amazon Cognito\
        \ doesn't evaluate Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you can't use IAM credentials\
        \ to authorize requests, and you can't grant IAM permissions in policies.\
        \ For more information about authorization models in Amazon Cognito, see <a\
        \ href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: confirm_sign_up
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ConfirmSignUp
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmSignUpRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmSignUpResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyFailedAttemptsException'
          description: TooManyFailedAttemptsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeMismatchException'
          description: CodeMismatchException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredCodeException'
          description: ExpiredCodeException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasExistsException'
          description: AliasExistsException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateGroup:
    post:
      description: "<p>Creates a new group in the specified user pool.</p> <note>\
        \ <p>Amazon Cognito evaluates Identity and Access Management (IAM) policies\
        \ in requests for this API operation. For this operation, you must use IAM\
        \ credentials to authorize requests, and you must grant yourself the corresponding\
        \ IAM permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: create_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.CreateGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupExistsException'
          description: GroupExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateIdentityProvider:
    post:
      description: "<p>Creates an IdP for a user pool.</p> <note> <p>Amazon Cognito\
        \ evaluates Identity and Access Management (IAM) policies in requests for\
        \ this API operation. For this operation, you must use IAM credentials to\
        \ authorize requests, and you must grant yourself the corresponding IAM permission\
        \ in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p>\
        \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: create_identity_provider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.CreateIdentityProvider
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIdentityProviderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIdentityProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateProviderException'
          description: DuplicateProviderException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateResourceServer:
    post:
      description: "<p>Creates a new OAuth2.0 resource server and defines custom scopes\
        \ within it.</p> <note> <p>Amazon Cognito evaluates Identity and Access Management\
        \ (IAM) policies in requests for this API operation. For this operation, you\
        \ must use IAM credentials to authorize requests, and you must grant yourself\
        \ the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: create_resource_server
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.CreateResourceServer
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceServerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResourceServerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserImportJob:
    post:
      description: "<p>Creates a user import job.</p> <note> <p>Amazon Cognito evaluates\
        \ Identity and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you must use IAM credentials to authorize requests,\
        \ and you must grant yourself the corresponding IAM permission in a policy.</p>\
        \ <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: create_user_import_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.CreateUserImportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserImportJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
          description: PreconditionNotMetException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPool:
    post:
      description: "<note> <p>This action might generate an SMS text message. Starting\
        \ June 1, 2021, US telecom carriers require you to register an origination\
        \ phone number before you can send SMS messages to US phone numbers. If you\
        \ use SMS text messages in Amazon Cognito, you must register a phone number\
        \ with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>.\
        \ Amazon Cognito uses the registered number automatically. Otherwise, Amazon\
        \ Cognito users who must receive SMS messages might not be able to sign up,\
        \ activate their accounts, or sign in.</p> <p>If you have never used SMS text\
        \ messages with Amazon Cognito or any other Amazon Web Service, Amazon Simple\
        \ Notification Service might place your account in the SMS sandbox. In <i>\
        \ <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note> <p>Creates a new Amazon Cognito\
        \ user pool and sets the password policy for the pool.</p> <important> <p>If\
        \ you don't provide a value for an attribute, Amazon Cognito sets it to its\
        \ default value.</p> </important> <note> <p>Amazon Cognito evaluates Identity\
        \ and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you must use IAM credentials to authorize requests,\
        \ and you must grant yourself the corresponding IAM permission in a policy.</p>\
        \ <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: create_user_pool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.CreateUserPool
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserPoolRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserPoolResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEmailRoleAccessPolicyException'
          description: InvalidEmailRoleAccessPolicyException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPoolTaggingException'
          description: UserPoolTaggingException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPoolClient:
    post:
      description: "<p>Creates the user pool client.</p> <p>When you create a new\
        \ user pool client, token revocation is automatically activated. For more\
        \ information about revoking tokens, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html\"\
        >RevokeToken</a>.</p> <important> <p>If you don't provide a value for an attribute,\
        \ Amazon Cognito sets it to its default value.</p> </important> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: create_user_pool_client
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.CreateUserPoolClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserPoolClientRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserPoolClientResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeDoesNotExistException'
          description: ScopeDoesNotExistException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOAuthFlowException'
          description: InvalidOAuthFlowException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPoolDomain:
    post:
      description: "<p>Creates a new domain for a user pool.</p> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: create_user_pool_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.CreateUserPoolDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserPoolDomainRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserPoolDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteGroup:
    post:
      description: <p>Deletes a group.</p> <p>Calling this action requires developer
        credentials.</p>
      operationId: delete_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DeleteGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteIdentityProvider:
    post:
      description: Deletes an IdP for a user pool.
      operationId: delete_identity_provider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DeleteIdentityProvider
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteIdentityProviderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedIdentityProviderException'
          description: UnsupportedIdentityProviderException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteResourceServer:
    post:
      description: Deletes a resource server.
      operationId: delete_resource_server
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DeleteResourceServer
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceServerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUser:
    post:
      description: "<p>Allows a user to delete their own user profile.</p> <note>\
        \ <p>Amazon Cognito doesn't evaluate Identity and Access Management (IAM)\
        \ policies in requests for this API operation. For this operation, you can't\
        \ use IAM credentials to authorize requests, and you can't grant IAM permissions\
        \ in policies. For more information about authorization models in Amazon Cognito,\
        \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: delete_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DeleteUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserAttributes:
    post:
      description: "<p>Deletes the attributes for a user.</p> <note> <p>Amazon Cognito\
        \ doesn't evaluate Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you can't use IAM credentials\
        \ to authorize requests, and you can't grant IAM permissions in policies.\
        \ For more information about authorization models in Amazon Cognito, see <a\
        \ href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: delete_user_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DeleteUserAttributes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserAttributesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPool:
    post:
      description: Deletes the specified Amazon Cognito user pool.
      operationId: delete_user_pool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DeleteUserPool
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserPoolRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserImportInProgressException'
          description: UserImportInProgressException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPoolClient:
    post:
      description: Allows the developer to delete the user pool client.
      operationId: delete_user_pool_client
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DeleteUserPoolClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserPoolClientRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPoolDomain:
    post:
      description: Deletes a domain for a user pool.
      operationId: delete_user_pool_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DeleteUserPoolDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserPoolDomainRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserPoolDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeIdentityProvider:
    post:
      description: Gets information about a specific IdP.
      operationId: describe_identity_provider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DescribeIdentityProvider
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeIdentityProviderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeIdentityProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeResourceServer:
    post:
      description: Describes a resource server.
      operationId: describe_resource_server
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DescribeResourceServer
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeResourceServerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeResourceServerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeRiskConfiguration:
    post:
      description: Describes the risk configuration.
      operationId: describe_risk_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DescribeRiskConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRiskConfigurationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRiskConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPoolAddOnNotEnabledException'
          description: UserPoolAddOnNotEnabledException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserImportJob:
    post:
      description: Describes the user import job.
      operationId: describe_user_import_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DescribeUserImportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserImportJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPool:
    post:
      description: "<p>Returns the configuration information and metadata of the specified\
        \ user pool.</p> <note> <p>Amazon Cognito evaluates Identity and Access Management\
        \ (IAM) policies in requests for this API operation. For this operation, you\
        \ must use IAM credentials to authorize requests, and you must grant yourself\
        \ the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: describe_user_pool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DescribeUserPool
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserPoolRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserPoolResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPoolTaggingException'
          description: UserPoolTaggingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPoolClient:
    post:
      description: "<p>Client method for returning the configuration information and\
        \ metadata of the specified user pool app client.</p> <note> <p>Amazon Cognito\
        \ evaluates Identity and Access Management (IAM) policies in requests for\
        \ this API operation. For this operation, you must use IAM credentials to\
        \ authorize requests, and you must grant yourself the corresponding IAM permission\
        \ in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p>\
        \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: describe_user_pool_client
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DescribeUserPoolClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserPoolClientRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserPoolClientResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPoolDomain:
    post:
      description: Gets information about a domain.
      operationId: describe_user_pool_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.DescribeUserPoolDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserPoolDomainRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserPoolDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ForgetDevice:
    post:
      description: "<p>Forgets the specified device.</p> <note> <p>Amazon Cognito\
        \ doesn't evaluate Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you can't use IAM credentials\
        \ to authorize requests, and you can't grant IAM permissions in policies.\
        \ For more information about authorization models in Amazon Cognito, see <a\
        \ href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: forget_device
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ForgetDevice
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgetDeviceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ForgotPassword:
    post:
      description: "<p>Calling this API causes a message to be sent to the end user\
        \ with a confirmation code that is required to change the user's password.\
        \ For the <code>Username</code> parameter, you can use the username or user\
        \ alias. The method used to send the confirmation code is sent according to\
        \ the specified AccountRecoverySetting. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-recover-a-user-account.html\"\
        >Recovering User Accounts</a> in the <i>Amazon Cognito Developer Guide</i>.\
        \ To use the confirmation code for resetting the password, call <a href=\"\
        https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmForgotPassword.html\"\
        >ConfirmForgotPassword</a>. </p> <p>If neither a verified phone number nor\
        \ a verified email exists, this API returns <code>InvalidParameterException</code>.\
        \ If your app client has a client secret and you don't provide a <code>SECRET_HASH</code>\
        \ parameter, this API returns <code>NotAuthorizedException</code>.</p> <note>\
        \ <p>Amazon Cognito doesn't evaluate Identity and Access Management (IAM)\
        \ policies in requests for this API operation. For this operation, you can't\
        \ use IAM credentials to authorize requests, and you can't grant IAM permissions\
        \ in policies. For more information about authorization models in Amazon Cognito,\
        \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note> <note> <p>This\
        \ action might generate an SMS text message. Starting June 1, 2021, US telecom\
        \ carriers require you to register an origination phone number before you\
        \ can send SMS messages to US phone numbers. If you use SMS text messages\
        \ in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\"\
        >Amazon Pinpoint</a>. Amazon Cognito uses the registered number automatically.\
        \ Otherwise, Amazon Cognito users who must receive SMS messages might not\
        \ be able to sign up, activate their accounts, or sign in.</p> <p>If you have\
        \ never used SMS text messages with Amazon Cognito or any other Amazon Web\
        \ Service, Amazon Simple Notification Service might place your account in\
        \ the SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note>"
      operationId: forgot_password
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ForgotPassword
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEmailRoleAccessPolicyException'
          description: InvalidEmailRoleAccessPolicyException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeDeliveryFailureException'
          description: CodeDeliveryFailureException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetCSVHeader:
    post:
      description: Gets the header information for the comma-separated value (CSV)
        file to be used as input for the user import job.
      operationId: get_csv_header
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.GetCSVHeader
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCSVHeaderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCSVHeaderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetDevice:
    post:
      description: "<p>Gets the device.</p> <note> <p>Amazon Cognito doesn't evaluate\
        \ Identity and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you can't use IAM credentials to authorize requests,\
        \ and you can't grant IAM permissions in policies. For more information about\
        \ authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: get_device
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.GetDevice
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeviceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetGroup:
    post:
      description: <p>Gets a group.</p> <p>Calling this action requires developer
        credentials.</p>
      operationId: get_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.GetGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetIdentityProviderByIdentifier:
    post:
      description: Gets the specified IdP.
      operationId: get_identity_provider_by_identifier
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.GetIdentityProviderByIdentifier
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIdentityProviderByIdentifierRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdentityProviderByIdentifierResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetLogDeliveryConfiguration:
    post:
      description: Gets the detailed activity logging configuration for a user pool.
      operationId: get_log_delivery_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.GetLogDeliveryConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLogDeliveryConfigurationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLogDeliveryConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetSigningCertificate:
    post:
      description: "<p>This method takes a user pool ID, and returns the signing certificate.\
        \ The issued certificate is valid for 10 years from the date of issue.</p>\
        \ <p>Amazon Cognito issues and assigns a new signing certificate annually.\
        \ This process returns a new value in the response to <code>GetSigningCertificate</code>,\
        \ but doesn't invalidate the original certificate.</p>"
      operationId: get_signing_certificate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.GetSigningCertificate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSigningCertificateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSigningCertificateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetUICustomization:
    post:
      description: "Gets the user interface (UI) Customization information for a particular\
        \ app client's app UI, if any such information exists for the client. If nothing\
        \ is set for the particular client, but there is an existing pool level customization\
        \ (the app <code>clientId</code> is <code>ALL</code>), then that information\
        \ is returned. If nothing is present, then an empty shape is returned."
      operationId: get_ui_customization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.GetUICustomization
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUICustomizationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUICustomizationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetUser:
    post:
      description: "<p>Gets the user attributes and metadata for a user.</p> <note>\
        \ <p>Amazon Cognito doesn't evaluate Identity and Access Management (IAM)\
        \ policies in requests for this API operation. For this operation, you can't\
        \ use IAM credentials to authorize requests, and you can't grant IAM permissions\
        \ in policies. For more information about authorization models in Amazon Cognito,\
        \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: get_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.GetUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetUserAttributeVerificationCode:
    post:
      description: "<p>Generates a user attribute verification code for the specified\
        \ attribute name. Sends a message to a user with a code that they must return\
        \ in a VerifyUserAttribute request.</p> <note> <p>Amazon Cognito doesn't evaluate\
        \ Identity and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you can't use IAM credentials to authorize requests,\
        \ and you can't grant IAM permissions in policies. For more information about\
        \ authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note> <note> <p>This\
        \ action might generate an SMS text message. Starting June 1, 2021, US telecom\
        \ carriers require you to register an origination phone number before you\
        \ can send SMS messages to US phone numbers. If you use SMS text messages\
        \ in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\"\
        >Amazon Pinpoint</a>. Amazon Cognito uses the registered number automatically.\
        \ Otherwise, Amazon Cognito users who must receive SMS messages might not\
        \ be able to sign up, activate their accounts, or sign in.</p> <p>If you have\
        \ never used SMS text messages with Amazon Cognito or any other Amazon Web\
        \ Service, Amazon Simple Notification Service might place your account in\
        \ the SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note>"
      operationId: get_user_attribute_verification_code
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.GetUserAttributeVerificationCode
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserAttributeVerificationCodeRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserAttributeVerificationCodeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEmailRoleAccessPolicyException'
          description: InvalidEmailRoleAccessPolicyException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeDeliveryFailureException'
          description: CodeDeliveryFailureException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "496":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetUserPoolMfaConfig:
    post:
      description: Gets the user pool multi-factor authentication (MFA) configuration.
      operationId: get_user_pool_mfa_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.GetUserPoolMfaConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserPoolMfaConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserPoolMfaConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.GlobalSignOut:
    post:
      description: "<p>Signs out a user from all devices. <code>GlobalSignOut</code>\
        \ invalidates all identity, access and refresh tokens that Amazon Cognito\
        \ has issued to a user. A user can still use a hosted UI cookie to retrieve\
        \ new tokens for the duration of the 1-hour cookie validity period.</p> <p>Your\
        \ app isn't aware that a user's access token is revoked unless it attempts\
        \ to authorize a user pools API request with an access token that contains\
        \ the scope <code>aws.cognito.signin.user.admin</code>. Your app might otherwise\
        \ accept access tokens until they expire.</p> <note> <p>Amazon Cognito doesn't\
        \ evaluate Identity and Access Management (IAM) policies in requests for this\
        \ API operation. For this operation, you can't use IAM credentials to authorize\
        \ requests, and you can't grant IAM permissions in policies. For more information\
        \ about authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: global_sign_out
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.GlobalSignOut
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalSignOutRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSignOutResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.InitiateAuth:
    post:
      description: "<p>Initiates sign-in for a user in the Amazon Cognito user directory.\
        \ You can't sign in a user with a federated IdP with <code>InitiateAuth</code>.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation.html\"\
        > Adding user pool sign-in through a third party</a>.</p> <note> <p>Amazon\
        \ Cognito doesn't evaluate Identity and Access Management (IAM) policies in\
        \ requests for this API operation. For this operation, you can't use IAM credentials\
        \ to authorize requests, and you can't grant IAM permissions in policies.\
        \ For more information about authorization models in Amazon Cognito, see <a\
        \ href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note> <note> <p>This\
        \ action might generate an SMS text message. Starting June 1, 2021, US telecom\
        \ carriers require you to register an origination phone number before you\
        \ can send SMS messages to US phone numbers. If you use SMS text messages\
        \ in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\"\
        >Amazon Pinpoint</a>. Amazon Cognito uses the registered number automatically.\
        \ Otherwise, Amazon Cognito users who must receive SMS messages might not\
        \ be able to sign up, activate their accounts, or sign in.</p> <p>If you have\
        \ never used SMS text messages with Amazon Cognito or any other Amazon Web\
        \ Service, Amazon Simple Notification Service might place your account in\
        \ the SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note>"
      operationId: initiate_auth
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.InitiateAuth
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateAuthRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateAuthResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListDevices:
    post:
      description: "<p>Lists the sign-in devices that Amazon Cognito has registered\
        \ to the current user.</p> <note> <p>Amazon Cognito doesn't evaluate Identity\
        \ and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you can't use IAM credentials to authorize requests,\
        \ and you can't grant IAM permissions in policies. For more information about\
        \ authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: list_devices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ListDevices
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevicesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListGroups:
    post:
      description: "<p>Lists the groups associated with a user pool.</p> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: list_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ListGroups
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListGroupsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListIdentityProviders:
    post:
      description: "<p>Lists information about all IdPs for a user pool.</p> <note>\
        \ <p>Amazon Cognito evaluates Identity and Access Management (IAM) policies\
        \ in requests for this API operation. For this operation, you must use IAM\
        \ credentials to authorize requests, and you must grant yourself the corresponding\
        \ IAM permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: list_identity_providers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ListIdentityProviders
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListIdentityProvidersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentityProvidersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListResourceServers:
    post:
      description: "<p>Lists the resource servers for a user pool.</p> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: list_resource_servers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ListResourceServers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourceServersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourceServersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListTagsForResource:
    post:
      description: "<p>Lists the tags that are assigned to an Amazon Cognito user\
        \ pool.</p> <p>A tag is a label that you can apply to user pools to categorize\
        \ and manage them in different ways, such as by purpose, owner, environment,\
        \ or other criteria.</p> <p>You can use this action up to 10 times per second,\
        \ per account.</p>"
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserImportJobs:
    post:
      description: "<p>Lists user import jobs for a user pool.</p> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: list_user_import_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ListUserImportJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUserImportJobsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserImportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserPoolClients:
    post:
      description: "<p>Lists the clients that have been created for the specified\
        \ user pool.</p> <note> <p>Amazon Cognito evaluates Identity and Access Management\
        \ (IAM) policies in requests for this API operation. For this operation, you\
        \ must use IAM credentials to authorize requests, and you must grant yourself\
        \ the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: list_user_pool_clients
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ListUserPoolClients
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUserPoolClientsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserPoolClientsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserPools:
    post:
      description: "<p>Lists the user pools associated with an Amazon Web Services\
        \ account.</p> <note> <p>Amazon Cognito evaluates Identity and Access Management\
        \ (IAM) policies in requests for this API operation. For this operation, you\
        \ must use IAM credentials to authorize requests, and you must grant yourself\
        \ the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: list_user_pools
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ListUserPools
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUserPoolsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserPoolsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListUsers:
    post:
      description: "<p>Lists users and their basic details in a user pool.</p> <note>\
        \ <p>Amazon Cognito evaluates Identity and Access Management (IAM) policies\
        \ in requests for this API operation. For this operation, you must use IAM\
        \ credentials to authorize requests, and you must grant yourself the corresponding\
        \ IAM permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: list_users
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PaginationToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ListUsers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListUsersInGroup:
    post:
      description: "<p>Lists the users in the specified group.</p> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: list_users_in_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ListUsersInGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersInGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersInGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.ResendConfirmationCode:
    post:
      description: "<p>Resends the confirmation (for confirmation of registration)\
        \ to a specific user in the user pool.</p> <note> <p>Amazon Cognito doesn't\
        \ evaluate Identity and Access Management (IAM) policies in requests for this\
        \ API operation. For this operation, you can't use IAM credentials to authorize\
        \ requests, and you can't grant IAM permissions in policies. For more information\
        \ about authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note> <note> <p>This\
        \ action might generate an SMS text message. Starting June 1, 2021, US telecom\
        \ carriers require you to register an origination phone number before you\
        \ can send SMS messages to US phone numbers. If you use SMS text messages\
        \ in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\"\
        >Amazon Pinpoint</a>. Amazon Cognito uses the registered number automatically.\
        \ Otherwise, Amazon Cognito users who must receive SMS messages might not\
        \ be able to sign up, activate their accounts, or sign in.</p> <p>If you have\
        \ never used SMS text messages with Amazon Cognito or any other Amazon Web\
        \ Service, Amazon Simple Notification Service might place your account in\
        \ the SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note>"
      operationId: resend_confirmation_code
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.ResendConfirmationCode
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendConfirmationCodeRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendConfirmationCodeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEmailRoleAccessPolicyException'
          description: InvalidEmailRoleAccessPolicyException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeDeliveryFailureException'
          description: CodeDeliveryFailureException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.RespondToAuthChallenge:
    post:
      description: "<p>Responds to the authentication challenge.</p> <note> <p>Amazon\
        \ Cognito doesn't evaluate Identity and Access Management (IAM) policies in\
        \ requests for this API operation. For this operation, you can't use IAM credentials\
        \ to authorize requests, and you can't grant IAM permissions in policies.\
        \ For more information about authorization models in Amazon Cognito, see <a\
        \ href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note> <note> <p>This\
        \ action might generate an SMS text message. Starting June 1, 2021, US telecom\
        \ carriers require you to register an origination phone number before you\
        \ can send SMS messages to US phone numbers. If you use SMS text messages\
        \ in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\"\
        >Amazon Pinpoint</a>. Amazon Cognito uses the registered number automatically.\
        \ Otherwise, Amazon Cognito users who must receive SMS messages might not\
        \ be able to sign up, activate their accounts, or sign in.</p> <p>If you have\
        \ never used SMS text messages with Amazon Cognito or any other Amazon Web\
        \ Service, Amazon Simple Notification Service might place your account in\
        \ the SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note>"
      operationId: respond_to_auth_challenge
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.RespondToAuthChallenge
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespondToAuthChallengeRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespondToAuthChallengeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeMismatchException'
          description: CodeMismatchException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredCodeException'
          description: ExpiredCodeException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
          description: InvalidPasswordException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAMethodNotFoundException'
          description: MFAMethodNotFoundException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "496":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "497":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasExistsException'
          description: AliasExistsException
        "498":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "499":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareTokenMFANotFoundException'
          description: SoftwareTokenMFANotFoundException
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.RevokeToken:
    post:
      description: "<p>Revokes all of the access tokens generated by, and at the same\
        \ time as, the specified refresh token. After a token is revoked, you can't\
        \ use the revoked token to access Amazon Cognito user APIs, or to authorize\
        \ access to your resource server.</p> <note> <p>Amazon Cognito doesn't evaluate\
        \ Identity and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you can't use IAM credentials to authorize requests,\
        \ and you can't grant IAM permissions in policies. For more information about\
        \ authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: revoke_token
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.RevokeToken
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeTokenRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeTokenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedTokenTypeException'
          description: UnsupportedTokenTypeException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.SetLogDeliveryConfiguration:
    post:
      description: Sets up or modifies the detailed activity logging configuration
        of a user pool.
      operationId: set_log_delivery_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.SetLogDeliveryConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetLogDeliveryConfigurationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetLogDeliveryConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.SetRiskConfiguration:
    post:
      description: "<p>Configures actions on detected risks. To delete the risk configuration\
        \ for <code>UserPoolId</code> or <code>ClientId</code>, pass null values for\
        \ all four configuration types.</p> <p>To activate Amazon Cognito advanced\
        \ security features, update the user pool to include the <code>UserPoolAddOns</code>\
        \ key<code>AdvancedSecurityMode</code>.</p>"
      operationId: set_risk_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.SetRiskConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetRiskConfigurationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetRiskConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPoolAddOnNotEnabledException'
          description: UserPoolAddOnNotEnabledException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeDeliveryFailureException'
          description: CodeDeliveryFailureException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEmailRoleAccessPolicyException'
          description: InvalidEmailRoleAccessPolicyException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.SetUICustomization:
    post:
      description: "<p>Sets the user interface (UI) customization information for\
        \ a user pool's built-in app UI.</p> <p>You can specify app UI customization\
        \ settings for a single client (with a specific <code>clientId</code>) or\
        \ for all clients (by setting the <code>clientId</code> to <code>ALL</code>).\
        \ If you specify <code>ALL</code>, the default configuration is used for every\
        \ client that has no previously set UI customization. If you specify UI customization\
        \ settings for a particular client, it will no longer return to the <code>ALL</code>\
        \ configuration.</p> <note> <p>To use this API, your user pool must have a\
        \ domain associated with it. Otherwise, there is no place to host the app's\
        \ pages, and the service will throw an error.</p> </note>"
      operationId: set_ui_customization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.SetUICustomization
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUICustomizationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUICustomizationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserMFAPreference:
    post:
      description: "<p>Set the user's multi-factor authentication (MFA) method preference,\
        \ including which MFA factors are activated and if any are preferred. Only\
        \ one factor can be set as preferred. The preferred MFA factor will be used\
        \ to authenticate a user if multiple factors are activated. If multiple options\
        \ are activated and no preference is set, a challenge to choose an MFA option\
        \ will be returned during sign-in. If an MFA type is activated for a user,\
        \ the user will be prompted for MFA during all sign-in attempts unless device\
        \ tracking is turned on and the device has been trusted. If you want MFA to\
        \ be applied selectively based on the assessed risk level of sign-in attempts,\
        \ deactivate MFA for users and turn on Adaptive Authentication for the user\
        \ pool.</p> <note> <p>Amazon Cognito doesn't evaluate Identity and Access\
        \ Management (IAM) policies in requests for this API operation. For this operation,\
        \ you can't use IAM credentials to authorize requests, and you can't grant\
        \ IAM permissions in policies. For more information about authorization models\
        \ in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: set_user_mfa_preference
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.SetUserMFAPreference
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserMFAPreferenceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUserMFAPreferenceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserPoolMfaConfig:
    post:
      description: "<p>Sets the user pool multi-factor authentication (MFA) configuration.</p>\
        \ <note> <p>This action might generate an SMS text message. Starting June\
        \ 1, 2021, US telecom carriers require you to register an origination phone\
        \ number before you can send SMS messages to US phone numbers. If you use\
        \ SMS text messages in Amazon Cognito, you must register a phone number with\
        \ <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>.\
        \ Amazon Cognito uses the registered number automatically. Otherwise, Amazon\
        \ Cognito users who must receive SMS messages might not be able to sign up,\
        \ activate their accounts, or sign in.</p> <p>If you have never used SMS text\
        \ messages with Amazon Cognito or any other Amazon Web Service, Amazon Simple\
        \ Notification Service might place your account in the SMS sandbox. In <i>\
        \ <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note>"
      operationId: set_user_pool_mfa_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.SetUserPoolMfaConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserPoolMfaConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUserPoolMfaConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserSettings:
    post:
      description: "<p> <i>This action is no longer supported.</i> You can use it\
        \ to configure only SMS MFA. You can't use it to configure time-based one-time\
        \ password (TOTP) software token MFA. To configure either type of MFA, use\
        \ <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserMFAPreference.html\"\
        >SetUserMFAPreference</a> instead.</p> <note> <p>Amazon Cognito doesn't evaluate\
        \ Identity and Access Management (IAM) policies in requests for this API operation.\
        \ For this operation, you can't use IAM credentials to authorize requests,\
        \ and you can't grant IAM permissions in policies. For more information about\
        \ authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: set_user_settings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.SetUserSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserSettingsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUserSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.SignUp:
    post:
      description: "<p>Registers the user in the specified user pool and creates a\
        \ user name, password, and user attributes.</p> <note> <p>Amazon Cognito doesn't\
        \ evaluate Identity and Access Management (IAM) policies in requests for this\
        \ API operation. For this operation, you can't use IAM credentials to authorize\
        \ requests, and you can't grant IAM permissions in policies. For more information\
        \ about authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note> <note> <p>This\
        \ action might generate an SMS text message. Starting June 1, 2021, US telecom\
        \ carriers require you to register an origination phone number before you\
        \ can send SMS messages to US phone numbers. If you use SMS text messages\
        \ in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\"\
        >Amazon Pinpoint</a>. Amazon Cognito uses the registered number automatically.\
        \ Otherwise, Amazon Cognito users who must receive SMS messages might not\
        \ be able to sign up, activate their accounts, or sign in.</p> <p>If you have\
        \ never used SMS text messages with Amazon Cognito or any other Amazon Web\
        \ Service, Amazon Simple Notification Service might place your account in\
        \ the SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note>"
      operationId: sign_up
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.SignUp
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
          description: InvalidPasswordException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameExistsException'
          description: UsernameExistsException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEmailRoleAccessPolicyException'
          description: InvalidEmailRoleAccessPolicyException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeDeliveryFailureException'
          description: CodeDeliveryFailureException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.StartUserImportJob:
    post:
      description: Starts the user import.
      operationId: start_user_import_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.StartUserImportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartUserImportJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartUserImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
          description: PreconditionNotMetException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.StopUserImportJob:
    post:
      description: Stops the user import job.
      operationId: stop_user_import_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.StopUserImportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopUserImportJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopUserImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
          description: PreconditionNotMetException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.TagResource:
    post:
      description: "<p>Assigns a set of tags to an Amazon Cognito user pool. A tag\
        \ is a label that you can use to categorize and manage user pools in different\
        \ ways, such as by purpose, owner, environment, or other criteria.</p> <p>Each\
        \ tag consists of a key and value, both of which you define. A key is a general\
        \ category for more specific values. For example, if you have two versions\
        \ of a user pool, one for testing and another for production, you might assign\
        \ an <code>Environment</code> tag key to both user pools. The value of this\
        \ key might be <code>Test</code> for one user pool, and <code>Production</code>\
        \ for the other.</p> <p>Tags are useful for cost tracking and access control.\
        \ You can activate your tags so that they appear on the Billing and Cost Management\
        \ console, where you can track the costs associated with your user pools.\
        \ In an Identity and Access Management policy, you can constrain permissions\
        \ for user pools based on specific tags or tag values.</p> <p>You can use\
        \ this action up to 5 times per second, per account. A user pool can have\
        \ as many as 50 tags.</p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.UntagResource:
    post:
      description: "Removes the specified tags from an Amazon Cognito user pool. You\
        \ can use this action up to 5 times per second, per account."
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateAuthEventFeedback:
    post:
      description: "<p>Provides the feedback for an authentication event, whether\
        \ it was from a valid user or not. This feedback is used for improving the\
        \ risk evaluation decision for the user pool as part of Amazon Cognito advanced\
        \ security.</p> <note> <p>Amazon Cognito doesn't evaluate Identity and Access\
        \ Management (IAM) policies in requests for this API operation. For this operation,\
        \ you can't use IAM credentials to authorize requests, and you can't grant\
        \ IAM permissions in policies. For more information about authorization models\
        \ in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: update_auth_event_feedback
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.UpdateAuthEventFeedback
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthEventFeedbackRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAuthEventFeedbackResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPoolAddOnNotEnabledException'
          description: UserPoolAddOnNotEnabledException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateDeviceStatus:
    post:
      description: "<p>Updates the device status.</p> <note> <p>Amazon Cognito doesn't\
        \ evaluate Identity and Access Management (IAM) policies in requests for this\
        \ API operation. For this operation, you can't use IAM credentials to authorize\
        \ requests, and you can't grant IAM permissions in policies. For more information\
        \ about authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: update_device_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.UpdateDeviceStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceStatusRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDeviceStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateGroup:
    post:
      description: "<p>Updates the specified group with the specified attributes.</p>\
        \ <note> <p>Amazon Cognito evaluates Identity and Access Management (IAM)\
        \ policies in requests for this API operation. For this operation, you must\
        \ use IAM credentials to authorize requests, and you must grant yourself the\
        \ corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: update_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.UpdateGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateIdentityProvider:
    post:
      description: "<p>Updates IdP information for a user pool.</p> <note> <p>Amazon\
        \ Cognito evaluates Identity and Access Management (IAM) policies in requests\
        \ for this API operation. For this operation, you must use IAM credentials\
        \ to authorize requests, and you must grant yourself the corresponding IAM\
        \ permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: update_identity_provider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.UpdateIdentityProvider
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIdentityProviderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIdentityProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedIdentityProviderException'
          description: UnsupportedIdentityProviderException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateResourceServer:
    post:
      description: "<p>Updates the name and scopes of resource server. All other fields\
        \ are read-only.</p> <important> <p>If you don't provide a value for an attribute,\
        \ it is set to the default value.</p> </important> <note> <p>Amazon Cognito\
        \ evaluates Identity and Access Management (IAM) policies in requests for\
        \ this API operation. For this operation, you must use IAM credentials to\
        \ authorize requests, and you must grant yourself the corresponding IAM permission\
        \ in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p>\
        \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: update_resource_server
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.UpdateResourceServer
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceServerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResourceServerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserAttributes:
    post:
      description: "<p>Allows a user to update a specific attribute (one at a time).</p>\
        \ <note> <p>Amazon Cognito doesn't evaluate Identity and Access Management\
        \ (IAM) policies in requests for this API operation. For this operation, you\
        \ can't use IAM credentials to authorize requests, and you can't grant IAM\
        \ permissions in policies. For more information about authorization models\
        \ in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note> <note> <p>This\
        \ action might generate an SMS text message. Starting June 1, 2021, US telecom\
        \ carriers require you to register an origination phone number before you\
        \ can send SMS messages to US phone numbers. If you use SMS text messages\
        \ in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\"\
        >Amazon Pinpoint</a>. Amazon Cognito uses the registered number automatically.\
        \ Otherwise, Amazon Cognito users who must receive SMS messages might not\
        \ be able to sign up, activate their accounts, or sign in.</p> <p>If you have\
        \ never used SMS text messages with Amazon Cognito or any other Amazon Web\
        \ Service, Amazon Simple Notification Service might place your account in\
        \ the SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note>"
      operationId: update_user_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.UpdateUserAttributes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserAttributesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeMismatchException'
          description: CodeMismatchException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredCodeException'
          description: ExpiredCodeException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedLambdaException'
          description: UnexpectedLambdaException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLambdaValidationException'
          description: UserLambdaValidationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaResponseException'
          description: InvalidLambdaResponseException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasExistsException'
          description: AliasExistsException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEmailRoleAccessPolicyException'
          description: InvalidEmailRoleAccessPolicyException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeDeliveryFailureException'
          description: CodeDeliveryFailureException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "496":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "497":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "498":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPool:
    post:
      description: "<note> <p>This action might generate an SMS text message. Starting\
        \ June 1, 2021, US telecom carriers require you to register an origination\
        \ phone number before you can send SMS messages to US phone numbers. If you\
        \ use SMS text messages in Amazon Cognito, you must register a phone number\
        \ with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>.\
        \ Amazon Cognito uses the registered number automatically. Otherwise, Amazon\
        \ Cognito users who must receive SMS messages might not be able to sign up,\
        \ activate their accounts, or sign in.</p> <p>If you have never used SMS text\
        \ messages with Amazon Cognito or any other Amazon Web Service, Amazon Simple\
        \ Notification Service might place your account in the SMS sandbox. In <i>\
        \ <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >sandbox mode</a> </i>, you can send messages only to verified phone numbers.\
        \ After you test your app while in the sandbox environment, you can move out\
        \ of the sandbox and into production. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
        > SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon\
        \ Cognito Developer Guide</i>.</p> </note> <p>Updates the specified user pool\
        \ with the specified attributes. You can get a list of the current user pool\
        \ settings using <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html\"\
        >DescribeUserPool</a>.</p> <important> <p>If you don't provide a value for\
        \ an attribute, Amazon Cognito sets it to its default value.</p> </important>\
        \ <note> <p>Amazon Cognito evaluates Identity and Access Management (IAM)\
        \ policies in requests for this API operation. For this operation, you must\
        \ use IAM credentials to authorize requests, and you must grant yourself the\
        \ corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: update_user_pool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.UpdateUserPool
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPoolRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserPoolResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserImportInProgressException'
          description: UserImportInProgressException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleAccessPolicyException'
          description: InvalidSmsRoleAccessPolicyException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSmsRoleTrustRelationshipException'
          description: InvalidSmsRoleTrustRelationshipException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPoolTaggingException'
          description: UserPoolTaggingException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEmailRoleAccessPolicyException'
          description: InvalidEmailRoleAccessPolicyException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPoolClient:
    post:
      description: "<p>Updates the specified user pool app client with the specified\
        \ attributes. You can get a list of the current user pool app client settings\
        \ using <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPoolClient.html\"\
        >DescribeUserPoolClient</a>.</p> <important> <p>If you don't provide a value\
        \ for an attribute, Amazon Cognito sets it to its default value.</p> </important>\
        \ <p>You can also use this operation to enable token revocation for user pool\
        \ clients. For more information about revoking tokens, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html\"\
        >RevokeToken</a>.</p> <note> <p>Amazon Cognito evaluates Identity and Access\
        \ Management (IAM) policies in requests for this API operation. For this operation,\
        \ you must use IAM credentials to authorize requests, and you must grant yourself\
        \ the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn\
        \ more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: update_user_pool_client
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.UpdateUserPoolClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPoolClientRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserPoolClientResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeDoesNotExistException'
          description: ScopeDoesNotExistException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOAuthFlowException'
          description: InvalidOAuthFlowException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPoolDomain:
    post:
      description: "<p>Updates the Secure Sockets Layer (SSL) certificate for the\
        \ custom domain for your user pool.</p> <p>You can use this operation to provide\
        \ the Amazon Resource Name (ARN) of a new certificate to Amazon Cognito. You\
        \ can't use it to change the domain for a user pool.</p> <p>A custom domain\
        \ is used to host the Amazon Cognito hosted UI, which provides sign-up and\
        \ sign-in pages for your application. When you set up a custom domain, you\
        \ provide a certificate that you manage with Certificate Manager (ACM). When\
        \ necessary, you can use this operation to change the certificate that you\
        \ applied to your custom domain.</p> <p>Usually, this is unnecessary following\
        \ routine certificate renewal with ACM. When you renew your existing certificate\
        \ in ACM, the ARN for your certificate remains the same, and your custom domain\
        \ uses the new certificate automatically.</p> <p>However, if you replace your\
        \ existing certificate with a new one, ACM gives the new certificate a new\
        \ ARN. To apply the new certificate to your custom domain, you must provide\
        \ this ARN to Amazon Cognito.</p> <p>When you add your new certificate in\
        \ ACM, you must choose US East (N. Virginia) as the Amazon Web Services Region.</p>\
        \ <p>After you submit your request, Amazon Cognito requires up to 1 hour to\
        \ distribute your new certificate to your custom domain.</p> <p>For more information\
        \ about adding a custom domain to your user pool, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html\"\
        >Using Your Own Domain for the Hosted UI</a>.</p> <note> <p>Amazon Cognito\
        \ evaluates Identity and Access Management (IAM) policies in requests for\
        \ this API operation. For this operation, you must use IAM credentials to\
        \ authorize requests, and you must grant yourself the corresponding IAM permission\
        \ in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p>\
        \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\"\
        >Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito user pools API and user pool endpoints</a> </p>\
        \ </li> </ul> </note>"
      operationId: update_user_pool_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.UpdateUserPoolDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPoolDomainRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserPoolDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.VerifySoftwareToken:
    post:
      description: "<p>Use this API to register a user's entered time-based one-time\
        \ password (TOTP) code and mark the user's software token MFA status as \"\
        verified\" if successful. The request takes an access token or a session string,\
        \ but not both.</p> <note> <p>Amazon Cognito doesn't evaluate Identity and\
        \ Access Management (IAM) policies in requests for this API operation. For\
        \ this operation, you can't use IAM credentials to authorize requests, and\
        \ you can't grant IAM permissions in policies. For more information about\
        \ authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: verify_software_token
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.VerifySoftwareToken
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifySoftwareTokenRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifySoftwareTokenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserPoolConfigurationException'
          description: InvalidUserPoolConfigurationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableSoftwareTokenMFAException'
          description: EnableSoftwareTokenMFAException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareTokenMFANotFoundException'
          description: SoftwareTokenMFANotFoundException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeMismatchException'
          description: CodeMismatchException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSCognitoIdentityProviderService.VerifyUserAttribute:
    post:
      description: "<p>Verifies the specified user attributes in the user pool.</p>\
        \ <p> If your user pool requires verification before Amazon Cognito updates\
        \ the attribute value, VerifyUserAttribute updates the affected attribute\
        \ to its pending value. For more information, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserAttributeUpdateSettingsType.html\"\
        > UserAttributeUpdateSettingsType</a>. </p> <note> <p>Amazon Cognito doesn't\
        \ evaluate Identity and Access Management (IAM) policies in requests for this\
        \ API operation. For this operation, you can't use IAM credentials to authorize\
        \ requests, and you can't grant IAM permissions in policies. For more information\
        \ about authorization models in Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\"\
        >Using the Amazon Cognito native and OIDC APIs</a>.</p> </note>"
      operationId: verify_user_attribute
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSCognitoIdentityProviderService.VerifyUserAttribute
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyUserAttributeRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserAttributeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeMismatchException'
          description: CodeMismatchException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredCodeException'
          description: ExpiredCodeException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequiredException'
          description: PasswordResetRequiredException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
          description: UserNotFoundException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotConfirmedException'
          description: UserNotConfirmedException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasExistsException'
          description: AliasExistsException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AddCustomAttributesResponse:
      description: Represents the response from the server for the request to add
        custom attributes.
      properties: {}
      type: object
    AddCustomAttributesRequest:
      description: Represents the request to add custom attributes.
      example:
        UserPoolId: ""
        CustomAttributes: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to add
              custom attributes.
          title: UserPoolId
        CustomAttributes:
          allOf:
          - $ref: '#/components/schemas/CustomAttributesListType'
          - description: "An array of custom attributes, such as Mutable and Name."
          title: CustomAttributes
      required:
      - CustomAttributes
      - UserPoolId
      title: AddCustomAttributesRequest
      type: object
    ResourceNotFoundException: {}
    InvalidParameterException: {}
    TooManyRequestsException: {}
    NotAuthorizedException: {}
    UserImportInProgressException: {}
    InternalErrorException: {}
    AdminAddUserToGroupRequest:
      example:
        GroupName: ""
        UserPoolId: ""
        Username: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The username for the user.
          title: Username
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupNameType'
          - description: The group name.
          title: GroupName
      required:
      - GroupName
      - UserPoolId
      - Username
      title: AdminAddUserToGroupRequest
      type: object
    UserNotFoundException: {}
    AdminConfirmSignUpResponse:
      description: Represents the response from the server for the request to confirm
        registration.
      properties: {}
      type: object
    AdminConfirmSignUpRequest:
      description: Confirm a user's registration as a user pool administrator.
      example:
        UserPoolId: ""
        Username: ""
        ClientMetadata: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for which you want to confirm user registration.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name for which you want to confirm user registration.
          title: Username
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>If\
              \ your user pool configuration includes triggers, the AdminConfirmSignUp\
              \ API action invokes the Lambda function that is specified for the <i>post\
              \ confirmation</i> trigger. When Amazon Cognito invokes this function,\
              \ it passes a JSON payload, which the function receives as input. In\
              \ this payload, the <code>clientMetadata</code> attribute provides the\
              \ data that you assigned to the ClientMetadata parameter in your AdminConfirmSignUp\
              \ request. In your function code in Lambda, you can process the ClientMetadata\
              \ value to enhance your workflow for your specific needs.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - UserPoolId
      - Username
      title: AdminConfirmSignUpRequest
      type: object
    UnexpectedLambdaException: {}
    UserLambdaValidationException: {}
    TooManyFailedAttemptsException: {}
    InvalidLambdaResponseException: {}
    LimitExceededException: {}
    AdminCreateUserResponse:
      description: Represents the response from the server to the request to create
        the user.
      example:
        User:
          UserCreateDate: ""
          Username: ""
          Attributes: ""
          Enabled: ""
          UserLastModifiedDate: ""
          UserStatus: ""
          MFAOptions: ""
      properties:
        User:
          $ref: '#/components/schemas/AdminCreateUserResponse_User'
      title: AdminCreateUserResponse
      type: object
    AdminCreateUserRequest:
      description: Represents the request to create a user in the specified user pool.
      example:
        ValidationData: ""
        UserPoolId: ""
        Username: ""
        MessageAction: ""
        ClientMetadata: ""
        TemporaryPassword: ""
        DesiredDeliveryMediums: ""
        UserAttributes: ""
        ForceAliasCreation: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where the user will be
              created.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: "The username for the user. Must be unique within the user\
              \ pool. Must be a UTF-8 string between 1 and 128 characters. After the\
              \ user is created, the username can't be changed."
          title: Username
        UserAttributes:
          allOf:
          - $ref: '#/components/schemas/AttributeListType'
          - description: "<p>An array of name-value pairs that contain user attributes\
              \ and attribute values to be set for the user to be created. You can\
              \ create a user without specifying any attributes other than <code>Username</code>.\
              \ However, any attributes that you specify as required (when creating\
              \ a user pool or in the <b>Attributes</b> tab of the console) either\
              \ you should supply (in your call to <code>AdminCreateUser</code>) or\
              \ the user should supply (when they sign up in response to your welcome\
              \ message).</p> <p>For custom attributes, you must prepend the <code>custom:</code>\
              \ prefix to the attribute name.</p> <p>To send a message inviting the\
              \ user to sign up, you must specify the user's email address or phone\
              \ number. You can do this in your call to AdminCreateUser or in the\
              \ <b>Users</b> tab of the Amazon Cognito console for managing your user\
              \ pools.</p> <p>In your call to <code>AdminCreateUser</code>, you can\
              \ set the <code>email_verified</code> attribute to <code>True</code>,\
              \ and you can set the <code>phone_number_verified</code> attribute to\
              \ <code>True</code>. You can also do this by calling <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html\"\
              >AdminUpdateUserAttributes</a>.</p> <ul> <li> <p> <b>email</b>: The\
              \ email address of the user to whom the message that contains the code\
              \ and username will be sent. Required if the <code>email_verified</code>\
              \ attribute is set to <code>True</code>, or if <code>\"EMAIL\"</code>\
              \ is specified in the <code>DesiredDeliveryMediums</code> parameter.</p>\
              \ </li> <li> <p> <b>phone_number</b>: The phone number of the user to\
              \ whom the message that contains the code and username will be sent.\
              \ Required if the <code>phone_number_verified</code> attribute is set\
              \ to <code>True</code>, or if <code>\"SMS\"</code> is specified in the\
              \ <code>DesiredDeliveryMediums</code> parameter.</p> </li> </ul>"
          title: UserAttributes
        ValidationData:
          allOf:
          - $ref: '#/components/schemas/AttributeListType'
          - description: "<p>The user's validation data. This is an array of name-value\
              \ pairs that contain user attributes and attribute values that you can\
              \ use for custom validation, such as restricting the types of user accounts\
              \ that can be registered. For example, you might choose to allow or\
              \ disallow user sign-up based on the user's domain.</p> <p>To configure\
              \ custom validation, you must create a Pre Sign-up Lambda trigger for\
              \ the user pool as described in the Amazon Cognito Developer Guide.\
              \ The Lambda trigger receives the validation data and uses it in the\
              \ validation process.</p> <p>The user's validation data isn't persisted.</p>"
          title: ValidationData
        TemporaryPassword:
          allOf:
          - $ref: '#/components/schemas/PasswordType'
          - description: "<p>The user's temporary password. This password must conform\
              \ to the password policy that you specified when you created the user\
              \ pool.</p> <p>The temporary password is valid only once. To complete\
              \ the Admin Create User flow, the user must enter the temporary password\
              \ in the sign-in page, along with a new password to be used in all future\
              \ sign-ins.</p> <p>This parameter isn't required. If you don't specify\
              \ a value, Amazon Cognito generates one for you.</p> <p>The temporary\
              \ password can only be used until the user account expiration limit\
              \ that you set for your user pool. To reset the account after that time\
              \ limit, you must call <code>AdminCreateUser</code> again and specify\
              \ <code>RESEND</code> for the <code>MessageAction</code> parameter.</p>"
          title: TemporaryPassword
        ForceAliasCreation:
          allOf:
          - $ref: '#/components/schemas/ForceAliasCreation'
          - description: "<p>This parameter is used only if the <code>phone_number_verified</code>\
              \ or <code>email_verified</code> attribute is set to <code>True</code>.\
              \ Otherwise, it is ignored.</p> <p>If this parameter is set to <code>True</code>\
              \ and the phone number or email address specified in the UserAttributes\
              \ parameter already exists as an alias with a different user, the API\
              \ call will migrate the alias from the previous user to the newly created\
              \ user. The previous user will no longer be able to log in using that\
              \ alias.</p> <p>If this parameter is set to <code>False</code>, the\
              \ API throws an <code>AliasExistsException</code> error if the alias\
              \ already exists. The default value is <code>False</code>.</p>"
          title: ForceAliasCreation
        MessageAction:
          allOf:
          - $ref: '#/components/schemas/MessageActionType'
          - description: Set to <code>RESEND</code> to resend the invitation message
              to a user that already exists and reset the expiration limit on the
              user's account. Set to <code>SUPPRESS</code> to suppress sending the
              message. You can specify only one value.
          title: MessageAction
        DesiredDeliveryMediums:
          allOf:
          - $ref: '#/components/schemas/DeliveryMediumListType'
          - description: Specify <code>"EMAIL"</code> if email will be used to send
              the welcome message. Specify <code>"SMS"</code> if the phone number
              will be used. The default value is <code>"SMS"</code>. You can specify
              more than one value.
          title: DesiredDeliveryMediums
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>You\
              \ create custom workflows by assigning Lambda functions to user pool\
              \ triggers. When you use the AdminCreateUser API action, Amazon Cognito\
              \ invokes the function that is assigned to the <i>pre sign-up</i> trigger.\
              \ When Amazon Cognito invokes this function, it passes a JSON payload,\
              \ which the function receives as input. This payload contains a <code>clientMetadata</code>\
              \ attribute, which provides the data that you assigned to the ClientMetadata\
              \ parameter in your AdminCreateUser request. In your function code in\
              \ Lambda, you can process the <code>clientMetadata</code> value to enhance\
              \ your workflow for your specific needs.</p> <p>For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - UserPoolId
      - Username
      title: AdminCreateUserRequest
      type: object
    UsernameExistsException: {}
    InvalidPasswordException: {}
    CodeDeliveryFailureException: {}
    PreconditionNotMetException: {}
    InvalidSmsRoleAccessPolicyException: {}
    InvalidSmsRoleTrustRelationshipException: {}
    UnsupportedUserStateException: {}
    AdminDeleteUserRequest:
      description: Represents the request to delete a user as an administrator.
      example:
        UserPoolId: ""
        Username: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to delete
              the user.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user you want to delete.
          title: Username
      required:
      - UserPoolId
      - Username
      title: AdminDeleteUserRequest
      type: object
    AdminDeleteUserAttributesResponse:
      description: Represents the response received from the server for a request
        to delete user attributes.
      properties: {}
      type: object
    AdminDeleteUserAttributesRequest:
      description: Represents the request to delete user attributes as an administrator.
      example:
        UserAttributeNames: ""
        UserPoolId: ""
        Username: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to delete
              user attributes.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user from which you would like to delete
              attributes.
          title: Username
        UserAttributeNames:
          allOf:
          - $ref: '#/components/schemas/AttributeNameListType'
          - description: "<p>An array of strings representing the user attribute names\
              \ you want to delete.</p> <p>For custom attributes, you must prepend\
              \ the <code>custom:</code> prefix to the attribute name.</p>"
          title: UserAttributeNames
      required:
      - UserAttributeNames
      - UserPoolId
      - Username
      title: AdminDeleteUserAttributesRequest
      type: object
    AdminDisableProviderForUserResponse:
      properties: {}
      type: object
    AdminDisableProviderForUserRequest:
      example:
        UserPoolId: ""
        User:
          ProviderName: ""
          ProviderAttributeName: ""
          ProviderAttributeValue: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        User:
          $ref: '#/components/schemas/AdminDisableProviderForUserRequest_User'
      required:
      - User
      - UserPoolId
      title: AdminDisableProviderForUserRequest
      type: object
    AliasExistsException: {}
    AdminDisableUserResponse:
      description: Represents the response received from the server to disable the
        user as an administrator.
      properties: {}
      type: object
    AdminDisableUserRequest:
      description: Represents the request to disable the user as an administrator.
      example:
        UserPoolId: ""
        Username: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to disable
              the user.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user you want to disable.
          title: Username
      required:
      - UserPoolId
      - Username
      title: AdminDisableUserRequest
      type: object
    AdminEnableUserResponse:
      description: Represents the response from the server for the request to enable
        a user as an administrator.
      properties: {}
      type: object
    AdminEnableUserRequest:
      description: Represents the request that enables the user as an administrator.
      example:
        UserPoolId: ""
        Username: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to enable
              the user.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user you want to enable.
          title: Username
      required:
      - UserPoolId
      - Username
      title: AdminEnableUserRequest
      type: object
    AdminForgetDeviceRequest:
      description: "Sends the forgot device request, as an administrator."
      example:
        UserPoolId: ""
        Username: ""
        DeviceKey: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name.
          title: Username
        DeviceKey:
          allOf:
          - $ref: '#/components/schemas/DeviceKeyType'
          - description: The device key.
          title: DeviceKey
      required:
      - DeviceKey
      - UserPoolId
      - Username
      title: AdminForgetDeviceRequest
      type: object
    InvalidUserPoolConfigurationException: {}
    AdminGetDeviceResponse:
      description: "Gets the device response, as an administrator."
      example:
        Device:
          DeviceLastModifiedDate: ""
          DeviceAttributes: ""
          DeviceKey: ""
          DeviceCreateDate: ""
          DeviceLastAuthenticatedDate: ""
      properties:
        Device:
          $ref: '#/components/schemas/AdminGetDeviceResponse_Device'
      required:
      - Device
      title: AdminGetDeviceResponse
      type: object
    AdminGetDeviceRequest:
      description: "Represents the request to get the device, as an administrator."
      example:
        UserPoolId: ""
        Username: ""
        DeviceKey: ""
      properties:
        DeviceKey:
          allOf:
          - $ref: '#/components/schemas/DeviceKeyType'
          - description: The device key.
          title: DeviceKey
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name.
          title: Username
      required:
      - DeviceKey
      - UserPoolId
      - Username
      title: AdminGetDeviceRequest
      type: object
    AdminGetUserResponse:
      description: Represents the response from the server from the request to get
        the specified user as an administrator.
      example:
        UserCreateDate: ""
        UserMFASettingList: ""
        Username: ""
        Enabled: ""
        UserLastModifiedDate: ""
        UserStatus: ""
        MFAOptions: ""
        UserAttributes: ""
        PreferredMfaSetting: ""
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The username of the user that you requested.
          title: Username
        UserAttributes:
          allOf:
          - $ref: '#/components/schemas/AttributeListType'
          - description: An array of name-value pairs representing user attributes.
          title: UserAttributes
        UserCreateDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: The date the user was created.
          title: UserCreateDate
        UserLastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was modified."
          title: UserLastModifiedDate
        Enabled:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: Indicates that the status is <code>enabled</code>.
          title: Enabled
        UserStatus:
          allOf:
          - $ref: '#/components/schemas/UserStatusType'
          - description: "<p>The user status. Can be one of the following:</p> <ul>\
              \ <li> <p>UNCONFIRMED - User has been created but not confirmed.</p>\
              \ </li> <li> <p>CONFIRMED - User has been confirmed.</p> </li> <li>\
              \ <p>UNKNOWN - User status isn't known.</p> </li> <li> <p>RESET_REQUIRED\
              \ - User is confirmed, but the user must request a code and reset their\
              \ password before they can sign in.</p> </li> <li> <p>FORCE_CHANGE_PASSWORD\
              \ - The user is confirmed and the user can sign in using a temporary\
              \ password, but on first sign-in, the user must change their password\
              \ to a new value before doing anything else. </p> </li> </ul>"
          title: UserStatus
        MFAOptions:
          allOf:
          - $ref: '#/components/schemas/MFAOptionListType'
          - description: " <i>This response parameter is no longer supported.</i>\
              \ It provides information only about SMS MFA configurations. It doesn't\
              \ provide information about time-based one-time password (TOTP) software\
              \ token MFA configurations. To look up information about either type\
              \ of MFA configuration, use UserMFASettingList instead."
          title: MFAOptions
        PreferredMfaSetting:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The user's preferred MFA setting.
          title: PreferredMfaSetting
        UserMFASettingList:
          allOf:
          - $ref: '#/components/schemas/UserMFASettingListType'
          - description: The MFA options that are activated for the user. The possible
              values in this list are <code>SMS_MFA</code> and <code>SOFTWARE_TOKEN_MFA</code>.
          title: UserMFASettingList
      required:
      - Username
      title: AdminGetUserResponse
      type: object
    AdminGetUserRequest:
      description: Represents the request to get the specified user as an administrator.
      example:
        UserPoolId: ""
        Username: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to get
              information about the user.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user you want to retrieve.
          title: Username
      required:
      - UserPoolId
      - Username
      title: AdminGetUserRequest
      type: object
    AdminInitiateAuthResponse:
      description: "Initiates the authentication response, as an administrator."
      example:
        ChallengeParameters: ""
        ChallengeName: ""
        Session: ""
        AuthenticationResult:
          NewDeviceMetadata:
            DeviceKey: ""
            DeviceGroupKey: ""
          IdToken: ""
          ExpiresIn: ""
          TokenType: ""
          RefreshToken: ""
          AccessToken: ""
      properties:
        ChallengeName:
          allOf:
          - $ref: '#/components/schemas/ChallengeNameType'
          - description: "<p>The name of the challenge that you're responding to with\
              \ this call. This is returned in the <code>AdminInitiateAuth</code>\
              \ response if you must pass another challenge.</p> <ul> <li> <p> <code>MFA_SETUP</code>:\
              \ If MFA is required, users who don't have at least one of the MFA methods\
              \ set up are presented with an <code>MFA_SETUP</code> challenge. The\
              \ user must set up at least one MFA type to continue to authenticate.</p>\
              \ </li> <li> <p> <code>SELECT_MFA_TYPE</code>: Selects the MFA type.\
              \ Valid MFA options are <code>SMS_MFA</code> for text SMS MFA, and <code>SOFTWARE_TOKEN_MFA</code>\
              \ for time-based one-time password (TOTP) software token MFA.</p> </li>\
              \ <li> <p> <code>SMS_MFA</code>: Next challenge is to supply an <code>SMS_MFA_CODE</code>,\
              \ delivered via SMS.</p> </li> <li> <p> <code>PASSWORD_VERIFIER</code>:\
              \ Next challenge is to supply <code>PASSWORD_CLAIM_SIGNATURE</code>,\
              \ <code>PASSWORD_CLAIM_SECRET_BLOCK</code>, and <code>TIMESTAMP</code>\
              \ after the client-side SRP calculations.</p> </li> <li> <p> <code>CUSTOM_CHALLENGE</code>:\
              \ This is returned if your custom authentication flow determines that\
              \ the user should pass another challenge before tokens are issued.</p>\
              \ </li> <li> <p> <code>DEVICE_SRP_AUTH</code>: If device tracking was\
              \ activated in your user pool and the previous challenges were passed,\
              \ this challenge is returned so that Amazon Cognito can start tracking\
              \ this device.</p> </li> <li> <p> <code>DEVICE_PASSWORD_VERIFIER</code>:\
              \ Similar to <code>PASSWORD_VERIFIER</code>, but for devices only.</p>\
              \ </li> <li> <p> <code>ADMIN_NO_SRP_AUTH</code>: This is returned if\
              \ you must authenticate with <code>USERNAME</code> and <code>PASSWORD</code>\
              \ directly. An app client must be enabled to use this flow.</p> </li>\
              \ <li> <p> <code>NEW_PASSWORD_REQUIRED</code>: For users who are required\
              \ to change their passwords after successful first login. Respond to\
              \ this challenge with <code>NEW_PASSWORD</code> and any required attributes\
              \ that Amazon Cognito returned in the <code>requiredAttributes</code>\
              \ parameter. You can also set values for attributes that aren't required\
              \ by your user pool and that your app client can write. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminRespondToAuthChallenge.html\"\
              >AdminRespondToAuthChallenge</a>.</p> <note> <p>In a <code>NEW_PASSWORD_REQUIRED</code>\
              \ challenge response, you can't modify a required attribute that already\
              \ has a value. In <code>AdminRespondToAuthChallenge</code>, set a value\
              \ for any keys that Amazon Cognito returned in the <code>requiredAttributes</code>\
              \ parameter, then use the <code>AdminUpdateUserAttributes</code> API\
              \ operation to modify the value of any additional attributes.</p> </note>\
              \ </li> <li> <p> <code>MFA_SETUP</code>: For users who are required\
              \ to set up an MFA factor before they can sign in. The MFA types activated\
              \ for the user pool will be listed in the challenge parameters <code>MFA_CAN_SETUP</code>\
              \ value. </p> <p> To set up software token MFA, use the session returned\
              \ here from <code>InitiateAuth</code> as an input to <code>AssociateSoftwareToken</code>,\
              \ and use the session returned by <code>VerifySoftwareToken</code> as\
              \ an input to <code>RespondToAuthChallenge</code> with challenge name\
              \ <code>MFA_SETUP</code> to complete sign-in. To set up SMS MFA, users\
              \ will need help from an administrator to add a phone number to their\
              \ account and then call <code>InitiateAuth</code> again to restart sign-in.</p>\
              \ </li> </ul>"
          title: ChallengeName
        Session:
          allOf:
          - $ref: '#/components/schemas/SessionType'
          - description: "The session that should be passed both ways in challenge-response\
              \ calls to the service. If <code>AdminInitiateAuth</code> or <code>AdminRespondToAuthChallenge</code>\
              \ API call determines that the caller must pass another challenge, they\
              \ return a session with other challenge parameters. This session should\
              \ be passed as it is to the next <code>AdminRespondToAuthChallenge</code>\
              \ API call."
          title: Session
        ChallengeParameters:
          allOf:
          - $ref: '#/components/schemas/ChallengeParametersType'
          - description: "<p>The challenge parameters. These are returned to you in\
              \ the <code>AdminInitiateAuth</code> response if you must pass another\
              \ challenge. The responses in this parameter should be used to compute\
              \ inputs to the next call (<code>AdminRespondToAuthChallenge</code>).</p>\
              \ <p>All challenges require <code>USERNAME</code> and <code>SECRET_HASH</code>\
              \ (if applicable).</p> <p>The value of the <code>USER_ID_FOR_SRP</code>\
              \ attribute is the user's actual username, not an alias (such as email\
              \ address or phone number), even if you specified an alias in your call\
              \ to <code>AdminInitiateAuth</code>. This happens because, in the <code>AdminRespondToAuthChallenge</code>\
              \ API <code>ChallengeResponses</code>, the <code>USERNAME</code> attribute\
              \ can't be an alias.</p>"
          title: ChallengeParameters
        AuthenticationResult:
          $ref: '#/components/schemas/AdminInitiateAuthResponse_AuthenticationResult'
      title: AdminInitiateAuthResponse
      type: object
    AdminInitiateAuthRequest:
      description: "Initiates the authorization request, as an administrator."
      example:
        AuthParameters: ""
        UserPoolId: ""
        AuthFlow: ""
        ClientMetadata: ""
        ClientId: ""
        ContextData:
          HttpHeaders: ""
          ServerPath: ""
          ServerName: ""
          IpAddress: ""
          EncodedData: ""
        AnalyticsMetadata:
          AnalyticsEndpointId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The ID of the Amazon Cognito user pool.
          title: UserPoolId
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The app client ID.
          title: ClientId
        AuthFlow:
          allOf:
          - $ref: '#/components/schemas/AuthFlowType'
          - description: "<p>The authentication flow for this call to run. The API\
              \ action will depend on this value. For example:</p> <ul> <li> <p> <code>REFRESH_TOKEN_AUTH</code>\
              \ will take in a valid refresh token and return new tokens.</p> </li>\
              \ <li> <p> <code>USER_SRP_AUTH</code> will take in <code>USERNAME</code>\
              \ and <code>SRP_A</code> and return the Secure Remote Password (SRP)\
              \ protocol variables to be used for next challenge execution.</p> </li>\
              \ <li> <p> <code>ADMIN_USER_PASSWORD_AUTH</code> will take in <code>USERNAME</code>\
              \ and <code>PASSWORD</code> and return the next challenge or tokens.</p>\
              \ </li> </ul> <p>Valid values include:</p> <ul> <li> <p> <code>USER_SRP_AUTH</code>:\
              \ Authentication flow for the Secure Remote Password (SRP) protocol.</p>\
              \ </li> <li> <p> <code>REFRESH_TOKEN_AUTH</code>/<code>REFRESH_TOKEN</code>:\
              \ Authentication flow for refreshing the access token and ID token by\
              \ supplying a valid refresh token.</p> </li> <li> <p> <code>CUSTOM_AUTH</code>:\
              \ Custom authentication flow.</p> </li> <li> <p> <code>ADMIN_NO_SRP_AUTH</code>:\
              \ Non-SRP authentication flow; you can pass in the USERNAME and PASSWORD\
              \ directly if the flow is enabled for calling the app client.</p> </li>\
              \ <li> <p> <code>ADMIN_USER_PASSWORD_AUTH</code>: Admin-based user password\
              \ authentication. This replaces the <code>ADMIN_NO_SRP_AUTH</code> authentication\
              \ flow. In this flow, Amazon Cognito receives the password in the request\
              \ instead of using the SRP process to verify passwords.</p> </li> </ul>"
          title: AuthFlow
        AuthParameters:
          allOf:
          - $ref: '#/components/schemas/AuthParametersType'
          - description: "<p>The authentication parameters. These are inputs corresponding\
              \ to the <code>AuthFlow</code> that you're invoking. The required values\
              \ depend on the value of <code>AuthFlow</code>:</p> <ul> <li> <p>For\
              \ <code>USER_SRP_AUTH</code>: <code>USERNAME</code> (required), <code>SRP_A</code>\
              \ (required), <code>SECRET_HASH</code> (required if the app client is\
              \ configured with a client secret), <code>DEVICE_KEY</code>.</p> </li>\
              \ <li> <p>For <code>ADMIN_USER_PASSWORD_AUTH</code>: <code>USERNAME</code>\
              \ (required), <code>PASSWORD</code> (required), <code>SECRET_HASH</code>\
              \ (required if the app client is configured with a client secret), <code>DEVICE_KEY</code>.</p>\
              \ </li> <li> <p>For <code>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</code>: <code>REFRESH_TOKEN</code>\
              \ (required), <code>SECRET_HASH</code> (required if the app client is\
              \ configured with a client secret), <code>DEVICE_KEY</code>.</p> </li>\
              \ <li> <p>For <code>CUSTOM_AUTH</code>: <code>USERNAME</code> (required),\
              \ <code>SECRET_HASH</code> (if app client is configured with client\
              \ secret), <code>DEVICE_KEY</code>. To start the authentication flow\
              \ with password verification, include <code>ChallengeName: SRP_A</code>\
              \ and <code>SRP_A: (The SRP_A Value)</code>.</p> </li> </ul> <p>For\
              \ more information about <code>SECRET_HASH</code>, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/signing-up-users-in-your-app.html#cognito-user-pools-computing-secret-hash\"\
              >Computing secret hash values</a>. For information about <code>DEVICE_KEY</code>,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-device-tracking.html\"\
              >Working with user devices in your user pool</a>.</p>"
          title: AuthParameters
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for certain custom workflows that this action triggers.</p>\
              \ <p>You create custom workflows by assigning Lambda functions to user\
              \ pool triggers. When you use the AdminInitiateAuth API action, Amazon\
              \ Cognito invokes the Lambda functions that are specified for various\
              \ triggers. The ClientMetadata value is passed as input to the functions\
              \ for only the following triggers:</p> <ul> <li> <p>Pre signup</p> </li>\
              \ <li> <p>Pre authentication</p> </li> <li> <p>User migration</p> </li>\
              \ </ul> <p>When Amazon Cognito invokes the functions for these triggers,\
              \ it passes a JSON payload, which the function receives as input. This\
              \ payload contains a <code>validationData</code> attribute, which provides\
              \ the data that you assigned to the ClientMetadata parameter in your\
              \ AdminInitiateAuth request. In your function code in Lambda, you can\
              \ process the <code>validationData</code> value to enhance your workflow\
              \ for your specific needs.</p> <p>When you use the AdminInitiateAuth\
              \ API action, Amazon Cognito also invokes the functions for the following\
              \ triggers, but it doesn't provide the ClientMetadata value as input:</p>\
              \ <ul> <li> <p>Post authentication</p> </li> <li> <p>Custom message</p>\
              \ </li> <li> <p>Pre token generation</p> </li> <li> <p>Create auth challenge</p>\
              \ </li> <li> <p>Define auth challenge</p> </li> <li> <p>Verify auth\
              \ challenge</p> </li> </ul> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
        AnalyticsMetadata:
          $ref: '#/components/schemas/AdminInitiateAuthRequest_AnalyticsMetadata'
        ContextData:
          $ref: '#/components/schemas/AdminInitiateAuthRequest_ContextData'
      required:
      - AuthFlow
      - ClientId
      - UserPoolId
      title: AdminInitiateAuthRequest
      type: object
    MFAMethodNotFoundException: {}
    PasswordResetRequiredException: {}
    UserNotConfirmedException: {}
    AdminLinkProviderForUserResponse:
      properties: {}
      type: object
    AdminLinkProviderForUserRequest:
      example:
        UserPoolId: ""
        SourceUser:
          ProviderName: ""
          ProviderAttributeName: ""
          ProviderAttributeValue: ""
        DestinationUser:
          ProviderName: ""
          ProviderAttributeName: ""
          ProviderAttributeValue: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        DestinationUser:
          $ref: '#/components/schemas/AdminLinkProviderForUserRequest_DestinationUser'
        SourceUser:
          $ref: '#/components/schemas/AdminLinkProviderForUserRequest_SourceUser'
      required:
      - DestinationUser
      - SourceUser
      - UserPoolId
      title: AdminLinkProviderForUserRequest
      type: object
    AdminListDevicesResponse:
      description: "Lists the device's response, as an administrator."
      example:
        Devices: ""
        PaginationToken: ""
      properties:
        Devices:
          allOf:
          - $ref: '#/components/schemas/DeviceListType'
          - description: The devices in the list of devices response.
          title: Devices
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/SearchPaginationTokenType'
          - description: The pagination token.
          title: PaginationToken
      title: AdminListDevicesResponse
      type: object
    AdminListDevicesRequest:
      description: "Represents the request to list devices, as an administrator."
      example:
        UserPoolId: ""
        Username: ""
        Limit: ""
        PaginationToken: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name.
          title: Username
        Limit:
          allOf:
          - $ref: '#/components/schemas/QueryLimitType'
          - description: The limit of the devices request.
          title: Limit
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/SearchPaginationTokenType'
          - description: The pagination token.
          title: PaginationToken
      required:
      - UserPoolId
      - Username
      title: AdminListDevicesRequest
      type: object
    AdminListGroupsForUserResponse:
      example:
        NextToken: ""
        Groups: ""
      properties:
        Groups:
          allOf:
          - $ref: '#/components/schemas/GroupListType'
          - description: The groups that the user belongs to.
          title: Groups
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKey'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
          title: NextToken
      title: AdminListGroupsForUserResponse
      type: object
    AdminListGroupsForUserRequest:
      example:
        UserPoolId: ""
        NextToken: ""
        Username: ""
        Limit: ""
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The username for the user.
          title: Username
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        Limit:
          allOf:
          - $ref: '#/components/schemas/QueryLimitType'
          - description: The limit of the request to list groups.
          title: Limit
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKey'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
          title: NextToken
      required:
      - UserPoolId
      - Username
      title: AdminListGroupsForUserRequest
      type: object
    AdminListUserAuthEventsResponse:
      example:
        NextToken: ""
        AuthEvents: ""
      properties:
        AuthEvents:
          allOf:
          - $ref: '#/components/schemas/AuthEventsType'
          - description: "The response object. It includes the <code>EventID</code>,\
              \ <code>EventType</code>, <code>CreationDate</code>, <code>EventRisk</code>,\
              \ and <code>EventResponse</code>."
          title: AuthEvents
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKey'
          - description: A pagination token.
          title: NextToken
      title: AdminListUserAuthEventsResponse
      type: object
    AdminListUserAuthEventsRequest:
      example:
        UserPoolId: ""
        NextToken: ""
        Username: ""
        MaxResults: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user pool username or an alias.
          title: Username
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/QueryLimitType'
          - description: "The maximum number of authentication events to return. Returns\
              \ 60 events if you set <code>MaxResults</code> to 0, or if you don't\
              \ include a <code>MaxResults</code> parameter."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKey'
          - description: A pagination token.
          title: NextToken
      required:
      - UserPoolId
      - Username
      title: AdminListUserAuthEventsRequest
      type: object
    UserPoolAddOnNotEnabledException: {}
    AdminRemoveUserFromGroupRequest:
      example:
        GroupName: ""
        UserPoolId: ""
        Username: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The username for the user.
          title: Username
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupNameType'
          - description: The group name.
          title: GroupName
      required:
      - GroupName
      - UserPoolId
      - Username
      title: AdminRemoveUserFromGroupRequest
      type: object
    AdminResetUserPasswordResponse:
      description: Represents the response from the server to reset a user password
        as an administrator.
      properties: {}
      type: object
    AdminResetUserPasswordRequest:
      description: Represents the request to reset a user's password as an administrator.
      example:
        UserPoolId: ""
        Username: ""
        ClientMetadata: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to reset
              the user's password.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user whose password you want to reset.
          title: Username
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>You\
              \ create custom workflows by assigning Lambda functions to user pool\
              \ triggers. When you use the AdminResetUserPassword API action, Amazon\
              \ Cognito invokes the function that is assigned to the <i>custom message</i>\
              \ trigger. When Amazon Cognito invokes this function, it passes a JSON\
              \ payload, which the function receives as input. This payload contains\
              \ a <code>clientMetadata</code> attribute, which provides the data that\
              \ you assigned to the ClientMetadata parameter in your AdminResetUserPassword\
              \ request. In your function code in Lambda, you can process the <code>clientMetadata</code>\
              \ value to enhance your workflow for your specific needs. </p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - UserPoolId
      - Username
      title: AdminResetUserPasswordRequest
      type: object
    InvalidEmailRoleAccessPolicyException: {}
    AdminRespondToAuthChallengeResponse:
      description: "Responds to the authentication challenge, as an administrator."
      example:
        ChallengeParameters: ""
        ChallengeName: ""
        Session: ""
        AuthenticationResult:
          NewDeviceMetadata:
            DeviceKey: ""
            DeviceGroupKey: ""
          IdToken: ""
          ExpiresIn: ""
          TokenType: ""
          RefreshToken: ""
          AccessToken: ""
      properties:
        ChallengeName:
          allOf:
          - $ref: '#/components/schemas/ChallengeNameType'
          - description: "The name of the challenge. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminInitiateAuth.html\"\
              >AdminInitiateAuth</a>."
          title: ChallengeName
        Session:
          allOf:
          - $ref: '#/components/schemas/SessionType'
          - description: "The session that should be passed both ways in challenge-response\
              \ calls to the service. If the caller must pass another challenge, they\
              \ return a session with other challenge parameters. This session should\
              \ be passed as it is to the next <code>RespondToAuthChallenge</code>\
              \ API call."
          title: Session
        ChallengeParameters:
          allOf:
          - $ref: '#/components/schemas/ChallengeParametersType'
          - description: "The challenge parameters. For more information, see <a href=\"\
              https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminInitiateAuth.html\"\
              >AdminInitiateAuth</a>."
          title: ChallengeParameters
        AuthenticationResult:
          $ref: '#/components/schemas/AdminRespondToAuthChallengeResponse_AuthenticationResult'
      title: AdminRespondToAuthChallengeResponse
      type: object
    AdminRespondToAuthChallengeRequest:
      description: "The request to respond to the authentication challenge, as an\
        \ administrator."
      example:
        UserPoolId: ""
        ChallengeResponses: ""
        ClientMetadata: ""
        ClientId: ""
        ContextData:
          HttpHeaders: ""
          ServerPath: ""
          ServerName: ""
          IpAddress: ""
          EncodedData: ""
        AnalyticsMetadata:
          AnalyticsEndpointId: ""
        ChallengeName: ""
        Session: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The ID of the Amazon Cognito user pool.
          title: UserPoolId
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The app client ID.
          title: ClientId
        ChallengeName:
          allOf:
          - $ref: '#/components/schemas/ChallengeNameType'
          - description: "The challenge name. For more information, see <a href=\"\
              https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminInitiateAuth.html\"\
              >AdminInitiateAuth</a>."
          title: ChallengeName
        ChallengeResponses:
          allOf:
          - $ref: '#/components/schemas/ChallengeResponsesType'
          - description: "<p>The challenge responses. These are inputs corresponding\
              \ to the value of <code>ChallengeName</code>, for example:</p> <ul>\
              \ <li> <p> <code>SMS_MFA</code>: <code>SMS_MFA_CODE</code>, <code>USERNAME</code>,\
              \ <code>SECRET_HASH</code> (if app client is configured with client\
              \ secret).</p> </li> <li> <p> <code>PASSWORD_VERIFIER</code>: <code>PASSWORD_CLAIM_SIGNATURE</code>,\
              \ <code>PASSWORD_CLAIM_SECRET_BLOCK</code>, <code>TIMESTAMP</code>,\
              \ <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client is\
              \ configured with client secret).</p> <note> <p> <code>PASSWORD_VERIFIER</code>\
              \ requires <code>DEVICE_KEY</code> when signing in with a remembered\
              \ device.</p> </note> </li> <li> <p> <code>ADMIN_NO_SRP_AUTH</code>:\
              \ <code>PASSWORD</code>, <code>USERNAME</code>, <code>SECRET_HASH</code>\
              \ (if app client is configured with client secret). </p> </li> <li>\
              \ <p> <code>NEW_PASSWORD_REQUIRED</code>: <code>NEW_PASSWORD</code>,\
              \ <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client is\
              \ configured with client secret). To set any required attributes that\
              \ Amazon Cognito returned as <code>requiredAttributes</code> in the\
              \ <code>AdminInitiateAuth</code> response, add a <code>userAttributes.<i>attributename</i>\
              \ </code> parameter. This parameter can also set values for writable\
              \ attributes that aren't required by your user pool.</p> <note> <p>In\
              \ a <code>NEW_PASSWORD_REQUIRED</code> challenge response, you can't\
              \ modify a required attribute that already has a value. In <code>AdminRespondToAuthChallenge</code>,\
              \ set a value for any keys that Amazon Cognito returned in the <code>requiredAttributes</code>\
              \ parameter, then use the <code>AdminUpdateUserAttributes</code> API\
              \ operation to modify the value of any additional attributes.</p> </note>\
              \ </li> <li> <p> <code>MFA_SETUP</code> requires <code>USERNAME</code>,\
              \ plus you must use the session value returned by <code>VerifySoftwareToken</code>\
              \ in the <code>Session</code> parameter.</p> </li> </ul> <p>The value\
              \ of the <code>USERNAME</code> attribute must be the user's actual username,\
              \ not an alias (such as an email address or phone number). To make this\
              \ simpler, the <code>AdminInitiateAuth</code> response includes the\
              \ actual username value in the <code>USERNAMEUSER_ID_FOR_SRP</code>\
              \ attribute. This happens even if you specified an alias in your call\
              \ to <code>AdminInitiateAuth</code>.</p> <p>For more information about\
              \ <code>SECRET_HASH</code>, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/signing-up-users-in-your-app.html#cognito-user-pools-computing-secret-hash\"\
              >Computing secret hash values</a>. For information about <code>DEVICE_KEY</code>,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-device-tracking.html\"\
              >Working with user devices in your user pool</a>.</p>"
          title: ChallengeResponses
        Session:
          allOf:
          - $ref: '#/components/schemas/SessionType'
          - description: "The session that should be passed both ways in challenge-response\
              \ calls to the service. If an <code>InitiateAuth</code> or <code>RespondToAuthChallenge</code>\
              \ API call determines that the caller must pass another challenge, it\
              \ returns a session with other challenge parameters. This session should\
              \ be passed as it is to the next <code>RespondToAuthChallenge</code>\
              \ API call."
          title: Session
        AnalyticsMetadata:
          $ref: '#/components/schemas/AdminRespondToAuthChallengeRequest_AnalyticsMetadata'
        ContextData:
          $ref: '#/components/schemas/AdminInitiateAuthRequest_ContextData'
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>You\
              \ create custom workflows by assigning Lambda functions to user pool\
              \ triggers. When you use the AdminRespondToAuthChallenge API action,\
              \ Amazon Cognito invokes any functions that you have assigned to the\
              \ following triggers: </p> <ul> <li> <p>pre sign-up</p> </li> <li> <p>custom\
              \ message</p> </li> <li> <p>post authentication</p> </li> <li> <p>user\
              \ migration</p> </li> <li> <p>pre token generation</p> </li> <li> <p>define\
              \ auth challenge</p> </li> <li> <p>create auth challenge</p> </li> <li>\
              \ <p>verify auth challenge response</p> </li> </ul> <p>When Amazon Cognito\
              \ invokes any of these functions, it passes a JSON payload, which the\
              \ function receives as input. This payload contains a <code>clientMetadata</code>\
              \ attribute that provides the data that you assigned to the ClientMetadata\
              \ parameter in your AdminRespondToAuthChallenge request. In your function\
              \ code in Lambda, you can process the <code>clientMetadata</code> value\
              \ to enhance your workflow for your specific needs.</p> <p>For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - ChallengeName
      - ClientId
      - UserPoolId
      title: AdminRespondToAuthChallengeRequest
      type: object
    CodeMismatchException: {}
    ExpiredCodeException: {}
    SoftwareTokenMFANotFoundException: {}
    AdminSetUserMFAPreferenceResponse:
      properties: {}
      type: object
    AdminSetUserMFAPreferenceRequest:
      example:
        SMSMfaSettings:
          Enabled: ""
          PreferredMfa: ""
        UserPoolId: ""
        Username: ""
        SoftwareTokenMfaSettings:
          Enabled: ""
          PreferredMfa: ""
      properties:
        SMSMfaSettings:
          $ref: '#/components/schemas/AdminSetUserMFAPreferenceRequest_SMSMfaSettings'
        SoftwareTokenMfaSettings:
          $ref: '#/components/schemas/AdminSetUserMFAPreferenceRequest_SoftwareTokenMfaSettings'
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user pool username or alias.
          title: Username
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
      required:
      - UserPoolId
      - Username
      title: AdminSetUserMFAPreferenceRequest
      type: object
    AdminSetUserPasswordResponse:
      properties: {}
      type: object
    AdminSetUserPasswordRequest:
      example:
        UserPoolId: ""
        Permanent: ""
        Username: ""
        Password: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to set
              the user's password.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user whose password you want to set.
          title: Username
        Password:
          allOf:
          - $ref: '#/components/schemas/PasswordType'
          - description: The password for the user.
          title: Password
        Permanent:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: " <code>True</code> if the password is permanent, <code>False</code>\
              \ if it is temporary."
          title: Permanent
      required:
      - Password
      - UserPoolId
      - Username
      title: AdminSetUserPasswordRequest
      type: object
    AdminSetUserSettingsResponse:
      description: Represents the response from the server to set user settings as
        an administrator.
      properties: {}
      type: object
    AdminSetUserSettingsRequest:
      description: You can use this parameter to set an MFA configuration that uses
        the SMS delivery medium.
      example:
        UserPoolId: ""
        Username: ""
        MFAOptions: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The ID of the user pool that contains the user whose options
              you're setting.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user whose options you're setting.
          title: Username
        MFAOptions:
          allOf:
          - $ref: '#/components/schemas/MFAOptionListType'
          - description: You can use this parameter only to set an SMS configuration
              that uses SMS for delivery.
          title: MFAOptions
      required:
      - MFAOptions
      - UserPoolId
      - Username
      title: AdminSetUserSettingsRequest
      type: object
    AdminUpdateAuthEventFeedbackResponse:
      properties: {}
      type: object
    AdminUpdateAuthEventFeedbackRequest:
      example:
        UserPoolId: ""
        Username: ""
        EventId: ""
        FeedbackValue: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user pool username.
          title: Username
        EventId:
          allOf:
          - $ref: '#/components/schemas/EventIdType'
          - description: The authentication event ID.
          title: EventId
        FeedbackValue:
          allOf:
          - $ref: '#/components/schemas/FeedbackValueType'
          - description: "The authentication event feedback value. When you provide\
              \ a <code>FeedbackValue</code> value of <code>valid</code>, you tell\
              \ Amazon Cognito that you trust a user session where Amazon Cognito\
              \ has evaluated some level of risk. When you provide a <code>FeedbackValue</code>\
              \ value of <code>invalid</code>, you tell Amazon Cognito that you don't\
              \ trust a user session, or you don't believe that Amazon Cognito evaluated\
              \ a high-enough risk level."
          title: FeedbackValue
      required:
      - EventId
      - FeedbackValue
      - UserPoolId
      - Username
      title: AdminUpdateAuthEventFeedbackRequest
      type: object
    AdminUpdateDeviceStatusResponse:
      description: "The status response to the request to update the device, as an\
        \ administrator."
      properties: {}
      type: object
    AdminUpdateDeviceStatusRequest:
      description: "The request to update the device status, as an administrator."
      example:
        UserPoolId: ""
        Username: ""
        DeviceRememberedStatus: ""
        DeviceKey: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name.
          title: Username
        DeviceKey:
          allOf:
          - $ref: '#/components/schemas/DeviceKeyType'
          - description: The device key.
          title: DeviceKey
        DeviceRememberedStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceRememberedStatusType'
          - description: The status indicating whether a device has been remembered
              or not.
          title: DeviceRememberedStatus
      required:
      - DeviceKey
      - UserPoolId
      - Username
      title: AdminUpdateDeviceStatusRequest
      type: object
    AdminUpdateUserAttributesResponse:
      description: Represents the response from the server for the request to update
        user attributes as an administrator.
      properties: {}
      type: object
    AdminUpdateUserAttributesRequest:
      description: Represents the request to update the user's attributes as an administrator.
      example:
        UserPoolId: ""
        Username: ""
        ClientMetadata: ""
        UserAttributes: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to update
              user attributes.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user for whom you want to update user
              attributes.
          title: Username
        UserAttributes:
          allOf:
          - $ref: '#/components/schemas/AttributeListType'
          - description: "<p>An array of name-value pairs representing user attributes.</p>\
              \ <p>For custom attributes, you must prepend the <code>custom:</code>\
              \ prefix to the attribute name.</p> <p>If your user pool requires verification\
              \ before Amazon Cognito updates an attribute value that you specify\
              \ in this request, Amazon Cognito doesn’t immediately update the value\
              \ of that attribute. After your user receives and responds to a verification\
              \ message to verify the new value, Amazon Cognito updates the attribute\
              \ value. Your user can sign in and receive messages with the original\
              \ attribute value until they verify the new value.</p> <p>To update\
              \ the value of an attribute that requires verification in the same API\
              \ request, include the <code>email_verified</code> or <code>phone_number_verified</code>\
              \ attribute, with a value of <code>true</code>. If you set the <code>email_verified</code>\
              \ or <code>phone_number_verified</code> value for an <code>email</code>\
              \ or <code>phone_number</code> attribute that requires verification\
              \ to <code>true</code>, Amazon Cognito doesn’t send a verification message\
              \ to your user.</p>"
          title: UserAttributes
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>You\
              \ create custom workflows by assigning Lambda functions to user pool\
              \ triggers. When you use the AdminUpdateUserAttributes API action, Amazon\
              \ Cognito invokes the function that is assigned to the <i>custom message</i>\
              \ trigger. When Amazon Cognito invokes this function, it passes a JSON\
              \ payload, which the function receives as input. This payload contains\
              \ a <code>clientMetadata</code> attribute, which provides the data that\
              \ you assigned to the ClientMetadata parameter in your AdminUpdateUserAttributes\
              \ request. In your function code in Lambda, you can process the <code>clientMetadata</code>\
              \ value to enhance your workflow for your specific needs.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - UserAttributes
      - UserPoolId
      - Username
      title: AdminUpdateUserAttributesRequest
      type: object
    AdminUserGlobalSignOutResponse:
      description: "The global sign-out response, as an administrator."
      properties: {}
      type: object
    AdminUserGlobalSignOutRequest:
      description: "The request to sign out of all devices, as an administrator."
      example:
        UserPoolId: ""
        Username: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name.
          title: Username
      required:
      - UserPoolId
      - Username
      title: AdminUserGlobalSignOutRequest
      type: object
    AssociateSoftwareTokenResponse:
      example:
        SecretCode: ""
        Session: ""
      properties:
        SecretCode:
          allOf:
          - $ref: '#/components/schemas/SecretCodeType'
          - description: A unique generated shared secret code that is used in the
              TOTP algorithm to generate a one-time code.
          title: SecretCode
        Session:
          allOf:
          - $ref: '#/components/schemas/SessionType'
          - description: The session that should be passed both ways in challenge-response
              calls to the service. This allows authentication of the user as part
              of the MFA setup process.
          title: Session
      title: AssociateSoftwareTokenResponse
      type: object
    AssociateSoftwareTokenRequest:
      example:
        AccessToken: ""
        Session: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose software token you want to generate.
          title: AccessToken
        Session:
          allOf:
          - $ref: '#/components/schemas/SessionType'
          - description: The session that should be passed both ways in challenge-response
              calls to the service. This allows authentication of the user as part
              of the MFA setup process.
          title: Session
      title: AssociateSoftwareTokenRequest
      type: object
    ConcurrentModificationException: {}
    ForbiddenException: {}
    ChangePasswordResponse:
      description: The response from the server to the change password request.
      properties: {}
      type: object
    ChangePasswordRequest:
      description: Represents the request to change a user password.
      example:
        ProposedPassword: ""
        AccessToken: ""
        PreviousPassword: ""
      properties:
        PreviousPassword:
          allOf:
          - $ref: '#/components/schemas/PasswordType'
          - description: The old password.
          title: PreviousPassword
        ProposedPassword:
          allOf:
          - $ref: '#/components/schemas/PasswordType'
          - description: The new password.
          title: ProposedPassword
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose password you want to change.
          title: AccessToken
      required:
      - AccessToken
      - PreviousPassword
      - ProposedPassword
      title: ChangePasswordRequest
      type: object
    ConfirmDeviceResponse:
      description: Confirms the device response.
      example:
        UserConfirmationNecessary: ""
      properties:
        UserConfirmationNecessary:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: Indicates whether the user confirmation must confirm the
              device response.
          title: UserConfirmationNecessary
      title: ConfirmDeviceResponse
      type: object
    ConfirmDeviceRequest:
      description: Confirms the device request.
      example:
        AccessToken: ""
        DeviceKey: ""
        DeviceSecretVerifierConfig:
          Salt: ""
          PasswordVerifier: ""
        DeviceName: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose device you want to confirm.
          title: AccessToken
        DeviceKey:
          allOf:
          - $ref: '#/components/schemas/DeviceKeyType'
          - description: The device key.
          title: DeviceKey
        DeviceSecretVerifierConfig:
          $ref: '#/components/schemas/ConfirmDeviceRequest_DeviceSecretVerifierConfig'
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceNameType'
          - description: The device name.
          title: DeviceName
      required:
      - AccessToken
      - DeviceKey
      title: ConfirmDeviceRequest
      type: object
    ConfirmForgotPasswordResponse:
      description: The response from the server that results from a user's request
        to retrieve a forgotten password.
      properties: {}
      type: object
    ConfirmForgotPasswordRequest:
      description: The request representing the confirmation for a password reset.
      example:
        Username: ""
        ConfirmationCode: ""
        SecretHash: ""
        UserContextData:
          IpAddress: ""
          EncodedData: ""
        ClientMetadata: ""
        ClientId: ""
        AnalyticsMetadata:
          AnalyticsEndpointId: ""
        Password: ""
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The app client ID of the app associated with the user pool.
          title: ClientId
        SecretHash:
          allOf:
          - $ref: '#/components/schemas/SecretHashType'
          - description: "A keyed-hash message authentication code (HMAC) calculated\
              \ using the secret key of a user pool client and username plus the client\
              \ ID in the message. For more information about <code>SecretHash</code>,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/signing-up-users-in-your-app.html#cognito-user-pools-computing-secret-hash\"\
              >Computing secret hash values</a>."
          title: SecretHash
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user for whom you want to enter a code
              to retrieve a forgotten password.
          title: Username
        ConfirmationCode:
          allOf:
          - $ref: '#/components/schemas/ConfirmationCodeType'
          - description: "The confirmation code from your user's request to reset\
              \ their password. For more information, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ForgotPassword.html\"\
              >ForgotPassword</a>."
          title: ConfirmationCode
        Password:
          allOf:
          - $ref: '#/components/schemas/PasswordType'
          - description: The new password that your user wants to set.
          title: Password
        AnalyticsMetadata:
          $ref: '#/components/schemas/ConfirmForgotPasswordRequest_AnalyticsMetadata'
        UserContextData:
          $ref: '#/components/schemas/ConfirmForgotPasswordRequest_UserContextData'
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>You\
              \ create custom workflows by assigning Lambda functions to user pool\
              \ triggers. When you use the ConfirmForgotPassword API action, Amazon\
              \ Cognito invokes the function that is assigned to the <i>post confirmation</i>\
              \ trigger. When Amazon Cognito invokes this function, it passes a JSON\
              \ payload, which the function receives as input. This payload contains\
              \ a <code>clientMetadata</code> attribute, which provides the data that\
              \ you assigned to the ClientMetadata parameter in your ConfirmForgotPassword\
              \ request. In your function code in Lambda, you can process the <code>clientMetadata</code>\
              \ value to enhance your workflow for your specific needs.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - ClientId
      - ConfirmationCode
      - Password
      - Username
      title: ConfirmForgotPasswordRequest
      type: object
    ConfirmSignUpResponse:
      description: Represents the response from the server for the registration confirmation.
      properties: {}
      type: object
    ConfirmSignUpRequest:
      description: Represents the request to confirm registration of a user.
      example:
        Username: ""
        ConfirmationCode: ""
        SecretHash: ""
        UserContextData:
          IpAddress: ""
          EncodedData: ""
        ClientMetadata: ""
        ClientId: ""
        AnalyticsMetadata:
          AnalyticsEndpointId: ""
        ForceAliasCreation: ""
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The ID of the app client associated with the user pool.
          title: ClientId
        SecretHash:
          allOf:
          - $ref: '#/components/schemas/SecretHashType'
          - description: A keyed-hash message authentication code (HMAC) calculated
              using the secret key of a user pool client and username plus the client
              ID in the message.
          title: SecretHash
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user whose registration you want to
              confirm.
          title: Username
        ConfirmationCode:
          allOf:
          - $ref: '#/components/schemas/ConfirmationCodeType'
          - description: The confirmation code sent by a user's request to confirm
              registration.
          title: ConfirmationCode
        ForceAliasCreation:
          allOf:
          - $ref: '#/components/schemas/ForceAliasCreation'
          - description: "Boolean to be specified to force user confirmation irrespective\
              \ of existing alias. By default set to <code>False</code>. If this parameter\
              \ is set to <code>True</code> and the phone number/email used for sign\
              \ up confirmation already exists as an alias with a different user,\
              \ the API call will migrate the alias from the previous user to the\
              \ newly created user being confirmed. If set to <code>False</code>,\
              \ the API will throw an <b>AliasExistsException</b> error."
          title: ForceAliasCreation
        AnalyticsMetadata:
          $ref: '#/components/schemas/ConfirmSignUpRequest_AnalyticsMetadata'
        UserContextData:
          $ref: '#/components/schemas/ConfirmForgotPasswordRequest_UserContextData'
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>You\
              \ create custom workflows by assigning Lambda functions to user pool\
              \ triggers. When you use the ConfirmSignUp API action, Amazon Cognito\
              \ invokes the function that is assigned to the <i>post confirmation</i>\
              \ trigger. When Amazon Cognito invokes this function, it passes a JSON\
              \ payload, which the function receives as input. This payload contains\
              \ a <code>clientMetadata</code> attribute, which provides the data that\
              \ you assigned to the ClientMetadata parameter in your ConfirmSignUp\
              \ request. In your function code in Lambda, you can process the <code>clientMetadata</code>\
              \ value to enhance your workflow for your specific needs.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - ClientId
      - ConfirmationCode
      - Username
      title: ConfirmSignUpRequest
      type: object
    CreateGroupResponse:
      example:
        Group:
          GroupName: ""
          LastModifiedDate: ""
          CreationDate: ""
          UserPoolId: ""
          Description: ""
          Precedence: ""
          RoleArn: ""
      properties:
        Group:
          $ref: '#/components/schemas/CreateGroupResponse_Group'
      title: CreateGroupResponse
      type: object
    CreateGroupRequest:
      example:
        GroupName: ""
        UserPoolId: ""
        Description: ""
        Precedence: ""
        RoleArn: ""
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupNameType'
          - description: The name of the group. Must be unique.
          title: GroupName
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionType'
          - description: A string containing the description of the group.
          title: Description
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The role Amazon Resource Name (ARN) for the group.
          title: RoleArn
        Precedence:
          allOf:
          - $ref: '#/components/schemas/PrecedenceType'
          - description: "<p>A non-negative integer value that specifies the precedence\
              \ of this group relative to the other groups that a user can belong\
              \ to in the user pool. Zero is the highest precedence value. Groups\
              \ with lower <code>Precedence</code> values take precedence over groups\
              \ with higher or null <code>Precedence</code> values. If a user belongs\
              \ to two or more groups, it is the group with the lowest precedence\
              \ value whose role ARN is given in the user's tokens for the <code>cognito:roles</code>\
              \ and <code>cognito:preferred_role</code> claims.</p> <p>Two groups\
              \ can have the same <code>Precedence</code> value. If this happens,\
              \ neither group takes precedence over the other. If two groups with\
              \ the same <code>Precedence</code> have the same role ARN, that role\
              \ is used in the <code>cognito:preferred_role</code> claim in tokens\
              \ for users in each group. If the two groups have different role ARNs,\
              \ the <code>cognito:preferred_role</code> claim isn't set in users'\
              \ tokens.</p> <p>The default <code>Precedence</code> value is null.\
              \ The maximum <code>Precedence</code> value is <code>2^31-1</code>.</p>"
          title: Precedence
      required:
      - GroupName
      - UserPoolId
      title: CreateGroupRequest
      type: object
    GroupExistsException: {}
    CreateIdentityProviderResponse:
      example:
        IdentityProvider:
          ProviderName: ""
          LastModifiedDate: ""
          CreationDate: ""
          UserPoolId: ""
          AttributeMapping: ""
          ProviderDetails: ""
          ProviderType: ""
          IdpIdentifiers: ""
      properties:
        IdentityProvider:
          $ref: '#/components/schemas/CreateIdentityProviderResponse_IdentityProvider'
      required:
      - IdentityProvider
      title: CreateIdentityProviderResponse
      type: object
    CreateIdentityProviderRequest:
      example:
        ProviderName: ""
        UserPoolId: ""
        AttributeMapping: ""
        ProviderDetails: ""
        ProviderType: ""
        IdpIdentifiers: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        ProviderName:
          allOf:
          - $ref: '#/components/schemas/ProviderNameTypeV1'
          - description: The IdP name.
          title: ProviderName
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderTypeType'
          - description: The IdP type.
          title: ProviderType
        ProviderDetails:
          allOf:
          - $ref: '#/components/schemas/ProviderDetailsType'
          - description: <p>The IdP details. The following list describes the provider
              detail keys for each IdP type.</p> <ul> <li> <p>For Google and Login
              with Amazon:</p> <ul> <li> <p>client_id</p> </li> <li> <p>client_secret</p>
              </li> <li> <p>authorize_scopes</p> </li> </ul> </li> <li> <p>For Facebook:</p>
              <ul> <li> <p>client_id</p> </li> <li> <p>client_secret</p> </li> <li>
              <p>authorize_scopes</p> </li> <li> <p>api_version</p> </li> </ul> </li>
              <li> <p>For Sign in with Apple:</p> <ul> <li> <p>client_id</p> </li>
              <li> <p>team_id</p> </li> <li> <p>key_id</p> </li> <li> <p>private_key</p>
              </li> <li> <p>authorize_scopes</p> </li> </ul> </li> <li> <p>For OpenID
              Connect (OIDC) providers:</p> <ul> <li> <p>client_id</p> </li> <li>
              <p>client_secret</p> </li> <li> <p>attributes_request_method</p> </li>
              <li> <p>oidc_issuer</p> </li> <li> <p>authorize_scopes</p> </li> <li>
              <p>The following keys are only present if Amazon Cognito didn't discover
              them at the <code>oidc_issuer</code> URL.</p> <ul> <li> <p>authorize_url
              </p> </li> <li> <p>token_url </p> </li> <li> <p>attributes_url </p>
              </li> <li> <p>jwks_uri </p> </li> </ul> </li> <li> <p>Amazon Cognito
              sets the value of the following keys automatically. They are read-only.</p>
              <ul> <li> <p>attributes_url_add_attributes </p> </li> </ul> </li> </ul>
              </li> <li> <p>For SAML providers:</p> <ul> <li> <p>MetadataFile or MetadataURL</p>
              </li> <li> <p>IDPSignout <i>optional</i> </p> </li> </ul> </li> </ul>
          title: ProviderDetails
        AttributeMapping:
          allOf:
          - $ref: '#/components/schemas/AttributeMappingType'
          - description: A mapping of IdP attributes to standard and custom user pool
              attributes.
          title: AttributeMapping
        IdpIdentifiers:
          allOf:
          - $ref: '#/components/schemas/IdpIdentifiersListType'
          - description: A list of IdP identifiers.
          title: IdpIdentifiers
      required:
      - ProviderDetails
      - ProviderName
      - ProviderType
      - UserPoolId
      title: CreateIdentityProviderRequest
      type: object
    DuplicateProviderException: {}
    CreateResourceServerResponse:
      example:
        ResourceServer:
          UserPoolId: ""
          Identifier: ""
          Scopes: ""
          Name: ""
      properties:
        ResourceServer:
          $ref: '#/components/schemas/CreateResourceServerResponse_ResourceServer'
      required:
      - ResourceServer
      title: CreateResourceServerResponse
      type: object
    CreateResourceServerRequest:
      example:
        UserPoolId: ""
        Identifier: ""
        Scopes: ""
        Name: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        Identifier:
          allOf:
          - $ref: '#/components/schemas/ResourceServerIdentifierType'
          - description: "A unique resource server identifier for the resource server.\
              \ This could be an HTTPS endpoint where the resource server is located,\
              \ such as <code>https://my-weather-api.example.com</code>."
          title: Identifier
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceServerNameType'
          - description: A friendly name for the resource server.
          title: Name
        Scopes:
          allOf:
          - $ref: '#/components/schemas/ResourceServerScopeListType'
          - description: A list of scopes. Each scope is a key-value map with the
              keys <code>name</code> and <code>description</code>.
          title: Scopes
      required:
      - Identifier
      - Name
      - UserPoolId
      title: CreateResourceServerRequest
      type: object
    CreateUserImportJobResponse:
      description: Represents the response from the server to the request to create
        the user import job.
      example:
        UserImportJob:
          Status: ""
          CreationDate: ""
          ImportedUsers: ""
          FailedUsers: ""
          PreSignedUrl: ""
          CloudWatchLogsRoleArn: ""
          JobName: ""
          StartDate: ""
          UserPoolId: ""
          SkippedUsers: ""
          CompletionMessage: ""
          CompletionDate: ""
          JobId: ""
      properties:
        UserImportJob:
          $ref: '#/components/schemas/CreateUserImportJobResponse_UserImportJob'
      title: CreateUserImportJobResponse
      type: object
    CreateUserImportJobRequest:
      description: Represents the request to create the user import job.
      example:
        UserPoolId: ""
        CloudWatchLogsRoleArn: ""
        JobName: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/UserImportJobNameType'
          - description: The job name for the user import job.
          title: JobName
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool that the users are being
              imported into.
          title: UserPoolId
        CloudWatchLogsRoleArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The role ARN for the Amazon CloudWatch Logs Logging role
              for the user import job.
          title: CloudWatchLogsRoleArn
      required:
      - CloudWatchLogsRoleArn
      - JobName
      - UserPoolId
      title: CreateUserImportJobRequest
      type: object
    CreateUserPoolResponse:
      description: Represents the response from the server for the request to create
        a user pool.
      example:
        UserPool:
          UserPoolTags: ""
          LastModifiedDate: ""
          CreationDate: ""
          Policies:
            PasswordPolicy:
              RequireNumbers: ""
              MinimumLength: ""
              TemporaryPasswordValidityDays: ""
              RequireUppercase: ""
              RequireLowercase: ""
              RequireSymbols: ""
          SchemaAttributes: ""
          AdminCreateUserConfig:
            UnusedAccountValidityDays: ""
            InviteMessageTemplate:
              EmailMessage: ""
              SMSMessage: ""
              EmailSubject: ""
            AllowAdminCreateUserOnly: ""
          UsernameConfiguration:
            CaseSensitive: ""
          Name: ""
          SmsVerificationMessage: ""
          UserAttributeUpdateSettings:
            AttributesRequireVerificationBeforeUpdate: ""
          SmsConfigurationFailure: ""
          EmailConfiguration:
            ReplyToEmailAddress: ""
            ConfigurationSet: ""
            EmailSendingAccount: ""
            SourceArn: ""
            From: ""
          SmsConfiguration:
            SnsRegion: ""
            ExternalId: ""
            SnsCallerArn: ""
          EmailVerificationSubject: ""
          AccountRecoverySetting:
            RecoveryMechanisms: ""
          Status: ""
          VerificationMessageTemplate:
            EmailMessageByLink: ""
            EmailMessage: ""
            SmsMessage: ""
            EmailSubject: ""
            DefaultEmailOption: ""
            EmailSubjectByLink: ""
          MfaConfiguration: ""
          EmailConfigurationFailure: ""
          DeletionProtection: ""
          SmsAuthenticationMessage: ""
          EstimatedNumberOfUsers: ""
          UserPoolAddOns:
            AdvancedSecurityMode: ""
          CustomDomain: ""
          AliasAttributes: ""
          Id: ""
          LambdaConfig:
            CreateAuthChallenge: ""
            PreSignUp: ""
            KMSKeyID: ""
            UserMigration: ""
            PostAuthentication: ""
            VerifyAuthChallengeResponse: ""
            PreAuthentication: ""
            DefineAuthChallenge: ""
            PreTokenGeneration: ""
            CustomSMSSender:
              LambdaArn: ""
              LambdaVersion: ""
            PostConfirmation: ""
            CustomMessage: ""
            CustomEmailSender:
              LambdaArn: ""
              LambdaVersion: ""
          Domain: ""
          Arn: ""
          AutoVerifiedAttributes: ""
          UsernameAttributes: ""
          EmailVerificationMessage: ""
          DeviceConfiguration:
            DeviceOnlyRememberedOnUserPrompt: ""
            ChallengeRequiredOnNewDevice: ""
      properties:
        UserPool:
          $ref: '#/components/schemas/CreateUserPoolResponse_UserPool'
      title: CreateUserPoolResponse
      type: object
    CreateUserPoolRequest:
      description: Represents the request to create a user pool.
      example:
        UserPoolTags: ""
        Policies:
          PasswordPolicy:
            RequireNumbers: ""
            MinimumLength: ""
            TemporaryPasswordValidityDays: ""
            RequireUppercase: ""
            RequireLowercase: ""
            RequireSymbols: ""
        VerificationMessageTemplate:
          EmailMessageByLink: ""
          EmailMessage: ""
          SmsMessage: ""
          EmailSubject: ""
          DefaultEmailOption: ""
          EmailSubjectByLink: ""
        MfaConfiguration: ""
        Schema: ""
        AdminCreateUserConfig:
          UnusedAccountValidityDays: ""
          InviteMessageTemplate:
            EmailMessage: ""
            SMSMessage: ""
            EmailSubject: ""
          AllowAdminCreateUserOnly: ""
        DeletionProtection: ""
        SmsAuthenticationMessage: ""
        UsernameConfiguration:
          CaseSensitive: ""
        SmsVerificationMessage: ""
        UserPoolAddOns:
          AdvancedSecurityMode: ""
        UserAttributeUpdateSettings:
          AttributesRequireVerificationBeforeUpdate: ""
        PoolName: ""
        EmailConfiguration:
          ReplyToEmailAddress: ""
          ConfigurationSet: ""
          EmailSendingAccount: ""
          SourceArn: ""
          From: ""
        SmsConfiguration:
          SnsRegion: ""
          ExternalId: ""
          SnsCallerArn: ""
        AliasAttributes: ""
        EmailVerificationSubject: ""
        LambdaConfig:
          CreateAuthChallenge: ""
          PreSignUp: ""
          KMSKeyID: ""
          UserMigration: ""
          PostAuthentication: ""
          VerifyAuthChallengeResponse: ""
          PreAuthentication: ""
          DefineAuthChallenge: ""
          PreTokenGeneration: ""
          CustomSMSSender:
            LambdaArn: ""
            LambdaVersion: ""
          PostConfirmation: ""
          CustomMessage: ""
          CustomEmailSender:
            LambdaArn: ""
            LambdaVersion: ""
        AutoVerifiedAttributes: ""
        UsernameAttributes: ""
        EmailVerificationMessage: ""
        DeviceConfiguration:
          DeviceOnlyRememberedOnUserPrompt: ""
          ChallengeRequiredOnNewDevice: ""
        AccountRecoverySetting:
          RecoveryMechanisms: ""
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/UserPoolNameType'
          - description: A string used to name the user pool.
          title: PoolName
        Policies:
          $ref: '#/components/schemas/CreateUserPoolRequest_Policies'
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/DeletionProtectionType'
          - description: "<p>When active, <code>DeletionProtection</code> prevents\
              \ accidental deletion of your user pool. Before you can delete a user\
              \ pool that you have protected against deletion, you must deactivate\
              \ this feature.</p> <p>When you try to delete a protected user pool\
              \ in a <code>DeleteUserPool</code> API request, Amazon Cognito returns\
              \ an <code>InvalidParameterException</code> error. To delete a protected\
              \ user pool, send a new <code>DeleteUserPool</code> request after you\
              \ deactivate deletion protection in an <code>UpdateUserPool</code> API\
              \ request.</p>"
          title: DeletionProtection
        LambdaConfig:
          $ref: '#/components/schemas/CreateUserPoolRequest_LambdaConfig'
        AutoVerifiedAttributes:
          allOf:
          - $ref: '#/components/schemas/VerifiedAttributesListType'
          - description: "The attributes to be auto-verified. Possible values: <b>email</b>,\
              \ <b>phone_number</b>."
          title: AutoVerifiedAttributes
        AliasAttributes:
          allOf:
          - $ref: '#/components/schemas/AliasAttributesListType'
          - description: "Attributes supported as an alias for this user pool. Possible\
              \ values: <b>phone_number</b>, <b>email</b>, or <b>preferred_username</b>."
          title: AliasAttributes
        UsernameAttributes:
          allOf:
          - $ref: '#/components/schemas/UsernameAttributesListType'
          - description: Specifies whether a user can use an email address or phone
              number as a username when they sign up.
          title: UsernameAttributes
        SmsVerificationMessage:
          allOf:
          - $ref: '#/components/schemas/SmsVerificationMessageType'
          - description: This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
          title: SmsVerificationMessage
        EmailVerificationMessage:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationMessageType'
          - description: This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
          title: EmailVerificationMessage
        EmailVerificationSubject:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationSubjectType'
          - description: This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
          title: EmailVerificationSubject
        VerificationMessageTemplate:
          $ref: '#/components/schemas/CreateUserPoolRequest_VerificationMessageTemplate'
        SmsAuthenticationMessage:
          allOf:
          - $ref: '#/components/schemas/SmsVerificationMessageType'
          - description: A string representing the SMS authentication message.
          title: SmsAuthenticationMessage
        MfaConfiguration:
          allOf:
          - $ref: '#/components/schemas/UserPoolMfaType'
          - description: Specifies MFA configuration details.
          title: MfaConfiguration
        UserAttributeUpdateSettings:
          $ref: '#/components/schemas/CreateUserPoolRequest_UserAttributeUpdateSettings'
        DeviceConfiguration:
          $ref: '#/components/schemas/CreateUserPoolRequest_DeviceConfiguration'
        EmailConfiguration:
          $ref: '#/components/schemas/CreateUserPoolRequest_EmailConfiguration'
        SmsConfiguration:
          $ref: '#/components/schemas/CreateUserPoolRequest_SmsConfiguration'
        UserPoolTags:
          allOf:
          - $ref: '#/components/schemas/UserPoolTagsType'
          - description: "The tag keys and values to assign to the user pool. A tag\
              \ is a label that you can use to categorize and manage user pools in\
              \ different ways, such as by purpose, owner, environment, or other criteria."
          title: UserPoolTags
        AdminCreateUserConfig:
          $ref: '#/components/schemas/CreateUserPoolRequest_AdminCreateUserConfig'
        Schema:
          allOf:
          - $ref: '#/components/schemas/SchemaAttributesListType'
          - description: An array of schema attributes for the new user pool. These
              attributes can be standard or custom attributes.
          title: Schema
        UserPoolAddOns:
          $ref: '#/components/schemas/CreateUserPoolRequest_UserPoolAddOns'
        UsernameConfiguration:
          $ref: '#/components/schemas/CreateUserPoolRequest_UsernameConfiguration'
        AccountRecoverySetting:
          $ref: '#/components/schemas/CreateUserPoolRequest_AccountRecoverySetting'
      required:
      - PoolName
      title: CreateUserPoolRequest
      type: object
    UserPoolTaggingException: {}
    CreateUserPoolClientResponse:
      description: Represents the response from the server to create a user pool client.
      example:
        UserPoolClient:
          AnalyticsConfiguration:
            ApplicationArn: ""
            UserDataShared: ""
            ExternalId: ""
            ApplicationId: ""
            RoleArn: ""
          LastModifiedDate: ""
          CreationDate: ""
          CallbackURLs: ""
          IdTokenValidity: ""
          TokenValidityUnits:
            IdToken: ""
            RefreshToken: ""
            AccessToken: ""
          ReadAttributes: ""
          DefaultRedirectURI: ""
          AllowedOAuthFlowsUserPoolClient: ""
          ClientName: ""
          ExplicitAuthFlows: ""
          ClientId: ""
          AccessTokenValidity: ""
          EnableTokenRevocation: ""
          EnablePropagateAdditionalUserContextData: ""
          AllowedOAuthScopes: ""
          AuthSessionValidity: ""
          SupportedIdentityProviders: ""
          UserPoolId: ""
          AllowedOAuthFlows: ""
          ClientSecret: ""
          LogoutURLs: ""
          RefreshTokenValidity: ""
          WriteAttributes: ""
          PreventUserExistenceErrors: ""
      properties:
        UserPoolClient:
          $ref: '#/components/schemas/CreateUserPoolClientResponse_UserPoolClient'
      title: CreateUserPoolClientResponse
      type: object
    CreateUserPoolClientRequest:
      description: Represents the request to create a user pool client.
      example:
        AnalyticsConfiguration:
          ApplicationArn: ""
          UserDataShared: ""
          ExternalId: ""
          ApplicationId: ""
          RoleArn: ""
        GenerateSecret: ""
        CallbackURLs: ""
        EnablePropagateAdditionalUserContextData: ""
        IdTokenValidity: ""
        AllowedOAuthScopes: ""
        AuthSessionValidity: ""
        TokenValidityUnits:
          IdToken: ""
          RefreshToken: ""
          AccessToken: ""
        ReadAttributes: ""
        DefaultRedirectURI: ""
        AllowedOAuthFlowsUserPoolClient: ""
        SupportedIdentityProviders: ""
        ClientName: ""
        UserPoolId: ""
        AllowedOAuthFlows: ""
        ExplicitAuthFlows: ""
        LogoutURLs: ""
        AccessTokenValidity: ""
        RefreshTokenValidity: ""
        WriteAttributes: ""
        PreventUserExistenceErrors: ""
        EnableTokenRevocation: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to create
              a user pool client.
          title: UserPoolId
        ClientName:
          allOf:
          - $ref: '#/components/schemas/ClientNameType'
          - description: The client name for the user pool client you would like to
              create.
          title: ClientName
        GenerateSecret:
          allOf:
          - $ref: '#/components/schemas/GenerateSecret'
          - description: Boolean to specify whether you want to generate a secret
              for the user pool client being created.
          title: GenerateSecret
        RefreshTokenValidity:
          allOf:
          - $ref: '#/components/schemas/RefreshTokenValidityType'
          - description: "<p>The refresh token time limit. After this limit expires,\
              \ your user can't use their refresh token. To specify the time unit\
              \ for <code>RefreshTokenValidity</code> as <code>seconds</code>, <code>minutes</code>,\
              \ <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>\
              \ value in your API request.</p> <p>For example, when you set <code>RefreshTokenValidity</code>\
              \ as <code>10</code> and <code>TokenValidityUnits</code> as <code>days</code>,\
              \ your user can refresh their session and retrieve new access and ID\
              \ tokens for 10 days.</p> <p>The default time unit for <code>RefreshTokenValidity</code>\
              \ in an API request is days. You can't set <code>RefreshTokenValidity</code>\
              \ to 0. If you do, Amazon Cognito overrides the value with the default\
              \ value of 30 days. <i>Valid range</i> is displayed below in seconds.</p>\
              \ <p>If you don't specify otherwise in the configuration of your app\
              \ client, your refresh tokens are valid for 30 days.</p>"
          title: RefreshTokenValidity
        AccessTokenValidity:
          allOf:
          - $ref: '#/components/schemas/AccessTokenValidityType'
          - description: "<p>The access token time limit. After this limit expires,\
              \ your user can't use their access token. To specify the time unit for\
              \ <code>AccessTokenValidity</code> as <code>seconds</code>, <code>minutes</code>,\
              \ <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>\
              \ value in your API request.</p> <p>For example, when you set <code>AccessTokenValidity</code>\
              \ to <code>10</code> and <code>TokenValidityUnits</code> to <code>hours</code>,\
              \ your user can authorize access with their access token for 10 hours.</p>\
              \ <p>The default time unit for <code>AccessTokenValidity</code> in an\
              \ API request is hours. <i>Valid range</i> is displayed below in seconds.</p>\
              \ <p>If you don't specify otherwise in the configuration of your app\
              \ client, your access tokens are valid for one hour.</p>"
          title: AccessTokenValidity
        IdTokenValidity:
          allOf:
          - $ref: '#/components/schemas/IdTokenValidityType'
          - description: "<p>The ID token time limit. After this limit expires, your\
              \ user can't use their ID token. To specify the time unit for <code>IdTokenValidity</code>\
              \ as <code>seconds</code>, <code>minutes</code>, <code>hours</code>,\
              \ or <code>days</code>, set a <code>TokenValidityUnits</code> value\
              \ in your API request.</p> <p>For example, when you set <code>IdTokenValidity</code>\
              \ as <code>10</code> and <code>TokenValidityUnits</code> as <code>hours</code>,\
              \ your user can authenticate their session with their ID token for 10\
              \ hours.</p> <p>The default time unit for <code>IdTokenValidity</code>\
              \ in an API request is hours. <i>Valid range</i> is displayed below\
              \ in seconds.</p> <p>If you don't specify otherwise in the configuration\
              \ of your app client, your ID tokens are valid for one hour.</p>"
          title: IdTokenValidity
        TokenValidityUnits:
          $ref: '#/components/schemas/CreateUserPoolClientRequest_TokenValidityUnits'
        ReadAttributes:
          allOf:
          - $ref: '#/components/schemas/ClientPermissionListType'
          - description: The read attributes.
          title: ReadAttributes
        WriteAttributes:
          allOf:
          - $ref: '#/components/schemas/ClientPermissionListType'
          - description: "<p>The user pool attributes that the app client can write\
              \ to.</p> <p>If your app client allows users to sign in through an IdP,\
              \ this array must include all attributes that you have mapped to IdP\
              \ attributes. Amazon Cognito updates mapped attributes when users sign\
              \ in to your application through an IdP. If your app client does not\
              \ have write access to a mapped attribute, Amazon Cognito throws an\
              \ error when it tries to update the attribute. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html\"\
              >Specifying IdP Attribute Mappings for Your user pool</a>.</p>"
          title: WriteAttributes
        ExplicitAuthFlows:
          allOf:
          - $ref: '#/components/schemas/ExplicitAuthFlowsListType'
          - description: "<p>The authentication flows that you want your user pool\
              \ client to support. For each app client in your user pool, you can\
              \ sign in your users with any combination of one or more flows, including\
              \ with a user name and Secure Remote Password (SRP), a user name and\
              \ password, or a custom authentication process that you define with\
              \ Lambda functions.</p> <note> <p>If you don't specify a value for <code>ExplicitAuthFlows</code>,\
              \ your user client supports <code>ALLOW_REFRESH_TOKEN_AUTH</code>, <code>ALLOW_USER_SRP_AUTH</code>,\
              \ and <code>ALLOW_CUSTOM_AUTH</code>.</p> </note> <p>Valid values include:</p>\
              \ <ul> <li> <p> <code>ALLOW_ADMIN_USER_PASSWORD_AUTH</code>: Enable\
              \ admin based user password authentication flow <code>ADMIN_USER_PASSWORD_AUTH</code>.\
              \ This setting replaces the <code>ADMIN_NO_SRP_AUTH</code> setting.\
              \ With this authentication flow, your app passes a user name and password\
              \ to Amazon Cognito in the request, instead of using the Secure Remote\
              \ Password (SRP) protocol to securely transmit the password.</p> </li>\
              \ <li> <p> <code>ALLOW_CUSTOM_AUTH</code>: Enable Lambda trigger based\
              \ authentication.</p> </li> <li> <p> <code>ALLOW_USER_PASSWORD_AUTH</code>:\
              \ Enable user password-based authentication. In this flow, Amazon Cognito\
              \ receives the password in the request instead of using the SRP protocol\
              \ to verify passwords.</p> </li> <li> <p> <code>ALLOW_USER_SRP_AUTH</code>:\
              \ Enable SRP-based authentication.</p> </li> <li> <p> <code>ALLOW_REFRESH_TOKEN_AUTH</code>:\
              \ Enable authflow to refresh tokens.</p> </li> </ul> <p>In some environments,\
              \ you will see the values <code>ADMIN_NO_SRP_AUTH</code>, <code>CUSTOM_AUTH_FLOW_ONLY</code>,\
              \ or <code>USER_PASSWORD_AUTH</code>. You can't assign these legacy\
              \ <code>ExplicitAuthFlows</code> values to user pool clients at the\
              \ same time as values that begin with <code>ALLOW_</code>, like <code>ALLOW_USER_SRP_AUTH</code>.</p>"
          title: ExplicitAuthFlows
        SupportedIdentityProviders:
          allOf:
          - $ref: '#/components/schemas/SupportedIdentityProvidersListType'
          - description: "A list of provider names for the identity providers (IdPs)\
              \ that are supported on this client. The following are supported: <code>COGNITO</code>,\
              \ <code>Facebook</code>, <code>Google</code>, <code>SignInWithApple</code>,\
              \ and <code>LoginWithAmazon</code>. You can also specify the names that\
              \ you configured for the SAML and OIDC IdPs in your user pool, for example\
              \ <code>MySAMLIdP</code> or <code>MyOIDCIdP</code>."
          title: SupportedIdentityProviders
        CallbackURLs:
          allOf:
          - $ref: '#/components/schemas/CallbackURLsListType'
          - description: <p>A list of allowed redirect (callback) URLs for the IdPs.</p>
              <p>A redirect URI must:</p> <ul> <li> <p>Be an absolute URI.</p> </li>
              <li> <p>Be registered with the authorization server.</p> </li> <li>
              <p>Not include a fragment component.</p> </li> </ul> <p>See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth
              2.0 - Redirection Endpoint</a>.</p> <p>Amazon Cognito requires HTTPS
              over HTTP except for http://localhost for testing purposes only.</p>
              <p>App callback URLs such as myapp://example are also supported.</p>
          title: CallbackURLs
        LogoutURLs:
          allOf:
          - $ref: '#/components/schemas/LogoutURLsListType'
          - description: A list of allowed logout URLs for the IdPs.
          title: LogoutURLs
        DefaultRedirectURI:
          allOf:
          - $ref: '#/components/schemas/RedirectUrlType'
          - description: <p>The default redirect URI. Must be in the <code>CallbackURLs</code>
              list.</p> <p>A redirect URI must:</p> <ul> <li> <p>Be an absolute URI.</p>
              </li> <li> <p>Be registered with the authorization server.</p> </li>
              <li> <p>Not include a fragment component.</p> </li> </ul> <p>See <a
              href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 -
              Redirection Endpoint</a>.</p> <p>Amazon Cognito requires HTTPS over
              HTTP except for http://localhost for testing purposes only.</p> <p>App
              callback URLs such as myapp://example are also supported.</p>
          title: DefaultRedirectURI
        AllowedOAuthFlows:
          allOf:
          - $ref: '#/components/schemas/OAuthFlowsType'
          - description: "<p>The allowed OAuth flows.</p> <dl> <dt>code</dt> <dd>\
              \ <p>Use a code grant flow, which provides an authorization code as\
              \ the response. This code can be exchanged for access tokens with the\
              \ <code>/oauth2/token</code> endpoint.</p> </dd> <dt>implicit</dt> <dd>\
              \ <p>Issue the access token (and, optionally, ID token, based on scopes)\
              \ directly to your user.</p> </dd> <dt>client_credentials</dt> <dd>\
              \ <p>Issue the access token from the <code>/oauth2/token</code> endpoint\
              \ directly to a non-person user using a combination of the client ID\
              \ and client secret.</p> </dd> </dl>"
          title: AllowedOAuthFlows
        AllowedOAuthScopes:
          allOf:
          - $ref: '#/components/schemas/ScopeListType'
          - description: "The allowed OAuth scopes. Possible values provided by OAuth\
              \ are <code>phone</code>, <code>email</code>, <code>openid</code>, and\
              \ <code>profile</code>. Possible values provided by Amazon Web Services\
              \ are <code>aws.cognito.signin.user.admin</code>. Custom scopes created\
              \ in Resource Servers are also supported."
          title: AllowedOAuthScopes
        AllowedOAuthFlowsUserPoolClient:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "<p>Set to <code>true</code> to use OAuth 2.0 features in\
              \ your user pool app client.</p> <p> <code>AllowedOAuthFlowsUserPoolClient</code>\
              \ must be <code>true</code> before you can configure the following features\
              \ in your app client.</p> <ul> <li> <p> <code>CallBackURLs</code>: Callback\
              \ URLs.</p> </li> <li> <p> <code>LogoutURLs</code>: Sign-out redirect\
              \ URLs.</p> </li> <li> <p> <code>AllowedOAuthScopes</code>: OAuth 2.0\
              \ scopes.</p> </li> <li> <p> <code>AllowedOAuthFlows</code>: Support\
              \ for authorization code, implicit, and client credentials OAuth 2.0\
              \ grants.</p> </li> </ul> <p>To use OAuth 2.0 features, configure one\
              \ of these features in the Amazon Cognito console or set <code>AllowedOAuthFlowsUserPoolClient</code>\
              \ to <code>true</code> in a <code>CreateUserPoolClient</code> or <code>UpdateUserPoolClient</code>\
              \ API request. If you don't set a value for <code>AllowedOAuthFlowsUserPoolClient</code>\
              \ in a request with the CLI or SDKs, it defaults to <code>false</code>.</p>"
          title: AllowedOAuthFlowsUserPoolClient
        AnalyticsConfiguration:
          $ref: '#/components/schemas/CreateUserPoolClientRequest_AnalyticsConfiguration'
        PreventUserExistenceErrors:
          allOf:
          - $ref: '#/components/schemas/PreventUserExistenceErrorTypes'
          - description: "<p>Errors and responses that you want Amazon Cognito APIs\
              \ to return during authentication, account confirmation, and password\
              \ recovery when the user doesn't exist in the user pool. When set to\
              \ <code>ENABLED</code> and the user doesn't exist, authentication returns\
              \ an error indicating either the username or password was incorrect.\
              \ Account confirmation and password recovery return a response indicating\
              \ a code was sent to a simulated destination. When set to <code>LEGACY</code>,\
              \ those APIs return a <code>UserNotFoundException</code> exception if\
              \ the user doesn't exist in the user pool.</p> <p>Valid values include:</p>\
              \ <ul> <li> <p> <code>ENABLED</code> - This prevents user existence-related\
              \ errors.</p> </li> <li> <p> <code>LEGACY</code> - This represents the\
              \ early behavior of Amazon Cognito where user existence related errors\
              \ aren't prevented.</p> </li> </ul>"
          title: PreventUserExistenceErrors
        EnableTokenRevocation:
          allOf:
          - $ref: '#/components/schemas/WrappedBooleanType'
          - description: "<p>Activates or deactivates token revocation. For more information\
              \ about revoking tokens, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html\"\
              >RevokeToken</a>.</p> <p>If you don't include this parameter, token\
              \ revocation is automatically activated for the new user pool client.</p>"
          title: EnableTokenRevocation
        EnablePropagateAdditionalUserContextData:
          allOf:
          - $ref: '#/components/schemas/WrappedBooleanType'
          - description: "Activates the propagation of additional user context data.\
              \ For more information about propagation of user context data, see <a\
              \ href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html\"\
              > Adding advanced security to a user pool</a>. If you don’t include\
              \ this parameter, you can't send device fingerprint information, including\
              \ source IP address, to Amazon Cognito advanced security. You can only\
              \ activate <code>EnablePropagateAdditionalUserContextData</code> in\
              \ an app client that has a client secret."
          title: EnablePropagateAdditionalUserContextData
        AuthSessionValidity:
          allOf:
          - $ref: '#/components/schemas/AuthSessionValidityType'
          - description: "Amazon Cognito creates a session token for each API request\
              \ in an authentication flow. <code>AuthSessionValidity</code> is the\
              \ duration, in minutes, of that session token. Your user pool native\
              \ user must respond to each authentication challenge before the session\
              \ expires."
          title: AuthSessionValidity
      required:
      - ClientName
      - UserPoolId
      title: CreateUserPoolClientRequest
      type: object
    ScopeDoesNotExistException: {}
    InvalidOAuthFlowException: {}
    CreateUserPoolDomainResponse:
      example:
        CloudFrontDomain: ""
      properties:
        CloudFrontDomain:
          allOf:
          - $ref: '#/components/schemas/DomainType'
          - description: The Amazon CloudFront endpoint that you use as the target
              of the alias that you set up with your Domain Name Service (DNS) provider.
          title: CloudFrontDomain
      title: CreateUserPoolDomainResponse
      type: object
    CreateUserPoolDomainRequest:
      example:
        UserPoolId: ""
        CustomDomainConfig:
          CertificateArn: ""
        Domain: ""
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/DomainType'
          - description: "The domain string. For custom domains, this is the fully-qualified\
              \ domain name, such as <code>auth.example.com</code>. For Amazon Cognito\
              \ prefix domains, this is the prefix alone, such as <code>auth</code>."
          title: Domain
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        CustomDomainConfig:
          $ref: '#/components/schemas/CreateUserPoolDomainRequest_CustomDomainConfig'
      required:
      - Domain
      - UserPoolId
      title: CreateUserPoolDomainRequest
      type: object
    DeleteGroupRequest:
      example:
        GroupName: ""
        UserPoolId: ""
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupNameType'
          - description: The name of the group.
          title: GroupName
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
      required:
      - GroupName
      - UserPoolId
      title: DeleteGroupRequest
      type: object
    DeleteIdentityProviderRequest:
      example:
        ProviderName: ""
        UserPoolId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        ProviderName:
          allOf:
          - $ref: '#/components/schemas/ProviderNameType'
          - description: The IdP name.
          title: ProviderName
      required:
      - ProviderName
      - UserPoolId
      title: DeleteIdentityProviderRequest
      type: object
    UnsupportedIdentityProviderException: {}
    DeleteResourceServerRequest:
      example:
        UserPoolId: ""
        Identifier: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool that hosts the resource
              server.
          title: UserPoolId
        Identifier:
          allOf:
          - $ref: '#/components/schemas/ResourceServerIdentifierType'
          - description: The identifier for the resource server.
          title: Identifier
      required:
      - Identifier
      - UserPoolId
      title: DeleteResourceServerRequest
      type: object
    DeleteUserRequest:
      description: Represents the request to delete a user.
      example:
        AccessToken: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose user profile you want to delete.
          title: AccessToken
      required:
      - AccessToken
      title: DeleteUserRequest
      type: object
    DeleteUserAttributesResponse:
      description: Represents the response from the server to delete user attributes.
      properties: {}
      type: object
    DeleteUserAttributesRequest:
      description: Represents the request to delete user attributes.
      example:
        UserAttributeNames: ""
        AccessToken: ""
      properties:
        UserAttributeNames:
          allOf:
          - $ref: '#/components/schemas/AttributeNameListType'
          - description: "<p>An array of strings representing the user attribute names\
              \ you want to delete.</p> <p>For custom attributes, you must prependattach\
              \ the <code>custom:</code> prefix to the front of the attribute name.</p>"
          title: UserAttributeNames
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose attributes you want to delete.
          title: AccessToken
      required:
      - AccessToken
      - UserAttributeNames
      title: DeleteUserAttributesRequest
      type: object
    DeleteUserPoolRequest:
      description: Represents the request to delete a user pool.
      example:
        UserPoolId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool you want to delete.
          title: UserPoolId
      required:
      - UserPoolId
      title: DeleteUserPoolRequest
      type: object
    DeleteUserPoolClientRequest:
      description: Represents the request to delete a user pool client.
      example:
        UserPoolId: ""
        ClientId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to delete
              the client.
          title: UserPoolId
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The app client ID of the app associated with the user pool.
          title: ClientId
      required:
      - ClientId
      - UserPoolId
      title: DeleteUserPoolClientRequest
      type: object
    DeleteUserPoolDomainResponse:
      properties: {}
      type: object
    DeleteUserPoolDomainRequest:
      example:
        UserPoolId: ""
        Domain: ""
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/DomainType'
          - description: "The domain string. For custom domains, this is the fully-qualified\
              \ domain name, such as <code>auth.example.com</code>. For Amazon Cognito\
              \ prefix domains, this is the prefix alone, such as <code>auth</code>."
          title: Domain
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
      required:
      - Domain
      - UserPoolId
      title: DeleteUserPoolDomainRequest
      type: object
    DescribeIdentityProviderResponse:
      example:
        IdentityProvider:
          ProviderName: ""
          LastModifiedDate: ""
          CreationDate: ""
          UserPoolId: ""
          AttributeMapping: ""
          ProviderDetails: ""
          ProviderType: ""
          IdpIdentifiers: ""
      properties:
        IdentityProvider:
          $ref: '#/components/schemas/DescribeIdentityProviderResponse_IdentityProvider'
      required:
      - IdentityProvider
      title: DescribeIdentityProviderResponse
      type: object
    DescribeIdentityProviderRequest:
      example:
        ProviderName: ""
        UserPoolId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        ProviderName:
          allOf:
          - $ref: '#/components/schemas/ProviderNameType'
          - description: The IdP name.
          title: ProviderName
      required:
      - ProviderName
      - UserPoolId
      title: DescribeIdentityProviderRequest
      type: object
    DescribeResourceServerResponse:
      example:
        ResourceServer:
          UserPoolId: ""
          Identifier: ""
          Scopes: ""
          Name: ""
      properties:
        ResourceServer:
          $ref: '#/components/schemas/DescribeResourceServerResponse_ResourceServer'
      required:
      - ResourceServer
      title: DescribeResourceServerResponse
      type: object
    DescribeResourceServerRequest:
      example:
        UserPoolId: ""
        Identifier: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool that hosts the resource
              server.
          title: UserPoolId
        Identifier:
          allOf:
          - $ref: '#/components/schemas/ResourceServerIdentifierType'
          - description: The identifier for the resource server
          title: Identifier
      required:
      - Identifier
      - UserPoolId
      title: DescribeResourceServerRequest
      type: object
    DescribeRiskConfigurationResponse:
      example:
        RiskConfiguration:
          CompromisedCredentialsRiskConfiguration:
            Actions:
              EventAction: ""
            EventFilter: ""
          LastModifiedDate: ""
          UserPoolId: ""
          ClientId: ""
          AccountTakeoverRiskConfiguration:
            Actions:
              HighAction:
                Notify: ""
                EventAction: ""
              LowAction:
                Notify: ""
                EventAction: ""
              MediumAction:
                Notify: ""
                EventAction: ""
            NotifyConfiguration:
              ReplyTo: ""
              BlockEmail:
                TextBody: ""
                HtmlBody: ""
                Subject: ""
              SourceArn: ""
              NoActionEmail:
                TextBody: ""
                HtmlBody: ""
                Subject: ""
              From: ""
              MfaEmail:
                TextBody: ""
                HtmlBody: ""
                Subject: ""
          RiskExceptionConfiguration:
            BlockedIPRangeList: ""
            SkippedIPRangeList: ""
      properties:
        RiskConfiguration:
          $ref: '#/components/schemas/DescribeRiskConfigurationResponse_RiskConfiguration'
      required:
      - RiskConfiguration
      title: DescribeRiskConfigurationResponse
      type: object
    DescribeRiskConfigurationRequest:
      example:
        UserPoolId: ""
        ClientId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The app client ID.
          title: ClientId
      required:
      - UserPoolId
      title: DescribeRiskConfigurationRequest
      type: object
    DescribeUserImportJobResponse:
      description: Represents the response from the server to the request to describe
        the user import job.
      example:
        UserImportJob:
          Status: ""
          CreationDate: ""
          ImportedUsers: ""
          FailedUsers: ""
          PreSignedUrl: ""
          CloudWatchLogsRoleArn: ""
          JobName: ""
          StartDate: ""
          UserPoolId: ""
          SkippedUsers: ""
          CompletionMessage: ""
          CompletionDate: ""
          JobId: ""
      properties:
        UserImportJob:
          $ref: '#/components/schemas/CreateUserImportJobResponse_UserImportJob'
      title: DescribeUserImportJobResponse
      type: object
    DescribeUserImportJobRequest:
      description: Represents the request to describe the user import job.
      example:
        UserPoolId: ""
        JobId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool that the users are being
              imported into.
          title: UserPoolId
        JobId:
          allOf:
          - $ref: '#/components/schemas/UserImportJobIdType'
          - description: The job ID for the user import job.
          title: JobId
      required:
      - JobId
      - UserPoolId
      title: DescribeUserImportJobRequest
      type: object
    DescribeUserPoolResponse:
      description: Represents the response to describe the user pool.
      example:
        UserPool:
          UserPoolTags: ""
          LastModifiedDate: ""
          CreationDate: ""
          Policies:
            PasswordPolicy:
              RequireNumbers: ""
              MinimumLength: ""
              TemporaryPasswordValidityDays: ""
              RequireUppercase: ""
              RequireLowercase: ""
              RequireSymbols: ""
          SchemaAttributes: ""
          AdminCreateUserConfig:
            UnusedAccountValidityDays: ""
            InviteMessageTemplate:
              EmailMessage: ""
              SMSMessage: ""
              EmailSubject: ""
            AllowAdminCreateUserOnly: ""
          UsernameConfiguration:
            CaseSensitive: ""
          Name: ""
          SmsVerificationMessage: ""
          UserAttributeUpdateSettings:
            AttributesRequireVerificationBeforeUpdate: ""
          SmsConfigurationFailure: ""
          EmailConfiguration:
            ReplyToEmailAddress: ""
            ConfigurationSet: ""
            EmailSendingAccount: ""
            SourceArn: ""
            From: ""
          SmsConfiguration:
            SnsRegion: ""
            ExternalId: ""
            SnsCallerArn: ""
          EmailVerificationSubject: ""
          AccountRecoverySetting:
            RecoveryMechanisms: ""
          Status: ""
          VerificationMessageTemplate:
            EmailMessageByLink: ""
            EmailMessage: ""
            SmsMessage: ""
            EmailSubject: ""
            DefaultEmailOption: ""
            EmailSubjectByLink: ""
          MfaConfiguration: ""
          EmailConfigurationFailure: ""
          DeletionProtection: ""
          SmsAuthenticationMessage: ""
          EstimatedNumberOfUsers: ""
          UserPoolAddOns:
            AdvancedSecurityMode: ""
          CustomDomain: ""
          AliasAttributes: ""
          Id: ""
          LambdaConfig:
            CreateAuthChallenge: ""
            PreSignUp: ""
            KMSKeyID: ""
            UserMigration: ""
            PostAuthentication: ""
            VerifyAuthChallengeResponse: ""
            PreAuthentication: ""
            DefineAuthChallenge: ""
            PreTokenGeneration: ""
            CustomSMSSender:
              LambdaArn: ""
              LambdaVersion: ""
            PostConfirmation: ""
            CustomMessage: ""
            CustomEmailSender:
              LambdaArn: ""
              LambdaVersion: ""
          Domain: ""
          Arn: ""
          AutoVerifiedAttributes: ""
          UsernameAttributes: ""
          EmailVerificationMessage: ""
          DeviceConfiguration:
            DeviceOnlyRememberedOnUserPrompt: ""
            ChallengeRequiredOnNewDevice: ""
      properties:
        UserPool:
          $ref: '#/components/schemas/DescribeUserPoolResponse_UserPool'
      title: DescribeUserPoolResponse
      type: object
    DescribeUserPoolRequest:
      description: Represents the request to describe the user pool.
      example:
        UserPoolId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool you want to describe.
          title: UserPoolId
      required:
      - UserPoolId
      title: DescribeUserPoolRequest
      type: object
    DescribeUserPoolClientResponse:
      description: Represents the response from the server from a request to describe
        the user pool client.
      example:
        UserPoolClient:
          AnalyticsConfiguration:
            ApplicationArn: ""
            UserDataShared: ""
            ExternalId: ""
            ApplicationId: ""
            RoleArn: ""
          LastModifiedDate: ""
          CreationDate: ""
          CallbackURLs: ""
          IdTokenValidity: ""
          TokenValidityUnits:
            IdToken: ""
            RefreshToken: ""
            AccessToken: ""
          ReadAttributes: ""
          DefaultRedirectURI: ""
          AllowedOAuthFlowsUserPoolClient: ""
          ClientName: ""
          ExplicitAuthFlows: ""
          ClientId: ""
          AccessTokenValidity: ""
          EnableTokenRevocation: ""
          EnablePropagateAdditionalUserContextData: ""
          AllowedOAuthScopes: ""
          AuthSessionValidity: ""
          SupportedIdentityProviders: ""
          UserPoolId: ""
          AllowedOAuthFlows: ""
          ClientSecret: ""
          LogoutURLs: ""
          RefreshTokenValidity: ""
          WriteAttributes: ""
          PreventUserExistenceErrors: ""
      properties:
        UserPoolClient:
          $ref: '#/components/schemas/DescribeUserPoolClientResponse_UserPoolClient'
      title: DescribeUserPoolClientResponse
      type: object
    DescribeUserPoolClientRequest:
      description: Represents the request to describe a user pool client.
      example:
        UserPoolId: ""
        ClientId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool you want to describe.
          title: UserPoolId
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The app client ID of the app associated with the user pool.
          title: ClientId
      required:
      - ClientId
      - UserPoolId
      title: DescribeUserPoolClientRequest
      type: object
    DescribeUserPoolDomainResponse:
      example:
        DomainDescription:
          CloudFrontDistribution: ""
          Status: ""
          UserPoolId: ""
          AWSAccountId: ""
          S3Bucket: ""
          Version: ""
          CustomDomainConfig:
            CertificateArn: ""
          Domain: ""
      properties:
        DomainDescription:
          $ref: '#/components/schemas/DescribeUserPoolDomainResponse_DomainDescription'
      title: DescribeUserPoolDomainResponse
      type: object
    DescribeUserPoolDomainRequest:
      example:
        Domain: ""
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/DomainType'
          - description: "The domain string. For custom domains, this is the fully-qualified\
              \ domain name, such as <code>auth.example.com</code>. For Amazon Cognito\
              \ prefix domains, this is the prefix alone, such as <code>auth</code>."
          title: Domain
      required:
      - Domain
      title: DescribeUserPoolDomainRequest
      type: object
    ForgetDeviceRequest:
      description: Represents the request to forget the device.
      example:
        AccessToken: ""
        DeviceKey: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose registered device you want to forget.
          title: AccessToken
        DeviceKey:
          allOf:
          - $ref: '#/components/schemas/DeviceKeyType'
          - description: The device key.
          title: DeviceKey
      required:
      - DeviceKey
      title: ForgetDeviceRequest
      type: object
    ForgotPasswordResponse:
      description: The response from Amazon Cognito to a request to reset a password.
      example:
        CodeDeliveryDetails:
          Destination: ""
          DeliveryMedium: ""
          AttributeName: ""
      properties:
        CodeDeliveryDetails:
          $ref: '#/components/schemas/ForgotPasswordResponse_CodeDeliveryDetails'
      title: ForgotPasswordResponse
      type: object
    ForgotPasswordRequest:
      description: Represents the request to reset a user's password.
      example:
        Username: ""
        SecretHash: ""
        UserContextData:
          IpAddress: ""
          EncodedData: ""
        ClientMetadata: ""
        ClientId: ""
        AnalyticsMetadata:
          AnalyticsEndpointId: ""
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The ID of the client associated with the user pool.
          title: ClientId
        SecretHash:
          allOf:
          - $ref: '#/components/schemas/SecretHashType'
          - description: A keyed-hash message authentication code (HMAC) calculated
              using the secret key of a user pool client and username plus the client
              ID in the message.
          title: SecretHash
        UserContextData:
          $ref: '#/components/schemas/ConfirmForgotPasswordRequest_UserContextData'
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user for whom you want to enter a code
              to reset a forgotten password.
          title: Username
        AnalyticsMetadata:
          $ref: '#/components/schemas/ForgotPasswordRequest_AnalyticsMetadata'
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>You\
              \ create custom workflows by assigning Lambda functions to user pool\
              \ triggers. When you use the ForgotPassword API action, Amazon Cognito\
              \ invokes any functions that are assigned to the following triggers:\
              \ <i>pre sign-up</i>, <i>custom message</i>, and <i>user migration</i>.\
              \ When Amazon Cognito invokes any of these functions, it passes a JSON\
              \ payload, which the function receives as input. This payload contains\
              \ a <code>clientMetadata</code> attribute, which provides the data that\
              \ you assigned to the ClientMetadata parameter in your ForgotPassword\
              \ request. In your function code in Lambda, you can process the <code>clientMetadata</code>\
              \ value to enhance your workflow for your specific needs.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - ClientId
      - Username
      title: ForgotPasswordRequest
      type: object
    GetCSVHeaderResponse:
      description: Represents the response from the server to the request to get the
        header information of the CSV file for the user import job.
      example:
        UserPoolId: ""
        CSVHeader: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool that the users are to
              be imported into.
          title: UserPoolId
        CSVHeader:
          allOf:
          - $ref: '#/components/schemas/ListOfStringTypes'
          - description: The header information of the CSV file for the user import
              job.
          title: CSVHeader
      title: GetCSVHeaderResponse
      type: object
    GetCSVHeaderRequest:
      description: Represents the request to get the header information of the CSV
        file for the user import job.
      example:
        UserPoolId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool that the users are to
              be imported into.
          title: UserPoolId
      required:
      - UserPoolId
      title: GetCSVHeaderRequest
      type: object
    GetDeviceResponse:
      description: Gets the device response.
      example:
        Device:
          DeviceLastModifiedDate: ""
          DeviceAttributes: ""
          DeviceKey: ""
          DeviceCreateDate: ""
          DeviceLastAuthenticatedDate: ""
      properties:
        Device:
          $ref: '#/components/schemas/AdminGetDeviceResponse_Device'
      required:
      - Device
      title: GetDeviceResponse
      type: object
    GetDeviceRequest:
      description: Represents the request to get the device.
      example:
        AccessToken: ""
        DeviceKey: ""
      properties:
        DeviceKey:
          allOf:
          - $ref: '#/components/schemas/DeviceKeyType'
          - description: The device key.
          title: DeviceKey
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose device information you want to request.
          title: AccessToken
      required:
      - DeviceKey
      title: GetDeviceRequest
      type: object
    GetGroupResponse:
      example:
        Group:
          GroupName: ""
          LastModifiedDate: ""
          CreationDate: ""
          UserPoolId: ""
          Description: ""
          Precedence: ""
          RoleArn: ""
      properties:
        Group:
          $ref: '#/components/schemas/CreateGroupResponse_Group'
      title: GetGroupResponse
      type: object
    GetGroupRequest:
      example:
        GroupName: ""
        UserPoolId: ""
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupNameType'
          - description: The name of the group.
          title: GroupName
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
      required:
      - GroupName
      - UserPoolId
      title: GetGroupRequest
      type: object
    GetIdentityProviderByIdentifierResponse:
      example:
        IdentityProvider:
          ProviderName: ""
          LastModifiedDate: ""
          CreationDate: ""
          UserPoolId: ""
          AttributeMapping: ""
          ProviderDetails: ""
          ProviderType: ""
          IdpIdentifiers: ""
      properties:
        IdentityProvider:
          $ref: '#/components/schemas/DescribeIdentityProviderResponse_IdentityProvider'
      required:
      - IdentityProvider
      title: GetIdentityProviderByIdentifierResponse
      type: object
    GetIdentityProviderByIdentifierRequest:
      example:
        UserPoolId: ""
        IdpIdentifier: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        IdpIdentifier:
          allOf:
          - $ref: '#/components/schemas/IdpIdentifierType'
          - description: The IdP identifier.
          title: IdpIdentifier
      required:
      - IdpIdentifier
      - UserPoolId
      title: GetIdentityProviderByIdentifierRequest
      type: object
    GetLogDeliveryConfigurationResponse:
      example:
        LogDeliveryConfiguration:
          UserPoolId: ""
          LogConfigurations: ""
      properties:
        LogDeliveryConfiguration:
          $ref: '#/components/schemas/GetLogDeliveryConfigurationResponse_LogDeliveryConfiguration'
      title: GetLogDeliveryConfigurationResponse
      type: object
    GetLogDeliveryConfigurationRequest:
      example:
        UserPoolId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The ID of the user pool where you want to view detailed activity
              logging configuration.
          title: UserPoolId
      required:
      - UserPoolId
      title: GetLogDeliveryConfigurationRequest
      type: object
    GetSigningCertificateResponse:
      description: Response from Amazon Cognito for a signing certificate request.
      example:
        Certificate: ""
      properties:
        Certificate:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The signing certificate.
          title: Certificate
      title: GetSigningCertificateResponse
      type: object
    GetSigningCertificateRequest:
      description: Request to get a signing certificate from Amazon Cognito.
      example:
        UserPoolId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
      required:
      - UserPoolId
      title: GetSigningCertificateRequest
      type: object
    GetUICustomizationResponse:
      example:
        UICustomization:
          LastModifiedDate: ""
          CreationDate: ""
          CSS: ""
          CSSVersion: ""
          UserPoolId: ""
          ClientId: ""
          ImageUrl: ""
      properties:
        UICustomization:
          $ref: '#/components/schemas/GetUICustomizationResponse_UICustomization'
      required:
      - UICustomization
      title: GetUICustomizationResponse
      type: object
    GetUICustomizationRequest:
      example:
        UserPoolId: ""
        ClientId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The client ID for the client app.
          title: ClientId
      required:
      - UserPoolId
      title: GetUICustomizationRequest
      type: object
    GetUserResponse:
      description: Represents the response from the server from the request to get
        information about the user.
      example:
        UserMFASettingList: ""
        Username: ""
        MFAOptions: ""
        UserAttributes: ""
        PreferredMfaSetting: ""
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The username of the user that you requested.
          title: Username
        UserAttributes:
          allOf:
          - $ref: '#/components/schemas/AttributeListType'
          - description: "<p>An array of name-value pairs representing user attributes.</p>\
              \ <p>For custom attributes, you must prepend the <code>custom:</code>\
              \ prefix to the attribute name.</p>"
          title: UserAttributes
        MFAOptions:
          allOf:
          - $ref: '#/components/schemas/MFAOptionListType'
          - description: " <i>This response parameter is no longer supported.</i>\
              \ It provides information only about SMS MFA configurations. It doesn't\
              \ provide information about time-based one-time password (TOTP) software\
              \ token MFA configurations. To look up information about either type\
              \ of MFA configuration, use UserMFASettingList instead."
          title: MFAOptions
        PreferredMfaSetting:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The user's preferred MFA setting.
          title: PreferredMfaSetting
        UserMFASettingList:
          allOf:
          - $ref: '#/components/schemas/UserMFASettingListType'
          - description: The MFA options that are activated for the user. The possible
              values in this list are <code>SMS_MFA</code> and <code>SOFTWARE_TOKEN_MFA</code>.
          title: UserMFASettingList
      required:
      - UserAttributes
      - Username
      title: GetUserResponse
      type: object
    GetUserRequest:
      description: Represents the request to get information about the user.
      example:
        AccessToken: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A non-expired access token for the user whose information
              you want to query.
          title: AccessToken
      required:
      - AccessToken
      title: GetUserRequest
      type: object
    GetUserAttributeVerificationCodeResponse:
      description: The verification code response returned by the server response
        to get the user attribute verification code.
      example:
        CodeDeliveryDetails:
          Destination: ""
          DeliveryMedium: ""
          AttributeName: ""
      properties:
        CodeDeliveryDetails:
          $ref: '#/components/schemas/GetUserAttributeVerificationCodeResponse_CodeDeliveryDetails'
      title: GetUserAttributeVerificationCodeResponse
      type: object
    GetUserAttributeVerificationCodeRequest:
      description: Represents the request to get user attribute verification.
      example:
        AccessToken: ""
        ClientMetadata: ""
        AttributeName: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A non-expired access token for the user whose attribute verification
              code you want to generate.
          title: AccessToken
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/AttributeNameType'
          - description: The attribute name returned by the server response to get
              the user attribute verification code.
          title: AttributeName
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>You\
              \ create custom workflows by assigning Lambda functions to user pool\
              \ triggers. When you use the GetUserAttributeVerificationCode API action,\
              \ Amazon Cognito invokes the function that is assigned to the <i>custom\
              \ message</i> trigger. When Amazon Cognito invokes this function, it\
              \ passes a JSON payload, which the function receives as input. This\
              \ payload contains a <code>clientMetadata</code> attribute, which provides\
              \ the data that you assigned to the ClientMetadata parameter in your\
              \ GetUserAttributeVerificationCode request. In your function code in\
              \ Lambda, you can process the <code>clientMetadata</code> value to enhance\
              \ your workflow for your specific needs.</p> <p>For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - AccessToken
      - AttributeName
      title: GetUserAttributeVerificationCodeRequest
      type: object
    GetUserPoolMfaConfigResponse:
      example:
        SmsMfaConfiguration:
          SmsConfiguration:
            SnsRegion: ""
            ExternalId: ""
            SnsCallerArn: ""
          SmsAuthenticationMessage: ""
        MfaConfiguration: ""
        SoftwareTokenMfaConfiguration:
          Enabled: ""
      properties:
        SmsMfaConfiguration:
          $ref: '#/components/schemas/GetUserPoolMfaConfigResponse_SmsMfaConfiguration'
        SoftwareTokenMfaConfiguration:
          $ref: '#/components/schemas/GetUserPoolMfaConfigResponse_SoftwareTokenMfaConfiguration'
        MfaConfiguration:
          allOf:
          - $ref: '#/components/schemas/UserPoolMfaType'
          - description: <p>The multi-factor authentication (MFA) configuration. Valid
              values include:</p> <ul> <li> <p> <code>OFF</code> MFA won't be used
              for any users.</p> </li> <li> <p> <code>ON</code> MFA is required for
              all users to sign in.</p> </li> <li> <p> <code>OPTIONAL</code> MFA will
              be required only for individual users who have an MFA factor activated.</p>
              </li> </ul>
          title: MfaConfiguration
      title: GetUserPoolMfaConfigResponse
      type: object
    GetUserPoolMfaConfigRequest:
      example:
        UserPoolId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
      required:
      - UserPoolId
      title: GetUserPoolMfaConfigRequest
      type: object
    GlobalSignOutResponse:
      description: The response to the request to sign out all devices.
      properties: {}
      type: object
    GlobalSignOutRequest:
      description: Represents the request to sign out all devices.
      example:
        AccessToken: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              who you want to sign out.
          title: AccessToken
      required:
      - AccessToken
      title: GlobalSignOutRequest
      type: object
    InitiateAuthResponse:
      description: Initiates the authentication response.
      example:
        ChallengeParameters: ""
        ChallengeName: ""
        Session: ""
        AuthenticationResult:
          NewDeviceMetadata:
            DeviceKey: ""
            DeviceGroupKey: ""
          IdToken: ""
          ExpiresIn: ""
          TokenType: ""
          RefreshToken: ""
          AccessToken: ""
      properties:
        ChallengeName:
          allOf:
          - $ref: '#/components/schemas/ChallengeNameType'
          - description: "<p>The name of the challenge that you're responding to with\
              \ this call. This name is returned in the <code>AdminInitiateAuth</code>\
              \ response if you must pass another challenge.</p> <p>Valid values include\
              \ the following:</p> <note> <p>All of the following challenges require\
              \ <code>USERNAME</code> and <code>SECRET_HASH</code> (if applicable)\
              \ in the parameters.</p> </note> <ul> <li> <p> <code>SMS_MFA</code>:\
              \ Next challenge is to supply an <code>SMS_MFA_CODE</code>, delivered\
              \ via SMS.</p> </li> <li> <p> <code>PASSWORD_VERIFIER</code>: Next challenge\
              \ is to supply <code>PASSWORD_CLAIM_SIGNATURE</code>, <code>PASSWORD_CLAIM_SECRET_BLOCK</code>,\
              \ and <code>TIMESTAMP</code> after the client-side SRP calculations.</p>\
              \ </li> <li> <p> <code>CUSTOM_CHALLENGE</code>: This is returned if\
              \ your custom authentication flow determines that the user should pass\
              \ another challenge before tokens are issued.</p> </li> <li> <p> <code>DEVICE_SRP_AUTH</code>:\
              \ If device tracking was activated on your user pool and the previous\
              \ challenges were passed, this challenge is returned so that Amazon\
              \ Cognito can start tracking this device.</p> </li> <li> <p> <code>DEVICE_PASSWORD_VERIFIER</code>:\
              \ Similar to <code>PASSWORD_VERIFIER</code>, but for devices only.</p>\
              \ </li> <li> <p> <code>NEW_PASSWORD_REQUIRED</code>: For users who are\
              \ required to change their passwords after successful first login. </p>\
              \ <p>Respond to this challenge with <code>NEW_PASSWORD</code> and any\
              \ required attributes that Amazon Cognito returned in the <code>requiredAttributes</code>\
              \ parameter. You can also set values for attributes that aren't required\
              \ by your user pool and that your app client can write. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RespondToAuthChallenge.html\"\
              >RespondToAuthChallenge</a>.</p> <note> <p>In a <code>NEW_PASSWORD_REQUIRED</code>\
              \ challenge response, you can't modify a required attribute that already\
              \ has a value. In <code>RespondToAuthChallenge</code>, set a value for\
              \ any keys that Amazon Cognito returned in the <code>requiredAttributes</code>\
              \ parameter, then use the <code>UpdateUserAttributes</code> API operation\
              \ to modify the value of any additional attributes.</p> </note> </li>\
              \ <li> <p> <code>MFA_SETUP</code>: For users who are required to setup\
              \ an MFA factor before they can sign in. The MFA types activated for\
              \ the user pool will be listed in the challenge parameters <code>MFA_CAN_SETUP</code>\
              \ value. </p> <p> To set up software token MFA, use the session returned\
              \ here from <code>InitiateAuth</code> as an input to <code>AssociateSoftwareToken</code>.\
              \ Use the session returned by <code>VerifySoftwareToken</code> as an\
              \ input to <code>RespondToAuthChallenge</code> with challenge name <code>MFA_SETUP</code>\
              \ to complete sign-in. To set up SMS MFA, an administrator should help\
              \ the user to add a phone number to their account, and then the user\
              \ should call <code>InitiateAuth</code> again to restart sign-in.</p>\
              \ </li> </ul>"
          title: ChallengeName
        Session:
          allOf:
          - $ref: '#/components/schemas/SessionType'
          - description: "The session that should pass both ways in challenge-response\
              \ calls to the service. If the caller must pass another challenge, they\
              \ return a session with other challenge parameters. This session should\
              \ be passed as it is to the next <code>RespondToAuthChallenge</code>\
              \ API call."
          title: Session
        ChallengeParameters:
          allOf:
          - $ref: '#/components/schemas/ChallengeParametersType'
          - description: <p>The challenge parameters. These are returned in the <code>InitiateAuth</code>
              response if you must pass another challenge. The responses in this parameter
              should be used to compute inputs to the next call (<code>RespondToAuthChallenge</code>).
              </p> <p>All challenges require <code>USERNAME</code> and <code>SECRET_HASH</code>
              (if applicable).</p>
          title: ChallengeParameters
        AuthenticationResult:
          $ref: '#/components/schemas/InitiateAuthResponse_AuthenticationResult'
      title: InitiateAuthResponse
      type: object
    InitiateAuthRequest:
      description: Initiates the authentication request.
      example:
        AuthParameters: ""
        AuthFlow: ""
        UserContextData:
          IpAddress: ""
          EncodedData: ""
        ClientMetadata: ""
        ClientId: ""
        AnalyticsMetadata:
          AnalyticsEndpointId: ""
      properties:
        AuthFlow:
          allOf:
          - $ref: '#/components/schemas/AuthFlowType'
          - description: "<p>The authentication flow for this call to run. The API\
              \ action will depend on this value. For example:</p> <ul> <li> <p> <code>REFRESH_TOKEN_AUTH</code>\
              \ takes in a valid refresh token and returns new tokens.</p> </li> <li>\
              \ <p> <code>USER_SRP_AUTH</code> takes in <code>USERNAME</code> and\
              \ <code>SRP_A</code> and returns the SRP variables to be used for next\
              \ challenge execution.</p> </li> <li> <p> <code>USER_PASSWORD_AUTH</code>\
              \ takes in <code>USERNAME</code> and <code>PASSWORD</code> and returns\
              \ the next challenge or tokens.</p> </li> </ul> <p>Valid values include:</p>\
              \ <ul> <li> <p> <code>USER_SRP_AUTH</code>: Authentication flow for\
              \ the Secure Remote Password (SRP) protocol.</p> </li> <li> <p> <code>REFRESH_TOKEN_AUTH</code>/<code>REFRESH_TOKEN</code>:\
              \ Authentication flow for refreshing the access token and ID token by\
              \ supplying a valid refresh token.</p> </li> <li> <p> <code>CUSTOM_AUTH</code>:\
              \ Custom authentication flow.</p> </li> <li> <p> <code>USER_PASSWORD_AUTH</code>:\
              \ Non-SRP authentication flow; user name and password are passed directly.\
              \ If a user migration Lambda trigger is set, this flow will invoke the\
              \ user migration Lambda if it doesn't find the user name in the user\
              \ pool. </p> </li> </ul> <p> <code>ADMIN_NO_SRP_AUTH</code> isn't a\
              \ valid value.</p>"
          title: AuthFlow
        AuthParameters:
          allOf:
          - $ref: '#/components/schemas/AuthParametersType'
          - description: "<p>The authentication parameters. These are inputs corresponding\
              \ to the <code>AuthFlow</code> that you're invoking. The required values\
              \ depend on the value of <code>AuthFlow</code>:</p> <ul> <li> <p>For\
              \ <code>USER_SRP_AUTH</code>: <code>USERNAME</code> (required), <code>SRP_A</code>\
              \ (required), <code>SECRET_HASH</code> (required if the app client is\
              \ configured with a client secret), <code>DEVICE_KEY</code>.</p> </li>\
              \ <li> <p>For <code>USER_PASSWORD_AUTH</code>: <code>USERNAME</code>\
              \ (required), <code>PASSWORD</code> (required), <code>SECRET_HASH</code>\
              \ (required if the app client is configured with a client secret), <code>DEVICE_KEY</code>.</p>\
              \ </li> <li> <p>For <code>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</code>: <code>REFRESH_TOKEN</code>\
              \ (required), <code>SECRET_HASH</code> (required if the app client is\
              \ configured with a client secret), <code>DEVICE_KEY</code>.</p> </li>\
              \ <li> <p>For <code>CUSTOM_AUTH</code>: <code>USERNAME</code> (required),\
              \ <code>SECRET_HASH</code> (if app client is configured with client\
              \ secret), <code>DEVICE_KEY</code>. To start the authentication flow\
              \ with password verification, include <code>ChallengeName: SRP_A</code>\
              \ and <code>SRP_A: (The SRP_A Value)</code>.</p> </li> </ul> <p>For\
              \ more information about <code>SECRET_HASH</code>, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/signing-up-users-in-your-app.html#cognito-user-pools-computing-secret-hash\"\
              >Computing secret hash values</a>. For information about <code>DEVICE_KEY</code>,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-device-tracking.html\"\
              >Working with user devices in your user pool</a>.</p>"
          title: AuthParameters
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for certain custom workflows that this action triggers.</p>\
              \ <p>You create custom workflows by assigning Lambda functions to user\
              \ pool triggers. When you use the InitiateAuth API action, Amazon Cognito\
              \ invokes the Lambda functions that are specified for various triggers.\
              \ The ClientMetadata value is passed as input to the functions for only\
              \ the following triggers:</p> <ul> <li> <p>Pre signup</p> </li> <li>\
              \ <p>Pre authentication</p> </li> <li> <p>User migration</p> </li> </ul>\
              \ <p>When Amazon Cognito invokes the functions for these triggers, it\
              \ passes a JSON payload, which the function receives as input. This\
              \ payload contains a <code>validationData</code> attribute, which provides\
              \ the data that you assigned to the ClientMetadata parameter in your\
              \ InitiateAuth request. In your function code in Lambda, you can process\
              \ the <code>validationData</code> value to enhance your workflow for\
              \ your specific needs.</p> <p>When you use the InitiateAuth API action,\
              \ Amazon Cognito also invokes the functions for the following triggers,\
              \ but it doesn't provide the ClientMetadata value as input:</p> <ul>\
              \ <li> <p>Post authentication</p> </li> <li> <p>Custom message</p> </li>\
              \ <li> <p>Pre token generation</p> </li> <li> <p>Create auth challenge</p>\
              \ </li> <li> <p>Define auth challenge</p> </li> <li> <p>Verify auth\
              \ challenge</p> </li> </ul> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The app client ID.
          title: ClientId
        AnalyticsMetadata:
          $ref: '#/components/schemas/InitiateAuthRequest_AnalyticsMetadata'
        UserContextData:
          $ref: '#/components/schemas/ConfirmForgotPasswordRequest_UserContextData'
      required:
      - AuthFlow
      - ClientId
      title: InitiateAuthRequest
      type: object
    ListDevicesResponse:
      description: Represents the response to list devices.
      example:
        Devices: ""
        PaginationToken: ""
      properties:
        Devices:
          allOf:
          - $ref: '#/components/schemas/DeviceListType'
          - description: The devices returned in the list devices response.
          title: Devices
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/SearchPaginationTokenType'
          - description: The pagination token for the list device response.
          title: PaginationToken
      title: ListDevicesResponse
      type: object
    ListDevicesRequest:
      description: Represents the request to list the devices.
      example:
        AccessToken: ""
        Limit: ""
        PaginationToken: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose list of devices you want to view.
          title: AccessToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/QueryLimitType'
          - description: The limit of the device request.
          title: Limit
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/SearchPaginationTokenType'
          - description: The pagination token for the list request.
          title: PaginationToken
      required:
      - AccessToken
      title: ListDevicesRequest
      type: object
    ListGroupsResponse:
      example:
        NextToken: ""
        Groups: ""
      properties:
        Groups:
          allOf:
          - $ref: '#/components/schemas/GroupListType'
          - description: The group objects for the groups.
          title: Groups
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKey'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
          title: NextToken
      title: ListGroupsResponse
      type: object
    ListGroupsRequest:
      example:
        UserPoolId: ""
        NextToken: ""
        Limit: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        Limit:
          allOf:
          - $ref: '#/components/schemas/QueryLimitType'
          - description: The limit of the request to list groups.
          title: Limit
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKey'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
          title: NextToken
      required:
      - UserPoolId
      title: ListGroupsRequest
      type: object
    ListIdentityProvidersResponse:
      example:
        NextToken: ""
        Providers: ""
      properties:
        Providers:
          allOf:
          - $ref: '#/components/schemas/ProvidersListType'
          - description: A list of IdP objects.
          title: Providers
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKeyType'
          - description: A pagination token.
          title: NextToken
      required:
      - Providers
      title: ListIdentityProvidersResponse
      type: object
    ListIdentityProvidersRequest:
      example:
        UserPoolId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListProvidersLimitType'
          - description: The maximum number of IdPs to return.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKeyType'
          - description: A pagination token.
          title: NextToken
      required:
      - UserPoolId
      title: ListIdentityProvidersRequest
      type: object
    ListResourceServersResponse:
      example:
        NextToken: ""
        ResourceServers: ""
      properties:
        ResourceServers:
          allOf:
          - $ref: '#/components/schemas/ResourceServersListType'
          - description: The resource servers.
          title: ResourceServers
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKeyType'
          - description: A pagination token.
          title: NextToken
      required:
      - ResourceServers
      title: ListResourceServersResponse
      type: object
    ListResourceServersRequest:
      example:
        UserPoolId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListResourceServersLimitType'
          - description: The maximum number of resource servers to return.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKeyType'
          - description: A pagination token.
          title: NextToken
      required:
      - UserPoolId
      title: ListResourceServersRequest
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/UserPoolTagsType'
          - description: The tags that are assigned to the user pool.
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The Amazon Resource Name (ARN) of the user pool that the
              tags are assigned to.
          title: ResourceArn
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    ListUserImportJobsResponse:
      description: Represents the response from the server to the request to list
        the user import jobs.
      example:
        UserImportJobs: ""
        PaginationToken: ""
      properties:
        UserImportJobs:
          allOf:
          - $ref: '#/components/schemas/UserImportJobsListType'
          - description: The user import jobs.
          title: UserImportJobs
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKeyType'
          - description: An identifier that can be used to return the next set of
              user import jobs in the list.
          title: PaginationToken
      title: ListUserImportJobsResponse
      type: object
    ListUserImportJobsRequest:
      description: Represents the request to list the user import jobs.
      example:
        UserPoolId: ""
        MaxResults: ""
        PaginationToken: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool that the users are being
              imported into.
          title: UserPoolId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PoolQueryLimitType'
          - description: The maximum number of import jobs you want the request to
              return.
          title: MaxResults
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKeyType'
          - description: "An identifier that was returned from the previous call to\
              \ <code>ListUserImportJobs</code>, which can be used to return the next\
              \ set of import jobs in the list."
          title: PaginationToken
      required:
      - MaxResults
      - UserPoolId
      title: ListUserImportJobsRequest
      type: object
    ListUserPoolClientsResponse:
      description: Represents the response from the server that lists user pool clients.
      example:
        NextToken: ""
        UserPoolClients: ""
      properties:
        UserPoolClients:
          allOf:
          - $ref: '#/components/schemas/UserPoolClientListType'
          - description: The user pool clients in the response that lists user pool
              clients.
          title: UserPoolClients
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKey'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
          title: NextToken
      title: ListUserPoolClientsResponse
      type: object
    ListUserPoolClientsRequest:
      description: Represents the request to list the user pool clients.
      example:
        UserPoolId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to list
              user pool clients.
          title: UserPoolId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/QueryLimit'
          - description: The maximum number of results you want the request to return
              when listing the user pool clients.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKey'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
          title: NextToken
      required:
      - UserPoolId
      title: ListUserPoolClientsRequest
      type: object
    ListUserPoolsResponse:
      description: Represents the response to list user pools.
      example:
        NextToken: ""
        UserPools: ""
      properties:
        UserPools:
          allOf:
          - $ref: '#/components/schemas/UserPoolListType'
          - description: The user pools from the response to list users.
          title: UserPools
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKeyType'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
          title: NextToken
      title: ListUserPoolsResponse
      type: object
    ListUserPoolsRequest:
      description: Represents the request to list user pools.
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKeyType'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PoolQueryLimitType'
          - description: The maximum number of results you want the request to return
              when listing the user pools.
          title: MaxResults
      required:
      - MaxResults
      title: ListUserPoolsRequest
      type: object
    ListUsersResponse:
      description: The response from the request to list users.
      example:
        Users: ""
        PaginationToken: ""
      properties:
        Users:
          allOf:
          - $ref: '#/components/schemas/UsersListType'
          - description: "<p>A list of the user pool users, and their attributes,\
              \ that match your query.</p> <note> <p>Amazon Cognito creates a profile\
              \ in your user pool for each native user in your user pool, and each\
              \ unique user ID from your third-party identity providers (IdPs). When\
              \ you link users with the <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminLinkProviderForUser.html\"\
              >AdminLinkProviderForUser</a> API operation, the output of <code>ListUsers</code>\
              \ displays both the IdP user and the native user that you linked. You\
              \ can identify IdP users in the <code>Users</code> object of this API\
              \ response by the IdP prefix that Amazon Cognito appends to <code>Username</code>.</p>\
              \ </note>"
          title: Users
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/SearchPaginationTokenType'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
          title: PaginationToken
      title: ListUsersResponse
      type: object
    ListUsersRequest:
      description: Represents the request to list users.
      example:
        UserPoolId: ""
        Filter: ""
        AttributesToGet: ""
        Limit: ""
        PaginationToken: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool on which the search should
              be performed.
          title: UserPoolId
        AttributesToGet:
          allOf:
          - $ref: '#/components/schemas/SearchedAttributeNamesListType'
          - description: "A JSON array of user attribute names, for example <code>given_name</code>,\
              \ that you want Amazon Cognito to include in the response for each user.\
              \ When you don't provide an <code>AttributesToGet</code> parameter,\
              \ Amazon Cognito returns all attributes for each user."
          title: AttributesToGet
        Limit:
          allOf:
          - $ref: '#/components/schemas/QueryLimitType'
          - description: Maximum number of users to be returned.
          title: Limit
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/SearchPaginationTokenType'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
          title: PaginationToken
        Filter:
          allOf:
          - $ref: '#/components/schemas/UserFilterType'
          - description: "<p>A filter string of the form \"<i>AttributeName</i> <i>Filter-Type</i>\
              \ \"<i>AttributeValue</i>\"\". Quotation marks within the filter string\
              \ must be escaped using the backslash (\\) character. For example, \"\
              <code>family_name</code> = \\\"Reddy\\\"\".</p> <ul> <li> <p> <i>AttributeName</i>:\
              \ The name of the attribute to search for. You can only search for one\
              \ attribute at a time.</p> </li> <li> <p> <i>Filter-Type</i>: For an\
              \ exact match, use =, for example, \"<code>given_name</code> = \\\"\
              Jon\\\"\". For a prefix (\"starts with\") match, use ^=, for example,\
              \ \"<code>given_name</code> ^= \\\"Jon\\\"\". </p> </li> <li> <p> <i>AttributeValue</i>:\
              \ The attribute value that must be matched for each user.</p> </li>\
              \ </ul> <p>If the filter string is empty, <code>ListUsers</code> returns\
              \ all users in the user pool.</p> <p>You can only search for the following\
              \ standard attributes:</p> <ul> <li> <p> <code>username</code> (case-sensitive)</p>\
              \ </li> <li> <p> <code>email</code> </p> </li> <li> <p> <code>phone_number</code>\
              \ </p> </li> <li> <p> <code>name</code> </p> </li> <li> <p> <code>given_name</code>\
              \ </p> </li> <li> <p> <code>family_name</code> </p> </li> <li> <p> <code>preferred_username</code>\
              \ </p> </li> <li> <p> <code>cognito:user_status</code> (called <b>Status</b>\
              \ in the Console) (case-insensitive)</p> </li> <li> <p> <code>status\
              \ (called <b>Enabled</b> in the Console) (case-sensitive)</code> </p>\
              \ </li> <li> <p> <code>sub</code> </p> </li> </ul> <p>Custom attributes\
              \ aren't searchable.</p> <note> <p>You can also list users with a client-side\
              \ filter. The server-side filter matches no more than one attribute.\
              \ For an advanced search, use a client-side filter with the <code>--query</code>\
              \ parameter of the <code>list-users</code> action in the CLI. When you\
              \ use a client-side filter, ListUsers returns a paginated list of zero\
              \ or more users. You can receive multiple pages in a row with zero results.\
              \ Repeat the query with each pagination token that is returned until\
              \ you receive a null pagination token value, and then review the combined\
              \ result. </p> <p>For more information about server-side and client-side\
              \ filtering, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html\"\
              >FilteringCLI output</a> in the <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html\"\
              >Command Line Interface User Guide</a>. </p> </note> <p>For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-manage-user-accounts.html#cognito-user-pools-searching-for-users-using-listusers-api\"\
              >Searching for Users Using the ListUsers API</a> and <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-manage-user-accounts.html#cognito-user-pools-searching-for-users-listusers-api-examples\"\
              >Examples of Using the ListUsers API</a> in the <i>Amazon Cognito Developer\
              \ Guide</i>.</p>"
          title: Filter
      required:
      - UserPoolId
      title: ListUsersRequest
      type: object
    ListUsersInGroupResponse:
      example:
        NextToken: ""
        Users: ""
      properties:
        Users:
          allOf:
          - $ref: '#/components/schemas/UsersListType'
          - description: The users returned in the request to list users.
          title: Users
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKey'
          - description: An identifier that you can use in a later request to return
              the next set of items in the list.
          title: NextToken
      title: ListUsersInGroupResponse
      type: object
    ListUsersInGroupRequest:
      example:
        GroupName: ""
        UserPoolId: ""
        NextToken: ""
        Limit: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupNameType'
          - description: The name of the group.
          title: GroupName
        Limit:
          allOf:
          - $ref: '#/components/schemas/QueryLimitType'
          - description: The limit of the request to list users.
          title: Limit
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationKey'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
          title: NextToken
      required:
      - GroupName
      - UserPoolId
      title: ListUsersInGroupRequest
      type: object
    ResendConfirmationCodeResponse:
      description: The response from the server when Amazon Cognito makes the request
        to resend a confirmation code.
      example:
        CodeDeliveryDetails:
          Destination: ""
          DeliveryMedium: ""
          AttributeName: ""
      properties:
        CodeDeliveryDetails:
          $ref: '#/components/schemas/ResendConfirmationCodeResponse_CodeDeliveryDetails'
      title: ResendConfirmationCodeResponse
      type: object
    ResendConfirmationCodeRequest:
      description: Represents the request to resend the confirmation code.
      example:
        Username: ""
        SecretHash: ""
        UserContextData:
          IpAddress: ""
          EncodedData: ""
        ClientMetadata: ""
        ClientId: ""
        AnalyticsMetadata:
          AnalyticsEndpointId: ""
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The ID of the client associated with the user pool.
          title: ClientId
        SecretHash:
          allOf:
          - $ref: '#/components/schemas/SecretHashType'
          - description: A keyed-hash message authentication code (HMAC) calculated
              using the secret key of a user pool client and username plus the client
              ID in the message.
          title: SecretHash
        UserContextData:
          $ref: '#/components/schemas/ConfirmForgotPasswordRequest_UserContextData'
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The <code>username</code> attribute of the user to whom you
              want to resend a confirmation code.
          title: Username
        AnalyticsMetadata:
          $ref: '#/components/schemas/ResendConfirmationCodeRequest_AnalyticsMetadata'
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>You\
              \ create custom workflows by assigning Lambda functions to user pool\
              \ triggers. When you use the ResendConfirmationCode API action, Amazon\
              \ Cognito invokes the function that is assigned to the <i>custom message</i>\
              \ trigger. When Amazon Cognito invokes this function, it passes a JSON\
              \ payload, which the function receives as input. This payload contains\
              \ a <code>clientMetadata</code> attribute, which provides the data that\
              \ you assigned to the ClientMetadata parameter in your ResendConfirmationCode\
              \ request. In your function code in Lambda, you can process the <code>clientMetadata</code>\
              \ value to enhance your workflow for your specific needs.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - ClientId
      - Username
      title: ResendConfirmationCodeRequest
      type: object
    RespondToAuthChallengeResponse:
      description: The response to respond to the authentication challenge.
      example:
        ChallengeParameters: ""
        ChallengeName: ""
        Session: ""
        AuthenticationResult:
          NewDeviceMetadata:
            DeviceKey: ""
            DeviceGroupKey: ""
          IdToken: ""
          ExpiresIn: ""
          TokenType: ""
          RefreshToken: ""
          AccessToken: ""
      properties:
        ChallengeName:
          allOf:
          - $ref: '#/components/schemas/ChallengeNameType'
          - description: "The challenge name. For more information, see <a href=\"\
              https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html\"\
              >InitiateAuth</a>."
          title: ChallengeName
        Session:
          allOf:
          - $ref: '#/components/schemas/SessionType'
          - description: "The session that should be passed both ways in challenge-response\
              \ calls to the service. If the caller must pass another challenge, they\
              \ return a session with other challenge parameters. This session should\
              \ be passed as it is to the next <code>RespondToAuthChallenge</code>\
              \ API call."
          title: Session
        ChallengeParameters:
          allOf:
          - $ref: '#/components/schemas/ChallengeParametersType'
          - description: "The challenge parameters. For more information, see <a href=\"\
              https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html\"\
              >InitiateAuth</a>."
          title: ChallengeParameters
        AuthenticationResult:
          $ref: '#/components/schemas/RespondToAuthChallengeResponse_AuthenticationResult'
      title: RespondToAuthChallengeResponse
      type: object
    RespondToAuthChallengeRequest:
      description: The request to respond to an authentication challenge.
      example:
        ChallengeResponses: ""
        UserContextData:
          IpAddress: ""
          EncodedData: ""
        ClientMetadata: ""
        ClientId: ""
        AnalyticsMetadata:
          AnalyticsEndpointId: ""
        ChallengeName: ""
        Session: ""
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The app client ID.
          title: ClientId
        ChallengeName:
          allOf:
          - $ref: '#/components/schemas/ChallengeNameType'
          - description: "<p>The challenge name. For more information, see <a href=\"\
              https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html\"\
              >InitiateAuth</a>.</p> <p> <code>ADMIN_NO_SRP_AUTH</code> isn't a valid\
              \ value.</p>"
          title: ChallengeName
        Session:
          allOf:
          - $ref: '#/components/schemas/SessionType'
          - description: "The session that should be passed both ways in challenge-response\
              \ calls to the service. If <code>InitiateAuth</code> or <code>RespondToAuthChallenge</code>\
              \ API call determines that the caller must pass another challenge, they\
              \ return a session with other challenge parameters. This session should\
              \ be passed as it is to the next <code>RespondToAuthChallenge</code>\
              \ API call."
          title: Session
        ChallengeResponses:
          allOf:
          - $ref: '#/components/schemas/ChallengeResponsesType'
          - description: "<p>The challenge responses. These are inputs corresponding\
              \ to the value of <code>ChallengeName</code>, for example:</p> <note>\
              \ <p> <code>SECRET_HASH</code> (if app client is configured with client\
              \ secret) applies to all of the inputs that follow (including <code>SOFTWARE_TOKEN_MFA</code>).</p>\
              \ </note> <ul> <li> <p> <code>SMS_MFA</code>: <code>SMS_MFA_CODE</code>,\
              \ <code>USERNAME</code>.</p> </li> <li> <p> <code>PASSWORD_VERIFIER</code>:\
              \ <code>PASSWORD_CLAIM_SIGNATURE</code>, <code>PASSWORD_CLAIM_SECRET_BLOCK</code>,\
              \ <code>TIMESTAMP</code>, <code>USERNAME</code>.</p> <note> <p> <code>PASSWORD_VERIFIER</code>\
              \ requires <code>DEVICE_KEY</code> when you sign in with a remembered\
              \ device.</p> </note> </li> <li> <p> <code>NEW_PASSWORD_REQUIRED</code>:\
              \ <code>NEW_PASSWORD</code>, <code>USERNAME</code>, <code>SECRET_HASH</code>\
              \ (if app client is configured with client secret). To set any required\
              \ attributes that Amazon Cognito returned as <code>requiredAttributes</code>\
              \ in the <code>InitiateAuth</code> response, add a <code>userAttributes.<i>attributename</i>\
              \ </code> parameter. This parameter can also set values for writable\
              \ attributes that aren't required by your user pool.</p> <note> <p>In\
              \ a <code>NEW_PASSWORD_REQUIRED</code> challenge response, you can't\
              \ modify a required attribute that already has a value. In <code>RespondToAuthChallenge</code>,\
              \ set a value for any keys that Amazon Cognito returned in the <code>requiredAttributes</code>\
              \ parameter, then use the <code>UpdateUserAttributes</code> API operation\
              \ to modify the value of any additional attributes.</p> </note> </li>\
              \ <li> <p> <code>SOFTWARE_TOKEN_MFA</code>: <code>USERNAME</code> and\
              \ <code>SOFTWARE_TOKEN_MFA_CODE</code> are required attributes.</p>\
              \ </li> <li> <p> <code>DEVICE_SRP_AUTH</code> requires <code>USERNAME</code>,\
              \ <code>DEVICE_KEY</code>, <code>SRP_A</code> (and <code>SECRET_HASH</code>).</p>\
              \ </li> <li> <p> <code>DEVICE_PASSWORD_VERIFIER</code> requires everything\
              \ that <code>PASSWORD_VERIFIER</code> requires, plus <code>DEVICE_KEY</code>.</p>\
              \ </li> <li> <p> <code>MFA_SETUP</code> requires <code>USERNAME</code>,\
              \ plus you must use the session value returned by <code>VerifySoftwareToken</code>\
              \ in the <code>Session</code> parameter.</p> </li> </ul> <p>For more\
              \ information about <code>SECRET_HASH</code>, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/signing-up-users-in-your-app.html#cognito-user-pools-computing-secret-hash\"\
              >Computing secret hash values</a>. For information about <code>DEVICE_KEY</code>,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-device-tracking.html\"\
              >Working with user devices in your user pool</a>.</p>"
          title: ChallengeResponses
        AnalyticsMetadata:
          $ref: '#/components/schemas/RespondToAuthChallengeRequest_AnalyticsMetadata'
        UserContextData:
          $ref: '#/components/schemas/ConfirmForgotPasswordRequest_UserContextData'
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>You\
              \ create custom workflows by assigning Lambda functions to user pool\
              \ triggers. When you use the RespondToAuthChallenge API action, Amazon\
              \ Cognito invokes any functions that are assigned to the following triggers:\
              \ <i>post authentication</i>, <i>pre token generation</i>, <i>define\
              \ auth challenge</i>, <i>create auth challenge</i>, and <i>verify auth\
              \ challenge</i>. When Amazon Cognito invokes any of these functions,\
              \ it passes a JSON payload, which the function receives as input. This\
              \ payload contains a <code>clientMetadata</code> attribute, which provides\
              \ the data that you assigned to the ClientMetadata parameter in your\
              \ RespondToAuthChallenge request. In your function code in Lambda, you\
              \ can process the <code>clientMetadata</code> value to enhance your\
              \ workflow for your specific needs.</p> <p>For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - ChallengeName
      - ClientId
      title: RespondToAuthChallengeRequest
      type: object
    RevokeTokenResponse:
      properties: {}
      type: object
    RevokeTokenRequest:
      example:
        ClientSecret: ""
        ClientId: ""
        Token: ""
      properties:
        Token:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: The refresh token that you want to revoke.
          title: Token
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The client ID for the token that you want to revoke.
          title: ClientId
        ClientSecret:
          allOf:
          - $ref: '#/components/schemas/ClientSecretType'
          - description: The secret for the client ID. This is required only if the
              client ID has a secret.
          title: ClientSecret
      required:
      - ClientId
      - Token
      title: RevokeTokenRequest
      type: object
    UnauthorizedException: {}
    UnsupportedOperationException: {}
    UnsupportedTokenTypeException: {}
    SetLogDeliveryConfigurationResponse:
      example:
        LogDeliveryConfiguration:
          UserPoolId: ""
          LogConfigurations: ""
      properties:
        LogDeliveryConfiguration:
          $ref: '#/components/schemas/SetLogDeliveryConfigurationResponse_LogDeliveryConfiguration'
      title: SetLogDeliveryConfigurationResponse
      type: object
    SetLogDeliveryConfigurationRequest:
      example:
        UserPoolId: ""
        LogConfigurations: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The ID of the user pool where you want to configure detailed
              activity logging .
          title: UserPoolId
        LogConfigurations:
          allOf:
          - $ref: '#/components/schemas/LogConfigurationListType'
          - description: A collection of all of the detailed activity logging configurations
              for a user pool.
          title: LogConfigurations
      required:
      - LogConfigurations
      - UserPoolId
      title: SetLogDeliveryConfigurationRequest
      type: object
    SetRiskConfigurationResponse:
      example:
        RiskConfiguration:
          CompromisedCredentialsRiskConfiguration:
            Actions:
              EventAction: ""
            EventFilter: ""
          LastModifiedDate: ""
          UserPoolId: ""
          ClientId: ""
          AccountTakeoverRiskConfiguration:
            Actions:
              HighAction:
                Notify: ""
                EventAction: ""
              LowAction:
                Notify: ""
                EventAction: ""
              MediumAction:
                Notify: ""
                EventAction: ""
            NotifyConfiguration:
              ReplyTo: ""
              BlockEmail:
                TextBody: ""
                HtmlBody: ""
                Subject: ""
              SourceArn: ""
              NoActionEmail:
                TextBody: ""
                HtmlBody: ""
                Subject: ""
              From: ""
              MfaEmail:
                TextBody: ""
                HtmlBody: ""
                Subject: ""
          RiskExceptionConfiguration:
            BlockedIPRangeList: ""
            SkippedIPRangeList: ""
      properties:
        RiskConfiguration:
          $ref: '#/components/schemas/DescribeRiskConfigurationResponse_RiskConfiguration'
      required:
      - RiskConfiguration
      title: SetRiskConfigurationResponse
      type: object
    SetRiskConfigurationRequest:
      example:
        CompromisedCredentialsRiskConfiguration:
          Actions:
            EventAction: ""
          EventFilter: ""
        UserPoolId: ""
        ClientId: ""
        AccountTakeoverRiskConfiguration:
          Actions:
            HighAction:
              Notify: ""
              EventAction: ""
            LowAction:
              Notify: ""
              EventAction: ""
            MediumAction:
              Notify: ""
              EventAction: ""
          NotifyConfiguration:
            ReplyTo: ""
            BlockEmail:
              TextBody: ""
              HtmlBody: ""
              Subject: ""
            SourceArn: ""
            NoActionEmail:
              TextBody: ""
              HtmlBody: ""
              Subject: ""
            From: ""
            MfaEmail:
              TextBody: ""
              HtmlBody: ""
              Subject: ""
        RiskExceptionConfiguration:
          BlockedIPRangeList: ""
          SkippedIPRangeList: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: 'The user pool ID. '
          title: UserPoolId
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: "<p>The app client ID. If <code>ClientId</code> is null,\
              \ then the risk configuration is mapped to <code>userPoolId</code>.\
              \ When the client ID is null, the same risk configuration is applied\
              \ to all the clients in the userPool.</p> <p>Otherwise, <code>ClientId</code>\
              \ is mapped to the client. When the client ID isn't null, the user pool\
              \ configuration is overridden and the risk configuration for the client\
              \ is used instead.</p>"
          title: ClientId
        CompromisedCredentialsRiskConfiguration:
          $ref: '#/components/schemas/SetRiskConfigurationRequest_CompromisedCredentialsRiskConfiguration'
        AccountTakeoverRiskConfiguration:
          $ref: '#/components/schemas/SetRiskConfigurationRequest_AccountTakeoverRiskConfiguration'
        RiskExceptionConfiguration:
          $ref: '#/components/schemas/SetRiskConfigurationRequest_RiskExceptionConfiguration'
      required:
      - UserPoolId
      title: SetRiskConfigurationRequest
      type: object
    SetUICustomizationResponse:
      example:
        UICustomization:
          LastModifiedDate: ""
          CreationDate: ""
          CSS: ""
          CSSVersion: ""
          UserPoolId: ""
          ClientId: ""
          ImageUrl: ""
      properties:
        UICustomization:
          $ref: '#/components/schemas/GetUICustomizationResponse_UICustomization'
      required:
      - UICustomization
      title: SetUICustomizationResponse
      type: object
    SetUICustomizationRequest:
      example:
        CSS: ""
        UserPoolId: ""
        ImageFile: ""
        ClientId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The client ID for the client app.
          title: ClientId
        CSS:
          allOf:
          - $ref: '#/components/schemas/CSSType'
          - description: The CSS values in the UI customization.
          title: CSS
        ImageFile:
          allOf:
          - $ref: '#/components/schemas/ImageFileType'
          - description: The uploaded logo image for the UI customization.
          title: ImageFile
      required:
      - UserPoolId
      title: SetUICustomizationRequest
      type: object
    SetUserMFAPreferenceResponse:
      properties: {}
      type: object
    SetUserMFAPreferenceRequest:
      example:
        SMSMfaSettings:
          Enabled: ""
          PreferredMfa: ""
        AccessToken: ""
        SoftwareTokenMfaSettings:
          Enabled: ""
          PreferredMfa: ""
      properties:
        SMSMfaSettings:
          $ref: '#/components/schemas/SetUserMFAPreferenceRequest_SMSMfaSettings'
        SoftwareTokenMfaSettings:
          $ref: '#/components/schemas/SetUserMFAPreferenceRequest_SoftwareTokenMfaSettings'
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose MFA preference you want to set.
          title: AccessToken
      required:
      - AccessToken
      title: SetUserMFAPreferenceRequest
      type: object
    SetUserPoolMfaConfigResponse:
      example:
        SmsMfaConfiguration:
          SmsConfiguration:
            SnsRegion: ""
            ExternalId: ""
            SnsCallerArn: ""
          SmsAuthenticationMessage: ""
        MfaConfiguration: ""
        SoftwareTokenMfaConfiguration:
          Enabled: ""
      properties:
        SmsMfaConfiguration:
          $ref: '#/components/schemas/SetUserPoolMfaConfigResponse_SmsMfaConfiguration'
        SoftwareTokenMfaConfiguration:
          $ref: '#/components/schemas/SetUserPoolMfaConfigResponse_SoftwareTokenMfaConfiguration'
        MfaConfiguration:
          allOf:
          - $ref: '#/components/schemas/UserPoolMfaType'
          - description: <p>The MFA configuration. Valid values include:</p> <ul>
              <li> <p> <code>OFF</code> MFA won't be used for any users.</p> </li>
              <li> <p> <code>ON</code> MFA is required for all users to sign in.</p>
              </li> <li> <p> <code>OPTIONAL</code> MFA will be required only for individual
              users who have an MFA factor enabled.</p> </li> </ul>
          title: MfaConfiguration
      title: SetUserPoolMfaConfigResponse
      type: object
    SetUserPoolMfaConfigRequest:
      example:
        UserPoolId: ""
        SmsMfaConfiguration:
          SmsConfiguration:
            SnsRegion: ""
            ExternalId: ""
            SnsCallerArn: ""
          SmsAuthenticationMessage: ""
        MfaConfiguration: ""
        SoftwareTokenMfaConfiguration:
          Enabled: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        SmsMfaConfiguration:
          $ref: '#/components/schemas/SetUserPoolMfaConfigResponse_SmsMfaConfiguration'
        SoftwareTokenMfaConfiguration:
          $ref: '#/components/schemas/SetUserPoolMfaConfigResponse_SoftwareTokenMfaConfiguration'
        MfaConfiguration:
          allOf:
          - $ref: '#/components/schemas/UserPoolMfaType'
          - description: "<p>The MFA configuration. If you set the MfaConfiguration\
              \ value to ‘ON’, only users who have set up an MFA factor can sign in.\
              \ To learn more, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html\"\
              >Adding Multi-Factor Authentication (MFA) to a user pool</a>. Valid\
              \ values include:</p> <ul> <li> <p> <code>OFF</code> MFA won't be used\
              \ for any users.</p> </li> <li> <p> <code>ON</code> MFA is required\
              \ for all users to sign in.</p> </li> <li> <p> <code>OPTIONAL</code>\
              \ MFA will be required only for individual users who have an MFA factor\
              \ activated.</p> </li> </ul>"
          title: MfaConfiguration
      required:
      - UserPoolId
      title: SetUserPoolMfaConfigRequest
      type: object
    SetUserSettingsResponse:
      description: The response from the server for a set user settings request.
      properties: {}
      type: object
    SetUserSettingsRequest:
      description: Represents the request to set user settings.
      example:
        AccessToken: ""
        MFAOptions: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose user settings you want to configure.
          title: AccessToken
        MFAOptions:
          allOf:
          - $ref: '#/components/schemas/MFAOptionListType'
          - description: You can use this parameter only to set an SMS configuration
              that uses SMS for delivery.
          title: MFAOptions
      required:
      - AccessToken
      - MFAOptions
      title: SetUserSettingsRequest
      type: object
    SignUpResponse:
      description: The response from the server for a registration request.
      example:
        UserConfirmed: ""
        UserSub: ""
        CodeDeliveryDetails:
          Destination: ""
          DeliveryMedium: ""
          AttributeName: ""
      properties:
        UserConfirmed:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: A response from the server indicating that a user registration
              has been confirmed.
          title: UserConfirmed
        CodeDeliveryDetails:
          $ref: '#/components/schemas/SignUpResponse_CodeDeliveryDetails'
        UserSub:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The UUID of the authenticated user. This isn't the same as
              <code>username</code>.
          title: UserSub
      required:
      - UserConfirmed
      - UserSub
      title: SignUpResponse
      type: object
    SignUpRequest:
      description: Represents the request to register a user.
      example:
        ValidationData: ""
        Username: ""
        SecretHash: ""
        UserContextData:
          IpAddress: ""
          EncodedData: ""
        ClientMetadata: ""
        ClientId: ""
        AnalyticsMetadata:
          AnalyticsEndpointId: ""
        Password: ""
        UserAttributes: ""
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The ID of the client associated with the user pool.
          title: ClientId
        SecretHash:
          allOf:
          - $ref: '#/components/schemas/SecretHashType'
          - description: A keyed-hash message authentication code (HMAC) calculated
              using the secret key of a user pool client and username plus the client
              ID in the message.
          title: SecretHash
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user you want to register.
          title: Username
        Password:
          allOf:
          - $ref: '#/components/schemas/PasswordType'
          - description: The password of the user you want to register.
          title: Password
        UserAttributes:
          allOf:
          - $ref: '#/components/schemas/AttributeListType'
          - description: "<p>An array of name-value pairs representing user attributes.</p>\
              \ <p>For custom attributes, you must prepend the <code>custom:</code>\
              \ prefix to the attribute name.</p>"
          title: UserAttributes
        ValidationData:
          allOf:
          - $ref: '#/components/schemas/AttributeListType'
          - description: The validation data in the request to register a user.
          title: ValidationData
        AnalyticsMetadata:
          $ref: '#/components/schemas/SignUpRequest_AnalyticsMetadata'
        UserContextData:
          $ref: '#/components/schemas/ConfirmForgotPasswordRequest_UserContextData'
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action triggers.</p> <p>You\
              \ create custom workflows by assigning Lambda functions to user pool\
              \ triggers. When you use the SignUp API action, Amazon Cognito invokes\
              \ any functions that are assigned to the following triggers: <i>pre\
              \ sign-up</i>, <i>custom message</i>, and <i>post confirmation</i>.\
              \ When Amazon Cognito invokes any of these functions, it passes a JSON\
              \ payload, which the function receives as input. This payload contains\
              \ a <code>clientMetadata</code> attribute, which provides the data that\
              \ you assigned to the ClientMetadata parameter in your SignUp request.\
              \ In your function code in Lambda, you can process the <code>clientMetadata</code>\
              \ value to enhance your workflow for your specific needs.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - ClientId
      - Password
      - Username
      title: SignUpRequest
      type: object
    StartUserImportJobResponse:
      description: Represents the response from the server to the request to start
        the user import job.
      example:
        UserImportJob:
          Status: ""
          CreationDate: ""
          ImportedUsers: ""
          FailedUsers: ""
          PreSignedUrl: ""
          CloudWatchLogsRoleArn: ""
          JobName: ""
          StartDate: ""
          UserPoolId: ""
          SkippedUsers: ""
          CompletionMessage: ""
          CompletionDate: ""
          JobId: ""
      properties:
        UserImportJob:
          $ref: '#/components/schemas/CreateUserImportJobResponse_UserImportJob'
      title: StartUserImportJobResponse
      type: object
    StartUserImportJobRequest:
      description: Represents the request to start the user import job.
      example:
        UserPoolId: ""
        JobId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool that the users are being
              imported into.
          title: UserPoolId
        JobId:
          allOf:
          - $ref: '#/components/schemas/UserImportJobIdType'
          - description: The job ID for the user import job.
          title: JobId
      required:
      - JobId
      - UserPoolId
      title: StartUserImportJobRequest
      type: object
    StopUserImportJobResponse:
      description: Represents the response from the server to the request to stop
        the user import job.
      example:
        UserImportJob:
          Status: ""
          CreationDate: ""
          ImportedUsers: ""
          FailedUsers: ""
          PreSignedUrl: ""
          CloudWatchLogsRoleArn: ""
          JobName: ""
          StartDate: ""
          UserPoolId: ""
          SkippedUsers: ""
          CompletionMessage: ""
          CompletionDate: ""
          JobId: ""
      properties:
        UserImportJob:
          $ref: '#/components/schemas/CreateUserImportJobResponse_UserImportJob'
      title: StopUserImportJobResponse
      type: object
    StopUserImportJobRequest:
      description: Represents the request to stop the user import job.
      example:
        UserPoolId: ""
        JobId: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool that the users are being
              imported into.
          title: UserPoolId
        JobId:
          allOf:
          - $ref: '#/components/schemas/UserImportJobIdType'
          - description: The job ID for the user import job.
          title: JobId
      required:
      - JobId
      - UserPoolId
      title: StopUserImportJobRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The Amazon Resource Name (ARN) of the user pool to assign
              the tags to.
          title: ResourceArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/UserPoolTagsType'
          - description: The tags to assign to the user pool.
          title: Tags
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The Amazon Resource Name (ARN) of the user pool that the
              tags are assigned to.
          title: ResourceArn
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/UserPoolTagsListType'
          - description: The keys of the tags to remove from the user pool.
          title: TagKeys
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateAuthEventFeedbackResponse:
      properties: {}
      type: object
    UpdateAuthEventFeedbackRequest:
      example:
        UserPoolId: ""
        Username: ""
        FeedbackToken: ""
        EventId: ""
        FeedbackValue: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user pool username.
          title: Username
        EventId:
          allOf:
          - $ref: '#/components/schemas/EventIdType'
          - description: The event ID.
          title: EventId
        FeedbackToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: The feedback token.
          title: FeedbackToken
        FeedbackValue:
          allOf:
          - $ref: '#/components/schemas/FeedbackValueType'
          - description: "The authentication event feedback value. When you provide\
              \ a <code>FeedbackValue</code> value of <code>valid</code>, you tell\
              \ Amazon Cognito that you trust a user session where Amazon Cognito\
              \ has evaluated some level of risk. When you provide a <code>FeedbackValue</code>\
              \ value of <code>invalid</code>, you tell Amazon Cognito that you don't\
              \ trust a user session, or you don't believe that Amazon Cognito evaluated\
              \ a high-enough risk level."
          title: FeedbackValue
      required:
      - EventId
      - FeedbackToken
      - FeedbackValue
      - UserPoolId
      - Username
      title: UpdateAuthEventFeedbackRequest
      type: object
    UpdateDeviceStatusResponse:
      description: The response to the request to update the device status.
      properties: {}
      type: object
    UpdateDeviceStatusRequest:
      description: Represents the request to update the device status.
      example:
        AccessToken: ""
        DeviceRememberedStatus: ""
        DeviceKey: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose device status you want to update.
          title: AccessToken
        DeviceKey:
          allOf:
          - $ref: '#/components/schemas/DeviceKeyType'
          - description: The device key.
          title: DeviceKey
        DeviceRememberedStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceRememberedStatusType'
          - description: The status of whether a device is remembered.
          title: DeviceRememberedStatus
      required:
      - AccessToken
      - DeviceKey
      title: UpdateDeviceStatusRequest
      type: object
    UpdateGroupResponse:
      example:
        Group:
          GroupName: ""
          LastModifiedDate: ""
          CreationDate: ""
          UserPoolId: ""
          Description: ""
          Precedence: ""
          RoleArn: ""
      properties:
        Group:
          $ref: '#/components/schemas/CreateGroupResponse_Group'
      title: UpdateGroupResponse
      type: object
    UpdateGroupRequest:
      example:
        GroupName: ""
        UserPoolId: ""
        Description: ""
        Precedence: ""
        RoleArn: ""
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupNameType'
          - description: The name of the group.
          title: GroupName
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionType'
          - description: A string containing the new description of the group.
          title: Description
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The new role Amazon Resource Name (ARN) for the group. This
              is used for setting the <code>cognito:roles</code> and <code>cognito:preferred_role</code>
              claims in the token.
          title: RoleArn
        Precedence:
          allOf:
          - $ref: '#/components/schemas/PrecedenceType'
          - description: "The new precedence value for the group. For more information\
              \ about this parameter, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateGroup.html\"\
              >CreateGroup</a>."
          title: Precedence
      required:
      - GroupName
      - UserPoolId
      title: UpdateGroupRequest
      type: object
    UpdateIdentityProviderResponse:
      example:
        IdentityProvider:
          ProviderName: ""
          LastModifiedDate: ""
          CreationDate: ""
          UserPoolId: ""
          AttributeMapping: ""
          ProviderDetails: ""
          ProviderType: ""
          IdpIdentifiers: ""
      properties:
        IdentityProvider:
          $ref: '#/components/schemas/DescribeIdentityProviderResponse_IdentityProvider'
      required:
      - IdentityProvider
      title: UpdateIdentityProviderResponse
      type: object
    UpdateIdentityProviderRequest:
      example:
        ProviderName: ""
        UserPoolId: ""
        AttributeMapping: ""
        ProviderDetails: ""
        IdpIdentifiers: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        ProviderName:
          allOf:
          - $ref: '#/components/schemas/ProviderNameType'
          - description: The IdP name.
          title: ProviderName
        ProviderDetails:
          allOf:
          - $ref: '#/components/schemas/ProviderDetailsType'
          - description: "The IdP details to be updated, such as <code>MetadataURL</code>\
              \ and <code>MetadataFile</code>."
          title: ProviderDetails
        AttributeMapping:
          allOf:
          - $ref: '#/components/schemas/AttributeMappingType'
          - description: The IdP attribute mapping to be changed.
          title: AttributeMapping
        IdpIdentifiers:
          allOf:
          - $ref: '#/components/schemas/IdpIdentifiersListType'
          - description: A list of IdP identifiers.
          title: IdpIdentifiers
      required:
      - ProviderName
      - UserPoolId
      title: UpdateIdentityProviderRequest
      type: object
    UpdateResourceServerResponse:
      example:
        ResourceServer:
          UserPoolId: ""
          Identifier: ""
          Scopes: ""
          Name: ""
      properties:
        ResourceServer:
          $ref: '#/components/schemas/DescribeResourceServerResponse_ResourceServer'
      required:
      - ResourceServer
      title: UpdateResourceServerResponse
      type: object
    UpdateResourceServerRequest:
      example:
        UserPoolId: ""
        Identifier: ""
        Scopes: ""
        Name: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        Identifier:
          allOf:
          - $ref: '#/components/schemas/ResourceServerIdentifierType'
          - description: The identifier for the resource server.
          title: Identifier
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceServerNameType'
          - description: The name of the resource server.
          title: Name
        Scopes:
          allOf:
          - $ref: '#/components/schemas/ResourceServerScopeListType'
          - description: The scope values to be set for the resource server.
          title: Scopes
      required:
      - Identifier
      - Name
      - UserPoolId
      title: UpdateResourceServerRequest
      type: object
    UpdateUserAttributesResponse:
      description: Represents the response from the server for the request to update
        user attributes.
      example:
        CodeDeliveryDetailsList: ""
      properties:
        CodeDeliveryDetailsList:
          allOf:
          - $ref: '#/components/schemas/CodeDeliveryDetailsListType'
          - description: The code delivery details list from the server for the request
              to update user attributes.
          title: CodeDeliveryDetailsList
      title: UpdateUserAttributesResponse
      type: object
    UpdateUserAttributesRequest:
      description: Represents the request to update user attributes.
      example:
        AccessToken: ""
        ClientMetadata: ""
        UserAttributes: ""
      properties:
        UserAttributes:
          allOf:
          - $ref: '#/components/schemas/AttributeListType'
          - description: "<p>An array of name-value pairs representing user attributes.</p>\
              \ <p>For custom attributes, you must prepend the <code>custom:</code>\
              \ prefix to the attribute name.</p> <p>If you have set an attribute\
              \ to require verification before Amazon Cognito updates its value, this\
              \ request doesn’t immediately update the value of that attribute. After\
              \ your user receives and responds to a verification message to verify\
              \ the new value, Amazon Cognito updates the attribute value. Your user\
              \ can sign in and receive messages with the original attribute value\
              \ until they verify the new value.</p>"
          title: UserAttributes
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose user attributes you want to update.
          title: AccessToken
        ClientMetadata:
          allOf:
          - $ref: '#/components/schemas/ClientMetadataType'
          - description: "<p>A map of custom key-value pairs that you can provide\
              \ as input for any custom workflows that this action initiates. </p>\
              \ <p>You create custom workflows by assigning Lambda functions to user\
              \ pool triggers. When you use the UpdateUserAttributes API action, Amazon\
              \ Cognito invokes the function that is assigned to the <i>custom message</i>\
              \ trigger. When Amazon Cognito invokes this function, it passes a JSON\
              \ payload, which the function receives as input. This payload contains\
              \ a <code>clientMetadata</code> attribute, which provides the data that\
              \ you assigned to the ClientMetadata parameter in your UpdateUserAttributes\
              \ request. In your function code in Lambda, you can process the <code>clientMetadata</code>\
              \ value to enhance your workflow for your specific needs.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html\"\
              > Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> <note> <p>When you use the ClientMetadata\
              \ parameter, remember that Amazon Cognito won't do the following:</p>\
              \ <ul> <li> <p>Store the ClientMetadata value. This data is available\
              \ only to Lambda triggers that are assigned to a user pool to support\
              \ custom workflows. If your user pool configuration doesn't include\
              \ triggers, the ClientMetadata parameter serves no purpose.</p> </li>\
              \ <li> <p>Validate the ClientMetadata value.</p> </li> <li> <p>Encrypt\
              \ the ClientMetadata value. Don't use Amazon Cognito to provide sensitive\
              \ information.</p> </li> </ul> </note>"
          title: ClientMetadata
      required:
      - AccessToken
      - UserAttributes
      title: UpdateUserAttributesRequest
      type: object
    UpdateUserPoolResponse:
      description: Represents the response from the server when you make a request
        to update the user pool.
      properties: {}
      type: object
    UpdateUserPoolRequest:
      description: Represents the request to update the user pool.
      example:
        UserPoolTags: ""
        Policies:
          PasswordPolicy:
            RequireNumbers: ""
            MinimumLength: ""
            TemporaryPasswordValidityDays: ""
            RequireUppercase: ""
            RequireLowercase: ""
            RequireSymbols: ""
        VerificationMessageTemplate:
          EmailMessageByLink: ""
          EmailMessage: ""
          SmsMessage: ""
          EmailSubject: ""
          DefaultEmailOption: ""
          EmailSubjectByLink: ""
        MfaConfiguration: ""
        AdminCreateUserConfig:
          UnusedAccountValidityDays: ""
          InviteMessageTemplate:
            EmailMessage: ""
            SMSMessage: ""
            EmailSubject: ""
          AllowAdminCreateUserOnly: ""
        DeletionProtection: ""
        SmsAuthenticationMessage: ""
        SmsVerificationMessage: ""
        UserPoolAddOns:
          AdvancedSecurityMode: ""
        UserPoolId: ""
        UserAttributeUpdateSettings:
          AttributesRequireVerificationBeforeUpdate: ""
        EmailConfiguration:
          ReplyToEmailAddress: ""
          ConfigurationSet: ""
          EmailSendingAccount: ""
          SourceArn: ""
          From: ""
        SmsConfiguration:
          SnsRegion: ""
          ExternalId: ""
          SnsCallerArn: ""
        EmailVerificationSubject: ""
        LambdaConfig:
          CreateAuthChallenge: ""
          PreSignUp: ""
          KMSKeyID: ""
          UserMigration: ""
          PostAuthentication: ""
          VerifyAuthChallengeResponse: ""
          PreAuthentication: ""
          DefineAuthChallenge: ""
          PreTokenGeneration: ""
          CustomSMSSender:
            LambdaArn: ""
            LambdaVersion: ""
          PostConfirmation: ""
          CustomMessage: ""
          CustomEmailSender:
            LambdaArn: ""
            LambdaVersion: ""
        AutoVerifiedAttributes: ""
        EmailVerificationMessage: ""
        DeviceConfiguration:
          DeviceOnlyRememberedOnUserPrompt: ""
          ChallengeRequiredOnNewDevice: ""
        AccountRecoverySetting:
          RecoveryMechanisms: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool you want to update.
          title: UserPoolId
        Policies:
          $ref: '#/components/schemas/UpdateUserPoolRequest_Policies'
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/DeletionProtectionType'
          - description: "<p>When active, <code>DeletionProtection</code> prevents\
              \ accidental deletion of your user pool. Before you can delete a user\
              \ pool that you have protected against deletion, you must deactivate\
              \ this feature.</p> <p>When you try to delete a protected user pool\
              \ in a <code>DeleteUserPool</code> API request, Amazon Cognito returns\
              \ an <code>InvalidParameterException</code> error. To delete a protected\
              \ user pool, send a new <code>DeleteUserPool</code> request after you\
              \ deactivate deletion protection in an <code>UpdateUserPool</code> API\
              \ request.</p>"
          title: DeletionProtection
        LambdaConfig:
          $ref: '#/components/schemas/UpdateUserPoolRequest_LambdaConfig'
        AutoVerifiedAttributes:
          allOf:
          - $ref: '#/components/schemas/VerifiedAttributesListType'
          - description: The attributes that are automatically verified when Amazon
              Cognito requests to update user pools.
          title: AutoVerifiedAttributes
        SmsVerificationMessage:
          allOf:
          - $ref: '#/components/schemas/SmsVerificationMessageType'
          - description: This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
          title: SmsVerificationMessage
        EmailVerificationMessage:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationMessageType'
          - description: This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
          title: EmailVerificationMessage
        EmailVerificationSubject:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationSubjectType'
          - description: This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
          title: EmailVerificationSubject
        VerificationMessageTemplate:
          $ref: '#/components/schemas/UpdateUserPoolRequest_VerificationMessageTemplate'
        SmsAuthenticationMessage:
          allOf:
          - $ref: '#/components/schemas/SmsVerificationMessageType'
          - description: The contents of the SMS authentication message.
          title: SmsAuthenticationMessage
        UserAttributeUpdateSettings:
          $ref: '#/components/schemas/CreateUserPoolRequest_UserAttributeUpdateSettings'
        MfaConfiguration:
          allOf:
          - $ref: '#/components/schemas/UserPoolMfaType'
          - description: <p>Possible values include:</p> <ul> <li> <p> <code>OFF</code>
              - MFA tokens aren't required and can't be specified during user registration.</p>
              </li> <li> <p> <code>ON</code> - MFA tokens are required for all user
              registrations. You can only specify ON when you're initially creating
              a user pool. You can use the <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserPoolMfaConfig.html">SetUserPoolMfaConfig</a>
              API operation to turn MFA "ON" for existing user pools. </p> </li> <li>
              <p> <code>OPTIONAL</code> - Users have the option when registering to
              create an MFA token.</p> </li> </ul>
          title: MfaConfiguration
        DeviceConfiguration:
          $ref: '#/components/schemas/CreateUserPoolRequest_DeviceConfiguration'
        EmailConfiguration:
          $ref: '#/components/schemas/UpdateUserPoolRequest_EmailConfiguration'
        SmsConfiguration:
          $ref: '#/components/schemas/CreateUserPoolRequest_SmsConfiguration'
        UserPoolTags:
          allOf:
          - $ref: '#/components/schemas/UserPoolTagsType'
          - description: "The tag keys and values to assign to the user pool. A tag\
              \ is a label that you can use to categorize and manage user pools in\
              \ different ways, such as by purpose, owner, environment, or other criteria."
          title: UserPoolTags
        AdminCreateUserConfig:
          $ref: '#/components/schemas/CreateUserPoolRequest_AdminCreateUserConfig'
        UserPoolAddOns:
          $ref: '#/components/schemas/CreateUserPoolRequest_UserPoolAddOns'
        AccountRecoverySetting:
          $ref: '#/components/schemas/CreateUserPoolRequest_AccountRecoverySetting'
      required:
      - UserPoolId
      title: UpdateUserPoolRequest
      type: object
    UpdateUserPoolClientResponse:
      description: Represents the response from the server to the request to update
        the user pool client.
      example:
        UserPoolClient:
          AnalyticsConfiguration:
            ApplicationArn: ""
            UserDataShared: ""
            ExternalId: ""
            ApplicationId: ""
            RoleArn: ""
          LastModifiedDate: ""
          CreationDate: ""
          CallbackURLs: ""
          IdTokenValidity: ""
          TokenValidityUnits:
            IdToken: ""
            RefreshToken: ""
            AccessToken: ""
          ReadAttributes: ""
          DefaultRedirectURI: ""
          AllowedOAuthFlowsUserPoolClient: ""
          ClientName: ""
          ExplicitAuthFlows: ""
          ClientId: ""
          AccessTokenValidity: ""
          EnableTokenRevocation: ""
          EnablePropagateAdditionalUserContextData: ""
          AllowedOAuthScopes: ""
          AuthSessionValidity: ""
          SupportedIdentityProviders: ""
          UserPoolId: ""
          AllowedOAuthFlows: ""
          ClientSecret: ""
          LogoutURLs: ""
          RefreshTokenValidity: ""
          WriteAttributes: ""
          PreventUserExistenceErrors: ""
      properties:
        UserPoolClient:
          $ref: '#/components/schemas/UpdateUserPoolClientResponse_UserPoolClient'
      title: UpdateUserPoolClientResponse
      type: object
    UpdateUserPoolClientRequest:
      description: Represents the request to update the user pool client.
      example:
        AnalyticsConfiguration:
          ApplicationArn: ""
          UserDataShared: ""
          ExternalId: ""
          ApplicationId: ""
          RoleArn: ""
        CallbackURLs: ""
        EnablePropagateAdditionalUserContextData: ""
        IdTokenValidity: ""
        AllowedOAuthScopes: ""
        AuthSessionValidity: ""
        TokenValidityUnits:
          IdToken: ""
          RefreshToken: ""
          AccessToken: ""
        ReadAttributes: ""
        DefaultRedirectURI: ""
        AllowedOAuthFlowsUserPoolClient: ""
        SupportedIdentityProviders: ""
        ClientName: ""
        UserPoolId: ""
        AllowedOAuthFlows: ""
        ExplicitAuthFlows: ""
        ClientId: ""
        LogoutURLs: ""
        AccessTokenValidity: ""
        RefreshTokenValidity: ""
        WriteAttributes: ""
        PreventUserExistenceErrors: ""
        EnableTokenRevocation: ""
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to update
              the user pool client.
          title: UserPoolId
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The ID of the client associated with the user pool.
          title: ClientId
        ClientName:
          allOf:
          - $ref: '#/components/schemas/ClientNameType'
          - description: The client name from the update user pool client request.
          title: ClientName
        RefreshTokenValidity:
          allOf:
          - $ref: '#/components/schemas/RefreshTokenValidityType'
          - description: "<p>The refresh token time limit. After this limit expires,\
              \ your user can't use their refresh token. To specify the time unit\
              \ for <code>RefreshTokenValidity</code> as <code>seconds</code>, <code>minutes</code>,\
              \ <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>\
              \ value in your API request.</p> <p>For example, when you set <code>RefreshTokenValidity</code>\
              \ as <code>10</code> and <code>TokenValidityUnits</code> as <code>days</code>,\
              \ your user can refresh their session and retrieve new access and ID\
              \ tokens for 10 days.</p> <p>The default time unit for <code>RefreshTokenValidity</code>\
              \ in an API request is days. You can't set <code>RefreshTokenValidity</code>\
              \ to 0. If you do, Amazon Cognito overrides the value with the default\
              \ value of 30 days. <i>Valid range</i> is displayed below in seconds.</p>\
              \ <p>If you don't specify otherwise in the configuration of your app\
              \ client, your refresh tokens are valid for 30 days.</p>"
          title: RefreshTokenValidity
        AccessTokenValidity:
          allOf:
          - $ref: '#/components/schemas/AccessTokenValidityType'
          - description: "<p>The access token time limit. After this limit expires,\
              \ your user can't use their access token. To specify the time unit for\
              \ <code>AccessTokenValidity</code> as <code>seconds</code>, <code>minutes</code>,\
              \ <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>\
              \ value in your API request.</p> <p>For example, when you set <code>AccessTokenValidity</code>\
              \ to <code>10</code> and <code>TokenValidityUnits</code> to <code>hours</code>,\
              \ your user can authorize access with their access token for 10 hours.</p>\
              \ <p>The default time unit for <code>AccessTokenValidity</code> in an\
              \ API request is hours. <i>Valid range</i> is displayed below in seconds.</p>\
              \ <p>If you don't specify otherwise in the configuration of your app\
              \ client, your access tokens are valid for one hour.</p>"
          title: AccessTokenValidity
        IdTokenValidity:
          allOf:
          - $ref: '#/components/schemas/IdTokenValidityType'
          - description: "<p>The ID token time limit. After this limit expires, your\
              \ user can't use their ID token. To specify the time unit for <code>IdTokenValidity</code>\
              \ as <code>seconds</code>, <code>minutes</code>, <code>hours</code>,\
              \ or <code>days</code>, set a <code>TokenValidityUnits</code> value\
              \ in your API request.</p> <p>For example, when you set <code>IdTokenValidity</code>\
              \ as <code>10</code> and <code>TokenValidityUnits</code> as <code>hours</code>,\
              \ your user can authenticate their session with their ID token for 10\
              \ hours.</p> <p>The default time unit for <code>IdTokenValidity</code>\
              \ in an API request is hours. <i>Valid range</i> is displayed below\
              \ in seconds.</p> <p>If you don't specify otherwise in the configuration\
              \ of your app client, your ID tokens are valid for one hour.</p>"
          title: IdTokenValidity
        TokenValidityUnits:
          $ref: '#/components/schemas/UpdateUserPoolClientRequest_TokenValidityUnits'
        ReadAttributes:
          allOf:
          - $ref: '#/components/schemas/ClientPermissionListType'
          - description: The read-only attributes of the user pool.
          title: ReadAttributes
        WriteAttributes:
          allOf:
          - $ref: '#/components/schemas/ClientPermissionListType'
          - description: The writeable attributes of the user pool.
          title: WriteAttributes
        ExplicitAuthFlows:
          allOf:
          - $ref: '#/components/schemas/ExplicitAuthFlowsListType'
          - description: "<p>The authentication flows that you want your user pool\
              \ client to support. For each app client in your user pool, you can\
              \ sign in your users with any combination of one or more flows, including\
              \ with a user name and Secure Remote Password (SRP), a user name and\
              \ password, or a custom authentication process that you define with\
              \ Lambda functions.</p> <note> <p>If you don't specify a value for <code>ExplicitAuthFlows</code>,\
              \ your user client supports <code>ALLOW_REFRESH_TOKEN_AUTH</code>, <code>ALLOW_USER_SRP_AUTH</code>,\
              \ and <code>ALLOW_CUSTOM_AUTH</code>.</p> </note> <p>Valid values include:</p>\
              \ <ul> <li> <p> <code>ALLOW_ADMIN_USER_PASSWORD_AUTH</code>: Enable\
              \ admin based user password authentication flow <code>ADMIN_USER_PASSWORD_AUTH</code>.\
              \ This setting replaces the <code>ADMIN_NO_SRP_AUTH</code> setting.\
              \ With this authentication flow, your app passes a user name and password\
              \ to Amazon Cognito in the request, instead of using the Secure Remote\
              \ Password (SRP) protocol to securely transmit the password.</p> </li>\
              \ <li> <p> <code>ALLOW_CUSTOM_AUTH</code>: Enable Lambda trigger based\
              \ authentication.</p> </li> <li> <p> <code>ALLOW_USER_PASSWORD_AUTH</code>:\
              \ Enable user password-based authentication. In this flow, Amazon Cognito\
              \ receives the password in the request instead of using the SRP protocol\
              \ to verify passwords.</p> </li> <li> <p> <code>ALLOW_USER_SRP_AUTH</code>:\
              \ Enable SRP-based authentication.</p> </li> <li> <p> <code>ALLOW_REFRESH_TOKEN_AUTH</code>:\
              \ Enable authflow to refresh tokens.</p> </li> </ul> <p>In some environments,\
              \ you will see the values <code>ADMIN_NO_SRP_AUTH</code>, <code>CUSTOM_AUTH_FLOW_ONLY</code>,\
              \ or <code>USER_PASSWORD_AUTH</code>. You can't assign these legacy\
              \ <code>ExplicitAuthFlows</code> values to user pool clients at the\
              \ same time as values that begin with <code>ALLOW_</code>, like <code>ALLOW_USER_SRP_AUTH</code>.</p>"
          title: ExplicitAuthFlows
        SupportedIdentityProviders:
          allOf:
          - $ref: '#/components/schemas/SupportedIdentityProvidersListType'
          - description: "A list of provider names for the IdPs that this client supports.\
              \ The following are supported: <code>COGNITO</code>, <code>Facebook</code>,\
              \ <code>Google</code>, <code>SignInWithApple</code>, <code>LoginWithAmazon</code>,\
              \ and the names of your own SAML and OIDC providers."
          title: SupportedIdentityProviders
        CallbackURLs:
          allOf:
          - $ref: '#/components/schemas/CallbackURLsListType'
          - description: <p>A list of allowed redirect (callback) URLs for the IdPs.</p>
              <p>A redirect URI must:</p> <ul> <li> <p>Be an absolute URI.</p> </li>
              <li> <p>Be registered with the authorization server.</p> </li> <li>
              <p>Not include a fragment component.</p> </li> </ul> <p>See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth
              2.0 - Redirection Endpoint</a>.</p> <p>Amazon Cognito requires HTTPS
              over HTTP except for http://localhost for testing purposes only.</p>
              <p>App callback URLs such as <code>myapp://example</code> are also supported.</p>
          title: CallbackURLs
        LogoutURLs:
          allOf:
          - $ref: '#/components/schemas/LogoutURLsListType'
          - description: A list of allowed logout URLs for the IdPs.
          title: LogoutURLs
        DefaultRedirectURI:
          allOf:
          - $ref: '#/components/schemas/RedirectUrlType'
          - description: <p>The default redirect URI. Must be in the <code>CallbackURLs</code>
              list.</p> <p>A redirect URI must:</p> <ul> <li> <p>Be an absolute URI.</p>
              </li> <li> <p>Be registered with the authorization server.</p> </li>
              <li> <p>Not include a fragment component.</p> </li> </ul> <p>See <a
              href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 -
              Redirection Endpoint</a>.</p> <p>Amazon Cognito requires HTTPS over
              HTTP except for <code>http://localhost</code> for testing purposes only.</p>
              <p>App callback URLs such as <code>myapp://example</code> are also supported.</p>
          title: DefaultRedirectURI
        AllowedOAuthFlows:
          allOf:
          - $ref: '#/components/schemas/OAuthFlowsType'
          - description: "<p>The allowed OAuth flows.</p> <dl> <dt>code</dt> <dd>\
              \ <p>Use a code grant flow, which provides an authorization code as\
              \ the response. This code can be exchanged for access tokens with the\
              \ <code>/oauth2/token</code> endpoint.</p> </dd> <dt>implicit</dt> <dd>\
              \ <p>Issue the access token (and, optionally, ID token, based on scopes)\
              \ directly to your user.</p> </dd> <dt>client_credentials</dt> <dd>\
              \ <p>Issue the access token from the <code>/oauth2/token</code> endpoint\
              \ directly to a non-person user using a combination of the client ID\
              \ and client secret.</p> </dd> </dl>"
          title: AllowedOAuthFlows
        AllowedOAuthScopes:
          allOf:
          - $ref: '#/components/schemas/ScopeListType'
          - description: "The allowed OAuth scopes. Possible values provided by OAuth\
              \ are <code>phone</code>, <code>email</code>, <code>openid</code>, and\
              \ <code>profile</code>. Possible values provided by Amazon Web Services\
              \ are <code>aws.cognito.signin.user.admin</code>. Custom scopes created\
              \ in Resource Servers are also supported."
          title: AllowedOAuthScopes
        AllowedOAuthFlowsUserPoolClient:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "<p>Set to <code>true</code> to use OAuth 2.0 features in\
              \ your user pool app client.</p> <p> <code>AllowedOAuthFlowsUserPoolClient</code>\
              \ must be <code>true</code> before you can configure the following features\
              \ in your app client.</p> <ul> <li> <p> <code>CallBackURLs</code>: Callback\
              \ URLs.</p> </li> <li> <p> <code>LogoutURLs</code>: Sign-out redirect\
              \ URLs.</p> </li> <li> <p> <code>AllowedOAuthScopes</code>: OAuth 2.0\
              \ scopes.</p> </li> <li> <p> <code>AllowedOAuthFlows</code>: Support\
              \ for authorization code, implicit, and client credentials OAuth 2.0\
              \ grants.</p> </li> </ul> <p>To use OAuth 2.0 features, configure one\
              \ of these features in the Amazon Cognito console or set <code>AllowedOAuthFlowsUserPoolClient</code>\
              \ to <code>true</code> in a <code>CreateUserPoolClient</code> or <code>UpdateUserPoolClient</code>\
              \ API request. If you don't set a value for <code>AllowedOAuthFlowsUserPoolClient</code>\
              \ in a request with the CLI or SDKs, it defaults to <code>false</code>.</p>"
          title: AllowedOAuthFlowsUserPoolClient
        AnalyticsConfiguration:
          $ref: '#/components/schemas/UpdateUserPoolClientRequest_AnalyticsConfiguration'
        PreventUserExistenceErrors:
          allOf:
          - $ref: '#/components/schemas/PreventUserExistenceErrorTypes'
          - description: "<p>Errors and responses that you want Amazon Cognito APIs\
              \ to return during authentication, account confirmation, and password\
              \ recovery when the user doesn't exist in the user pool. When set to\
              \ <code>ENABLED</code> and the user doesn't exist, authentication returns\
              \ an error indicating either the username or password was incorrect.\
              \ Account confirmation and password recovery return a response indicating\
              \ a code was sent to a simulated destination. When set to <code>LEGACY</code>,\
              \ those APIs return a <code>UserNotFoundException</code> exception if\
              \ the user doesn't exist in the user pool.</p> <p>Valid values include:</p>\
              \ <ul> <li> <p> <code>ENABLED</code> - This prevents user existence-related\
              \ errors.</p> </li> <li> <p> <code>LEGACY</code> - This represents the\
              \ early behavior of Amazon Cognito where user existence related errors\
              \ aren't prevented.</p> </li> </ul>"
          title: PreventUserExistenceErrors
        EnableTokenRevocation:
          allOf:
          - $ref: '#/components/schemas/WrappedBooleanType'
          - description: "Activates or deactivates token revocation. For more information\
              \ about revoking tokens, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html\"\
              >RevokeToken</a>."
          title: EnableTokenRevocation
        EnablePropagateAdditionalUserContextData:
          allOf:
          - $ref: '#/components/schemas/WrappedBooleanType'
          - description: "Activates the propagation of additional user context data.\
              \ For more information about propagation of user context data, see <a\
              \ href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html\"\
              > Adding advanced security to a user pool</a>. If you don’t include\
              \ this parameter, you can't send device fingerprint information, including\
              \ source IP address, to Amazon Cognito advanced security. You can only\
              \ activate <code>EnablePropagateAdditionalUserContextData</code> in\
              \ an app client that has a client secret."
          title: EnablePropagateAdditionalUserContextData
        AuthSessionValidity:
          allOf:
          - $ref: '#/components/schemas/AuthSessionValidityType'
          - description: "Amazon Cognito creates a session token for each API request\
              \ in an authentication flow. <code>AuthSessionValidity</code> is the\
              \ duration, in minutes, of that session token. Your user pool native\
              \ user must respond to each authentication challenge before the session\
              \ expires."
          title: AuthSessionValidity
      required:
      - ClientId
      - UserPoolId
      title: UpdateUserPoolClientRequest
      type: object
    UpdateUserPoolDomainResponse:
      description: The UpdateUserPoolDomain response output.
      example:
        CloudFrontDomain: ""
      properties:
        CloudFrontDomain:
          allOf:
          - $ref: '#/components/schemas/DomainType'
          - description: The Amazon CloudFront endpoint that Amazon Cognito set up
              when you added the custom domain to your user pool.
          title: CloudFrontDomain
      title: UpdateUserPoolDomainResponse
      type: object
    UpdateUserPoolDomainRequest:
      description: The UpdateUserPoolDomain request input.
      example:
        UserPoolId: ""
        CustomDomainConfig:
          CertificateArn: ""
        Domain: ""
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/DomainType'
          - description: "<p>The domain name for the custom domain that hosts the\
              \ sign-up and sign-in pages for your application. One example might\
              \ be <code>auth.example.com</code>. </p> <p>This string can include\
              \ only lowercase letters, numbers, and hyphens. Don't use a hyphen for\
              \ the first or last character. Use periods to separate subdomain names.</p>"
          title: Domain
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The ID of the user pool that is associated with the custom
              domain whose certificate you're updating.
          title: UserPoolId
        CustomDomainConfig:
          $ref: '#/components/schemas/UpdateUserPoolDomainRequest_CustomDomainConfig'
      required:
      - CustomDomainConfig
      - Domain
      - UserPoolId
      title: UpdateUserPoolDomainRequest
      type: object
    VerifySoftwareTokenResponse:
      example:
        Status: ""
        Session: ""
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/VerifySoftwareTokenResponseType'
          - description: The status of the verify software token.
          title: Status
        Session:
          allOf:
          - $ref: '#/components/schemas/SessionType'
          - description: The session that should be passed both ways in challenge-response
              calls to the service.
          title: Session
      title: VerifySoftwareTokenResponse
      type: object
    VerifySoftwareTokenRequest:
      example:
        AccessToken: ""
        UserCode: ""
        FriendlyDeviceName: ""
        Session: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose software token you want to verify.
          title: AccessToken
        Session:
          allOf:
          - $ref: '#/components/schemas/SessionType'
          - description: The session that should be passed both ways in challenge-response
              calls to the service.
          title: Session
        UserCode:
          allOf:
          - $ref: '#/components/schemas/SoftwareTokenMFAUserCodeType'
          - description: The one- time password computed using the secret code returned
              by <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AssociateSoftwareToken.html">AssociateSoftwareToken</a>.
          title: UserCode
        FriendlyDeviceName:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The friendly device name.
          title: FriendlyDeviceName
      required:
      - UserCode
      title: VerifySoftwareTokenRequest
      type: object
    EnableSoftwareTokenMFAException: {}
    VerifyUserAttributeResponse:
      description: A container representing the response from the server from the
        request to verify user attributes.
      properties: {}
      type: object
    VerifyUserAttributeRequest:
      description: Represents the request to verify user attributes.
      example:
        AccessToken: ""
        AttributeName: ""
        Code: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              whose user attributes you want to verify.
          title: AccessToken
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/AttributeNameType'
          - description: The attribute name in the request to verify user attributes.
          title: AttributeName
        Code:
          allOf:
          - $ref: '#/components/schemas/ConfirmationCodeType'
          - description: The verification code in the request to verify user attributes.
          title: Code
      required:
      - AccessToken
      - AttributeName
      - Code
      title: VerifyUserAttributeRequest
      type: object
    AWSAccountIdType:
      maxLength: 12
      pattern: "[0-9]+"
      type: string
    AccessTokenValidityType:
      maximum: 86400
      minimum: 1
      type: integer
    RecoveryMechanismsType:
      items:
        $ref: '#/components/schemas/RecoveryOptionType'
      maxItems: 2
      minItems: 1
      type: array
    AccountRecoverySettingType:
      description: The data type for <code>AccountRecoverySetting</code>.
      properties:
        RecoveryMechanisms:
          allOf:
          - $ref: '#/components/schemas/RecoveryMechanismsType'
          - description: The list of <code>RecoveryOptionTypes</code>.
          title: RecoveryMechanisms
      title: AccountRecoverySettingType
      type: object
    AccountTakeoverActionNotifyType:
      type: boolean
    AccountTakeoverEventActionType:
      enum:
      - BLOCK
      - MFA_IF_CONFIGURED
      - MFA_REQUIRED
      - NO_ACTION
      title: AccountTakeoverEventActionType
      type: string
    AccountTakeoverActionType:
      description: Account takeover action type.
      properties:
        Notify:
          allOf:
          - $ref: '#/components/schemas/AccountTakeoverActionNotifyType'
          - description: Flag specifying whether to send a notification.
          title: Notify
        EventAction:
          allOf:
          - $ref: '#/components/schemas/AccountTakeoverEventActionType'
          - description: "<p>The action to take in response to the account takeover\
              \ action. Valid values are as follows:</p> <ul> <li> <p> <code>BLOCK</code>\
              \ Choosing this action will block the request.</p> </li> <li> <p> <code>MFA_IF_CONFIGURED</code>\
              \ Present an MFA challenge if user has configured it, else allow the\
              \ request.</p> </li> <li> <p> <code>MFA_REQUIRED</code> Present an MFA\
              \ challenge if user has configured it, else block the request.</p> </li>\
              \ <li> <p> <code>NO_ACTION</code> Allow the user to sign in.</p> </li>\
              \ </ul>"
          title: EventAction
      required:
      - EventAction
      - Notify
      title: AccountTakeoverActionType
      type: object
    AccountTakeoverActionsType:
      description: Account takeover actions type.
      properties:
        LowAction:
          $ref: '#/components/schemas/AccountTakeoverActionsType_LowAction'
        MediumAction:
          $ref: '#/components/schemas/AccountTakeoverActionsType_MediumAction'
        HighAction:
          $ref: '#/components/schemas/AccountTakeoverActionsType_HighAction'
      title: AccountTakeoverActionsType
      type: object
    NotifyConfigurationType:
      description: The notify configuration type.
      properties:
        From:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: "The email address that is sending the email. The address\
              \ must be either individually verified with Amazon Simple Email Service,\
              \ or from a domain that has been verified with Amazon SES."
          title: From
        ReplyTo:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The destination to which the receiver of an email should
              reply to.
          title: ReplyTo
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The Amazon Resource Name (ARN) of the identity that is associated
              with the sending authorization policy. This identity permits Amazon
              Cognito to send for the email address specified in the <code>From</code>
              parameter.
          title: SourceArn
        BlockEmail:
          $ref: '#/components/schemas/NotifyConfigurationType_BlockEmail'
        NoActionEmail:
          $ref: '#/components/schemas/NotifyConfigurationType_NoActionEmail'
        MfaEmail:
          $ref: '#/components/schemas/NotifyConfigurationType_MfaEmail'
      required:
      - SourceArn
      title: NotifyConfigurationType
      type: object
    AccountTakeoverRiskConfigurationType:
      description: Configuration for mitigation actions and notification for different
        levels of risk detected for a potential account takeover.
      properties:
        NotifyConfiguration:
          $ref: '#/components/schemas/AccountTakeoverRiskConfigurationType_NotifyConfiguration'
        Actions:
          $ref: '#/components/schemas/AccountTakeoverRiskConfigurationType_Actions'
      required:
      - Actions
      title: AccountTakeoverRiskConfigurationType
      type: object
    UserPoolIdType:
      maxLength: 55
      minLength: 1
      pattern: "[\\w-]+_[0-9a-zA-Z]+"
      type: string
    CustomAttributesListType:
      items:
        $ref: '#/components/schemas/SchemaAttributeType'
      maxItems: 25
      minItems: 1
      type: array
    UsernameType:
      format: password
      maxLength: 128
      minLength: 1
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
      type: string
    GroupNameType:
      maxLength: 128
      minLength: 1
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
      type: string
    ClientMetadataType:
      additionalProperties:
        $ref: '#/components/schemas/StringType'
      type: object
    BooleanType:
      type: boolean
    AdminCreateUserUnusedAccountValidityDaysType:
      maximum: 365
      minimum: 0
      type: integer
    MessageTemplateType:
      description: The message template structure.
      properties:
        SMSMessage:
          allOf:
          - $ref: '#/components/schemas/SmsVerificationMessageType'
          - description: The message template for SMS messages.
          title: SMSMessage
        EmailMessage:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationMessageType'
          - description: 'The message template for email messages. EmailMessage is
              allowed only if <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">EmailSendingAccount</a>
              is DEVELOPER. '
          title: EmailMessage
        EmailSubject:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationSubjectType'
          - description: 'The subject line for email messages. EmailSubject is allowed
              only if <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">EmailSendingAccount</a>
              is DEVELOPER. '
          title: EmailSubject
      title: MessageTemplateType
      type: object
    AdminCreateUserConfigType:
      description: The configuration for creating a new user profile.
      properties:
        AllowAdminCreateUserOnly:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: Set to <code>True</code> if only the administrator is allowed
              to create user profiles. Set to <code>False</code> if users can sign
              themselves up via an app.
          title: AllowAdminCreateUserOnly
        UnusedAccountValidityDays:
          allOf:
          - $ref: '#/components/schemas/AdminCreateUserUnusedAccountValidityDaysType'
          - description: "<p>The user account expiration limit, in days, after which\
              \ a new account that hasn't signed in is no longer usable. To reset\
              \ the account after that time limit, you must call <code>AdminCreateUser</code>\
              \ again, specifying <code>\"RESEND\"</code> for the <code>MessageAction</code>\
              \ parameter. The default value for this parameter is 7. </p> <note>\
              \ <p>If you set a value for <code>TemporaryPasswordValidityDays</code>\
              \ in <code>PasswordPolicy</code>, that value will be used, and <code>UnusedAccountValidityDays</code>\
              \ will be no longer be an available parameter for that user pool.</p>\
              \ </note>"
          title: UnusedAccountValidityDays
        InviteMessageTemplate:
          $ref: '#/components/schemas/AdminCreateUserConfigType_InviteMessageTemplate'
      title: AdminCreateUserConfigType
      type: object
    AttributeListType:
      items:
        $ref: '#/components/schemas/AttributeType'
      type: array
    PasswordType:
      format: password
      maxLength: 256
      pattern: "[\\S]+"
      type: string
    ForceAliasCreation:
      type: boolean
    MessageActionType:
      enum:
      - RESEND
      - SUPPRESS
      title: MessageActionType
      type: string
    DeliveryMediumListType:
      items:
        $ref: '#/components/schemas/DeliveryMediumType'
      type: array
    UserType:
      description: A user profile in a Amazon Cognito user pool.
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          - description: The user name of the user you want to describe.
          title: Username
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeListType'
          - description: A container with information about the user type attributes.
          title: Attributes
        UserCreateDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: The creation date of the user.
          title: UserCreateDate
        UserLastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was modified."
          title: UserLastModifiedDate
        Enabled:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: Specifies whether the user is enabled.
          title: Enabled
        UserStatus:
          allOf:
          - $ref: '#/components/schemas/UserStatusType'
          - description: "<p>The user status. This can be one of the following:</p>\
              \ <ul> <li> <p>UNCONFIRMED - User has been created but not confirmed.</p>\
              \ </li> <li> <p>CONFIRMED - User has been confirmed.</p> </li> <li>\
              \ <p>EXTERNAL_PROVIDER - User signed in with a third-party IdP.</p>\
              \ </li> <li> <p>UNKNOWN - User status isn't known.</p> </li> <li> <p>RESET_REQUIRED\
              \ - User is confirmed, but the user must request a code and reset their\
              \ password before they can sign in.</p> </li> <li> <p>FORCE_CHANGE_PASSWORD\
              \ - The user is confirmed and the user can sign in using a temporary\
              \ password, but on first sign-in, the user must change their password\
              \ to a new value before doing anything else. </p> </li> </ul>"
          title: UserStatus
        MFAOptions:
          allOf:
          - $ref: '#/components/schemas/MFAOptionListType'
          - description: The MFA options for the user.
          title: MFAOptions
      title: UserType
      type: object
    AttributeNameListType:
      items:
        $ref: '#/components/schemas/AttributeNameType'
      type: array
    StringType:
      maxLength: 131072
      minLength: 0
      title: StringType
      type: string
    ProviderUserIdentifierType:
      description: A container for information about an IdP for a user pool.
      properties:
        ProviderName:
          allOf:
          - $ref: '#/components/schemas/ProviderNameType'
          - description: "The name of the provider, such as Facebook, Google, or Login\
              \ with Amazon."
          title: ProviderName
        ProviderAttributeName:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: "The name of the provider attribute to link to, such as <code>NameID</code>."
          title: ProviderAttributeName
        ProviderAttributeValue:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: "The value of the provider attribute to link to, such as\
              \ <code>xxxxx_account</code>."
          title: ProviderAttributeValue
      title: ProviderUserIdentifierType
      type: object
    DeviceKeyType:
      maxLength: 55
      minLength: 1
      pattern: "[\\w-]+_[0-9a-f-]+"
      type: string
    DeviceType:
      description: The device type.
      properties:
        DeviceKey:
          allOf:
          - $ref: '#/components/schemas/DeviceKeyType'
          - description: The device key.
          title: DeviceKey
        DeviceAttributes:
          allOf:
          - $ref: '#/components/schemas/AttributeListType'
          - description: The device attributes.
          title: DeviceAttributes
        DeviceCreateDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: The creation date of the device.
          title: DeviceCreateDate
        DeviceLastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was modified."
          title: DeviceLastModifiedDate
        DeviceLastAuthenticatedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: The date when the device was last authenticated.
          title: DeviceLastAuthenticatedDate
      title: DeviceType
      type: object
    DateType:
      format: date-time
      type: string
    UserStatusType:
      enum:
      - UNCONFIRMED
      - CONFIRMED
      - ARCHIVED
      - COMPROMISED
      - UNKNOWN
      - RESET_REQUIRED
      - FORCE_CHANGE_PASSWORD
      title: UserStatusType
      type: string
    MFAOptionListType:
      items:
        $ref: '#/components/schemas/MFAOptionType'
      type: array
    UserMFASettingListType:
      items:
        $ref: '#/components/schemas/StringType'
      type: array
    ClientIdType:
      format: password
      maxLength: 128
      minLength: 1
      pattern: "[\\w+]+"
      type: string
    AuthFlowType:
      enum:
      - USER_SRP_AUTH
      - REFRESH_TOKEN_AUTH
      - REFRESH_TOKEN
      - CUSTOM_AUTH
      - ADMIN_NO_SRP_AUTH
      - USER_PASSWORD_AUTH
      - ADMIN_USER_PASSWORD_AUTH
      title: AuthFlowType
      type: string
    AuthParametersType:
      additionalProperties:
        $ref: '#/components/schemas/StringType'
      type: object
    AnalyticsMetadataType:
      description: "<p>An Amazon Pinpoint analytics endpoint.</p> <p>An endpoint uniquely\
        \ identifies a mobile device, email address, or phone number that can receive\
        \ messages from Amazon Pinpoint analytics. For more information about Amazon\
        \ Web Services Regions that can contain Amazon Pinpoint resources for use\
        \ with Amazon Cognito user pools, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-pinpoint-integration.html\"\
        >Using Amazon Pinpoint analytics with Amazon Cognito user pools</a>.</p>"
      properties:
        AnalyticsEndpointId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The endpoint ID.
          title: AnalyticsEndpointId
      title: AnalyticsMetadataType
      type: object
    ContextDataType:
      description: Contextual user data type used for evaluating the risk of an unexpected
        event by Amazon Cognito advanced security.
      properties:
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The source IP address of your user's device.
          title: IpAddress
        ServerName:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: Your server endpoint where this API is invoked.
          title: ServerName
        ServerPath:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: Your server path where this API is invoked.
          title: ServerPath
        HttpHeaders:
          allOf:
          - $ref: '#/components/schemas/HttpHeaderList'
          - description: HttpHeaders received on your server in same order.
          title: HttpHeaders
        EncodedData:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: "Encoded device-fingerprint details that your app collected\
              \ with the Amazon Cognito context data collection library. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-adaptive-authentication.html#user-pool-settings-adaptive-authentication-device-fingerprint\"\
              >Adding user device and session data to API requests</a>."
          title: EncodedData
      required:
      - HttpHeaders
      - IpAddress
      - ServerName
      - ServerPath
      title: ContextDataType
      type: object
    ChallengeNameType:
      enum:
      - SMS_MFA
      - SOFTWARE_TOKEN_MFA
      - SELECT_MFA_TYPE
      - MFA_SETUP
      - PASSWORD_VERIFIER
      - CUSTOM_CHALLENGE
      - DEVICE_SRP_AUTH
      - DEVICE_PASSWORD_VERIFIER
      - ADMIN_NO_SRP_AUTH
      - NEW_PASSWORD_REQUIRED
      title: ChallengeNameType
      type: string
    SessionType:
      maxLength: 2048
      minLength: 20
      type: string
    ChallengeParametersType:
      additionalProperties:
        $ref: '#/components/schemas/StringType'
      type: object
    AuthenticationResultType:
      description: The authentication result.
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: A valid access token that Amazon Cognito issued to the user
              who you want to authenticate.
          title: AccessToken
        ExpiresIn:
          allOf:
          - $ref: '#/components/schemas/IntegerType'
          - description: The expiration period of the authentication result in seconds.
          title: ExpiresIn
        TokenType:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The token type.
          title: TokenType
        RefreshToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: The refresh token.
          title: RefreshToken
        IdToken:
          allOf:
          - $ref: '#/components/schemas/TokenModelType'
          - description: The ID token.
          title: IdToken
        NewDeviceMetadata:
          $ref: '#/components/schemas/AuthenticationResultType_NewDeviceMetadata'
      title: AuthenticationResultType
      type: object
    QueryLimitType:
      maximum: 60
      minimum: 0
      type: integer
    SearchPaginationTokenType:
      minLength: 1
      pattern: "[\\S]+"
      type: string
    DeviceListType:
      items:
        $ref: '#/components/schemas/DeviceType'
      type: array
    PaginationKey:
      minLength: 1
      pattern: "[\\S]+"
      type: string
    GroupListType:
      items:
        $ref: '#/components/schemas/GroupType'
      type: array
    AuthEventsType:
      items:
        $ref: '#/components/schemas/AuthEventType'
      type: array
    ChallengeResponsesType:
      additionalProperties:
        $ref: '#/components/schemas/StringType'
      type: object
    SMSMfaSettingsType:
      description: "The type used for enabling SMS multi-factor authentication (MFA)\
        \ at the user level. Phone numbers don't need to be verified to be used for\
        \ SMS MFA. If an MFA type is activated for a user, the user will be prompted\
        \ for MFA during all sign-in attempts, unless device tracking is turned on\
        \ and the device has been trusted. If you would like MFA to be applied selectively\
        \ based on the assessed risk level of sign-in attempts, deactivate MFA for\
        \ users and turn on Adaptive Authentication for the user pool."
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "Specifies whether SMS text message MFA is activated. If\
              \ an MFA type is activated for a user, the user will be prompted for\
              \ MFA during all sign-in attempts, unless device tracking is turned\
              \ on and the device has been trusted."
          title: Enabled
        PreferredMfa:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: Specifies whether SMS is the preferred MFA method.
          title: PreferredMfa
      title: SMSMfaSettingsType
      type: object
    SoftwareTokenMfaSettingsType:
      description: "The type used for enabling software token MFA at the user level.\
        \ If an MFA type is activated for a user, the user will be prompted for MFA\
        \ during all sign-in attempts, unless device tracking is turned on and the\
        \ device has been trusted. If you want MFA to be applied selectively based\
        \ on the assessed risk level of sign-in attempts, deactivate MFA for users\
        \ and turn on Adaptive Authentication for the user pool."
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "Specifies whether software token MFA is activated. If an\
              \ MFA type is activated for a user, the user will be prompted for MFA\
              \ during all sign-in attempts, unless device tracking is turned on and\
              \ the device has been trusted."
          title: Enabled
        PreferredMfa:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: Specifies whether software token MFA is the preferred MFA
              method.
          title: PreferredMfa
      title: SoftwareTokenMfaSettingsType
      type: object
    EventIdType:
      maxLength: 50
      minLength: 1
      pattern: "[\\w+-]+"
      type: string
    FeedbackValueType:
      enum:
      - Valid
      - Invalid
      title: FeedbackValueType
      type: string
    DeviceRememberedStatusType:
      enum:
      - remembered
      - not_remembered
      title: DeviceRememberedStatusType
      type: string
    AdvancedSecurityModeType:
      enum:
      - "OFF"
      - AUDIT
      - ENFORCED
      title: AdvancedSecurityModeType
      type: string
    AliasAttributeType:
      enum:
      - phone_number
      - email
      - preferred_username
      title: AliasAttributeType
      type: string
    AliasAttributesListType:
      items:
        $ref: '#/components/schemas/AliasAttributeType'
      type: array
    HexStringType:
      pattern: "^[0-9a-fA-F]+$"
      type: string
    ArnType:
      maxLength: 2048
      minLength: 20
      pattern: "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\\
        w+=/,.@-]+)?(:[\\w+=/,.@-]+)?"
      type: string
    AnalyticsConfigurationType:
      description: "<p>The Amazon Pinpoint analytics configuration necessary to collect\
        \ metrics for a user pool.</p> <note> <p>In Regions where Amazon Pinpoint\
        \ isn't available, user pools only support sending events to Amazon Pinpoint\
        \ projects in us-east-1. In Regions where Amazon Pinpoint is available, user\
        \ pools support sending events to Amazon Pinpoint projects within that same\
        \ Region.</p> </note>"
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/HexStringType'
          - description: The application ID for an Amazon Pinpoint application.
          title: ApplicationId
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The Amazon Resource Name (ARN) of an Amazon Pinpoint project.
              You can use the Amazon Pinpoint project to integrate with the chosen
              user pool Client. Amazon Cognito publishes events to the Amazon Pinpoint
              project that the app ARN declares.
          title: ApplicationArn
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The ARN of an Identity and Access Management role that authorizes
              Amazon Cognito to publish events to Amazon Pinpoint analytics.
          title: RoleArn
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The external ID.
          title: ExternalId
        UserDataShared:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "If <code>UserDataShared</code> is <code>true</code>, Amazon\
              \ Cognito includes user data in the events that it publishes to Amazon\
              \ Pinpoint analytics."
          title: UserDataShared
      title: AnalyticsConfigurationType
      type: object
    TokenModelType:
      format: password
      pattern: "[A-Za-z0-9-_=.]+"
      type: string
    SecretCodeType:
      format: password
      minLength: 16
      pattern: "[A-Za-z0-9]+"
      type: string
    AttributeDataType:
      enum:
      - String
      - Number
      - DateTime
      - Boolean
      title: AttributeDataType
      type: string
    AttributeType:
      description: Specifies whether the attribute is standard or custom.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AttributeNameType'
          - description: The name of the attribute.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/AttributeValueType'
          - description: The value of the attribute.
          title: Value
      required:
      - Name
      title: AttributeType
      type: object
    AttributeMappingKeyType:
      maxLength: 32
      minLength: 1
      type: string
    AttributeMappingType:
      additionalProperties:
        $ref: '#/components/schemas/StringType'
      type: object
    AttributeNameType:
      maxLength: 32
      minLength: 1
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
      title: AttributeNameType
      type: string
    AttributeValueType:
      format: password
      maxLength: 2048
      type: string
    VerifiedAttributeType:
      enum:
      - phone_number
      - email
      title: VerifiedAttributeType
      type: string
    AttributesRequireVerificationBeforeUpdateType:
      items:
        $ref: '#/components/schemas/VerifiedAttributeType'
      type: array
    EventType:
      enum:
      - SignIn
      - SignUp
      - ForgotPassword
      - PasswordChange
      - ResendCode
      title: EventType
      type: string
    EventResponseType:
      enum:
      - Pass
      - Fail
      - InProgress
      title: EventResponseType
      type: string
    EventRiskType:
      description: The event risk type.
      properties:
        RiskDecision:
          allOf:
          - $ref: '#/components/schemas/RiskDecisionType'
          - description: The risk decision.
          title: RiskDecision
        RiskLevel:
          allOf:
          - $ref: '#/components/schemas/RiskLevelType'
          - description: The risk level.
          title: RiskLevel
        CompromisedCredentialsDetected:
          allOf:
          - $ref: '#/components/schemas/WrappedBooleanType'
          - description: Indicates whether compromised credentials were detected during
              an authentication event.
          title: CompromisedCredentialsDetected
      title: EventRiskType
      type: object
    ChallengeResponseListType:
      items:
        $ref: '#/components/schemas/ChallengeResponseType'
      type: array
    EventContextDataType:
      description: Specifies the user context data captured at the time of an event
        request.
      properties:
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The source IP address of your user's device.
          title: IpAddress
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The user's device name.
          title: DeviceName
        Timezone:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The user's time zone.
          title: Timezone
        City:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The user's city.
          title: City
        Country:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The user's country.
          title: Country
      title: EventContextDataType
      type: object
    EventFeedbackType:
      description: Specifies the event feedback type.
      properties:
        FeedbackValue:
          allOf:
          - $ref: '#/components/schemas/FeedbackValueType'
          - description: "The authentication event feedback value. When you provide\
              \ a <code>FeedbackValue</code> value of <code>valid</code>, you tell\
              \ Amazon Cognito that you trust a user session where Amazon Cognito\
              \ has evaluated some level of risk. When you provide a <code>FeedbackValue</code>\
              \ value of <code>invalid</code>, you tell Amazon Cognito that you don't\
              \ trust a user session, or you don't believe that Amazon Cognito evaluated\
              \ a high-enough risk level."
          title: FeedbackValue
        Provider:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The provider.
          title: Provider
        FeedbackDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: The event feedback date.
          title: FeedbackDate
      required:
      - FeedbackValue
      - Provider
      title: EventFeedbackType
      type: object
    AuthEventType:
      description: The authentication event type.
      properties:
        EventId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The event ID.
          title: EventId
        EventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: The event type.
          title: EventType
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was created."
          title: CreationDate
        EventResponse:
          allOf:
          - $ref: '#/components/schemas/EventResponseType'
          - description: The event response.
          title: EventResponse
        EventRisk:
          $ref: '#/components/schemas/AuthEventType_EventRisk'
        ChallengeResponses:
          allOf:
          - $ref: '#/components/schemas/ChallengeResponseListType'
          - description: The challenge responses.
          title: ChallengeResponses
        EventContextData:
          $ref: '#/components/schemas/AuthEventType_EventContextData'
        EventFeedback:
          $ref: '#/components/schemas/AuthEventType_EventFeedback'
      title: AuthEventType
      type: object
    AuthSessionValidityType:
      maximum: 15
      minimum: 3
      type: integer
    IntegerType:
      type: integer
    NewDeviceMetadataType:
      description: The new device metadata type.
      properties:
        DeviceKey:
          allOf:
          - $ref: '#/components/schemas/DeviceKeyType'
          - description: The device key.
          title: DeviceKey
        DeviceGroupKey:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The device group key.
          title: DeviceGroupKey
      title: NewDeviceMetadataType
      type: object
    BlockedIPRangeListType:
      items:
        $ref: '#/components/schemas/StringType'
      maxItems: 200
      type: array
    CSSType:
      maxLength: 131072
      minLength: 0
      type: string
    CSSVersionType:
      type: string
    RedirectUrlType:
      maxLength: 1024
      minLength: 1
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
      title: RedirectUrlType
      type: string
    CallbackURLsListType:
      items:
        $ref: '#/components/schemas/RedirectUrlType'
      maxItems: 100
      minItems: 0
      type: array
    ChallengeName:
      enum:
      - Password
      - Mfa
      title: ChallengeName
      type: string
    ChallengeResponse:
      enum:
      - Success
      - Failure
      title: ChallengeResponse
      type: string
    ChallengeResponseType:
      description: The challenge response type.
      properties:
        ChallengeName:
          allOf:
          - $ref: '#/components/schemas/ChallengeName'
          - description: The challenge name.
          title: ChallengeName
        ChallengeResponse:
          allOf:
          - $ref: '#/components/schemas/ChallengeResponse'
          - description: The challenge response.
          title: ChallengeResponse
      title: ChallengeResponseType
      type: object
    ClientNameType:
      maxLength: 128
      minLength: 1
      pattern: "[\\w\\s+=,.@-]+"
      type: string
    ClientPermissionType:
      maxLength: 2048
      minLength: 1
      title: ClientPermissionType
      type: string
    ClientPermissionListType:
      items:
        $ref: '#/components/schemas/ClientPermissionType'
      type: array
    ClientSecretType:
      format: password
      maxLength: 64
      minLength: 1
      pattern: "[\\w+]+"
      type: string
    CloudWatchLogsConfigurationType:
      description: The CloudWatch logging destination of a user pool detailed activity
        logging configuration.
      properties:
        LogGroupArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The Amazon Resource Name (arn) of a CloudWatch Logs log group
              where your user pool sends logs. The log group must not be encrypted
              with Key Management Service and must be in the same Amazon Web Services
              account as your user pool.
          title: LogGroupArn
      title: CloudWatchLogsConfigurationType
      type: object
    CodeDeliveryDetailsType:
      description: The delivery details for an email or SMS message that Amazon Cognito
        sent for authentication or verification.
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The email address or phone number destination where Amazon
              Cognito sent the code.
          title: Destination
        DeliveryMedium:
          allOf:
          - $ref: '#/components/schemas/DeliveryMediumType'
          - description: The method that Amazon Cognito used to send the code.
          title: DeliveryMedium
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/AttributeNameType'
          - description: The name of the attribute that Amazon Cognito verifies with
              the code.
          title: AttributeName
      title: CodeDeliveryDetailsType
      type: object
    CodeDeliveryDetailsListType:
      items:
        $ref: '#/components/schemas/CodeDeliveryDetailsType'
      type: array
    DeliveryMediumType:
      enum:
      - SMS
      - EMAIL
      title: DeliveryMediumType
      type: string
    CompletionMessageType:
      maxLength: 128
      minLength: 1
      pattern: "[\\w]+"
      type: string
    CompromisedCredentialsEventActionType:
      enum:
      - BLOCK
      - NO_ACTION
      title: CompromisedCredentialsEventActionType
      type: string
    CompromisedCredentialsActionsType:
      description: The compromised credentials actions type.
      properties:
        EventAction:
          allOf:
          - $ref: '#/components/schemas/CompromisedCredentialsEventActionType'
          - description: The event action.
          title: EventAction
      required:
      - EventAction
      title: CompromisedCredentialsActionsType
      type: object
    EventFiltersType:
      items:
        $ref: '#/components/schemas/EventFilterType'
      type: array
    CompromisedCredentialsRiskConfigurationType:
      description: The compromised credentials risk configuration type.
      properties:
        EventFilter:
          allOf:
          - $ref: '#/components/schemas/EventFiltersType'
          - description: Perform the action for these events. The default is to perform
              all events if no event filter is specified.
          title: EventFilter
        Actions:
          $ref: '#/components/schemas/CompromisedCredentialsRiskConfigurationType_Actions'
      required:
      - Actions
      title: CompromisedCredentialsRiskConfigurationType
      type: object
    DeviceSecretVerifierConfigType:
      description: The device verifier against which it is authenticated.
      properties:
        PasswordVerifier:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The password verifier.
          title: PasswordVerifier
        Salt:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: 'The <a href="https://en.wikipedia.org/wiki/Salt_(cryptography)">salt</a> '
          title: Salt
      title: DeviceSecretVerifierConfigType
      type: object
    DeviceNameType:
      maxLength: 1024
      minLength: 1
      type: string
    SecretHashType:
      format: password
      maxLength: 128
      minLength: 1
      pattern: "[\\w+=/]+"
      type: string
    ConfirmationCodeType:
      maxLength: 2048
      minLength: 1
      pattern: "[\\S]+"
      type: string
    UserContextDataType:
      description: "Contextual data, such as the user's device fingerprint, IP address,\
        \ or location, used for evaluating the risk of an unexpected event by Amazon\
        \ Cognito advanced security."
      properties:
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The source IP address of your user's device.
          title: IpAddress
        EncodedData:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: "Encoded device-fingerprint details that your app collected\
              \ with the Amazon Cognito context data collection library. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-adaptive-authentication.html#user-pool-settings-adaptive-authentication-device-fingerprint\"\
              >Adding user device and session data to API requests</a>."
          title: EncodedData
      title: UserContextDataType
      type: object
    HttpHeaderList:
      items:
        $ref: '#/components/schemas/HttpHeader'
      type: array
    DescriptionType:
      maxLength: 2048
      type: string
    PrecedenceType:
      minimum: 0
      type: integer
    GroupType:
      description: The group type.
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupNameType'
          - description: The name of the group.
          title: GroupName
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionType'
          - description: A string containing the description of the group.
          title: Description
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The role Amazon Resource Name (ARN) for the group.
          title: RoleArn
        Precedence:
          allOf:
          - $ref: '#/components/schemas/PrecedenceType'
          - description: "<p>A non-negative integer value that specifies the precedence\
              \ of this group relative to the other groups that a user can belong\
              \ to in the user pool. Zero is the highest precedence value. Groups\
              \ with lower <code>Precedence</code> values take precedence over groups\
              \ with higher ornull <code>Precedence</code> values. If a user belongs\
              \ to two or more groups, it is the group with the lowest precedence\
              \ value whose role ARN is given in the user's tokens for the <code>cognito:roles</code>\
              \ and <code>cognito:preferred_role</code> claims.</p> <p>Two groups\
              \ can have the same <code>Precedence</code> value. If this happens,\
              \ neither group takes precedence over the other. If two groups with\
              \ the same <code>Precedence</code> have the same role ARN, that role\
              \ is used in the <code>cognito:preferred_role</code> claim in tokens\
              \ for users in each group. If the two groups have different role ARNs,\
              \ the <code>cognito:preferred_role</code> claim isn't set in users'\
              \ tokens.</p> <p>The default <code>Precedence</code> value is null.</p>"
          title: Precedence
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was modified."
          title: LastModifiedDate
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was created."
          title: CreationDate
      title: GroupType
      type: object
    ProviderNameTypeV1:
      maxLength: 32
      minLength: 3
      pattern: "[^_][\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}][^_]+"
      type: string
    IdentityProviderTypeType:
      enum:
      - SAML
      - Facebook
      - Google
      - LoginWithAmazon
      - SignInWithApple
      - OIDC
      title: IdentityProviderTypeType
      type: string
    ProviderDetailsType:
      additionalProperties:
        $ref: '#/components/schemas/StringType'
      type: object
    IdpIdentifiersListType:
      items:
        $ref: '#/components/schemas/IdpIdentifierType'
      maxItems: 50
      minItems: 0
      type: array
    IdentityProviderType:
      description: A container for information about an IdP.
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        ProviderName:
          allOf:
          - $ref: '#/components/schemas/ProviderNameType'
          - description: The IdP name.
          title: ProviderName
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderTypeType'
          - description: The IdP type.
          title: ProviderType
        ProviderDetails:
          allOf:
          - $ref: '#/components/schemas/ProviderDetailsType'
          - description: <p>The IdP details. The following list describes the provider
              detail keys for each IdP type.</p> <ul> <li> <p>For Google and Login
              with Amazon:</p> <ul> <li> <p>client_id</p> </li> <li> <p>client_secret</p>
              </li> <li> <p>authorize_scopes</p> </li> </ul> </li> <li> <p>For Facebook:</p>
              <ul> <li> <p>client_id</p> </li> <li> <p>client_secret</p> </li> <li>
              <p>authorize_scopes</p> </li> <li> <p>api_version</p> </li> </ul> </li>
              <li> <p>For Sign in with Apple:</p> <ul> <li> <p>client_id</p> </li>
              <li> <p>team_id</p> </li> <li> <p>key_id</p> </li> <li> <p>private_key</p>
              <p> <i>You can submit a private_key when you add or update an IdP. Describe
              operations don't return the private key.</i> </p> </li> <li> <p>authorize_scopes</p>
              </li> </ul> </li> <li> <p>For OIDC providers:</p> <ul> <li> <p>client_id</p>
              </li> <li> <p>client_secret</p> </li> <li> <p>attributes_request_method</p>
              </li> <li> <p>oidc_issuer</p> </li> <li> <p>authorize_scopes</p> </li>
              <li> <p>The following keys are only present if Amazon Cognito didn't
              discover them at the <code>oidc_issuer</code> URL.</p> <ul> <li> <p>authorize_url
              </p> </li> <li> <p>token_url </p> </li> <li> <p>attributes_url </p>
              </li> <li> <p>jwks_uri </p> </li> </ul> </li> <li> <p>Amazon Cognito
              sets the value of the following keys automatically. They are read-only.</p>
              <ul> <li> <p>attributes_url_add_attributes </p> </li> </ul> </li> </ul>
              </li> <li> <p>For SAML providers:</p> <ul> <li> <p>MetadataFile or MetadataURL</p>
              </li> <li> <p>IDPSignout <i>optional</i> </p> </li> </ul> </li> </ul>
          title: ProviderDetails
        AttributeMapping:
          allOf:
          - $ref: '#/components/schemas/AttributeMappingType'
          - description: A mapping of IdP attributes to standard and custom user pool
              attributes.
          title: AttributeMapping
        IdpIdentifiers:
          allOf:
          - $ref: '#/components/schemas/IdpIdentifiersListType'
          - description: A list of IdP identifiers.
          title: IdpIdentifiers
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was modified."
          title: LastModifiedDate
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was created."
          title: CreationDate
      title: IdentityProviderType
      type: object
    ResourceServerIdentifierType:
      maxLength: 256
      minLength: 1
      pattern: "[\\x21\\x23-\\x5B\\x5D-\\x7E]+"
      type: string
    ResourceServerNameType:
      maxLength: 256
      minLength: 1
      pattern: "[\\w\\s+=,.@-]+"
      type: string
    ResourceServerScopeListType:
      items:
        $ref: '#/components/schemas/ResourceServerScopeType'
      maxItems: 100
      type: array
    ResourceServerType:
      description: A container for information about a resource server for a user
        pool.
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool that hosts the resource
              server.
          title: UserPoolId
        Identifier:
          allOf:
          - $ref: '#/components/schemas/ResourceServerIdentifierType'
          - description: The identifier for the resource server.
          title: Identifier
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceServerNameType'
          - description: The name of the resource server.
          title: Name
        Scopes:
          allOf:
          - $ref: '#/components/schemas/ResourceServerScopeListType'
          - description: A list of scopes that are defined for the resource server.
          title: Scopes
      title: ResourceServerType
      type: object
    UserImportJobNameType:
      maxLength: 128
      minLength: 1
      pattern: "[\\w\\s+=,.@-]+"
      type: string
    UserImportJobType:
      description: The user import job type.
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/UserImportJobNameType'
          - description: The job name for the user import job.
          title: JobName
        JobId:
          allOf:
          - $ref: '#/components/schemas/UserImportJobIdType'
          - description: The job ID for the user import job.
          title: JobId
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool that the users are being
              imported into.
          title: UserPoolId
        PreSignedUrl:
          allOf:
          - $ref: '#/components/schemas/PreSignedUrlType'
          - description: The pre-signed URL to be used to upload the <code>.csv</code>
              file.
          title: PreSignedUrl
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was created."
          title: CreationDate
        StartDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: The date when the user import job was started.
          title: StartDate
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: The date when the user import job was completed.
          title: CompletionDate
        Status:
          allOf:
          - $ref: '#/components/schemas/UserImportJobStatusType'
          - description: "<p>The status of the user import job. One of the following:</p>\
              \ <ul> <li> <p> <code>Created</code> - The job was created but not started.</p>\
              \ </li> <li> <p> <code>Pending</code> - A transition state. You have\
              \ started the job, but it has not begun importing users yet.</p> </li>\
              \ <li> <p> <code>InProgress</code> - The job has started, and users\
              \ are being imported.</p> </li> <li> <p> <code>Stopping</code> - You\
              \ have stopped the job, but the job has not stopped importing users\
              \ yet.</p> </li> <li> <p> <code>Stopped</code> - You have stopped the\
              \ job, and the job has stopped importing users.</p> </li> <li> <p> <code>Succeeded</code>\
              \ - The job has completed successfully.</p> </li> <li> <p> <code>Failed</code>\
              \ - The job has stopped due to an error.</p> </li> <li> <p> <code>Expired</code>\
              \ - You created a job, but did not start the job within 24-48 hours.\
              \ All data associated with the job was deleted, and the job can't be\
              \ started.</p> </li> </ul>"
          title: Status
        CloudWatchLogsRoleArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: "The role Amazon Resource Name (ARN) for the Amazon CloudWatch\
              \ Logging role for the user import job. For more information, see \"\
              Creating the CloudWatch Logs IAM Role\" in the Amazon Cognito Developer\
              \ Guide."
          title: CloudWatchLogsRoleArn
        ImportedUsers:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: The number of users that were successfully imported.
          title: ImportedUsers
        SkippedUsers:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: The number of users that were skipped.
          title: SkippedUsers
        FailedUsers:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: The number of users that couldn't be imported.
          title: FailedUsers
        CompletionMessage:
          allOf:
          - $ref: '#/components/schemas/CompletionMessageType'
          - description: The message returned when the user import job is completed.
          title: CompletionMessage
      title: UserImportJobType
      type: object
    GenerateSecret:
      type: boolean
    RefreshTokenValidityType:
      maximum: 315360000
      minimum: 0
      type: integer
    IdTokenValidityType:
      maximum: 86400
      minimum: 1
      type: integer
    TokenValidityUnitsType:
      description: "The data type TokenValidityUnits specifies the time units you\
        \ use when you set the duration of ID, access, and refresh tokens."
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TimeUnitsType'
          - description: " A time unit of <code>seconds</code>, <code>minutes</code>,\
              \ <code>hours</code>, or <code>days</code> for the value that you set\
              \ in the <code>AccessTokenValidity</code> parameter. The default <code>AccessTokenValidity</code>\
              \ time unit is hours. <code>AccessTokenValidity</code> duration can\
              \ range from five minutes to one day."
          title: AccessToken
        IdToken:
          allOf:
          - $ref: '#/components/schemas/TimeUnitsType'
          - description: "A time unit of <code>seconds</code>, <code>minutes</code>,\
              \ <code>hours</code>, or <code>days</code> for the value that you set\
              \ in the <code>IdTokenValidity</code> parameter. The default <code>IdTokenValidity</code>\
              \ time unit is hours. <code>IdTokenValidity</code> duration can range\
              \ from five minutes to one day."
          title: IdToken
        RefreshToken:
          allOf:
          - $ref: '#/components/schemas/TimeUnitsType'
          - description: "A time unit of <code>seconds</code>, <code>minutes</code>,\
              \ <code>hours</code>, or <code>days</code> for the value that you set\
              \ in the <code>RefreshTokenValidity</code> parameter. The default <code>RefreshTokenValidity</code>\
              \ time unit is days. <code>RefreshTokenValidity</code> duration can\
              \ range from 60 minutes to 10 years."
          title: RefreshToken
      title: TokenValidityUnitsType
      type: object
    ExplicitAuthFlowsListType:
      items:
        $ref: '#/components/schemas/ExplicitAuthFlowsType'
      type: array
    SupportedIdentityProvidersListType:
      items:
        $ref: '#/components/schemas/ProviderNameType'
      type: array
    LogoutURLsListType:
      items:
        $ref: '#/components/schemas/RedirectUrlType'
      maxItems: 100
      minItems: 0
      type: array
    OAuthFlowsType:
      items:
        $ref: '#/components/schemas/OAuthFlowType'
      maxItems: 3
      minItems: 0
      type: array
    ScopeListType:
      items:
        $ref: '#/components/schemas/ScopeType'
      maxItems: 50
      type: array
    PreventUserExistenceErrorTypes:
      enum:
      - LEGACY
      - ENABLED
      title: PreventUserExistenceErrorTypes
      type: string
    WrappedBooleanType:
      type: boolean
    UserPoolClientType:
      description: Contains information about a user pool client.
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool client.
          title: UserPoolId
        ClientName:
          allOf:
          - $ref: '#/components/schemas/ClientNameType'
          - description: The client name from the user pool request of the client
              type.
          title: ClientName
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The ID of the client associated with the user pool.
          title: ClientId
        ClientSecret:
          allOf:
          - $ref: '#/components/schemas/ClientSecretType'
          - description: The client secret from the user pool request of the client
              type.
          title: ClientSecret
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was modified."
          title: LastModifiedDate
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was created."
          title: CreationDate
        RefreshTokenValidity:
          allOf:
          - $ref: '#/components/schemas/RefreshTokenValidityType'
          - description: "<p>The refresh token time limit. After this limit expires,\
              \ your user can't use their refresh token. To specify the time unit\
              \ for <code>RefreshTokenValidity</code> as <code>seconds</code>, <code>minutes</code>,\
              \ <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>\
              \ value in your API request.</p> <p>For example, when you set <code>RefreshTokenValidity</code>\
              \ as <code>10</code> and <code>TokenValidityUnits</code> as <code>days</code>,\
              \ your user can refresh their session and retrieve new access and ID\
              \ tokens for 10 days.</p> <p>The default time unit for <code>RefreshTokenValidity</code>\
              \ in an API request is days. You can't set <code>RefreshTokenValidity</code>\
              \ to 0. If you do, Amazon Cognito overrides the value with the default\
              \ value of 30 days. <i>Valid range</i> is displayed below in seconds.</p>\
              \ <p>If you don't specify otherwise in the configuration of your app\
              \ client, your refresh tokens are valid for 30 days.</p>"
          title: RefreshTokenValidity
        AccessTokenValidity:
          allOf:
          - $ref: '#/components/schemas/AccessTokenValidityType'
          - description: "<p>The access token time limit. After this limit expires,\
              \ your user can't use their access token. To specify the time unit for\
              \ <code>AccessTokenValidity</code> as <code>seconds</code>, <code>minutes</code>,\
              \ <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>\
              \ value in your API request.</p> <p>For example, when you set <code>AccessTokenValidity</code>\
              \ to <code>10</code> and <code>TokenValidityUnits</code> to <code>hours</code>,\
              \ your user can authorize access with their access token for 10 hours.</p>\
              \ <p>The default time unit for <code>AccessTokenValidity</code> in an\
              \ API request is hours. <i>Valid range</i> is displayed below in seconds.</p>\
              \ <p>If you don't specify otherwise in the configuration of your app\
              \ client, your access tokens are valid for one hour.</p>"
          title: AccessTokenValidity
        IdTokenValidity:
          allOf:
          - $ref: '#/components/schemas/IdTokenValidityType'
          - description: "<p>The ID token time limit. After this limit expires, your\
              \ user can't use their ID token. To specify the time unit for <code>IdTokenValidity</code>\
              \ as <code>seconds</code>, <code>minutes</code>, <code>hours</code>,\
              \ or <code>days</code>, set a <code>TokenValidityUnits</code> value\
              \ in your API request.</p> <p>For example, when you set <code>IdTokenValidity</code>\
              \ as <code>10</code> and <code>TokenValidityUnits</code> as <code>hours</code>,\
              \ your user can authenticate their session with their ID token for 10\
              \ hours.</p> <p>The default time unit for <code>IdTokenValidity</code>\
              \ in an API request is hours. <i>Valid range</i> is displayed below\
              \ in seconds.</p> <p>If you don't specify otherwise in the configuration\
              \ of your app client, your ID tokens are valid for one hour.</p>"
          title: IdTokenValidity
        TokenValidityUnits:
          $ref: '#/components/schemas/UserPoolClientType_TokenValidityUnits'
        ReadAttributes:
          allOf:
          - $ref: '#/components/schemas/ClientPermissionListType'
          - description: The Read-only attributes.
          title: ReadAttributes
        WriteAttributes:
          allOf:
          - $ref: '#/components/schemas/ClientPermissionListType'
          - description: The writeable attributes.
          title: WriteAttributes
        ExplicitAuthFlows:
          allOf:
          - $ref: '#/components/schemas/ExplicitAuthFlowsListType'
          - description: "<p>The authentication flows that you want your user pool\
              \ client to support. For each app client in your user pool, you can\
              \ sign in your users with any combination of one or more flows, including\
              \ with a user name and Secure Remote Password (SRP), a user name and\
              \ password, or a custom authentication process that you define with\
              \ Lambda functions.</p> <note> <p>If you don't specify a value for <code>ExplicitAuthFlows</code>,\
              \ your user client supports <code>ALLOW_REFRESH_TOKEN_AUTH</code>, <code>ALLOW_USER_SRP_AUTH</code>,\
              \ and <code>ALLOW_CUSTOM_AUTH</code>.</p> </note> <p>Valid values include:</p>\
              \ <ul> <li> <p> <code>ALLOW_ADMIN_USER_PASSWORD_AUTH</code>: Enable\
              \ admin based user password authentication flow <code>ADMIN_USER_PASSWORD_AUTH</code>.\
              \ This setting replaces the <code>ADMIN_NO_SRP_AUTH</code> setting.\
              \ With this authentication flow, your app passes a user name and password\
              \ to Amazon Cognito in the request, instead of using the Secure Remote\
              \ Password (SRP) protocol to securely transmit the password.</p> </li>\
              \ <li> <p> <code>ALLOW_CUSTOM_AUTH</code>: Enable Lambda trigger based\
              \ authentication.</p> </li> <li> <p> <code>ALLOW_USER_PASSWORD_AUTH</code>:\
              \ Enable user password-based authentication. In this flow, Amazon Cognito\
              \ receives the password in the request instead of using the SRP protocol\
              \ to verify passwords.</p> </li> <li> <p> <code>ALLOW_USER_SRP_AUTH</code>:\
              \ Enable SRP-based authentication.</p> </li> <li> <p> <code>ALLOW_REFRESH_TOKEN_AUTH</code>:\
              \ Enable authflow to refresh tokens.</p> </li> </ul> <p>In some environments,\
              \ you will see the values <code>ADMIN_NO_SRP_AUTH</code>, <code>CUSTOM_AUTH_FLOW_ONLY</code>,\
              \ or <code>USER_PASSWORD_AUTH</code>. You can't assign these legacy\
              \ <code>ExplicitAuthFlows</code> values to user pool clients at the\
              \ same time as values that begin with <code>ALLOW_</code>, like <code>ALLOW_USER_SRP_AUTH</code>.</p>"
          title: ExplicitAuthFlows
        SupportedIdentityProviders:
          allOf:
          - $ref: '#/components/schemas/SupportedIdentityProvidersListType'
          - description: "A list of provider names for the IdPs that this client supports.\
              \ The following are supported: <code>COGNITO</code>, <code>Facebook</code>,\
              \ <code>Google</code>, <code>SignInWithApple</code>, <code>LoginWithAmazon</code>,\
              \ and the names of your own SAML and OIDC providers."
          title: SupportedIdentityProviders
        CallbackURLs:
          allOf:
          - $ref: '#/components/schemas/CallbackURLsListType'
          - description: <p>A list of allowed redirect (callback) URLs for the IdPs.</p>
              <p>A redirect URI must:</p> <ul> <li> <p>Be an absolute URI.</p> </li>
              <li> <p>Be registered with the authorization server.</p> </li> <li>
              <p>Not include a fragment component.</p> </li> </ul> <p>See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth
              2.0 - Redirection Endpoint</a>.</p> <p>Amazon Cognito requires HTTPS
              over HTTP except for http://localhost for testing purposes only.</p>
              <p>App callback URLs such as myapp://example are also supported.</p>
          title: CallbackURLs
        LogoutURLs:
          allOf:
          - $ref: '#/components/schemas/LogoutURLsListType'
          - description: A list of allowed logout URLs for the IdPs.
          title: LogoutURLs
        DefaultRedirectURI:
          allOf:
          - $ref: '#/components/schemas/RedirectUrlType'
          - description: <p>The default redirect URI. Must be in the <code>CallbackURLs</code>
              list.</p> <p>A redirect URI must:</p> <ul> <li> <p>Be an absolute URI.</p>
              </li> <li> <p>Be registered with the authorization server.</p> </li>
              <li> <p>Not include a fragment component.</p> </li> </ul> <p>See <a
              href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 -
              Redirection Endpoint</a>.</p> <p>Amazon Cognito requires HTTPS over
              HTTP except for http://localhost for testing purposes only.</p> <p>App
              callback URLs such as myapp://example are also supported.</p>
          title: DefaultRedirectURI
        AllowedOAuthFlows:
          allOf:
          - $ref: '#/components/schemas/OAuthFlowsType'
          - description: "<p>The allowed OAuth flows.</p> <dl> <dt>code</dt> <dd>\
              \ <p>Use a code grant flow, which provides an authorization code as\
              \ the response. This code can be exchanged for access tokens with the\
              \ <code>/oauth2/token</code> endpoint.</p> </dd> <dt>implicit</dt> <dd>\
              \ <p>Issue the access token (and, optionally, ID token, based on scopes)\
              \ directly to your user.</p> </dd> <dt>client_credentials</dt> <dd>\
              \ <p>Issue the access token from the <code>/oauth2/token</code> endpoint\
              \ directly to a non-person user using a combination of the client ID\
              \ and client secret.</p> </dd> </dl>"
          title: AllowedOAuthFlows
        AllowedOAuthScopes:
          allOf:
          - $ref: '#/components/schemas/ScopeListType'
          - description: "The OAuth scopes that your app client supports. Possible\
              \ values that OAuth provides are <code>phone</code>, <code>email</code>,\
              \ <code>openid</code>, and <code>profile</code>. Possible values that\
              \ Amazon Web Services provides are <code>aws.cognito.signin.user.admin</code>.\
              \ Amazon Cognito also supports custom scopes that you create in Resource\
              \ Servers."
          title: AllowedOAuthScopes
        AllowedOAuthFlowsUserPoolClient:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "<p>Set to <code>true</code> to use OAuth 2.0 features in\
              \ your user pool app client.</p> <p> <code>AllowedOAuthFlowsUserPoolClient</code>\
              \ must be <code>true</code> before you can configure the following features\
              \ in your app client.</p> <ul> <li> <p> <code>CallBackURLs</code>: Callback\
              \ URLs.</p> </li> <li> <p> <code>LogoutURLs</code>: Sign-out redirect\
              \ URLs.</p> </li> <li> <p> <code>AllowedOAuthScopes</code>: OAuth 2.0\
              \ scopes.</p> </li> <li> <p> <code>AllowedOAuthFlows</code>: Support\
              \ for authorization code, implicit, and client credentials OAuth 2.0\
              \ grants.</p> </li> </ul> <p>To use OAuth 2.0 features, configure one\
              \ of these features in the Amazon Cognito console or set <code>AllowedOAuthFlowsUserPoolClient</code>\
              \ to <code>true</code> in a <code>CreateUserPoolClient</code> or <code>UpdateUserPoolClient</code>\
              \ API request. If you don't set a value for <code>AllowedOAuthFlowsUserPoolClient</code>\
              \ in a request with the CLI or SDKs, it defaults to <code>false</code>.</p>"
          title: AllowedOAuthFlowsUserPoolClient
        AnalyticsConfiguration:
          $ref: '#/components/schemas/UserPoolClientType_AnalyticsConfiguration'
        PreventUserExistenceErrors:
          allOf:
          - $ref: '#/components/schemas/PreventUserExistenceErrorTypes'
          - description: "<p>Errors and responses that you want Amazon Cognito APIs\
              \ to return during authentication, account confirmation, and password\
              \ recovery when the user doesn't exist in the user pool. When set to\
              \ <code>ENABLED</code> and the user doesn't exist, authentication returns\
              \ an error indicating either the username or password was incorrect.\
              \ Account confirmation and password recovery return a response indicating\
              \ a code was sent to a simulated destination. When set to <code>LEGACY</code>,\
              \ those APIs return a <code>UserNotFoundException</code> exception if\
              \ the user doesn't exist in the user pool.</p> <p>Valid values include:</p>\
              \ <ul> <li> <p> <code>ENABLED</code> - This prevents user existence-related\
              \ errors.</p> </li> <li> <p> <code>LEGACY</code> - This represents the\
              \ old behavior of Amazon Cognito where user existence related errors\
              \ aren't prevented.</p> </li> </ul>"
          title: PreventUserExistenceErrors
        EnableTokenRevocation:
          allOf:
          - $ref: '#/components/schemas/WrappedBooleanType'
          - description: "Indicates whether token revocation is activated for the\
              \ user pool client. When you create a new user pool client, token revocation\
              \ is activated by default. For more information about revoking tokens,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html\"\
              >RevokeToken</a>."
          title: EnableTokenRevocation
        EnablePropagateAdditionalUserContextData:
          allOf:
          - $ref: '#/components/schemas/WrappedBooleanType'
          - description: "<p>When <code>EnablePropagateAdditionalUserContextData</code>\
              \ is true, Amazon Cognito accepts an <code>IpAddress</code> value that\
              \ you send in the <code>UserContextData</code> parameter. The <code>UserContextData</code>\
              \ parameter sends information to Amazon Cognito advanced security for\
              \ risk analysis. You can send <code>UserContextData</code> when you\
              \ sign in Amazon Cognito native users with the <code>InitiateAuth</code>\
              \ and <code>RespondToAuthChallenge</code> API operations.</p> <p>When\
              \ <code>EnablePropagateAdditionalUserContextData</code> is false, you\
              \ can't send your user's source IP address to Amazon Cognito advanced\
              \ security with unauthenticated API operations. <code>EnablePropagateAdditionalUserContextData</code>\
              \ doesn't affect whether you can send a source IP address in a <code>ContextData</code>\
              \ parameter with the authenticated API operations <code>AdminInitiateAuth</code>\
              \ and <code>AdminRespondToAuthChallenge</code>.</p> <p>You can only\
              \ activate <code>EnablePropagateAdditionalUserContextData</code> in\
              \ an app client that has a client secret. For more information about\
              \ propagation of user context data, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-adaptive-authentication.html#user-pool-settings-adaptive-authentication-device-fingerprint\"\
              >Adding user device and session data to API requests</a>.</p>"
          title: EnablePropagateAdditionalUserContextData
        AuthSessionValidity:
          allOf:
          - $ref: '#/components/schemas/AuthSessionValidityType'
          - description: "Amazon Cognito creates a session token for each API request\
              \ in an authentication flow. <code>AuthSessionValidity</code> is the\
              \ duration, in minutes, of that session token. Your user pool native\
              \ user must respond to each authentication challenge before the session\
              \ expires."
          title: AuthSessionValidity
      title: UserPoolClientType
      type: object
    DomainType:
      maxLength: 63
      minLength: 1
      pattern: "^[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9])?$"
      type: string
    CustomDomainConfigType:
      description: The configuration for a custom domain that hosts the sign-up and
        sign-in webpages for your application.
      properties:
        CertificateArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The Amazon Resource Name (ARN) of an Certificate Manager
              SSL certificate. You use this certificate for the subdomain of your
              custom domain.
          title: CertificateArn
      required:
      - CertificateArn
      title: CustomDomainConfigType
      type: object
    UserPoolNameType:
      maxLength: 128
      minLength: 1
      pattern: "[\\w\\s+=,.@-]+"
      type: string
    UserPoolPolicyType:
      description: The policy associated with a user pool.
      properties:
        PasswordPolicy:
          $ref: '#/components/schemas/UserPoolPolicyType_PasswordPolicy'
      title: UserPoolPolicyType
      type: object
    DeletionProtectionType:
      enum:
      - ACTIVE
      - INACTIVE
      title: DeletionProtectionType
      type: string
    LambdaConfigType:
      description: Specifies the configuration for Lambda triggers.
      properties:
        PreSignUp:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: A pre-registration Lambda trigger.
          title: PreSignUp
        CustomMessage:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: A custom Message Lambda trigger.
          title: CustomMessage
        PostConfirmation:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: A post-confirmation Lambda trigger.
          title: PostConfirmation
        PreAuthentication:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: A pre-authentication Lambda trigger.
          title: PreAuthentication
        PostAuthentication:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: A post-authentication Lambda trigger.
          title: PostAuthentication
        DefineAuthChallenge:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: Defines the authentication challenge.
          title: DefineAuthChallenge
        CreateAuthChallenge:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: Creates an authentication challenge.
          title: CreateAuthChallenge
        VerifyAuthChallengeResponse:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: Verifies the authentication challenge response.
          title: VerifyAuthChallengeResponse
        PreTokenGeneration:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: A Lambda trigger that is invoked before token generation.
          title: PreTokenGeneration
        UserMigration:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The user migration Lambda config type.
          title: UserMigration
        CustomSMSSender:
          $ref: '#/components/schemas/LambdaConfigType_CustomSMSSender'
        CustomEmailSender:
          $ref: '#/components/schemas/LambdaConfigType_CustomEmailSender'
        KMSKeyID:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The Amazon Resource Name (ARN) of an <a href="/kms/latest/developerguide/concepts.html#master_keys">KMS
              key</a>. Amazon Cognito uses the key to encrypt codes and temporary
              passwords sent to <code>CustomEmailSender</code> and <code>CustomSMSSender</code>.
          title: KMSKeyID
      title: LambdaConfigType
      type: object
    VerifiedAttributesListType:
      items:
        $ref: '#/components/schemas/VerifiedAttributeType'
      type: array
    UsernameAttributesListType:
      items:
        $ref: '#/components/schemas/UsernameAttributeType'
      type: array
    SmsVerificationMessageType:
      maxLength: 140
      minLength: 6
      pattern: ".*\\{####\\}.*"
      type: string
    EmailVerificationMessageType:
      maxLength: 20000
      minLength: 6
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\\
        p{N}\\p{P}\\s*]*"
      type: string
    EmailVerificationSubjectType:
      maxLength: 140
      minLength: 1
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+"
      type: string
    VerificationMessageTemplateType:
      description: The template for verification messages.
      properties:
        SmsMessage:
          allOf:
          - $ref: '#/components/schemas/SmsVerificationMessageType'
          - description: The template for SMS messages that Amazon Cognito sends to
              your users.
          title: SmsMessage
        EmailMessage:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationMessageType'
          - description: "The template for email messages that Amazon Cognito sends\
              \ to your users. You can set an <code>EmailMessage</code> template only\
              \ if the value of <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"\
              > EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href=\"\
              https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"\
              >EmailSendingAccount</a> is <code>DEVELOPER</code>, your user pool sends\
              \ email messages with your own Amazon SES configuration."
          title: EmailMessage
        EmailSubject:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationSubjectType'
          - description: "The subject line for the email message template. You can\
              \ set an <code>EmailSubject</code> template only if the value of <a\
              \ href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"\
              > EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href=\"\
              https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"\
              >EmailSendingAccount</a> is <code>DEVELOPER</code>, your user pool sends\
              \ email messages with your own Amazon SES configuration."
          title: EmailSubject
        EmailMessageByLink:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationMessageByLinkType'
          - description: "The email message template for sending a confirmation link\
              \ to the user. You can set an <code>EmailMessageByLink</code> template\
              \ only if the value of <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"\
              > EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href=\"\
              https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"\
              >EmailSendingAccount</a> is <code>DEVELOPER</code>, your user pool sends\
              \ email messages with your own Amazon SES configuration."
          title: EmailMessageByLink
        EmailSubjectByLink:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationSubjectByLinkType'
          - description: "The subject line for the email message template for sending\
              \ a confirmation link to the user. You can set an <code>EmailSubjectByLink</code>\
              \ template only if the value of <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"\
              > EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href=\"\
              https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"\
              >EmailSendingAccount</a> is <code>DEVELOPER</code>, your user pool sends\
              \ email messages with your own Amazon SES configuration."
          title: EmailSubjectByLink
        DefaultEmailOption:
          allOf:
          - $ref: '#/components/schemas/DefaultEmailOptionType'
          - description: The default email option.
          title: DefaultEmailOption
      title: VerificationMessageTemplateType
      type: object
    UserPoolMfaType:
      enum:
      - "OFF"
      - "ON"
      - OPTIONAL
      title: UserPoolMfaType
      type: string
    UserAttributeUpdateSettingsType:
      description: "The settings for updates to user attributes. These settings include\
        \ the property <code>AttributesRequireVerificationBeforeUpdate</code>, a user-pool\
        \ setting that tells Amazon Cognito how to handle changes to the value of\
        \ your users' email address and phone number attributes. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates\"\
        > Verifying updates to email addresses and phone numbers</a>."
      properties:
        AttributesRequireVerificationBeforeUpdate:
          allOf:
          - $ref: '#/components/schemas/AttributesRequireVerificationBeforeUpdateType'
          - description: "<p>Requires that your user verifies their email address,\
              \ phone number, or both before Amazon Cognito updates the value of that\
              \ attribute. When you update a user attribute that has this option activated,\
              \ Amazon Cognito sends a verification message to the new phone number\
              \ or email address. Amazon Cognito doesn’t change the value of the attribute\
              \ until your user responds to the verification message and confirms\
              \ the new value.</p> <p>You can verify an updated email address or phone\
              \ number with a <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifyUserAttribute.html\"\
              >VerifyUserAttribute</a> API request. You can also call the <a href=\"\
              https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html\"\
              >AdminUpdateUserAttributes</a> API and set <code>email_verified</code>\
              \ or <code>phone_number_verified</code> to true.</p> <p>When <code>AttributesRequireVerificationBeforeUpdate</code>\
              \ is false, your user pool doesn't require that your users verify attribute\
              \ changes before Amazon Cognito updates them. In a user pool where <code>AttributesRequireVerificationBeforeUpdate</code>\
              \ is false, API operations that change attribute values can immediately\
              \ update a user’s <code>email</code> or <code>phone_number</code> attribute.</p>"
          title: AttributesRequireVerificationBeforeUpdate
      title: UserAttributeUpdateSettingsType
      type: object
    DeviceConfigurationType:
      description: "<p>The device-remembering configuration for a user pool. A <a\
        \ href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html\"\
        > DescribeUserPool</a> request returns a null value for this object when the\
        \ user pool isn't configured to remember devices. When device remembering\
        \ is active, you can remember a user's device with a <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html\"\
        >ConfirmDevice</a> API request. Additionally. when the property <code>DeviceOnlyRememberedOnUserPrompt</code>\
        \ is <code>true</code>, you must follow <code>ConfirmDevice</code> with an\
        \ <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html\"\
        >UpdateDeviceStatus</a> API request that sets the user's device to <code>remembered</code>\
        \ or <code>not_remembered</code>.</p> <p>To sign in with a remembered device,\
        \ include <code>DEVICE_KEY</code> in the authentication parameters in your\
        \ user's <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html\"\
        > InitiateAuth</a> request. If your app doesn't include a <code>DEVICE_KEY</code>\
        \ parameter, the <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html#API_InitiateAuth_ResponseSyntax\"\
        >response</a> from Amazon Cognito includes newly-generated <code>DEVICE_KEY</code>\
        \ and <code>DEVICE_GROUP_KEY</code> values under <code>NewDeviceMetadata</code>.\
        \ Store these values to use in future device-authentication requests.</p>\
        \ <note> <p>When you provide a value for any property of <code>DeviceConfiguration</code>,\
        \ you activate the device remembering for the user pool.</p> </note>"
      properties:
        ChallengeRequiredOnNewDevice:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "<p>When true, a remembered device can sign in with device\
              \ authentication instead of SMS and time-based one-time password (TOTP)\
              \ factors for multi-factor authentication (MFA).</p> <note> <p>Whether\
              \ or not <code>ChallengeRequiredOnNewDevice</code> is true, users who\
              \ sign in with devices that have not been confirmed or remembered must\
              \ still provide a second factor in a user pool that requires MFA.</p>\
              \ </note>"
          title: ChallengeRequiredOnNewDevice
        DeviceOnlyRememberedOnUserPrompt:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "<p>When true, Amazon Cognito doesn't automatically remember\
              \ a user's device when your app sends a <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html\"\
              > ConfirmDevice</a> API request. In your app, create a prompt for your\
              \ user to choose whether they want to remember their device. Return\
              \ the user's choice in an <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html\"\
              > UpdateDeviceStatus</a> API request.</p> <p>When <code>DeviceOnlyRememberedOnUserPrompt</code>\
              \ is <code>false</code>, Amazon Cognito immediately remembers devices\
              \ that you register in a <code>ConfirmDevice</code> API request.</p>"
          title: DeviceOnlyRememberedOnUserPrompt
      title: DeviceConfigurationType
      type: object
    EmailConfigurationType:
      description: "<p>The email configuration of your user pool. The email configuration\
        \ type sets your preferred sending method, Amazon Web Services Region, and\
        \ sender for messages from your user pool.</p> <note> <p>Amazon Cognito can\
        \ send email messages with Amazon Simple Email Service resources in the Amazon\
        \ Web Services Region where you created your user pool, and in alternate Regions\
        \ in some cases. For more information on the supported Regions, see <a href=\"\
        https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html\"\
        >Email settings for Amazon Cognito user pools</a>.</p> </note>"
      properties:
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: "<p>The ARN of a verified email address or an address from\
              \ a verified domain in Amazon SES. You can set a <code>SourceArn</code>\
              \ email from a verified domain only with an API request. You can set\
              \ a verified email address, but not an address in a verified domain,\
              \ in the Amazon Cognito console. Amazon Cognito uses the email address\
              \ that you provide in one of the following ways, depending on the value\
              \ that you specify for the <code>EmailSendingAccount</code> parameter:</p>\
              \ <ul> <li> <p>If you specify <code>COGNITO_DEFAULT</code>, Amazon Cognito\
              \ uses this address as the custom FROM address when it emails your users\
              \ using its built-in email account.</p> </li> <li> <p>If you specify\
              \ <code>DEVELOPER</code>, Amazon Cognito emails your users with this\
              \ address by calling Amazon SES on your behalf.</p> </li> </ul> <p>The\
              \ Region value of the <code>SourceArn</code> parameter must indicate\
              \ a supported Amazon Web Services Region of your user pool. Typically,\
              \ the Region in the <code>SourceArn</code> and the user pool Region\
              \ are the same. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html#user-pool-email-developer-region-mapping\"\
              >Amazon SES email configuration regions</a> in the <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html\"\
              >Amazon Cognito Developer Guide</a>.</p>"
          title: SourceArn
        ReplyToEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressType'
          - description: The destination to which the receiver of the email should
              reply.
          title: ReplyToEmailAddress
        EmailSendingAccount:
          allOf:
          - $ref: '#/components/schemas/EmailSendingAccountType'
          - description: "<p>Specifies whether Amazon Cognito uses its built-in functionality\
              \ to send your users email messages, or uses your Amazon Simple Email\
              \ Service email configuration. Specify one of the following values:</p>\
              \ <dl> <dt>COGNITO_DEFAULT</dt> <dd> <p>When Amazon Cognito emails your\
              \ users, it uses its built-in email functionality. When you use the\
              \ default option, Amazon Cognito allows only a limited number of emails\
              \ each day for your user pool. For typical production environments,\
              \ the default email limit is less than the required delivery volume.\
              \ To achieve a higher delivery volume, specify DEVELOPER to use your\
              \ Amazon SES email configuration.</p> <p>To look up the email delivery\
              \ limit for the default option, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/limits.html\"\
              >Limits</a> in the <i>Amazon Cognito Developer Guide</i>.</p> <p>The\
              \ default FROM address is <code>no-reply@verificationemail.com</code>.\
              \ To customize the FROM address, provide the Amazon Resource Name (ARN)\
              \ of an Amazon SES verified email address for the <code>SourceArn</code>\
              \ parameter.</p> </dd> <dt>DEVELOPER</dt> <dd> <p>When Amazon Cognito\
              \ emails your users, it uses your Amazon SES configuration. Amazon Cognito\
              \ calls Amazon SES on your behalf to send email from your verified email\
              \ address. When you use this option, the email delivery limits are the\
              \ same limits that apply to your Amazon SES verified email address in\
              \ your Amazon Web Services account.</p> <p>If you use this option, provide\
              \ the ARN of an Amazon SES verified email address for the <code>SourceArn</code>\
              \ parameter.</p> <p>Before Amazon Cognito can email your users, it requires\
              \ additional permissions to call Amazon SES on your behalf. When you\
              \ update your user pool with this option, Amazon Cognito creates a <i>service-linked\
              \ role</i>, which is a type of role in your Amazon Web Services account.\
              \ This role contains the permissions that allow you to access Amazon\
              \ SES and send email messages from your email address. For more information\
              \ about the service-linked role that Amazon Cognito creates, see <a\
              \ href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/using-service-linked-roles.html\"\
              >Using Service-Linked Roles for Amazon Cognito</a> in the <i>Amazon\
              \ Cognito Developer Guide</i>.</p> </dd> </dl>"
          title: EmailSendingAccount
        From:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: "Either the sender’s email address or the sender’s name with\
              \ their email address. For example, <code>testuser@example.com</code>\
              \ or <code>Test User &lt;testuser@example.com&gt;</code>. This address\
              \ appears before the body of the email."
          title: From
        ConfigurationSet:
          allOf:
          - $ref: '#/components/schemas/SESConfigurationSet'
          - description: "<p>The set of configuration rules that can be applied to\
              \ emails sent using Amazon Simple Email Service. A configuration set\
              \ is applied to an email by including a reference to the configuration\
              \ set in the headers of the email. Once applied, all of the rules in\
              \ that configuration set are applied to the email. Configuration sets\
              \ can be used to apply the following types of rules to emails: </p>\
              \ <dl> <dt>Event publishing</dt> <dd> <p>Amazon Simple Email Service\
              \ can track the number of send, delivery, open, click, bounce, and complaint\
              \ events for each email sent. Use event publishing to send information\
              \ about these events to other Amazon Web Services services such as and\
              \ Amazon CloudWatch</p> </dd> <dt>IP pool management</dt> <dd> <p>When\
              \ leasing dedicated IP addresses with Amazon Simple Email Service, you\
              \ can create groups of IP addresses, called dedicated IP pools. You\
              \ can then associate the dedicated IP pools with configuration sets.</p>\
              \ </dd> </dl>"
          title: ConfigurationSet
      title: EmailConfigurationType
      type: object
    SmsConfigurationType:
      description: "The SMS configuration type is the settings that your Amazon Cognito\
        \ user pool must use to send an SMS message from your Amazon Web Services\
        \ account through Amazon Simple Notification Service. To send SMS messages\
        \ with Amazon SNS in the Amazon Web Services Region that you want, the Amazon\
        \ Cognito user pool uses an Identity and Access Management (IAM) role in your\
        \ Amazon Web Services account."
      properties:
        SnsCallerArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: 'The Amazon Resource Name (ARN) of the Amazon SNS caller.
              This is the ARN of the IAM role in your Amazon Web Services account
              that Amazon Cognito will use to send SMS messages. SMS messages are
              subject to a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html">spending
              limit</a>. '
          title: SnsCallerArn
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: "<p>The external ID provides additional security for your\
              \ IAM role. You can use an <code>ExternalId</code> with the IAM role\
              \ that you use with Amazon SNS to send SMS messages for your user pool.\
              \ If you provide an <code>ExternalId</code>, your Amazon Cognito user\
              \ pool includes it in the request to assume your IAM role. You can configure\
              \ the role trust policy to require that Amazon Cognito, and any principal,\
              \ provide the <code>ExternalID</code>. If you use the Amazon Cognito\
              \ Management Console to create a role for SMS multi-factor authentication\
              \ (MFA), Amazon Cognito creates a role with the required permissions\
              \ and a trust policy that demonstrates use of the <code>ExternalId</code>.</p>\
              \ <p>For more information about the <code>ExternalId</code> of a role,\
              \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html\"\
              >How to use an external ID when granting access to your Amazon Web Services\
              \ resources to a third party</a> </p>"
          title: ExternalId
        SnsRegion:
          allOf:
          - $ref: '#/components/schemas/RegionCodeType'
          - description: "<p>The Amazon Web Services Region to use with Amazon SNS\
              \ integration. You can choose the same Region as your user pool, or\
              \ a supported <b>Legacy Amazon SNS alternate Region</b>. </p> <p> Amazon\
              \ Cognito resources in the Asia Pacific (Seoul) Amazon Web Services\
              \ Region must use your Amazon SNS configuration in the Asia Pacific\
              \ (Tokyo) Region. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"\
              >SMS message settings for Amazon Cognito user pools</a>.</p>"
          title: SnsRegion
      required:
      - SnsCallerArn
      title: SmsConfigurationType
      type: object
    UserPoolTagsType:
      additionalProperties:
        $ref: '#/components/schemas/TagValueType'
      type: object
    SchemaAttributesListType:
      items:
        $ref: '#/components/schemas/SchemaAttributeType'
      maxItems: 50
      minItems: 1
      type: array
    UserPoolAddOnsType:
      description: "<p>User pool add-ons. Contains settings for activation of advanced\
        \ security features. To log user security information but take no action,\
        \ set to <code>AUDIT</code>. To configure automatic security responses to\
        \ risky traffic to your user pool, set to <code>ENFORCED</code>.</p> <p>For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html\"\
        >Adding advanced security to a user pool</a>.</p>"
      properties:
        AdvancedSecurityMode:
          allOf:
          - $ref: '#/components/schemas/AdvancedSecurityModeType'
          - description: The operating mode of advanced security features in your
              user pool.
          title: AdvancedSecurityMode
      required:
      - AdvancedSecurityMode
      title: UserPoolAddOnsType
      type: object
    UsernameConfigurationType:
      description: 'The username configuration type. '
      properties:
        CaseSensitive:
          allOf:
          - $ref: '#/components/schemas/WrappedBooleanType'
          - description: "<p>Specifies whether user name case sensitivity will be\
              \ applied for all users in the user pool through Amazon Cognito APIs.\
              \ For most use cases, set case sensitivity to <code>False</code> (case\
              \ insensitive) as a best practice. When usernames and email addresses\
              \ are case insensitive, users can sign in as the same user when they\
              \ enter a different capitalization of their user name.</p> <p>Valid\
              \ values include:</p> <dl> <dt>True</dt> <dd> <p>Enables case sensitivity\
              \ for all username input. When this option is set to <code>True</code>,\
              \ users must sign in using the exact capitalization of their given username,\
              \ such as “UserName”. This is the default value.</p> </dd> <dt>False</dt>\
              \ <dd> <p>Enables case insensitivity for all username input. For example,\
              \ when this option is set to <code>False</code>, users can sign in using\
              \ <code>username</code>, <code>USERNAME</code>, or <code>UserName</code>.\
              \ This option also enables both <code>preferred_username</code> and\
              \ <code>email</code> alias to be case insensitive, in addition to the\
              \ <code>username</code> attribute.</p> </dd> </dl>"
          title: CaseSensitive
      required:
      - CaseSensitive
      title: UsernameConfigurationType
      type: object
    UserPoolType:
      description: A container for information about the user pool.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The ID of the user pool.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/UserPoolNameType'
          - description: The name of the user pool.
          title: Name
        Policies:
          $ref: '#/components/schemas/UserPoolType_Policies'
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/DeletionProtectionType'
          - description: "<p>When active, <code>DeletionProtection</code> prevents\
              \ accidental deletion of your user pool. Before you can delete a user\
              \ pool that you have protected against deletion, you must deactivate\
              \ this feature.</p> <p>When you try to delete a protected user pool\
              \ in a <code>DeleteUserPool</code> API request, Amazon Cognito returns\
              \ an <code>InvalidParameterException</code> error. To delete a protected\
              \ user pool, send a new <code>DeleteUserPool</code> request after you\
              \ deactivate deletion protection in an <code>UpdateUserPool</code> API\
              \ request.</p>"
          title: DeletionProtection
        LambdaConfig:
          $ref: '#/components/schemas/UserPoolType_LambdaConfig'
        Status:
          allOf:
          - $ref: '#/components/schemas/StatusType'
          - description: The status of a user pool.
          title: Status
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was modified."
          title: LastModifiedDate
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was created."
          title: CreationDate
        SchemaAttributes:
          allOf:
          - $ref: '#/components/schemas/SchemaAttributesListType'
          - description: "<p>A list of the user attributes and their properties in\
              \ your user pool. The attribute schema contains standard attributes,\
              \ custom attributes with a <code>custom:</code> prefix, and developer\
              \ attributes with a <code>dev:</code> prefix. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html\"\
              >User pool attributes</a>.</p> <p>Developer-only attributes are a legacy\
              \ feature of user pools, are read-only to all app clients. You can create\
              \ and update developer-only attributes only with IAM-authenticated API\
              \ operations. Use app client read/write permissions instead.</p>"
          title: SchemaAttributes
        AutoVerifiedAttributes:
          allOf:
          - $ref: '#/components/schemas/VerifiedAttributesListType'
          - description: The attributes that are auto-verified in a user pool.
          title: AutoVerifiedAttributes
        AliasAttributes:
          allOf:
          - $ref: '#/components/schemas/AliasAttributesListType'
          - description: The attributes that are aliased in a user pool.
          title: AliasAttributes
        UsernameAttributes:
          allOf:
          - $ref: '#/components/schemas/UsernameAttributesListType'
          - description: Specifies whether a user can use an email address or phone
              number as a username when they sign up.
          title: UsernameAttributes
        SmsVerificationMessage:
          allOf:
          - $ref: '#/components/schemas/SmsVerificationMessageType'
          - description: This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
          title: SmsVerificationMessage
        EmailVerificationMessage:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationMessageType'
          - description: This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
          title: EmailVerificationMessage
        EmailVerificationSubject:
          allOf:
          - $ref: '#/components/schemas/EmailVerificationSubjectType'
          - description: This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
          title: EmailVerificationSubject
        VerificationMessageTemplate:
          $ref: '#/components/schemas/UpdateUserPoolRequest_VerificationMessageTemplate'
        SmsAuthenticationMessage:
          allOf:
          - $ref: '#/components/schemas/SmsVerificationMessageType'
          - description: The contents of the SMS authentication message.
          title: SmsAuthenticationMessage
        UserAttributeUpdateSettings:
          $ref: '#/components/schemas/CreateUserPoolRequest_UserAttributeUpdateSettings'
        MfaConfiguration:
          allOf:
          - $ref: '#/components/schemas/UserPoolMfaType'
          - description: <p>Can be one of the following values:</p> <ul> <li> <p>
              <code>OFF</code> - MFA tokens aren't required and can't be specified
              during user registration.</p> </li> <li> <p> <code>ON</code> - MFA tokens
              are required for all user registrations. You can only specify required
              when you're initially creating a user pool.</p> </li> <li> <p> <code>OPTIONAL</code>
              - Users have the option when registering to create an MFA token.</p>
              </li> </ul>
          title: MfaConfiguration
        DeviceConfiguration:
          $ref: '#/components/schemas/CreateUserPoolRequest_DeviceConfiguration'
        EstimatedNumberOfUsers:
          allOf:
          - $ref: '#/components/schemas/IntegerType'
          - description: A number estimating the size of the user pool.
          title: EstimatedNumberOfUsers
        EmailConfiguration:
          $ref: '#/components/schemas/CreateUserPoolRequest_EmailConfiguration'
        SmsConfiguration:
          $ref: '#/components/schemas/CreateUserPoolRequest_SmsConfiguration'
        UserPoolTags:
          allOf:
          - $ref: '#/components/schemas/UserPoolTagsType'
          - description: "The tags that are assigned to the user pool. A tag is a\
              \ label that you can apply to user pools to categorize and manage them\
              \ in different ways, such as by purpose, owner, environment, or other\
              \ criteria."
          title: UserPoolTags
        SmsConfigurationFailure:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: "<p>The reason why the SMS configuration can't send the messages\
              \ to your users.</p> <p>This message might include comma-separated values\
              \ to describe why your SMS configuration can't send messages to user\
              \ pool end users.</p> <dl> <dt>InvalidSmsRoleAccessPolicyException</dt>\
              \ <dd> <p>The Identity and Access Management role that Amazon Cognito\
              \ uses to send SMS messages isn't properly configured. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SmsConfigurationType.html\"\
              >SmsConfigurationType</a>.</p> </dd> <dt>SNSSandbox</dt> <dd> <p>The\
              \ Amazon Web Services account is in the SNS SMS Sandbox and messages\
              \ will only reach verified end users. This parameter won’t get populated\
              \ with SNSSandbox if the user creating the user pool doesn’t have SNS\
              \ permissions. To learn how to move your Amazon Web Services account\
              \ out of the sandbox, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox-moving-to-production.html\"\
              >Moving out of the SMS sandbox</a>.</p> </dd> </dl>"
          title: SmsConfigurationFailure
        EmailConfigurationFailure:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: Deprecated. Review error codes from API requests with <code>EventSource:cognito-idp.amazonaws.com</code>
              in CloudTrail for information about problems with user pool email configuration.
          title: EmailConfigurationFailure
        Domain:
          allOf:
          - $ref: '#/components/schemas/DomainType'
          - description: "The domain prefix, if the user pool has a domain associated\
              \ with it."
          title: Domain
        CustomDomain:
          allOf:
          - $ref: '#/components/schemas/DomainType'
          - description: "<p>A custom domain name that you provide to Amazon Cognito.\
              \ This parameter applies only if you use a custom domain to host the\
              \ sign-up and sign-in pages for your application. An example of a custom\
              \ domain name might be <code>auth.example.com</code>.</p> <p>For more\
              \ information about adding a custom domain to your user pool, see <a\
              \ href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html\"\
              >Using Your Own Domain for the Hosted UI</a>.</p>"
          title: CustomDomain
        AdminCreateUserConfig:
          $ref: '#/components/schemas/CreateUserPoolRequest_AdminCreateUserConfig'
        UserPoolAddOns:
          $ref: '#/components/schemas/CreateUserPoolRequest_UserPoolAddOns'
        UsernameConfiguration:
          $ref: '#/components/schemas/UserPoolType_UsernameConfiguration'
        Arn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The Amazon Resource Name (ARN) for the user pool.
          title: Arn
        AccountRecoverySetting:
          $ref: '#/components/schemas/CreateUserPoolRequest_AccountRecoverySetting'
      title: UserPoolType
      type: object
    CustomAttributeNameType:
      maxLength: 20
      minLength: 1
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
      type: string
    SchemaAttributeType:
      description: "<p>A list of the user attributes and their properties in your\
        \ user pool. The attribute schema contains standard attributes, custom attributes\
        \ with a <code>custom:</code> prefix, and developer attributes with a <code>dev:</code>\
        \ prefix. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html\"\
        >User pool attributes</a>.</p> <p>Developer-only attributes are a legacy feature\
        \ of user pools, are read-only to all app clients. You can create and update\
        \ developer-only attributes only with IAM-authenticated API operations. Use\
        \ app client read/write permissions instead.</p>"
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CustomAttributeNameType'
          - description: "The name of your user pool attribute, for example <code>username</code>\
              \ or <code>custom:costcenter</code>."
          title: Name
        AttributeDataType:
          allOf:
          - $ref: '#/components/schemas/AttributeDataType'
          - description: The data format of the values for your attribute.
          title: AttributeDataType
        DeveloperOnlyAttribute:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "<note> <p>You should use <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserPoolClientType.html#CognitoUserPools-Type-UserPoolClientType-WriteAttributes\"\
              >WriteAttributes</a> in the user pool client to control how attributes\
              \ can be mutated for new use cases instead of using <code>DeveloperOnlyAttribute</code>.</p>\
              \ </note> <p>Specifies whether the attribute type is developer only.\
              \ This attribute can only be modified by an administrator. Users won't\
              \ be able to modify this attribute using their access token. For example,\
              \ <code>DeveloperOnlyAttribute</code> can be modified using AdminUpdateUserAttributes\
              \ but can't be updated using UpdateUserAttributes.</p>"
          title: DeveloperOnlyAttribute
        Mutable:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "<p>Specifies whether the value of the attribute can be changed.</p>\
              \ <p>Any user pool attribute whose value you map from an IdP attribute\
              \ must be mutable, with a parameter value of <code>true</code>. Amazon\
              \ Cognito updates mapped attributes when users sign in to your application\
              \ through an IdP. If an attribute is immutable, Amazon Cognito throws\
              \ an error when it attempts to update the attribute. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html\"\
              >Specifying Identity Provider Attribute Mappings for Your User Pool</a>.</p>"
          title: Mutable
        Required:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "Specifies whether a user pool attribute is required. If\
              \ the attribute is required and the user doesn't provide a value, registration\
              \ or sign-in will fail."
          title: Required
        NumberAttributeConstraints:
          $ref: '#/components/schemas/SchemaAttributeType_NumberAttributeConstraints'
        StringAttributeConstraints:
          $ref: '#/components/schemas/SchemaAttributeType_StringAttributeConstraints'
      title: SchemaAttributeType
      type: object
    CustomEmailSenderLambdaVersionType:
      enum:
      - V1_0
      title: CustomEmailSenderLambdaVersionType
      type: string
    CustomEmailLambdaVersionConfigType:
      description: A custom email sender Lambda configuration type.
      properties:
        LambdaVersion:
          allOf:
          - $ref: '#/components/schemas/CustomEmailSenderLambdaVersionType'
          - description: Signature of the "request" attribute in the "event" information
              Amazon Cognito passes to your custom email Lambda function. The only
              supported value is <code>V1_0</code>.
          title: LambdaVersion
        LambdaArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The Amazon Resource Name (ARN) of the Lambda function that
              Amazon Cognito activates to send email notifications to users.
          title: LambdaArn
      required:
      - LambdaArn
      - LambdaVersion
      title: CustomEmailLambdaVersionConfigType
      type: object
    CustomSMSSenderLambdaVersionType:
      enum:
      - V1_0
      title: CustomSMSSenderLambdaVersionType
      type: string
    CustomSMSLambdaVersionConfigType:
      description: A custom SMS sender Lambda configuration type.
      properties:
        LambdaVersion:
          allOf:
          - $ref: '#/components/schemas/CustomSMSSenderLambdaVersionType'
          - description: Signature of the "request" attribute in the "event" information
              that Amazon Cognito passes to your custom SMS Lambda function. The only
              supported value is <code>V1_0</code>.
          title: LambdaVersion
        LambdaArn:
          allOf:
          - $ref: '#/components/schemas/ArnType'
          - description: The Amazon Resource Name (ARN) of the Lambda function that
              Amazon Cognito activates to send SMS notifications to users.
          title: LambdaArn
      required:
      - LambdaArn
      - LambdaVersion
      title: CustomSMSLambdaVersionConfigType
      type: object
    DefaultEmailOptionType:
      enum:
      - CONFIRM_WITH_LINK
      - CONFIRM_WITH_CODE
      title: DefaultEmailOptionType
      type: string
    ProviderNameType:
      maxLength: 32
      minLength: 1
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
      title: ProviderNameType
      type: string
    RiskConfigurationType:
      description: The risk configuration type.
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The app client ID.
          title: ClientId
        CompromisedCredentialsRiskConfiguration:
          $ref: '#/components/schemas/RiskConfigurationType_CompromisedCredentialsRiskConfiguration'
        AccountTakeoverRiskConfiguration:
          $ref: '#/components/schemas/RiskConfigurationType_AccountTakeoverRiskConfiguration'
        RiskExceptionConfiguration:
          $ref: '#/components/schemas/SetRiskConfigurationRequest_RiskExceptionConfiguration'
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was modified."
          title: LastModifiedDate
      title: RiskConfigurationType
      type: object
    UserImportJobIdType:
      maxLength: 55
      minLength: 1
      pattern: "import-[0-9a-zA-Z-]+"
      type: string
    DomainDescriptionType:
      description: A container for information about a domain.
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID.
          title: UserPoolId
        AWSAccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountIdType'
          - description: The Amazon Web Services ID for the user pool owner.
          title: AWSAccountId
        Domain:
          allOf:
          - $ref: '#/components/schemas/DomainType'
          - description: "The domain string. For custom domains, this is the fully-qualified\
              \ domain name, such as <code>auth.example.com</code>. For Amazon Cognito\
              \ prefix domains, this is the prefix alone, such as <code>auth</code>."
          title: Domain
        S3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3BucketType'
          - description: The Amazon S3 bucket where the static files for this domain
              are stored.
          title: S3Bucket
        CloudFrontDistribution:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The Amazon CloudFront endpoint that you use as the target
              of the alias that you set up with your Domain Name Service (DNS) provider.
          title: CloudFrontDistribution
        Version:
          allOf:
          - $ref: '#/components/schemas/DomainVersionType'
          - description: The app version.
          title: Version
        Status:
          allOf:
          - $ref: '#/components/schemas/DomainStatusType'
          - description: The domain status.
          title: Status
        CustomDomainConfig:
          $ref: '#/components/schemas/DomainDescriptionType_CustomDomainConfig'
      title: DomainDescriptionType
      type: object
    S3BucketType:
      maxLength: 1024
      minLength: 3
      pattern: "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$"
      type: string
    DomainVersionType:
      maxLength: 20
      minLength: 1
      type: string
    DomainStatusType:
      enum:
      - CREATING
      - DELETING
      - UPDATING
      - ACTIVE
      - FAILED
      title: DomainStatusType
      type: string
    EmailAddressType:
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+@[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
      type: string
    EmailSendingAccountType:
      enum:
      - COGNITO_DEFAULT
      - DEVELOPER
      title: EmailSendingAccountType
      type: string
    SESConfigurationSet:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    EmailNotificationBodyType:
      maxLength: 20000
      minLength: 6
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+"
      type: string
    EmailNotificationSubjectType:
      maxLength: 140
      minLength: 1
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+"
      type: string
    EmailVerificationMessageByLinkType:
      maxLength: 20000
      minLength: 6
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{##[\\p{L}\\p{M}\\p{S}\\p{N}\\\
        p{P}\\s*]*##\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*"
      type: string
    EmailVerificationSubjectByLinkType:
      maxLength: 140
      minLength: 1
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+"
      type: string
    EventFilterType:
      enum:
      - SIGN_IN
      - PASSWORD_CHANGE
      - SIGN_UP
      title: EventFilterType
      type: string
    RiskDecisionType:
      enum:
      - NoRisk
      - AccountTakeover
      - Block
      title: RiskDecisionType
      type: string
    RiskLevelType:
      enum:
      - Low
      - Medium
      - High
      title: RiskLevelType
      type: string
    EventSourceName:
      enum:
      - userNotification
      title: EventSourceName
      type: string
    ExplicitAuthFlowsType:
      enum:
      - ADMIN_NO_SRP_AUTH
      - CUSTOM_AUTH_FLOW_ONLY
      - USER_PASSWORD_AUTH
      - ALLOW_ADMIN_USER_PASSWORD_AUTH
      - ALLOW_CUSTOM_AUTH
      - ALLOW_USER_PASSWORD_AUTH
      - ALLOW_USER_SRP_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      title: ExplicitAuthFlowsType
      type: string
    ListOfStringTypes:
      items:
        $ref: '#/components/schemas/StringType'
      type: array
    IdpIdentifierType:
      maxLength: 40
      minLength: 1
      pattern: "[\\w\\s+=.@-]+"
      title: IdpIdentifierType
      type: string
    LogDeliveryConfigurationType:
      description: The logging parameters of a user pool.
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The ID of the user pool where you configured detailed activity
              logging.
          title: UserPoolId
        LogConfigurations:
          allOf:
          - $ref: '#/components/schemas/LogConfigurationListType'
          - description: The detailed activity logging destination of a user pool.
          title: LogConfigurations
      required:
      - LogConfigurations
      - UserPoolId
      title: LogDeliveryConfigurationType
      type: object
    UICustomizationType:
      description: A container for the UI customization information for a user pool's
        built-in app UI.
      properties:
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool.
          title: UserPoolId
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The client ID for the client app.
          title: ClientId
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/ImageUrlType'
          - description: The logo image for the UI customization.
          title: ImageUrl
        CSS:
          allOf:
          - $ref: '#/components/schemas/CSSType'
          - description: The CSS values in the UI customization.
          title: CSS
        CSSVersion:
          allOf:
          - $ref: '#/components/schemas/CSSVersionType'
          - description: The CSS version number.
          title: CSSVersion
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was modified."
          title: LastModifiedDate
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was created."
          title: CreationDate
      title: UICustomizationType
      type: object
    SmsMfaConfigType:
      description: The SMS text message multi-factor authentication (MFA) configuration
        type.
      properties:
        SmsAuthenticationMessage:
          allOf:
          - $ref: '#/components/schemas/SmsVerificationMessageType'
          - description: "The SMS authentication message that will be sent to users\
              \ with the code they must sign in. The message must contain the ‘{####}’\
              \ placeholder, which is replaced with the code. If the message isn't\
              \ included, and default message will be used."
          title: SmsAuthenticationMessage
        SmsConfiguration:
          $ref: '#/components/schemas/SmsMfaConfigType_SmsConfiguration'
      title: SmsMfaConfigType
      type: object
    SoftwareTokenMfaConfigType:
      description: The type used for enabling software token MFA at the user pool
        level.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: Specifies whether software token MFA is activated.
          title: Enabled
      title: SoftwareTokenMfaConfigType
      type: object
    HttpHeader:
      description: The HTTP header.
      properties:
        headerName:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The header name.
          title: headerName
        headerValue:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The header value.
          title: headerValue
      title: HttpHeader
      type: object
    ImageFileType:
      maxLength: 131072
      minLength: 0
      type: string
    ImageUrlType:
      type: string
    ListProvidersLimitType:
      maximum: 60
      minimum: 0
      type: integer
    PaginationKeyType:
      minLength: 1
      pattern: "[\\S]+"
      type: string
    ProvidersListType:
      items:
        $ref: '#/components/schemas/ProviderDescription'
      maxItems: 50
      minItems: 0
      type: array
    ListResourceServersLimitType:
      maximum: 50
      minimum: 1
      type: integer
    ResourceServersListType:
      items:
        $ref: '#/components/schemas/ResourceServerType'
      type: array
    PoolQueryLimitType:
      maximum: 60
      minimum: 1
      type: integer
    UserImportJobsListType:
      items:
        $ref: '#/components/schemas/UserImportJobType'
      maxItems: 50
      minItems: 1
      type: array
    QueryLimit:
      maximum: 60
      minimum: 1
      type: integer
    UserPoolClientListType:
      items:
        $ref: '#/components/schemas/UserPoolClientDescription'
      type: array
    UserPoolListType:
      items:
        $ref: '#/components/schemas/UserPoolDescriptionType'
      type: array
    UsersListType:
      items:
        $ref: '#/components/schemas/UserType'
      type: array
    SearchedAttributeNamesListType:
      items:
        $ref: '#/components/schemas/AttributeNameType'
      type: array
    UserFilterType:
      maxLength: 256
      type: string
    LogConfigurationType:
      description: The logging parameters of a user pool.
      properties:
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          - description: The <code>errorlevel</code> selection of logs that a user
              pool sends for detailed activity logging.
          title: LogLevel
        EventSource:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          - description: The source of events that your user pool sends for detailed
              activity logging.
          title: EventSource
        CloudWatchLogsConfiguration:
          $ref: '#/components/schemas/LogConfigurationType_CloudWatchLogsConfiguration'
      required:
      - EventSource
      - LogLevel
      title: LogConfigurationType
      type: object
    LogConfigurationListType:
      items:
        $ref: '#/components/schemas/LogConfigurationType'
      maxItems: 1
      minItems: 0
      type: array
    LogLevel:
      enum:
      - ERROR
      title: LogLevel
      type: string
    LongType:
      type: integer
    MFAOptionType:
      description: ' <i>This data type is no longer supported.</i> Applies only to
        SMS multi-factor authentication (MFA) configurations. Does not apply to time-based
        one-time password (TOTP) software token MFA configurations.'
      properties:
        DeliveryMedium:
          allOf:
          - $ref: '#/components/schemas/DeliveryMediumType'
          - description: The delivery medium to send the MFA code. You can use this
              parameter to set only the <code>SMS</code> delivery medium value.
          title: DeliveryMedium
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/AttributeNameType'
          - description: The attribute name of the MFA option type. The only valid
              value is <code>phone_number</code>.
          title: AttributeName
      title: MFAOptionType
      type: object
    NotifyEmailType:
      description: The notify email type.
      properties:
        Subject:
          allOf:
          - $ref: '#/components/schemas/EmailNotificationSubjectType'
          - description: The email subject.
          title: Subject
        HtmlBody:
          allOf:
          - $ref: '#/components/schemas/EmailNotificationBodyType'
          - description: The email HTML body.
          title: HtmlBody
        TextBody:
          allOf:
          - $ref: '#/components/schemas/EmailNotificationBodyType'
          - description: The email text body.
          title: TextBody
      required:
      - Subject
      title: NotifyEmailType
      type: object
    NumberAttributeConstraintsType:
      description: The minimum and maximum values of an attribute that is of the number
        data type.
      properties:
        MinValue:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The minimum value of an attribute that is of the number data
              type.
          title: MinValue
        MaxValue:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The maximum value of an attribute that is of the number data
              type.
          title: MaxValue
      title: NumberAttributeConstraintsType
      type: object
    OAuthFlowType:
      enum:
      - code
      - implicit
      - client_credentials
      title: OAuthFlowType
      type: string
    PasswordPolicyMinLengthType:
      maximum: 99
      minimum: 6
      type: integer
    TemporaryPasswordValidityDaysType:
      maximum: 365
      minimum: 0
      type: integer
    PasswordPolicyType:
      description: The password policy type.
      properties:
        MinimumLength:
          allOf:
          - $ref: '#/components/schemas/PasswordPolicyMinLengthType'
          - description: The minimum length of the password in the policy that you
              have set. This value can't be less than 6.
          title: MinimumLength
        RequireUppercase:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "In the password policy that you have set, refers to whether\
              \ you have required users to use at least one uppercase letter in their\
              \ password."
          title: RequireUppercase
        RequireLowercase:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "In the password policy that you have set, refers to whether\
              \ you have required users to use at least one lowercase letter in their\
              \ password."
          title: RequireLowercase
        RequireNumbers:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "In the password policy that you have set, refers to whether\
              \ you have required users to use at least one number in their password."
          title: RequireNumbers
        RequireSymbols:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          - description: "In the password policy that you have set, refers to whether\
              \ you have required users to use at least one symbol in their password."
          title: RequireSymbols
        TemporaryPasswordValidityDays:
          allOf:
          - $ref: '#/components/schemas/TemporaryPasswordValidityDaysType'
          - description: "<p>The number of days a temporary password is valid in the\
              \ password policy. If the user doesn't sign in during this time, an\
              \ administrator must reset their password.</p> <note> <p>When you set\
              \ <code>TemporaryPasswordValidityDays</code> for a user pool, you can\
              \ no longer set a value for the legacy <code>UnusedAccountValidityDays</code>\
              \ parameter in that user pool.</p> </note>"
          title: TemporaryPasswordValidityDays
      title: PasswordPolicyType
      type: object
    PreSignedUrlType:
      maxLength: 2048
      minLength: 0
      type: string
    PriorityType:
      maximum: 2
      minimum: 1
      type: integer
    ProviderDescription:
      description: A container for IdP details.
      properties:
        ProviderName:
          allOf:
          - $ref: '#/components/schemas/ProviderNameType'
          - description: The IdP name.
          title: ProviderName
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderTypeType'
          - description: The IdP type.
          title: ProviderType
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: The date the provider was last modified.
          title: LastModifiedDate
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was created."
          title: CreationDate
      title: ProviderDescription
      type: object
    RecoveryOptionType:
      description: "A map containing a priority as a key, and recovery method name\
        \ as a value."
      properties:
        Priority:
          allOf:
          - $ref: '#/components/schemas/PriorityType'
          - description: A positive integer specifying priority of a method with 1
              being the highest priority.
          title: Priority
        Name:
          allOf:
          - $ref: '#/components/schemas/RecoveryOptionNameType'
          - description: The recovery method for a user.
          title: Name
      required:
      - Name
      - Priority
      title: RecoveryOptionType
      type: object
    RecoveryOptionNameType:
      enum:
      - verified_email
      - verified_phone_number
      - admin_only
      title: RecoveryOptionNameType
      type: string
    RegionCodeType:
      maxLength: 32
      minLength: 5
      type: string
    ResourceServerScopeDescriptionType:
      maxLength: 256
      minLength: 1
      type: string
    ResourceServerScopeType:
      description: A resource server scope.
      properties:
        ScopeName:
          allOf:
          - $ref: '#/components/schemas/ResourceServerScopeNameType'
          - description: The name of the scope.
          title: ScopeName
        ScopeDescription:
          allOf:
          - $ref: '#/components/schemas/ResourceServerScopeDescriptionType'
          - description: A description of the scope.
          title: ScopeDescription
      required:
      - ScopeDescription
      - ScopeName
      title: ResourceServerScopeType
      type: object
    ResourceServerScopeNameType:
      maxLength: 256
      minLength: 1
      pattern: "[\\x21\\x23-\\x2E\\x30-\\x5B\\x5D-\\x7E]+"
      type: string
    RiskExceptionConfigurationType:
      description: The type of the configuration to override the risk decision.
      properties:
        BlockedIPRangeList:
          allOf:
          - $ref: '#/components/schemas/BlockedIPRangeListType'
          - description: "Overrides the risk decision to always block the pre-authentication\
              \ requests. The IP range is in CIDR notation, a compact representation\
              \ of an IP address and its routing prefix."
          title: BlockedIPRangeList
        SkippedIPRangeList:
          allOf:
          - $ref: '#/components/schemas/SkippedIPRangeListType'
          - description: Risk detection isn't performed on the IP addresses in this
              range list. The IP range is in CIDR notation.
          title: SkippedIPRangeList
      title: RiskExceptionConfigurationType
      type: object
    SkippedIPRangeListType:
      items:
        $ref: '#/components/schemas/StringType'
      maxItems: 200
      type: array
    StringAttributeConstraintsType:
      description: The constraints associated with a string attribute.
      properties:
        MinLength:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The minimum length.
          title: MinLength
        MaxLength:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The maximum length.
          title: MaxLength
      title: StringAttributeConstraintsType
      type: object
    ScopeType:
      maxLength: 256
      minLength: 1
      pattern: "[\\x21\\x23-\\x5B\\x5D-\\x7E]+"
      title: ScopeType
      type: string
    SoftwareTokenMFAUserCodeType:
      maxLength: 6
      minLength: 6
      pattern: "[0-9]+"
      type: string
    StatusType:
      enum:
      - Enabled
      - Disabled
      title: StatusType
      type: string
    TagKeysType:
      maxLength: 128
      minLength: 1
      title: TagKeysType
      type: string
    TagValueType:
      maxLength: 256
      minLength: 0
      title: TagValueType
      type: string
    TimeUnitsType:
      enum:
      - seconds
      - minutes
      - hours
      - days
      title: TimeUnitsType
      type: string
    UserPoolTagsListType:
      items:
        $ref: '#/components/schemas/TagKeysType'
      type: array
    UserImportJobStatusType:
      enum:
      - Created
      - Pending
      - InProgress
      - Stopping
      - Expired
      - Stopped
      - Failed
      - Succeeded
      title: UserImportJobStatusType
      type: string
    UserPoolClientDescription:
      description: The description of the user pool client.
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientIdType'
          - description: The ID of the client associated with the user pool.
          title: ClientId
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The user pool ID for the user pool where you want to describe
              the user pool client.
          title: UserPoolId
        ClientName:
          allOf:
          - $ref: '#/components/schemas/ClientNameType'
          - description: The client name from the user pool client description.
          title: ClientName
      title: UserPoolClientDescription
      type: object
    UserPoolDescriptionType:
      description: A user pool description.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/UserPoolIdType'
          - description: The ID in a user pool description.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/UserPoolNameType'
          - description: The name in a user pool description.
          title: Name
        LambdaConfig:
          $ref: '#/components/schemas/UserPoolDescriptionType_LambdaConfig'
        Status:
          allOf:
          - $ref: '#/components/schemas/StatusType'
          - description: The user pool status in a user pool description.
          title: Status
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was modified."
          title: LastModifiedDate
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          - description: "The date and time, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601</a> format, when the item was created."
          title: CreationDate
      title: UserPoolDescriptionType
      type: object
    UsernameAttributeType:
      enum:
      - phone_number
      - email
      title: UsernameAttributeType
      type: string
    VerifySoftwareTokenResponseType:
      enum:
      - SUCCESS
      - ERROR
      title: VerifySoftwareTokenResponseType
      type: string
    AdminCreateUserResponse_User:
      allOf:
      - $ref: '#/components/schemas/UserType'
      - description: The newly created user.
      example:
        UserCreateDate: ""
        Username: ""
        Attributes: ""
        Enabled: ""
        UserLastModifiedDate: ""
        UserStatus: ""
        MFAOptions: ""
      title: AdminCreateUserResponse_User
    AdminDisableProviderForUserRequest_User:
      allOf:
      - $ref: '#/components/schemas/ProviderUserIdentifierType'
      - description: The user to be disabled.
      example:
        ProviderName: ""
        ProviderAttributeName: ""
        ProviderAttributeValue: ""
      title: AdminDisableProviderForUserRequest_User
    AdminGetDeviceResponse_Device:
      allOf:
      - $ref: '#/components/schemas/DeviceType'
      - description: The device.
      example:
        DeviceLastModifiedDate: ""
        DeviceAttributes: ""
        DeviceKey: ""
        DeviceCreateDate: ""
        DeviceLastAuthenticatedDate: ""
      title: AdminGetDeviceResponse_Device
    AdminInitiateAuthResponse_AuthenticationResult:
      allOf:
      - $ref: '#/components/schemas/AuthenticationResultType'
      - description: "The result of the authentication response. This is only returned\
          \ if the caller doesn't need to pass another challenge. If the caller does\
          \ need to pass another challenge before it gets tokens, <code>ChallengeName</code>,\
          \ <code>ChallengeParameters</code>, and <code>Session</code> are returned."
      example:
        NewDeviceMetadata:
          DeviceKey: ""
          DeviceGroupKey: ""
        IdToken: ""
        ExpiresIn: ""
        TokenType: ""
        RefreshToken: ""
        AccessToken: ""
      title: AdminInitiateAuthResponse_AuthenticationResult
    AdminInitiateAuthRequest_AnalyticsMetadata:
      allOf:
      - $ref: '#/components/schemas/AnalyticsMetadataType'
      - description: The analytics metadata for collecting Amazon Pinpoint metrics
          for <code>AdminInitiateAuth</code> calls.
      example:
        AnalyticsEndpointId: ""
      title: AdminInitiateAuthRequest_AnalyticsMetadata
    AdminInitiateAuthRequest_ContextData:
      allOf:
      - $ref: '#/components/schemas/ContextDataType'
      - description: "Contextual data about your user session, such as the device\
          \ fingerprint, IP address, or location. Amazon Cognito advanced security\
          \ evaluates the risk of an authentication event based on the context that\
          \ your app generates and passes to Amazon Cognito when it makes API requests."
      example:
        HttpHeaders: ""
        ServerPath: ""
        ServerName: ""
        IpAddress: ""
        EncodedData: ""
      title: AdminInitiateAuthRequest_ContextData
    AdminLinkProviderForUserRequest_DestinationUser:
      allOf:
      - $ref: '#/components/schemas/ProviderUserIdentifierType'
      - description: "<p>The existing user in the user pool that you want to assign\
          \ to the external IdP user account. This user can be a local (Username +\
          \ Password) Amazon Cognito user pools user or a federated user (for example,\
          \ a SAML or Facebook user). If the user doesn't exist, Amazon Cognito generates\
          \ an exception. Amazon Cognito returns this user when the new user (with\
          \ the linked IdP attribute) signs in.</p> <p>For a native username + password\
          \ user, the <code>ProviderAttributeValue</code> for the <code>DestinationUser</code>\
          \ should be the username in the user pool. For a federated user, it should\
          \ be the provider-specific <code>user_id</code>.</p> <p>The <code>ProviderAttributeName</code>\
          \ of the <code>DestinationUser</code> is ignored.</p> <p>The <code>ProviderName</code>\
          \ should be set to <code>Cognito</code> for users in Cognito user pools.</p>\
          \ <important> <p>All attributes in the DestinationUser profile must be mutable.\
          \ If you have assigned the user any immutable custom attributes, the operation\
          \ won't succeed.</p> </important>"
      example:
        ProviderName: ""
        ProviderAttributeName: ""
        ProviderAttributeValue: ""
      title: AdminLinkProviderForUserRequest_DestinationUser
    AdminLinkProviderForUserRequest_SourceUser:
      allOf:
      - $ref: '#/components/schemas/ProviderUserIdentifierType'
      - description: "<p>An external IdP account for a user who doesn't exist yet\
          \ in the user pool. This user must be a federated user (for example, a SAML\
          \ or Facebook user), not another native user.</p> <p>If the <code>SourceUser</code>\
          \ is using a federated social IdP, such as Facebook, Google, or Login with\
          \ Amazon, you must set the <code>ProviderAttributeName</code> to <code>Cognito_Subject</code>.\
          \ For social IdPs, the <code>ProviderName</code> will be <code>Facebook</code>,\
          \ <code>Google</code>, or <code>LoginWithAmazon</code>, and Amazon Cognito\
          \ will automatically parse the Facebook, Google, and Login with Amazon tokens\
          \ for <code>id</code>, <code>sub</code>, and <code>user_id</code>, respectively.\
          \ The <code>ProviderAttributeValue</code> for the user must be the same\
          \ value as the <code>id</code>, <code>sub</code>, or <code>user_id</code>\
          \ value found in the social IdP token.</p> <p/> <p>For OIDC, the <code>ProviderAttributeName</code>\
          \ can be any value that matches a claim in the ID token, or that your app\
          \ retrieves from the <code>userInfo</code> endpoint. You must map the claim\
          \ to a user pool attribute in your IdP configuration, and set the user pool\
          \ attribute name as the value of <code>ProviderAttributeName</code> in your\
          \ <code>AdminLinkProviderForUser</code> request.</p> <p>For SAML, the <code>ProviderAttributeName</code>\
          \ can be any value that matches a claim in the SAML assertion. To link SAML\
          \ users based on the subject of the SAML assertion, map the subject to a\
          \ claim through the SAML IdP and set that claim name as the value of <code>ProviderAttributeName</code>\
          \ in your <code>AdminLinkProviderForUser</code> request.</p> <p>For both\
          \ OIDC and SAML users, when you set <code>ProviderAttributeName</code> to\
          \ <code>Cognito_Subject</code>, Amazon Cognito will automatically parse\
          \ the default unique identifier found in the subject from the IdP token.</p>"
      example:
        ProviderName: ""
        ProviderAttributeName: ""
        ProviderAttributeValue: ""
      title: AdminLinkProviderForUserRequest_SourceUser
    AdminRespondToAuthChallengeResponse_AuthenticationResult:
      allOf:
      - $ref: '#/components/schemas/AuthenticationResultType'
      - description: The result returned by the server in response to the authentication
          request.
      example:
        NewDeviceMetadata:
          DeviceKey: ""
          DeviceGroupKey: ""
        IdToken: ""
        ExpiresIn: ""
        TokenType: ""
        RefreshToken: ""
        AccessToken: ""
      title: AdminRespondToAuthChallengeResponse_AuthenticationResult
    AdminRespondToAuthChallengeRequest_AnalyticsMetadata:
      allOf:
      - $ref: '#/components/schemas/AnalyticsMetadataType'
      - description: The analytics metadata for collecting Amazon Pinpoint metrics
          for <code>AdminRespondToAuthChallenge</code> calls.
      example:
        AnalyticsEndpointId: ""
      title: AdminRespondToAuthChallengeRequest_AnalyticsMetadata
    AdminSetUserMFAPreferenceRequest_SMSMfaSettings:
      allOf:
      - $ref: '#/components/schemas/SMSMfaSettingsType'
      - description: The SMS text message MFA settings.
      example:
        Enabled: ""
        PreferredMfa: ""
      title: AdminSetUserMFAPreferenceRequest_SMSMfaSettings
    AdminSetUserMFAPreferenceRequest_SoftwareTokenMfaSettings:
      allOf:
      - $ref: '#/components/schemas/SoftwareTokenMfaSettingsType'
      - description: The time-based one-time password software token MFA settings.
      example:
        Enabled: ""
        PreferredMfa: ""
      title: AdminSetUserMFAPreferenceRequest_SoftwareTokenMfaSettings
    ConfirmDeviceRequest_DeviceSecretVerifierConfig:
      allOf:
      - $ref: '#/components/schemas/DeviceSecretVerifierConfigType'
      - description: The configuration of the device secret verifier.
      example:
        Salt: ""
        PasswordVerifier: ""
      title: ConfirmDeviceRequest_DeviceSecretVerifierConfig
    ConfirmForgotPasswordRequest_AnalyticsMetadata:
      allOf:
      - $ref: '#/components/schemas/AnalyticsMetadataType'
      - description: The Amazon Pinpoint analytics metadata for collecting metrics
          for <code>ConfirmForgotPassword</code> calls.
      example:
        AnalyticsEndpointId: ""
      title: ConfirmForgotPasswordRequest_AnalyticsMetadata
    ConfirmForgotPasswordRequest_UserContextData:
      allOf:
      - $ref: '#/components/schemas/UserContextDataType'
      - description: "Contextual data about your user session, such as the device\
          \ fingerprint, IP address, or location. Amazon Cognito advanced security\
          \ evaluates the risk of an authentication event based on the context that\
          \ your app generates and passes to Amazon Cognito when it makes API requests."
      example:
        IpAddress: ""
        EncodedData: ""
      title: ConfirmForgotPasswordRequest_UserContextData
    ConfirmSignUpRequest_AnalyticsMetadata:
      allOf:
      - $ref: '#/components/schemas/AnalyticsMetadataType'
      - description: The Amazon Pinpoint analytics metadata for collecting metrics
          for <code>ConfirmSignUp</code> calls.
      example:
        AnalyticsEndpointId: ""
      title: ConfirmSignUpRequest_AnalyticsMetadata
    CreateGroupResponse_Group:
      allOf:
      - $ref: '#/components/schemas/GroupType'
      - description: The group object for the group.
      example:
        GroupName: ""
        LastModifiedDate: ""
        CreationDate: ""
        UserPoolId: ""
        Description: ""
        Precedence: ""
        RoleArn: ""
      title: CreateGroupResponse_Group
    CreateIdentityProviderResponse_IdentityProvider:
      allOf:
      - $ref: '#/components/schemas/IdentityProviderType'
      - description: The newly created IdP object.
      example:
        ProviderName: ""
        LastModifiedDate: ""
        CreationDate: ""
        UserPoolId: ""
        AttributeMapping: ""
        ProviderDetails: ""
        ProviderType: ""
        IdpIdentifiers: ""
      title: CreateIdentityProviderResponse_IdentityProvider
    CreateResourceServerResponse_ResourceServer:
      allOf:
      - $ref: '#/components/schemas/ResourceServerType'
      - description: The newly created resource server.
      example:
        UserPoolId: ""
        Identifier: ""
        Scopes: ""
        Name: ""
      title: CreateResourceServerResponse_ResourceServer
    CreateUserImportJobResponse_UserImportJob:
      allOf:
      - $ref: '#/components/schemas/UserImportJobType'
      - description: The job object that represents the user import job.
      example:
        Status: ""
        CreationDate: ""
        ImportedUsers: ""
        FailedUsers: ""
        PreSignedUrl: ""
        CloudWatchLogsRoleArn: ""
        JobName: ""
        StartDate: ""
        UserPoolId: ""
        SkippedUsers: ""
        CompletionMessage: ""
        CompletionDate: ""
        JobId: ""
      title: CreateUserImportJobResponse_UserImportJob
    CreateUserPoolResponse_UserPool:
      allOf:
      - $ref: '#/components/schemas/UserPoolType'
      - description: A container for the user pool details.
      example:
        UserPoolTags: ""
        LastModifiedDate: ""
        CreationDate: ""
        Policies:
          PasswordPolicy:
            RequireNumbers: ""
            MinimumLength: ""
            TemporaryPasswordValidityDays: ""
            RequireUppercase: ""
            RequireLowercase: ""
            RequireSymbols: ""
        SchemaAttributes: ""
        AdminCreateUserConfig:
          UnusedAccountValidityDays: ""
          InviteMessageTemplate:
            EmailMessage: ""
            SMSMessage: ""
            EmailSubject: ""
          AllowAdminCreateUserOnly: ""
        UsernameConfiguration:
          CaseSensitive: ""
        Name: ""
        SmsVerificationMessage: ""
        UserAttributeUpdateSettings:
          AttributesRequireVerificationBeforeUpdate: ""
        SmsConfigurationFailure: ""
        EmailConfiguration:
          ReplyToEmailAddress: ""
          ConfigurationSet: ""
          EmailSendingAccount: ""
          SourceArn: ""
          From: ""
        SmsConfiguration:
          SnsRegion: ""
          ExternalId: ""
          SnsCallerArn: ""
        EmailVerificationSubject: ""
        AccountRecoverySetting:
          RecoveryMechanisms: ""
        Status: ""
        VerificationMessageTemplate:
          EmailMessageByLink: ""
          EmailMessage: ""
          SmsMessage: ""
          EmailSubject: ""
          DefaultEmailOption: ""
          EmailSubjectByLink: ""
        MfaConfiguration: ""
        EmailConfigurationFailure: ""
        DeletionProtection: ""
        SmsAuthenticationMessage: ""
        EstimatedNumberOfUsers: ""
        UserPoolAddOns:
          AdvancedSecurityMode: ""
        CustomDomain: ""
        AliasAttributes: ""
        Id: ""
        LambdaConfig:
          CreateAuthChallenge: ""
          PreSignUp: ""
          KMSKeyID: ""
          UserMigration: ""
          PostAuthentication: ""
          VerifyAuthChallengeResponse: ""
          PreAuthentication: ""
          DefineAuthChallenge: ""
          PreTokenGeneration: ""
          CustomSMSSender:
            LambdaArn: ""
            LambdaVersion: ""
          PostConfirmation: ""
          CustomMessage: ""
          CustomEmailSender:
            LambdaArn: ""
            LambdaVersion: ""
        Domain: ""
        Arn: ""
        AutoVerifiedAttributes: ""
        UsernameAttributes: ""
        EmailVerificationMessage: ""
        DeviceConfiguration:
          DeviceOnlyRememberedOnUserPrompt: ""
          ChallengeRequiredOnNewDevice: ""
      title: CreateUserPoolResponse_UserPool
    CreateUserPoolRequest_Policies:
      allOf:
      - $ref: '#/components/schemas/UserPoolPolicyType'
      - description: The policies associated with the new user pool.
      example:
        PasswordPolicy:
          RequireNumbers: ""
          MinimumLength: ""
          TemporaryPasswordValidityDays: ""
          RequireUppercase: ""
          RequireLowercase: ""
          RequireSymbols: ""
      title: CreateUserPoolRequest_Policies
    CreateUserPoolRequest_LambdaConfig:
      allOf:
      - $ref: '#/components/schemas/LambdaConfigType'
      - description: "<p>The Lambda trigger configuration information for the new\
          \ user pool.</p> <note> <p>In a push model, event sources (such as Amazon\
          \ S3 and custom applications) need permission to invoke a function. So you\
          \ must make an extra call to add permission for these event sources to invoke\
          \ your Lambda function.</p> <p/> <p>For more information on using the Lambda\
          \ API to add permission, see<a href=\"https://docs.aws.amazon.com/lambda/latest/dg/API_AddPermission.html\"\
          > AddPermission </a>. </p> <p>For adding permission using the CLI, see<a\
          \ href=\"https://docs.aws.amazon.com/cli/latest/reference/lambda/add-permission.html\"\
          > add-permission </a>.</p> </note>"
      example:
        CreateAuthChallenge: ""
        PreSignUp: ""
        KMSKeyID: ""
        UserMigration: ""
        PostAuthentication: ""
        VerifyAuthChallengeResponse: ""
        PreAuthentication: ""
        DefineAuthChallenge: ""
        PreTokenGeneration: ""
        CustomSMSSender:
          LambdaArn: ""
          LambdaVersion: ""
        PostConfirmation: ""
        CustomMessage: ""
        CustomEmailSender:
          LambdaArn: ""
          LambdaVersion: ""
      title: CreateUserPoolRequest_LambdaConfig
    CreateUserPoolRequest_VerificationMessageTemplate:
      allOf:
      - $ref: '#/components/schemas/VerificationMessageTemplateType'
      - description: The template for the verification message that the user sees
          when the app requests permission to access the user's information.
      example:
        EmailMessageByLink: ""
        EmailMessage: ""
        SmsMessage: ""
        EmailSubject: ""
        DefaultEmailOption: ""
        EmailSubjectByLink: ""
      title: CreateUserPoolRequest_VerificationMessageTemplate
    CreateUserPoolRequest_UserAttributeUpdateSettings:
      allOf:
      - $ref: '#/components/schemas/UserAttributeUpdateSettingsType'
      - description: "The settings for updates to user attributes. These settings\
          \ include the property <code>AttributesRequireVerificationBeforeUpdate</code>,\
          \ a user-pool setting that tells Amazon Cognito how to handle changes to\
          \ the value of your users' email address and phone number attributes. For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates\"\
          > Verifying updates to email addresses and phone numbers</a>."
      example:
        AttributesRequireVerificationBeforeUpdate: ""
      title: CreateUserPoolRequest_UserAttributeUpdateSettings
    CreateUserPoolRequest_DeviceConfiguration:
      allOf:
      - $ref: '#/components/schemas/DeviceConfigurationType'
      - description: "<p>The device-remembering configuration for a user pool. A null\
          \ value indicates that you have deactivated device remembering in your user\
          \ pool.</p> <note> <p>When you provide a value for any <code>DeviceConfiguration</code>\
          \ field, you activate the Amazon Cognito device-remembering feature.</p>\
          \ </note>"
      example:
        DeviceOnlyRememberedOnUserPrompt: ""
        ChallengeRequiredOnNewDevice: ""
      title: CreateUserPoolRequest_DeviceConfiguration
    CreateUserPoolRequest_EmailConfiguration:
      allOf:
      - $ref: '#/components/schemas/EmailConfigurationType'
      - description: "The email configuration of your user pool. The email configuration\
          \ type sets your preferred sending method, Amazon Web Services Region, and\
          \ sender for messages from your user pool."
      example:
        ReplyToEmailAddress: ""
        ConfigurationSet: ""
        EmailSendingAccount: ""
        SourceArn: ""
        From: ""
      title: CreateUserPoolRequest_EmailConfiguration
    CreateUserPoolRequest_SmsConfiguration:
      allOf:
      - $ref: '#/components/schemas/SmsConfigurationType'
      - description: "The SMS configuration with the settings that your Amazon Cognito\
          \ user pool must use to send an SMS message from your Amazon Web Services\
          \ account through Amazon Simple Notification Service. To send SMS messages\
          \ with Amazon SNS in the Amazon Web Services Region that you want, the Amazon\
          \ Cognito user pool uses an Identity and Access Management (IAM) role in\
          \ your Amazon Web Services account."
      example:
        SnsRegion: ""
        ExternalId: ""
        SnsCallerArn: ""
      title: CreateUserPoolRequest_SmsConfiguration
    CreateUserPoolRequest_AdminCreateUserConfig:
      allOf:
      - $ref: '#/components/schemas/AdminCreateUserConfigType'
      - description: The configuration for <code>AdminCreateUser</code> requests.
      example:
        UnusedAccountValidityDays: ""
        InviteMessageTemplate:
          EmailMessage: ""
          SMSMessage: ""
          EmailSubject: ""
        AllowAdminCreateUserOnly: ""
      title: CreateUserPoolRequest_AdminCreateUserConfig
    CreateUserPoolRequest_UserPoolAddOns:
      allOf:
      - $ref: '#/components/schemas/UserPoolAddOnsType'
      - description: "<p>User pool add-ons. Contains settings for activation of advanced\
          \ security features. To log user security information but take no action,\
          \ set to <code>AUDIT</code>. To configure automatic security responses to\
          \ risky traffic to your user pool, set to <code>ENFORCED</code>.</p> <p>For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html\"\
          >Adding advanced security to a user pool</a>.</p>"
      example:
        AdvancedSecurityMode: ""
      title: CreateUserPoolRequest_UserPoolAddOns
    CreateUserPoolRequest_UsernameConfiguration:
      allOf:
      - $ref: '#/components/schemas/UsernameConfigurationType'
      - description: "<p>Case sensitivity on the username input for the selected sign-in\
          \ option. When case sensitivity is set to <code>False</code> (case insensitive),\
          \ users can sign in with any combination of capital and lowercase letters.\
          \ For example, <code>username</code>, <code>USERNAME</code>, or <code>UserName</code>,\
          \ or for email, <code>email@example.com</code> or <code>EMaiL@eXamplE.Com</code>.\
          \ For most use cases, set case sensitivity to <code>False</code> (case insensitive)\
          \ as a best practice. When usernames and email addresses are case insensitive,\
          \ Amazon Cognito treats any variation in case as the same user, and prevents\
          \ a case variation from being assigned to the same attribute for a different\
          \ user.</p> <p>This configuration is immutable after you set it. For more\
          \ information, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UsernameConfigurationType.html\"\
          >UsernameConfigurationType</a>.</p>"
      example:
        CaseSensitive: ""
      title: CreateUserPoolRequest_UsernameConfiguration
    CreateUserPoolRequest_AccountRecoverySetting:
      allOf:
      - $ref: '#/components/schemas/AccountRecoverySettingType'
      - description: "The available verified method a user can use to recover their\
          \ password when they call <code>ForgotPassword</code>. You can use this\
          \ setting to define a preferred method when a user has more than one method\
          \ available. With this setting, SMS doesn't qualify for a valid password\
          \ recovery mechanism if the user also has SMS multi-factor authentication\
          \ (MFA) activated. In the absence of this setting, Amazon Cognito uses the\
          \ legacy behavior to determine the recovery method where SMS is preferred\
          \ through email."
      example:
        RecoveryMechanisms: ""
      title: CreateUserPoolRequest_AccountRecoverySetting
    CreateUserPoolClientResponse_UserPoolClient:
      allOf:
      - $ref: '#/components/schemas/UserPoolClientType'
      - description: The user pool client that was just created.
      example:
        AnalyticsConfiguration:
          ApplicationArn: ""
          UserDataShared: ""
          ExternalId: ""
          ApplicationId: ""
          RoleArn: ""
        LastModifiedDate: ""
        CreationDate: ""
        CallbackURLs: ""
        IdTokenValidity: ""
        TokenValidityUnits:
          IdToken: ""
          RefreshToken: ""
          AccessToken: ""
        ReadAttributes: ""
        DefaultRedirectURI: ""
        AllowedOAuthFlowsUserPoolClient: ""
        ClientName: ""
        ExplicitAuthFlows: ""
        ClientId: ""
        AccessTokenValidity: ""
        EnableTokenRevocation: ""
        EnablePropagateAdditionalUserContextData: ""
        AllowedOAuthScopes: ""
        AuthSessionValidity: ""
        SupportedIdentityProviders: ""
        UserPoolId: ""
        AllowedOAuthFlows: ""
        ClientSecret: ""
        LogoutURLs: ""
        RefreshTokenValidity: ""
        WriteAttributes: ""
        PreventUserExistenceErrors: ""
      title: CreateUserPoolClientResponse_UserPoolClient
    CreateUserPoolClientRequest_TokenValidityUnits:
      allOf:
      - $ref: '#/components/schemas/TokenValidityUnitsType'
      - description: "The units in which the validity times are represented. The default\
          \ unit for RefreshToken is days, and default for ID and access tokens are\
          \ hours."
      example:
        IdToken: ""
        RefreshToken: ""
        AccessToken: ""
      title: CreateUserPoolClientRequest_TokenValidityUnits
    CreateUserPoolClientRequest_AnalyticsConfiguration:
      allOf:
      - $ref: '#/components/schemas/AnalyticsConfigurationType'
      - description: "<p>The user pool analytics configuration for collecting metrics\
          \ and sending them to your Amazon Pinpoint campaign.</p> <note> <p>In Amazon\
          \ Web Services Regions where Amazon Pinpoint isn't available, user pools\
          \ only support sending events to Amazon Pinpoint projects in Amazon Web\
          \ Services Region us-east-1. In Regions where Amazon Pinpoint is available,\
          \ user pools support sending events to Amazon Pinpoint projects within that\
          \ same Region.</p> </note>"
      example:
        ApplicationArn: ""
        UserDataShared: ""
        ExternalId: ""
        ApplicationId: ""
        RoleArn: ""
      title: CreateUserPoolClientRequest_AnalyticsConfiguration
    CreateUserPoolDomainRequest_CustomDomainConfig:
      allOf:
      - $ref: '#/components/schemas/CustomDomainConfigType'
      - description: "<p>The configuration for a custom domain that hosts the sign-up\
          \ and sign-in webpages for your application.</p> <p>Provide this parameter\
          \ only if you want to use a custom domain for your user pool. Otherwise,\
          \ you can exclude this parameter and use the Amazon Cognito hosted domain\
          \ instead.</p> <p>For more information about the hosted domain and custom\
          \ domains, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-assign-domain.html\"\
          >Configuring a User Pool Domain</a>.</p>"
      example:
        CertificateArn: ""
      title: CreateUserPoolDomainRequest_CustomDomainConfig
    DescribeIdentityProviderResponse_IdentityProvider:
      allOf:
      - $ref: '#/components/schemas/IdentityProviderType'
      - description: The identity provider details.
      example:
        ProviderName: ""
        LastModifiedDate: ""
        CreationDate: ""
        UserPoolId: ""
        AttributeMapping: ""
        ProviderDetails: ""
        ProviderType: ""
        IdpIdentifiers: ""
      title: DescribeIdentityProviderResponse_IdentityProvider
    DescribeResourceServerResponse_ResourceServer:
      allOf:
      - $ref: '#/components/schemas/ResourceServerType'
      - description: The resource server.
      example:
        UserPoolId: ""
        Identifier: ""
        Scopes: ""
        Name: ""
      title: DescribeResourceServerResponse_ResourceServer
    DescribeRiskConfigurationResponse_RiskConfiguration:
      allOf:
      - $ref: '#/components/schemas/RiskConfigurationType'
      - description: The risk configuration.
      example:
        CompromisedCredentialsRiskConfiguration:
          Actions:
            EventAction: ""
          EventFilter: ""
        LastModifiedDate: ""
        UserPoolId: ""
        ClientId: ""
        AccountTakeoverRiskConfiguration:
          Actions:
            HighAction:
              Notify: ""
              EventAction: ""
            LowAction:
              Notify: ""
              EventAction: ""
            MediumAction:
              Notify: ""
              EventAction: ""
          NotifyConfiguration:
            ReplyTo: ""
            BlockEmail:
              TextBody: ""
              HtmlBody: ""
              Subject: ""
            SourceArn: ""
            NoActionEmail:
              TextBody: ""
              HtmlBody: ""
              Subject: ""
            From: ""
            MfaEmail:
              TextBody: ""
              HtmlBody: ""
              Subject: ""
        RiskExceptionConfiguration:
          BlockedIPRangeList: ""
          SkippedIPRangeList: ""
      title: DescribeRiskConfigurationResponse_RiskConfiguration
    DescribeUserPoolResponse_UserPool:
      allOf:
      - $ref: '#/components/schemas/UserPoolType'
      - description: The container of metadata returned by the server to describe
          the pool.
      example:
        UserPoolTags: ""
        LastModifiedDate: ""
        CreationDate: ""
        Policies:
          PasswordPolicy:
            RequireNumbers: ""
            MinimumLength: ""
            TemporaryPasswordValidityDays: ""
            RequireUppercase: ""
            RequireLowercase: ""
            RequireSymbols: ""
        SchemaAttributes: ""
        AdminCreateUserConfig:
          UnusedAccountValidityDays: ""
          InviteMessageTemplate:
            EmailMessage: ""
            SMSMessage: ""
            EmailSubject: ""
          AllowAdminCreateUserOnly: ""
        UsernameConfiguration:
          CaseSensitive: ""
        Name: ""
        SmsVerificationMessage: ""
        UserAttributeUpdateSettings:
          AttributesRequireVerificationBeforeUpdate: ""
        SmsConfigurationFailure: ""
        EmailConfiguration:
          ReplyToEmailAddress: ""
          ConfigurationSet: ""
          EmailSendingAccount: ""
          SourceArn: ""
          From: ""
        SmsConfiguration:
          SnsRegion: ""
          ExternalId: ""
          SnsCallerArn: ""
        EmailVerificationSubject: ""
        AccountRecoverySetting:
          RecoveryMechanisms: ""
        Status: ""
        VerificationMessageTemplate:
          EmailMessageByLink: ""
          EmailMessage: ""
          SmsMessage: ""
          EmailSubject: ""
          DefaultEmailOption: ""
          EmailSubjectByLink: ""
        MfaConfiguration: ""
        EmailConfigurationFailure: ""
        DeletionProtection: ""
        SmsAuthenticationMessage: ""
        EstimatedNumberOfUsers: ""
        UserPoolAddOns:
          AdvancedSecurityMode: ""
        CustomDomain: ""
        AliasAttributes: ""
        Id: ""
        LambdaConfig:
          CreateAuthChallenge: ""
          PreSignUp: ""
          KMSKeyID: ""
          UserMigration: ""
          PostAuthentication: ""
          VerifyAuthChallengeResponse: ""
          PreAuthentication: ""
          DefineAuthChallenge: ""
          PreTokenGeneration: ""
          CustomSMSSender:
            LambdaArn: ""
            LambdaVersion: ""
          PostConfirmation: ""
          CustomMessage: ""
          CustomEmailSender:
            LambdaArn: ""
            LambdaVersion: ""
        Domain: ""
        Arn: ""
        AutoVerifiedAttributes: ""
        UsernameAttributes: ""
        EmailVerificationMessage: ""
        DeviceConfiguration:
          DeviceOnlyRememberedOnUserPrompt: ""
          ChallengeRequiredOnNewDevice: ""
      title: DescribeUserPoolResponse_UserPool
    DescribeUserPoolClientResponse_UserPoolClient:
      allOf:
      - $ref: '#/components/schemas/UserPoolClientType'
      - description: The user pool client from a server response to describe the user
          pool client.
      example:
        AnalyticsConfiguration:
          ApplicationArn: ""
          UserDataShared: ""
          ExternalId: ""
          ApplicationId: ""
          RoleArn: ""
        LastModifiedDate: ""
        CreationDate: ""
        CallbackURLs: ""
        IdTokenValidity: ""
        TokenValidityUnits:
          IdToken: ""
          RefreshToken: ""
          AccessToken: ""
        ReadAttributes: ""
        DefaultRedirectURI: ""
        AllowedOAuthFlowsUserPoolClient: ""
        ClientName: ""
        ExplicitAuthFlows: ""
        ClientId: ""
        AccessTokenValidity: ""
        EnableTokenRevocation: ""
        EnablePropagateAdditionalUserContextData: ""
        AllowedOAuthScopes: ""
        AuthSessionValidity: ""
        SupportedIdentityProviders: ""
        UserPoolId: ""
        AllowedOAuthFlows: ""
        ClientSecret: ""
        LogoutURLs: ""
        RefreshTokenValidity: ""
        WriteAttributes: ""
        PreventUserExistenceErrors: ""
      title: DescribeUserPoolClientResponse_UserPoolClient
    DescribeUserPoolDomainResponse_DomainDescription:
      allOf:
      - $ref: '#/components/schemas/DomainDescriptionType'
      - description: A domain description object containing information about the
          domain.
      example:
        CloudFrontDistribution: ""
        Status: ""
        UserPoolId: ""
        AWSAccountId: ""
        S3Bucket: ""
        Version: ""
        CustomDomainConfig:
          CertificateArn: ""
        Domain: ""
      title: DescribeUserPoolDomainResponse_DomainDescription
    ForgotPasswordResponse_CodeDeliveryDetails:
      allOf:
      - $ref: '#/components/schemas/CodeDeliveryDetailsType'
      - description: The code delivery details returned by the server in response
          to the request to reset a password.
      example:
        Destination: ""
        DeliveryMedium: ""
        AttributeName: ""
      title: ForgotPasswordResponse_CodeDeliveryDetails
    ForgotPasswordRequest_AnalyticsMetadata:
      allOf:
      - $ref: '#/components/schemas/AnalyticsMetadataType'
      - description: The Amazon Pinpoint analytics metadata that contributes to your
          metrics for <code>ForgotPassword</code> calls.
      example:
        AnalyticsEndpointId: ""
      title: ForgotPasswordRequest_AnalyticsMetadata
    GetLogDeliveryConfigurationResponse_LogDeliveryConfiguration:
      allOf:
      - $ref: '#/components/schemas/LogDeliveryConfigurationType'
      - description: The detailed activity logging configuration of the requested
          user pool.
      example:
        UserPoolId: ""
        LogConfigurations: ""
      title: GetLogDeliveryConfigurationResponse_LogDeliveryConfiguration
    GetUICustomizationResponse_UICustomization:
      allOf:
      - $ref: '#/components/schemas/UICustomizationType'
      - description: The UI customization information.
      example:
        LastModifiedDate: ""
        CreationDate: ""
        CSS: ""
        CSSVersion: ""
        UserPoolId: ""
        ClientId: ""
        ImageUrl: ""
      title: GetUICustomizationResponse_UICustomization
    GetUserAttributeVerificationCodeResponse_CodeDeliveryDetails:
      allOf:
      - $ref: '#/components/schemas/CodeDeliveryDetailsType'
      - description: The code delivery details returned by the server in response
          to the request to get the user attribute verification code.
      example:
        Destination: ""
        DeliveryMedium: ""
        AttributeName: ""
      title: GetUserAttributeVerificationCodeResponse_CodeDeliveryDetails
    GetUserPoolMfaConfigResponse_SmsMfaConfiguration:
      allOf:
      - $ref: '#/components/schemas/SmsMfaConfigType'
      - description: The SMS text message multi-factor authentication (MFA) configuration.
      example:
        SmsConfiguration:
          SnsRegion: ""
          ExternalId: ""
          SnsCallerArn: ""
        SmsAuthenticationMessage: ""
      title: GetUserPoolMfaConfigResponse_SmsMfaConfiguration
    GetUserPoolMfaConfigResponse_SoftwareTokenMfaConfiguration:
      allOf:
      - $ref: '#/components/schemas/SoftwareTokenMfaConfigType'
      - description: The software token multi-factor authentication (MFA) configuration.
      example:
        Enabled: ""
      title: GetUserPoolMfaConfigResponse_SoftwareTokenMfaConfiguration
    InitiateAuthResponse_AuthenticationResult:
      allOf:
      - $ref: '#/components/schemas/AuthenticationResultType'
      - description: "The result of the authentication response. This result is only\
          \ returned if the caller doesn't need to pass another challenge. If the\
          \ caller does need to pass another challenge before it gets tokens, <code>ChallengeName</code>,\
          \ <code>ChallengeParameters</code>, and <code>Session</code> are returned."
      example:
        NewDeviceMetadata:
          DeviceKey: ""
          DeviceGroupKey: ""
        IdToken: ""
        ExpiresIn: ""
        TokenType: ""
        RefreshToken: ""
        AccessToken: ""
      title: InitiateAuthResponse_AuthenticationResult
    InitiateAuthRequest_AnalyticsMetadata:
      allOf:
      - $ref: '#/components/schemas/AnalyticsMetadataType'
      - description: The Amazon Pinpoint analytics metadata that contributes to your
          metrics for <code>InitiateAuth</code> calls.
      example:
        AnalyticsEndpointId: ""
      title: InitiateAuthRequest_AnalyticsMetadata
    ResendConfirmationCodeResponse_CodeDeliveryDetails:
      allOf:
      - $ref: '#/components/schemas/CodeDeliveryDetailsType'
      - description: The code delivery details returned by the server in response
          to the request to resend the confirmation code.
      example:
        Destination: ""
        DeliveryMedium: ""
        AttributeName: ""
      title: ResendConfirmationCodeResponse_CodeDeliveryDetails
    ResendConfirmationCodeRequest_AnalyticsMetadata:
      allOf:
      - $ref: '#/components/schemas/AnalyticsMetadataType'
      - description: The Amazon Pinpoint analytics metadata that contributes to your
          metrics for <code>ResendConfirmationCode</code> calls.
      example:
        AnalyticsEndpointId: ""
      title: ResendConfirmationCodeRequest_AnalyticsMetadata
    RespondToAuthChallengeResponse_AuthenticationResult:
      allOf:
      - $ref: '#/components/schemas/AuthenticationResultType'
      - description: The result returned by the server in response to the request
          to respond to the authentication challenge.
      example:
        NewDeviceMetadata:
          DeviceKey: ""
          DeviceGroupKey: ""
        IdToken: ""
        ExpiresIn: ""
        TokenType: ""
        RefreshToken: ""
        AccessToken: ""
      title: RespondToAuthChallengeResponse_AuthenticationResult
    RespondToAuthChallengeRequest_AnalyticsMetadata:
      allOf:
      - $ref: '#/components/schemas/AnalyticsMetadataType'
      - description: The Amazon Pinpoint analytics metadata that contributes to your
          metrics for <code>RespondToAuthChallenge</code> calls.
      example:
        AnalyticsEndpointId: ""
      title: RespondToAuthChallengeRequest_AnalyticsMetadata
    SetLogDeliveryConfigurationResponse_LogDeliveryConfiguration:
      allOf:
      - $ref: '#/components/schemas/LogDeliveryConfigurationType'
      - description: The detailed activity logging configuration that you applied
          to the requested user pool.
      example:
        UserPoolId: ""
        LogConfigurations: ""
      title: SetLogDeliveryConfigurationResponse_LogDeliveryConfiguration
    SetRiskConfigurationRequest_CompromisedCredentialsRiskConfiguration:
      allOf:
      - $ref: '#/components/schemas/CompromisedCredentialsRiskConfigurationType'
      - description: The compromised credentials risk configuration.
      example:
        Actions:
          EventAction: ""
        EventFilter: ""
      title: SetRiskConfigurationRequest_CompromisedCredentialsRiskConfiguration
    SetRiskConfigurationRequest_AccountTakeoverRiskConfiguration:
      allOf:
      - $ref: '#/components/schemas/AccountTakeoverRiskConfigurationType'
      - description: The account takeover risk configuration.
      example:
        Actions:
          HighAction:
            Notify: ""
            EventAction: ""
          LowAction:
            Notify: ""
            EventAction: ""
          MediumAction:
            Notify: ""
            EventAction: ""
        NotifyConfiguration:
          ReplyTo: ""
          BlockEmail:
            TextBody: ""
            HtmlBody: ""
            Subject: ""
          SourceArn: ""
          NoActionEmail:
            TextBody: ""
            HtmlBody: ""
            Subject: ""
          From: ""
          MfaEmail:
            TextBody: ""
            HtmlBody: ""
            Subject: ""
      title: SetRiskConfigurationRequest_AccountTakeoverRiskConfiguration
    SetRiskConfigurationRequest_RiskExceptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/RiskExceptionConfigurationType'
      - description: The configuration to override the risk decision.
      example:
        BlockedIPRangeList: ""
        SkippedIPRangeList: ""
      title: SetRiskConfigurationRequest_RiskExceptionConfiguration
    SetUserMFAPreferenceRequest_SMSMfaSettings:
      allOf:
      - $ref: '#/components/schemas/SMSMfaSettingsType'
      - description: The SMS text message multi-factor authentication (MFA) settings.
      example:
        Enabled: ""
        PreferredMfa: ""
      title: SetUserMFAPreferenceRequest_SMSMfaSettings
    SetUserMFAPreferenceRequest_SoftwareTokenMfaSettings:
      allOf:
      - $ref: '#/components/schemas/SoftwareTokenMfaSettingsType'
      - description: The time-based one-time password (TOTP) software token MFA settings.
      example:
        Enabled: ""
        PreferredMfa: ""
      title: SetUserMFAPreferenceRequest_SoftwareTokenMfaSettings
    SetUserPoolMfaConfigResponse_SmsMfaConfiguration:
      allOf:
      - $ref: '#/components/schemas/SmsMfaConfigType'
      - description: The SMS text message MFA configuration.
      example:
        SmsConfiguration:
          SnsRegion: ""
          ExternalId: ""
          SnsCallerArn: ""
        SmsAuthenticationMessage: ""
      title: SetUserPoolMfaConfigResponse_SmsMfaConfiguration
    SetUserPoolMfaConfigResponse_SoftwareTokenMfaConfiguration:
      allOf:
      - $ref: '#/components/schemas/SoftwareTokenMfaConfigType'
      - description: The software token MFA configuration.
      example:
        Enabled: ""
      title: SetUserPoolMfaConfigResponse_SoftwareTokenMfaConfiguration
    SignUpResponse_CodeDeliveryDetails:
      allOf:
      - $ref: '#/components/schemas/CodeDeliveryDetailsType'
      - description: The code delivery details returned by the server response to
          the user registration request.
      example:
        Destination: ""
        DeliveryMedium: ""
        AttributeName: ""
      title: SignUpResponse_CodeDeliveryDetails
    SignUpRequest_AnalyticsMetadata:
      allOf:
      - $ref: '#/components/schemas/AnalyticsMetadataType'
      - description: The Amazon Pinpoint analytics metadata that contributes to your
          metrics for <code>SignUp</code> calls.
      example:
        AnalyticsEndpointId: ""
      title: SignUpRequest_AnalyticsMetadata
    UpdateUserPoolRequest_Policies:
      allOf:
      - $ref: '#/components/schemas/UserPoolPolicyType'
      - description: A container with the policies you want to update in a user pool.
      example:
        PasswordPolicy:
          RequireNumbers: ""
          MinimumLength: ""
          TemporaryPasswordValidityDays: ""
          RequireUppercase: ""
          RequireLowercase: ""
          RequireSymbols: ""
      title: UpdateUserPoolRequest_Policies
    UpdateUserPoolRequest_LambdaConfig:
      allOf:
      - $ref: '#/components/schemas/LambdaConfigType'
      - description: The Lambda configuration information from the request to update
          the user pool.
      example:
        CreateAuthChallenge: ""
        PreSignUp: ""
        KMSKeyID: ""
        UserMigration: ""
        PostAuthentication: ""
        VerifyAuthChallengeResponse: ""
        PreAuthentication: ""
        DefineAuthChallenge: ""
        PreTokenGeneration: ""
        CustomSMSSender:
          LambdaArn: ""
          LambdaVersion: ""
        PostConfirmation: ""
        CustomMessage: ""
        CustomEmailSender:
          LambdaArn: ""
          LambdaVersion: ""
      title: UpdateUserPoolRequest_LambdaConfig
    UpdateUserPoolRequest_VerificationMessageTemplate:
      allOf:
      - $ref: '#/components/schemas/VerificationMessageTemplateType'
      - description: The template for verification messages.
      example:
        EmailMessageByLink: ""
        EmailMessage: ""
        SmsMessage: ""
        EmailSubject: ""
        DefaultEmailOption: ""
        EmailSubjectByLink: ""
      title: UpdateUserPoolRequest_VerificationMessageTemplate
    UpdateUserPoolRequest_EmailConfiguration:
      allOf:
      - $ref: '#/components/schemas/EmailConfigurationType'
      - description: "The email configuration of your user pool. The email configuration\
          \ type sets your preferred sending method, Amazon Web Services Region, and\
          \ sender for email invitation and verification messages from your user pool."
      example:
        ReplyToEmailAddress: ""
        ConfigurationSet: ""
        EmailSendingAccount: ""
        SourceArn: ""
        From: ""
      title: UpdateUserPoolRequest_EmailConfiguration
    UpdateUserPoolClientResponse_UserPoolClient:
      allOf:
      - $ref: '#/components/schemas/UserPoolClientType'
      - description: The user pool client value from the response from the server
          when you request to update the user pool client.
      example:
        AnalyticsConfiguration:
          ApplicationArn: ""
          UserDataShared: ""
          ExternalId: ""
          ApplicationId: ""
          RoleArn: ""
        LastModifiedDate: ""
        CreationDate: ""
        CallbackURLs: ""
        IdTokenValidity: ""
        TokenValidityUnits:
          IdToken: ""
          RefreshToken: ""
          AccessToken: ""
        ReadAttributes: ""
        DefaultRedirectURI: ""
        AllowedOAuthFlowsUserPoolClient: ""
        ClientName: ""
        ExplicitAuthFlows: ""
        ClientId: ""
        AccessTokenValidity: ""
        EnableTokenRevocation: ""
        EnablePropagateAdditionalUserContextData: ""
        AllowedOAuthScopes: ""
        AuthSessionValidity: ""
        SupportedIdentityProviders: ""
        UserPoolId: ""
        AllowedOAuthFlows: ""
        ClientSecret: ""
        LogoutURLs: ""
        RefreshTokenValidity: ""
        WriteAttributes: ""
        PreventUserExistenceErrors: ""
      title: UpdateUserPoolClientResponse_UserPoolClient
    UpdateUserPoolClientRequest_TokenValidityUnits:
      allOf:
      - $ref: '#/components/schemas/TokenValidityUnitsType'
      - description: "The time units you use when you set the duration of ID, access,\
          \ and refresh tokens. The default unit for RefreshToken is days, and the\
          \ default for ID and access tokens is hours."
      example:
        IdToken: ""
        RefreshToken: ""
        AccessToken: ""
      title: UpdateUserPoolClientRequest_TokenValidityUnits
    UpdateUserPoolClientRequest_AnalyticsConfiguration:
      allOf:
      - $ref: '#/components/schemas/AnalyticsConfigurationType'
      - description: "<p>The Amazon Pinpoint analytics configuration necessary to\
          \ collect metrics for this user pool.</p> <note> <p>In Amazon Web Services\
          \ Regions where Amazon Pinpoint isn't available, user pools only support\
          \ sending events to Amazon Pinpoint projects in us-east-1. In Regions where\
          \ Amazon Pinpoint is available, user pools support sending events to Amazon\
          \ Pinpoint projects within that same Region.</p> </note>"
      example:
        ApplicationArn: ""
        UserDataShared: ""
        ExternalId: ""
        ApplicationId: ""
        RoleArn: ""
      title: UpdateUserPoolClientRequest_AnalyticsConfiguration
    UpdateUserPoolDomainRequest_CustomDomainConfig:
      allOf:
      - $ref: '#/components/schemas/CustomDomainConfigType'
      - description: The configuration for a custom domain that hosts the sign-up
          and sign-in pages for your application. Use this object to specify an SSL
          certificate that is managed by ACM.
      example:
        CertificateArn: ""
      title: UpdateUserPoolDomainRequest_CustomDomainConfig
    AccountTakeoverActionsType_LowAction:
      allOf:
      - $ref: '#/components/schemas/AccountTakeoverActionType'
      - description: Action to take for a low risk.
      example:
        Notify: ""
        EventAction: ""
      title: AccountTakeoverActionsType_LowAction
    AccountTakeoverActionsType_MediumAction:
      allOf:
      - $ref: '#/components/schemas/AccountTakeoverActionType'
      - description: Action to take for a medium risk.
      example:
        Notify: ""
        EventAction: ""
      title: AccountTakeoverActionsType_MediumAction
    AccountTakeoverActionsType_HighAction:
      allOf:
      - $ref: '#/components/schemas/AccountTakeoverActionType'
      - description: Action to take for a high risk.
      example:
        Notify: ""
        EventAction: ""
      title: AccountTakeoverActionsType_HighAction
    NotifyConfigurationType_BlockEmail:
      allOf:
      - $ref: '#/components/schemas/NotifyEmailType'
      - description: Email template used when a detected risk event is blocked.
      example:
        TextBody: ""
        HtmlBody: ""
        Subject: ""
      title: NotifyConfigurationType_BlockEmail
    NotifyConfigurationType_NoActionEmail:
      allOf:
      - $ref: '#/components/schemas/NotifyEmailType'
      - description: The email template used when a detected risk event is allowed.
      example:
        TextBody: ""
        HtmlBody: ""
        Subject: ""
      title: NotifyConfigurationType_NoActionEmail
    NotifyConfigurationType_MfaEmail:
      allOf:
      - $ref: '#/components/schemas/NotifyEmailType'
      - description: The multi-factor authentication (MFA) email template used when
          MFA is challenged as part of a detected risk.
      example:
        TextBody: ""
        HtmlBody: ""
        Subject: ""
      title: NotifyConfigurationType_MfaEmail
    AccountTakeoverRiskConfigurationType_NotifyConfiguration:
      allOf:
      - $ref: '#/components/schemas/NotifyConfigurationType'
      - description: The notify configuration used to construct email notifications.
      example:
        ReplyTo: ""
        BlockEmail:
          TextBody: ""
          HtmlBody: ""
          Subject: ""
        SourceArn: ""
        NoActionEmail:
          TextBody: ""
          HtmlBody: ""
          Subject: ""
        From: ""
        MfaEmail:
          TextBody: ""
          HtmlBody: ""
          Subject: ""
      title: AccountTakeoverRiskConfigurationType_NotifyConfiguration
    AccountTakeoverRiskConfigurationType_Actions:
      allOf:
      - $ref: '#/components/schemas/AccountTakeoverActionsType'
      - description: Account takeover risk configuration actions.
      example:
        HighAction:
          Notify: ""
          EventAction: ""
        LowAction:
          Notify: ""
          EventAction: ""
        MediumAction:
          Notify: ""
          EventAction: ""
      title: AccountTakeoverRiskConfigurationType_Actions
    AdminCreateUserConfigType_InviteMessageTemplate:
      allOf:
      - $ref: '#/components/schemas/MessageTemplateType'
      - description: <p>The message template to be used for the welcome message to
          new users.</p> <p>See also <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-customizations.html#cognito-user-pool-settings-user-invitation-message-customization">Customizing
          User Invitation Messages</a>.</p>
      example:
        EmailMessage: ""
        SMSMessage: ""
        EmailSubject: ""
      title: AdminCreateUserConfigType_InviteMessageTemplate
    AuthenticationResultType_NewDeviceMetadata:
      allOf:
      - $ref: '#/components/schemas/NewDeviceMetadataType'
      - description: The new device metadata from an authentication result.
      example:
        DeviceKey: ""
        DeviceGroupKey: ""
      title: AuthenticationResultType_NewDeviceMetadata
    AuthEventType_EventRisk:
      allOf:
      - $ref: '#/components/schemas/EventRiskType'
      - description: The event risk.
      title: AuthEventType_EventRisk
    AuthEventType_EventContextData:
      allOf:
      - $ref: '#/components/schemas/EventContextDataType'
      - description: The user context data captured at the time of an event request.
          This value provides additional information about the client from which event
          the request is received.
      title: AuthEventType_EventContextData
    AuthEventType_EventFeedback:
      allOf:
      - $ref: '#/components/schemas/EventFeedbackType'
      - description: 'A flag specifying the user feedback captured at the time of
          an event request is good or bad. '
      title: AuthEventType_EventFeedback
    CompromisedCredentialsRiskConfigurationType_Actions:
      allOf:
      - $ref: '#/components/schemas/CompromisedCredentialsActionsType'
      - description: The compromised credentials risk configuration actions.
      example:
        EventAction: ""
      title: CompromisedCredentialsRiskConfigurationType_Actions
    UserPoolClientType_TokenValidityUnits:
      allOf:
      - $ref: '#/components/schemas/TokenValidityUnitsType'
      - description: "The time units used to specify the token validity times of each\
          \ token type: ID, access, and refresh."
      example:
        IdToken: ""
        RefreshToken: ""
        AccessToken: ""
      title: UserPoolClientType_TokenValidityUnits
    UserPoolClientType_AnalyticsConfiguration:
      allOf:
      - $ref: '#/components/schemas/AnalyticsConfigurationType'
      - description: "<p>The Amazon Pinpoint analytics configuration for the user\
          \ pool client.</p> <note> <p>Amazon Cognito user pools only support sending\
          \ events to Amazon Pinpoint projects in the US East (N. Virginia) us-east-1\
          \ Region, regardless of the Region where the user pool resides.</p> </note>"
      example:
        ApplicationArn: ""
        UserDataShared: ""
        ExternalId: ""
        ApplicationId: ""
        RoleArn: ""
      title: UserPoolClientType_AnalyticsConfiguration
    UserPoolPolicyType_PasswordPolicy:
      allOf:
      - $ref: '#/components/schemas/PasswordPolicyType'
      - description: The password policy.
      example:
        RequireNumbers: ""
        MinimumLength: ""
        TemporaryPasswordValidityDays: ""
        RequireUppercase: ""
        RequireLowercase: ""
        RequireSymbols: ""
      title: UserPoolPolicyType_PasswordPolicy
    LambdaConfigType_CustomSMSSender:
      allOf:
      - $ref: '#/components/schemas/CustomSMSLambdaVersionConfigType'
      - description: A custom SMS sender Lambda trigger.
      example:
        LambdaArn: ""
        LambdaVersion: ""
      title: LambdaConfigType_CustomSMSSender
    LambdaConfigType_CustomEmailSender:
      allOf:
      - $ref: '#/components/schemas/CustomEmailLambdaVersionConfigType'
      - description: A custom email sender Lambda trigger.
      example:
        LambdaArn: ""
        LambdaVersion: ""
      title: LambdaConfigType_CustomEmailSender
    UserPoolType_Policies:
      allOf:
      - $ref: '#/components/schemas/UserPoolPolicyType'
      - description: The policies associated with the user pool.
      example:
        PasswordPolicy:
          RequireNumbers: ""
          MinimumLength: ""
          TemporaryPasswordValidityDays: ""
          RequireUppercase: ""
          RequireLowercase: ""
          RequireSymbols: ""
      title: UserPoolType_Policies
    UserPoolType_LambdaConfig:
      allOf:
      - $ref: '#/components/schemas/LambdaConfigType'
      - description: The Lambda triggers associated with the user pool.
      example:
        CreateAuthChallenge: ""
        PreSignUp: ""
        KMSKeyID: ""
        UserMigration: ""
        PostAuthentication: ""
        VerifyAuthChallengeResponse: ""
        PreAuthentication: ""
        DefineAuthChallenge: ""
        PreTokenGeneration: ""
        CustomSMSSender:
          LambdaArn: ""
          LambdaVersion: ""
        PostConfirmation: ""
        CustomMessage: ""
        CustomEmailSender:
          LambdaArn: ""
          LambdaVersion: ""
      title: UserPoolType_LambdaConfig
    UserPoolType_UsernameConfiguration:
      allOf:
      - $ref: '#/components/schemas/UsernameConfigurationType'
      - description: "Case sensitivity of the username input for the selected sign-in\
          \ option. For example, when case sensitivity is set to <code>False</code>,\
          \ users can sign in using either \"username\" or \"Username\". This configuration\
          \ is immutable once it has been set. For more information, see <a href=\"\
          https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UsernameConfigurationType.html\"\
          >UsernameConfigurationType</a>."
      example:
        CaseSensitive: ""
      title: UserPoolType_UsernameConfiguration
    SchemaAttributeType_NumberAttributeConstraints:
      allOf:
      - $ref: '#/components/schemas/NumberAttributeConstraintsType'
      - description: Specifies the constraints for an attribute of the number type.
      title: SchemaAttributeType_NumberAttributeConstraints
    SchemaAttributeType_StringAttributeConstraints:
      allOf:
      - $ref: '#/components/schemas/StringAttributeConstraintsType'
      - description: Specifies the constraints for an attribute of the string type.
      title: SchemaAttributeType_StringAttributeConstraints
    RiskConfigurationType_CompromisedCredentialsRiskConfiguration:
      allOf:
      - $ref: '#/components/schemas/CompromisedCredentialsRiskConfigurationType'
      - description: "The compromised credentials risk configuration object, including\
          \ the <code>EventFilter</code> and the <code>EventAction</code>."
      example:
        Actions:
          EventAction: ""
        EventFilter: ""
      title: RiskConfigurationType_CompromisedCredentialsRiskConfiguration
    RiskConfigurationType_AccountTakeoverRiskConfiguration:
      allOf:
      - $ref: '#/components/schemas/AccountTakeoverRiskConfigurationType'
      - description: "The account takeover risk configuration object, including the\
          \ <code>NotifyConfiguration</code> object and <code>Actions</code> to take\
          \ if there is an account takeover."
      example:
        Actions:
          HighAction:
            Notify: ""
            EventAction: ""
          LowAction:
            Notify: ""
            EventAction: ""
          MediumAction:
            Notify: ""
            EventAction: ""
        NotifyConfiguration:
          ReplyTo: ""
          BlockEmail:
            TextBody: ""
            HtmlBody: ""
            Subject: ""
          SourceArn: ""
          NoActionEmail:
            TextBody: ""
            HtmlBody: ""
            Subject: ""
          From: ""
          MfaEmail:
            TextBody: ""
            HtmlBody: ""
            Subject: ""
      title: RiskConfigurationType_AccountTakeoverRiskConfiguration
    DomainDescriptionType_CustomDomainConfig:
      allOf:
      - $ref: '#/components/schemas/CustomDomainConfigType'
      - description: The configuration for a custom domain that hosts the sign-up
          and sign-in webpages for your application.
      example:
        CertificateArn: ""
      title: DomainDescriptionType_CustomDomainConfig
    SmsMfaConfigType_SmsConfiguration:
      allOf:
      - $ref: '#/components/schemas/SmsConfigurationType'
      - description: "The SMS configuration with the settings that your Amazon Cognito\
          \ user pool must use to send an SMS message from your Amazon Web Services\
          \ account through Amazon Simple Notification Service. To request Amazon\
          \ SNS in the Amazon Web Services Region that you want, the Amazon Cognito\
          \ user pool uses an Identity and Access Management (IAM) role that you provide\
          \ for your Amazon Web Services account."
      example:
        SnsRegion: ""
        ExternalId: ""
        SnsCallerArn: ""
      title: SmsMfaConfigType_SmsConfiguration
    LogConfigurationType_CloudWatchLogsConfiguration:
      allOf:
      - $ref: '#/components/schemas/CloudWatchLogsConfigurationType'
      - description: The CloudWatch logging destination of a user pool.
      title: LogConfigurationType_CloudWatchLogsConfiguration
    UserPoolDescriptionType_LambdaConfig:
      allOf:
      - $ref: '#/components/schemas/LambdaConfigType'
      - description: The Lambda configuration information in a user pool description.
      title: UserPoolDescriptionType_LambdaConfig
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
