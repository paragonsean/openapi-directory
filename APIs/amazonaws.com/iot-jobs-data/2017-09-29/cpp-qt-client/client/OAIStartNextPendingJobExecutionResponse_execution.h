/**
 * AWS IoT Jobs Data Plane
 * <p>AWS IoT Jobs is a service that allows you to define a set of jobs â€” remote operations that are sent to and executed on one or more devices connected to AWS IoT. For example, you can define a job that instructs a set of devices to download and install application or firmware updates, reboot, rotate certificates, or perform remote troubleshooting operations.</p> <p> To create a job, you make a job document which is a description of the remote operations to be performed, and you specify a list of targets that should perform the operations. The targets can be individual things, thing groups or both.</p> <p> AWS IoT Jobs sends a message to inform the targets that a job is available. The target starts the execution of the job by downloading the job document, performing the operations it specifies, and reporting its progress to AWS IoT. The Jobs service provides commands to track the progress of a job on a specific target and for all the targets of the job</p>
 *
 * The version of the OpenAPI document: 2017-09-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartNextPendingJobExecutionResponse_execution.h
 *
 * 
 */

#ifndef OAIStartNextPendingJobExecutionResponse_execution_H
#define OAIStartNextPendingJobExecutionResponse_execution_H

#include <QJsonObject>

#include "OAIJobExecutionStatus.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStartNextPendingJobExecutionResponse_execution : public OAIObject {
public:
    OAIStartNextPendingJobExecutionResponse_execution();
    OAIStartNextPendingJobExecutionResponse_execution(QString json);
    ~OAIStartNextPendingJobExecutionResponse_execution() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getJobId() const;
    void setJobId(const QString &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    QString getThingName() const;
    void setThingName(const QString &thing_name);
    bool is_thing_name_Set() const;
    bool is_thing_name_Valid() const;

    OAIJobExecutionStatus getStatus() const;
    void setStatus(const OAIJobExecutionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap getStatusDetails() const;
    void setStatusDetails(const QMap &status_details);
    bool is_status_details_Set() const;
    bool is_status_details_Valid() const;

    qint32 getQueuedAt() const;
    void setQueuedAt(const qint32 &queued_at);
    bool is_queued_at_Set() const;
    bool is_queued_at_Valid() const;

    qint32 getStartedAt() const;
    void setStartedAt(const qint32 &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    qint32 getLastUpdatedAt() const;
    void setLastUpdatedAt(const qint32 &last_updated_at);
    bool is_last_updated_at_Set() const;
    bool is_last_updated_at_Valid() const;

    qint32 getApproximateSecondsBeforeTimedOut() const;
    void setApproximateSecondsBeforeTimedOut(const qint32 &approximate_seconds_before_timed_out);
    bool is_approximate_seconds_before_timed_out_Set() const;
    bool is_approximate_seconds_before_timed_out_Valid() const;

    qint32 getVersionNumber() const;
    void setVersionNumber(const qint32 &version_number);
    bool is_version_number_Set() const;
    bool is_version_number_Valid() const;

    qint32 getExecutionNumber() const;
    void setExecutionNumber(const qint32 &execution_number);
    bool is_execution_number_Set() const;
    bool is_execution_number_Valid() const;

    QString getJobDocument() const;
    void setJobDocument(const QString &job_document);
    bool is_job_document_Set() const;
    bool is_job_document_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    QString m_thing_name;
    bool m_thing_name_isSet;
    bool m_thing_name_isValid;

    OAIJobExecutionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap m_status_details;
    bool m_status_details_isSet;
    bool m_status_details_isValid;

    qint32 m_queued_at;
    bool m_queued_at_isSet;
    bool m_queued_at_isValid;

    qint32 m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;

    qint32 m_last_updated_at;
    bool m_last_updated_at_isSet;
    bool m_last_updated_at_isValid;

    qint32 m_approximate_seconds_before_timed_out;
    bool m_approximate_seconds_before_timed_out_isSet;
    bool m_approximate_seconds_before_timed_out_isValid;

    qint32 m_version_number;
    bool m_version_number_isSet;
    bool m_version_number_isValid;

    qint32 m_execution_number;
    bool m_execution_number_isSet;
    bool m_execution_number_isValid;

    QString m_job_document;
    bool m_job_document_isSet;
    bool m_job_document_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartNextPendingJobExecutionResponse_execution)

#endif // OAIStartNextPendingJobExecutionResponse_execution_H
