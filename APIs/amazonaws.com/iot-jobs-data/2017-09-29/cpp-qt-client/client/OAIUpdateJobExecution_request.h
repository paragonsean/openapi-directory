/**
 * AWS IoT Jobs Data Plane
 * <p>AWS IoT Jobs is a service that allows you to define a set of jobs â€” remote operations that are sent to and executed on one or more devices connected to AWS IoT. For example, you can define a job that instructs a set of devices to download and install application or firmware updates, reboot, rotate certificates, or perform remote troubleshooting operations.</p> <p> To create a job, you make a job document which is a description of the remote operations to be performed, and you specify a list of targets that should perform the operations. The targets can be individual things, thing groups or both.</p> <p> AWS IoT Jobs sends a message to inform the targets that a job is available. The target starts the execution of the job by downloading the job document, performing the operations it specifies, and reporting its progress to AWS IoT. The Jobs service provides commands to track the progress of a job on a specific target and for all the targets of the job</p>
 *
 * The version of the OpenAPI document: 2017-09-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateJobExecution_request.h
 *
 * 
 */

#ifndef OAIUpdateJobExecution_request_H
#define OAIUpdateJobExecution_request_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateJobExecution_request : public OAIObject {
public:
    OAIUpdateJobExecution_request();
    OAIUpdateJobExecution_request(QString json);
    ~OAIUpdateJobExecution_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap<QString, QString> getStatusDetails() const;
    void setStatusDetails(const QMap<QString, QString> &status_details);
    bool is_status_details_Set() const;
    bool is_status_details_Valid() const;

    qint32 getStepTimeoutInMinutes() const;
    void setStepTimeoutInMinutes(const qint32 &step_timeout_in_minutes);
    bool is_step_timeout_in_minutes_Set() const;
    bool is_step_timeout_in_minutes_Valid() const;

    qint32 getExpectedVersion() const;
    void setExpectedVersion(const qint32 &expected_version);
    bool is_expected_version_Set() const;
    bool is_expected_version_Valid() const;

    bool isIncludeJobExecutionState() const;
    void setIncludeJobExecutionState(const bool &include_job_execution_state);
    bool is_include_job_execution_state_Set() const;
    bool is_include_job_execution_state_Valid() const;

    bool isIncludeJobDocument() const;
    void setIncludeJobDocument(const bool &include_job_document);
    bool is_include_job_document_Set() const;
    bool is_include_job_document_Valid() const;

    qint32 getExecutionNumber() const;
    void setExecutionNumber(const qint32 &execution_number);
    bool is_execution_number_Set() const;
    bool is_execution_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap<QString, QString> m_status_details;
    bool m_status_details_isSet;
    bool m_status_details_isValid;

    qint32 m_step_timeout_in_minutes;
    bool m_step_timeout_in_minutes_isSet;
    bool m_step_timeout_in_minutes_isValid;

    qint32 m_expected_version;
    bool m_expected_version_isSet;
    bool m_expected_version_isValid;

    bool m_include_job_execution_state;
    bool m_include_job_execution_state_isSet;
    bool m_include_job_execution_state_isValid;

    bool m_include_job_document;
    bool m_include_job_document_isSet;
    bool m_include_job_document_isValid;

    qint32 m_execution_number;
    bool m_execution_number_isSet;
    bool m_execution_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateJobExecution_request)

#endif // OAIUpdateJobExecution_request_H
