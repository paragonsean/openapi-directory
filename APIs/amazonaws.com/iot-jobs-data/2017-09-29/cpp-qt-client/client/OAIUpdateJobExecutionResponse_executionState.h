/**
 * AWS IoT Jobs Data Plane
 * <p>AWS IoT Jobs is a service that allows you to define a set of jobs â€” remote operations that are sent to and executed on one or more devices connected to AWS IoT. For example, you can define a job that instructs a set of devices to download and install application or firmware updates, reboot, rotate certificates, or perform remote troubleshooting operations.</p> <p> To create a job, you make a job document which is a description of the remote operations to be performed, and you specify a list of targets that should perform the operations. The targets can be individual things, thing groups or both.</p> <p> AWS IoT Jobs sends a message to inform the targets that a job is available. The target starts the execution of the job by downloading the job document, performing the operations it specifies, and reporting its progress to AWS IoT. The Jobs service provides commands to track the progress of a job on a specific target and for all the targets of the job</p>
 *
 * The version of the OpenAPI document: 2017-09-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateJobExecutionResponse_executionState.h
 *
 * 
 */

#ifndef OAIUpdateJobExecutionResponse_executionState_H
#define OAIUpdateJobExecutionResponse_executionState_H

#include <QJsonObject>

#include "OAIJobExecutionStatus.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateJobExecutionResponse_executionState : public OAIObject {
public:
    OAIUpdateJobExecutionResponse_executionState();
    OAIUpdateJobExecutionResponse_executionState(QString json);
    ~OAIUpdateJobExecutionResponse_executionState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIJobExecutionStatus getStatus() const;
    void setStatus(const OAIJobExecutionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap getStatusDetails() const;
    void setStatusDetails(const QMap &status_details);
    bool is_status_details_Set() const;
    bool is_status_details_Valid() const;

    qint32 getVersionNumber() const;
    void setVersionNumber(const qint32 &version_number);
    bool is_version_number_Set() const;
    bool is_version_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIJobExecutionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap m_status_details;
    bool m_status_details_isSet;
    bool m_status_details_isValid;

    qint32 m_version_number;
    bool m_version_number_isSet;
    bool m_version_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateJobExecutionResponse_executionState)

#endif // OAIUpdateJobExecutionResponse_executionState_H
