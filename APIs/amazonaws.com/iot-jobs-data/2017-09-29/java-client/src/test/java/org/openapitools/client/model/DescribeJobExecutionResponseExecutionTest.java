/*
 * AWS IoT Jobs Data Plane
 * <p>AWS IoT Jobs is a service that allows you to define a set of jobs â€” remote operations that are sent to and executed on one or more devices connected to AWS IoT. For example, you can define a job that instructs a set of devices to download and install application or firmware updates, reboot, rotate certificates, or perform remote troubleshooting operations.</p> <p> To create a job, you make a job document which is a description of the remote operations to be performed, and you specify a list of targets that should perform the operations. The targets can be individual things, thing groups or both.</p> <p> AWS IoT Jobs sends a message to inform the targets that a job is available. The target starts the execution of the job by downloading the job document, performing the operations it specifies, and reporting its progress to AWS IoT. The Jobs service provides commands to track the progress of a job on a specific target and for all the targets of the job</p>
 *
 * The version of the OpenAPI document: 2017-09-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.JobExecutionStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeJobExecutionResponseExecution
 */
public class DescribeJobExecutionResponseExecutionTest {
    private final DescribeJobExecutionResponseExecution model = new DescribeJobExecutionResponseExecution();

    /**
     * Model tests for DescribeJobExecutionResponseExecution
     */
    @Test
    public void testDescribeJobExecutionResponseExecution() {
        // TODO: test DescribeJobExecutionResponseExecution
    }

    /**
     * Test the property 'jobId'
     */
    @Test
    public void jobIdTest() {
        // TODO: test jobId
    }

    /**
     * Test the property 'thingName'
     */
    @Test
    public void thingNameTest() {
        // TODO: test thingName
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusDetails'
     */
    @Test
    public void statusDetailsTest() {
        // TODO: test statusDetails
    }

    /**
     * Test the property 'queuedAt'
     */
    @Test
    public void queuedAtTest() {
        // TODO: test queuedAt
    }

    /**
     * Test the property 'startedAt'
     */
    @Test
    public void startedAtTest() {
        // TODO: test startedAt
    }

    /**
     * Test the property 'lastUpdatedAt'
     */
    @Test
    public void lastUpdatedAtTest() {
        // TODO: test lastUpdatedAt
    }

    /**
     * Test the property 'approximateSecondsBeforeTimedOut'
     */
    @Test
    public void approximateSecondsBeforeTimedOutTest() {
        // TODO: test approximateSecondsBeforeTimedOut
    }

    /**
     * Test the property 'versionNumber'
     */
    @Test
    public void versionNumberTest() {
        // TODO: test versionNumber
    }

    /**
     * Test the property 'executionNumber'
     */
    @Test
    public void executionNumberTest() {
        // TODO: test executionNumber
    }

    /**
     * Test the property 'jobDocument'
     */
    @Test
    public void jobDocumentTest() {
        // TODO: test jobDocument
    }

}
