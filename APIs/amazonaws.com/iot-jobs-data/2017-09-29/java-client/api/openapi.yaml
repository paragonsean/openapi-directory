openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>AWS IoT Jobs is a service that allows you to define a set of jobs\
    \ â€” remote operations that are sent to and executed on one or more devices connected\
    \ to AWS IoT. For example, you can define a job that instructs a set of devices\
    \ to download and install application or firmware updates, reboot, rotate certificates,\
    \ or perform remote troubleshooting operations.</p> <p> To create a job, you make\
    \ a job document which is a description of the remote operations to be performed,\
    \ and you specify a list of targets that should perform the operations. The targets\
    \ can be individual things, thing groups or both.</p> <p> AWS IoT Jobs sends a\
    \ message to inform the targets that a job is available. The target starts the\
    \ execution of the job by downloading the job document, performing the operations\
    \ it specifies, and reporting its progress to AWS IoT. The Jobs service provides\
    \ commands to track the progress of a job on a specific target and for all the\
    \ targets of the job</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS IoT Jobs Data Plane
  version: 2017-09-29
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: iot-jobs-data
  x-aws-signingName: iot-jobs-data
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-jobs-data-2017-09-29.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/iot/
servers:
- description: The AWS IoT Jobs Data Plane multi-region endpoint
  url: "http://data.jobs.iot.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Jobs Data Plane multi-region endpoint
  url: "https://data.jobs.iot.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Jobs Data Plane endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://data.jobs.iot.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS IoT Jobs Data Plane endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://data.jobs.iot.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /things/{thingName}/jobs/{jobId}:
    get:
      description: Gets details of a job execution.
      operationId: DescribeJobExecution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier assigned to this job when it was created.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          pattern: "[a-zA-Z0-9_-]+|^\\$next"
          type: string
        style: simple
      - description: The thing name associated with the device the job execution is
          running on.
        explode: false
        in: path
        name: thingName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9:_-]+"
          type: string
        style: simple
      - description: "Optional. When set to true, the response contains the job document.\
          \ The default is false."
        explode: true
        in: query
        name: includeJobDocument
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. A number that identifies a particular job execution\
          \ on a particular device. If not specified, the latest job execution is\
          \ returned."
        explode: true
        in: query
        name: executionNumber
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobExecutionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
          description: CertificateValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalStateException'
          description: TerminalStateException
      x-accepts:
      - application/json
    post:
      description: Updates the status of a job execution.
      operationId: UpdateJobExecution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier assigned to this job when it was created.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: The name of the thing associated with the device.
        explode: false
        in: path
        name: thingName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9:_-]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobExecution_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateJobExecutionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
          description: CertificateValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateTransitionException'
          description: InvalidStateTransitionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /things/{thingName}/jobs:
    get:
      description: Gets the list of all jobs for a thing that are not in a terminal
        status.
      operationId: GetPendingJobExecutions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the thing that is executing the job.
        explode: false
        in: path
        name: thingName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9:_-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPendingJobExecutionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
          description: CertificateValidationException
      x-accepts:
      - application/json
  /things/{thingName}/jobs/$next:
    put:
      description: Gets and starts the next pending (status IN_PROGRESS or QUEUED)
        job execution for a thing.
      operationId: StartNextPendingJobExecution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the thing associated with the device.
        explode: false
        in: path
        name: thingName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9:_-]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartNextPendingJobExecution_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartNextPendingJobExecutionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateValidationException'
          description: CertificateValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    DescribeJobExecutionResponse:
      example:
        execution:
          jobId: ""
          queuedAt: ""
          lastUpdatedAt: ""
          thingName: ""
          statusDetails: ""
          startedAt: ""
          executionNumber: ""
          approximateSecondsBeforeTimedOut: ""
          jobDocument: ""
          versionNumber: ""
          status: ""
      properties:
        execution:
          $ref: '#/components/schemas/DescribeJobExecutionResponse_execution'
      type: object
    InvalidRequestException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    ServiceUnavailableException: {}
    CertificateValidationException: {}
    TerminalStateException: {}
    GetPendingJobExecutionsResponse:
      example:
        queuedJobs: ""
        inProgressJobs: ""
      properties:
        inProgressJobs:
          allOf:
          - $ref: '#/components/schemas/JobExecutionSummaryList'
          - description: A list of JobExecutionSummary objects with status IN_PROGRESS.
        queuedJobs:
          allOf:
          - $ref: '#/components/schemas/JobExecutionSummaryList'
          - description: A list of JobExecutionSummary objects with status QUEUED.
      type: object
    StartNextPendingJobExecutionResponse:
      example:
        execution:
          jobId: ""
          queuedAt: ""
          lastUpdatedAt: ""
          thingName: ""
          statusDetails: ""
          startedAt: ""
          executionNumber: ""
          approximateSecondsBeforeTimedOut: ""
          jobDocument: ""
          versionNumber: ""
          status: ""
      properties:
        execution:
          $ref: '#/components/schemas/StartNextPendingJobExecutionResponse_execution'
      type: object
    DetailsValue:
      maxLength: 1024
      minLength: 1
      pattern: "[^\\p\\{C\\}]*\\+"
      type: string
    UpdateJobExecutionResponse:
      example:
        executionState:
          statusDetails: ""
          versionNumber: ""
          status: ""
        jobDocument: ""
      properties:
        executionState:
          $ref: '#/components/schemas/UpdateJobExecutionResponse_executionState'
        jobDocument:
          allOf:
          - $ref: '#/components/schemas/JobDocument'
          - description: The contents of the Job Documents.
      type: object
    InvalidStateTransitionException: {}
    ApproximateSecondsBeforeTimedOut:
      type: integer
    DescribeJobExecutionJobId:
      pattern: "[a-zA-Z0-9_-]+|^\\$next"
      type: string
    ThingName:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9:_-]+"
      type: string
    IncludeJobDocument:
      type: boolean
    ExecutionNumber:
      type: integer
    DescribeJobExecutionRequest:
      properties: {}
      title: DescribeJobExecutionRequest
      type: object
    JobExecution:
      description: Contains data about a job execution.
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The unique identifier you assigned to this job when it was
              created.
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          - description: The name of the thing that is executing the job.
        status:
          allOf:
          - $ref: '#/components/schemas/JobExecutionStatus'
          - description: "The status of the job execution. Can be one of: \"QUEUED\"\
              , \"IN_PROGRESS\", \"FAILED\", \"SUCCESS\", \"CANCELED\", \"REJECTED\"\
              , or \"REMOVED\"."
        statusDetails:
          allOf:
          - $ref: '#/components/schemas/DetailsMap'
          - description: A collection of name/value pairs that describe the status
              of the job execution.
        queuedAt:
          allOf:
          - $ref: '#/components/schemas/QueuedAt'
          - description: "The time, in milliseconds since the epoch, when the job\
              \ execution was enqueued."
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          - description: "The time, in milliseconds since the epoch, when the job\
              \ execution was started."
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the job\
              \ execution was last updated. "
        approximateSecondsBeforeTimedOut:
          allOf:
          - $ref: '#/components/schemas/ApproximateSecondsBeforeTimedOut'
          - description: The estimated number of seconds that remain before the job
              execution status will be changed to <code>TIMED_OUT</code>.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          - description: The version of the job execution. Job execution versions
              are incremented each time they are updated by a device.
        executionNumber:
          allOf:
          - $ref: '#/components/schemas/ExecutionNumber'
          - description: A number that identifies a particular job execution on a
              particular device. It can be used later in commands that return or update
              job execution information.
        jobDocument:
          allOf:
          - $ref: '#/components/schemas/JobDocument'
          - description: The content of the job document.
      type: object
    DetailsKey:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9:_-]+"
      type: string
    DetailsMap:
      additionalProperties:
        $ref: '#/components/schemas/DetailsValue'
      type: object
    ExpectedVersion:
      type: integer
    GetPendingJobExecutionsRequest:
      properties: {}
      title: GetPendingJobExecutionsRequest
      type: object
    JobExecutionSummaryList:
      items:
        $ref: '#/components/schemas/JobExecutionSummary'
      type: array
    IncludeExecutionState:
      type: boolean
    JobDocument:
      maxLength: 32768
      type: string
    JobId:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9_-]+"
      type: string
    JobExecutionStatus:
      enum:
      - QUEUED
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      - TIMED_OUT
      - REJECTED
      - REMOVED
      - CANCELED
      type: string
    QueuedAt:
      type: integer
    StartedAt:
      type: integer
    LastUpdatedAt:
      type: integer
    VersionNumber:
      type: integer
    JobExecutionState:
      description: Contains data about the state of a job execution.
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/JobExecutionStatus'
          - description: "The status of the job execution. Can be one of: \"QUEUED\"\
              , \"IN_PROGRESS\", \"FAILED\", \"SUCCESS\", \"CANCELED\", \"REJECTED\"\
              , or \"REMOVED\"."
        statusDetails:
          allOf:
          - $ref: '#/components/schemas/DetailsMap'
          - description: A collection of name/value pairs that describe the status
              of the job execution.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          - description: The version of the job execution. Job execution versions
              are incremented each time they are updated by a device.
      type: object
    JobExecutionSummary:
      description: Contains a subset of information about a job execution.
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The unique identifier you assigned to this job when it was
              created.
        queuedAt:
          allOf:
          - $ref: '#/components/schemas/QueuedAt'
          - description: "The time, in milliseconds since the epoch, when the job\
              \ execution was enqueued."
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          - description: "The time, in milliseconds since the epoch, when the job\
              \ execution started."
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the job\
              \ execution was last updated."
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          - description: The version of the job execution. Job execution versions
              are incremented each time AWS IoT Jobs receives an update from a device.
        executionNumber:
          allOf:
          - $ref: '#/components/schemas/ExecutionNumber'
          - description: A number that identifies a particular job execution on a
              particular device.
      type: object
    StepTimeoutInMinutes:
      type: integer
    StartNextPendingJobExecutionRequest:
      example:
        stepTimeoutInMinutes: ""
        statusDetails: ""
      properties:
        statusDetails:
          allOf:
          - $ref: '#/components/schemas/DetailsMap'
          - description: "A collection of name/value pairs that describe the status\
              \ of the job execution. If not specified, the statusDetails are unchanged."
        stepTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/StepTimeoutInMinutes'
          - description: "Specifies the amount of time this device has to finish execution\
              \ of this job. If the job execution status is not set to a terminal\
              \ state before this timer expires, or before the timer is reset (by\
              \ calling <code>UpdateJobExecution</code>, setting the status to <code>IN_PROGRESS</code>\
              \ and specifying a new timeout value in field <code>stepTimeoutInMinutes</code>)\
              \ the job execution status will be automatically set to <code>TIMED_OUT</code>.\
              \ Note that setting this timeout has no effect on that job execution\
              \ timeout which may have been specified when the job was created (<code>CreateJob</code>\
              \ using field <code>timeoutConfig</code>)."
      title: StartNextPendingJobExecutionRequest
      type: object
    UpdateJobExecutionRequest:
      example:
        stepTimeoutInMinutes: ""
        includeJobExecutionState: ""
        statusDetails: ""
        executionNumber: ""
        expectedVersion: ""
        includeJobDocument: ""
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/JobExecutionStatus'
          - description: "The new status for the job execution (IN_PROGRESS, FAILED,\
              \ SUCCESS, or REJECTED). This must be specified on every update."
        statusDetails:
          allOf:
          - $ref: '#/components/schemas/DetailsMap'
          - description: " Optional. A collection of name/value pairs that describe\
              \ the status of the job execution. If not specified, the statusDetails\
              \ are unchanged."
        stepTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/StepTimeoutInMinutes'
          - description: "Specifies the amount of time this device has to finish execution\
              \ of this job. If the job execution status is not set to a terminal\
              \ state before this timer expires, or before the timer is reset (by\
              \ again calling <code>UpdateJobExecution</code>, setting the status\
              \ to <code>IN_PROGRESS</code> and specifying a new timeout value in\
              \ this field) the job execution status will be automatically set to\
              \ <code>TIMED_OUT</code>. Note that setting or resetting this timeout\
              \ has no effect on that job execution timeout which may have been specified\
              \ when the job was created (<code>CreateJob</code> using field <code>timeoutConfig</code>)."
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/ExpectedVersion'
          - description: "Optional. The expected current version of the job execution.\
              \ Each time you update the job execution, its version is incremented.\
              \ If the version of the job execution stored in Jobs does not match,\
              \ the update is rejected with a VersionMismatch error, and an ErrorResponse\
              \ that contains the current job execution status data is returned. (This\
              \ makes it unnecessary to perform a separate DescribeJobExecution request\
              \ in order to obtain the job execution status data.)"
        includeJobExecutionState:
          allOf:
          - $ref: '#/components/schemas/IncludeExecutionState'
          - description: "Optional. When included and set to true, the response contains\
              \ the JobExecutionState data. The default is false."
        includeJobDocument:
          allOf:
          - $ref: '#/components/schemas/IncludeJobDocument'
          - description: "Optional. When set to true, the response contains the job\
              \ document. The default is false."
        executionNumber:
          allOf:
          - $ref: '#/components/schemas/ExecutionNumber'
          - description: Optional. A number that identifies a particular job execution
              on a particular device.
      required:
      - status
      title: UpdateJobExecutionRequest
      type: object
    UpdateJobExecution_request:
      properties:
        status:
          description: "The new status for the job execution (IN_PROGRESS, FAILED,\
            \ SUCCESS, or REJECTED). This must be specified on every update."
          enum:
          - QUEUED
          - IN_PROGRESS
          - SUCCEEDED
          - FAILED
          - TIMED_OUT
          - REJECTED
          - REMOVED
          - CANCELED
          type: string
        statusDetails:
          additionalProperties:
            $ref: '#/components/schemas/DetailsValue'
          description: " Optional. A collection of name/value pairs that describe\
            \ the status of the job execution. If not specified, the statusDetails\
            \ are unchanged."
          type: object
        stepTimeoutInMinutes:
          description: "Specifies the amount of time this device has to finish execution\
            \ of this job. If the job execution status is not set to a terminal state\
            \ before this timer expires, or before the timer is reset (by again calling\
            \ <code>UpdateJobExecution</code>, setting the status to <code>IN_PROGRESS</code>\
            \ and specifying a new timeout value in this field) the job execution\
            \ status will be automatically set to <code>TIMED_OUT</code>. Note that\
            \ setting or resetting this timeout has no effect on that job execution\
            \ timeout which may have been specified when the job was created (<code>CreateJob</code>\
            \ using field <code>timeoutConfig</code>)."
          type: integer
        expectedVersion:
          description: "Optional. The expected current version of the job execution.\
            \ Each time you update the job execution, its version is incremented.\
            \ If the version of the job execution stored in Jobs does not match, the\
            \ update is rejected with a VersionMismatch error, and an ErrorResponse\
            \ that contains the current job execution status data is returned. (This\
            \ makes it unnecessary to perform a separate DescribeJobExecution request\
            \ in order to obtain the job execution status data.)"
          type: integer
        includeJobExecutionState:
          description: "Optional. When included and set to true, the response contains\
            \ the JobExecutionState data. The default is false."
          type: boolean
        includeJobDocument:
          description: "Optional. When set to true, the response contains the job\
            \ document. The default is false."
          type: boolean
        executionNumber:
          description: Optional. A number that identifies a particular job execution
            on a particular device.
          type: integer
      required:
      - status
      type: object
    StartNextPendingJobExecution_request:
      properties:
        statusDetails:
          additionalProperties:
            $ref: '#/components/schemas/DetailsValue'
          description: "A collection of name/value pairs that describe the status\
            \ of the job execution. If not specified, the statusDetails are unchanged."
          type: object
        stepTimeoutInMinutes:
          description: "Specifies the amount of time this device has to finish execution\
            \ of this job. If the job execution status is not set to a terminal state\
            \ before this timer expires, or before the timer is reset (by calling\
            \ <code>UpdateJobExecution</code>, setting the status to <code>IN_PROGRESS</code>\
            \ and specifying a new timeout value in field <code>stepTimeoutInMinutes</code>)\
            \ the job execution status will be automatically set to <code>TIMED_OUT</code>.\
            \ Note that setting this timeout has no effect on that job execution timeout\
            \ which may have been specified when the job was created (<code>CreateJob</code>\
            \ using field <code>timeoutConfig</code>)."
          type: integer
      type: object
    DescribeJobExecutionResponse_execution:
      allOf:
      - $ref: '#/components/schemas/JobExecution'
      - description: Contains data about a job execution.
      example:
        jobId: ""
        queuedAt: ""
        lastUpdatedAt: ""
        thingName: ""
        statusDetails: ""
        startedAt: ""
        executionNumber: ""
        approximateSecondsBeforeTimedOut: ""
        jobDocument: ""
        versionNumber: ""
        status: ""
    StartNextPendingJobExecutionResponse_execution:
      allOf:
      - $ref: '#/components/schemas/JobExecution'
      - description: A JobExecution object.
      example:
        jobId: ""
        queuedAt: ""
        lastUpdatedAt: ""
        thingName: ""
        statusDetails: ""
        startedAt: ""
        executionNumber: ""
        approximateSecondsBeforeTimedOut: ""
        jobDocument: ""
        versionNumber: ""
        status: ""
    UpdateJobExecutionResponse_executionState:
      allOf:
      - $ref: '#/components/schemas/JobExecutionState'
      - description: A JobExecutionState object.
      example:
        statusDetails: ""
        versionNumber: ""
        status: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4

