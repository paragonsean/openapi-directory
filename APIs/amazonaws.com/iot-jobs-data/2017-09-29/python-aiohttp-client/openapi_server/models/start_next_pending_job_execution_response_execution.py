# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_execution_status import JobExecutionStatus
from openapi_server import util


class StartNextPendingJobExecutionResponseExecution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_id: str=None, thing_name: str=None, status: JobExecutionStatus=None, status_details: Dict=None, queued_at: int=None, started_at: int=None, last_updated_at: int=None, approximate_seconds_before_timed_out: int=None, version_number: int=None, execution_number: int=None, job_document: str=None):
        """StartNextPendingJobExecutionResponseExecution - a model defined in OpenAPI

        :param job_id: The job_id of this StartNextPendingJobExecutionResponseExecution.
        :param thing_name: The thing_name of this StartNextPendingJobExecutionResponseExecution.
        :param status: The status of this StartNextPendingJobExecutionResponseExecution.
        :param status_details: The status_details of this StartNextPendingJobExecutionResponseExecution.
        :param queued_at: The queued_at of this StartNextPendingJobExecutionResponseExecution.
        :param started_at: The started_at of this StartNextPendingJobExecutionResponseExecution.
        :param last_updated_at: The last_updated_at of this StartNextPendingJobExecutionResponseExecution.
        :param approximate_seconds_before_timed_out: The approximate_seconds_before_timed_out of this StartNextPendingJobExecutionResponseExecution.
        :param version_number: The version_number of this StartNextPendingJobExecutionResponseExecution.
        :param execution_number: The execution_number of this StartNextPendingJobExecutionResponseExecution.
        :param job_document: The job_document of this StartNextPendingJobExecutionResponseExecution.
        """
        self.openapi_types = {
            'job_id': str,
            'thing_name': str,
            'status': JobExecutionStatus,
            'status_details': Dict,
            'queued_at': int,
            'started_at': int,
            'last_updated_at': int,
            'approximate_seconds_before_timed_out': int,
            'version_number': int,
            'execution_number': int,
            'job_document': str
        }

        self.attribute_map = {
            'job_id': 'jobId',
            'thing_name': 'thingName',
            'status': 'status',
            'status_details': 'statusDetails',
            'queued_at': 'queuedAt',
            'started_at': 'startedAt',
            'last_updated_at': 'lastUpdatedAt',
            'approximate_seconds_before_timed_out': 'approximateSecondsBeforeTimedOut',
            'version_number': 'versionNumber',
            'execution_number': 'executionNumber',
            'job_document': 'jobDocument'
        }

        self._job_id = job_id
        self._thing_name = thing_name
        self._status = status
        self._status_details = status_details
        self._queued_at = queued_at
        self._started_at = started_at
        self._last_updated_at = last_updated_at
        self._approximate_seconds_before_timed_out = approximate_seconds_before_timed_out
        self._version_number = version_number
        self._execution_number = execution_number
        self._job_document = job_document

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartNextPendingJobExecutionResponseExecution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartNextPendingJobExecutionResponse_execution of this StartNextPendingJobExecutionResponseExecution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_id(self):
        """Gets the job_id of this StartNextPendingJobExecutionResponseExecution.


        :return: The job_id of this StartNextPendingJobExecutionResponseExecution.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this StartNextPendingJobExecutionResponseExecution.


        :param job_id: The job_id of this StartNextPendingJobExecutionResponseExecution.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def thing_name(self):
        """Gets the thing_name of this StartNextPendingJobExecutionResponseExecution.


        :return: The thing_name of this StartNextPendingJobExecutionResponseExecution.
        :rtype: str
        """
        return self._thing_name

    @thing_name.setter
    def thing_name(self, thing_name):
        """Sets the thing_name of this StartNextPendingJobExecutionResponseExecution.


        :param thing_name: The thing_name of this StartNextPendingJobExecutionResponseExecution.
        :type thing_name: str
        """

        self._thing_name = thing_name

    @property
    def status(self):
        """Gets the status of this StartNextPendingJobExecutionResponseExecution.


        :return: The status of this StartNextPendingJobExecutionResponseExecution.
        :rtype: JobExecutionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this StartNextPendingJobExecutionResponseExecution.


        :param status: The status of this StartNextPendingJobExecutionResponseExecution.
        :type status: JobExecutionStatus
        """

        self._status = status

    @property
    def status_details(self):
        """Gets the status_details of this StartNextPendingJobExecutionResponseExecution.


        :return: The status_details of this StartNextPendingJobExecutionResponseExecution.
        :rtype: Dict
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this StartNextPendingJobExecutionResponseExecution.


        :param status_details: The status_details of this StartNextPendingJobExecutionResponseExecution.
        :type status_details: Dict
        """

        self._status_details = status_details

    @property
    def queued_at(self):
        """Gets the queued_at of this StartNextPendingJobExecutionResponseExecution.


        :return: The queued_at of this StartNextPendingJobExecutionResponseExecution.
        :rtype: int
        """
        return self._queued_at

    @queued_at.setter
    def queued_at(self, queued_at):
        """Sets the queued_at of this StartNextPendingJobExecutionResponseExecution.


        :param queued_at: The queued_at of this StartNextPendingJobExecutionResponseExecution.
        :type queued_at: int
        """

        self._queued_at = queued_at

    @property
    def started_at(self):
        """Gets the started_at of this StartNextPendingJobExecutionResponseExecution.


        :return: The started_at of this StartNextPendingJobExecutionResponseExecution.
        :rtype: int
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this StartNextPendingJobExecutionResponseExecution.


        :param started_at: The started_at of this StartNextPendingJobExecutionResponseExecution.
        :type started_at: int
        """

        self._started_at = started_at

    @property
    def last_updated_at(self):
        """Gets the last_updated_at of this StartNextPendingJobExecutionResponseExecution.


        :return: The last_updated_at of this StartNextPendingJobExecutionResponseExecution.
        :rtype: int
        """
        return self._last_updated_at

    @last_updated_at.setter
    def last_updated_at(self, last_updated_at):
        """Sets the last_updated_at of this StartNextPendingJobExecutionResponseExecution.


        :param last_updated_at: The last_updated_at of this StartNextPendingJobExecutionResponseExecution.
        :type last_updated_at: int
        """

        self._last_updated_at = last_updated_at

    @property
    def approximate_seconds_before_timed_out(self):
        """Gets the approximate_seconds_before_timed_out of this StartNextPendingJobExecutionResponseExecution.


        :return: The approximate_seconds_before_timed_out of this StartNextPendingJobExecutionResponseExecution.
        :rtype: int
        """
        return self._approximate_seconds_before_timed_out

    @approximate_seconds_before_timed_out.setter
    def approximate_seconds_before_timed_out(self, approximate_seconds_before_timed_out):
        """Sets the approximate_seconds_before_timed_out of this StartNextPendingJobExecutionResponseExecution.


        :param approximate_seconds_before_timed_out: The approximate_seconds_before_timed_out of this StartNextPendingJobExecutionResponseExecution.
        :type approximate_seconds_before_timed_out: int
        """

        self._approximate_seconds_before_timed_out = approximate_seconds_before_timed_out

    @property
    def version_number(self):
        """Gets the version_number of this StartNextPendingJobExecutionResponseExecution.


        :return: The version_number of this StartNextPendingJobExecutionResponseExecution.
        :rtype: int
        """
        return self._version_number

    @version_number.setter
    def version_number(self, version_number):
        """Sets the version_number of this StartNextPendingJobExecutionResponseExecution.


        :param version_number: The version_number of this StartNextPendingJobExecutionResponseExecution.
        :type version_number: int
        """

        self._version_number = version_number

    @property
    def execution_number(self):
        """Gets the execution_number of this StartNextPendingJobExecutionResponseExecution.


        :return: The execution_number of this StartNextPendingJobExecutionResponseExecution.
        :rtype: int
        """
        return self._execution_number

    @execution_number.setter
    def execution_number(self, execution_number):
        """Sets the execution_number of this StartNextPendingJobExecutionResponseExecution.


        :param execution_number: The execution_number of this StartNextPendingJobExecutionResponseExecution.
        :type execution_number: int
        """

        self._execution_number = execution_number

    @property
    def job_document(self):
        """Gets the job_document of this StartNextPendingJobExecutionResponseExecution.


        :return: The job_document of this StartNextPendingJobExecutionResponseExecution.
        :rtype: str
        """
        return self._job_document

    @job_document.setter
    def job_document(self, job_document):
        """Sets the job_document of this StartNextPendingJobExecutionResponseExecution.


        :param job_document: The job_document of this StartNextPendingJobExecutionResponseExecution.
        :type job_document: str
        """

        self._job_document = job_document
