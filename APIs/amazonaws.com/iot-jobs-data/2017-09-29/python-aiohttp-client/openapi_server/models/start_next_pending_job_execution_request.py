# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartNextPendingJobExecutionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status_details: Dict[str, str]=None, step_timeout_in_minutes: int=None):
        """StartNextPendingJobExecutionRequest - a model defined in OpenAPI

        :param status_details: The status_details of this StartNextPendingJobExecutionRequest.
        :param step_timeout_in_minutes: The step_timeout_in_minutes of this StartNextPendingJobExecutionRequest.
        """
        self.openapi_types = {
            'status_details': Dict[str, str],
            'step_timeout_in_minutes': int
        }

        self.attribute_map = {
            'status_details': 'statusDetails',
            'step_timeout_in_minutes': 'stepTimeoutInMinutes'
        }

        self._status_details = status_details
        self._step_timeout_in_minutes = step_timeout_in_minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartNextPendingJobExecutionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartNextPendingJobExecution_request of this StartNextPendingJobExecutionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status_details(self):
        """Gets the status_details of this StartNextPendingJobExecutionRequest.

        A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.

        :return: The status_details of this StartNextPendingJobExecutionRequest.
        :rtype: Dict[str, str]
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this StartNextPendingJobExecutionRequest.

        A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.

        :param status_details: The status_details of this StartNextPendingJobExecutionRequest.
        :type status_details: Dict[str, str]
        """

        self._status_details = status_details

    @property
    def step_timeout_in_minutes(self):
        """Gets the step_timeout_in_minutes of this StartNextPendingJobExecutionRequest.

        Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by calling <code>UpdateJobExecution</code>, setting the status to <code>IN_PROGRESS</code> and specifying a new timeout value in field <code>stepTimeoutInMinutes</code>) the job execution status will be automatically set to <code>TIMED_OUT</code>. Note that setting this timeout has no effect on that job execution timeout which may have been specified when the job was created (<code>CreateJob</code> using field <code>timeoutConfig</code>).

        :return: The step_timeout_in_minutes of this StartNextPendingJobExecutionRequest.
        :rtype: int
        """
        return self._step_timeout_in_minutes

    @step_timeout_in_minutes.setter
    def step_timeout_in_minutes(self, step_timeout_in_minutes):
        """Sets the step_timeout_in_minutes of this StartNextPendingJobExecutionRequest.

        Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by calling <code>UpdateJobExecution</code>, setting the status to <code>IN_PROGRESS</code> and specifying a new timeout value in field <code>stepTimeoutInMinutes</code>) the job execution status will be automatically set to <code>TIMED_OUT</code>. Note that setting this timeout has no effect on that job execution timeout which may have been specified when the job was created (<code>CreateJob</code> using field <code>timeoutConfig</code>).

        :param step_timeout_in_minutes: The step_timeout_in_minutes of this StartNextPendingJobExecutionRequest.
        :type step_timeout_in_minutes: int
        """

        self._step_timeout_in_minutes = step_timeout_in_minutes
