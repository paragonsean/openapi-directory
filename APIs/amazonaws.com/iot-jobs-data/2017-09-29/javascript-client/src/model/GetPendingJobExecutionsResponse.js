/**
 * AWS IoT Jobs Data Plane
 * <p>AWS IoT Jobs is a service that allows you to define a set of jobs â€” remote operations that are sent to and executed on one or more devices connected to AWS IoT. For example, you can define a job that instructs a set of devices to download and install application or firmware updates, reboot, rotate certificates, or perform remote troubleshooting operations.</p> <p> To create a job, you make a job document which is a description of the remote operations to be performed, and you specify a list of targets that should perform the operations. The targets can be individual things, thing groups or both.</p> <p> AWS IoT Jobs sends a message to inform the targets that a job is available. The target starts the execution of the job by downloading the job document, performing the operations it specifies, and reporting its progress to AWS IoT. The Jobs service provides commands to track the progress of a job on a specific target and for all the targets of the job</p>
 *
 * The version of the OpenAPI document: 2017-09-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetPendingJobExecutionsResponse model module.
 * @module model/GetPendingJobExecutionsResponse
 * @version 2017-09-29
 */
class GetPendingJobExecutionsResponse {
    /**
     * Constructs a new <code>GetPendingJobExecutionsResponse</code>.
     * @alias module:model/GetPendingJobExecutionsResponse
     */
    constructor() { 
        
        GetPendingJobExecutionsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetPendingJobExecutionsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetPendingJobExecutionsResponse} obj Optional instance to populate.
     * @return {module:model/GetPendingJobExecutionsResponse} The populated <code>GetPendingJobExecutionsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetPendingJobExecutionsResponse();

            if (data.hasOwnProperty('inProgressJobs')) {
                obj['inProgressJobs'] = ApiClient.convertToType(data['inProgressJobs'], Array);
            }
            if (data.hasOwnProperty('queuedJobs')) {
                obj['queuedJobs'] = ApiClient.convertToType(data['queuedJobs'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetPendingJobExecutionsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetPendingJobExecutionsResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `inProgressJobs`
        if (data['inProgressJobs']) { // data not null
          Array.validateJSON(data['inProgressJobs']);
        }
        // validate the optional field `queuedJobs`
        if (data['queuedJobs']) { // data not null
          Array.validateJSON(data['queuedJobs']);
        }

        return true;
    }


}



/**
 * @member {Array} inProgressJobs
 */
GetPendingJobExecutionsResponse.prototype['inProgressJobs'] = undefined;

/**
 * @member {Array} queuedJobs
 */
GetPendingJobExecutionsResponse.prototype['queuedJobs'] = undefined;






export default GetPendingJobExecutionsResponse;

