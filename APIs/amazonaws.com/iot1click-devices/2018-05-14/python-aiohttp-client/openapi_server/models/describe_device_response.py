# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_device_response_device_description import DescribeDeviceResponseDeviceDescription
from openapi_server import util


class DescribeDeviceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_description: DescribeDeviceResponseDeviceDescription=None):
        """DescribeDeviceResponse - a model defined in OpenAPI

        :param device_description: The device_description of this DescribeDeviceResponse.
        """
        self.openapi_types = {
            'device_description': DescribeDeviceResponseDeviceDescription
        }

        self.attribute_map = {
            'device_description': 'DeviceDescription'
        }

        self._device_description = device_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDeviceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDeviceResponse of this DescribeDeviceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_description(self):
        """Gets the device_description of this DescribeDeviceResponse.


        :return: The device_description of this DescribeDeviceResponse.
        :rtype: DescribeDeviceResponseDeviceDescription
        """
        return self._device_description

    @device_description.setter
    def device_description(self, device_description):
        """Sets the device_description of this DescribeDeviceResponse.


        :param device_description: The device_description of this DescribeDeviceResponse.
        :type device_description: DescribeDeviceResponseDeviceDescription
        """

        self._device_description = device_description
