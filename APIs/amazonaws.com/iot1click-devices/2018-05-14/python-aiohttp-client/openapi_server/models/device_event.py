# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_event_device import DeviceEventDevice
from openapi_server import util


class DeviceEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device: DeviceEventDevice=None, std_event: str=None):
        """DeviceEvent - a model defined in OpenAPI

        :param device: The device of this DeviceEvent.
        :param std_event: The std_event of this DeviceEvent.
        """
        self.openapi_types = {
            'device': DeviceEventDevice,
            'std_event': str
        }

        self.attribute_map = {
            'device': 'Device',
            'std_event': 'StdEvent'
        }

        self._device = device
        self._std_event = std_event

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceEvent of this DeviceEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device(self):
        """Gets the device of this DeviceEvent.


        :return: The device of this DeviceEvent.
        :rtype: DeviceEventDevice
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this DeviceEvent.


        :param device: The device of this DeviceEvent.
        :type device: DeviceEventDevice
        """

        self._device = device

    @property
    def std_event(self):
        """Gets the std_event of this DeviceEvent.


        :return: The std_event of this DeviceEvent.
        :rtype: str
        """
        return self._std_event

    @std_event.setter
    def std_event(self, std_event):
        """Sets the std_event of this DeviceEvent.


        :param std_event: The std_event of this DeviceEvent.
        :type std_event: str
        """

        self._std_event = std_event
