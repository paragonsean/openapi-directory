# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActionInvocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extension_identifier: str=None, action_name: str=None, uri: str=None, role_arn: str=None, error_message: str=None, error_code: str=None, invocation_id: str=None):
        """ActionInvocation - a model defined in OpenAPI

        :param extension_identifier: The extension_identifier of this ActionInvocation.
        :param action_name: The action_name of this ActionInvocation.
        :param uri: The uri of this ActionInvocation.
        :param role_arn: The role_arn of this ActionInvocation.
        :param error_message: The error_message of this ActionInvocation.
        :param error_code: The error_code of this ActionInvocation.
        :param invocation_id: The invocation_id of this ActionInvocation.
        """
        self.openapi_types = {
            'extension_identifier': str,
            'action_name': str,
            'uri': str,
            'role_arn': str,
            'error_message': str,
            'error_code': str,
            'invocation_id': str
        }

        self.attribute_map = {
            'extension_identifier': 'ExtensionIdentifier',
            'action_name': 'ActionName',
            'uri': 'Uri',
            'role_arn': 'RoleArn',
            'error_message': 'ErrorMessage',
            'error_code': 'ErrorCode',
            'invocation_id': 'InvocationId'
        }

        self._extension_identifier = extension_identifier
        self._action_name = action_name
        self._uri = uri
        self._role_arn = role_arn
        self._error_message = error_message
        self._error_code = error_code
        self._invocation_id = invocation_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionInvocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionInvocation of this ActionInvocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extension_identifier(self):
        """Gets the extension_identifier of this ActionInvocation.


        :return: The extension_identifier of this ActionInvocation.
        :rtype: str
        """
        return self._extension_identifier

    @extension_identifier.setter
    def extension_identifier(self, extension_identifier):
        """Sets the extension_identifier of this ActionInvocation.


        :param extension_identifier: The extension_identifier of this ActionInvocation.
        :type extension_identifier: str
        """

        self._extension_identifier = extension_identifier

    @property
    def action_name(self):
        """Gets the action_name of this ActionInvocation.


        :return: The action_name of this ActionInvocation.
        :rtype: str
        """
        return self._action_name

    @action_name.setter
    def action_name(self, action_name):
        """Sets the action_name of this ActionInvocation.


        :param action_name: The action_name of this ActionInvocation.
        :type action_name: str
        """

        self._action_name = action_name

    @property
    def uri(self):
        """Gets the uri of this ActionInvocation.


        :return: The uri of this ActionInvocation.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ActionInvocation.


        :param uri: The uri of this ActionInvocation.
        :type uri: str
        """

        self._uri = uri

    @property
    def role_arn(self):
        """Gets the role_arn of this ActionInvocation.


        :return: The role_arn of this ActionInvocation.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this ActionInvocation.


        :param role_arn: The role_arn of this ActionInvocation.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def error_message(self):
        """Gets the error_message of this ActionInvocation.


        :return: The error_message of this ActionInvocation.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this ActionInvocation.


        :param error_message: The error_message of this ActionInvocation.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def error_code(self):
        """Gets the error_code of this ActionInvocation.


        :return: The error_code of this ActionInvocation.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this ActionInvocation.


        :param error_code: The error_code of this ActionInvocation.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def invocation_id(self):
        """Gets the invocation_id of this ActionInvocation.


        :return: The invocation_id of this ActionInvocation.
        :rtype: str
        """
        return self._invocation_id

    @invocation_id.setter
    def invocation_id(self, invocation_id):
        """Sets the invocation_id of this ActionInvocation.


        :param invocation_id: The invocation_id of this ActionInvocation.
        :type invocation_id: str
        """

        self._invocation_id = invocation_id
