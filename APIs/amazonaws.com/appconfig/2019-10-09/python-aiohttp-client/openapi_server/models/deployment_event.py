# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployment_event_type import DeploymentEventType
from openapi_server.models.triggered_by import TriggeredBy
from openapi_server import util


class DeploymentEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_type: DeploymentEventType=None, triggered_by: TriggeredBy=None, description: str=None, action_invocations: List=None, occurred_at: datetime=None):
        """DeploymentEvent - a model defined in OpenAPI

        :param event_type: The event_type of this DeploymentEvent.
        :param triggered_by: The triggered_by of this DeploymentEvent.
        :param description: The description of this DeploymentEvent.
        :param action_invocations: The action_invocations of this DeploymentEvent.
        :param occurred_at: The occurred_at of this DeploymentEvent.
        """
        self.openapi_types = {
            'event_type': DeploymentEventType,
            'triggered_by': TriggeredBy,
            'description': str,
            'action_invocations': List,
            'occurred_at': datetime
        }

        self.attribute_map = {
            'event_type': 'EventType',
            'triggered_by': 'TriggeredBy',
            'description': 'Description',
            'action_invocations': 'ActionInvocations',
            'occurred_at': 'OccurredAt'
        }

        self._event_type = event_type
        self._triggered_by = triggered_by
        self._description = description
        self._action_invocations = action_invocations
        self._occurred_at = occurred_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentEvent of this DeploymentEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_type(self):
        """Gets the event_type of this DeploymentEvent.


        :return: The event_type of this DeploymentEvent.
        :rtype: DeploymentEventType
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this DeploymentEvent.


        :param event_type: The event_type of this DeploymentEvent.
        :type event_type: DeploymentEventType
        """

        self._event_type = event_type

    @property
    def triggered_by(self):
        """Gets the triggered_by of this DeploymentEvent.


        :return: The triggered_by of this DeploymentEvent.
        :rtype: TriggeredBy
        """
        return self._triggered_by

    @triggered_by.setter
    def triggered_by(self, triggered_by):
        """Sets the triggered_by of this DeploymentEvent.


        :param triggered_by: The triggered_by of this DeploymentEvent.
        :type triggered_by: TriggeredBy
        """

        self._triggered_by = triggered_by

    @property
    def description(self):
        """Gets the description of this DeploymentEvent.


        :return: The description of this DeploymentEvent.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DeploymentEvent.


        :param description: The description of this DeploymentEvent.
        :type description: str
        """

        self._description = description

    @property
    def action_invocations(self):
        """Gets the action_invocations of this DeploymentEvent.


        :return: The action_invocations of this DeploymentEvent.
        :rtype: List
        """
        return self._action_invocations

    @action_invocations.setter
    def action_invocations(self, action_invocations):
        """Sets the action_invocations of this DeploymentEvent.


        :param action_invocations: The action_invocations of this DeploymentEvent.
        :type action_invocations: List
        """

        self._action_invocations = action_invocations

    @property
    def occurred_at(self):
        """Gets the occurred_at of this DeploymentEvent.


        :return: The occurred_at of this DeploymentEvent.
        :rtype: datetime
        """
        return self._occurred_at

    @occurred_at.setter
    def occurred_at(self, occurred_at):
        """Sets the occurred_at of this DeploymentEvent.


        :param occurred_at: The occurred_at of this DeploymentEvent.
        :type occurred_at: datetime
        """

        self._occurred_at = occurred_at
