# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigurationProfileSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, id: str=None, name: str=None, location_uri: str=None, validator_types: List=None, type: str=None):
        """ConfigurationProfileSummary - a model defined in OpenAPI

        :param application_id: The application_id of this ConfigurationProfileSummary.
        :param id: The id of this ConfigurationProfileSummary.
        :param name: The name of this ConfigurationProfileSummary.
        :param location_uri: The location_uri of this ConfigurationProfileSummary.
        :param validator_types: The validator_types of this ConfigurationProfileSummary.
        :param type: The type of this ConfigurationProfileSummary.
        """
        self.openapi_types = {
            'application_id': str,
            'id': str,
            'name': str,
            'location_uri': str,
            'validator_types': List,
            'type': str
        }

        self.attribute_map = {
            'application_id': 'ApplicationId',
            'id': 'Id',
            'name': 'Name',
            'location_uri': 'LocationUri',
            'validator_types': 'ValidatorTypes',
            'type': 'Type'
        }

        self._application_id = application_id
        self._id = id
        self._name = name
        self._location_uri = location_uri
        self._validator_types = validator_types
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationProfileSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigurationProfileSummary of this ConfigurationProfileSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this ConfigurationProfileSummary.


        :return: The application_id of this ConfigurationProfileSummary.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this ConfigurationProfileSummary.


        :param application_id: The application_id of this ConfigurationProfileSummary.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def id(self):
        """Gets the id of this ConfigurationProfileSummary.


        :return: The id of this ConfigurationProfileSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ConfigurationProfileSummary.


        :param id: The id of this ConfigurationProfileSummary.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ConfigurationProfileSummary.


        :return: The name of this ConfigurationProfileSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ConfigurationProfileSummary.


        :param name: The name of this ConfigurationProfileSummary.
        :type name: str
        """

        self._name = name

    @property
    def location_uri(self):
        """Gets the location_uri of this ConfigurationProfileSummary.


        :return: The location_uri of this ConfigurationProfileSummary.
        :rtype: str
        """
        return self._location_uri

    @location_uri.setter
    def location_uri(self, location_uri):
        """Sets the location_uri of this ConfigurationProfileSummary.


        :param location_uri: The location_uri of this ConfigurationProfileSummary.
        :type location_uri: str
        """

        self._location_uri = location_uri

    @property
    def validator_types(self):
        """Gets the validator_types of this ConfigurationProfileSummary.


        :return: The validator_types of this ConfigurationProfileSummary.
        :rtype: List
        """
        return self._validator_types

    @validator_types.setter
    def validator_types(self, validator_types):
        """Sets the validator_types of this ConfigurationProfileSummary.


        :param validator_types: The validator_types of this ConfigurationProfileSummary.
        :type validator_types: List
        """

        self._validator_types = validator_types

    @property
    def type(self):
        """Gets the type of this ConfigurationProfileSummary.


        :return: The type of this ConfigurationProfileSummary.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ConfigurationProfileSummary.


        :param type: The type of this ConfigurationProfileSummary.
        :type type: str
        """

        self._type = type
