# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HostedConfigurationVersionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, configuration_profile_id: str=None, version_number: int=None, description: str=None, content_type: str=None, version_label: str=None):
        """HostedConfigurationVersionSummary - a model defined in OpenAPI

        :param application_id: The application_id of this HostedConfigurationVersionSummary.
        :param configuration_profile_id: The configuration_profile_id of this HostedConfigurationVersionSummary.
        :param version_number: The version_number of this HostedConfigurationVersionSummary.
        :param description: The description of this HostedConfigurationVersionSummary.
        :param content_type: The content_type of this HostedConfigurationVersionSummary.
        :param version_label: The version_label of this HostedConfigurationVersionSummary.
        """
        self.openapi_types = {
            'application_id': str,
            'configuration_profile_id': str,
            'version_number': int,
            'description': str,
            'content_type': str,
            'version_label': str
        }

        self.attribute_map = {
            'application_id': 'ApplicationId',
            'configuration_profile_id': 'ConfigurationProfileId',
            'version_number': 'VersionNumber',
            'description': 'Description',
            'content_type': 'ContentType',
            'version_label': 'VersionLabel'
        }

        self._application_id = application_id
        self._configuration_profile_id = configuration_profile_id
        self._version_number = version_number
        self._description = description
        self._content_type = content_type
        self._version_label = version_label

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HostedConfigurationVersionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HostedConfigurationVersionSummary of this HostedConfigurationVersionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this HostedConfigurationVersionSummary.


        :return: The application_id of this HostedConfigurationVersionSummary.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this HostedConfigurationVersionSummary.


        :param application_id: The application_id of this HostedConfigurationVersionSummary.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def configuration_profile_id(self):
        """Gets the configuration_profile_id of this HostedConfigurationVersionSummary.


        :return: The configuration_profile_id of this HostedConfigurationVersionSummary.
        :rtype: str
        """
        return self._configuration_profile_id

    @configuration_profile_id.setter
    def configuration_profile_id(self, configuration_profile_id):
        """Sets the configuration_profile_id of this HostedConfigurationVersionSummary.


        :param configuration_profile_id: The configuration_profile_id of this HostedConfigurationVersionSummary.
        :type configuration_profile_id: str
        """

        self._configuration_profile_id = configuration_profile_id

    @property
    def version_number(self):
        """Gets the version_number of this HostedConfigurationVersionSummary.


        :return: The version_number of this HostedConfigurationVersionSummary.
        :rtype: int
        """
        return self._version_number

    @version_number.setter
    def version_number(self, version_number):
        """Sets the version_number of this HostedConfigurationVersionSummary.


        :param version_number: The version_number of this HostedConfigurationVersionSummary.
        :type version_number: int
        """

        self._version_number = version_number

    @property
    def description(self):
        """Gets the description of this HostedConfigurationVersionSummary.


        :return: The description of this HostedConfigurationVersionSummary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this HostedConfigurationVersionSummary.


        :param description: The description of this HostedConfigurationVersionSummary.
        :type description: str
        """

        self._description = description

    @property
    def content_type(self):
        """Gets the content_type of this HostedConfigurationVersionSummary.


        :return: The content_type of this HostedConfigurationVersionSummary.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this HostedConfigurationVersionSummary.


        :param content_type: The content_type of this HostedConfigurationVersionSummary.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def version_label(self):
        """Gets the version_label of this HostedConfigurationVersionSummary.


        :return: The version_label of this HostedConfigurationVersionSummary.
        :rtype: str
        """
        return self._version_label

    @version_label.setter
    def version_label(self, version_label):
        """Sets the version_label of this HostedConfigurationVersionSummary.


        :param version_label: The version_label of this HostedConfigurationVersionSummary.
        :type version_label: str
        """

        self._version_label = version_label
