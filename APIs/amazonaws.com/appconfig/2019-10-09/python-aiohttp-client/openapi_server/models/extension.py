# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Extension(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, version_number: int=None, arn: str=None, description: str=None, actions: Dict=None, parameters: Dict=None):
        """Extension - a model defined in OpenAPI

        :param id: The id of this Extension.
        :param name: The name of this Extension.
        :param version_number: The version_number of this Extension.
        :param arn: The arn of this Extension.
        :param description: The description of this Extension.
        :param actions: The actions of this Extension.
        :param parameters: The parameters of this Extension.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'version_number': int,
            'arn': str,
            'description': str,
            'actions': Dict,
            'parameters': Dict
        }

        self.attribute_map = {
            'id': 'Id',
            'name': 'Name',
            'version_number': 'VersionNumber',
            'arn': 'Arn',
            'description': 'Description',
            'actions': 'Actions',
            'parameters': 'Parameters'
        }

        self._id = id
        self._name = name
        self._version_number = version_number
        self._arn = arn
        self._description = description
        self._actions = actions
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Extension':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Extension of this Extension.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Extension.


        :return: The id of this Extension.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Extension.


        :param id: The id of this Extension.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Extension.


        :return: The name of this Extension.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Extension.


        :param name: The name of this Extension.
        :type name: str
        """

        self._name = name

    @property
    def version_number(self):
        """Gets the version_number of this Extension.


        :return: The version_number of this Extension.
        :rtype: int
        """
        return self._version_number

    @version_number.setter
    def version_number(self, version_number):
        """Sets the version_number of this Extension.


        :param version_number: The version_number of this Extension.
        :type version_number: int
        """

        self._version_number = version_number

    @property
    def arn(self):
        """Gets the arn of this Extension.


        :return: The arn of this Extension.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Extension.


        :param arn: The arn of this Extension.
        :type arn: str
        """

        self._arn = arn

    @property
    def description(self):
        """Gets the description of this Extension.


        :return: The description of this Extension.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Extension.


        :param description: The description of this Extension.
        :type description: str
        """

        self._description = description

    @property
    def actions(self):
        """Gets the actions of this Extension.


        :return: The actions of this Extension.
        :rtype: Dict
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this Extension.


        :param actions: The actions of this Extension.
        :type actions: Dict
        """

        self._actions = actions

    @property
    def parameters(self):
        """Gets the parameters of this Extension.


        :return: The parameters of this Extension.
        :rtype: Dict
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this Extension.


        :param parameters: The parameters of this Extension.
        :type parameters: Dict
        """

        self._parameters = parameters
