# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigurationProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, id: str=None, name: str=None, description: str=None, location_uri: str=None, retrieval_role_arn: str=None, validators: List=None, type: str=None):
        """ConfigurationProfile - a model defined in OpenAPI

        :param application_id: The application_id of this ConfigurationProfile.
        :param id: The id of this ConfigurationProfile.
        :param name: The name of this ConfigurationProfile.
        :param description: The description of this ConfigurationProfile.
        :param location_uri: The location_uri of this ConfigurationProfile.
        :param retrieval_role_arn: The retrieval_role_arn of this ConfigurationProfile.
        :param validators: The validators of this ConfigurationProfile.
        :param type: The type of this ConfigurationProfile.
        """
        self.openapi_types = {
            'application_id': str,
            'id': str,
            'name': str,
            'description': str,
            'location_uri': str,
            'retrieval_role_arn': str,
            'validators': List,
            'type': str
        }

        self.attribute_map = {
            'application_id': 'ApplicationId',
            'id': 'Id',
            'name': 'Name',
            'description': 'Description',
            'location_uri': 'LocationUri',
            'retrieval_role_arn': 'RetrievalRoleArn',
            'validators': 'Validators',
            'type': 'Type'
        }

        self._application_id = application_id
        self._id = id
        self._name = name
        self._description = description
        self._location_uri = location_uri
        self._retrieval_role_arn = retrieval_role_arn
        self._validators = validators
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigurationProfile of this ConfigurationProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this ConfigurationProfile.


        :return: The application_id of this ConfigurationProfile.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this ConfigurationProfile.


        :param application_id: The application_id of this ConfigurationProfile.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def id(self):
        """Gets the id of this ConfigurationProfile.


        :return: The id of this ConfigurationProfile.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ConfigurationProfile.


        :param id: The id of this ConfigurationProfile.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ConfigurationProfile.


        :return: The name of this ConfigurationProfile.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ConfigurationProfile.


        :param name: The name of this ConfigurationProfile.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this ConfigurationProfile.


        :return: The description of this ConfigurationProfile.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ConfigurationProfile.


        :param description: The description of this ConfigurationProfile.
        :type description: str
        """

        self._description = description

    @property
    def location_uri(self):
        """Gets the location_uri of this ConfigurationProfile.


        :return: The location_uri of this ConfigurationProfile.
        :rtype: str
        """
        return self._location_uri

    @location_uri.setter
    def location_uri(self, location_uri):
        """Sets the location_uri of this ConfigurationProfile.


        :param location_uri: The location_uri of this ConfigurationProfile.
        :type location_uri: str
        """

        self._location_uri = location_uri

    @property
    def retrieval_role_arn(self):
        """Gets the retrieval_role_arn of this ConfigurationProfile.


        :return: The retrieval_role_arn of this ConfigurationProfile.
        :rtype: str
        """
        return self._retrieval_role_arn

    @retrieval_role_arn.setter
    def retrieval_role_arn(self, retrieval_role_arn):
        """Sets the retrieval_role_arn of this ConfigurationProfile.


        :param retrieval_role_arn: The retrieval_role_arn of this ConfigurationProfile.
        :type retrieval_role_arn: str
        """

        self._retrieval_role_arn = retrieval_role_arn

    @property
    def validators(self):
        """Gets the validators of this ConfigurationProfile.


        :return: The validators of this ConfigurationProfile.
        :rtype: List
        """
        return self._validators

    @validators.setter
    def validators(self, validators):
        """Sets the validators of this ConfigurationProfile.


        :param validators: The validators of this ConfigurationProfile.
        :type validators: List
        """

        self._validators = validators

    @property
    def type(self):
        """Gets the type of this ConfigurationProfile.


        :return: The type of this ConfigurationProfile.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ConfigurationProfile.


        :param type: The type of this ConfigurationProfile.
        :type type: str
        """

        self._type = type
