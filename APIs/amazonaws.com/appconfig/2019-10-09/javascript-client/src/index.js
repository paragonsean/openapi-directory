/**
 * Amazon AppConfig
 * <p>Use AppConfig, a capability of Amazon Web Services Systems Manager, to create, manage, and quickly deploy application configurations. AppConfig supports controlled deployments to applications of any size and includes built-in validation checks and monitoring. You can use AppConfig with applications hosted on Amazon EC2 instances, Lambda, containers, mobile applications, or IoT devices.</p> <p>To prevent errors when deploying application configurations, especially for production systems where a simple typo could cause an unexpected outage, AppConfig includes validators. A validator provides a syntactic or semantic check to ensure that the configuration you want to deploy works as intended. To validate your application configuration data, you provide a schema or an Amazon Web Services Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.</p> <p>During a configuration deployment, AppConfig monitors the application to ensure that the deployment is successful. If the system encounters an error, AppConfig rolls back the change to minimize impact for your application users. You can configure a deployment strategy for each application or environment that includes deployment criteria, including velocity, bake time, and alarms to monitor. Similar to error monitoring, if a deployment triggers an alarm, AppConfig automatically rolls back to the previous version. </p> <p>AppConfig supports multiple use cases. Here are some examples:</p> <ul> <li> <p> <b>Feature flags</b>: Use AppConfig to turn on new features that require a timely deployment, such as a product launch or announcement. </p> </li> <li> <p> <b>Application tuning</b>: Use AppConfig to carefully introduce changes to your application that can only be tested with production traffic.</p> </li> <li> <p> <b>Allow list</b>: Use AppConfig to allow premium subscribers to access paid content. </p> </li> <li> <p> <b>Operational issues</b>: Use AppConfig to reduce stress on your application when a dependency or other external factor impacts the system.</p> </li> </ul> <p>This reference is intended to be used with the <a href=\"http://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html\">AppConfig User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2019-10-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Action from './model/Action';
import ActionInvocation from './model/ActionInvocation';
import ActionPoint from './model/ActionPoint';
import Application from './model/Application';
import Applications from './model/Applications';
import AppliedExtension from './model/AppliedExtension';
import Configuration from './model/Configuration';
import ConfigurationProfile from './model/ConfigurationProfile';
import ConfigurationProfileSummary from './model/ConfigurationProfileSummary';
import ConfigurationProfiles from './model/ConfigurationProfiles';
import CreateApplicationRequest from './model/CreateApplicationRequest';
import CreateConfigurationProfileRequest from './model/CreateConfigurationProfileRequest';
import CreateDeploymentStrategyRequest from './model/CreateDeploymentStrategyRequest';
import CreateEnvironmentRequest from './model/CreateEnvironmentRequest';
import CreateExtensionAssociationRequest from './model/CreateExtensionAssociationRequest';
import CreateExtensionRequest from './model/CreateExtensionRequest';
import CreateHostedConfigurationVersionRequest from './model/CreateHostedConfigurationVersionRequest';
import Deployment from './model/Deployment';
import DeploymentEvent from './model/DeploymentEvent';
import DeploymentEventType from './model/DeploymentEventType';
import DeploymentState from './model/DeploymentState';
import DeploymentStrategies from './model/DeploymentStrategies';
import DeploymentStrategy from './model/DeploymentStrategy';
import DeploymentSummary from './model/DeploymentSummary';
import Deployments from './model/Deployments';
import Environment from './model/Environment';
import EnvironmentState from './model/EnvironmentState';
import Environments from './model/Environments';
import Extension from './model/Extension';
import ExtensionAssociation from './model/ExtensionAssociation';
import ExtensionAssociationSummary from './model/ExtensionAssociationSummary';
import ExtensionAssociations from './model/ExtensionAssociations';
import ExtensionSummary from './model/ExtensionSummary';
import Extensions from './model/Extensions';
import GrowthType from './model/GrowthType';
import HostedConfigurationVersion from './model/HostedConfigurationVersion';
import HostedConfigurationVersionSummary from './model/HostedConfigurationVersionSummary';
import HostedConfigurationVersions from './model/HostedConfigurationVersions';
import Monitor from './model/Monitor';
import Parameter from './model/Parameter';
import ReplicateTo from './model/ReplicateTo';
import ResourceTags from './model/ResourceTags';
import StartDeploymentRequest from './model/StartDeploymentRequest';
import TagResourceRequest from './model/TagResourceRequest';
import TriggeredBy from './model/TriggeredBy';
import UpdateApplicationRequest from './model/UpdateApplicationRequest';
import UpdateConfigurationProfileRequest from './model/UpdateConfigurationProfileRequest';
import UpdateDeploymentStrategyRequest from './model/UpdateDeploymentStrategyRequest';
import UpdateEnvironmentRequest from './model/UpdateEnvironmentRequest';
import UpdateExtensionAssociationRequest from './model/UpdateExtensionAssociationRequest';
import UpdateExtensionRequest from './model/UpdateExtensionRequest';
import Validator from './model/Validator';
import ValidatorType from './model/ValidatorType';
import DefaultApi from './api/DefaultApi';


/**
* &lt;p&gt;Use AppConfig, a capability of Amazon Web Services Systems Manager, to create, manage, and quickly deploy application configurations. AppConfig supports controlled deployments to applications of any size and includes built-in validation checks and monitoring. You can use AppConfig with applications hosted on Amazon EC2 instances, Lambda, containers, mobile applications, or IoT devices.&lt;/p&gt; &lt;p&gt;To prevent errors when deploying application configurations, especially for production systems where a simple typo could cause an unexpected outage, AppConfig includes validators. A validator provides a syntactic or semantic check to ensure that the configuration you want to deploy works as intended. To validate your application configuration data, you provide a schema or an Amazon Web Services Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.&lt;/p&gt; &lt;p&gt;During a configuration deployment, AppConfig monitors the application to ensure that the deployment is successful. If the system encounters an error, AppConfig rolls back the change to minimize impact for your application users. You can configure a deployment strategy for each application or environment that includes deployment criteria, including velocity, bake time, and alarms to monitor. Similar to error monitoring, if a deployment triggers an alarm, AppConfig automatically rolls back to the previous version. &lt;/p&gt; &lt;p&gt;AppConfig supports multiple use cases. Here are some examples:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Feature flags&lt;/b&gt;: Use AppConfig to turn on new features that require a timely deployment, such as a product launch or announcement. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Application tuning&lt;/b&gt;: Use AppConfig to carefully introduce changes to your application that can only be tested with production traffic.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Allow list&lt;/b&gt;: Use AppConfig to allow premium subscribers to access paid content. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Operational issues&lt;/b&gt;: Use AppConfig to reduce stress on your application when a dependency or other external factor impacts the system.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This reference is intended to be used with the &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html\&quot;&gt;AppConfig User Guide&lt;/a&gt;.&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AmazonAppConfig = require('index'); // See note below*.
* var xxxSvc = new AmazonAppConfig.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AmazonAppConfig.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AmazonAppConfig.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AmazonAppConfig.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-10-09
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Action model constructor.
     * @property {module:model/Action}
     */
    Action,

    /**
     * The ActionInvocation model constructor.
     * @property {module:model/ActionInvocation}
     */
    ActionInvocation,

    /**
     * The ActionPoint model constructor.
     * @property {module:model/ActionPoint}
     */
    ActionPoint,

    /**
     * The Application model constructor.
     * @property {module:model/Application}
     */
    Application,

    /**
     * The Applications model constructor.
     * @property {module:model/Applications}
     */
    Applications,

    /**
     * The AppliedExtension model constructor.
     * @property {module:model/AppliedExtension}
     */
    AppliedExtension,

    /**
     * The Configuration model constructor.
     * @property {module:model/Configuration}
     */
    Configuration,

    /**
     * The ConfigurationProfile model constructor.
     * @property {module:model/ConfigurationProfile}
     */
    ConfigurationProfile,

    /**
     * The ConfigurationProfileSummary model constructor.
     * @property {module:model/ConfigurationProfileSummary}
     */
    ConfigurationProfileSummary,

    /**
     * The ConfigurationProfiles model constructor.
     * @property {module:model/ConfigurationProfiles}
     */
    ConfigurationProfiles,

    /**
     * The CreateApplicationRequest model constructor.
     * @property {module:model/CreateApplicationRequest}
     */
    CreateApplicationRequest,

    /**
     * The CreateConfigurationProfileRequest model constructor.
     * @property {module:model/CreateConfigurationProfileRequest}
     */
    CreateConfigurationProfileRequest,

    /**
     * The CreateDeploymentStrategyRequest model constructor.
     * @property {module:model/CreateDeploymentStrategyRequest}
     */
    CreateDeploymentStrategyRequest,

    /**
     * The CreateEnvironmentRequest model constructor.
     * @property {module:model/CreateEnvironmentRequest}
     */
    CreateEnvironmentRequest,

    /**
     * The CreateExtensionAssociationRequest model constructor.
     * @property {module:model/CreateExtensionAssociationRequest}
     */
    CreateExtensionAssociationRequest,

    /**
     * The CreateExtensionRequest model constructor.
     * @property {module:model/CreateExtensionRequest}
     */
    CreateExtensionRequest,

    /**
     * The CreateHostedConfigurationVersionRequest model constructor.
     * @property {module:model/CreateHostedConfigurationVersionRequest}
     */
    CreateHostedConfigurationVersionRequest,

    /**
     * The Deployment model constructor.
     * @property {module:model/Deployment}
     */
    Deployment,

    /**
     * The DeploymentEvent model constructor.
     * @property {module:model/DeploymentEvent}
     */
    DeploymentEvent,

    /**
     * The DeploymentEventType model constructor.
     * @property {module:model/DeploymentEventType}
     */
    DeploymentEventType,

    /**
     * The DeploymentState model constructor.
     * @property {module:model/DeploymentState}
     */
    DeploymentState,

    /**
     * The DeploymentStrategies model constructor.
     * @property {module:model/DeploymentStrategies}
     */
    DeploymentStrategies,

    /**
     * The DeploymentStrategy model constructor.
     * @property {module:model/DeploymentStrategy}
     */
    DeploymentStrategy,

    /**
     * The DeploymentSummary model constructor.
     * @property {module:model/DeploymentSummary}
     */
    DeploymentSummary,

    /**
     * The Deployments model constructor.
     * @property {module:model/Deployments}
     */
    Deployments,

    /**
     * The Environment model constructor.
     * @property {module:model/Environment}
     */
    Environment,

    /**
     * The EnvironmentState model constructor.
     * @property {module:model/EnvironmentState}
     */
    EnvironmentState,

    /**
     * The Environments model constructor.
     * @property {module:model/Environments}
     */
    Environments,

    /**
     * The Extension model constructor.
     * @property {module:model/Extension}
     */
    Extension,

    /**
     * The ExtensionAssociation model constructor.
     * @property {module:model/ExtensionAssociation}
     */
    ExtensionAssociation,

    /**
     * The ExtensionAssociationSummary model constructor.
     * @property {module:model/ExtensionAssociationSummary}
     */
    ExtensionAssociationSummary,

    /**
     * The ExtensionAssociations model constructor.
     * @property {module:model/ExtensionAssociations}
     */
    ExtensionAssociations,

    /**
     * The ExtensionSummary model constructor.
     * @property {module:model/ExtensionSummary}
     */
    ExtensionSummary,

    /**
     * The Extensions model constructor.
     * @property {module:model/Extensions}
     */
    Extensions,

    /**
     * The GrowthType model constructor.
     * @property {module:model/GrowthType}
     */
    GrowthType,

    /**
     * The HostedConfigurationVersion model constructor.
     * @property {module:model/HostedConfigurationVersion}
     */
    HostedConfigurationVersion,

    /**
     * The HostedConfigurationVersionSummary model constructor.
     * @property {module:model/HostedConfigurationVersionSummary}
     */
    HostedConfigurationVersionSummary,

    /**
     * The HostedConfigurationVersions model constructor.
     * @property {module:model/HostedConfigurationVersions}
     */
    HostedConfigurationVersions,

    /**
     * The Monitor model constructor.
     * @property {module:model/Monitor}
     */
    Monitor,

    /**
     * The Parameter model constructor.
     * @property {module:model/Parameter}
     */
    Parameter,

    /**
     * The ReplicateTo model constructor.
     * @property {module:model/ReplicateTo}
     */
    ReplicateTo,

    /**
     * The ResourceTags model constructor.
     * @property {module:model/ResourceTags}
     */
    ResourceTags,

    /**
     * The StartDeploymentRequest model constructor.
     * @property {module:model/StartDeploymentRequest}
     */
    StartDeploymentRequest,

    /**
     * The TagResourceRequest model constructor.
     * @property {module:model/TagResourceRequest}
     */
    TagResourceRequest,

    /**
     * The TriggeredBy model constructor.
     * @property {module:model/TriggeredBy}
     */
    TriggeredBy,

    /**
     * The UpdateApplicationRequest model constructor.
     * @property {module:model/UpdateApplicationRequest}
     */
    UpdateApplicationRequest,

    /**
     * The UpdateConfigurationProfileRequest model constructor.
     * @property {module:model/UpdateConfigurationProfileRequest}
     */
    UpdateConfigurationProfileRequest,

    /**
     * The UpdateDeploymentStrategyRequest model constructor.
     * @property {module:model/UpdateDeploymentStrategyRequest}
     */
    UpdateDeploymentStrategyRequest,

    /**
     * The UpdateEnvironmentRequest model constructor.
     * @property {module:model/UpdateEnvironmentRequest}
     */
    UpdateEnvironmentRequest,

    /**
     * The UpdateExtensionAssociationRequest model constructor.
     * @property {module:model/UpdateExtensionAssociationRequest}
     */
    UpdateExtensionAssociationRequest,

    /**
     * The UpdateExtensionRequest model constructor.
     * @property {module:model/UpdateExtensionRequest}
     */
    UpdateExtensionRequest,

    /**
     * The Validator model constructor.
     * @property {module:model/Validator}
     */
    Validator,

    /**
     * The ValidatorType model constructor.
     * @property {module:model/ValidatorType}
     */
    ValidatorType,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
