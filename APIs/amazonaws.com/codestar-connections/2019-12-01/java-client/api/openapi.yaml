openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>AWS CodeStar Connections</fullname> <p>This Amazon Web Services\
    \ CodeStar Connections API Reference provides descriptions and usage examples\
    \ of the operations and data types for the Amazon Web Services CodeStar Connections\
    \ API. You can use the connections API to work with connections and installations.</p>\
    \ <p> <i>Connections</i> are configurations that you use to connect Amazon Web\
    \ Services resources to external code repositories. Each connection is a resource\
    \ that can be given to services such as CodePipeline to connect to a third-party\
    \ repository such as Bitbucket. For example, you can add the connection in CodePipeline\
    \ so that it triggers your pipeline when a code change is made to your third-party\
    \ code repository. Each connection is named and associated with a unique ARN that\
    \ is used to reference the connection.</p> <p>When you create a connection, the\
    \ console initiates a third-party connection handshake. <i>Installations</i> are\
    \ the apps that are used to conduct this handshake. For example, the installation\
    \ for the Bitbucket provider type is the Bitbucket app. When you create a connection,\
    \ you can choose an existing installation or create one.</p> <p>When you want\
    \ to create a connection to an installed provider type such as GitHub Enterprise\
    \ Server, you create a <i>host</i> for your connections.</p> <p>You can work with\
    \ connections by calling:</p> <ul> <li> <p> <a>CreateConnection</a>, which creates\
    \ a uniquely named connection that can be referenced by services such as CodePipeline.</p>\
    \ </li> <li> <p> <a>DeleteConnection</a>, which deletes the specified connection.</p>\
    \ </li> <li> <p> <a>GetConnection</a>, which returns information about the connection,\
    \ including the connection status.</p> </li> <li> <p> <a>ListConnections</a>,\
    \ which lists the connections associated with your account.</p> </li> </ul> <p>You\
    \ can work with hosts by calling:</p> <ul> <li> <p> <a>CreateHost</a>, which creates\
    \ a host that represents the infrastructure where your provider is installed.</p>\
    \ </li> <li> <p> <a>DeleteHost</a>, which deletes the specified host.</p> </li>\
    \ <li> <p> <a>GetHost</a>, which returns information about the host, including\
    \ the setup status.</p> </li> <li> <p> <a>ListHosts</a>, which lists the hosts\
    \ associated with your account.</p> </li> </ul> <p>You can work with tags in Amazon\
    \ Web Services CodeStar Connections by calling the following:</p> <ul> <li> <p>\
    \ <a>ListTagsForResource</a>, which gets information about Amazon Web Services\
    \ tags for a specified Amazon Resource Name (ARN) in Amazon Web Services CodeStar\
    \ Connections.</p> </li> <li> <p> <a>TagResource</a>, which adds or updates tags\
    \ for a resource in Amazon Web Services CodeStar Connections.</p> </li> <li> <p>\
    \ <a>UntagResource</a>, which removes tags for a resource in Amazon Web Services\
    \ CodeStar Connections.</p> </li> </ul> <p>For information about how to use Amazon\
    \ Web Services CodeStar Connections, see the <a href=\"https://docs.aws.amazon.com/dtconsole/latest/userguide/welcome-connections.html\"\
    >Developer Tools User Guide</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS CodeStar connections
  version: 2019-12-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: codestar-connections
  x-aws-signingName: codestar-connections
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codestar-connections-2019-12-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codestar-connections/
servers:
- description: The AWS CodeStar connections multi-region endpoint
  url: "http://codestar-connections.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS CodeStar connections multi-region endpoint
  url: "https://codestar-connections.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS CodeStar connections endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://codestar-connections.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS CodeStar connections endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://codestar-connections.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.CreateConnection:
    post:
      description: Creates a connection that can then be given to other Amazon Web
        Services services like CodePipeline so that it can access third-party code
        repositories. The connection is in pending status until the third-party connection
        handshake is completed from the console.
      operationId: CreateConnection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.CreateConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConnectionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
          description: ResourceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.CreateHost:
    post:
      description: "<p>Creates a resource that represents the infrastructure where\
        \ a third-party provider is installed. The host is used when you create connections\
        \ to an installed third-party provider type, such as GitHub Enterprise Server.\
        \ You create one host for all connections to that provider.</p> <note> <p>A\
        \ host created through the CLI or the SDK is in `PENDING` status by default.\
        \ You can make its status `AVAILABLE` by setting up the host in the console.</p>\
        \ </note>"
      operationId: CreateHost
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.CreateHost
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHostInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHostOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.DeleteConnection:
    post:
      description: The connection to be deleted.
      operationId: DeleteConnection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.DeleteConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConnectionInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConnectionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.DeleteHost:
    post:
      description: "<p>The host to be deleted. Before you delete a host, all connections\
        \ associated to the host must be deleted.</p> <note> <p>A host cannot be deleted\
        \ if it is in the VPC_CONFIG_INITIALIZING or VPC_CONFIG_DELETING state.</p>\
        \ </note>"
      operationId: DeleteHost
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.DeleteHost
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHostInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHostOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
          description: ResourceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.GetConnection:
    post:
      description: "Returns the connection ARN and details such as status, owner,\
        \ and provider type."
      operationId: GetConnection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.GetConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConnectionInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
          description: ResourceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.GetHost:
    post:
      description: "Returns the host ARN and details such as status, provider type,\
        \ endpoint, and, if applicable, the VPC configuration."
      operationId: GetHost
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.GetHost
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetHostInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHostOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
          description: ResourceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListConnections:
    post:
      description: Lists the connections associated with your account.
      operationId: ListConnections
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListConnections
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListConnectionsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListHosts:
    post:
      description: Lists the hosts associated with your account.
      operationId: ListHosts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListHosts
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListHostsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHostsOutput'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListTagsForResource:
    post:
      description: Gets the set of key-value pairs (metadata) that are used to manage
        the resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.TagResource:
    post:
      description: Adds to or modifies the tags of the given resource. Tags are metadata
        that can be used to manage a resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.UntagResource:
    post:
      description: Removes tags from an Amazon Web Services resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.codestar.connections.CodeStar_connections_20191201.UpdateHost:
    post:
      description: Updates a specified host with the provided configurations.
      operationId: UpdateHost
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.codestar.connections.CodeStar_connections_20191201.UpdateHost
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHostInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHostOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
          description: ResourceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateConnectionOutput:
      example:
        ConnectionArn: ""
        Tags: ""
      properties:
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: <p>The Amazon Resource Name (ARN) of the connection to be
              created. The ARN is used as the connection reference when the connection
              is shared between Amazon Web Services services.</p> <note> <p>The ARN
              is never reused if the connection is deleted.</p> </note>
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Specifies the tags applied to the resource.
      required:
      - ConnectionArn
      type: object
    CreateConnectionInput:
      example:
        ConnectionName: ""
        HostArn: ""
        ProviderType: ""
        Tags: ""
      properties:
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/ProviderType'
          - description: The name of the external provider where your third-party
              code repository is configured.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection to be created.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The key-value pair to use when tagging the resource.
        HostArn:
          allOf:
          - $ref: '#/components/schemas/HostArn'
          - description: The Amazon Resource Name (ARN) of the host associated with
              the connection to be created.
      required:
      - ConnectionName
      title: CreateConnectionInput
      type: object
    LimitExceededException: {}
    ResourceNotFoundException: {}
    ResourceUnavailableException: {}
    CreateHostOutput:
      example:
        HostArn: ""
        Tags:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
      properties:
        HostArn:
          allOf:
          - $ref: '#/components/schemas/HostArn'
          - description: The Amazon Resource Name (ARN) of the host to be created.
        Tags:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      type: object
    CreateHostInput:
      example:
        ProviderEndpoint: ""
        ProviderType: ""
        VpcConfiguration:
          VpcId: ""
          SubnetIds: ""
          SecurityGroupIds: ""
          TlsCertificate: ""
        Tags:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/HostName'
          - description: The name of the host to be created.
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/ProviderType'
          - description: The name of the installed provider to be associated with
              your connection. The host resource represents the infrastructure where
              your provider type is installed. The valid provider type is GitHub Enterprise
              Server.
        ProviderEndpoint:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The endpoint of the infrastructure to be represented by the
              host after it is created.
        VpcConfiguration:
          $ref: '#/components/schemas/CreateHostInput_VpcConfiguration'
        Tags:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      required:
      - Name
      - ProviderEndpoint
      - ProviderType
      title: CreateHostInput
      type: object
    DeleteConnectionOutput:
      properties: {}
      type: object
    DeleteConnectionInput:
      example:
        ConnectionArn: ""
      properties:
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: <p>The Amazon Resource Name (ARN) of the connection to be
              deleted.</p> <note> <p>The ARN is never reused if the connection is
              deleted.</p> </note>
      required:
      - ConnectionArn
      title: DeleteConnectionInput
      type: object
    DeleteHostOutput:
      properties: {}
      type: object
    DeleteHostInput:
      example:
        HostArn: ""
      properties:
        HostArn:
          allOf:
          - $ref: '#/components/schemas/HostArn'
          - description: The Amazon Resource Name (ARN) of the host to be deleted.
      required:
      - HostArn
      title: DeleteHostInput
      type: object
    GetConnectionOutput:
      example:
        Connection:
          ConnectionName: ""
          HostArn: ""
          ConnectionArn: ""
          ProviderType: ""
          OwnerAccountId: ""
          ConnectionStatus: ""
      properties:
        Connection:
          $ref: '#/components/schemas/GetConnectionOutput_Connection'
      type: object
    GetConnectionInput:
      example:
        ConnectionArn: ""
      properties:
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The Amazon Resource Name (ARN) of a connection.
      required:
      - ConnectionArn
      title: GetConnectionInput
      type: object
    GetHostOutput:
      example:
        Status: ""
        ProviderEndpoint: ""
        ProviderType: ""
        VpcConfiguration:
          VpcId: ""
          SubnetIds: ""
          SecurityGroupIds: ""
          TlsCertificate: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/HostName'
          - description: The name of the requested host.
        Status:
          allOf:
          - $ref: '#/components/schemas/HostStatus'
          - description: The status of the requested host.
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/ProviderType'
          - description: "The provider type of the requested host, such as GitHub\
              \ Enterprise Server."
        ProviderEndpoint:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The endpoint of the infrastructure represented by the requested
              host.
        VpcConfiguration:
          $ref: '#/components/schemas/GetHostOutput_VpcConfiguration'
      type: object
    GetHostInput:
      example:
        HostArn: ""
      properties:
        HostArn:
          allOf:
          - $ref: '#/components/schemas/HostArn'
          - description: The Amazon Resource Name (ARN) of the requested host.
      required:
      - HostArn
      title: GetHostInput
      type: object
    ListConnectionsOutput:
      example:
        Connections: ""
        NextToken: ""
      properties:
        Connections:
          allOf:
          - $ref: '#/components/schemas/ConnectionList'
          - description: "A list of connections and the details for each connection,\
              \ such as status, owner, and provider type."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that can be used in the next <code>ListConnections</code>\
              \ call. To view all items in the list, continue to call this operation\
              \ with each subsequent token until no more <code>nextToken</code> values\
              \ are returned."
      type: object
    ListConnectionsInput:
      example:
        NextToken: ""
        MaxResults: ""
        HostArnFilter: ""
        ProviderTypeFilter: ""
      properties:
        ProviderTypeFilter:
          allOf:
          - $ref: '#/components/schemas/ProviderType'
          - description: "Filters the list of connections to those associated with\
              \ a specified provider, such as Bitbucket."
        HostArnFilter:
          allOf:
          - $ref: '#/components/schemas/HostArn'
          - description: Filters the list of connections to those associated with
              a specified host.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return in a single call.\
              \ To retrieve the remaining results, make another call with the returned\
              \ <code>nextToken</code> value."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that was returned from the previous <code>ListConnections</code>\
              \ call, which can be used to return the next set of connections in the\
              \ list."
      title: ListConnectionsInput
      type: object
    ListHostsOutput:
      example:
        Hosts: ""
        NextToken: ""
      properties:
        Hosts:
          allOf:
          - $ref: '#/components/schemas/HostList'
          - description: "A list of hosts and the details for each host, such as status,\
              \ endpoint, and provider type."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that can be used in the next <code>ListHosts</code>\
              \ call. To view all items in the list, continue to call this operation\
              \ with each subsequent token until no more <code>nextToken</code> values\
              \ are returned."
      type: object
    ListHostsInput:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return in a single call.\
              \ To retrieve the remaining results, make another call with the returned\
              \ <code>nextToken</code> value."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that was returned from the previous <code>ListHosts</code>\
              \ call, which can be used to return the next set of hosts in the list."
      title: ListHostsInput
      type: object
    ListTagsForResourceOutput:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tag key and value pairs associated with the specified
              resource.
      type: object
    ListTagsForResourceInput:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The Amazon Resource Name (ARN) of the resource for which\
              \ you want to get information about tags, if any."
      required:
      - ResourceArn
      title: ListTagsForResourceInput
      type: object
    TagResourceOutput:
      properties: {}
      type: object
    TagResourceInput:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the resource to which you
              want to add or update tags.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags you want to modify or add to the resource.
      required:
      - ResourceArn
      - Tags
      title: TagResourceInput
      type: object
    UntagResourceOutput:
      properties: {}
      type: object
    UntagResourceInput:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the resource to remove
              tags from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The list of keys for the tags to be removed from the resource.
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceInput
      type: object
    UpdateHostOutput:
      properties: {}
      type: object
    UpdateHostInput:
      example:
        HostArn: ""
        ProviderEndpoint: ""
        VpcConfiguration:
          VpcId: ""
          SubnetIds: ""
          SecurityGroupIds: ""
          TlsCertificate: ""
      properties:
        HostArn:
          allOf:
          - $ref: '#/components/schemas/HostArn'
          - description: The Amazon Resource Name (ARN) of the host to be updated.
        ProviderEndpoint:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The URL or endpoint of the host to be updated.
        VpcConfiguration:
          $ref: '#/components/schemas/UpdateHostInput_VpcConfiguration'
      required:
      - HostArn
      title: UpdateHostInput
      type: object
    ConflictException: {}
    UnsupportedOperationException: {}
    AccountId:
      maxLength: 12
      minLength: 12
      pattern: "[0-9]{12}"
      type: string
    AmazonResourceName:
      maxLength: 1011
      minLength: 1
      pattern: "arn:aws(-[\\w]+)*:.+:.+:[0-9]{12}:.+"
      type: string
    ConnectionName:
      maxLength: 32
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    ConnectionArn:
      maxLength: 256
      minLength: 0
      pattern: "arn:aws(-[\\w]+)*:.+:.+:[0-9]{12}:.+"
      type: string
    ProviderType:
      enum:
      - Bitbucket
      - GitHub
      - GitHubEnterpriseServer
      - GitLab
      type: string
    ConnectionStatus:
      enum:
      - PENDING
      - AVAILABLE
      - ERROR
      type: string
    HostArn:
      maxLength: 256
      minLength: 0
      pattern: "arn:aws(-[\\w]+)*:codestar-connections:.+:[0-9]{12}:host\\/.+"
      type: string
    Connection:
      description: "<p>A resource that is used to connect third-party source providers\
        \ with services like CodePipeline.</p> <p>Note: A connection created through\
        \ CloudFormation, the CLI, or the SDK is in `PENDING` status by default. You\
        \ can make its status `AVAILABLE` by updating the connection in the console.</p>"
      properties:
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection. Connection names must be unique
              in an Amazon Web Services account.
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: <p>The Amazon Resource Name (ARN) of the connection. The
              ARN is used as the connection reference when the connection is shared
              between Amazon Web Services.</p> <note> <p>The ARN is never reused if
              the connection is deleted.</p> </note>
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/ProviderType'
          - description: The name of the external provider where your third-party
              code repository is configured.
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: "The identifier of the external provider where your third-party\
              \ code repository is configured. For Bitbucket, this is the account\
              \ ID of the owner of the Bitbucket repository."
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatus'
          - description: 'The current status of the connection. '
        HostArn:
          allOf:
          - $ref: '#/components/schemas/HostArn'
          - description: The Amazon Resource Name (ARN) of the host associated with
              the connection.
      type: object
    ConnectionList:
      items:
        $ref: '#/components/schemas/Connection'
      type: array
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    HostName:
      maxLength: 64
      minLength: 1
      pattern: .*
      type: string
    Url:
      maxLength: 512
      minLength: 1
      pattern: .*
      type: string
    VpcConfiguration:
      description: The VPC configuration provisioned for the host.
      properties:
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the Amazon VPC connected to the infrastructure
              where your provider type is installed.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The ID of the subnet or subnets associated with the Amazon
              VPC connected to the infrastructure where your provider type is installed.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: The ID of the security group or security groups associated
              with the Amazon VPC connected to the infrastructure where your provider
              type is installed.
        TlsCertificate:
          allOf:
          - $ref: '#/components/schemas/TlsCertificate'
          - description: The value of the Transport Layer Security (TLS) certificate
              associated with the infrastructure where your provider type is installed.
      required:
      - SecurityGroupIds
      - SubnetIds
      - VpcId
      type: object
    HostStatus:
      maxLength: 64
      minLength: 1
      pattern: .*
      type: string
    HostStatusMessage:
      type: string
    Host:
      description: "<p>A resource that represents the infrastructure where a third-party\
        \ provider is installed. The host is used when you create connections to an\
        \ installed third-party provider type, such as GitHub Enterprise Server. You\
        \ create one host for all connections to that provider.</p> <note> <p>A host\
        \ created through the CLI or the SDK is in `PENDING` status by default. You\
        \ can make its status `AVAILABLE` by setting up the host in the console.</p>\
        \ </note>"
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/HostName'
          - description: The name of the host.
        HostArn:
          allOf:
          - $ref: '#/components/schemas/HostArn'
          - description: The Amazon Resource Name (ARN) of the host.
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/ProviderType'
          - description: The name of the installed provider to be associated with
              your connection. The host resource represents the infrastructure where
              your provider type is installed. The valid provider type is GitHub Enterprise
              Server.
        ProviderEndpoint:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The endpoint of the infrastructure where your provider type
              is installed.
        VpcConfiguration:
          $ref: '#/components/schemas/Host_VpcConfiguration'
        Status:
          allOf:
          - $ref: '#/components/schemas/HostStatus'
          - description: "The status of the host, such as PENDING, AVAILABLE, VPC_CONFIG_DELETING,\
              \ VPC_CONFIG_INITIALIZING, and VPC_CONFIG_FAILED_INITIALIZATION."
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/HostStatusMessage'
          - description: The status description for the host.
      type: object
    HostList:
      items:
        $ref: '#/components/schemas/Host'
      type: array
    MaxResults:
      maximum: 100
      minimum: 0
      type: integer
    NextToken:
      maxLength: 1024
      minLength: 1
      pattern: .*
      type: string
    SecurityGroupId:
      maxLength: 20
      minLength: 11
      pattern: "sg-\\w{8}(\\w{9})?"
      type: string
    SecurityGroupIds:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 10
      minItems: 1
      type: array
    SubnetId:
      maxLength: 24
      minLength: 15
      pattern: "subnet-\\w{8}(\\w{9})?"
      type: string
    SubnetIds:
      items:
        $ref: '#/components/schemas/SubnetId'
      maxItems: 10
      minItems: 1
      type: array
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: .*
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: .*
      type: string
    Tag:
      description: <p>A tag is a key-value pair that is used to manage the resource.</p>
        <p>This tag is available for use by Amazon Web Services services that support
        tags.</p>
      example:
        Value: ""
        Key: ""
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The tag's key.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The tag's value.
      required:
      - Key
      - Value
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TlsCertificate:
      maxLength: 16384
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    VpcId:
      maxLength: 21
      minLength: 12
      pattern: "vpc-\\w{8}(\\w{9})?"
      type: string
    CreateHostInput_VpcConfiguration:
      allOf:
      - $ref: '#/components/schemas/VpcConfiguration'
      - description: The VPC configuration to be provisioned for the host. A VPC must
          be configured and the infrastructure to be represented by the host must
          already be connected to the VPC.
      example:
        VpcId: ""
        SubnetIds: ""
        SecurityGroupIds: ""
        TlsCertificate: ""
    GetConnectionOutput_Connection:
      allOf:
      - $ref: '#/components/schemas/Connection'
      - description: "The connection details, such as status, owner, and provider\
          \ type."
      example:
        ConnectionName: ""
        HostArn: ""
        ConnectionArn: ""
        ProviderType: ""
        OwnerAccountId: ""
        ConnectionStatus: ""
    GetHostOutput_VpcConfiguration:
      allOf:
      - $ref: '#/components/schemas/VpcConfiguration'
      - description: The VPC configuration of the requested host.
      example:
        VpcId: ""
        SubnetIds: ""
        SecurityGroupIds: ""
        TlsCertificate: ""
    UpdateHostInput_VpcConfiguration:
      allOf:
      - $ref: '#/components/schemas/VpcConfiguration'
      - description: The VPC configuration of the host to be updated. A VPC must be
          configured and the infrastructure to be represented by the host must already
          be connected to the VPC.
      example:
        VpcId: ""
        SubnetIds: ""
        SecurityGroupIds: ""
        TlsCertificate: ""
    Host_VpcConfiguration:
      allOf:
      - $ref: '#/components/schemas/VpcConfiguration'
      - description: The VPC configuration provisioned for the host.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

