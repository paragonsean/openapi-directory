# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetHostInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_arn: str=None):
        """GetHostInput - a model defined in OpenAPI

        :param host_arn: The host_arn of this GetHostInput.
        """
        self.openapi_types = {
            'host_arn': str
        }

        self.attribute_map = {
            'host_arn': 'HostArn'
        }

        self._host_arn = host_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetHostInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetHostInput of this GetHostInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_arn(self):
        """Gets the host_arn of this GetHostInput.


        :return: The host_arn of this GetHostInput.
        :rtype: str
        """
        return self._host_arn

    @host_arn.setter
    def host_arn(self, host_arn):
        """Sets the host_arn of this GetHostInput.


        :param host_arn: The host_arn of this GetHostInput.
        :type host_arn: str
        """
        if host_arn is None:
            raise ValueError("Invalid value for `host_arn`, must not be `None`")

        self._host_arn = host_arn
