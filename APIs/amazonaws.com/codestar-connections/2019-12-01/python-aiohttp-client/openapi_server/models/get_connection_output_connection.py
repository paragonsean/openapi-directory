# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connection_status import ConnectionStatus
from openapi_server.models.provider_type import ProviderType
from openapi_server import util


class GetConnectionOutputConnection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_name: str=None, connection_arn: str=None, provider_type: ProviderType=None, owner_account_id: str=None, connection_status: ConnectionStatus=None, host_arn: str=None):
        """GetConnectionOutputConnection - a model defined in OpenAPI

        :param connection_name: The connection_name of this GetConnectionOutputConnection.
        :param connection_arn: The connection_arn of this GetConnectionOutputConnection.
        :param provider_type: The provider_type of this GetConnectionOutputConnection.
        :param owner_account_id: The owner_account_id of this GetConnectionOutputConnection.
        :param connection_status: The connection_status of this GetConnectionOutputConnection.
        :param host_arn: The host_arn of this GetConnectionOutputConnection.
        """
        self.openapi_types = {
            'connection_name': str,
            'connection_arn': str,
            'provider_type': ProviderType,
            'owner_account_id': str,
            'connection_status': ConnectionStatus,
            'host_arn': str
        }

        self.attribute_map = {
            'connection_name': 'ConnectionName',
            'connection_arn': 'ConnectionArn',
            'provider_type': 'ProviderType',
            'owner_account_id': 'OwnerAccountId',
            'connection_status': 'ConnectionStatus',
            'host_arn': 'HostArn'
        }

        self._connection_name = connection_name
        self._connection_arn = connection_arn
        self._provider_type = provider_type
        self._owner_account_id = owner_account_id
        self._connection_status = connection_status
        self._host_arn = host_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetConnectionOutputConnection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetConnectionOutput_Connection of this GetConnectionOutputConnection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_name(self):
        """Gets the connection_name of this GetConnectionOutputConnection.


        :return: The connection_name of this GetConnectionOutputConnection.
        :rtype: str
        """
        return self._connection_name

    @connection_name.setter
    def connection_name(self, connection_name):
        """Sets the connection_name of this GetConnectionOutputConnection.


        :param connection_name: The connection_name of this GetConnectionOutputConnection.
        :type connection_name: str
        """

        self._connection_name = connection_name

    @property
    def connection_arn(self):
        """Gets the connection_arn of this GetConnectionOutputConnection.


        :return: The connection_arn of this GetConnectionOutputConnection.
        :rtype: str
        """
        return self._connection_arn

    @connection_arn.setter
    def connection_arn(self, connection_arn):
        """Sets the connection_arn of this GetConnectionOutputConnection.


        :param connection_arn: The connection_arn of this GetConnectionOutputConnection.
        :type connection_arn: str
        """

        self._connection_arn = connection_arn

    @property
    def provider_type(self):
        """Gets the provider_type of this GetConnectionOutputConnection.


        :return: The provider_type of this GetConnectionOutputConnection.
        :rtype: ProviderType
        """
        return self._provider_type

    @provider_type.setter
    def provider_type(self, provider_type):
        """Sets the provider_type of this GetConnectionOutputConnection.


        :param provider_type: The provider_type of this GetConnectionOutputConnection.
        :type provider_type: ProviderType
        """

        self._provider_type = provider_type

    @property
    def owner_account_id(self):
        """Gets the owner_account_id of this GetConnectionOutputConnection.


        :return: The owner_account_id of this GetConnectionOutputConnection.
        :rtype: str
        """
        return self._owner_account_id

    @owner_account_id.setter
    def owner_account_id(self, owner_account_id):
        """Sets the owner_account_id of this GetConnectionOutputConnection.


        :param owner_account_id: The owner_account_id of this GetConnectionOutputConnection.
        :type owner_account_id: str
        """

        self._owner_account_id = owner_account_id

    @property
    def connection_status(self):
        """Gets the connection_status of this GetConnectionOutputConnection.


        :return: The connection_status of this GetConnectionOutputConnection.
        :rtype: ConnectionStatus
        """
        return self._connection_status

    @connection_status.setter
    def connection_status(self, connection_status):
        """Sets the connection_status of this GetConnectionOutputConnection.


        :param connection_status: The connection_status of this GetConnectionOutputConnection.
        :type connection_status: ConnectionStatus
        """

        self._connection_status = connection_status

    @property
    def host_arn(self):
        """Gets the host_arn of this GetConnectionOutputConnection.


        :return: The host_arn of this GetConnectionOutputConnection.
        :rtype: str
        """
        return self._host_arn

    @host_arn.setter
    def host_arn(self, host_arn):
        """Sets the host_arn of this GetConnectionOutputConnection.


        :param host_arn: The host_arn of this GetConnectionOutputConnection.
        :type host_arn: str
        """

        self._host_arn = host_arn
