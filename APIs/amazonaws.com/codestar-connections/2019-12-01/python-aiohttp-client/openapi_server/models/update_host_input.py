# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_host_input_vpc_configuration import UpdateHostInputVpcConfiguration
from openapi_server import util


class UpdateHostInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_arn: str=None, provider_endpoint: str=None, vpc_configuration: UpdateHostInputVpcConfiguration=None):
        """UpdateHostInput - a model defined in OpenAPI

        :param host_arn: The host_arn of this UpdateHostInput.
        :param provider_endpoint: The provider_endpoint of this UpdateHostInput.
        :param vpc_configuration: The vpc_configuration of this UpdateHostInput.
        """
        self.openapi_types = {
            'host_arn': str,
            'provider_endpoint': str,
            'vpc_configuration': UpdateHostInputVpcConfiguration
        }

        self.attribute_map = {
            'host_arn': 'HostArn',
            'provider_endpoint': 'ProviderEndpoint',
            'vpc_configuration': 'VpcConfiguration'
        }

        self._host_arn = host_arn
        self._provider_endpoint = provider_endpoint
        self._vpc_configuration = vpc_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateHostInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateHostInput of this UpdateHostInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_arn(self):
        """Gets the host_arn of this UpdateHostInput.


        :return: The host_arn of this UpdateHostInput.
        :rtype: str
        """
        return self._host_arn

    @host_arn.setter
    def host_arn(self, host_arn):
        """Sets the host_arn of this UpdateHostInput.


        :param host_arn: The host_arn of this UpdateHostInput.
        :type host_arn: str
        """
        if host_arn is None:
            raise ValueError("Invalid value for `host_arn`, must not be `None`")

        self._host_arn = host_arn

    @property
    def provider_endpoint(self):
        """Gets the provider_endpoint of this UpdateHostInput.


        :return: The provider_endpoint of this UpdateHostInput.
        :rtype: str
        """
        return self._provider_endpoint

    @provider_endpoint.setter
    def provider_endpoint(self, provider_endpoint):
        """Sets the provider_endpoint of this UpdateHostInput.


        :param provider_endpoint: The provider_endpoint of this UpdateHostInput.
        :type provider_endpoint: str
        """

        self._provider_endpoint = provider_endpoint

    @property
    def vpc_configuration(self):
        """Gets the vpc_configuration of this UpdateHostInput.


        :return: The vpc_configuration of this UpdateHostInput.
        :rtype: UpdateHostInputVpcConfiguration
        """
        return self._vpc_configuration

    @vpc_configuration.setter
    def vpc_configuration(self, vpc_configuration):
        """Sets the vpc_configuration of this UpdateHostInput.


        :param vpc_configuration: The vpc_configuration of this UpdateHostInput.
        :type vpc_configuration: UpdateHostInputVpcConfiguration
        """

        self._vpc_configuration = vpc_configuration
