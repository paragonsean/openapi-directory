/*
 * AWS Organizations
 * <p>Organizations is a web service that enables you to consolidate your multiple Amazon Web Services accounts into an <i>organization</i> and centrally manage your accounts and their resources.</p> <p>This guide provides descriptions of the Organizations operations. For more information about using this service, see the <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html\">Organizations User Guide</a>.</p> <p> <b>Support and feedback for Organizations</b> </p> <p>We welcome your feedback. Send your comments to <a href=\"mailto:feedback-awsorganizations@amazon.com\">feedback-awsorganizations@amazon.com</a> or post your feedback and questions in the <a href=\"http://forums.aws.amazon.com/forum.jspa?forumID=219\">Organizations support forum</a>. For more information about the Amazon Web Services support forums, see <a href=\"http://forums.aws.amazon.com/help.jspa\">Forums Help</a>.</p> <p> <b>Endpoint to call When using the CLI or the Amazon Web Services SDK</b> </p> <p>For the current release of Organizations, specify the <code>us-east-1</code> region for all Amazon Web Services API and CLI calls made from the commercial Amazon Web Services Regions outside of China. If calling from one of the Amazon Web Services Regions in China, then specify <code>cn-northwest-1</code>. You can do this in the CLI by using these parameters and commands:</p> <ul> <li> <p>Use the following parameter with each command to specify both the endpoint and its region:</p> <p> <code>--endpoint-url https://organizations.us-east-1.amazonaws.com</code> <i>(from commercial Amazon Web Services Regions outside of China)</i> </p> <p>or</p> <p> <code>--endpoint-url https://organizations.cn-northwest-1.amazonaws.com.cn</code> <i>(from Amazon Web Services Regions in China)</i> </p> </li> <li> <p>Use the default endpoint, but configure your default region with this command:</p> <p> <code>aws configure set default.region us-east-1</code> <i>(from commercial Amazon Web Services Regions outside of China)</i> </p> <p>or</p> <p> <code>aws configure set default.region cn-northwest-1</code> <i>(from Amazon Web Services Regions in China)</i> </p> </li> <li> <p>Use the following parameter with each command to specify the endpoint:</p> <p> <code>--region us-east-1</code> <i>(from commercial Amazon Web Services Regions outside of China)</i> </p> <p>or</p> <p> <code>--region cn-northwest-1</code> <i>(from Amazon Web Services Regions in China)</i> </p> </li> </ul> <p> <b>Recording API Requests</b> </p> <p>Organizations supports CloudTrail, a service that records Amazon Web Services API calls for your Amazon Web Services account and delivers log files to an Amazon S3 bucket. By using information collected by CloudTrail, you can determine which requests the Organizations service received, who made the request and when, and so on. For more about Organizations and its support for CloudTrail, see <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_incident-response.html#orgs_cloudtrail-integration\">Logging Organizations Events with CloudTrail</a> in the <i>Organizations User Guide</i>. To learn more about CloudTrail, including how to turn it on and find your log files, see the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html\">CloudTrail User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CreateAccountFailureReason;
import org.openapitools.client.model.CreateAccountState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains the status about a &lt;a&gt;CreateAccount&lt;/a&gt; or &lt;a&gt;CreateGovCloudAccount&lt;/a&gt; request to create an Amazon Web Services account or an Amazon Web Services GovCloud (US) account in an organization.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:31.738490-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateAccountStatus {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ACCOUNT_NAME = "AccountName";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NAME)
  private String accountName;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private CreateAccountState state;

  public static final String SERIALIZED_NAME_REQUESTED_TIMESTAMP = "RequestedTimestamp";
  @SerializedName(SERIALIZED_NAME_REQUESTED_TIMESTAMP)
  private OffsetDateTime requestedTimestamp;

  public static final String SERIALIZED_NAME_COMPLETED_TIMESTAMP = "CompletedTimestamp";
  @SerializedName(SERIALIZED_NAME_COMPLETED_TIMESTAMP)
  private OffsetDateTime completedTimestamp;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "AccountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_GOV_CLOUD_ACCOUNT_ID = "GovCloudAccountId";
  @SerializedName(SERIALIZED_NAME_GOV_CLOUD_ACCOUNT_ID)
  private String govCloudAccountId;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private CreateAccountFailureReason failureReason;

  public CreateAccountStatus() {
  }

  public CreateAccountStatus id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public CreateAccountStatus accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

  /**
   * Get accountName
   * @return accountName
   */
  @javax.annotation.Nullable
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }


  public CreateAccountStatus state(CreateAccountState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public CreateAccountState getState() {
    return state;
  }

  public void setState(CreateAccountState state) {
    this.state = state;
  }


  public CreateAccountStatus requestedTimestamp(OffsetDateTime requestedTimestamp) {
    this.requestedTimestamp = requestedTimestamp;
    return this;
  }

  /**
   * Get requestedTimestamp
   * @return requestedTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRequestedTimestamp() {
    return requestedTimestamp;
  }

  public void setRequestedTimestamp(OffsetDateTime requestedTimestamp) {
    this.requestedTimestamp = requestedTimestamp;
  }


  public CreateAccountStatus completedTimestamp(OffsetDateTime completedTimestamp) {
    this.completedTimestamp = completedTimestamp;
    return this;
  }

  /**
   * Get completedTimestamp
   * @return completedTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompletedTimestamp() {
    return completedTimestamp;
  }

  public void setCompletedTimestamp(OffsetDateTime completedTimestamp) {
    this.completedTimestamp = completedTimestamp;
  }


  public CreateAccountStatus accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public CreateAccountStatus govCloudAccountId(String govCloudAccountId) {
    this.govCloudAccountId = govCloudAccountId;
    return this;
  }

  /**
   * Get govCloudAccountId
   * @return govCloudAccountId
   */
  @javax.annotation.Nullable
  public String getGovCloudAccountId() {
    return govCloudAccountId;
  }

  public void setGovCloudAccountId(String govCloudAccountId) {
    this.govCloudAccountId = govCloudAccountId;
  }


  public CreateAccountStatus failureReason(CreateAccountFailureReason failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public CreateAccountFailureReason getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(CreateAccountFailureReason failureReason) {
    this.failureReason = failureReason;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAccountStatus createAccountStatus = (CreateAccountStatus) o;
    return Objects.equals(this.id, createAccountStatus.id) &&
        Objects.equals(this.accountName, createAccountStatus.accountName) &&
        Objects.equals(this.state, createAccountStatus.state) &&
        Objects.equals(this.requestedTimestamp, createAccountStatus.requestedTimestamp) &&
        Objects.equals(this.completedTimestamp, createAccountStatus.completedTimestamp) &&
        Objects.equals(this.accountId, createAccountStatus.accountId) &&
        Objects.equals(this.govCloudAccountId, createAccountStatus.govCloudAccountId) &&
        Objects.equals(this.failureReason, createAccountStatus.failureReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, accountName, state, requestedTimestamp, completedTimestamp, accountId, govCloudAccountId, failureReason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAccountStatus {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    requestedTimestamp: ").append(toIndentedString(requestedTimestamp)).append("\n");
    sb.append("    completedTimestamp: ").append(toIndentedString(completedTimestamp)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    govCloudAccountId: ").append(toIndentedString(govCloudAccountId)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("AccountName");
    openapiFields.add("State");
    openapiFields.add("RequestedTimestamp");
    openapiFields.add("CompletedTimestamp");
    openapiFields.add("AccountId");
    openapiFields.add("GovCloudAccountId");
    openapiFields.add("FailureReason");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAccountStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAccountStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAccountStatus is not found in the empty JSON string", CreateAccountStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAccountStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAccountStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `AccountName`
      if (jsonObj.get("AccountName") != null && !jsonObj.get("AccountName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AccountName"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        CreateAccountState.validateJsonElement(jsonObj.get("State"));
      }
      // validate the optional field `RequestedTimestamp`
      if (jsonObj.get("RequestedTimestamp") != null && !jsonObj.get("RequestedTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("RequestedTimestamp"));
      }
      // validate the optional field `CompletedTimestamp`
      if (jsonObj.get("CompletedTimestamp") != null && !jsonObj.get("CompletedTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CompletedTimestamp"));
      }
      // validate the optional field `AccountId`
      if (jsonObj.get("AccountId") != null && !jsonObj.get("AccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AccountId"));
      }
      // validate the optional field `GovCloudAccountId`
      if (jsonObj.get("GovCloudAccountId") != null && !jsonObj.get("GovCloudAccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GovCloudAccountId"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        CreateAccountFailureReason.validateJsonElement(jsonObj.get("FailureReason"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAccountStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAccountStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAccountStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAccountStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAccountStatus>() {
           @Override
           public void write(JsonWriter out, CreateAccountStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAccountStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAccountStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAccountStatus
   * @throws IOException if the JSON string is invalid with respect to CreateAccountStatus
   */
  public static CreateAccountStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAccountStatus.class);
  }

  /**
   * Convert an instance of CreateAccountStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

