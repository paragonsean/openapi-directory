# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_type import ActionType
from openapi_server.models.handshake_state import HandshakeState
from openapi_server import util


class DescribeHandshakeResponseHandshake(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, arn: str=None, parties: List=None, state: HandshakeState=None, requested_timestamp: datetime=None, expiration_timestamp: datetime=None, action: ActionType=None, resources: List=None):
        """DescribeHandshakeResponseHandshake - a model defined in OpenAPI

        :param id: The id of this DescribeHandshakeResponseHandshake.
        :param arn: The arn of this DescribeHandshakeResponseHandshake.
        :param parties: The parties of this DescribeHandshakeResponseHandshake.
        :param state: The state of this DescribeHandshakeResponseHandshake.
        :param requested_timestamp: The requested_timestamp of this DescribeHandshakeResponseHandshake.
        :param expiration_timestamp: The expiration_timestamp of this DescribeHandshakeResponseHandshake.
        :param action: The action of this DescribeHandshakeResponseHandshake.
        :param resources: The resources of this DescribeHandshakeResponseHandshake.
        """
        self.openapi_types = {
            'id': str,
            'arn': str,
            'parties': List,
            'state': HandshakeState,
            'requested_timestamp': datetime,
            'expiration_timestamp': datetime,
            'action': ActionType,
            'resources': List
        }

        self.attribute_map = {
            'id': 'Id',
            'arn': 'Arn',
            'parties': 'Parties',
            'state': 'State',
            'requested_timestamp': 'RequestedTimestamp',
            'expiration_timestamp': 'ExpirationTimestamp',
            'action': 'Action',
            'resources': 'Resources'
        }

        self._id = id
        self._arn = arn
        self._parties = parties
        self._state = state
        self._requested_timestamp = requested_timestamp
        self._expiration_timestamp = expiration_timestamp
        self._action = action
        self._resources = resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeHandshakeResponseHandshake':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeHandshakeResponse_Handshake of this DescribeHandshakeResponseHandshake.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DescribeHandshakeResponseHandshake.


        :return: The id of this DescribeHandshakeResponseHandshake.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DescribeHandshakeResponseHandshake.


        :param id: The id of this DescribeHandshakeResponseHandshake.
        :type id: str
        """

        self._id = id

    @property
    def arn(self):
        """Gets the arn of this DescribeHandshakeResponseHandshake.


        :return: The arn of this DescribeHandshakeResponseHandshake.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DescribeHandshakeResponseHandshake.


        :param arn: The arn of this DescribeHandshakeResponseHandshake.
        :type arn: str
        """

        self._arn = arn

    @property
    def parties(self):
        """Gets the parties of this DescribeHandshakeResponseHandshake.


        :return: The parties of this DescribeHandshakeResponseHandshake.
        :rtype: List
        """
        return self._parties

    @parties.setter
    def parties(self, parties):
        """Sets the parties of this DescribeHandshakeResponseHandshake.


        :param parties: The parties of this DescribeHandshakeResponseHandshake.
        :type parties: List
        """

        self._parties = parties

    @property
    def state(self):
        """Gets the state of this DescribeHandshakeResponseHandshake.


        :return: The state of this DescribeHandshakeResponseHandshake.
        :rtype: HandshakeState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DescribeHandshakeResponseHandshake.


        :param state: The state of this DescribeHandshakeResponseHandshake.
        :type state: HandshakeState
        """

        self._state = state

    @property
    def requested_timestamp(self):
        """Gets the requested_timestamp of this DescribeHandshakeResponseHandshake.


        :return: The requested_timestamp of this DescribeHandshakeResponseHandshake.
        :rtype: datetime
        """
        return self._requested_timestamp

    @requested_timestamp.setter
    def requested_timestamp(self, requested_timestamp):
        """Sets the requested_timestamp of this DescribeHandshakeResponseHandshake.


        :param requested_timestamp: The requested_timestamp of this DescribeHandshakeResponseHandshake.
        :type requested_timestamp: datetime
        """

        self._requested_timestamp = requested_timestamp

    @property
    def expiration_timestamp(self):
        """Gets the expiration_timestamp of this DescribeHandshakeResponseHandshake.


        :return: The expiration_timestamp of this DescribeHandshakeResponseHandshake.
        :rtype: datetime
        """
        return self._expiration_timestamp

    @expiration_timestamp.setter
    def expiration_timestamp(self, expiration_timestamp):
        """Sets the expiration_timestamp of this DescribeHandshakeResponseHandshake.


        :param expiration_timestamp: The expiration_timestamp of this DescribeHandshakeResponseHandshake.
        :type expiration_timestamp: datetime
        """

        self._expiration_timestamp = expiration_timestamp

    @property
    def action(self):
        """Gets the action of this DescribeHandshakeResponseHandshake.


        :return: The action of this DescribeHandshakeResponseHandshake.
        :rtype: ActionType
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this DescribeHandshakeResponseHandshake.


        :param action: The action of this DescribeHandshakeResponseHandshake.
        :type action: ActionType
        """

        self._action = action

    @property
    def resources(self):
        """Gets the resources of this DescribeHandshakeResponseHandshake.


        :return: The resources of this DescribeHandshakeResponseHandshake.
        :rtype: List
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this DescribeHandshakeResponseHandshake.


        :param resources: The resources of this DescribeHandshakeResponseHandshake.
        :type resources: List
        """

        self._resources = resources
