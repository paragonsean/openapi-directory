# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_joined_method import AccountJoinedMethod
from openapi_server.models.account_status import AccountStatus
from openapi_server import util


class Account(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, arn: str=None, email: str=None, name: str=None, status: AccountStatus=None, joined_method: AccountJoinedMethod=None, joined_timestamp: datetime=None):
        """Account - a model defined in OpenAPI

        :param id: The id of this Account.
        :param arn: The arn of this Account.
        :param email: The email of this Account.
        :param name: The name of this Account.
        :param status: The status of this Account.
        :param joined_method: The joined_method of this Account.
        :param joined_timestamp: The joined_timestamp of this Account.
        """
        self.openapi_types = {
            'id': str,
            'arn': str,
            'email': str,
            'name': str,
            'status': AccountStatus,
            'joined_method': AccountJoinedMethod,
            'joined_timestamp': datetime
        }

        self.attribute_map = {
            'id': 'Id',
            'arn': 'Arn',
            'email': 'Email',
            'name': 'Name',
            'status': 'Status',
            'joined_method': 'JoinedMethod',
            'joined_timestamp': 'JoinedTimestamp'
        }

        self._id = id
        self._arn = arn
        self._email = email
        self._name = name
        self._status = status
        self._joined_method = joined_method
        self._joined_timestamp = joined_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Account':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Account of this Account.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Account.


        :return: The id of this Account.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Account.


        :param id: The id of this Account.
        :type id: str
        """

        self._id = id

    @property
    def arn(self):
        """Gets the arn of this Account.


        :return: The arn of this Account.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Account.


        :param arn: The arn of this Account.
        :type arn: str
        """

        self._arn = arn

    @property
    def email(self):
        """Gets the email of this Account.


        :return: The email of this Account.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Account.


        :param email: The email of this Account.
        :type email: str
        """

        self._email = email

    @property
    def name(self):
        """Gets the name of this Account.


        :return: The name of this Account.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Account.


        :param name: The name of this Account.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this Account.


        :return: The status of this Account.
        :rtype: AccountStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Account.


        :param status: The status of this Account.
        :type status: AccountStatus
        """

        self._status = status

    @property
    def joined_method(self):
        """Gets the joined_method of this Account.


        :return: The joined_method of this Account.
        :rtype: AccountJoinedMethod
        """
        return self._joined_method

    @joined_method.setter
    def joined_method(self, joined_method):
        """Sets the joined_method of this Account.


        :param joined_method: The joined_method of this Account.
        :type joined_method: AccountJoinedMethod
        """

        self._joined_method = joined_method

    @property
    def joined_timestamp(self):
        """Gets the joined_timestamp of this Account.


        :return: The joined_timestamp of this Account.
        :rtype: datetime
        """
        return self._joined_timestamp

    @joined_timestamp.setter
    def joined_timestamp(self, joined_timestamp):
        """Sets the joined_timestamp of this Account.


        :param joined_timestamp: The joined_timestamp of this Account.
        :type joined_timestamp: datetime
        """

        self._joined_timestamp = joined_timestamp
