# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.organization_feature_set import OrganizationFeatureSet
from openapi_server import util


class CreateOrganizationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feature_set: OrganizationFeatureSet=None):
        """CreateOrganizationRequest - a model defined in OpenAPI

        :param feature_set: The feature_set of this CreateOrganizationRequest.
        """
        self.openapi_types = {
            'feature_set': OrganizationFeatureSet
        }

        self.attribute_map = {
            'feature_set': 'FeatureSet'
        }

        self._feature_set = feature_set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateOrganizationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateOrganizationRequest of this CreateOrganizationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feature_set(self):
        """Gets the feature_set of this CreateOrganizationRequest.


        :return: The feature_set of this CreateOrganizationRequest.
        :rtype: OrganizationFeatureSet
        """
        return self._feature_set

    @feature_set.setter
    def feature_set(self, feature_set):
        """Sets the feature_set of this CreateOrganizationRequest.


        :param feature_set: The feature_set of this CreateOrganizationRequest.
        :type feature_set: OrganizationFeatureSet
        """

        self._feature_set = feature_set
