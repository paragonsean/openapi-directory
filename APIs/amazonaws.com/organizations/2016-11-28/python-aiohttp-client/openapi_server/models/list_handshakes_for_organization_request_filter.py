# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_type import ActionType
from openapi_server import util


class ListHandshakesForOrganizationRequestFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_type: ActionType=None, parent_handshake_id: str=None):
        """ListHandshakesForOrganizationRequestFilter - a model defined in OpenAPI

        :param action_type: The action_type of this ListHandshakesForOrganizationRequestFilter.
        :param parent_handshake_id: The parent_handshake_id of this ListHandshakesForOrganizationRequestFilter.
        """
        self.openapi_types = {
            'action_type': ActionType,
            'parent_handshake_id': str
        }

        self.attribute_map = {
            'action_type': 'ActionType',
            'parent_handshake_id': 'ParentHandshakeId'
        }

        self._action_type = action_type
        self._parent_handshake_id = parent_handshake_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListHandshakesForOrganizationRequestFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListHandshakesForOrganizationRequest_Filter of this ListHandshakesForOrganizationRequestFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_type(self):
        """Gets the action_type of this ListHandshakesForOrganizationRequestFilter.


        :return: The action_type of this ListHandshakesForOrganizationRequestFilter.
        :rtype: ActionType
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this ListHandshakesForOrganizationRequestFilter.


        :param action_type: The action_type of this ListHandshakesForOrganizationRequestFilter.
        :type action_type: ActionType
        """

        self._action_type = action_type

    @property
    def parent_handshake_id(self):
        """Gets the parent_handshake_id of this ListHandshakesForOrganizationRequestFilter.


        :return: The parent_handshake_id of this ListHandshakesForOrganizationRequestFilter.
        :rtype: str
        """
        return self._parent_handshake_id

    @parent_handshake_id.setter
    def parent_handshake_id(self, parent_handshake_id):
        """Sets the parent_handshake_id of this ListHandshakesForOrganizationRequestFilter.


        :param parent_handshake_id: The parent_handshake_id of this ListHandshakesForOrganizationRequestFilter.
        :type parent_handshake_id: str
        """

        self._parent_handshake_id = parent_handshake_id
