# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.iam_user_access_to_billing import IAMUserAccessToBilling
from openapi_server import util


class CreateAccountRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, account_name: str=None, role_name: str=None, iam_user_access_to_billing: IAMUserAccessToBilling=None, tags: List=None):
        """CreateAccountRequest - a model defined in OpenAPI

        :param email: The email of this CreateAccountRequest.
        :param account_name: The account_name of this CreateAccountRequest.
        :param role_name: The role_name of this CreateAccountRequest.
        :param iam_user_access_to_billing: The iam_user_access_to_billing of this CreateAccountRequest.
        :param tags: The tags of this CreateAccountRequest.
        """
        self.openapi_types = {
            'email': str,
            'account_name': str,
            'role_name': str,
            'iam_user_access_to_billing': IAMUserAccessToBilling,
            'tags': List
        }

        self.attribute_map = {
            'email': 'Email',
            'account_name': 'AccountName',
            'role_name': 'RoleName',
            'iam_user_access_to_billing': 'IamUserAccessToBilling',
            'tags': 'Tags'
        }

        self._email = email
        self._account_name = account_name
        self._role_name = role_name
        self._iam_user_access_to_billing = iam_user_access_to_billing
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAccountRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAccountRequest of this CreateAccountRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this CreateAccountRequest.


        :return: The email of this CreateAccountRequest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this CreateAccountRequest.


        :param email: The email of this CreateAccountRequest.
        :type email: str
        """
        if email is None:
            raise ValueError("Invalid value for `email`, must not be `None`")

        self._email = email

    @property
    def account_name(self):
        """Gets the account_name of this CreateAccountRequest.


        :return: The account_name of this CreateAccountRequest.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this CreateAccountRequest.


        :param account_name: The account_name of this CreateAccountRequest.
        :type account_name: str
        """
        if account_name is None:
            raise ValueError("Invalid value for `account_name`, must not be `None`")

        self._account_name = account_name

    @property
    def role_name(self):
        """Gets the role_name of this CreateAccountRequest.


        :return: The role_name of this CreateAccountRequest.
        :rtype: str
        """
        return self._role_name

    @role_name.setter
    def role_name(self, role_name):
        """Sets the role_name of this CreateAccountRequest.


        :param role_name: The role_name of this CreateAccountRequest.
        :type role_name: str
        """

        self._role_name = role_name

    @property
    def iam_user_access_to_billing(self):
        """Gets the iam_user_access_to_billing of this CreateAccountRequest.


        :return: The iam_user_access_to_billing of this CreateAccountRequest.
        :rtype: IAMUserAccessToBilling
        """
        return self._iam_user_access_to_billing

    @iam_user_access_to_billing.setter
    def iam_user_access_to_billing(self, iam_user_access_to_billing):
        """Sets the iam_user_access_to_billing of this CreateAccountRequest.


        :param iam_user_access_to_billing: The iam_user_access_to_billing of this CreateAccountRequest.
        :type iam_user_access_to_billing: IAMUserAccessToBilling
        """

        self._iam_user_access_to_billing = iam_user_access_to_billing

    @property
    def tags(self):
        """Gets the tags of this CreateAccountRequest.


        :return: The tags of this CreateAccountRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateAccountRequest.


        :param tags: The tags of this CreateAccountRequest.
        :type tags: List
        """

        self._tags = tags
