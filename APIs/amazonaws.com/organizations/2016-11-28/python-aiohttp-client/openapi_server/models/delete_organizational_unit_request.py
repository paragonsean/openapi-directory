# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteOrganizationalUnitRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, organizational_unit_id: str=None):
        """DeleteOrganizationalUnitRequest - a model defined in OpenAPI

        :param organizational_unit_id: The organizational_unit_id of this DeleteOrganizationalUnitRequest.
        """
        self.openapi_types = {
            'organizational_unit_id': str
        }

        self.attribute_map = {
            'organizational_unit_id': 'OrganizationalUnitId'
        }

        self._organizational_unit_id = organizational_unit_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteOrganizationalUnitRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteOrganizationalUnitRequest of this DeleteOrganizationalUnitRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def organizational_unit_id(self):
        """Gets the organizational_unit_id of this DeleteOrganizationalUnitRequest.


        :return: The organizational_unit_id of this DeleteOrganizationalUnitRequest.
        :rtype: str
        """
        return self._organizational_unit_id

    @organizational_unit_id.setter
    def organizational_unit_id(self, organizational_unit_id):
        """Sets the organizational_unit_id of this DeleteOrganizationalUnitRequest.


        :param organizational_unit_id: The organizational_unit_id of this DeleteOrganizationalUnitRequest.
        :type organizational_unit_id: str
        """
        if organizational_unit_id is None:
            raise ValueError("Invalid value for `organizational_unit_id`, must not be `None`")

        self._organizational_unit_id = organizational_unit_id
