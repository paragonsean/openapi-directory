# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.organization_feature_set import OrganizationFeatureSet
from openapi_server import util


class CreateOrganizationResponseOrganization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, arn: str=None, feature_set: OrganizationFeatureSet=None, master_account_arn: str=None, master_account_id: str=None, master_account_email: str=None, available_policy_types: List=None):
        """CreateOrganizationResponseOrganization - a model defined in OpenAPI

        :param id: The id of this CreateOrganizationResponseOrganization.
        :param arn: The arn of this CreateOrganizationResponseOrganization.
        :param feature_set: The feature_set of this CreateOrganizationResponseOrganization.
        :param master_account_arn: The master_account_arn of this CreateOrganizationResponseOrganization.
        :param master_account_id: The master_account_id of this CreateOrganizationResponseOrganization.
        :param master_account_email: The master_account_email of this CreateOrganizationResponseOrganization.
        :param available_policy_types: The available_policy_types of this CreateOrganizationResponseOrganization.
        """
        self.openapi_types = {
            'id': str,
            'arn': str,
            'feature_set': OrganizationFeatureSet,
            'master_account_arn': str,
            'master_account_id': str,
            'master_account_email': str,
            'available_policy_types': List
        }

        self.attribute_map = {
            'id': 'Id',
            'arn': 'Arn',
            'feature_set': 'FeatureSet',
            'master_account_arn': 'MasterAccountArn',
            'master_account_id': 'MasterAccountId',
            'master_account_email': 'MasterAccountEmail',
            'available_policy_types': 'AvailablePolicyTypes'
        }

        self._id = id
        self._arn = arn
        self._feature_set = feature_set
        self._master_account_arn = master_account_arn
        self._master_account_id = master_account_id
        self._master_account_email = master_account_email
        self._available_policy_types = available_policy_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateOrganizationResponseOrganization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateOrganizationResponse_Organization of this CreateOrganizationResponseOrganization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CreateOrganizationResponseOrganization.


        :return: The id of this CreateOrganizationResponseOrganization.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateOrganizationResponseOrganization.


        :param id: The id of this CreateOrganizationResponseOrganization.
        :type id: str
        """

        self._id = id

    @property
    def arn(self):
        """Gets the arn of this CreateOrganizationResponseOrganization.


        :return: The arn of this CreateOrganizationResponseOrganization.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this CreateOrganizationResponseOrganization.


        :param arn: The arn of this CreateOrganizationResponseOrganization.
        :type arn: str
        """

        self._arn = arn

    @property
    def feature_set(self):
        """Gets the feature_set of this CreateOrganizationResponseOrganization.


        :return: The feature_set of this CreateOrganizationResponseOrganization.
        :rtype: OrganizationFeatureSet
        """
        return self._feature_set

    @feature_set.setter
    def feature_set(self, feature_set):
        """Sets the feature_set of this CreateOrganizationResponseOrganization.


        :param feature_set: The feature_set of this CreateOrganizationResponseOrganization.
        :type feature_set: OrganizationFeatureSet
        """

        self._feature_set = feature_set

    @property
    def master_account_arn(self):
        """Gets the master_account_arn of this CreateOrganizationResponseOrganization.


        :return: The master_account_arn of this CreateOrganizationResponseOrganization.
        :rtype: str
        """
        return self._master_account_arn

    @master_account_arn.setter
    def master_account_arn(self, master_account_arn):
        """Sets the master_account_arn of this CreateOrganizationResponseOrganization.


        :param master_account_arn: The master_account_arn of this CreateOrganizationResponseOrganization.
        :type master_account_arn: str
        """

        self._master_account_arn = master_account_arn

    @property
    def master_account_id(self):
        """Gets the master_account_id of this CreateOrganizationResponseOrganization.


        :return: The master_account_id of this CreateOrganizationResponseOrganization.
        :rtype: str
        """
        return self._master_account_id

    @master_account_id.setter
    def master_account_id(self, master_account_id):
        """Sets the master_account_id of this CreateOrganizationResponseOrganization.


        :param master_account_id: The master_account_id of this CreateOrganizationResponseOrganization.
        :type master_account_id: str
        """

        self._master_account_id = master_account_id

    @property
    def master_account_email(self):
        """Gets the master_account_email of this CreateOrganizationResponseOrganization.


        :return: The master_account_email of this CreateOrganizationResponseOrganization.
        :rtype: str
        """
        return self._master_account_email

    @master_account_email.setter
    def master_account_email(self, master_account_email):
        """Sets the master_account_email of this CreateOrganizationResponseOrganization.


        :param master_account_email: The master_account_email of this CreateOrganizationResponseOrganization.
        :type master_account_email: str
        """

        self._master_account_email = master_account_email

    @property
    def available_policy_types(self):
        """Gets the available_policy_types of this CreateOrganizationResponseOrganization.


        :return: The available_policy_types of this CreateOrganizationResponseOrganization.
        :rtype: List
        """
        return self._available_policy_types

    @available_policy_types.setter
    def available_policy_types(self, available_policy_types):
        """Sets the available_policy_types of this CreateOrganizationResponseOrganization.


        :param available_policy_types: The available_policy_types of this CreateOrganizationResponseOrganization.
        :type available_policy_types: List
        """

        self._available_policy_types = available_policy_types
