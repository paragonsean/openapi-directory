# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.effective_policy_type import EffectivePolicyType
from openapi_server import util


class DescribeEffectivePolicyResponseEffectivePolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_content: str=None, last_updated_timestamp: datetime=None, target_id: str=None, policy_type: EffectivePolicyType=None):
        """DescribeEffectivePolicyResponseEffectivePolicy - a model defined in OpenAPI

        :param policy_content: The policy_content of this DescribeEffectivePolicyResponseEffectivePolicy.
        :param last_updated_timestamp: The last_updated_timestamp of this DescribeEffectivePolicyResponseEffectivePolicy.
        :param target_id: The target_id of this DescribeEffectivePolicyResponseEffectivePolicy.
        :param policy_type: The policy_type of this DescribeEffectivePolicyResponseEffectivePolicy.
        """
        self.openapi_types = {
            'policy_content': str,
            'last_updated_timestamp': datetime,
            'target_id': str,
            'policy_type': EffectivePolicyType
        }

        self.attribute_map = {
            'policy_content': 'PolicyContent',
            'last_updated_timestamp': 'LastUpdatedTimestamp',
            'target_id': 'TargetId',
            'policy_type': 'PolicyType'
        }

        self._policy_content = policy_content
        self._last_updated_timestamp = last_updated_timestamp
        self._target_id = target_id
        self._policy_type = policy_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEffectivePolicyResponseEffectivePolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEffectivePolicyResponse_EffectivePolicy of this DescribeEffectivePolicyResponseEffectivePolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_content(self):
        """Gets the policy_content of this DescribeEffectivePolicyResponseEffectivePolicy.


        :return: The policy_content of this DescribeEffectivePolicyResponseEffectivePolicy.
        :rtype: str
        """
        return self._policy_content

    @policy_content.setter
    def policy_content(self, policy_content):
        """Sets the policy_content of this DescribeEffectivePolicyResponseEffectivePolicy.


        :param policy_content: The policy_content of this DescribeEffectivePolicyResponseEffectivePolicy.
        :type policy_content: str
        """

        self._policy_content = policy_content

    @property
    def last_updated_timestamp(self):
        """Gets the last_updated_timestamp of this DescribeEffectivePolicyResponseEffectivePolicy.


        :return: The last_updated_timestamp of this DescribeEffectivePolicyResponseEffectivePolicy.
        :rtype: datetime
        """
        return self._last_updated_timestamp

    @last_updated_timestamp.setter
    def last_updated_timestamp(self, last_updated_timestamp):
        """Sets the last_updated_timestamp of this DescribeEffectivePolicyResponseEffectivePolicy.


        :param last_updated_timestamp: The last_updated_timestamp of this DescribeEffectivePolicyResponseEffectivePolicy.
        :type last_updated_timestamp: datetime
        """

        self._last_updated_timestamp = last_updated_timestamp

    @property
    def target_id(self):
        """Gets the target_id of this DescribeEffectivePolicyResponseEffectivePolicy.


        :return: The target_id of this DescribeEffectivePolicyResponseEffectivePolicy.
        :rtype: str
        """
        return self._target_id

    @target_id.setter
    def target_id(self, target_id):
        """Sets the target_id of this DescribeEffectivePolicyResponseEffectivePolicy.


        :param target_id: The target_id of this DescribeEffectivePolicyResponseEffectivePolicy.
        :type target_id: str
        """

        self._target_id = target_id

    @property
    def policy_type(self):
        """Gets the policy_type of this DescribeEffectivePolicyResponseEffectivePolicy.


        :return: The policy_type of this DescribeEffectivePolicyResponseEffectivePolicy.
        :rtype: EffectivePolicyType
        """
        return self._policy_type

    @policy_type.setter
    def policy_type(self, policy_type):
        """Sets the policy_type of this DescribeEffectivePolicyResponseEffectivePolicy.


        :param policy_type: The policy_type of this DescribeEffectivePolicyResponseEffectivePolicy.
        :type policy_type: EffectivePolicyType
        """

        self._policy_type = policy_type
