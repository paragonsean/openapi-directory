# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_account_failure_reason import CreateAccountFailureReason
from openapi_server.models.create_account_state import CreateAccountState
from openapi_server import util


class CreateAccountResponseCreateAccountStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, account_name: str=None, state: CreateAccountState=None, requested_timestamp: datetime=None, completed_timestamp: datetime=None, account_id: str=None, gov_cloud_account_id: str=None, failure_reason: CreateAccountFailureReason=None):
        """CreateAccountResponseCreateAccountStatus - a model defined in OpenAPI

        :param id: The id of this CreateAccountResponseCreateAccountStatus.
        :param account_name: The account_name of this CreateAccountResponseCreateAccountStatus.
        :param state: The state of this CreateAccountResponseCreateAccountStatus.
        :param requested_timestamp: The requested_timestamp of this CreateAccountResponseCreateAccountStatus.
        :param completed_timestamp: The completed_timestamp of this CreateAccountResponseCreateAccountStatus.
        :param account_id: The account_id of this CreateAccountResponseCreateAccountStatus.
        :param gov_cloud_account_id: The gov_cloud_account_id of this CreateAccountResponseCreateAccountStatus.
        :param failure_reason: The failure_reason of this CreateAccountResponseCreateAccountStatus.
        """
        self.openapi_types = {
            'id': str,
            'account_name': str,
            'state': CreateAccountState,
            'requested_timestamp': datetime,
            'completed_timestamp': datetime,
            'account_id': str,
            'gov_cloud_account_id': str,
            'failure_reason': CreateAccountFailureReason
        }

        self.attribute_map = {
            'id': 'Id',
            'account_name': 'AccountName',
            'state': 'State',
            'requested_timestamp': 'RequestedTimestamp',
            'completed_timestamp': 'CompletedTimestamp',
            'account_id': 'AccountId',
            'gov_cloud_account_id': 'GovCloudAccountId',
            'failure_reason': 'FailureReason'
        }

        self._id = id
        self._account_name = account_name
        self._state = state
        self._requested_timestamp = requested_timestamp
        self._completed_timestamp = completed_timestamp
        self._account_id = account_id
        self._gov_cloud_account_id = gov_cloud_account_id
        self._failure_reason = failure_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAccountResponseCreateAccountStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAccountResponse_CreateAccountStatus of this CreateAccountResponseCreateAccountStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CreateAccountResponseCreateAccountStatus.


        :return: The id of this CreateAccountResponseCreateAccountStatus.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateAccountResponseCreateAccountStatus.


        :param id: The id of this CreateAccountResponseCreateAccountStatus.
        :type id: str
        """

        self._id = id

    @property
    def account_name(self):
        """Gets the account_name of this CreateAccountResponseCreateAccountStatus.


        :return: The account_name of this CreateAccountResponseCreateAccountStatus.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this CreateAccountResponseCreateAccountStatus.


        :param account_name: The account_name of this CreateAccountResponseCreateAccountStatus.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def state(self):
        """Gets the state of this CreateAccountResponseCreateAccountStatus.


        :return: The state of this CreateAccountResponseCreateAccountStatus.
        :rtype: CreateAccountState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CreateAccountResponseCreateAccountStatus.


        :param state: The state of this CreateAccountResponseCreateAccountStatus.
        :type state: CreateAccountState
        """

        self._state = state

    @property
    def requested_timestamp(self):
        """Gets the requested_timestamp of this CreateAccountResponseCreateAccountStatus.


        :return: The requested_timestamp of this CreateAccountResponseCreateAccountStatus.
        :rtype: datetime
        """
        return self._requested_timestamp

    @requested_timestamp.setter
    def requested_timestamp(self, requested_timestamp):
        """Sets the requested_timestamp of this CreateAccountResponseCreateAccountStatus.


        :param requested_timestamp: The requested_timestamp of this CreateAccountResponseCreateAccountStatus.
        :type requested_timestamp: datetime
        """

        self._requested_timestamp = requested_timestamp

    @property
    def completed_timestamp(self):
        """Gets the completed_timestamp of this CreateAccountResponseCreateAccountStatus.


        :return: The completed_timestamp of this CreateAccountResponseCreateAccountStatus.
        :rtype: datetime
        """
        return self._completed_timestamp

    @completed_timestamp.setter
    def completed_timestamp(self, completed_timestamp):
        """Sets the completed_timestamp of this CreateAccountResponseCreateAccountStatus.


        :param completed_timestamp: The completed_timestamp of this CreateAccountResponseCreateAccountStatus.
        :type completed_timestamp: datetime
        """

        self._completed_timestamp = completed_timestamp

    @property
    def account_id(self):
        """Gets the account_id of this CreateAccountResponseCreateAccountStatus.


        :return: The account_id of this CreateAccountResponseCreateAccountStatus.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this CreateAccountResponseCreateAccountStatus.


        :param account_id: The account_id of this CreateAccountResponseCreateAccountStatus.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def gov_cloud_account_id(self):
        """Gets the gov_cloud_account_id of this CreateAccountResponseCreateAccountStatus.


        :return: The gov_cloud_account_id of this CreateAccountResponseCreateAccountStatus.
        :rtype: str
        """
        return self._gov_cloud_account_id

    @gov_cloud_account_id.setter
    def gov_cloud_account_id(self, gov_cloud_account_id):
        """Sets the gov_cloud_account_id of this CreateAccountResponseCreateAccountStatus.


        :param gov_cloud_account_id: The gov_cloud_account_id of this CreateAccountResponseCreateAccountStatus.
        :type gov_cloud_account_id: str
        """

        self._gov_cloud_account_id = gov_cloud_account_id

    @property
    def failure_reason(self):
        """Gets the failure_reason of this CreateAccountResponseCreateAccountStatus.


        :return: The failure_reason of this CreateAccountResponseCreateAccountStatus.
        :rtype: CreateAccountFailureReason
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this CreateAccountResponseCreateAccountStatus.


        :param failure_reason: The failure_reason of this CreateAccountResponseCreateAccountStatus.
        :type failure_reason: CreateAccountFailureReason
        """

        self._failure_reason = failure_reason
