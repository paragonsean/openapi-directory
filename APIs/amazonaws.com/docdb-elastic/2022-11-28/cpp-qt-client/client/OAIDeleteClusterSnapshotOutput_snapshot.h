/**
 * Amazon DocumentDB Elastic Clusters
 * The new Amazon Elastic DocumentDB service endpoint.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteClusterSnapshotOutput_snapshot.h
 *
 * 
 */

#ifndef OAIDeleteClusterSnapshotOutput_snapshot_H
#define OAIDeleteClusterSnapshotOutput_snapshot_H

#include <QJsonObject>

#include "OAIStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteClusterSnapshotOutput_snapshot : public OAIObject {
public:
    OAIDeleteClusterSnapshotOutput_snapshot();
    OAIDeleteClusterSnapshotOutput_snapshot(QString json);
    ~OAIDeleteClusterSnapshotOutput_snapshot() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdminUserName() const;
    void setAdminUserName(const QString &admin_user_name);
    bool is_admin_user_name_Set() const;
    bool is_admin_user_name_Valid() const;

    QString getClusterArn() const;
    void setClusterArn(const QString &cluster_arn);
    bool is_cluster_arn_Set() const;
    bool is_cluster_arn_Valid() const;

    QString getClusterCreationTime() const;
    void setClusterCreationTime(const QString &cluster_creation_time);
    bool is_cluster_creation_time_Set() const;
    bool is_cluster_creation_time_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    QString getSnapshotArn() const;
    void setSnapshotArn(const QString &snapshot_arn);
    bool is_snapshot_arn_Set() const;
    bool is_snapshot_arn_Valid() const;

    QString getSnapshotCreationTime() const;
    void setSnapshotCreationTime(const QString &snapshot_creation_time);
    bool is_snapshot_creation_time_Set() const;
    bool is_snapshot_creation_time_Valid() const;

    QString getSnapshotName() const;
    void setSnapshotName(const QString &snapshot_name);
    bool is_snapshot_name_Set() const;
    bool is_snapshot_name_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList getSubnetIds() const;
    void setSubnetIds(const QList &subnet_ids);
    bool is_subnet_ids_Set() const;
    bool is_subnet_ids_Valid() const;

    QList getVpcSecurityGroupIds() const;
    void setVpcSecurityGroupIds(const QList &vpc_security_group_ids);
    bool is_vpc_security_group_ids_Set() const;
    bool is_vpc_security_group_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_admin_user_name;
    bool m_admin_user_name_isSet;
    bool m_admin_user_name_isValid;

    QString m_cluster_arn;
    bool m_cluster_arn_isSet;
    bool m_cluster_arn_isValid;

    QString m_cluster_creation_time;
    bool m_cluster_creation_time_isSet;
    bool m_cluster_creation_time_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    QString m_snapshot_arn;
    bool m_snapshot_arn_isSet;
    bool m_snapshot_arn_isValid;

    QString m_snapshot_creation_time;
    bool m_snapshot_creation_time_isSet;
    bool m_snapshot_creation_time_isValid;

    QString m_snapshot_name;
    bool m_snapshot_name_isSet;
    bool m_snapshot_name_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList m_subnet_ids;
    bool m_subnet_ids_isSet;
    bool m_subnet_ids_isValid;

    QList m_vpc_security_group_ids;
    bool m_vpc_security_group_ids_isSet;
    bool m_vpc_security_group_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteClusterSnapshotOutput_snapshot)

#endif // OAIDeleteClusterSnapshotOutput_snapshot_H
