/**
 * Amazon DocumentDB Elastic Clusters
 * The new Amazon Elastic DocumentDB service endpoint.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateClusterSnapshotOutput_snapshot.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateClusterSnapshotOutput_snapshot::OAICreateClusterSnapshotOutput_snapshot(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateClusterSnapshotOutput_snapshot::OAICreateClusterSnapshotOutput_snapshot() {
    this->initializeModel();
}

OAICreateClusterSnapshotOutput_snapshot::~OAICreateClusterSnapshotOutput_snapshot() {}

void OAICreateClusterSnapshotOutput_snapshot::initializeModel() {

    m_admin_user_name_isSet = false;
    m_admin_user_name_isValid = false;

    m_cluster_arn_isSet = false;
    m_cluster_arn_isValid = false;

    m_cluster_creation_time_isSet = false;
    m_cluster_creation_time_isValid = false;

    m_kms_key_id_isSet = false;
    m_kms_key_id_isValid = false;

    m_snapshot_arn_isSet = false;
    m_snapshot_arn_isValid = false;

    m_snapshot_creation_time_isSet = false;
    m_snapshot_creation_time_isValid = false;

    m_snapshot_name_isSet = false;
    m_snapshot_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_subnet_ids_isSet = false;
    m_subnet_ids_isValid = false;

    m_vpc_security_group_ids_isSet = false;
    m_vpc_security_group_ids_isValid = false;
}

void OAICreateClusterSnapshotOutput_snapshot::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateClusterSnapshotOutput_snapshot::fromJsonObject(QJsonObject json) {

    m_admin_user_name_isValid = ::OpenAPI::fromJsonValue(m_admin_user_name, json[QString("adminUserName")]);
    m_admin_user_name_isSet = !json[QString("adminUserName")].isNull() && m_admin_user_name_isValid;

    m_cluster_arn_isValid = ::OpenAPI::fromJsonValue(m_cluster_arn, json[QString("clusterArn")]);
    m_cluster_arn_isSet = !json[QString("clusterArn")].isNull() && m_cluster_arn_isValid;

    m_cluster_creation_time_isValid = ::OpenAPI::fromJsonValue(m_cluster_creation_time, json[QString("clusterCreationTime")]);
    m_cluster_creation_time_isSet = !json[QString("clusterCreationTime")].isNull() && m_cluster_creation_time_isValid;

    m_kms_key_id_isValid = ::OpenAPI::fromJsonValue(m_kms_key_id, json[QString("kmsKeyId")]);
    m_kms_key_id_isSet = !json[QString("kmsKeyId")].isNull() && m_kms_key_id_isValid;

    m_snapshot_arn_isValid = ::OpenAPI::fromJsonValue(m_snapshot_arn, json[QString("snapshotArn")]);
    m_snapshot_arn_isSet = !json[QString("snapshotArn")].isNull() && m_snapshot_arn_isValid;

    m_snapshot_creation_time_isValid = ::OpenAPI::fromJsonValue(m_snapshot_creation_time, json[QString("snapshotCreationTime")]);
    m_snapshot_creation_time_isSet = !json[QString("snapshotCreationTime")].isNull() && m_snapshot_creation_time_isValid;

    m_snapshot_name_isValid = ::OpenAPI::fromJsonValue(m_snapshot_name, json[QString("snapshotName")]);
    m_snapshot_name_isSet = !json[QString("snapshotName")].isNull() && m_snapshot_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_subnet_ids_isValid = ::OpenAPI::fromJsonValue(m_subnet_ids, json[QString("subnetIds")]);
    m_subnet_ids_isSet = !json[QString("subnetIds")].isNull() && m_subnet_ids_isValid;

    m_vpc_security_group_ids_isValid = ::OpenAPI::fromJsonValue(m_vpc_security_group_ids, json[QString("vpcSecurityGroupIds")]);
    m_vpc_security_group_ids_isSet = !json[QString("vpcSecurityGroupIds")].isNull() && m_vpc_security_group_ids_isValid;
}

QString OAICreateClusterSnapshotOutput_snapshot::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateClusterSnapshotOutput_snapshot::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_user_name_isSet) {
        obj.insert(QString("adminUserName"), ::OpenAPI::toJsonValue(m_admin_user_name));
    }
    if (m_cluster_arn_isSet) {
        obj.insert(QString("clusterArn"), ::OpenAPI::toJsonValue(m_cluster_arn));
    }
    if (m_cluster_creation_time_isSet) {
        obj.insert(QString("clusterCreationTime"), ::OpenAPI::toJsonValue(m_cluster_creation_time));
    }
    if (m_kms_key_id_isSet) {
        obj.insert(QString("kmsKeyId"), ::OpenAPI::toJsonValue(m_kms_key_id));
    }
    if (m_snapshot_arn_isSet) {
        obj.insert(QString("snapshotArn"), ::OpenAPI::toJsonValue(m_snapshot_arn));
    }
    if (m_snapshot_creation_time_isSet) {
        obj.insert(QString("snapshotCreationTime"), ::OpenAPI::toJsonValue(m_snapshot_creation_time));
    }
    if (m_snapshot_name_isSet) {
        obj.insert(QString("snapshotName"), ::OpenAPI::toJsonValue(m_snapshot_name));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_subnet_ids.isSet()) {
        obj.insert(QString("subnetIds"), ::OpenAPI::toJsonValue(m_subnet_ids));
    }
    if (m_vpc_security_group_ids.isSet()) {
        obj.insert(QString("vpcSecurityGroupIds"), ::OpenAPI::toJsonValue(m_vpc_security_group_ids));
    }
    return obj;
}

QString OAICreateClusterSnapshotOutput_snapshot::getAdminUserName() const {
    return m_admin_user_name;
}
void OAICreateClusterSnapshotOutput_snapshot::setAdminUserName(const QString &admin_user_name) {
    m_admin_user_name = admin_user_name;
    m_admin_user_name_isSet = true;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_admin_user_name_Set() const{
    return m_admin_user_name_isSet;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_admin_user_name_Valid() const{
    return m_admin_user_name_isValid;
}

QString OAICreateClusterSnapshotOutput_snapshot::getClusterArn() const {
    return m_cluster_arn;
}
void OAICreateClusterSnapshotOutput_snapshot::setClusterArn(const QString &cluster_arn) {
    m_cluster_arn = cluster_arn;
    m_cluster_arn_isSet = true;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_cluster_arn_Set() const{
    return m_cluster_arn_isSet;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_cluster_arn_Valid() const{
    return m_cluster_arn_isValid;
}

QString OAICreateClusterSnapshotOutput_snapshot::getClusterCreationTime() const {
    return m_cluster_creation_time;
}
void OAICreateClusterSnapshotOutput_snapshot::setClusterCreationTime(const QString &cluster_creation_time) {
    m_cluster_creation_time = cluster_creation_time;
    m_cluster_creation_time_isSet = true;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_cluster_creation_time_Set() const{
    return m_cluster_creation_time_isSet;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_cluster_creation_time_Valid() const{
    return m_cluster_creation_time_isValid;
}

QString OAICreateClusterSnapshotOutput_snapshot::getKmsKeyId() const {
    return m_kms_key_id;
}
void OAICreateClusterSnapshotOutput_snapshot::setKmsKeyId(const QString &kms_key_id) {
    m_kms_key_id = kms_key_id;
    m_kms_key_id_isSet = true;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_kms_key_id_Set() const{
    return m_kms_key_id_isSet;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_kms_key_id_Valid() const{
    return m_kms_key_id_isValid;
}

QString OAICreateClusterSnapshotOutput_snapshot::getSnapshotArn() const {
    return m_snapshot_arn;
}
void OAICreateClusterSnapshotOutput_snapshot::setSnapshotArn(const QString &snapshot_arn) {
    m_snapshot_arn = snapshot_arn;
    m_snapshot_arn_isSet = true;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_snapshot_arn_Set() const{
    return m_snapshot_arn_isSet;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_snapshot_arn_Valid() const{
    return m_snapshot_arn_isValid;
}

QString OAICreateClusterSnapshotOutput_snapshot::getSnapshotCreationTime() const {
    return m_snapshot_creation_time;
}
void OAICreateClusterSnapshotOutput_snapshot::setSnapshotCreationTime(const QString &snapshot_creation_time) {
    m_snapshot_creation_time = snapshot_creation_time;
    m_snapshot_creation_time_isSet = true;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_snapshot_creation_time_Set() const{
    return m_snapshot_creation_time_isSet;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_snapshot_creation_time_Valid() const{
    return m_snapshot_creation_time_isValid;
}

QString OAICreateClusterSnapshotOutput_snapshot::getSnapshotName() const {
    return m_snapshot_name;
}
void OAICreateClusterSnapshotOutput_snapshot::setSnapshotName(const QString &snapshot_name) {
    m_snapshot_name = snapshot_name;
    m_snapshot_name_isSet = true;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_snapshot_name_Set() const{
    return m_snapshot_name_isSet;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_snapshot_name_Valid() const{
    return m_snapshot_name_isValid;
}

OAIStatus OAICreateClusterSnapshotOutput_snapshot::getStatus() const {
    return m_status;
}
void OAICreateClusterSnapshotOutput_snapshot::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_status_Valid() const{
    return m_status_isValid;
}

QList OAICreateClusterSnapshotOutput_snapshot::getSubnetIds() const {
    return m_subnet_ids;
}
void OAICreateClusterSnapshotOutput_snapshot::setSubnetIds(const QList &subnet_ids) {
    m_subnet_ids = subnet_ids;
    m_subnet_ids_isSet = true;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_subnet_ids_Set() const{
    return m_subnet_ids_isSet;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_subnet_ids_Valid() const{
    return m_subnet_ids_isValid;
}

QList OAICreateClusterSnapshotOutput_snapshot::getVpcSecurityGroupIds() const {
    return m_vpc_security_group_ids;
}
void OAICreateClusterSnapshotOutput_snapshot::setVpcSecurityGroupIds(const QList &vpc_security_group_ids) {
    m_vpc_security_group_ids = vpc_security_group_ids;
    m_vpc_security_group_ids_isSet = true;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_vpc_security_group_ids_Set() const{
    return m_vpc_security_group_ids_isSet;
}

bool OAICreateClusterSnapshotOutput_snapshot::is_vpc_security_group_ids_Valid() const{
    return m_vpc_security_group_ids_isValid;
}

bool OAICreateClusterSnapshotOutput_snapshot::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cluster_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cluster_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_snapshot_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_snapshot_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_snapshot_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnet_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_security_group_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateClusterSnapshotOutput_snapshot::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_admin_user_name_isValid && m_cluster_arn_isValid && m_cluster_creation_time_isValid && m_kms_key_id_isValid && m_snapshot_arn_isValid && m_snapshot_creation_time_isValid && m_snapshot_name_isValid && m_status_isValid && m_subnet_ids_isValid && m_vpc_security_group_ids_isValid && true;
}

} // namespace OpenAPI
