/**
 * Amazon DocumentDB Elastic Clusters
 * The new Amazon Elastic DocumentDB service endpoint.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRestoreClusterFromSnapshotOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRestoreClusterFromSnapshotOutput::OAIRestoreClusterFromSnapshotOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRestoreClusterFromSnapshotOutput::OAIRestoreClusterFromSnapshotOutput() {
    this->initializeModel();
}

OAIRestoreClusterFromSnapshotOutput::~OAIRestoreClusterFromSnapshotOutput() {}

void OAIRestoreClusterFromSnapshotOutput::initializeModel() {

    m_cluster_isSet = false;
    m_cluster_isValid = false;
}

void OAIRestoreClusterFromSnapshotOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRestoreClusterFromSnapshotOutput::fromJsonObject(QJsonObject json) {

    m_cluster_isValid = ::OpenAPI::fromJsonValue(m_cluster, json[QString("cluster")]);
    m_cluster_isSet = !json[QString("cluster")].isNull() && m_cluster_isValid;
}

QString OAIRestoreClusterFromSnapshotOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRestoreClusterFromSnapshotOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_cluster.isSet()) {
        obj.insert(QString("cluster"), ::OpenAPI::toJsonValue(m_cluster));
    }
    return obj;
}

OAIRestoreClusterFromSnapshotOutput_cluster OAIRestoreClusterFromSnapshotOutput::getCluster() const {
    return m_cluster;
}
void OAIRestoreClusterFromSnapshotOutput::setCluster(const OAIRestoreClusterFromSnapshotOutput_cluster &cluster) {
    m_cluster = cluster;
    m_cluster_isSet = true;
}

bool OAIRestoreClusterFromSnapshotOutput::is_cluster_Set() const{
    return m_cluster_isSet;
}

bool OAIRestoreClusterFromSnapshotOutput::is_cluster_Valid() const{
    return m_cluster_isValid;
}

bool OAIRestoreClusterFromSnapshotOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cluster.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRestoreClusterFromSnapshotOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_cluster_isValid && true;
}

} // namespace OpenAPI
