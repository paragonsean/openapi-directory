/**
 * Amazon DocumentDB Elastic Clusters
 * The new Amazon Elastic DocumentDB service endpoint.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateClusterOutput_cluster.h
 *
 * 
 */

#ifndef OAIUpdateClusterOutput_cluster_H
#define OAIUpdateClusterOutput_cluster_H

#include <QJsonObject>

#include "OAIAuth.h"
#include "OAIStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateClusterOutput_cluster : public OAIObject {
public:
    OAIUpdateClusterOutput_cluster();
    OAIUpdateClusterOutput_cluster(QString json);
    ~OAIUpdateClusterOutput_cluster() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdminUserName() const;
    void setAdminUserName(const QString &admin_user_name);
    bool is_admin_user_name_Set() const;
    bool is_admin_user_name_Valid() const;

    OAIAuth getAuthType() const;
    void setAuthType(const OAIAuth &auth_type);
    bool is_auth_type_Set() const;
    bool is_auth_type_Valid() const;

    QString getClusterArn() const;
    void setClusterArn(const QString &cluster_arn);
    bool is_cluster_arn_Set() const;
    bool is_cluster_arn_Valid() const;

    QString getClusterEndpoint() const;
    void setClusterEndpoint(const QString &cluster_endpoint);
    bool is_cluster_endpoint_Set() const;
    bool is_cluster_endpoint_Valid() const;

    QString getClusterName() const;
    void setClusterName(const QString &cluster_name);
    bool is_cluster_name_Set() const;
    bool is_cluster_name_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    QString getPreferredMaintenanceWindow() const;
    void setPreferredMaintenanceWindow(const QString &preferred_maintenance_window);
    bool is_preferred_maintenance_window_Set() const;
    bool is_preferred_maintenance_window_Valid() const;

    qint32 getShardCapacity() const;
    void setShardCapacity(const qint32 &shard_capacity);
    bool is_shard_capacity_Set() const;
    bool is_shard_capacity_Valid() const;

    qint32 getShardCount() const;
    void setShardCount(const qint32 &shard_count);
    bool is_shard_count_Set() const;
    bool is_shard_count_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList getSubnetIds() const;
    void setSubnetIds(const QList &subnet_ids);
    bool is_subnet_ids_Set() const;
    bool is_subnet_ids_Valid() const;

    QList getVpcSecurityGroupIds() const;
    void setVpcSecurityGroupIds(const QList &vpc_security_group_ids);
    bool is_vpc_security_group_ids_Set() const;
    bool is_vpc_security_group_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_admin_user_name;
    bool m_admin_user_name_isSet;
    bool m_admin_user_name_isValid;

    OAIAuth m_auth_type;
    bool m_auth_type_isSet;
    bool m_auth_type_isValid;

    QString m_cluster_arn;
    bool m_cluster_arn_isSet;
    bool m_cluster_arn_isValid;

    QString m_cluster_endpoint;
    bool m_cluster_endpoint_isSet;
    bool m_cluster_endpoint_isValid;

    QString m_cluster_name;
    bool m_cluster_name_isSet;
    bool m_cluster_name_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    QString m_preferred_maintenance_window;
    bool m_preferred_maintenance_window_isSet;
    bool m_preferred_maintenance_window_isValid;

    qint32 m_shard_capacity;
    bool m_shard_capacity_isSet;
    bool m_shard_capacity_isValid;

    qint32 m_shard_count;
    bool m_shard_count_isSet;
    bool m_shard_count_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList m_subnet_ids;
    bool m_subnet_ids_isSet;
    bool m_subnet_ids_isValid;

    QList m_vpc_security_group_ids;
    bool m_vpc_security_group_ids_isSet;
    bool m_vpc_security_group_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateClusterOutput_cluster)

#endif // OAIUpdateClusterOutput_cluster_H
