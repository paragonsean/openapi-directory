/**
 * Amazon DocumentDB Elastic Clusters
 * The new Amazon Elastic DocumentDB service endpoint.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStatus::OAIStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStatus::OAIStatus() {
    this->initializeModel();
}

OAIStatus::~OAIStatus() {}

void OAIStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CREATING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::CREATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UPDATING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::UPDATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VPC_ENDPOINT_LIMIT_EXCEEDED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::VPC_ENDPOINT_LIMIT_EXCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IP_ADDRESS_LIMIT_EXCEEDED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::IP_ADDRESS_LIMIT_EXCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INVALID_SECURITY_GROUP_ID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::INVALID_SECURITY_GROUP_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INVALID_SUBNET_ID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::INVALID_SUBNET_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INACCESSIBLE_ENCRYPTION_CREDS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::INACCESSIBLE_ENCRYPTION_CREDS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIStatus::CREATING:
            val = "CREATING";
            break;
        case eOAIStatus::ACTIVE:
            val = "ACTIVE";
            break;
        case eOAIStatus::DELETING:
            val = "DELETING";
            break;
        case eOAIStatus::UPDATING:
            val = "UPDATING";
            break;
        case eOAIStatus::VPC_ENDPOINT_LIMIT_EXCEEDED:
            val = "VPC_ENDPOINT_LIMIT_EXCEEDED";
            break;
        case eOAIStatus::IP_ADDRESS_LIMIT_EXCEEDED:
            val = "IP_ADDRESS_LIMIT_EXCEEDED";
            break;
        case eOAIStatus::INVALID_SECURITY_GROUP_ID:
            val = "INVALID_SECURITY_GROUP_ID";
            break;
        case eOAIStatus::INVALID_SUBNET_ID:
            val = "INVALID_SUBNET_ID";
            break;
        case eOAIStatus::INACCESSIBLE_ENCRYPTION_CREDS:
            val = "INACCESSIBLE_ENCRYPTION_CREDS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIStatus::eOAIStatus OAIStatus::getValue() const {
    return m_value;
}

void OAIStatus::setValue(const OAIStatus::eOAIStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
