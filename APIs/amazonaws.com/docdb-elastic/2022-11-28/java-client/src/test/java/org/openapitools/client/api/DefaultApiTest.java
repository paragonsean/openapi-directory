/*
 * Amazon DocumentDB Elastic Clusters
 * The new Amazon Elastic DocumentDB service endpoint.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateClusterOutput;
import org.openapitools.client.model.CreateClusterRequest;
import org.openapitools.client.model.CreateClusterSnapshotOutput;
import org.openapitools.client.model.CreateClusterSnapshotRequest;
import org.openapitools.client.model.DeleteClusterOutput;
import org.openapitools.client.model.DeleteClusterSnapshotOutput;
import org.openapitools.client.model.GetClusterOutput;
import org.openapitools.client.model.GetClusterSnapshotOutput;
import org.openapitools.client.model.ListClusterSnapshotsOutput;
import org.openapitools.client.model.ListClustersOutput;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.RestoreClusterFromSnapshotOutput;
import org.openapitools.client.model.RestoreClusterFromSnapshotRequest;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UpdateClusterOutput;
import org.openapitools.client.model.UpdateClusterRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Creates a new Elastic DocumentDB cluster and returns its Cluster structure.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createClusterTest() throws ApiException {
        CreateClusterRequest createClusterRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateClusterOutput response = api.createCluster(createClusterRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a snapshot of a cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createClusterSnapshotTest() throws ApiException {
        CreateClusterSnapshotRequest createClusterSnapshotRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateClusterSnapshotOutput response = api.createClusterSnapshot(createClusterSnapshotRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Delete a Elastic DocumentDB cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteClusterTest() throws ApiException {
        String clusterArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteClusterOutput response = api.deleteCluster(clusterArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Delete a Elastic DocumentDB snapshot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteClusterSnapshotTest() throws ApiException {
        String snapshotArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteClusterSnapshotOutput response = api.deleteClusterSnapshot(snapshotArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns information about a specific Elastic DocumentDB cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClusterTest() throws ApiException {
        String clusterArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetClusterOutput response = api.getCluster(clusterArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns information about a specific Elastic DocumentDB snapshot
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClusterSnapshotTest() throws ApiException {
        String snapshotArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetClusterSnapshotOutput response = api.getClusterSnapshot(snapshotArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns information about Elastic DocumentDB snapshots for a specified cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listClusterSnapshotsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String clusterArn = null;
        Integer maxResults = null;
        String nextToken = null;
        ListClusterSnapshotsOutput response = api.listClusterSnapshots(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, clusterArn, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns information about provisioned Elastic DocumentDB clusters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listClustersTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        ListClustersOutput response = api.listClusters(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists all tags on a Elastic DocumentDB resource
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Restores a Elastic DocumentDB cluster from a snapshot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void restoreClusterFromSnapshotTest() throws ApiException {
        String snapshotArn = null;
        RestoreClusterFromSnapshotRequest restoreClusterFromSnapshotRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RestoreClusterFromSnapshotOutput response = api.restoreClusterFromSnapshot(snapshotArn, restoreClusterFromSnapshotRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Adds metadata tags to a Elastic DocumentDB resource
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String resourceArn = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(resourceArn, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes metadata tags to a Elastic DocumentDB resource
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String resourceArn = null;
        List<String> tagKeys = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(resourceArn, tagKeys, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Modifies a Elastic DocumentDB cluster. This includes updating admin-username/password, upgrading API version setting up a backup window and maintenance window
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateClusterTest() throws ApiException {
        String clusterArn = null;
        UpdateClusterRequest updateClusterRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateClusterOutput response = api.updateCluster(clusterArn, updateClusterRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
