openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: The new Amazon Elastic DocumentDB service endpoint.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon DocumentDB Elastic Clusters
  version: 2022-11-28
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: docdb-elastic
  x-aws-signingName: docdb-elastic
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/docdb-elastic-2022-11-28.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/docdb-elastic/
servers:
- description: The DocDB Elastic multi-region endpoint
  url: "http://docdb-elastic.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The DocDB Elastic multi-region endpoint
  url: "https://docdb-elastic.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The DocDB Elastic endpoint for China (Beijing) and China (Ningxia)
  url: "http://docdb-elastic.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The DocDB Elastic endpoint for China (Beijing) and China (Ningxia)
  url: "https://docdb-elastic.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /cluster:
    post:
      description: Creates a new Elastic DocumentDB cluster and returns its Cluster
        structure.
      operationId: CreateCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCluster_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /cluster-snapshot:
    post:
      description: Creates a snapshot of a cluster.
      operationId: CreateClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterSnapshot_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterSnapshotOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /cluster/{clusterArn}:
    delete:
      description: Delete a Elastic DocumentDB cluster.
      operationId: DeleteCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The arn of the Elastic DocumentDB cluster that is to be deleted.
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClusterOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    get:
      description: Returns information about a specific Elastic DocumentDB cluster.
      operationId: GetCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The arn of the Elastic DocumentDB cluster.
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    put:
      description: "Modifies a Elastic DocumentDB cluster. This includes updating\
        \ admin-username/password, upgrading API version setting up a backup window\
        \ and maintenance window"
      operationId: UpdateCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The arn of the Elastic DocumentDB cluster.
        explode: false
        in: path
        name: clusterArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCluster_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClusterOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /cluster-snapshot/{snapshotArn}:
    delete:
      description: Delete a Elastic DocumentDB snapshot.
      operationId: DeleteClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The arn of the Elastic DocumentDB snapshot that is to be deleted.
        explode: false
        in: path
        name: snapshotArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClusterSnapshotOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    get:
      description: Returns information about a specific Elastic DocumentDB snapshot
      operationId: GetClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The arn of the Elastic DocumentDB snapshot.
        explode: false
        in: path
        name: snapshotArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterSnapshotOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /cluster-snapshots:
    get:
      description: Returns information about Elastic DocumentDB snapshots for a specified
        cluster.
      operationId: ListClusterSnapshots
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The arn of the Elastic DocumentDB cluster.
        explode: true
        in: query
        name: clusterArn
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of entries to recieve in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 20
          type: integer
        style: form
      - description: The nextToken which is used the get the next page of data.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          description: "<p>Token or cursor used in paginated operations.</p> <p>When\
            \ this value is provided as operation input, the service returns results\
            \ from where the previous response left off. When this value is present\
            \ in operation output, it indicates that there are more results to retrieve.</p>\
            \ <p>This should be opaque to not expose implementation details and potentially\
            \ versioned to allow evolution of pagination strategy.</p>"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterSnapshotsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /clusters:
    get:
      description: Returns information about provisioned Elastic DocumentDB clusters.
      operationId: ListClusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of entries to recieve in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The nextToken which is used the get the next page of data.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          description: "<p>Token or cursor used in paginated operations.</p> <p>When\
            \ this value is provided as operation input, the service returns results\
            \ from where the previous response left off. When this value is present\
            \ in operation output, it indicates that there are more results to retrieve.</p>\
            \ <p>This should be opaque to not expose implementation details and potentially\
            \ versioned to allow evolution of pagination strategy.</p>"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Lists all tags on a Elastic DocumentDB resource
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The arn of the Elastic DocumentDB resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: Adds metadata tags to a Elastic DocumentDB resource
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The arn of the Elastic DocumentDB resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /cluster-snapshot/{snapshotArn}/restore:
    post:
      description: Restores a Elastic DocumentDB cluster from a snapshot.
      operationId: RestoreClusterFromSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The arn of the Elastic DocumentDB snapshot.
        explode: false
        in: path
        name: snapshotArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreClusterFromSnapshot_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreClusterFromSnapshotOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes metadata tags to a Elastic DocumentDB resource
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The arn of the Elastic DocumentDB resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: simple
      - description: The tag keys to be removed from the Elastic DocumentDB resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateClusterOutput:
      example:
        cluster:
          clusterEndpoint: ""
          vpcSecurityGroupIds: ""
          adminUserName: ""
          clusterArn: ""
          createTime: ""
          shardCapacity: ""
          clusterName: ""
          preferredMaintenanceWindow: ""
          kmsKeyId: ""
          authType: ""
          shardCount: ""
          status: ""
          subnetIds: ""
      properties:
        cluster:
          $ref: '#/components/schemas/CreateClusterOutput_cluster'
      required:
      - cluster
      type: object
    String:
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    ThrottlingException: {}
    ValidationException: {}
    ServiceQuotaExceededException: {}
    ConflictException: {}
    InternalServerException: {}
    AccessDeniedException: {}
    CreateClusterSnapshotOutput:
      example:
        snapshot:
          clusterArn: ""
          vpcSecurityGroupIds: ""
          adminUserName: ""
          clusterCreationTime: ""
          snapshotCreationTime: ""
          snapshotName: ""
          snapshotArn: ""
          kmsKeyId: ""
          status: ""
          subnetIds: ""
      properties:
        snapshot:
          $ref: '#/components/schemas/CreateClusterSnapshotOutput_snapshot'
      required:
      - snapshot
      type: object
    ResourceNotFoundException: {}
    DeleteClusterOutput:
      example:
        cluster:
          clusterEndpoint: ""
          vpcSecurityGroupIds: ""
          adminUserName: ""
          clusterArn: ""
          createTime: ""
          shardCapacity: ""
          clusterName: ""
          preferredMaintenanceWindow: ""
          kmsKeyId: ""
          authType: ""
          shardCount: ""
          status: ""
          subnetIds: ""
      properties:
        cluster:
          $ref: '#/components/schemas/DeleteClusterOutput_cluster'
      required:
      - cluster
      type: object
    DeleteClusterSnapshotOutput:
      example:
        snapshot:
          clusterArn: ""
          vpcSecurityGroupIds: ""
          adminUserName: ""
          clusterCreationTime: ""
          snapshotCreationTime: ""
          snapshotName: ""
          snapshotArn: ""
          kmsKeyId: ""
          status: ""
          subnetIds: ""
      properties:
        snapshot:
          $ref: '#/components/schemas/DeleteClusterSnapshotOutput_snapshot'
      required:
      - snapshot
      type: object
    GetClusterOutput:
      example:
        cluster:
          clusterEndpoint: ""
          vpcSecurityGroupIds: ""
          adminUserName: ""
          clusterArn: ""
          createTime: ""
          shardCapacity: ""
          clusterName: ""
          preferredMaintenanceWindow: ""
          kmsKeyId: ""
          authType: ""
          shardCount: ""
          status: ""
          subnetIds: ""
      properties:
        cluster:
          $ref: '#/components/schemas/GetClusterOutput_cluster'
      required:
      - cluster
      type: object
    GetClusterSnapshotOutput:
      example:
        snapshot:
          clusterArn: ""
          vpcSecurityGroupIds: ""
          adminUserName: ""
          clusterCreationTime: ""
          snapshotCreationTime: ""
          snapshotName: ""
          snapshotArn: ""
          kmsKeyId: ""
          status: ""
          subnetIds: ""
      properties:
        snapshot:
          $ref: '#/components/schemas/GetClusterSnapshotOutput_snapshot'
      required:
      - snapshot
      type: object
    ListClusterSnapshotsOutput:
      example:
        snapshots: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "<p>The response will provide a nextToken if there is more\
              \ data beyond the maxResults.</p> <p>If there is no more data in the\
              \ responce, the nextToken will not be returned.</p>"
        snapshots:
          allOf:
          - $ref: '#/components/schemas/ClusterSnapshotList'
          - description: A list of Elastic DocumentDB snapshots for a specified cluster.
      type: object
    ListClustersOutput:
      example:
        nextToken: ""
        clusters: ""
      properties:
        clusters:
          allOf:
          - $ref: '#/components/schemas/ClusterList'
          - description: A list of Elastic DocumentDB cluster.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "<p>The response will provide a nextToken if there is more\
              \ data beyond the maxResults.</p> <p>If there is no more data in the\
              \ responce, the nextToken will not be returned.</p>"
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tags for the specified Elastic DocumentDB resource.
      type: object
    RestoreClusterFromSnapshotOutput:
      example:
        cluster:
          clusterEndpoint: ""
          vpcSecurityGroupIds: ""
          adminUserName: ""
          clusterArn: ""
          createTime: ""
          shardCapacity: ""
          clusterName: ""
          preferredMaintenanceWindow: ""
          kmsKeyId: ""
          authType: ""
          shardCount: ""
          status: ""
          subnetIds: ""
      properties:
        cluster:
          $ref: '#/components/schemas/RestoreClusterFromSnapshotOutput_cluster'
      required:
      - cluster
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      type: string
    UpdateClusterOutput:
      example:
        cluster:
          clusterEndpoint: ""
          vpcSecurityGroupIds: ""
          adminUserName: ""
          clusterArn: ""
          createTime: ""
          shardCapacity: ""
          clusterName: ""
          preferredMaintenanceWindow: ""
          kmsKeyId: ""
          authType: ""
          shardCount: ""
          status: ""
          subnetIds: ""
      properties:
        cluster:
          $ref: '#/components/schemas/UpdateClusterOutput_cluster'
      required:
      - cluster
      type: object
    Arn:
      maxLength: 1011
      minLength: 1
      type: string
    Auth:
      enum:
      - PLAIN_TEXT
      - SECRET_ARN
      type: string
    Integer:
      type: integer
    Status:
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - UPDATING
      - VPC_ENDPOINT_LIMIT_EXCEEDED
      - IP_ADDRESS_LIMIT_EXCEEDED
      - INVALID_SECURITY_GROUP_ID
      - INVALID_SUBNET_ID
      - INACCESSIBLE_ENCRYPTION_CREDS
      type: string
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    Cluster:
      description: Returns information about a specific Elastic DocumentDB cluster.
      properties:
        adminUserName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Elastic DocumentDB cluster administrator.
        authType:
          allOf:
          - $ref: '#/components/schemas/Auth'
          - description: The authentication type for the Elastic DocumentDB cluster.
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The arn of the Elastic DocumentDB cluster.
        clusterEndpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The URL used to connect to the Elastic DocumentDB cluster.
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Elastic DocumentDB cluster.
        createTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time when the Elastic DocumentDB cluster was created
              in Universal Coordinated Time (UTC).
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The KMS key identifier to use to encrypt the Elastic DocumentDB
              cluster.
        preferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The weekly time range during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC).</p> <p> <i>Format</i>:\
              \ <code>ddd:hh24:mi-ddd:hh24:mi</code> </p>"
        shardCapacity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The capacity of each shard in the Elastic DocumentDB cluster.
        shardCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of shards in the Elastic DocumentDB cluster.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the Elastic DocumentDB cluster.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The Amazon EC2 subnet IDs for the Elastic DocumentDB cluster.
        vpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: A list of EC2 VPC security groups associated with this cluster.
      required:
      - adminUserName
      - authType
      - clusterArn
      - clusterEndpoint
      - clusterName
      - createTime
      - kmsKeyId
      - preferredMaintenanceWindow
      - shardCapacity
      - shardCount
      - status
      - subnetIds
      - vpcSecurityGroupIds
      type: object
    ClusterInList:
      description: A list of Elastic DocumentDB cluster.
      properties:
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The arn of the Elastic DocumentDB cluster.
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Elastic DocumentDB cluster.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the Elastic DocumentDB cluster.
      required:
      - clusterArn
      - clusterName
      - status
      type: object
    ClusterList:
      items:
        $ref: '#/components/schemas/ClusterInList'
      type: array
    ClusterSnapshot:
      description: Returns information about a specific Elastic DocumentDB snapshot.
      properties:
        adminUserName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Elastic DocumentDB cluster administrator.
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The arn of the Elastic DocumentDB cluster.
        clusterCreationTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time when the Elastic DocumentDB cluster was created
              in Universal Coordinated Time (UTC).
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The KMS key identifier to use to encrypt the Elastic DocumentDB
              cluster.
        snapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The arn of the Elastic DocumentDB snapshot
        snapshotCreationTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time when the Elastic DocumentDB snapshot was created
              in Universal Coordinated Time (UTC).
        snapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Elastic DocumentDB snapshot.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the Elastic DocumentDB snapshot.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: A list of the IDs of subnets associated with the DB cluster
              snapshot.
        vpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: A list of the IDs of the VPC security groups associated with
              the cluster snapshot.
      required:
      - adminUserName
      - clusterArn
      - clusterCreationTime
      - kmsKeyId
      - snapshotArn
      - snapshotCreationTime
      - snapshotName
      - status
      - subnetIds
      - vpcSecurityGroupIds
      type: object
    ClusterSnapshotInList:
      description: A list of Elastic DocumentDB snapshots.
      properties:
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The arn of the Elastic DocumentDB cluster.
        snapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The arn of the Elastic DocumentDB snapshot
        snapshotCreationTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time when the Elastic DocumentDB snapshot was created
              in Universal Coordinated Time (UTC).
        snapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Elastic DocumentDB snapshot.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the Elastic DocumentDB snapshot.
      required:
      - clusterArn
      - snapshotArn
      - snapshotCreationTime
      - snapshotName
      - status
      type: object
    ClusterSnapshotList:
      items:
        $ref: '#/components/schemas/ClusterSnapshotInList'
      type: array
    Password:
      format: password
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    CreateClusterInput:
      properties:
        adminUserName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the Elastic DocumentDB cluster administrator.</p>
              <p> <i>Constraints</i>:</p> <ul> <li> <p>Must be from 1 to 63 letters
              or numbers.</p> </li> <li> <p>The first character must be a letter.</p>
              </li> <li> <p>Cannot be a reserved word.</p> </li> </ul>
        adminUserPassword:
          allOf:
          - $ref: '#/components/schemas/Password'
          - description: "<p>The password for the Elastic DocumentDB cluster administrator\
              \ and can contain any printable ASCII characters.</p> <p> <i>Constraints</i>:</p>\
              \ <ul> <li> <p>Must contain from 8 to 100 characters.</p> </li> <li>\
              \ <p>Cannot contain a forward slash (/), double quote (\"), or the \"\
              at\" symbol (@).</p> </li> </ul>"
        authType:
          allOf:
          - $ref: '#/components/schemas/Auth'
          - description: The authentication type for the Elastic DocumentDB cluster.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The client token for the Elastic DocumentDB cluster.
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the new Elastic DocumentDB cluster. This\
              \ parameter is stored as a lowercase string.</p> <p> <i>Constraints</i>:</p>\
              \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>\
              \ </li> <li> <p>The first character must be a letter.</p> </li> <li>\
              \ <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>\
              \ </li> </ul> <p> <i>Example</i>: <code>my-cluster</code> </p>"
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The KMS key identifier to use to encrypt the new Elastic\
              \ DocumentDB cluster.</p> <p>The KMS key identifier is the Amazon Resource\
              \ Name (ARN) for the KMS encryption key. If you are creating a cluster\
              \ using the same Amazon account that owns this KMS encryption key, you\
              \ can use the KMS key alias instead of the ARN as the KMS encryption\
              \ key.</p> <p>If an encryption key is not specified, Elastic DocumentDB\
              \ uses the default encryption key that KMS creates for your account.\
              \ Your account has a different default encryption key for each Amazon\
              \ Region.</p>"
        preferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The weekly time range during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC).</p> <p> <i>Format</i>:\
              \ <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> <i>Default</i>: a 30-minute\
              \ window selected at random from an 8-hour block of time for each Amazon\
              \ Web Services Region, occurring on a random day of the week.</p> <p>\
              \ <i>Valid days</i>: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p> <i>Constraints</i>:\
              \ Minimum 30-minute window.</p>"
        shardCapacity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The capacity of each shard in the new Elastic DocumentDB
              cluster.
        shardCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of shards to create in the new Elastic DocumentDB
              cluster.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The Amazon EC2 subnet IDs for the new Elastic DocumentDB
              cluster.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to be assigned to the new Elastic DocumentDB cluster.
        vpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: A list of EC2 VPC security groups to associate with the new
              Elastic DocumentDB cluster.
      required:
      - adminUserName
      - adminUserPassword
      - authType
      - clusterName
      - shardCapacity
      - shardCount
      title: CreateClusterInput
      type: object
    CreateClusterSnapshotInputSnapshotNameString:
      maxLength: 63
      minLength: 1
      type: string
    CreateClusterSnapshotInput:
      properties:
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The arn of the Elastic DocumentDB cluster that the snapshot
              will be taken from.
        snapshotName:
          allOf:
          - $ref: '#/components/schemas/CreateClusterSnapshotInputSnapshotNameString'
          - description: The name of the Elastic DocumentDB snapshot.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to be assigned to the new Elastic DocumentDB snapshot.
      required:
      - clusterArn
      - snapshotName
      title: CreateClusterSnapshotInput
      type: object
    DeleteClusterInput:
      properties: {}
      title: DeleteClusterInput
      type: object
    DeleteClusterSnapshotInput:
      properties: {}
      title: DeleteClusterSnapshotInput
      type: object
    GetClusterInput:
      properties: {}
      title: GetClusterInput
      type: object
    GetClusterSnapshotInput:
      properties: {}
      title: GetClusterSnapshotInput
      type: object
    ListClusterSnapshotsInputMaxResultsInteger:
      maximum: 100
      minimum: 20
      type: integer
    PaginationToken:
      description: "<p>Token or cursor used in paginated operations.</p> <p>When this\
        \ value is provided as operation input, the service returns results from where\
        \ the previous response left off. When this value is present in operation\
        \ output, it indicates that there are more results to retrieve.</p> <p>This\
        \ should be opaque to not expose implementation details and potentially versioned\
        \ to allow evolution of pagination strategy.</p>"
      type: string
    ListClusterSnapshotsInput:
      properties: {}
      title: ListClusterSnapshotsInput
      type: object
    ListClustersInputMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    ListClustersInput:
      properties: {}
      title: ListClustersInput
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    RestoreClusterFromSnapshotInput:
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Elastic DocumentDB cluster.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The KMS key identifier to use to encrypt the new Elastic\
              \ DocumentDB cluster.</p> <p>The KMS key identifier is the Amazon Resource\
              \ Name (ARN) for the KMS encryption key. If you are creating a cluster\
              \ using the same Amazon account that owns this KMS encryption key, you\
              \ can use the KMS key alias instead of the ARN as the KMS encryption\
              \ key.</p> <p>If an encryption key is not specified here, Elastic DocumentDB\
              \ uses the default encryption key that KMS creates for your account.\
              \ Your account has a different default encryption key for each Amazon\
              \ Region.</p>"
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The Amazon EC2 subnet IDs for the Elastic DocumentDB cluster.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "A list of the tag names to be assigned to the restored DB\
              \ cluster, in the form of an array of key-value pairs in which the key\
              \ is the tag name and the value is the key value."
        vpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: A list of EC2 VPC security groups to associate with the Elastic
              DocumentDB cluster.
      required:
      - clusterName
      title: RestoreClusterFromSnapshotInput
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to be assigned to the Elastic DocumentDB resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateClusterInput:
      properties:
        adminUserPassword:
          allOf:
          - $ref: '#/components/schemas/Password'
          - description: "<p>The password for the Elastic DocumentDB cluster administrator.\
              \ This password can contain any printable ASCII character except forward\
              \ slash (/), double quote (\"), or the \"at\" symbol (@).</p> <p> <i>Constraints</i>:\
              \ Must contain from 8 to 100 characters.</p>"
        authType:
          allOf:
          - $ref: '#/components/schemas/Auth'
          - description: The authentication type for the Elastic DocumentDB cluster.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The client token for the Elastic DocumentDB cluster.
        preferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The weekly time range during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC).</p> <p> <i>Format</i>:\
              \ <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> <i>Default</i>: a 30-minute\
              \ window selected at random from an 8-hour block of time for each Amazon\
              \ Web Services Region, occurring on a random day of the week.</p> <p>\
              \ <i>Valid days</i>: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p> <i>Constraints</i>:\
              \ Minimum 30-minute window.</p>"
        shardCapacity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The capacity of each shard in the Elastic DocumentDB cluster.
        shardCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of shards to create in the Elastic DocumentDB
              cluster.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The number of shards to create in the Elastic DocumentDB
              cluster.
        vpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: A list of EC2 VPC security groups to associate with the new
              Elastic DocumentDB cluster.
      title: UpdateClusterInput
      type: object
    CreateCluster_request:
      properties:
        adminUserName:
          description: <p>The name of the Elastic DocumentDB cluster administrator.</p>
            <p> <i>Constraints</i>:</p> <ul> <li> <p>Must be from 1 to 63 letters
            or numbers.</p> </li> <li> <p>The first character must be a letter.</p>
            </li> <li> <p>Cannot be a reserved word.</p> </li> </ul>
          type: string
        adminUserPassword:
          description: "<p>The password for the Elastic DocumentDB cluster administrator\
            \ and can contain any printable ASCII characters.</p> <p> <i>Constraints</i>:</p>\
            \ <ul> <li> <p>Must contain from 8 to 100 characters.</p> </li> <li> <p>Cannot\
            \ contain a forward slash (/), double quote (\"), or the \"at\" symbol\
            \ (@).</p> </li> </ul>"
          format: password
          type: string
        authType:
          description: The authentication type for the Elastic DocumentDB cluster.
          enum:
          - PLAIN_TEXT
          - SECRET_ARN
          type: string
        clientToken:
          description: The client token for the Elastic DocumentDB cluster.
          type: string
        clusterName:
          description: "<p>The name of the new Elastic DocumentDB cluster. This parameter\
            \ is stored as a lowercase string.</p> <p> <i>Constraints</i>:</p> <ul>\
            \ <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>\
            \ </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot\
            \ end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>\
            \ <p> <i>Example</i>: <code>my-cluster</code> </p>"
          type: string
        kmsKeyId:
          description: "<p>The KMS key identifier to use to encrypt the new Elastic\
            \ DocumentDB cluster.</p> <p>The KMS key identifier is the Amazon Resource\
            \ Name (ARN) for the KMS encryption key. If you are creating a cluster\
            \ using the same Amazon account that owns this KMS encryption key, you\
            \ can use the KMS key alias instead of the ARN as the KMS encryption key.</p>\
            \ <p>If an encryption key is not specified, Elastic DocumentDB uses the\
            \ default encryption key that KMS creates for your account. Your account\
            \ has a different default encryption key for each Amazon Region.</p>"
          type: string
        preferredMaintenanceWindow:
          description: "<p>The weekly time range during which system maintenance can\
            \ occur, in Universal Coordinated Time (UTC).</p> <p> <i>Format</i>: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
            \ </p> <p> <i>Default</i>: a 30-minute window selected at random from\
            \ an 8-hour block of time for each Amazon Web Services Region, occurring\
            \ on a random day of the week.</p> <p> <i>Valid days</i>: Mon, Tue, Wed,\
            \ Thu, Fri, Sat, Sun</p> <p> <i>Constraints</i>: Minimum 30-minute window.</p>"
          type: string
        shardCapacity:
          description: The capacity of each shard in the new Elastic DocumentDB cluster.
          type: integer
        shardCount:
          description: The number of shards to create in the new Elastic DocumentDB
            cluster.
          type: integer
        subnetIds:
          description: The Amazon EC2 subnet IDs for the new Elastic DocumentDB cluster.
          items:
            $ref: '#/components/schemas/String'
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to be assigned to the new Elastic DocumentDB cluster.
          type: object
        vpcSecurityGroupIds:
          description: A list of EC2 VPC security groups to associate with the new
            Elastic DocumentDB cluster.
          items:
            $ref: '#/components/schemas/String'
          type: array
      required:
      - adminUserName
      - adminUserPassword
      - authType
      - clusterName
      - shardCapacity
      - shardCount
      type: object
    CreateClusterSnapshot_request:
      properties:
        clusterArn:
          description: The arn of the Elastic DocumentDB cluster that the snapshot
            will be taken from.
          type: string
        snapshotName:
          description: The name of the Elastic DocumentDB snapshot.
          maxLength: 63
          minLength: 1
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to be assigned to the new Elastic DocumentDB snapshot.
          type: object
      required:
      - clusterArn
      - snapshotName
      type: object
    UpdateCluster_request:
      properties:
        adminUserPassword:
          description: "<p>The password for the Elastic DocumentDB cluster administrator.\
            \ This password can contain any printable ASCII character except forward\
            \ slash (/), double quote (\"), or the \"at\" symbol (@).</p> <p> <i>Constraints</i>:\
            \ Must contain from 8 to 100 characters.</p>"
          format: password
          type: string
        authType:
          description: The authentication type for the Elastic DocumentDB cluster.
          enum:
          - PLAIN_TEXT
          - SECRET_ARN
          type: string
        clientToken:
          description: The client token for the Elastic DocumentDB cluster.
          type: string
        preferredMaintenanceWindow:
          description: "<p>The weekly time range during which system maintenance can\
            \ occur, in Universal Coordinated Time (UTC).</p> <p> <i>Format</i>: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
            \ </p> <p> <i>Default</i>: a 30-minute window selected at random from\
            \ an 8-hour block of time for each Amazon Web Services Region, occurring\
            \ on a random day of the week.</p> <p> <i>Valid days</i>: Mon, Tue, Wed,\
            \ Thu, Fri, Sat, Sun</p> <p> <i>Constraints</i>: Minimum 30-minute window.</p>"
          type: string
        shardCapacity:
          description: The capacity of each shard in the Elastic DocumentDB cluster.
          type: integer
        shardCount:
          description: The number of shards to create in the Elastic DocumentDB cluster.
          type: integer
        subnetIds:
          description: The number of shards to create in the Elastic DocumentDB cluster.
          items:
            $ref: '#/components/schemas/String'
          type: array
        vpcSecurityGroupIds:
          description: A list of EC2 VPC security groups to associate with the new
            Elastic DocumentDB cluster.
          items:
            $ref: '#/components/schemas/String'
          type: array
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to be assigned to the Elastic DocumentDB resource.
          type: object
      required:
      - tags
      type: object
    RestoreClusterFromSnapshot_request:
      properties:
        clusterName:
          description: The name of the Elastic DocumentDB cluster.
          type: string
        kmsKeyId:
          description: "<p>The KMS key identifier to use to encrypt the new Elastic\
            \ DocumentDB cluster.</p> <p>The KMS key identifier is the Amazon Resource\
            \ Name (ARN) for the KMS encryption key. If you are creating a cluster\
            \ using the same Amazon account that owns this KMS encryption key, you\
            \ can use the KMS key alias instead of the ARN as the KMS encryption key.</p>\
            \ <p>If an encryption key is not specified here, Elastic DocumentDB uses\
            \ the default encryption key that KMS creates for your account. Your account\
            \ has a different default encryption key for each Amazon Region.</p>"
          type: string
        subnetIds:
          description: The Amazon EC2 subnet IDs for the Elastic DocumentDB cluster.
          items:
            $ref: '#/components/schemas/String'
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "A list of the tag names to be assigned to the restored DB\
            \ cluster, in the form of an array of key-value pairs in which the key\
            \ is the tag name and the value is the key value."
          type: object
        vpcSecurityGroupIds:
          description: A list of EC2 VPC security groups to associate with the Elastic
            DocumentDB cluster.
          items:
            $ref: '#/components/schemas/String'
          type: array
      required:
      - clusterName
      type: object
    CreateClusterOutput_cluster:
      allOf:
      - $ref: '#/components/schemas/Cluster'
      - description: The new Elastic DocumentDB cluster that has been created.
      example:
        clusterEndpoint: ""
        vpcSecurityGroupIds: ""
        adminUserName: ""
        clusterArn: ""
        createTime: ""
        shardCapacity: ""
        clusterName: ""
        preferredMaintenanceWindow: ""
        kmsKeyId: ""
        authType: ""
        shardCount: ""
        status: ""
        subnetIds: ""
    CreateClusterSnapshotOutput_snapshot:
      allOf:
      - $ref: '#/components/schemas/ClusterSnapshot'
      - description: Returns information about the new Elastic DocumentDB snapshot.
      example:
        clusterArn: ""
        vpcSecurityGroupIds: ""
        adminUserName: ""
        clusterCreationTime: ""
        snapshotCreationTime: ""
        snapshotName: ""
        snapshotArn: ""
        kmsKeyId: ""
        status: ""
        subnetIds: ""
    DeleteClusterOutput_cluster:
      allOf:
      - $ref: '#/components/schemas/Cluster'
      - description: Returns information about the newly deleted Elastic DocumentDB
          cluster.
      example:
        clusterEndpoint: ""
        vpcSecurityGroupIds: ""
        adminUserName: ""
        clusterArn: ""
        createTime: ""
        shardCapacity: ""
        clusterName: ""
        preferredMaintenanceWindow: ""
        kmsKeyId: ""
        authType: ""
        shardCount: ""
        status: ""
        subnetIds: ""
    DeleteClusterSnapshotOutput_snapshot:
      allOf:
      - $ref: '#/components/schemas/ClusterSnapshot'
      - description: Returns information about the newly deleted Elastic DocumentDB
          snapshot.
      example:
        clusterArn: ""
        vpcSecurityGroupIds: ""
        adminUserName: ""
        clusterCreationTime: ""
        snapshotCreationTime: ""
        snapshotName: ""
        snapshotArn: ""
        kmsKeyId: ""
        status: ""
        subnetIds: ""
    GetClusterOutput_cluster:
      allOf:
      - $ref: '#/components/schemas/Cluster'
      - description: Returns information about a specific Elastic DocumentDB cluster.
      example:
        clusterEndpoint: ""
        vpcSecurityGroupIds: ""
        adminUserName: ""
        clusterArn: ""
        createTime: ""
        shardCapacity: ""
        clusterName: ""
        preferredMaintenanceWindow: ""
        kmsKeyId: ""
        authType: ""
        shardCount: ""
        status: ""
        subnetIds: ""
    GetClusterSnapshotOutput_snapshot:
      allOf:
      - $ref: '#/components/schemas/ClusterSnapshot'
      - description: Returns information about a specific Elastic DocumentDB snapshot.
      example:
        clusterArn: ""
        vpcSecurityGroupIds: ""
        adminUserName: ""
        clusterCreationTime: ""
        snapshotCreationTime: ""
        snapshotName: ""
        snapshotArn: ""
        kmsKeyId: ""
        status: ""
        subnetIds: ""
    RestoreClusterFromSnapshotOutput_cluster:
      allOf:
      - $ref: '#/components/schemas/Cluster'
      - description: Returns information about a the restored Elastic DocumentDB cluster.
      example:
        clusterEndpoint: ""
        vpcSecurityGroupIds: ""
        adminUserName: ""
        clusterArn: ""
        createTime: ""
        shardCapacity: ""
        clusterName: ""
        preferredMaintenanceWindow: ""
        kmsKeyId: ""
        authType: ""
        shardCount: ""
        status: ""
        subnetIds: ""
    UpdateClusterOutput_cluster:
      allOf:
      - $ref: '#/components/schemas/Cluster'
      - description: Returns information about the updated Elastic DocumentDB cluster.
      example:
        clusterEndpoint: ""
        vpcSecurityGroupIds: ""
        adminUserName: ""
        clusterArn: ""
        createTime: ""
        shardCapacity: ""
        clusterName: ""
        preferredMaintenanceWindow: ""
        kmsKeyId: ""
        authType: ""
        shardCount: ""
        status: ""
        subnetIds: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

