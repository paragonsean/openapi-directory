# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class GetClusterSnapshotOutputSnapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_user_name: str=None, cluster_arn: str=None, cluster_creation_time: str=None, kms_key_id: str=None, snapshot_arn: str=None, snapshot_creation_time: str=None, snapshot_name: str=None, status: Status=None, subnet_ids: List=None, vpc_security_group_ids: List=None):
        """GetClusterSnapshotOutputSnapshot - a model defined in OpenAPI

        :param admin_user_name: The admin_user_name of this GetClusterSnapshotOutputSnapshot.
        :param cluster_arn: The cluster_arn of this GetClusterSnapshotOutputSnapshot.
        :param cluster_creation_time: The cluster_creation_time of this GetClusterSnapshotOutputSnapshot.
        :param kms_key_id: The kms_key_id of this GetClusterSnapshotOutputSnapshot.
        :param snapshot_arn: The snapshot_arn of this GetClusterSnapshotOutputSnapshot.
        :param snapshot_creation_time: The snapshot_creation_time of this GetClusterSnapshotOutputSnapshot.
        :param snapshot_name: The snapshot_name of this GetClusterSnapshotOutputSnapshot.
        :param status: The status of this GetClusterSnapshotOutputSnapshot.
        :param subnet_ids: The subnet_ids of this GetClusterSnapshotOutputSnapshot.
        :param vpc_security_group_ids: The vpc_security_group_ids of this GetClusterSnapshotOutputSnapshot.
        """
        self.openapi_types = {
            'admin_user_name': str,
            'cluster_arn': str,
            'cluster_creation_time': str,
            'kms_key_id': str,
            'snapshot_arn': str,
            'snapshot_creation_time': str,
            'snapshot_name': str,
            'status': Status,
            'subnet_ids': List,
            'vpc_security_group_ids': List
        }

        self.attribute_map = {
            'admin_user_name': 'adminUserName',
            'cluster_arn': 'clusterArn',
            'cluster_creation_time': 'clusterCreationTime',
            'kms_key_id': 'kmsKeyId',
            'snapshot_arn': 'snapshotArn',
            'snapshot_creation_time': 'snapshotCreationTime',
            'snapshot_name': 'snapshotName',
            'status': 'status',
            'subnet_ids': 'subnetIds',
            'vpc_security_group_ids': 'vpcSecurityGroupIds'
        }

        self._admin_user_name = admin_user_name
        self._cluster_arn = cluster_arn
        self._cluster_creation_time = cluster_creation_time
        self._kms_key_id = kms_key_id
        self._snapshot_arn = snapshot_arn
        self._snapshot_creation_time = snapshot_creation_time
        self._snapshot_name = snapshot_name
        self._status = status
        self._subnet_ids = subnet_ids
        self._vpc_security_group_ids = vpc_security_group_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetClusterSnapshotOutputSnapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetClusterSnapshotOutput_snapshot of this GetClusterSnapshotOutputSnapshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_user_name(self):
        """Gets the admin_user_name of this GetClusterSnapshotOutputSnapshot.


        :return: The admin_user_name of this GetClusterSnapshotOutputSnapshot.
        :rtype: str
        """
        return self._admin_user_name

    @admin_user_name.setter
    def admin_user_name(self, admin_user_name):
        """Sets the admin_user_name of this GetClusterSnapshotOutputSnapshot.


        :param admin_user_name: The admin_user_name of this GetClusterSnapshotOutputSnapshot.
        :type admin_user_name: str
        """
        if admin_user_name is None:
            raise ValueError("Invalid value for `admin_user_name`, must not be `None`")

        self._admin_user_name = admin_user_name

    @property
    def cluster_arn(self):
        """Gets the cluster_arn of this GetClusterSnapshotOutputSnapshot.


        :return: The cluster_arn of this GetClusterSnapshotOutputSnapshot.
        :rtype: str
        """
        return self._cluster_arn

    @cluster_arn.setter
    def cluster_arn(self, cluster_arn):
        """Sets the cluster_arn of this GetClusterSnapshotOutputSnapshot.


        :param cluster_arn: The cluster_arn of this GetClusterSnapshotOutputSnapshot.
        :type cluster_arn: str
        """
        if cluster_arn is None:
            raise ValueError("Invalid value for `cluster_arn`, must not be `None`")

        self._cluster_arn = cluster_arn

    @property
    def cluster_creation_time(self):
        """Gets the cluster_creation_time of this GetClusterSnapshotOutputSnapshot.


        :return: The cluster_creation_time of this GetClusterSnapshotOutputSnapshot.
        :rtype: str
        """
        return self._cluster_creation_time

    @cluster_creation_time.setter
    def cluster_creation_time(self, cluster_creation_time):
        """Sets the cluster_creation_time of this GetClusterSnapshotOutputSnapshot.


        :param cluster_creation_time: The cluster_creation_time of this GetClusterSnapshotOutputSnapshot.
        :type cluster_creation_time: str
        """
        if cluster_creation_time is None:
            raise ValueError("Invalid value for `cluster_creation_time`, must not be `None`")

        self._cluster_creation_time = cluster_creation_time

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this GetClusterSnapshotOutputSnapshot.


        :return: The kms_key_id of this GetClusterSnapshotOutputSnapshot.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this GetClusterSnapshotOutputSnapshot.


        :param kms_key_id: The kms_key_id of this GetClusterSnapshotOutputSnapshot.
        :type kms_key_id: str
        """
        if kms_key_id is None:
            raise ValueError("Invalid value for `kms_key_id`, must not be `None`")

        self._kms_key_id = kms_key_id

    @property
    def snapshot_arn(self):
        """Gets the snapshot_arn of this GetClusterSnapshotOutputSnapshot.


        :return: The snapshot_arn of this GetClusterSnapshotOutputSnapshot.
        :rtype: str
        """
        return self._snapshot_arn

    @snapshot_arn.setter
    def snapshot_arn(self, snapshot_arn):
        """Sets the snapshot_arn of this GetClusterSnapshotOutputSnapshot.


        :param snapshot_arn: The snapshot_arn of this GetClusterSnapshotOutputSnapshot.
        :type snapshot_arn: str
        """
        if snapshot_arn is None:
            raise ValueError("Invalid value for `snapshot_arn`, must not be `None`")

        self._snapshot_arn = snapshot_arn

    @property
    def snapshot_creation_time(self):
        """Gets the snapshot_creation_time of this GetClusterSnapshotOutputSnapshot.


        :return: The snapshot_creation_time of this GetClusterSnapshotOutputSnapshot.
        :rtype: str
        """
        return self._snapshot_creation_time

    @snapshot_creation_time.setter
    def snapshot_creation_time(self, snapshot_creation_time):
        """Sets the snapshot_creation_time of this GetClusterSnapshotOutputSnapshot.


        :param snapshot_creation_time: The snapshot_creation_time of this GetClusterSnapshotOutputSnapshot.
        :type snapshot_creation_time: str
        """
        if snapshot_creation_time is None:
            raise ValueError("Invalid value for `snapshot_creation_time`, must not be `None`")

        self._snapshot_creation_time = snapshot_creation_time

    @property
    def snapshot_name(self):
        """Gets the snapshot_name of this GetClusterSnapshotOutputSnapshot.


        :return: The snapshot_name of this GetClusterSnapshotOutputSnapshot.
        :rtype: str
        """
        return self._snapshot_name

    @snapshot_name.setter
    def snapshot_name(self, snapshot_name):
        """Sets the snapshot_name of this GetClusterSnapshotOutputSnapshot.


        :param snapshot_name: The snapshot_name of this GetClusterSnapshotOutputSnapshot.
        :type snapshot_name: str
        """
        if snapshot_name is None:
            raise ValueError("Invalid value for `snapshot_name`, must not be `None`")

        self._snapshot_name = snapshot_name

    @property
    def status(self):
        """Gets the status of this GetClusterSnapshotOutputSnapshot.


        :return: The status of this GetClusterSnapshotOutputSnapshot.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetClusterSnapshotOutputSnapshot.


        :param status: The status of this GetClusterSnapshotOutputSnapshot.
        :type status: Status
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def subnet_ids(self):
        """Gets the subnet_ids of this GetClusterSnapshotOutputSnapshot.


        :return: The subnet_ids of this GetClusterSnapshotOutputSnapshot.
        :rtype: List
        """
        return self._subnet_ids

    @subnet_ids.setter
    def subnet_ids(self, subnet_ids):
        """Sets the subnet_ids of this GetClusterSnapshotOutputSnapshot.


        :param subnet_ids: The subnet_ids of this GetClusterSnapshotOutputSnapshot.
        :type subnet_ids: List
        """
        if subnet_ids is None:
            raise ValueError("Invalid value for `subnet_ids`, must not be `None`")

        self._subnet_ids = subnet_ids

    @property
    def vpc_security_group_ids(self):
        """Gets the vpc_security_group_ids of this GetClusterSnapshotOutputSnapshot.


        :return: The vpc_security_group_ids of this GetClusterSnapshotOutputSnapshot.
        :rtype: List
        """
        return self._vpc_security_group_ids

    @vpc_security_group_ids.setter
    def vpc_security_group_ids(self, vpc_security_group_ids):
        """Sets the vpc_security_group_ids of this GetClusterSnapshotOutputSnapshot.


        :param vpc_security_group_ids: The vpc_security_group_ids of this GetClusterSnapshotOutputSnapshot.
        :type vpc_security_group_ids: List
        """
        if vpc_security_group_ids is None:
            raise ValueError("Invalid value for `vpc_security_group_ids`, must not be `None`")

        self._vpc_security_group_ids = vpc_security_group_ids
