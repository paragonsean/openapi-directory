/**
 * Amazon DocumentDB Elastic Clusters
 * The new Amazon Elastic DocumentDB service endpoint.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Auth from './Auth';

/**
 * The UpdateClusterInput model module.
 * @module model/UpdateClusterInput
 * @version 2022-11-28
 */
class UpdateClusterInput {
    /**
     * Constructs a new <code>UpdateClusterInput</code>.
     * @alias module:model/UpdateClusterInput
     */
    constructor() { 
        
        UpdateClusterInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateClusterInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateClusterInput} obj Optional instance to populate.
     * @return {module:model/UpdateClusterInput} The populated <code>UpdateClusterInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateClusterInput();

            if (data.hasOwnProperty('adminUserPassword')) {
                obj['adminUserPassword'] = ApiClient.convertToType(data['adminUserPassword'], 'String');
            }
            if (data.hasOwnProperty('authType')) {
                obj['authType'] = ApiClient.convertToType(data['authType'], Auth);
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('preferredMaintenanceWindow')) {
                obj['preferredMaintenanceWindow'] = ApiClient.convertToType(data['preferredMaintenanceWindow'], 'String');
            }
            if (data.hasOwnProperty('shardCapacity')) {
                obj['shardCapacity'] = ApiClient.convertToType(data['shardCapacity'], 'Number');
            }
            if (data.hasOwnProperty('shardCount')) {
                obj['shardCount'] = ApiClient.convertToType(data['shardCount'], 'Number');
            }
            if (data.hasOwnProperty('subnetIds')) {
                obj['subnetIds'] = ApiClient.convertToType(data['subnetIds'], Array);
            }
            if (data.hasOwnProperty('vpcSecurityGroupIds')) {
                obj['vpcSecurityGroupIds'] = ApiClient.convertToType(data['vpcSecurityGroupIds'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateClusterInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateClusterInput</code>.
     */
    static validateJSON(data) {
        // validate the optional field `adminUserPassword`
        if (data['adminUserPassword']) { // data not null
          String.validateJSON(data['adminUserPassword']);
        }
        // validate the optional field `authType`
        if (data['authType']) { // data not null
          Auth.validateJSON(data['authType']);
        }
        // validate the optional field `clientToken`
        if (data['clientToken']) { // data not null
          String.validateJSON(data['clientToken']);
        }
        // validate the optional field `preferredMaintenanceWindow`
        if (data['preferredMaintenanceWindow']) { // data not null
          String.validateJSON(data['preferredMaintenanceWindow']);
        }
        // validate the optional field `shardCapacity`
        if (data['shardCapacity']) { // data not null
          Number.validateJSON(data['shardCapacity']);
        }
        // validate the optional field `shardCount`
        if (data['shardCount']) { // data not null
          Number.validateJSON(data['shardCount']);
        }
        // validate the optional field `subnetIds`
        if (data['subnetIds']) { // data not null
          Array.validateJSON(data['subnetIds']);
        }
        // validate the optional field `vpcSecurityGroupIds`
        if (data['vpcSecurityGroupIds']) { // data not null
          Array.validateJSON(data['vpcSecurityGroupIds']);
        }

        return true;
    }


}



/**
 * @member {String} adminUserPassword
 */
UpdateClusterInput.prototype['adminUserPassword'] = undefined;

/**
 * @member {module:model/Auth} authType
 */
UpdateClusterInput.prototype['authType'] = undefined;

/**
 * @member {String} clientToken
 */
UpdateClusterInput.prototype['clientToken'] = undefined;

/**
 * @member {String} preferredMaintenanceWindow
 */
UpdateClusterInput.prototype['preferredMaintenanceWindow'] = undefined;

/**
 * @member {Number} shardCapacity
 */
UpdateClusterInput.prototype['shardCapacity'] = undefined;

/**
 * @member {Number} shardCount
 */
UpdateClusterInput.prototype['shardCount'] = undefined;

/**
 * @member {Array} subnetIds
 */
UpdateClusterInput.prototype['subnetIds'] = undefined;

/**
 * @member {Array} vpcSecurityGroupIds
 */
UpdateClusterInput.prototype['vpcSecurityGroupIds'] = undefined;






export default UpdateClusterInput;

