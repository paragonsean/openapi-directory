/**
 * Amazon DocumentDB Elastic Clusters
 * The new Amazon Elastic DocumentDB service endpoint.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Auth from './Auth';

/**
 * The CreateClusterInput model module.
 * @module model/CreateClusterInput
 * @version 2022-11-28
 */
class CreateClusterInput {
    /**
     * Constructs a new <code>CreateClusterInput</code>.
     * @alias module:model/CreateClusterInput
     * @param adminUserName {String} 
     * @param adminUserPassword {String} 
     * @param authType {module:model/Auth} 
     * @param clusterName {String} 
     * @param shardCapacity {Number} 
     * @param shardCount {Number} 
     */
    constructor(adminUserName, adminUserPassword, authType, clusterName, shardCapacity, shardCount) { 
        
        CreateClusterInput.initialize(this, adminUserName, adminUserPassword, authType, clusterName, shardCapacity, shardCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, adminUserName, adminUserPassword, authType, clusterName, shardCapacity, shardCount) { 
        obj['adminUserName'] = adminUserName;
        obj['adminUserPassword'] = adminUserPassword;
        obj['authType'] = authType;
        obj['clusterName'] = clusterName;
        obj['shardCapacity'] = shardCapacity;
        obj['shardCount'] = shardCount;
    }

    /**
     * Constructs a <code>CreateClusterInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateClusterInput} obj Optional instance to populate.
     * @return {module:model/CreateClusterInput} The populated <code>CreateClusterInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateClusterInput();

            if (data.hasOwnProperty('adminUserName')) {
                obj['adminUserName'] = ApiClient.convertToType(data['adminUserName'], 'String');
            }
            if (data.hasOwnProperty('adminUserPassword')) {
                obj['adminUserPassword'] = ApiClient.convertToType(data['adminUserPassword'], 'String');
            }
            if (data.hasOwnProperty('authType')) {
                obj['authType'] = ApiClient.convertToType(data['authType'], Auth);
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('clusterName')) {
                obj['clusterName'] = ApiClient.convertToType(data['clusterName'], 'String');
            }
            if (data.hasOwnProperty('kmsKeyId')) {
                obj['kmsKeyId'] = ApiClient.convertToType(data['kmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('preferredMaintenanceWindow')) {
                obj['preferredMaintenanceWindow'] = ApiClient.convertToType(data['preferredMaintenanceWindow'], 'String');
            }
            if (data.hasOwnProperty('shardCapacity')) {
                obj['shardCapacity'] = ApiClient.convertToType(data['shardCapacity'], 'Number');
            }
            if (data.hasOwnProperty('shardCount')) {
                obj['shardCount'] = ApiClient.convertToType(data['shardCount'], 'Number');
            }
            if (data.hasOwnProperty('subnetIds')) {
                obj['subnetIds'] = ApiClient.convertToType(data['subnetIds'], Array);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('vpcSecurityGroupIds')) {
                obj['vpcSecurityGroupIds'] = ApiClient.convertToType(data['vpcSecurityGroupIds'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateClusterInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateClusterInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateClusterInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `adminUserName`
        if (data['adminUserName']) { // data not null
          String.validateJSON(data['adminUserName']);
        }
        // validate the optional field `adminUserPassword`
        if (data['adminUserPassword']) { // data not null
          String.validateJSON(data['adminUserPassword']);
        }
        // validate the optional field `authType`
        if (data['authType']) { // data not null
          Auth.validateJSON(data['authType']);
        }
        // validate the optional field `clientToken`
        if (data['clientToken']) { // data not null
          String.validateJSON(data['clientToken']);
        }
        // validate the optional field `clusterName`
        if (data['clusterName']) { // data not null
          String.validateJSON(data['clusterName']);
        }
        // validate the optional field `kmsKeyId`
        if (data['kmsKeyId']) { // data not null
          String.validateJSON(data['kmsKeyId']);
        }
        // validate the optional field `preferredMaintenanceWindow`
        if (data['preferredMaintenanceWindow']) { // data not null
          String.validateJSON(data['preferredMaintenanceWindow']);
        }
        // validate the optional field `shardCapacity`
        if (data['shardCapacity']) { // data not null
          Number.validateJSON(data['shardCapacity']);
        }
        // validate the optional field `shardCount`
        if (data['shardCount']) { // data not null
          Number.validateJSON(data['shardCount']);
        }
        // validate the optional field `subnetIds`
        if (data['subnetIds']) { // data not null
          Array.validateJSON(data['subnetIds']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `vpcSecurityGroupIds`
        if (data['vpcSecurityGroupIds']) { // data not null
          Array.validateJSON(data['vpcSecurityGroupIds']);
        }

        return true;
    }


}

CreateClusterInput.RequiredProperties = ["adminUserName", "adminUserPassword", "authType", "clusterName", "shardCapacity", "shardCount"];

/**
 * @member {String} adminUserName
 */
CreateClusterInput.prototype['adminUserName'] = undefined;

/**
 * @member {String} adminUserPassword
 */
CreateClusterInput.prototype['adminUserPassword'] = undefined;

/**
 * @member {module:model/Auth} authType
 */
CreateClusterInput.prototype['authType'] = undefined;

/**
 * @member {String} clientToken
 */
CreateClusterInput.prototype['clientToken'] = undefined;

/**
 * @member {String} clusterName
 */
CreateClusterInput.prototype['clusterName'] = undefined;

/**
 * @member {String} kmsKeyId
 */
CreateClusterInput.prototype['kmsKeyId'] = undefined;

/**
 * @member {String} preferredMaintenanceWindow
 */
CreateClusterInput.prototype['preferredMaintenanceWindow'] = undefined;

/**
 * @member {Number} shardCapacity
 */
CreateClusterInput.prototype['shardCapacity'] = undefined;

/**
 * @member {Number} shardCount
 */
CreateClusterInput.prototype['shardCount'] = undefined;

/**
 * @member {Array} subnetIds
 */
CreateClusterInput.prototype['subnetIds'] = undefined;

/**
 * @member {Object} tags
 */
CreateClusterInput.prototype['tags'] = undefined;

/**
 * @member {Array} vpcSecurityGroupIds
 */
CreateClusterInput.prototype['vpcSecurityGroupIds'] = undefined;






export default CreateClusterInput;

