/**
 * Amazon DocumentDB Elastic Clusters
 * The new Amazon Elastic DocumentDB service endpoint.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateClusterRequest model module.
 * @module model/CreateClusterRequest
 * @version 2022-11-28
 */
class CreateClusterRequest {
    /**
     * Constructs a new <code>CreateClusterRequest</code>.
     * @alias module:model/CreateClusterRequest
     * @param adminUserName {String} <p>The name of the Elastic DocumentDB cluster administrator.</p> <p> <i>Constraints</i>:</p> <ul> <li> <p>Must be from 1 to 63 letters or numbers.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot be a reserved word.</p> </li> </ul>
     * @param adminUserPassword {String} <p>The password for the Elastic DocumentDB cluster administrator and can contain any printable ASCII characters.</p> <p> <i>Constraints</i>:</p> <ul> <li> <p>Must contain from 8 to 100 characters.</p> </li> <li> <p>Cannot contain a forward slash (/), double quote (\"), or the \"at\" symbol (@).</p> </li> </ul>
     * @param authType {module:model/CreateClusterRequest.AuthTypeEnum} The authentication type for the Elastic DocumentDB cluster.
     * @param clusterName {String} <p>The name of the new Elastic DocumentDB cluster. This parameter is stored as a lowercase string.</p> <p> <i>Constraints</i>:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p> <i>Example</i>: <code>my-cluster</code> </p>
     * @param shardCapacity {Number} The capacity of each shard in the new Elastic DocumentDB cluster.
     * @param shardCount {Number} The number of shards to create in the new Elastic DocumentDB cluster.
     */
    constructor(adminUserName, adminUserPassword, authType, clusterName, shardCapacity, shardCount) { 
        
        CreateClusterRequest.initialize(this, adminUserName, adminUserPassword, authType, clusterName, shardCapacity, shardCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, adminUserName, adminUserPassword, authType, clusterName, shardCapacity, shardCount) { 
        obj['adminUserName'] = adminUserName;
        obj['adminUserPassword'] = adminUserPassword;
        obj['authType'] = authType;
        obj['clusterName'] = clusterName;
        obj['shardCapacity'] = shardCapacity;
        obj['shardCount'] = shardCount;
    }

    /**
     * Constructs a <code>CreateClusterRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateClusterRequest} obj Optional instance to populate.
     * @return {module:model/CreateClusterRequest} The populated <code>CreateClusterRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateClusterRequest();

            if (data.hasOwnProperty('adminUserName')) {
                obj['adminUserName'] = ApiClient.convertToType(data['adminUserName'], 'String');
            }
            if (data.hasOwnProperty('adminUserPassword')) {
                obj['adminUserPassword'] = ApiClient.convertToType(data['adminUserPassword'], 'String');
            }
            if (data.hasOwnProperty('authType')) {
                obj['authType'] = ApiClient.convertToType(data['authType'], 'String');
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('clusterName')) {
                obj['clusterName'] = ApiClient.convertToType(data['clusterName'], 'String');
            }
            if (data.hasOwnProperty('kmsKeyId')) {
                obj['kmsKeyId'] = ApiClient.convertToType(data['kmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('preferredMaintenanceWindow')) {
                obj['preferredMaintenanceWindow'] = ApiClient.convertToType(data['preferredMaintenanceWindow'], 'String');
            }
            if (data.hasOwnProperty('shardCapacity')) {
                obj['shardCapacity'] = ApiClient.convertToType(data['shardCapacity'], 'Number');
            }
            if (data.hasOwnProperty('shardCount')) {
                obj['shardCount'] = ApiClient.convertToType(data['shardCount'], 'Number');
            }
            if (data.hasOwnProperty('subnetIds')) {
                obj['subnetIds'] = ApiClient.convertToType(data['subnetIds'], ['String']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('vpcSecurityGroupIds')) {
                obj['vpcSecurityGroupIds'] = ApiClient.convertToType(data['vpcSecurityGroupIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateClusterRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateClusterRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateClusterRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['adminUserName'] && !(typeof data['adminUserName'] === 'string' || data['adminUserName'] instanceof String)) {
            throw new Error("Expected the field `adminUserName` to be a primitive type in the JSON string but got " + data['adminUserName']);
        }
        // ensure the json data is a string
        if (data['adminUserPassword'] && !(typeof data['adminUserPassword'] === 'string' || data['adminUserPassword'] instanceof String)) {
            throw new Error("Expected the field `adminUserPassword` to be a primitive type in the JSON string but got " + data['adminUserPassword']);
        }
        // ensure the json data is a string
        if (data['authType'] && !(typeof data['authType'] === 'string' || data['authType'] instanceof String)) {
            throw new Error("Expected the field `authType` to be a primitive type in the JSON string but got " + data['authType']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }
        // ensure the json data is a string
        if (data['clusterName'] && !(typeof data['clusterName'] === 'string' || data['clusterName'] instanceof String)) {
            throw new Error("Expected the field `clusterName` to be a primitive type in the JSON string but got " + data['clusterName']);
        }
        // ensure the json data is a string
        if (data['kmsKeyId'] && !(typeof data['kmsKeyId'] === 'string' || data['kmsKeyId'] instanceof String)) {
            throw new Error("Expected the field `kmsKeyId` to be a primitive type in the JSON string but got " + data['kmsKeyId']);
        }
        // ensure the json data is a string
        if (data['preferredMaintenanceWindow'] && !(typeof data['preferredMaintenanceWindow'] === 'string' || data['preferredMaintenanceWindow'] instanceof String)) {
            throw new Error("Expected the field `preferredMaintenanceWindow` to be a primitive type in the JSON string but got " + data['preferredMaintenanceWindow']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['subnetIds'])) {
            throw new Error("Expected the field `subnetIds` to be an array in the JSON data but got " + data['subnetIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['vpcSecurityGroupIds'])) {
            throw new Error("Expected the field `vpcSecurityGroupIds` to be an array in the JSON data but got " + data['vpcSecurityGroupIds']);
        }

        return true;
    }


}

CreateClusterRequest.RequiredProperties = ["adminUserName", "adminUserPassword", "authType", "clusterName", "shardCapacity", "shardCount"];

/**
 * <p>The name of the Elastic DocumentDB cluster administrator.</p> <p> <i>Constraints</i>:</p> <ul> <li> <p>Must be from 1 to 63 letters or numbers.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot be a reserved word.</p> </li> </ul>
 * @member {String} adminUserName
 */
CreateClusterRequest.prototype['adminUserName'] = undefined;

/**
 * <p>The password for the Elastic DocumentDB cluster administrator and can contain any printable ASCII characters.</p> <p> <i>Constraints</i>:</p> <ul> <li> <p>Must contain from 8 to 100 characters.</p> </li> <li> <p>Cannot contain a forward slash (/), double quote (\"), or the \"at\" symbol (@).</p> </li> </ul>
 * @member {String} adminUserPassword
 */
CreateClusterRequest.prototype['adminUserPassword'] = undefined;

/**
 * The authentication type for the Elastic DocumentDB cluster.
 * @member {module:model/CreateClusterRequest.AuthTypeEnum} authType
 */
CreateClusterRequest.prototype['authType'] = undefined;

/**
 * The client token for the Elastic DocumentDB cluster.
 * @member {String} clientToken
 */
CreateClusterRequest.prototype['clientToken'] = undefined;

/**
 * <p>The name of the new Elastic DocumentDB cluster. This parameter is stored as a lowercase string.</p> <p> <i>Constraints</i>:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p> <i>Example</i>: <code>my-cluster</code> </p>
 * @member {String} clusterName
 */
CreateClusterRequest.prototype['clusterName'] = undefined;

/**
 * <p>The KMS key identifier to use to encrypt the new Elastic DocumentDB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a cluster using the same Amazon account that owns this KMS encryption key, you can use the KMS key alias instead of the ARN as the KMS encryption key.</p> <p>If an encryption key is not specified, Elastic DocumentDB uses the default encryption key that KMS creates for your account. Your account has a different default encryption key for each Amazon Region.</p>
 * @member {String} kmsKeyId
 */
CreateClusterRequest.prototype['kmsKeyId'] = undefined;

/**
 * <p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> <i>Format</i>: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> <i>Default</i>: a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week.</p> <p> <i>Valid days</i>: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p> <i>Constraints</i>: Minimum 30-minute window.</p>
 * @member {String} preferredMaintenanceWindow
 */
CreateClusterRequest.prototype['preferredMaintenanceWindow'] = undefined;

/**
 * The capacity of each shard in the new Elastic DocumentDB cluster.
 * @member {Number} shardCapacity
 */
CreateClusterRequest.prototype['shardCapacity'] = undefined;

/**
 * The number of shards to create in the new Elastic DocumentDB cluster.
 * @member {Number} shardCount
 */
CreateClusterRequest.prototype['shardCount'] = undefined;

/**
 * The Amazon EC2 subnet IDs for the new Elastic DocumentDB cluster.
 * @member {Array.<String>} subnetIds
 */
CreateClusterRequest.prototype['subnetIds'] = undefined;

/**
 * The tags to be assigned to the new Elastic DocumentDB cluster.
 * @member {Object.<String, String>} tags
 */
CreateClusterRequest.prototype['tags'] = undefined;

/**
 * A list of EC2 VPC security groups to associate with the new Elastic DocumentDB cluster.
 * @member {Array.<String>} vpcSecurityGroupIds
 */
CreateClusterRequest.prototype['vpcSecurityGroupIds'] = undefined;





/**
 * Allowed values for the <code>authType</code> property.
 * @enum {String}
 * @readonly
 */
CreateClusterRequest['AuthTypeEnum'] = {

    /**
     * value: "PLAIN_TEXT"
     * @const
     */
    "PLAIN_TEXT": "PLAIN_TEXT",

    /**
     * value: "SECRET_ARN"
     * @const
     */
    "SECRET_ARN": "SECRET_ARN"
};



export default CreateClusterRequest;

