/*
 * AWS OpsWorks CM
 * <fullname>AWS OpsWorks CM</fullname> <p>AWS OpsWorks for configuration management (CM) is a service that runs and manages configuration management servers. You can use AWS OpsWorks CM to create and manage AWS OpsWorks for Chef Automate and AWS OpsWorks for Puppet Enterprise servers, and add or remove nodes for the servers to manage.</p> <p> <b>Glossary of terms</b> </p> <ul> <li> <p> <b>Server</b>: A configuration management server that can be highly-available. The configuration management server runs on an Amazon Elastic Compute Cloud (EC2) instance, and may use various other AWS services, such as Amazon Relational Database Service (RDS) and Elastic Load Balancing. A server is a generic abstraction over the configuration manager that you want to use, much like Amazon RDS. In AWS OpsWorks CM, you do not start or stop servers. After you create servers, they continue to run until they are deleted.</p> </li> <li> <p> <b>Engine</b>: The engine is the specific configuration manager that you want to use. Valid values in this release include <code>ChefAutomate</code> and <code>Puppet</code>.</p> </li> <li> <p> <b>Backup</b>: This is an application-level backup of the data that the configuration manager stores. AWS OpsWorks CM creates an S3 bucket for backups when you launch the first server. A backup maintains a snapshot of a server's configuration-related attributes at the time the backup starts.</p> </li> <li> <p> <b>Events</b>: Events are always related to a server. Events are written during server creation, when health checks run, when backups are created, when system maintenance is performed, etc. When you delete a server, the server's events are also deleted.</p> </li> <li> <p> <b>Account attributes</b>: Every account has attributes that are assigned in the AWS OpsWorks CM database. These attributes store information about configuration limits (servers, backups, etc.) and your customer account. </p> </li> </ul> <p> <b>Endpoints</b> </p> <p>AWS OpsWorks CM supports the following endpoints, all HTTPS. You must connect to one of the following endpoints. Your servers can only be accessed or managed within the endpoint in which they are created.</p> <ul> <li> <p>opsworks-cm.us-east-1.amazonaws.com</p> </li> <li> <p>opsworks-cm.us-east-2.amazonaws.com</p> </li> <li> <p>opsworks-cm.us-west-1.amazonaws.com</p> </li> <li> <p>opsworks-cm.us-west-2.amazonaws.com</p> </li> <li> <p>opsworks-cm.ap-northeast-1.amazonaws.com</p> </li> <li> <p>opsworks-cm.ap-southeast-1.amazonaws.com</p> </li> <li> <p>opsworks-cm.ap-southeast-2.amazonaws.com</p> </li> <li> <p>opsworks-cm.eu-central-1.amazonaws.com</p> </li> <li> <p>opsworks-cm.eu-west-1.amazonaws.com</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/opsworks-service.html\">AWS OpsWorks endpoints and quotas</a> in the AWS General Reference.</p> <p> <b>Throttling limits</b> </p> <p>All API operations allow for five requests per second with a burst of 10 requests per second.</p>
 *
 * The version of the OpenAPI document: 2016-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MaintenanceStatus;
import org.openapitools.client.model.ServerStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartMaintenanceResponseServer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:58.761463-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartMaintenanceResponseServer {
  public static final String SERIALIZED_NAME_ASSOCIATE_PUBLIC_IP_ADDRESS = "AssociatePublicIpAddress";
  @SerializedName(SERIALIZED_NAME_ASSOCIATE_PUBLIC_IP_ADDRESS)
  private Boolean associatePublicIpAddress;

  public static final String SERIALIZED_NAME_BACKUP_RETENTION_COUNT = "BackupRetentionCount";
  @SerializedName(SERIALIZED_NAME_BACKUP_RETENTION_COUNT)
  private Integer backupRetentionCount;

  public static final String SERIALIZED_NAME_SERVER_NAME = "ServerName";
  @SerializedName(SERIALIZED_NAME_SERVER_NAME)
  private String serverName;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CLOUD_FORMATION_STACK_ARN = "CloudFormationStackArn";
  @SerializedName(SERIALIZED_NAME_CLOUD_FORMATION_STACK_ARN)
  private String cloudFormationStackArn;

  public static final String SERIALIZED_NAME_CUSTOM_DOMAIN = "CustomDomain";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DOMAIN)
  private String customDomain;

  public static final String SERIALIZED_NAME_DISABLE_AUTOMATED_BACKUP = "DisableAutomatedBackup";
  @SerializedName(SERIALIZED_NAME_DISABLE_AUTOMATED_BACKUP)
  private Boolean disableAutomatedBackup;

  public static final String SERIALIZED_NAME_ENDPOINT = "Endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_ENGINE = "Engine";
  @SerializedName(SERIALIZED_NAME_ENGINE)
  private String engine;

  public static final String SERIALIZED_NAME_ENGINE_MODEL = "EngineModel";
  @SerializedName(SERIALIZED_NAME_ENGINE_MODEL)
  private String engineModel;

  public static final String SERIALIZED_NAME_ENGINE_ATTRIBUTES = "EngineAttributes";
  @SerializedName(SERIALIZED_NAME_ENGINE_ATTRIBUTES)
  private List engineAttributes;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_INSTANCE_PROFILE_ARN = "InstanceProfileArn";
  @SerializedName(SERIALIZED_NAME_INSTANCE_PROFILE_ARN)
  private String instanceProfileArn;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "InstanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private String instanceType;

  public static final String SERIALIZED_NAME_KEY_PAIR = "KeyPair";
  @SerializedName(SERIALIZED_NAME_KEY_PAIR)
  private String keyPair;

  public static final String SERIALIZED_NAME_MAINTENANCE_STATUS = "MaintenanceStatus";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_STATUS)
  private MaintenanceStatus maintenanceStatus;

  public static final String SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW = "PreferredMaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW)
  private String preferredMaintenanceWindow;

  public static final String SERIALIZED_NAME_PREFERRED_BACKUP_WINDOW = "PreferredBackupWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_BACKUP_WINDOW)
  private String preferredBackupWindow;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "SecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List securityGroupIds;

  public static final String SERIALIZED_NAME_SERVICE_ROLE_ARN = "ServiceRoleArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ROLE_ARN)
  private String serviceRoleArn;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ServerStatus status;

  public static final String SERIALIZED_NAME_STATUS_REASON = "StatusReason";
  @SerializedName(SERIALIZED_NAME_STATUS_REASON)
  private String statusReason;

  public static final String SERIALIZED_NAME_SUBNET_IDS = "SubnetIds";
  @SerializedName(SERIALIZED_NAME_SUBNET_IDS)
  private List subnetIds;

  public static final String SERIALIZED_NAME_SERVER_ARN = "ServerArn";
  @SerializedName(SERIALIZED_NAME_SERVER_ARN)
  private String serverArn;

  public StartMaintenanceResponseServer() {
  }

  public StartMaintenanceResponseServer associatePublicIpAddress(Boolean associatePublicIpAddress) {
    this.associatePublicIpAddress = associatePublicIpAddress;
    return this;
  }

  /**
   * Get associatePublicIpAddress
   * @return associatePublicIpAddress
   */
  @javax.annotation.Nullable
  public Boolean getAssociatePublicIpAddress() {
    return associatePublicIpAddress;
  }

  public void setAssociatePublicIpAddress(Boolean associatePublicIpAddress) {
    this.associatePublicIpAddress = associatePublicIpAddress;
  }


  public StartMaintenanceResponseServer backupRetentionCount(Integer backupRetentionCount) {
    this.backupRetentionCount = backupRetentionCount;
    return this;
  }

  /**
   * Get backupRetentionCount
   * @return backupRetentionCount
   */
  @javax.annotation.Nullable
  public Integer getBackupRetentionCount() {
    return backupRetentionCount;
  }

  public void setBackupRetentionCount(Integer backupRetentionCount) {
    this.backupRetentionCount = backupRetentionCount;
  }


  public StartMaintenanceResponseServer serverName(String serverName) {
    this.serverName = serverName;
    return this;
  }

  /**
   * Get serverName
   * @return serverName
   */
  @javax.annotation.Nullable
  public String getServerName() {
    return serverName;
  }

  public void setServerName(String serverName) {
    this.serverName = serverName;
  }


  public StartMaintenanceResponseServer createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public StartMaintenanceResponseServer cloudFormationStackArn(String cloudFormationStackArn) {
    this.cloudFormationStackArn = cloudFormationStackArn;
    return this;
  }

  /**
   * Get cloudFormationStackArn
   * @return cloudFormationStackArn
   */
  @javax.annotation.Nullable
  public String getCloudFormationStackArn() {
    return cloudFormationStackArn;
  }

  public void setCloudFormationStackArn(String cloudFormationStackArn) {
    this.cloudFormationStackArn = cloudFormationStackArn;
  }


  public StartMaintenanceResponseServer customDomain(String customDomain) {
    this.customDomain = customDomain;
    return this;
  }

  /**
   * Get customDomain
   * @return customDomain
   */
  @javax.annotation.Nullable
  public String getCustomDomain() {
    return customDomain;
  }

  public void setCustomDomain(String customDomain) {
    this.customDomain = customDomain;
  }


  public StartMaintenanceResponseServer disableAutomatedBackup(Boolean disableAutomatedBackup) {
    this.disableAutomatedBackup = disableAutomatedBackup;
    return this;
  }

  /**
   * Get disableAutomatedBackup
   * @return disableAutomatedBackup
   */
  @javax.annotation.Nullable
  public Boolean getDisableAutomatedBackup() {
    return disableAutomatedBackup;
  }

  public void setDisableAutomatedBackup(Boolean disableAutomatedBackup) {
    this.disableAutomatedBackup = disableAutomatedBackup;
  }


  public StartMaintenanceResponseServer endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Get endpoint
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public StartMaintenanceResponseServer engine(String engine) {
    this.engine = engine;
    return this;
  }

  /**
   * Get engine
   * @return engine
   */
  @javax.annotation.Nullable
  public String getEngine() {
    return engine;
  }

  public void setEngine(String engine) {
    this.engine = engine;
  }


  public StartMaintenanceResponseServer engineModel(String engineModel) {
    this.engineModel = engineModel;
    return this;
  }

  /**
   * Get engineModel
   * @return engineModel
   */
  @javax.annotation.Nullable
  public String getEngineModel() {
    return engineModel;
  }

  public void setEngineModel(String engineModel) {
    this.engineModel = engineModel;
  }


  public StartMaintenanceResponseServer engineAttributes(List engineAttributes) {
    this.engineAttributes = engineAttributes;
    return this;
  }

  /**
   * Get engineAttributes
   * @return engineAttributes
   */
  @javax.annotation.Nullable
  public List getEngineAttributes() {
    return engineAttributes;
  }

  public void setEngineAttributes(List engineAttributes) {
    this.engineAttributes = engineAttributes;
  }


  public StartMaintenanceResponseServer engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public StartMaintenanceResponseServer instanceProfileArn(String instanceProfileArn) {
    this.instanceProfileArn = instanceProfileArn;
    return this;
  }

  /**
   * Get instanceProfileArn
   * @return instanceProfileArn
   */
  @javax.annotation.Nullable
  public String getInstanceProfileArn() {
    return instanceProfileArn;
  }

  public void setInstanceProfileArn(String instanceProfileArn) {
    this.instanceProfileArn = instanceProfileArn;
  }


  public StartMaintenanceResponseServer instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Get instanceType
   * @return instanceType
   */
  @javax.annotation.Nullable
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }


  public StartMaintenanceResponseServer keyPair(String keyPair) {
    this.keyPair = keyPair;
    return this;
  }

  /**
   * Get keyPair
   * @return keyPair
   */
  @javax.annotation.Nullable
  public String getKeyPair() {
    return keyPair;
  }

  public void setKeyPair(String keyPair) {
    this.keyPair = keyPair;
  }


  public StartMaintenanceResponseServer maintenanceStatus(MaintenanceStatus maintenanceStatus) {
    this.maintenanceStatus = maintenanceStatus;
    return this;
  }

  /**
   * Get maintenanceStatus
   * @return maintenanceStatus
   */
  @javax.annotation.Nullable
  public MaintenanceStatus getMaintenanceStatus() {
    return maintenanceStatus;
  }

  public void setMaintenanceStatus(MaintenanceStatus maintenanceStatus) {
    this.maintenanceStatus = maintenanceStatus;
  }


  public StartMaintenanceResponseServer preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

  /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
   */
  @javax.annotation.Nullable
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }


  public StartMaintenanceResponseServer preferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
    return this;
  }

  /**
   * Get preferredBackupWindow
   * @return preferredBackupWindow
   */
  @javax.annotation.Nullable
  public String getPreferredBackupWindow() {
    return preferredBackupWindow;
  }

  public void setPreferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
  }


  public StartMaintenanceResponseServer securityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  /**
   * Get securityGroupIds
   * @return securityGroupIds
   */
  @javax.annotation.Nullable
  public List getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public StartMaintenanceResponseServer serviceRoleArn(String serviceRoleArn) {
    this.serviceRoleArn = serviceRoleArn;
    return this;
  }

  /**
   * Get serviceRoleArn
   * @return serviceRoleArn
   */
  @javax.annotation.Nullable
  public String getServiceRoleArn() {
    return serviceRoleArn;
  }

  public void setServiceRoleArn(String serviceRoleArn) {
    this.serviceRoleArn = serviceRoleArn;
  }


  public StartMaintenanceResponseServer status(ServerStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ServerStatus getStatus() {
    return status;
  }

  public void setStatus(ServerStatus status) {
    this.status = status;
  }


  public StartMaintenanceResponseServer statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * Get statusReason
   * @return statusReason
   */
  @javax.annotation.Nullable
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }


  public StartMaintenanceResponseServer subnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
    return this;
  }

  /**
   * Get subnetIds
   * @return subnetIds
   */
  @javax.annotation.Nullable
  public List getSubnetIds() {
    return subnetIds;
  }

  public void setSubnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
  }


  public StartMaintenanceResponseServer serverArn(String serverArn) {
    this.serverArn = serverArn;
    return this;
  }

  /**
   * Get serverArn
   * @return serverArn
   */
  @javax.annotation.Nullable
  public String getServerArn() {
    return serverArn;
  }

  public void setServerArn(String serverArn) {
    this.serverArn = serverArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartMaintenanceResponseServer startMaintenanceResponseServer = (StartMaintenanceResponseServer) o;
    return Objects.equals(this.associatePublicIpAddress, startMaintenanceResponseServer.associatePublicIpAddress) &&
        Objects.equals(this.backupRetentionCount, startMaintenanceResponseServer.backupRetentionCount) &&
        Objects.equals(this.serverName, startMaintenanceResponseServer.serverName) &&
        Objects.equals(this.createdAt, startMaintenanceResponseServer.createdAt) &&
        Objects.equals(this.cloudFormationStackArn, startMaintenanceResponseServer.cloudFormationStackArn) &&
        Objects.equals(this.customDomain, startMaintenanceResponseServer.customDomain) &&
        Objects.equals(this.disableAutomatedBackup, startMaintenanceResponseServer.disableAutomatedBackup) &&
        Objects.equals(this.endpoint, startMaintenanceResponseServer.endpoint) &&
        Objects.equals(this.engine, startMaintenanceResponseServer.engine) &&
        Objects.equals(this.engineModel, startMaintenanceResponseServer.engineModel) &&
        Objects.equals(this.engineAttributes, startMaintenanceResponseServer.engineAttributes) &&
        Objects.equals(this.engineVersion, startMaintenanceResponseServer.engineVersion) &&
        Objects.equals(this.instanceProfileArn, startMaintenanceResponseServer.instanceProfileArn) &&
        Objects.equals(this.instanceType, startMaintenanceResponseServer.instanceType) &&
        Objects.equals(this.keyPair, startMaintenanceResponseServer.keyPair) &&
        Objects.equals(this.maintenanceStatus, startMaintenanceResponseServer.maintenanceStatus) &&
        Objects.equals(this.preferredMaintenanceWindow, startMaintenanceResponseServer.preferredMaintenanceWindow) &&
        Objects.equals(this.preferredBackupWindow, startMaintenanceResponseServer.preferredBackupWindow) &&
        Objects.equals(this.securityGroupIds, startMaintenanceResponseServer.securityGroupIds) &&
        Objects.equals(this.serviceRoleArn, startMaintenanceResponseServer.serviceRoleArn) &&
        Objects.equals(this.status, startMaintenanceResponseServer.status) &&
        Objects.equals(this.statusReason, startMaintenanceResponseServer.statusReason) &&
        Objects.equals(this.subnetIds, startMaintenanceResponseServer.subnetIds) &&
        Objects.equals(this.serverArn, startMaintenanceResponseServer.serverArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(associatePublicIpAddress, backupRetentionCount, serverName, createdAt, cloudFormationStackArn, customDomain, disableAutomatedBackup, endpoint, engine, engineModel, engineAttributes, engineVersion, instanceProfileArn, instanceType, keyPair, maintenanceStatus, preferredMaintenanceWindow, preferredBackupWindow, securityGroupIds, serviceRoleArn, status, statusReason, subnetIds, serverArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartMaintenanceResponseServer {\n");
    sb.append("    associatePublicIpAddress: ").append(toIndentedString(associatePublicIpAddress)).append("\n");
    sb.append("    backupRetentionCount: ").append(toIndentedString(backupRetentionCount)).append("\n");
    sb.append("    serverName: ").append(toIndentedString(serverName)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    cloudFormationStackArn: ").append(toIndentedString(cloudFormationStackArn)).append("\n");
    sb.append("    customDomain: ").append(toIndentedString(customDomain)).append("\n");
    sb.append("    disableAutomatedBackup: ").append(toIndentedString(disableAutomatedBackup)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    engineModel: ").append(toIndentedString(engineModel)).append("\n");
    sb.append("    engineAttributes: ").append(toIndentedString(engineAttributes)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    instanceProfileArn: ").append(toIndentedString(instanceProfileArn)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    keyPair: ").append(toIndentedString(keyPair)).append("\n");
    sb.append("    maintenanceStatus: ").append(toIndentedString(maintenanceStatus)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    preferredBackupWindow: ").append(toIndentedString(preferredBackupWindow)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    serviceRoleArn: ").append(toIndentedString(serviceRoleArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    subnetIds: ").append(toIndentedString(subnetIds)).append("\n");
    sb.append("    serverArn: ").append(toIndentedString(serverArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AssociatePublicIpAddress");
    openapiFields.add("BackupRetentionCount");
    openapiFields.add("ServerName");
    openapiFields.add("CreatedAt");
    openapiFields.add("CloudFormationStackArn");
    openapiFields.add("CustomDomain");
    openapiFields.add("DisableAutomatedBackup");
    openapiFields.add("Endpoint");
    openapiFields.add("Engine");
    openapiFields.add("EngineModel");
    openapiFields.add("EngineAttributes");
    openapiFields.add("EngineVersion");
    openapiFields.add("InstanceProfileArn");
    openapiFields.add("InstanceType");
    openapiFields.add("KeyPair");
    openapiFields.add("MaintenanceStatus");
    openapiFields.add("PreferredMaintenanceWindow");
    openapiFields.add("PreferredBackupWindow");
    openapiFields.add("SecurityGroupIds");
    openapiFields.add("ServiceRoleArn");
    openapiFields.add("Status");
    openapiFields.add("StatusReason");
    openapiFields.add("SubnetIds");
    openapiFields.add("ServerArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartMaintenanceResponseServer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartMaintenanceResponseServer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartMaintenanceResponseServer is not found in the empty JSON string", StartMaintenanceResponseServer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartMaintenanceResponseServer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartMaintenanceResponseServer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AssociatePublicIpAddress`
      if (jsonObj.get("AssociatePublicIpAddress") != null && !jsonObj.get("AssociatePublicIpAddress").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AssociatePublicIpAddress"));
      }
      // validate the optional field `BackupRetentionCount`
      if (jsonObj.get("BackupRetentionCount") != null && !jsonObj.get("BackupRetentionCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BackupRetentionCount"));
      }
      // validate the optional field `ServerName`
      if (jsonObj.get("ServerName") != null && !jsonObj.get("ServerName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServerName"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `CloudFormationStackArn`
      if (jsonObj.get("CloudFormationStackArn") != null && !jsonObj.get("CloudFormationStackArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CloudFormationStackArn"));
      }
      // validate the optional field `CustomDomain`
      if (jsonObj.get("CustomDomain") != null && !jsonObj.get("CustomDomain").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CustomDomain"));
      }
      // validate the optional field `DisableAutomatedBackup`
      if (jsonObj.get("DisableAutomatedBackup") != null && !jsonObj.get("DisableAutomatedBackup").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DisableAutomatedBackup"));
      }
      // validate the optional field `Endpoint`
      if (jsonObj.get("Endpoint") != null && !jsonObj.get("Endpoint").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Endpoint"));
      }
      // validate the optional field `Engine`
      if (jsonObj.get("Engine") != null && !jsonObj.get("Engine").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Engine"));
      }
      // validate the optional field `EngineModel`
      if (jsonObj.get("EngineModel") != null && !jsonObj.get("EngineModel").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineModel"));
      }
      // validate the optional field `EngineAttributes`
      if (jsonObj.get("EngineAttributes") != null && !jsonObj.get("EngineAttributes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EngineAttributes"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `InstanceProfileArn`
      if (jsonObj.get("InstanceProfileArn") != null && !jsonObj.get("InstanceProfileArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceProfileArn"));
      }
      // validate the optional field `InstanceType`
      if (jsonObj.get("InstanceType") != null && !jsonObj.get("InstanceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceType"));
      }
      // validate the optional field `KeyPair`
      if (jsonObj.get("KeyPair") != null && !jsonObj.get("KeyPair").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KeyPair"));
      }
      // validate the optional field `MaintenanceStatus`
      if (jsonObj.get("MaintenanceStatus") != null && !jsonObj.get("MaintenanceStatus").isJsonNull()) {
        MaintenanceStatus.validateJsonElement(jsonObj.get("MaintenanceStatus"));
      }
      // validate the optional field `PreferredMaintenanceWindow`
      if (jsonObj.get("PreferredMaintenanceWindow") != null && !jsonObj.get("PreferredMaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredMaintenanceWindow"));
      }
      // validate the optional field `PreferredBackupWindow`
      if (jsonObj.get("PreferredBackupWindow") != null && !jsonObj.get("PreferredBackupWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredBackupWindow"));
      }
      // validate the optional field `SecurityGroupIds`
      if (jsonObj.get("SecurityGroupIds") != null && !jsonObj.get("SecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroupIds"));
      }
      // validate the optional field `ServiceRoleArn`
      if (jsonObj.get("ServiceRoleArn") != null && !jsonObj.get("ServiceRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceRoleArn"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        ServerStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusReason`
      if (jsonObj.get("StatusReason") != null && !jsonObj.get("StatusReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusReason"));
      }
      // validate the optional field `SubnetIds`
      if (jsonObj.get("SubnetIds") != null && !jsonObj.get("SubnetIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SubnetIds"));
      }
      // validate the optional field `ServerArn`
      if (jsonObj.get("ServerArn") != null && !jsonObj.get("ServerArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServerArn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartMaintenanceResponseServer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartMaintenanceResponseServer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartMaintenanceResponseServer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartMaintenanceResponseServer.class));

       return (TypeAdapter<T>) new TypeAdapter<StartMaintenanceResponseServer>() {
           @Override
           public void write(JsonWriter out, StartMaintenanceResponseServer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartMaintenanceResponseServer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartMaintenanceResponseServer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartMaintenanceResponseServer
   * @throws IOException if the JSON string is invalid with respect to StartMaintenanceResponseServer
   */
  public static StartMaintenanceResponseServer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartMaintenanceResponseServer.class);
  }

  /**
   * Convert an instance of StartMaintenanceResponseServer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

