# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExportServerEngineAttributeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, export_attribute_name: str=None, server_name: str=None, input_attributes: List=None):
        """ExportServerEngineAttributeRequest - a model defined in OpenAPI

        :param export_attribute_name: The export_attribute_name of this ExportServerEngineAttributeRequest.
        :param server_name: The server_name of this ExportServerEngineAttributeRequest.
        :param input_attributes: The input_attributes of this ExportServerEngineAttributeRequest.
        """
        self.openapi_types = {
            'export_attribute_name': str,
            'server_name': str,
            'input_attributes': List
        }

        self.attribute_map = {
            'export_attribute_name': 'ExportAttributeName',
            'server_name': 'ServerName',
            'input_attributes': 'InputAttributes'
        }

        self._export_attribute_name = export_attribute_name
        self._server_name = server_name
        self._input_attributes = input_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportServerEngineAttributeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportServerEngineAttributeRequest of this ExportServerEngineAttributeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def export_attribute_name(self):
        """Gets the export_attribute_name of this ExportServerEngineAttributeRequest.


        :return: The export_attribute_name of this ExportServerEngineAttributeRequest.
        :rtype: str
        """
        return self._export_attribute_name

    @export_attribute_name.setter
    def export_attribute_name(self, export_attribute_name):
        """Sets the export_attribute_name of this ExportServerEngineAttributeRequest.


        :param export_attribute_name: The export_attribute_name of this ExportServerEngineAttributeRequest.
        :type export_attribute_name: str
        """
        if export_attribute_name is None:
            raise ValueError("Invalid value for `export_attribute_name`, must not be `None`")

        self._export_attribute_name = export_attribute_name

    @property
    def server_name(self):
        """Gets the server_name of this ExportServerEngineAttributeRequest.


        :return: The server_name of this ExportServerEngineAttributeRequest.
        :rtype: str
        """
        return self._server_name

    @server_name.setter
    def server_name(self, server_name):
        """Sets the server_name of this ExportServerEngineAttributeRequest.


        :param server_name: The server_name of this ExportServerEngineAttributeRequest.
        :type server_name: str
        """
        if server_name is None:
            raise ValueError("Invalid value for `server_name`, must not be `None`")

        self._server_name = server_name

    @property
    def input_attributes(self):
        """Gets the input_attributes of this ExportServerEngineAttributeRequest.


        :return: The input_attributes of this ExportServerEngineAttributeRequest.
        :rtype: List
        """
        return self._input_attributes

    @input_attributes.setter
    def input_attributes(self, input_attributes):
        """Sets the input_attributes of this ExportServerEngineAttributeRequest.


        :param input_attributes: The input_attributes of this ExportServerEngineAttributeRequest.
        :type input_attributes: List
        """

        self._input_attributes = input_attributes
