# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.maintenance_status import MaintenanceStatus
from openapi_server.models.server_status import ServerStatus
from openapi_server import util


class Server(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, associate_public_ip_address: bool=None, backup_retention_count: int=None, server_name: str=None, created_at: datetime=None, cloud_formation_stack_arn: str=None, custom_domain: str=None, disable_automated_backup: bool=None, endpoint: str=None, engine: str=None, engine_model: str=None, engine_attributes: List=None, engine_version: str=None, instance_profile_arn: str=None, instance_type: str=None, key_pair: str=None, maintenance_status: MaintenanceStatus=None, preferred_maintenance_window: str=None, preferred_backup_window: str=None, security_group_ids: List=None, service_role_arn: str=None, status: ServerStatus=None, status_reason: str=None, subnet_ids: List=None, server_arn: str=None):
        """Server - a model defined in OpenAPI

        :param associate_public_ip_address: The associate_public_ip_address of this Server.
        :param backup_retention_count: The backup_retention_count of this Server.
        :param server_name: The server_name of this Server.
        :param created_at: The created_at of this Server.
        :param cloud_formation_stack_arn: The cloud_formation_stack_arn of this Server.
        :param custom_domain: The custom_domain of this Server.
        :param disable_automated_backup: The disable_automated_backup of this Server.
        :param endpoint: The endpoint of this Server.
        :param engine: The engine of this Server.
        :param engine_model: The engine_model of this Server.
        :param engine_attributes: The engine_attributes of this Server.
        :param engine_version: The engine_version of this Server.
        :param instance_profile_arn: The instance_profile_arn of this Server.
        :param instance_type: The instance_type of this Server.
        :param key_pair: The key_pair of this Server.
        :param maintenance_status: The maintenance_status of this Server.
        :param preferred_maintenance_window: The preferred_maintenance_window of this Server.
        :param preferred_backup_window: The preferred_backup_window of this Server.
        :param security_group_ids: The security_group_ids of this Server.
        :param service_role_arn: The service_role_arn of this Server.
        :param status: The status of this Server.
        :param status_reason: The status_reason of this Server.
        :param subnet_ids: The subnet_ids of this Server.
        :param server_arn: The server_arn of this Server.
        """
        self.openapi_types = {
            'associate_public_ip_address': bool,
            'backup_retention_count': int,
            'server_name': str,
            'created_at': datetime,
            'cloud_formation_stack_arn': str,
            'custom_domain': str,
            'disable_automated_backup': bool,
            'endpoint': str,
            'engine': str,
            'engine_model': str,
            'engine_attributes': List,
            'engine_version': str,
            'instance_profile_arn': str,
            'instance_type': str,
            'key_pair': str,
            'maintenance_status': MaintenanceStatus,
            'preferred_maintenance_window': str,
            'preferred_backup_window': str,
            'security_group_ids': List,
            'service_role_arn': str,
            'status': ServerStatus,
            'status_reason': str,
            'subnet_ids': List,
            'server_arn': str
        }

        self.attribute_map = {
            'associate_public_ip_address': 'AssociatePublicIpAddress',
            'backup_retention_count': 'BackupRetentionCount',
            'server_name': 'ServerName',
            'created_at': 'CreatedAt',
            'cloud_formation_stack_arn': 'CloudFormationStackArn',
            'custom_domain': 'CustomDomain',
            'disable_automated_backup': 'DisableAutomatedBackup',
            'endpoint': 'Endpoint',
            'engine': 'Engine',
            'engine_model': 'EngineModel',
            'engine_attributes': 'EngineAttributes',
            'engine_version': 'EngineVersion',
            'instance_profile_arn': 'InstanceProfileArn',
            'instance_type': 'InstanceType',
            'key_pair': 'KeyPair',
            'maintenance_status': 'MaintenanceStatus',
            'preferred_maintenance_window': 'PreferredMaintenanceWindow',
            'preferred_backup_window': 'PreferredBackupWindow',
            'security_group_ids': 'SecurityGroupIds',
            'service_role_arn': 'ServiceRoleArn',
            'status': 'Status',
            'status_reason': 'StatusReason',
            'subnet_ids': 'SubnetIds',
            'server_arn': 'ServerArn'
        }

        self._associate_public_ip_address = associate_public_ip_address
        self._backup_retention_count = backup_retention_count
        self._server_name = server_name
        self._created_at = created_at
        self._cloud_formation_stack_arn = cloud_formation_stack_arn
        self._custom_domain = custom_domain
        self._disable_automated_backup = disable_automated_backup
        self._endpoint = endpoint
        self._engine = engine
        self._engine_model = engine_model
        self._engine_attributes = engine_attributes
        self._engine_version = engine_version
        self._instance_profile_arn = instance_profile_arn
        self._instance_type = instance_type
        self._key_pair = key_pair
        self._maintenance_status = maintenance_status
        self._preferred_maintenance_window = preferred_maintenance_window
        self._preferred_backup_window = preferred_backup_window
        self._security_group_ids = security_group_ids
        self._service_role_arn = service_role_arn
        self._status = status
        self._status_reason = status_reason
        self._subnet_ids = subnet_ids
        self._server_arn = server_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Server':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Server of this Server.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def associate_public_ip_address(self):
        """Gets the associate_public_ip_address of this Server.


        :return: The associate_public_ip_address of this Server.
        :rtype: bool
        """
        return self._associate_public_ip_address

    @associate_public_ip_address.setter
    def associate_public_ip_address(self, associate_public_ip_address):
        """Sets the associate_public_ip_address of this Server.


        :param associate_public_ip_address: The associate_public_ip_address of this Server.
        :type associate_public_ip_address: bool
        """

        self._associate_public_ip_address = associate_public_ip_address

    @property
    def backup_retention_count(self):
        """Gets the backup_retention_count of this Server.


        :return: The backup_retention_count of this Server.
        :rtype: int
        """
        return self._backup_retention_count

    @backup_retention_count.setter
    def backup_retention_count(self, backup_retention_count):
        """Sets the backup_retention_count of this Server.


        :param backup_retention_count: The backup_retention_count of this Server.
        :type backup_retention_count: int
        """

        self._backup_retention_count = backup_retention_count

    @property
    def server_name(self):
        """Gets the server_name of this Server.


        :return: The server_name of this Server.
        :rtype: str
        """
        return self._server_name

    @server_name.setter
    def server_name(self, server_name):
        """Sets the server_name of this Server.


        :param server_name: The server_name of this Server.
        :type server_name: str
        """

        self._server_name = server_name

    @property
    def created_at(self):
        """Gets the created_at of this Server.


        :return: The created_at of this Server.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Server.


        :param created_at: The created_at of this Server.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def cloud_formation_stack_arn(self):
        """Gets the cloud_formation_stack_arn of this Server.


        :return: The cloud_formation_stack_arn of this Server.
        :rtype: str
        """
        return self._cloud_formation_stack_arn

    @cloud_formation_stack_arn.setter
    def cloud_formation_stack_arn(self, cloud_formation_stack_arn):
        """Sets the cloud_formation_stack_arn of this Server.


        :param cloud_formation_stack_arn: The cloud_formation_stack_arn of this Server.
        :type cloud_formation_stack_arn: str
        """

        self._cloud_formation_stack_arn = cloud_formation_stack_arn

    @property
    def custom_domain(self):
        """Gets the custom_domain of this Server.


        :return: The custom_domain of this Server.
        :rtype: str
        """
        return self._custom_domain

    @custom_domain.setter
    def custom_domain(self, custom_domain):
        """Sets the custom_domain of this Server.


        :param custom_domain: The custom_domain of this Server.
        :type custom_domain: str
        """

        self._custom_domain = custom_domain

    @property
    def disable_automated_backup(self):
        """Gets the disable_automated_backup of this Server.


        :return: The disable_automated_backup of this Server.
        :rtype: bool
        """
        return self._disable_automated_backup

    @disable_automated_backup.setter
    def disable_automated_backup(self, disable_automated_backup):
        """Sets the disable_automated_backup of this Server.


        :param disable_automated_backup: The disable_automated_backup of this Server.
        :type disable_automated_backup: bool
        """

        self._disable_automated_backup = disable_automated_backup

    @property
    def endpoint(self):
        """Gets the endpoint of this Server.


        :return: The endpoint of this Server.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this Server.


        :param endpoint: The endpoint of this Server.
        :type endpoint: str
        """

        self._endpoint = endpoint

    @property
    def engine(self):
        """Gets the engine of this Server.


        :return: The engine of this Server.
        :rtype: str
        """
        return self._engine

    @engine.setter
    def engine(self, engine):
        """Sets the engine of this Server.


        :param engine: The engine of this Server.
        :type engine: str
        """

        self._engine = engine

    @property
    def engine_model(self):
        """Gets the engine_model of this Server.


        :return: The engine_model of this Server.
        :rtype: str
        """
        return self._engine_model

    @engine_model.setter
    def engine_model(self, engine_model):
        """Sets the engine_model of this Server.


        :param engine_model: The engine_model of this Server.
        :type engine_model: str
        """

        self._engine_model = engine_model

    @property
    def engine_attributes(self):
        """Gets the engine_attributes of this Server.


        :return: The engine_attributes of this Server.
        :rtype: List
        """
        return self._engine_attributes

    @engine_attributes.setter
    def engine_attributes(self, engine_attributes):
        """Sets the engine_attributes of this Server.


        :param engine_attributes: The engine_attributes of this Server.
        :type engine_attributes: List
        """

        self._engine_attributes = engine_attributes

    @property
    def engine_version(self):
        """Gets the engine_version of this Server.


        :return: The engine_version of this Server.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this Server.


        :param engine_version: The engine_version of this Server.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def instance_profile_arn(self):
        """Gets the instance_profile_arn of this Server.


        :return: The instance_profile_arn of this Server.
        :rtype: str
        """
        return self._instance_profile_arn

    @instance_profile_arn.setter
    def instance_profile_arn(self, instance_profile_arn):
        """Sets the instance_profile_arn of this Server.


        :param instance_profile_arn: The instance_profile_arn of this Server.
        :type instance_profile_arn: str
        """

        self._instance_profile_arn = instance_profile_arn

    @property
    def instance_type(self):
        """Gets the instance_type of this Server.


        :return: The instance_type of this Server.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this Server.


        :param instance_type: The instance_type of this Server.
        :type instance_type: str
        """

        self._instance_type = instance_type

    @property
    def key_pair(self):
        """Gets the key_pair of this Server.


        :return: The key_pair of this Server.
        :rtype: str
        """
        return self._key_pair

    @key_pair.setter
    def key_pair(self, key_pair):
        """Sets the key_pair of this Server.


        :param key_pair: The key_pair of this Server.
        :type key_pair: str
        """

        self._key_pair = key_pair

    @property
    def maintenance_status(self):
        """Gets the maintenance_status of this Server.


        :return: The maintenance_status of this Server.
        :rtype: MaintenanceStatus
        """
        return self._maintenance_status

    @maintenance_status.setter
    def maintenance_status(self, maintenance_status):
        """Sets the maintenance_status of this Server.


        :param maintenance_status: The maintenance_status of this Server.
        :type maintenance_status: MaintenanceStatus
        """

        self._maintenance_status = maintenance_status

    @property
    def preferred_maintenance_window(self):
        """Gets the preferred_maintenance_window of this Server.


        :return: The preferred_maintenance_window of this Server.
        :rtype: str
        """
        return self._preferred_maintenance_window

    @preferred_maintenance_window.setter
    def preferred_maintenance_window(self, preferred_maintenance_window):
        """Sets the preferred_maintenance_window of this Server.


        :param preferred_maintenance_window: The preferred_maintenance_window of this Server.
        :type preferred_maintenance_window: str
        """

        self._preferred_maintenance_window = preferred_maintenance_window

    @property
    def preferred_backup_window(self):
        """Gets the preferred_backup_window of this Server.


        :return: The preferred_backup_window of this Server.
        :rtype: str
        """
        return self._preferred_backup_window

    @preferred_backup_window.setter
    def preferred_backup_window(self, preferred_backup_window):
        """Sets the preferred_backup_window of this Server.


        :param preferred_backup_window: The preferred_backup_window of this Server.
        :type preferred_backup_window: str
        """

        self._preferred_backup_window = preferred_backup_window

    @property
    def security_group_ids(self):
        """Gets the security_group_ids of this Server.


        :return: The security_group_ids of this Server.
        :rtype: List
        """
        return self._security_group_ids

    @security_group_ids.setter
    def security_group_ids(self, security_group_ids):
        """Sets the security_group_ids of this Server.


        :param security_group_ids: The security_group_ids of this Server.
        :type security_group_ids: List
        """

        self._security_group_ids = security_group_ids

    @property
    def service_role_arn(self):
        """Gets the service_role_arn of this Server.


        :return: The service_role_arn of this Server.
        :rtype: str
        """
        return self._service_role_arn

    @service_role_arn.setter
    def service_role_arn(self, service_role_arn):
        """Sets the service_role_arn of this Server.


        :param service_role_arn: The service_role_arn of this Server.
        :type service_role_arn: str
        """

        self._service_role_arn = service_role_arn

    @property
    def status(self):
        """Gets the status of this Server.


        :return: The status of this Server.
        :rtype: ServerStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Server.


        :param status: The status of this Server.
        :type status: ServerStatus
        """

        self._status = status

    @property
    def status_reason(self):
        """Gets the status_reason of this Server.


        :return: The status_reason of this Server.
        :rtype: str
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this Server.


        :param status_reason: The status_reason of this Server.
        :type status_reason: str
        """

        self._status_reason = status_reason

    @property
    def subnet_ids(self):
        """Gets the subnet_ids of this Server.


        :return: The subnet_ids of this Server.
        :rtype: List
        """
        return self._subnet_ids

    @subnet_ids.setter
    def subnet_ids(self, subnet_ids):
        """Sets the subnet_ids of this Server.


        :param subnet_ids: The subnet_ids of this Server.
        :type subnet_ids: List
        """

        self._subnet_ids = subnet_ids

    @property
    def server_arn(self):
        """Gets the server_arn of this Server.


        :return: The server_arn of this Server.
        :rtype: str
        """
        return self._server_arn

    @server_arn.setter
    def server_arn(self, server_arn):
        """Sets the server_arn of this Server.


        :param server_arn: The server_arn of this Server.
        :type server_arn: str
        """

        self._server_arn = server_arn
