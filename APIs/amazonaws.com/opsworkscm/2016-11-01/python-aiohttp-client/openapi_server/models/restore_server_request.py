# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RestoreServerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_id: str=None, server_name: str=None, instance_type: str=None, key_pair: str=None):
        """RestoreServerRequest - a model defined in OpenAPI

        :param backup_id: The backup_id of this RestoreServerRequest.
        :param server_name: The server_name of this RestoreServerRequest.
        :param instance_type: The instance_type of this RestoreServerRequest.
        :param key_pair: The key_pair of this RestoreServerRequest.
        """
        self.openapi_types = {
            'backup_id': str,
            'server_name': str,
            'instance_type': str,
            'key_pair': str
        }

        self.attribute_map = {
            'backup_id': 'BackupId',
            'server_name': 'ServerName',
            'instance_type': 'InstanceType',
            'key_pair': 'KeyPair'
        }

        self._backup_id = backup_id
        self._server_name = server_name
        self._instance_type = instance_type
        self._key_pair = key_pair

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RestoreServerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RestoreServerRequest of this RestoreServerRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_id(self):
        """Gets the backup_id of this RestoreServerRequest.


        :return: The backup_id of this RestoreServerRequest.
        :rtype: str
        """
        return self._backup_id

    @backup_id.setter
    def backup_id(self, backup_id):
        """Sets the backup_id of this RestoreServerRequest.


        :param backup_id: The backup_id of this RestoreServerRequest.
        :type backup_id: str
        """
        if backup_id is None:
            raise ValueError("Invalid value for `backup_id`, must not be `None`")

        self._backup_id = backup_id

    @property
    def server_name(self):
        """Gets the server_name of this RestoreServerRequest.


        :return: The server_name of this RestoreServerRequest.
        :rtype: str
        """
        return self._server_name

    @server_name.setter
    def server_name(self, server_name):
        """Sets the server_name of this RestoreServerRequest.


        :param server_name: The server_name of this RestoreServerRequest.
        :type server_name: str
        """
        if server_name is None:
            raise ValueError("Invalid value for `server_name`, must not be `None`")

        self._server_name = server_name

    @property
    def instance_type(self):
        """Gets the instance_type of this RestoreServerRequest.


        :return: The instance_type of this RestoreServerRequest.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this RestoreServerRequest.


        :param instance_type: The instance_type of this RestoreServerRequest.
        :type instance_type: str
        """

        self._instance_type = instance_type

    @property
    def key_pair(self):
        """Gets the key_pair of this RestoreServerRequest.


        :return: The key_pair of this RestoreServerRequest.
        :rtype: str
        """
        return self._key_pair

    @key_pair.setter
    def key_pair(self, key_pair):
        """Sets the key_pair of this RestoreServerRequest.


        :param key_pair: The key_pair of this RestoreServerRequest.
        :type key_pair: str
        """

        self._key_pair = key_pair
