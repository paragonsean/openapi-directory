# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartMaintenanceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server_name: str=None, engine_attributes: List=None):
        """StartMaintenanceRequest - a model defined in OpenAPI

        :param server_name: The server_name of this StartMaintenanceRequest.
        :param engine_attributes: The engine_attributes of this StartMaintenanceRequest.
        """
        self.openapi_types = {
            'server_name': str,
            'engine_attributes': List
        }

        self.attribute_map = {
            'server_name': 'ServerName',
            'engine_attributes': 'EngineAttributes'
        }

        self._server_name = server_name
        self._engine_attributes = engine_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartMaintenanceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartMaintenanceRequest of this StartMaintenanceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server_name(self):
        """Gets the server_name of this StartMaintenanceRequest.


        :return: The server_name of this StartMaintenanceRequest.
        :rtype: str
        """
        return self._server_name

    @server_name.setter
    def server_name(self, server_name):
        """Sets the server_name of this StartMaintenanceRequest.


        :param server_name: The server_name of this StartMaintenanceRequest.
        :type server_name: str
        """
        if server_name is None:
            raise ValueError("Invalid value for `server_name`, must not be `None`")

        self._server_name = server_name

    @property
    def engine_attributes(self):
        """Gets the engine_attributes of this StartMaintenanceRequest.


        :return: The engine_attributes of this StartMaintenanceRequest.
        :rtype: List
        """
        return self._engine_attributes

    @engine_attributes.setter
    def engine_attributes(self, engine_attributes):
        """Sets the engine_attributes of this StartMaintenanceRequest.


        :param engine_attributes: The engine_attributes of this StartMaintenanceRequest.
        :type engine_attributes: List
        """

        self._engine_attributes = engine_attributes
