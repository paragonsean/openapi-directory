# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountAttribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, maximum: int=None, used: int=None):
        """AccountAttribute - a model defined in OpenAPI

        :param name: The name of this AccountAttribute.
        :param maximum: The maximum of this AccountAttribute.
        :param used: The used of this AccountAttribute.
        """
        self.openapi_types = {
            'name': str,
            'maximum': int,
            'used': int
        }

        self.attribute_map = {
            'name': 'Name',
            'maximum': 'Maximum',
            'used': 'Used'
        }

        self._name = name
        self._maximum = maximum
        self._used = used

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountAttribute of this AccountAttribute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this AccountAttribute.


        :return: The name of this AccountAttribute.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AccountAttribute.


        :param name: The name of this AccountAttribute.
        :type name: str
        """

        self._name = name

    @property
    def maximum(self):
        """Gets the maximum of this AccountAttribute.


        :return: The maximum of this AccountAttribute.
        :rtype: int
        """
        return self._maximum

    @maximum.setter
    def maximum(self, maximum):
        """Sets the maximum of this AccountAttribute.


        :param maximum: The maximum of this AccountAttribute.
        :type maximum: int
        """

        self._maximum = maximum

    @property
    def used(self):
        """Gets the used of this AccountAttribute.


        :return: The used of this AccountAttribute.
        :rtype: int
        """
        return self._used

    @used.setter
    def used(self, used):
        """Sets the used of this AccountAttribute.


        :param used: The used of this AccountAttribute.
        :type used: int
        """

        self._used = used
