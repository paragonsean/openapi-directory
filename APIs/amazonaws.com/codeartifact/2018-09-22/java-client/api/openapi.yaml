openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p> CodeArtifact is a fully managed artifact repository compatible\
    \ with language-native package managers and build tools such as npm, Apache Maven,\
    \ pip, and dotnet. You can use CodeArtifact to share packages with development\
    \ teams and pull packages. Packages can be pulled from both public and CodeArtifact\
    \ repositories. You can also create an upstream relationship between a CodeArtifact\
    \ repository and another repository, which effectively merges their contents from\
    \ the point of view of a package manager client. </p> <p> <b>CodeArtifact Components</b>\
    \ </p> <p>Use the information in this guide to help you work with the following\
    \ CodeArtifact components:</p> <ul> <li> <p> <b>Repository</b>: A CodeArtifact\
    \ repository contains a set of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/welcome.html#welcome-concepts-package-version\"\
    >package versions</a>, each of which maps to a set of assets, or files. Repositories\
    \ are polyglot, so a single repository can contain packages of any supported type.\
    \ Each repository exposes endpoints for fetching and publishing packages using\
    \ tools like the <b> <code>npm</code> </b> CLI, the Maven CLI (<b> <code>mvn</code>\
    \ </b>), Python CLIs (<b> <code>pip</code> </b> and <code>twine</code>), and NuGet\
    \ CLIs (<code>nuget</code> and <code>dotnet</code>).</p> </li> <li> <p> <b>Domain</b>:\
    \ Repositories are aggregated into a higher-level entity known as a <i>domain</i>.\
    \ All package assets and metadata are stored in the domain, but are consumed through\
    \ repositories. A given package asset, such as a Maven JAR file, is stored once\
    \ per domain, no matter how many repositories it's present in. All of the assets\
    \ and metadata in a domain are encrypted with the same customer master key (CMK)\
    \ stored in Key Management Service (KMS).</p> <p>Each repository is a member of\
    \ a single domain and can't be moved to a different domain.</p> <p>The domain\
    \ allows organizational policy to be applied across multiple repositories, such\
    \ as which accounts can access repositories in the domain, and which public repositories\
    \ can be used as sources of packages.</p> <p>Although an organization can have\
    \ multiple domains, we recommend a single production domain that contains all\
    \ published artifacts so that teams can find and share packages across their organization.</p>\
    \ </li> <li> <p> <b>Package</b>: A <i>package</i> is a bundle of software and\
    \ the metadata required to resolve dependencies and install the software. CodeArtifact\
    \ supports <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/using-npm.html\"\
    >npm</a>, <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/using-python.html\"\
    >PyPI</a>, <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/using-maven\"\
    >Maven</a>, and <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/using-nuget\"\
    >NuGet</a> package formats.</p> <p>In CodeArtifact, a package consists of:</p>\
    \ <ul> <li> <p>A <i>name</i> (for example, <code>webpack</code> is the name of\
    \ a popular npm package)</p> </li> <li> <p>An optional namespace (for example,\
    \ <code>@types</code> in <code>@types/node</code>)</p> </li> <li> <p>A set of\
    \ versions (for example, <code>1.0.0</code>, <code>1.0.1</code>, <code>1.0.2</code>,\
    \ etc.)</p> </li> <li> <p> Package-level metadata (for example, npm tags)</p>\
    \ </li> </ul> </li> <li> <p> <b>Package version</b>: A version of a package, such\
    \ as <code>@types/node 12.6.9</code>. The version number format and semantics\
    \ vary for different package formats. For example, npm package versions must conform\
    \ to the <a href=\"https://semver.org/\">Semantic Versioning specification</a>.\
    \ In CodeArtifact, a package version consists of the version identifier, metadata\
    \ at the package version level, and a set of assets.</p> </li> <li> <p> <b>Upstream\
    \ repository</b>: One repository is <i>upstream</i> of another when the package\
    \ versions in it can be accessed from the repository endpoint of the downstream\
    \ repository, effectively merging the contents of the two repositories from the\
    \ point of view of a client. CodeArtifact allows creating an upstream relationship\
    \ between two repositories.</p> </li> <li> <p> <b>Asset</b>: An individual file\
    \ stored in CodeArtifact associated with a package version, such as an npm <code>.tgz</code>\
    \ file or Maven POM and JAR files.</p> </li> </ul> <p>CodeArtifact supports these\
    \ operations:</p> <ul> <li> <p> <code>AssociateExternalConnection</code>: Adds\
    \ an existing external connection to a repository. </p> </li> <li> <p> <code>CopyPackageVersions</code>:\
    \ Copies package versions from one repository to another repository in the same\
    \ domain.</p> </li> <li> <p> <code>CreateDomain</code>: Creates a domain</p> </li>\
    \ <li> <p> <code>CreateRepository</code>: Creates a CodeArtifact repository in\
    \ a domain. </p> </li> <li> <p> <code>DeleteDomain</code>: Deletes a domain. You\
    \ cannot delete a domain that contains repositories. </p> </li> <li> <p> <code>DeleteDomainPermissionsPolicy</code>:\
    \ Deletes the resource policy that is set on a domain.</p> </li> <li> <p> <code>DeletePackage</code>:\
    \ Deletes a package and all associated package versions.</p> </li> <li> <p> <code>DeletePackageVersions</code>:\
    \ Deletes versions of a package. After a package has been deleted, it can be republished,\
    \ but its assets and metadata cannot be restored because they have been permanently\
    \ removed from storage.</p> </li> <li> <p> <code>DeleteRepository</code>: Deletes\
    \ a repository. </p> </li> <li> <p> <code>DeleteRepositoryPermissionsPolicy</code>:\
    \ Deletes the resource policy that is set on a repository.</p> </li> <li> <p>\
    \ <code>DescribeDomain</code>: Returns a <code>DomainDescription</code> object\
    \ that contains information about the requested domain.</p> </li> <li> <p> <code>DescribePackage</code>:\
    \ Returns a <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageDescription.html\"\
    >PackageDescription</a> object that contains details about a package. </p> </li>\
    \ <li> <p> <code>DescribePackageVersion</code>: Returns a <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html\"\
    >PackageVersionDescription</a> object that contains details about a package version.\
    \ </p> </li> <li> <p> <code>DescribeRepository</code>: Returns a <code>RepositoryDescription</code>\
    \ object that contains detailed information about the requested repository. </p>\
    \ </li> <li> <p> <code>DisposePackageVersions</code>: Disposes versions of a package.\
    \ A package version with the status <code>Disposed</code> cannot be restored because\
    \ they have been permanently removed from storage.</p> </li> <li> <p> <code>DisassociateExternalConnection</code>:\
    \ Removes an existing external connection from a repository. </p> </li> <li> <p>\
    \ <code>GetAuthorizationToken</code>: Generates a temporary authorization token\
    \ for accessing repositories in the domain. The token expires the authorization\
    \ period has passed. The default authorization period is 12 hours and can be customized\
    \ to any length with a maximum of 12 hours.</p> </li> <li> <p> <code>GetDomainPermissionsPolicy</code>:\
    \ Returns the policy of a resource that is attached to the specified domain. </p>\
    \ </li> <li> <p> <code>GetPackageVersionAsset</code>: Returns the contents of\
    \ an asset that is in a package version. </p> </li> <li> <p> <code>GetPackageVersionReadme</code>:\
    \ Gets the readme file or descriptive text for a package version.</p> </li> <li>\
    \ <p> <code>GetRepositoryEndpoint</code>: Returns the endpoint of a repository\
    \ for a specific package format. A repository has one endpoint for each package\
    \ format: </p> <ul> <li> <p> <code>maven</code> </p> </li> <li> <p> <code>npm</code>\
    \ </p> </li> <li> <p> <code>nuget</code> </p> </li> <li> <p> <code>pypi</code>\
    \ </p> </li> </ul> </li> <li> <p> <code>GetRepositoryPermissionsPolicy</code>:\
    \ Returns the resource policy that is set on a repository. </p> </li> <li> <p>\
    \ <code>ListDomains</code>: Returns a list of <code>DomainSummary</code> objects.\
    \ Each returned <code>DomainSummary</code> object contains information about a\
    \ domain.</p> </li> <li> <p> <code>ListPackages</code>: Lists the packages in\
    \ a repository.</p> </li> <li> <p> <code>ListPackageVersionAssets</code>: Lists\
    \ the assets for a given package version.</p> </li> <li> <p> <code>ListPackageVersionDependencies</code>:\
    \ Returns a list of the direct dependencies for a package version. </p> </li>\
    \ <li> <p> <code>ListPackageVersions</code>: Returns a list of package versions\
    \ for a specified package in a repository.</p> </li> <li> <p> <code>ListRepositories</code>:\
    \ Returns a list of repositories owned by the Amazon Web Services account that\
    \ called this method.</p> </li> <li> <p> <code>ListRepositoriesInDomain</code>:\
    \ Returns a list of the repositories in a domain.</p> </li> <li> <p> <code>PublishPackageVersion</code>:\
    \ Creates a new package version containing one or more assets.</p> </li> <li>\
    \ <p> <code>PutDomainPermissionsPolicy</code>: Attaches a resource policy to a\
    \ domain.</p> </li> <li> <p> <code>PutPackageOriginConfiguration</code>: Sets\
    \ the package origin configuration for a package, which determine how new versions\
    \ of the package can be added to a specific repository.</p> </li> <li> <p> <code>PutRepositoryPermissionsPolicy</code>:\
    \ Sets the resource policy on a repository that specifies permissions to access\
    \ it. </p> </li> <li> <p> <code>UpdatePackageVersionsStatus</code>: Updates the\
    \ status of one or more versions of a package.</p> </li> <li> <p> <code>UpdateRepository</code>:\
    \ Updates the properties of a repository.</p> </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: CodeArtifact
  version: 2018-09-22
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: codeartifact
  x-aws-signingName: codeartifact
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codeartifact-2018-09-22.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codeartifact/
servers:
- description: The CodeArtifact multi-region endpoint
  url: "http://codeartifact.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CodeArtifact multi-region endpoint
  url: "https://codeartifact.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CodeArtifact endpoint for China (Beijing) and China (Ningxia)
  url: "http://codeartifact.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The CodeArtifact endpoint for China (Beijing) and China (Ningxia)
  url: "https://codeartifact.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /v1/repository/external-connection#domain&repository&external-connection:
    delete:
      description: ' Removes an existing external connection from a repository. '
      operationId: DisassociateExternalConnection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The name of the domain that contains the repository from which
          to remove the external repository. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: 'The name of the repository from which the external connection
          will be removed. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: 'The name of the external connection to be removed from the repository. '
        explode: true
        in: query
        name: external-connection
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-:]{1,99}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateExternalConnectionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    post:
      description: "<p>Adds an existing external connection to a repository. One external\
        \ connection is allowed per repository.</p> <note> <p>A repository can have\
        \ one or more upstream repositories, or an external connection.</p> </note>"
      operationId: AssociateExternalConnection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the domain that contains the repository.
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository to which the external connection
          is added. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: "<p> The name of the external connection to add to the repository.\
          \ The following values are supported: </p> <ul> <li> <p> <code>public:npmjs</code>\
          \ - for the npm public repository. </p> </li> <li> <p> <code>public:nuget-org</code>\
          \ - for the NuGet Gallery. </p> </li> <li> <p> <code>public:pypi</code>\
          \ - for the Python Package Index. </p> </li> <li> <p> <code>public:maven-central</code>\
          \ - for Maven Central. </p> </li> <li> <p> <code>public:maven-googleandroid</code>\
          \ - for the Google Android repository. </p> </li> <li> <p> <code>public:maven-gradleplugins</code>\
          \ - for the Gradle plugins repository. </p> </li> <li> <p> <code>public:maven-commonsware</code>\
          \ - for the CommonsWare Android repository. </p> </li> <li> <p> <code>public:maven-clojars</code>\
          \ - for the Clojars repository. </p> </li> </ul>"
        explode: true
        in: query
        name: external-connection
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-:]{1,99}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateExternalConnectionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/package/versions/copy#domain&source-repository&destination-repository&format&package:
    post:
      description: <p> Copies package versions from one repository to another repository
        in the same domain. </p> <note> <p> You must specify <code>versions</code>
        or <code>versionRevisions</code>. You cannot specify both. </p> </note>
      operationId: CopyPackageVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the source and destination
          repositories. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository that contains the package versions
          to be copied. '
        explode: true
        in: query
        name: source-repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' The name of the repository into which package versions are
          copied. '
        explode: true
        in: query
        name: destination-repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' The format of the package versions to be copied. '
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the package versions to be copied. The package\
          \ version component that specifies its namespace depends on its type. For\
          \ example:</p> <ul> <li> <p> The namespace of a Maven package version is\
          \ its <code>groupId</code>. The namespace is required when copying Maven\
          \ package versions. </p> </li> <li> <p> The namespace of an npm package\
          \ version is its <code>scope</code>. </p> </li> <li> <p> Python and NuGet\
          \ package versions do not contain a corresponding component, package versions\
          \ of those formats do not have a namespace. </p> </li> <li> <p> The namespace\
          \ of a generic package is its <code>namespace</code>. </p> </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The name of the package that contains the versions to be copied. '
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyPackageVersions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyPackageVersionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/domain#domain:
    delete:
      description: " Deletes a domain. You cannot delete a domain that contains repositories.\
        \ If you want to delete a domain with repositories, first delete its repositories. "
      operationId: DeleteDomain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain to delete. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDomainResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    get:
      description: ' Returns a <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DomainDescription.html">DomainDescription</a>
        object that contains information about the requested domain. '
      operationId: DescribeDomain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' A string that specifies the name of the requested domain. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    post:
      description: "<p> Creates a domain. CodeArtifact <i>domains</i> make it easier\
        \ to manage multiple repositories across an organization. You can use a domain\
        \ to apply permissions across many repositories owned by different Amazon\
        \ Web Services accounts. An asset is stored only once in a domain, even if\
        \ it's in multiple repositories. </p> <p>Although you can have multiple domains,\
        \ we recommend a single production domain that contains all published artifacts\
        \ so that your development teams can find and share packages. You can use\
        \ a second pre-production domain to test changes to the production domain\
        \ configuration. </p>"
      operationId: CreateDomain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain to create. All domain names in an Amazon
          Web Services Region that are in the same Amazon Web Services account must
          be unique. The domain name is used as the prefix in DNS hostnames. Do not
          use sensitive information in a domain name because it is publicly discoverable. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDomain_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/repository#domain&repository:
    delete:
      description: ' Deletes a repository. '
      operationId: DeleteRepository
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository to delete. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository to delete. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRepositoryResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    get:
      description: ' Returns a <code>RepositoryDescription</code> object that contains
        detailed information about the requested repository. '
      operationId: DescribeRepository
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository to describe. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' A string that specifies the name of the requested repository. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRepositoryResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    post:
      description: ' Creates a repository. '
      operationId: CreateRepository
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the created repository. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository to create. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRepository_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRepositoryResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: ' Update the properties of a repository. '
      operationId: UpdateRepository
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain associated with the repository to update. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository to update. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRepository_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRepositoryResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/domain/permissions/policy#domain:
    delete:
      description: ' Deletes the resource policy set on a domain. '
      operationId: DeleteDomainPermissionsPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain associated with the resource policy
          to be deleted. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: " The current revision of the resource policy to be deleted.\
          \ This revision is used for optimistic locking, which prevents others from\
          \ overwriting your changes to the domain's resource policy. "
        explode: true
        in: query
        name: policy-revision
        required: false
        schema:
          maxLength: 100
          minLength: 1
          pattern: \S+
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDomainPermissionsPolicyResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    get:
      description: "<p> Returns the resource policy attached to the specified domain.\
        \ </p> <note> <p> The policy is a resource-based policy, not an identity-based\
        \ policy. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_identity-vs-resource.html\"\
        >Identity-based policies and resource-based policies </a> in the <i>IAM User\
        \ Guide</i>. </p> </note>"
      operationId: GetDomainPermissionsPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain to which the resource policy is attached. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainPermissionsPolicyResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/package#domain&repository&format&package:
    delete:
      description: "Deletes a package and all associated package versions. A deleted\
        \ package cannot be restored. To delete one or more package versions, use\
        \ the <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DeletePackageVersions.html\"\
        >DeletePackageVersions</a> API."
      operationId: DeletePackage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the domain that contains the package to delete.
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: The name of the repository that contains the package to delete.
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: The format of the requested package to delete.
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the package to delete. The package component\
          \ that specifies its namespace depends on its type. For example:</p> <ul>\
          \ <li> <p> The namespace of a Maven package is its <code>groupId</code>.\
          \ The namespace is required when deleting Maven package versions. </p> </li>\
          \ <li> <p> The namespace of an npm package is its <code>scope</code>.</p>\
          \ </li> <li> <p> Python and NuGet packages do not contain corresponding\
          \ components, packages of those formats do not have a namespace. </p> </li>\
          \ <li> <p> The namespace of a generic package is its <code>namespace</code>.\
          \ </p> </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: The name of the package to delete.
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackageResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    get:
      description: ' Returns a <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageDescription.html">PackageDescription</a>
        object that contains information about the requested package.'
      operationId: DescribePackage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the domain that contains the repository that contains
          the package.
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: 'The name of the repository that contains the requested package. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: A format that specifies the type of the requested package.
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the requested package. The package component\
          \ that specifies its namespace depends on its type. For example:</p> <ul>\
          \ <li> <p> The namespace of a Maven package is its <code>groupId</code>.\
          \ The namespace is required when requesting Maven packages. </p> </li> <li>\
          \ <p> The namespace of an npm package is its <code>scope</code>. </p> </li>\
          \ <li> <p> Python and NuGet packages do not contain a corresponding component,\
          \ packages of those formats do not have a namespace. </p> </li> <li> <p>\
          \ The namespace of a generic package is its <code>namespace</code>. </p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: The name of the requested package.
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackageResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    post:
      description: "<p>Sets the package origin configuration for a package.</p> <p>The\
        \ package origin configuration determines how new versions of a package can\
        \ be added to a repository. You can allow or block direct publishing of new\
        \ package versions, or ingestion and retaining of new package versions from\
        \ an external connection or upstream source. For more information about package\
        \ origin controls and configuration, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/package-origin-controls.html\"\
        >Editing package origin controls</a> in the <i>CodeArtifact User Guide</i>.</p>\
        \ <p> <code>PutPackageOriginConfiguration</code> can be called on a package\
        \ that doesn't yet exist in the repository. When called on a package that\
        \ does not exist, a package is created in the repository with no versions\
        \ and the requested restrictions are set on the package. This can be used\
        \ to preemptively block ingesting or retaining any versions from external\
        \ connections or upstream repositories, or to block publishing any versions\
        \ of the package into the repository before connecting any package managers\
        \ or publishers to the repository.</p>"
      operationId: PutPackageOriginConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the domain that contains the repository that contains
          the package.
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: The name of the repository that contains the package.
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: A format that specifies the type of the package to be updated.
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the package to be updated. The package component\
          \ that specifies its namespace depends on its type. For example:</p> <ul>\
          \ <li> <p> The namespace of a Maven package is its <code>groupId</code>.\
          \ </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>.\
          \ </p> </li> <li> <p> Python and NuGet packages do not contain a corresponding\
          \ component, packages of those formats do not have a namespace. </p> </li>\
          \ <li> <p> The namespace of a generic package is its <code>namespace</code>.\
          \ </p> </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: The name of the package to be updated.
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPackageOriginConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPackageOriginConfigurationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/package/versions/delete#domain&repository&format&package:
    post:
      description: " Deletes one or more versions of a package. A deleted package\
        \ version cannot be restored in your repository. If you want to remove a package\
        \ version from your repository and be able to restore it later, set its status\
        \ to <code>Archived</code>. Archived packages cannot be downloaded from a\
        \ repository and don't show up with list package APIs (for example, <a href=\"\
        https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html\"\
        >ListPackageVersions</a>), but you can restore them using <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_UpdatePackageVersionsStatus.html\"\
        >UpdatePackageVersionsStatus</a>. "
      operationId: DeletePackageVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the package to delete. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository that contains the package versions
          to delete. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' The format of the package versions to delete. '
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the package versions to be deleted. The\
          \ package version component that specifies its namespace depends on its\
          \ type. For example:</p> <ul> <li> <p> The namespace of a Maven package\
          \ version is its <code>groupId</code>. The namespace is required when deleting\
          \ Maven package versions. </p> </li> <li> <p> The namespace of an npm package\
          \ version is its <code>scope</code>. </p> </li> <li> <p> Python and NuGet\
          \ package versions do not contain a corresponding component, package versions\
          \ of those formats do not have a namespace. </p> </li> <li> <p> The namespace\
          \ of a generic package is its <code>namespace</code>. </p> </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The name of the package with the versions to delete. '
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePackageVersions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackageVersionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/repository/permissions/policies#domain&repository:
    delete:
      description: "<p> Deletes the resource policy that is set on a repository. After\
        \ a resource policy is deleted, the permissions allowed and denied by the\
        \ deleted policy are removed. The effect of deleting a resource policy might\
        \ not be immediate. </p> <important> <p> Use <code>DeleteRepositoryPermissionsPolicy</code>\
        \ with caution. After a policy is deleted, Amazon Web Services users, roles,\
        \ and accounts lose permissions to perform the repository actions granted\
        \ by the deleted policy. </p> </important>"
      operationId: DeleteRepositoryPermissionsPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository associated
          with the resource policy to be deleted. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository that is associated with the resource
          policy to be deleted '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: " The revision of the repository's resource policy to be deleted.\
          \ This revision is used for optimistic locking, which prevents others from\
          \ accidentally overwriting your changes to the repository's resource policy. "
        explode: true
        in: query
        name: policy-revision
        required: false
        schema:
          maxLength: 100
          minLength: 1
          pattern: \S+
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRepositoryPermissionsPolicyResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/package/version#domain&repository&format&package&version:
    get:
      description: ' Returns a <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html">PackageVersionDescription</a>
        object that contains information about the requested package version. '
      operationId: DescribePackageVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository that contains
          the package version. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository that contains the package version. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' A format that specifies the type of the requested package version. '
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the requested package version. The package\
          \ version component that specifies its namespace depends on its type. For\
          \ example:</p> <ul> <li> <p> The namespace of a Maven package version is\
          \ its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm\
          \ package version is its <code>scope</code>. </p> </li> <li> <p> Python\
          \ and NuGet package versions do not contain a corresponding component, package\
          \ versions of those formats do not have a namespace. </p> </li> <li> <p>\
          \ The namespace of a generic package is its <code>namespace</code>. </p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The name of the requested package version. '
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: " A string that contains the package version (for example, <code>3.5.2</code>). "
        explode: true
        in: query
        name: version
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackageVersionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/package/versions/dispose#domain&repository&format&package:
    post:
      description: "<p> Deletes the assets in package versions and sets the package\
        \ versions' status to <code>Disposed</code>. A disposed package version cannot\
        \ be restored in your repository because its assets are deleted. </p> <p>\
        \ To view all disposed package versions in a repository, use <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html\"\
        >ListPackageVersions</a> and set the <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html#API_ListPackageVersions_RequestSyntax\"\
        >status</a> parameter to <code>Disposed</code>. </p> <p> To view information\
        \ about a disposed package version, use <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DescribePackageVersion.html\"\
        >DescribePackageVersion</a>. </p>"
      operationId: DisposePackageVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository you want
          to dispose. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository that contains the package versions
          you want to dispose. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' A format that specifies the type of package versions you want
          to dispose. '
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the package versions to be disposed. The\
          \ package version component that specifies its namespace depends on its\
          \ type. For example:</p> <ul> <li> <p> The namespace of a Maven package\
          \ version is its <code>groupId</code>. </p> </li> <li> <p> The namespace\
          \ of an npm package version is its <code>scope</code>. </p> </li> <li> <p>\
          \ Python and NuGet package versions do not contain a corresponding component,\
          \ package versions of those formats do not have a namespace. </p> </li>\
          \ <li> <p> The namespace of a generic package is its <code>namespace</code>.\
          \ </p> </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The name of the package with the versions you want to dispose. '
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisposePackageVersions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposePackageVersionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/authorization-token#domain:
    post:
      description: "<p> Generates a temporary authorization token for accessing repositories\
        \ in the domain. This API requires the <code>codeartifact:GetAuthorizationToken</code>\
        \ and <code>sts:GetServiceBearerToken</code> permissions. For more information\
        \ about authorization tokens, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/tokens-authentication.html\"\
        >CodeArtifact authentication and tokens</a>. </p> <note> <p>CodeArtifact authorization\
        \ tokens are valid for a period of 12 hours when created with the <code>login</code>\
        \ command. You can call <code>login</code> periodically to refresh the token.\
        \ When you create an authorization token with the <code>GetAuthorizationToken</code>\
        \ API, you can set a custom authorization period, up to a maximum of 12 hours,\
        \ with the <code>durationSeconds</code> parameter.</p> <p>The authorization\
        \ period begins after <code>login</code> or <code>GetAuthorizationToken</code>\
        \ is called. If <code>login</code> or <code>GetAuthorizationToken</code> is\
        \ called while assuming a role, the token lifetime is independent of the maximum\
        \ session duration of the role. For example, if you call <code>sts assume-role</code>\
        \ and specify a session duration of 15 minutes, then generate a CodeArtifact\
        \ authorization token, the token will be valid for the full authorization\
        \ period even though this is longer than the 15-minute session duration.</p>\
        \ <p>See <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\"\
        >Using IAM Roles</a> for more information on controlling session duration.\
        \ </p> </note>"
      operationId: GetAuthorizationToken
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that is in scope for the generated authorization
          token. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: "The time, in seconds, that the generated authorization token\
          \ is valid. Valid values are <code>0</code> and any number between <code>900</code>\
          \ (15 minutes) and <code>43200</code> (12 hours). A value of <code>0</code>\
          \ will set the expiration of the authorization token to the same expiration\
          \ of the user's role's temporary credentials."
        explode: true
        in: query
        name: duration
        required: false
        schema:
          maximum: 43200
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthorizationTokenResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/package/version/asset#domain&repository&format&package&version&asset:
    get:
      description: " Returns an asset (or file) that is in a package. For example,\
        \ for a Maven package version, use <code>GetPackageVersionAsset</code> to\
        \ download a <code>JAR</code> file, a <code>POM</code> file, or any other\
        \ assets in the package version. "
      operationId: GetPackageVersionAsset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository that contains
          the package version with the requested asset. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The repository that contains the package version with the requested
          asset. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' A format that specifies the type of the package version with
          the requested asset file. '
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the package version with the requested asset\
          \ file. The package version component that specifies its namespace depends\
          \ on its type. For example:</p> <ul> <li> <p> The namespace of a Maven package\
          \ version is its <code>groupId</code>. </p> </li> <li> <p> The namespace\
          \ of an npm package version is its <code>scope</code>. </p> </li> <li> <p>\
          \ Python and NuGet package versions do not contain a corresponding component,\
          \ package versions of those formats do not have a namespace. </p> </li>\
          \ <li> <p> The namespace of a generic package is its <code>namespace</code>.\
          \ </p> </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The name of the package that contains the requested asset. '
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: " A string that contains the package version (for example, <code>3.5.2</code>). "
        explode: true
        in: query
        name: version
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The name of the requested asset. '
        explode: true
        in: query
        name: asset
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "\\P{C}+"
          type: string
        style: form
      - description: ' The name of the package version revision that contains the
          requested asset. '
        explode: true
        in: query
        name: revision
        required: false
        schema:
          maxLength: 50
          minLength: 1
          pattern: \S+
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPackageVersionAssetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-accepts:
      - application/json
  /v1/package/version/readme#domain&repository&format&package&version:
    get:
      description: "<p> Gets the readme file or descriptive text for a package version.\
        \ </p> <p> The returned text might contain formatting. For example, it might\
        \ contain formatting for Markdown or reStructuredText. </p>"
      operationId: GetPackageVersionReadme
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository that contains
          the package version with the requested readme file. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The repository that contains the package with the requested
          readme file. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' A format that specifies the type of the package version with
          the requested readme file. '
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the package version with the requested readme\
          \ file. The package version component that specifies its namespace depends\
          \ on its type. For example:</p> <ul> <li> <p> The namespace of an npm package\
          \ version is its <code>scope</code>. </p> </li> <li> <p> Python and NuGet\
          \ package versions do not contain a corresponding component, package versions\
          \ of those formats do not have a namespace. </p> </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The name of the package version that contains the requested
          readme file. '
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: " A string that contains the package version (for example, <code>3.5.2</code>). "
        explode: true
        in: query
        name: version
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPackageVersionReadmeResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/repository/endpoint#domain&repository&format:
    get:
      description: "<p> Returns the endpoint of a repository for a specific package\
        \ format. A repository has one endpoint for each package format: </p> <ul>\
        \ <li> <p> <code>maven</code> </p> </li> <li> <p> <code>npm</code> </p> </li>\
        \ <li> <p> <code>nuget</code> </p> </li> <li> <p> <code>pypi</code> </p> </li>\
        \ </ul>"
      operationId: GetRepositoryEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain that contains the repository. It does not include dashes
          or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' Returns which endpoint of a repository to return. A repository
          has one endpoint for each package format. '
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRepositoryEndpointResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/repository/permissions/policy#domain&repository:
    get:
      description: ' Returns the resource policy that is set on a repository. '
      operationId: GetRepositoryPermissionsPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain containing the repository whose associated
          resource policy is to be retrieved. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository whose associated resource policy
          is to be retrieved. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRepositoryPermissionsPolicyResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    put:
      description: "<p> Sets the resource policy on a repository that specifies permissions\
        \ to access it. </p> <p> When you call <code>PutRepositoryPermissionsPolicy</code>,\
        \ the resource policy on the repository is ignored when evaluting permissions.\
        \ This ensures that the owner of a repository cannot lock themselves out of\
        \ the repository, which would prevent them from being able to update the resource\
        \ policy. </p>"
      operationId: PutRepositoryPermissionsPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain containing the repository to set the
          resource policy on. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository to set the resource policy on. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRepositoryPermissionsPolicy_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRepositoryPermissionsPolicyResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/domains:
    post:
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html">DomainSummary</a>
        objects for all domains owned by the Amazon Web Services account that makes
        this call. Each returned <code>DomainSummary</code> object contains information
        about a domain. '
      operationId: ListDomains
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDomains_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/package/version/assets#domain&repository&format&package&version:
    post:
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_AssetSummary.html">AssetSummary</a>
        objects for assets in a package version. '
      operationId: ListPackageVersionAssets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository associated
          with the package version assets. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository that contains the package that contains
          the requested package version assets. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' The format of the package that contains the requested package
          version assets. '
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the package version that contains the requested\
          \ package version assets. The package version component that specifies its\
          \ namespace depends on its type. For example:</p> <ul> <li> <p> The namespace\
          \ of a Maven package version is its <code>groupId</code>. </p> </li> <li>\
          \ <p> The namespace of an npm package version is its <code>scope</code>.\
          \ </p> </li> <li> <p> Python and NuGet package versions do not contain a\
          \ corresponding component, package versions of those formats do not have\
          \ a namespace. </p> </li> <li> <p> The namespace of a generic package is\
          \ its <code>namespace</code>. </p> </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The name of the package that contains the requested package
          version assets. '
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: " A string that contains the package version (for example, <code>3.5.2</code>). "
        explode: true
        in: query
        name: version
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The maximum number of results to return per page. '
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: ' The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results. '
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 2000
          minLength: 1
          pattern: \S+
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackageVersionAssetsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/package/version/dependencies#domain&repository&format&package&version:
    post:
      description: " Returns the direct dependencies for a package version. The dependencies\
        \ are returned as <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageDependency.html\"\
        >PackageDependency</a> objects. CodeArtifact extracts the dependencies for\
        \ a package version from the metadata file for the package format (for example,\
        \ the <code>package.json</code> file for npm packages and the <code>pom.xml</code>\
        \ file for Maven). Any package version dependencies that are not listed in\
        \ the configuration file are not returned. "
      operationId: ListPackageVersionDependencies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository that contains
          the requested package version dependencies. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository that contains the requested package
          version. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' The format of the package with the requested dependencies. '
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the package version with the requested dependencies.\
          \ The package version component that specifies its namespace depends on\
          \ its type. For example:</p> <ul> <li> <p> The namespace of a Maven package\
          \ version is its <code>groupId</code>. </p> </li> <li> <p> The namespace\
          \ of an npm package version is its <code>scope</code>. </p> </li> <li> <p>\
          \ Python and NuGet package versions do not contain a corresponding component,\
          \ package versions of those formats do not have a namespace. </p> </li>\
          \ <li> <p> The namespace of a generic package is its <code>namespace</code>.\
          \ </p> </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The name of the package versions'' package. '
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: " A string that contains the package version (for example, <code>3.5.2</code>). "
        explode: true
        in: query
        name: version
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results. '
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 2000
          minLength: 1
          pattern: \S+
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackageVersionDependenciesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/package/versions#domain&repository&format&package:
    post:
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionSummary.html">PackageVersionSummary</a>
        objects for package versions in a repository that match the request parameters.
        Package versions of all statuses will be returned by default when calling
        <code>list-package-versions</code> with no <code>--status</code> parameter. '
      operationId: ListPackageVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository that contains
          the requested package versions. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository that contains the requested package
          versions. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' The format of the package versions you want to list. '
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the package that contains the requested\
          \ package versions. The package component that specifies its namespace depends\
          \ on its type. For example:</p> <ul> <li> <p> The namespace of a Maven package\
          \ is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm\
          \ package is its <code>scope</code>. </p> </li> <li> <p> Python and NuGet\
          \ packages do not contain a corresponding component, packages of those formats\
          \ do not have a namespace. </p> </li> <li> <p> The namespace of a generic\
          \ package is its <code>namespace</code>. </p> </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The name of the package for which you want to request package
          versions. '
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' A string that filters the requested package versions by status. '
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - Published
          - Unfinished
          - Unlisted
          - Archived
          - Disposed
          - Deleted
          type: string
        style: form
      - description: ' How to sort the requested list of package versions. '
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          enum:
          - PUBLISHED_TIME
          type: string
        style: form
      - description: ' The maximum number of results to return per page. '
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: ' The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results. '
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 2000
          minLength: 1
          pattern: \S+
          type: string
        style: form
      - description: The <code>originType</code> used to filter package versions.
          Only package versions with the provided <code>originType</code> will be
          returned.
        explode: true
        in: query
        name: originType
        required: false
        schema:
          enum:
          - INTERNAL
          - EXTERNAL
          - UNKNOWN
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackageVersionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/packages#domain&repository:
    post:
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageSummary.html">PackageSummary</a>
        objects for packages in a repository that match the request parameters. '
      operationId: ListPackages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository that contains
          the requested packages. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The name of the repository that contains the requested packages. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: The format used to filter requested packages. Only packages from
          the provided format will be returned.
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace prefix used to filter requested packages. Only\
          \ packages with a namespace that starts with the provided string value are\
          \ returned. Note that although this option is called <code>--namespace</code>\
          \ and not <code>--namespace-prefix</code>, it has prefix-matching behavior.</p>\
          \ <p>Each package format uses namespace as follows:</p> <ul> <li> <p> The\
          \ namespace of a Maven package is its <code>groupId</code>. </p> </li> <li>\
          \ <p> The namespace of an npm package is its <code>scope</code>. </p> </li>\
          \ <li> <p> Python and NuGet packages do not contain a corresponding component,\
          \ packages of those formats do not have a namespace. </p> </li> <li> <p>\
          \ The namespace of a generic package is its <code>namespace</code>. </p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' A prefix used to filter requested packages. Only packages with
          names that start with <code>packagePrefix</code> are returned. '
        explode: true
        in: query
        name: package-prefix
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The maximum number of results to return per page. '
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: ' The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results. '
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 2000
          minLength: 1
          pattern: \S+
          type: string
        style: form
      - description: "The value of the <code>Publish</code> package origin control\
          \ restriction used to filter requested packages. Only packages with the\
          \ provided restriction are returned. For more information, see <a href=\"\
          https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageOriginRestrictions.html\"\
          >PackageOriginRestrictions</a>."
        explode: true
        in: query
        name: publish
        required: false
        schema:
          enum:
          - ALLOW
          - BLOCK
          type: string
        style: form
      - description: "The value of the <code>Upstream</code> package origin control\
          \ restriction used to filter requested packages. Only packages with the\
          \ provided restriction are returned. For more information, see <a href=\"\
          https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageOriginRestrictions.html\"\
          >PackageOriginRestrictions</a>."
        explode: true
        in: query
        name: upstream
        required: false
        schema:
          enum:
          - ALLOW
          - BLOCK
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/repositories:
    post:
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_RepositorySummary.html">RepositorySummary</a>
        objects. Each <code>RepositorySummary</code> contains information about a
        repository in the specified Amazon Web Services account and that matches the
        input parameters. '
      operationId: ListRepositories
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' A prefix used to filter returned repositories. Only repositories
          with names that start with <code>repositoryPrefix</code> are returned.'
        explode: true
        in: query
        name: repository-prefix
        required: false
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' The maximum number of results to return per page. '
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: ' The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results. '
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 2000
          minLength: 1
          pattern: \S+
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/domain/repositories#domain:
    post:
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_RepositorySummary.html">RepositorySummary</a>
        objects. Each <code>RepositorySummary</code> contains information about a
        repository in the specified domain and that matches the input parameters. '
      operationId: ListRepositoriesInDomain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the returned list of repositories. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' Filter the list of repositories to only include those that
          are managed by the Amazon Web Services account ID. '
        explode: true
        in: query
        name: administrator-account
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' A prefix used to filter returned repositories. Only repositories
          with names that start with <code>repositoryPrefix</code> are returned. '
        explode: true
        in: query
        name: repository-prefix
        required: false
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' The maximum number of results to return per page. '
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: ' The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results. '
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 2000
          minLength: 1
          pattern: \S+
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesInDomainResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/tags#resourceArn:
    post:
      description: Gets information about Amazon Web Services tags for a specified
        Amazon Resource Name (ARN) in CodeArtifact.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource to get tags for.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          pattern: \S+
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /v1/package/version/publish#domain&repository&format&package&version&asset&x-amz-content-sha256:
    post:
      description: "<p>Creates a new package version containing one or more assets\
        \ (or files).</p> <p>The <code>unfinished</code> flag can be used to keep\
        \ the package version in the <code>Unfinished</code> state until all of its\
        \ assets have been uploaded (see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/packages-overview.html#package-version-status.html#package-version-status\"\
        >Package version status</a> in the <i>CodeArtifact user guide</i>). To set\
        \ the package version’s status to <code>Published</code>, omit the <code>unfinished</code>\
        \ flag when uploading the final asset, or set the status using <a href=\"\
        https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_UpdatePackageVersionsStatus.html\"\
        >UpdatePackageVersionStatus</a>. Once a package version’s status is set to\
        \ <code>Published</code>, it cannot change back to <code>Unfinished</code>.</p>\
        \ <note> <p>Only generic packages can be published using this API. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/using-generic.html\"\
        >Using generic packages</a> in the <i>CodeArtifact User Guide</i>.</p> </note>"
      operationId: PublishPackageVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the domain that contains the repository that contains
          the package version to publish.
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: The 12-digit account number of the AWS account that owns the
          domain. It does not include dashes or spaces.
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: The name of the repository that the package version will be published
          to.
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: <p>A format that specifies the type of the package version with
          the requested asset file.</p> <p>The only supported value is <code>generic</code>.</p>
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: The namespace of the package version to publish.
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: The name of the package version to publish.
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: "The package version to publish (for example, <code>3.5.2</code>)."
        explode: true
        in: query
        name: version
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: "The name of the asset to publish. Asset names can include Unicode\
          \ letters and numbers, and the following special characters: <code>~ ! @\
          \ ^ &amp; ( ) - ` _ + [ ] { } ; , . `</code> "
        explode: true
        in: query
        name: asset
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "\\P{C}+"
          type: string
        style: form
      - description: <p>The SHA256 hash of the <code>assetContent</code> to publish.
          This value must be calculated by the caller and provided with the request
          (see <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/using-generic.html#publishing-generic-packages">Publishing
          a generic package</a> in the <i>CodeArtifact User Guide</i>).</p> <p>This
          value is used as an integrity check to verify that the <code>assetContent</code>
          has not changed after it was originally sent.</p>
        explode: false
        in: header
        name: x-amz-content-sha256
        required: true
        schema:
          maxLength: 64
          minLength: 64
          pattern: "[0-9a-f]+"
          type: string
        style: simple
      - description: "<p>Specifies whether the package version should remain in the\
          \ <code>unfinished</code> state. If omitted, the package version status\
          \ will be set to <code>Published</code> (see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/packages-overview.html#package-version-status\"\
          >Package version status</a> in the <i>CodeArtifact User Guide</i>).</p>\
          \ <p>Valid values: <code>unfinished</code> </p>"
        explode: true
        in: query
        name: unfinished
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishPackageVersion_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishPackageVersionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/domain/permissions/policy:
    put:
      description: "<p> Sets a resource policy on a domain that specifies permissions\
        \ to access it. </p> <p> When you call <code>PutDomainPermissionsPolicy</code>,\
        \ the resource policy on the domain is ignored when evaluting permissions.\
        \ This ensures that the owner of a domain cannot lock themselves out of the\
        \ domain, which would prevent them from being able to update the resource\
        \ policy. </p>"
      operationId: PutDomainPermissionsPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDomainPermissionsPolicy_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDomainPermissionsPolicyResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/tag#resourceArn:
    post:
      description: Adds or updates tags for a resource in CodeArtifact.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource that you want
          to add or update tags for.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          pattern: \S+
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/untag#resourceArn:
    post:
      description: Removes tags from a resource in CodeArtifact.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource that you want
          to remove tags from.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          pattern: \S+
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/package/versions/update_status#domain&repository&format&package:
    post:
      description: " Updates the status of one or more versions of a package. Using\
        \ <code>UpdatePackageVersionsStatus</code>, you can update the status of package\
        \ versions to <code>Archived</code>, <code>Published</code>, or <code>Unlisted</code>.\
        \ To set the status of a package version to <code>Disposed</code>, use <a\
        \ href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DisposePackageVersions.html\"\
        >DisposePackageVersions</a>. "
      operationId: UpdatePackageVersionsStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the domain that contains the repository that contains
          the package versions with a status to be updated. '
        explode: true
        in: query
        name: domain
        required: true
        schema:
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        style: form
      - description: ' The 12-digit account number of the Amazon Web Services account
          that owns the domain. It does not include dashes or spaces. '
        explode: true
        in: query
        name: domain-owner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        style: form
      - description: ' The repository that contains the package versions with the
          status you want to update. '
        explode: true
        in: query
        name: repository
        required: true
        schema:
          maxLength: 100
          minLength: 2
          pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
          type: string
        style: form
      - description: ' A format that specifies the type of the package with the statuses
          to update. '
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - npm
          - pypi
          - maven
          - nuget
          - generic
          type: string
        style: form
      - description: "<p>The namespace of the package version to be updated. The package\
          \ version component that specifies its namespace depends on its type. For\
          \ example:</p> <ul> <li> <p> The namespace of a Maven package version is\
          \ its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm\
          \ package version is its <code>scope</code>. </p> </li> <li> <p> Python\
          \ and NuGet package versions do not contain a corresponding component, package\
          \ versions of those formats do not have a namespace. </p> </li> <li> <p>\
          \ The namespace of a generic package is its <code>namespace</code>. </p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      - description: ' The name of the package with the version statuses to update. '
        explode: true
        in: query
        name: package
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[^#/\\s]+"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePackageVersionsStatus_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePackageVersionsStatusResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateExternalConnectionResult:
      example:
        repository:
          upstreams: ""
          domainName: ""
          externalConnections: ""
          name: ""
          domainOwner: ""
          description: ""
          createdTime: ""
          arn: ""
          administratorAccount: ""
      properties:
        repository:
          $ref: '#/components/schemas/AssociateExternalConnectionResult_repository'
      type: object
    AccessDeniedException: {}
    ConflictException: {}
    InternalServerException: {}
    ResourceNotFoundException: {}
    ServiceQuotaExceededException: {}
    ThrottlingException: {}
    ValidationException: {}
    CopyPackageVersionsResult:
      example:
        failedVersions: ""
        successfulVersions: ""
      properties:
        successfulVersions:
          allOf:
          - $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'
          - description: ' A list of the package versions that were successfully copied
              to your repository. '
        failedVersions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionErrorMap'
          - description: "<p> A map of package versions that failed to copy and their\
              \ error codes. The possible error codes are in the <code>PackageVersionError</code>\
              \ data type. They are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code>\
              \ </p> </li> <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li>\
              \ <p> <code>MISMATCHED_STATUS</code> </p> </li> <li> <p> <code>NOT_ALLOWED</code>\
              \ </p> </li> <li> <p> <code>NOT_FOUND</code> </p> </li> <li> <p> <code>SKIPPED</code>\
              \ </p> </li> </ul>"
      type: object
    PackageVersion:
      maxLength: 255
      minLength: 1
      pattern: "[^#/\\s]+"
      type: string
    PackageVersionRevision:
      maxLength: 50
      minLength: 1
      pattern: \S+
      type: string
    CreateDomainResult:
      example:
        domain:
          owner: ""
          repositoryCount: ""
          s3BucketArn: ""
          assetSizeBytes: ""
          name: ""
          createdTime: ""
          encryptionKey: ""
          arn: ""
          status: ""
      properties:
        domain:
          $ref: '#/components/schemas/CreateDomainResult_domain'
      type: object
    Tag:
      description: "A tag is a key-value pair that can be used to manage, search for,\
        \ or filter resources in CodeArtifact."
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The tag key.
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The tag value.
      required:
      - key
      - value
      type: object
    CreateRepositoryResult:
      example:
        repository:
          upstreams: ""
          domainName: ""
          externalConnections: ""
          name: ""
          domainOwner: ""
          description: ""
          createdTime: ""
          arn: ""
          administratorAccount: ""
      properties:
        repository:
          $ref: '#/components/schemas/CreateRepositoryResult_repository'
      type: object
    UpstreamRepository:
      description: ' Information about an upstream repository. A list of <code>UpstreamRepository</code>
        objects is an input parameter to <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_CreateRepository.html">CreateRepository</a>
        and <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_UpdateRepository.html">UpdateRepository</a>. '
      properties:
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: ' The name of an upstream repository. '
      required:
      - repositoryName
      type: object
    DeleteDomainResult:
      example:
        domain:
          owner: ""
          repositoryCount: ""
          s3BucketArn: ""
          assetSizeBytes: ""
          name: ""
          createdTime: ""
          encryptionKey: ""
          arn: ""
          status: ""
      properties:
        domain:
          $ref: '#/components/schemas/DeleteDomainResult_domain'
      type: object
    DeleteDomainPermissionsPolicyResult:
      example:
        policy:
          document: ""
          resourceArn: ""
          revision: ""
      properties:
        policy:
          $ref: '#/components/schemas/DeleteDomainPermissionsPolicyResult_policy'
      type: object
    DeletePackageResult:
      example:
        deletedPackage:
          originConfiguration:
            restrictions:
              upstream: ""
              publish: ""
          package: ""
          format: ""
          namespace: ""
      properties:
        deletedPackage:
          $ref: '#/components/schemas/PackageSummary'
      type: object
    DeletePackageVersionsResult:
      example:
        failedVersions: ""
        successfulVersions: ""
      properties:
        successfulVersions:
          allOf:
          - $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'
          - description: ' A list of the package versions that were successfully deleted.
              The status of every successful version will be <code>Deleted</code>. '
        failedVersions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionErrorMap'
          - description: "<p> A <code>PackageVersionError</code> object that contains\
              \ a map of errors codes for the deleted package that failed. The possible\
              \ error codes are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code> </p>\
              \ </li> <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li> <p>\
              \ <code>MISMATCHED_STATUS</code> </p> </li> <li> <p> <code>NOT_ALLOWED</code>\
              \ </p> </li> <li> <p> <code>NOT_FOUND</code> </p> </li> <li> <p> <code>SKIPPED</code>\
              \ </p> </li> </ul>"
      type: object
    DeleteRepositoryResult:
      example:
        repository:
          upstreams: ""
          domainName: ""
          externalConnections: ""
          name: ""
          domainOwner: ""
          description: ""
          createdTime: ""
          arn: ""
          administratorAccount: ""
      properties:
        repository:
          $ref: '#/components/schemas/DeleteRepositoryResult_repository'
      type: object
    DeleteRepositoryPermissionsPolicyResult:
      example:
        policy:
          document: ""
          resourceArn: ""
          revision: ""
      properties:
        policy:
          $ref: '#/components/schemas/DeleteRepositoryPermissionsPolicyResult_policy'
      type: object
    DescribeDomainResult:
      example:
        domain:
          owner: ""
          repositoryCount: ""
          s3BucketArn: ""
          assetSizeBytes: ""
          name: ""
          createdTime: ""
          encryptionKey: ""
          arn: ""
          status: ""
      properties:
        domain:
          $ref: '#/components/schemas/DomainDescription'
      type: object
    DescribePackageResult:
      example:
        package:
          originConfiguration:
            restrictions:
              upstream: ""
              publish: ""
          format: ""
          namespace: ""
          name: ""
      properties:
        package:
          $ref: '#/components/schemas/DescribePackageResult_package'
      required:
      - package
      type: object
    DescribePackageVersionResult:
      example:
        packageVersion:
          summary: ""
          sourceCodeRepository: ""
          displayName: ""
          origin:
            originType: ""
            domainEntryPoint:
              externalConnectionName: ""
              repositoryName: ""
          format: ""
          version: ""
          homePage: ""
          revision: ""
          licenses: ""
          publishedTime: ""
          namespace: ""
          packageName: ""
          status: ""
      properties:
        packageVersion:
          $ref: '#/components/schemas/DescribePackageVersionResult_packageVersion'
      required:
      - packageVersion
      type: object
    DescribeRepositoryResult:
      example:
        repository:
          upstreams: ""
          domainName: ""
          externalConnections: ""
          name: ""
          domainOwner: ""
          description: ""
          createdTime: ""
          arn: ""
          administratorAccount: ""
      properties:
        repository:
          $ref: '#/components/schemas/DescribeRepositoryResult_repository'
      type: object
    DisassociateExternalConnectionResult:
      example:
        repository:
          upstreams: ""
          domainName: ""
          externalConnections: ""
          name: ""
          domainOwner: ""
          description: ""
          createdTime: ""
          arn: ""
          administratorAccount: ""
      properties:
        repository:
          $ref: '#/components/schemas/DisassociateExternalConnectionResult_repository'
      type: object
    DisposePackageVersionsResult:
      example:
        failedVersions: ""
        successfulVersions: ""
      properties:
        successfulVersions:
          allOf:
          - $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'
          - description: ' A list of the package versions that were successfully disposed. '
        failedVersions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionErrorMap'
          - description: "<p> A <code>PackageVersionError</code> object that contains\
              \ a map of errors codes for the disposed package versions that failed.\
              \ The possible error codes are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code>\
              \ </p> </li> <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li>\
              \ <p> <code>MISMATCHED_STATUS</code> </p> </li> <li> <p> <code>NOT_ALLOWED</code>\
              \ </p> </li> <li> <p> <code>NOT_FOUND</code> </p> </li> <li> <p> <code>SKIPPED</code>\
              \ </p> </li> </ul>"
      type: object
    GetAuthorizationTokenResult:
      example:
        authorizationToken: ""
        expiration: ""
      properties:
        authorizationToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The returned authentication token. '
        expiration:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' A timestamp that specifies the date and time the authorization
              token expires. '
      type: object
    GetDomainPermissionsPolicyResult:
      example:
        policy:
          document: ""
          resourceArn: ""
          revision: ""
      properties:
        policy:
          $ref: '#/components/schemas/GetDomainPermissionsPolicyResult_policy'
      type: object
    GetPackageVersionAssetResult:
      example:
        asset: ""
      properties:
        asset:
          allOf:
          - $ref: '#/components/schemas/Asset'
          - description: " The binary file, or asset, that is downloaded."
      type: object
    GetPackageVersionReadmeResult:
      example:
        package: ""
        versionRevision: ""
        format: ""
        namespace: ""
        readme: ""
        version: ""
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/PackageFormat'
          - description: ' The format of the package with the requested readme file. '
        namespace:
          allOf:
          - $ref: '#/components/schemas/PackageNamespace'
          - description: "<p>The namespace of the package version with the requested\
              \ readme file. The package version component that specifies its namespace\
              \ depends on its type. For example:</p> <ul> <li> <p> The namespace\
              \ of a Maven package version is its <code>groupId</code>. </p> </li>\
              \ <li> <p> The namespace of an npm package version is its <code>scope</code>.\
              \ </p> </li> <li> <p> Python and NuGet package versions do not contain\
              \ a corresponding component, package versions of those formats do not\
              \ have a namespace. </p> </li> </ul>"
        package:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          - description: ' The name of the package that contains the returned readme
              file. '
        version:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          - description: ' The version of the package with the requested readme file. '
        versionRevision:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRevision'
          - description: ' The current revision associated with the package version. '
        readme:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The text of the returned readme file. '
      type: object
    GetRepositoryEndpointResult:
      example:
        repositoryEndpoint: ""
      properties:
        repositoryEndpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' A string that specifies the URL of the returned endpoint. '
      type: object
    GetRepositoryPermissionsPolicyResult:
      example:
        policy:
          document: ""
          resourceArn: ""
          revision: ""
      properties:
        policy:
          $ref: '#/components/schemas/GetDomainPermissionsPolicyResult_policy'
      type: object
    ListDomainsResult:
      example:
        nextToken: ""
        domains: ""
      properties:
        domains:
          allOf:
          - $ref: '#/components/schemas/DomainSummaryList'
          - description: ' The returned list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DomainSummary.html">DomainSummary</a>
              objects. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: ' The token for the next set of results. Use the value returned
              in the previous response in the next request to retrieve the next set
              of results. '
      type: object
    ListPackageVersionAssetsResult:
      example:
        package: ""
        assets: ""
        versionRevision: ""
        nextToken: ""
        format: ""
        namespace: ""
        version: ""
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/PackageFormat'
          - description: ' The format of the package that contains the requested package
              version assets. '
        namespace:
          allOf:
          - $ref: '#/components/schemas/PackageNamespace'
          - description: "<p>The namespace of the package version that contains the\
              \ requested package version assets. The package version component that\
              \ specifies its namespace depends on its type. For example:</p> <ul>\
              \ <li> <p> The namespace of a Maven package version is its <code>groupId</code>.\
              \ </p> </li> <li> <p> The namespace of an npm package version is its\
              \ <code>scope</code>. </p> </li> <li> <p> Python and NuGet package versions\
              \ do not contain a corresponding component, package versions of those\
              \ formats do not have a namespace. </p> </li> </ul>"
        package:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          - description: ' The name of the package that contains the requested package
              version assets. '
        version:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          - description: ' The version of the package associated with the requested
              assets. '
        versionRevision:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRevision'
          - description: ' The current revision associated with the package version. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: " If there are additional results, this is the token for\
              \ the next set of results. "
        assets:
          allOf:
          - $ref: '#/components/schemas/AssetSummaryList'
          - description: ' The returned list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_AssetSummary.html">AssetSummary</a>
              objects. '
      type: object
    ListPackageVersionDependenciesResult:
      example:
        package: ""
        versionRevision: ""
        nextToken: ""
        format: ""
        namespace: ""
        version: ""
        dependencies: ""
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/PackageFormat'
          - description: ' A format that specifies the type of the package that contains
              the returned dependencies. '
        namespace:
          allOf:
          - $ref: '#/components/schemas/PackageNamespace'
          - description: "<p>The namespace of the package version that contains the\
              \ returned dependencies. The package version component that specifies\
              \ its namespace depends on its type. For example:</p> <ul> <li> <p>\
              \ The namespace of a Maven package version is its <code>groupId</code>.\
              \ </p> </li> <li> <p> The namespace of an npm package version is its\
              \ <code>scope</code>. </p> </li> <li> <p> Python and NuGet package versions\
              \ do not contain a corresponding component, package versions of those\
              \ formats do not have a namespace. </p> </li> </ul>"
        package:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          - description: ' The name of the package that contains the returned package
              versions dependencies. '
        version:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          - description: ' The version of the package that is specified in the request. '
        versionRevision:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRevision'
          - description: ' The current revision associated with the package version. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: ' The token for the next set of results. Use the value returned
              in the previous response in the next request to retrieve the next set
              of results. '
        dependencies:
          allOf:
          - $ref: '#/components/schemas/PackageDependencyList'
          - description: ' The returned list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageDependency.html">PackageDependency</a>
              objects. '
      type: object
    ListPackageVersionsResult:
      example:
        package: ""
        defaultDisplayVersion: ""
        versions: ""
        nextToken: ""
        format: ""
        namespace: ""
      properties:
        defaultDisplayVersion:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          - description: "<p> The default package version to display. This depends\
              \ on the package format: </p> <ul> <li> <p> For Maven and PyPI packages,\
              \ it's the most recently published package version. </p> </li> <li>\
              \ <p> For npm packages, it's the version referenced by the <code>latest</code>\
              \ tag. If the <code>latest</code> tag is not set, it's the most recently\
              \ published package version. </p> </li> </ul>"
        format:
          allOf:
          - $ref: '#/components/schemas/PackageFormat'
          - description: ' A format of the package. '
        namespace:
          allOf:
          - $ref: '#/components/schemas/PackageNamespace'
          - description: "<p>The namespace of the package that contains the requested\
              \ package versions. The package component that specifies its namespace\
              \ depends on its type. For example:</p> <ul> <li> <p> The namespace\
              \ of a Maven package is its <code>groupId</code>. </p> </li> <li> <p>\
              \ The namespace of an npm package is its <code>scope</code>. </p> </li>\
              \ <li> <p> Python and NuGet packages do not contain a corresponding\
              \ component, packages of those formats do not have a namespace. </p>\
              \ </li> </ul>"
        package:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          - description: ' The name of the package. '
        versions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionSummaryList'
          - description: ' The returned list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionSummary.html">PackageVersionSummary</a>
              objects. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: " If there are additional results, this is the token for\
              \ the next set of results. "
      type: object
    ListPackagesResult:
      example:
        nextToken: ""
        packages: ""
      properties:
        packages:
          allOf:
          - $ref: '#/components/schemas/PackageSummaryList'
          - description: ' The list of returned <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageSummary.html">PackageSummary</a>
              objects. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: " If there are additional results, this is the token for\
              \ the next set of results. "
      type: object
    ListRepositoriesResult:
      example:
        repositories: ""
        nextToken: ""
      properties:
        repositories:
          allOf:
          - $ref: '#/components/schemas/RepositorySummaryList'
          - description: ' The returned list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_RepositorySummary.html">RepositorySummary</a>
              objects. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: " If there are additional results, this is the token for\
              \ the next set of results. "
      type: object
    ListRepositoriesInDomainResult:
      example:
        repositories: ""
        nextToken: ""
      properties:
        repositories:
          allOf:
          - $ref: '#/components/schemas/RepositorySummaryList'
          - description: ' The returned list of repositories. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: " If there are additional results, this is the token for\
              \ the next set of results. "
      type: object
    ListTagsForResourceResult:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tag key and value pairs associated with the specified
              resource.
      type: object
    PublishPackageVersionResult:
      example:
        package: ""
        versionRevision: ""
        format: ""
        namespace: ""
        asset:
          size: ""
          name: ""
          hashes: ""
        version: ""
        status: ""
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/PackageFormat'
          - description: The format of the package version.
        namespace:
          allOf:
          - $ref: '#/components/schemas/PackageNamespace'
          - description: The namespace of the package version.
        package:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          - description: The name of the package.
        version:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          - description: The version of the package.
        versionRevision:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRevision'
          - description: The revision of the package version.
        status:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          - description: "A string that contains the status of the package version.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/packages-overview.html#package-version-status.html#package-version-status\"\
              >Package version status</a> in the <i>CodeArtifact User Guide</i>."
        asset:
          $ref: '#/components/schemas/PublishPackageVersionResult_asset'
      type: object
    PutDomainPermissionsPolicyResult:
      example:
        policy:
          document: ""
          resourceArn: ""
          revision: ""
      properties:
        policy:
          $ref: '#/components/schemas/PutDomainPermissionsPolicyResult_policy'
      type: object
    PutPackageOriginConfigurationResult:
      example:
        originConfiguration:
          restrictions:
            upstream: ""
            publish: ""
      properties:
        originConfiguration:
          $ref: '#/components/schemas/PutPackageOriginConfigurationResult_originConfiguration'
      type: object
    AllowPublish:
      enum:
      - ALLOW
      - BLOCK
      type: string
    AllowUpstream:
      enum:
      - ALLOW
      - BLOCK
      type: string
    PutRepositoryPermissionsPolicyResult:
      example:
        policy:
          document: ""
          resourceArn: ""
          revision: ""
      properties:
        policy:
          $ref: '#/components/schemas/PutDomainPermissionsPolicyResult_policy'
      type: object
    TagResourceResult:
      properties: {}
      type: object
    UntagResourceResult:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "\\P{C}+"
      type: string
    UpdatePackageVersionsStatusResult:
      example:
        failedVersions: ""
        successfulVersions: ""
      properties:
        successfulVersions:
          allOf:
          - $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'
          - description: " A list of <code>PackageVersionError</code> objects, one\
              \ for each package version with a status that failed to update. "
        failedVersions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionErrorMap'
          - description: " A list of <code>SuccessfulPackageVersionInfo</code> objects,\
              \ one for each package version with a status that successfully updated. "
      type: object
    UpdateRepositoryResult:
      example:
        repository:
          upstreams: ""
          domainName: ""
          externalConnections: ""
          name: ""
          domainOwner: ""
          description: ""
          createdTime: ""
          arn: ""
          administratorAccount: ""
      properties:
        repository:
          $ref: '#/components/schemas/UpdateRepositoryResult_repository'
      type: object
    AccountId:
      maxLength: 12
      minLength: 12
      pattern: "[0-9]{12}"
      type: string
    Arn:
      maxLength: 1011
      minLength: 1
      pattern: \S+
      type: string
    Asset:
      type: string
    HashValue:
      maxLength: 512
      minLength: 32
      pattern: "[0-9a-f]+"
      type: string
    AssetHashes:
      additionalProperties:
        $ref: '#/components/schemas/HashValue'
      type: object
    AssetName:
      maxLength: 255
      minLength: 1
      pattern: "\\P{C}+"
      type: string
    LongOptional:
      type: integer
    AssetSummary:
      description: ' Contains details about a package version asset. '
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AssetName'
          - description: ' The name of the asset. '
        size:
          allOf:
          - $ref: '#/components/schemas/LongOptional'
          - description: ' The size of the asset. '
        hashes:
          allOf:
          - $ref: '#/components/schemas/AssetHashes'
          - description: ' The hashes of the asset. '
      required:
      - name
      type: object
    AssetSummaryList:
      items:
        $ref: '#/components/schemas/AssetSummary'
      type: array
    DomainName:
      maxLength: 50
      minLength: 2
      pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
      type: string
    RepositoryName:
      maxLength: 100
      minLength: 2
      pattern: "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}"
      type: string
    ExternalConnectionName:
      maxLength: 100
      minLength: 2
      pattern: "[A-Za-z0-9][A-Za-z0-9._\\-:]{1,99}"
      type: string
    AssociateExternalConnectionRequest:
      properties: {}
      title: AssociateExternalConnectionRequest
      type: object
    RepositoryDescription:
      description: " The details of a repository stored in CodeArtifact. A CodeArtifact\
        \ repository contains a set of package versions, each of which maps to a set\
        \ of assets. Repositories are polyglot—a single repository can contain packages\
        \ of any supported type. Each repository exposes endpoints for fetching and\
        \ publishing packages using tools like the <code>npm</code> CLI, the Maven\
        \ CLI (<code>mvn</code>), and <code>pip</code>. You can create up to 100 repositories\
        \ per Amazon Web Services account. "
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: ' The name of the repository. '
        administratorAccount:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: ' The 12-digit account number of the Amazon Web Services
              account that manages the repository. '
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: ' The name of the domain that contains the repository. '
        domainOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: ' The 12-digit account number of the Amazon Web Services
              account that owns the domain that contains the repository. It does not
              include dashes or spaces. '
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: ' The Amazon Resource Name (ARN) of the repository. '
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' A text description of the repository. '
        upstreams:
          allOf:
          - $ref: '#/components/schemas/UpstreamRepositoryInfoList'
          - description: " A list of upstream repositories to associate with the repository.\
              \ The order of the upstream repositories in the list determines their\
              \ priority order when CodeArtifact looks for a requested package version.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\"\
              >Working with upstream repositories</a>. "
        externalConnections:
          allOf:
          - $ref: '#/components/schemas/RepositoryExternalConnectionInfoList'
          - description: ' An array of external connections associated with the repository. '
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp that represents the date and time the repository
              was created.
      type: object
    AuthorizationTokenDurationSeconds:
      maximum: 43200
      minimum: 0
      type: integer
    BooleanOptional:
      type: boolean
    PackageFormat:
      enum:
      - npm
      - pypi
      - maven
      - nuget
      - generic
      type: string
    PackageNamespace:
      maxLength: 255
      minLength: 1
      pattern: "[^#/\\s]+"
      type: string
    PackageName:
      maxLength: 255
      minLength: 1
      pattern: "[^#/\\s]+"
      type: string
    PackageVersionList:
      items:
        $ref: '#/components/schemas/PackageVersion'
      maxItems: 100
      type: array
    PackageVersionRevisionMap:
      additionalProperties:
        $ref: '#/components/schemas/PackageVersionRevision'
      type: object
    CopyPackageVersionsRequest:
      example:
        versions: ""
        versionRevisions: ""
        allowOverwrite: ""
        includeFromUpstream: ""
      properties:
        versions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionList'
          - description: <p> The versions of the package to be copied. </p> <note>
              <p> You must specify <code>versions</code> or <code>versionRevisions</code>.
              You cannot specify both. </p> </note>
        versionRevisions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRevisionMap'
          - description: <p> A list of key-value pairs. The keys are package versions
              and the values are package version revisions. A <code>CopyPackageVersion</code>
              operation succeeds if the specified versions in the source repository
              match the specified package version revision. </p> <note> <p> You must
              specify <code>versions</code> or <code>versionRevisions</code>. You
              cannot specify both. </p> </note>
        allowOverwrite:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: " Set to true to overwrite a package version that already\
              \ exists in the destination repository. If set to false and the package\
              \ version already exists in the destination repository, the package\
              \ version is returned in the <code>failedVersions</code> field of the\
              \ response with an <code>ALREADY_EXISTS</code> error code. "
        includeFromUpstream:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: " Set to true to copy packages from repositories that are\
              \ upstream from the source repository to the destination repository.\
              \ The default setting is false. For more information, see <a href=\"\
              https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\"\
              >Working with upstream repositories</a>. "
      title: CopyPackageVersionsRequest
      type: object
    SuccessfulPackageVersionInfoMap:
      additionalProperties:
        $ref: '#/components/schemas/SuccessfulPackageVersionInfo'
      type: object
    PackageVersionErrorMap:
      additionalProperties:
        $ref: '#/components/schemas/PackageVersionError'
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    CreateDomainRequest:
      example:
        encryptionKey: ""
        tags: ""
      properties:
        encryptionKey:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p> The encryption key for the domain. This is used to encrypt\
              \ content stored in a domain. An encryption key can be a key ID, a key\
              \ Amazon Resource Name (ARN), a key alias, or a key alias ARN. To specify\
              \ an <code>encryptionKey</code>, your IAM role must have <code>kms:DescribeKey</code>\
              \ and <code>kms:CreateGrant</code> permissions on the encryption key\
              \ that is used. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestSyntax\"\
              >DescribeKey</a> in the <i>Key Management Service API Reference</i>\
              \ and <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html\"\
              >Key Management Service API Permissions Reference</a> in the <i>Key\
              \ Management Service Developer Guide</i>. </p> <important> <p> CodeArtifact\
              \ supports only symmetric CMKs. Do not associate an asymmetric CMK with\
              \ your domain. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\"\
              >Using symmetric and asymmetric keys</a> in the <i>Key Management Service\
              \ Developer Guide</i>. </p> </important>"
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: One or more tag key-value pairs for the domain.
      title: CreateDomainRequest
      type: object
    DomainDescription:
      description: " Information about a domain. A domain is a container for repositories.\
        \ When you create a domain, it is empty until you add one or more repositories. "
      example:
        owner: ""
        repositoryCount: ""
        s3BucketArn: ""
        assetSizeBytes: ""
        name: ""
        createdTime: ""
        encryptionKey: ""
        arn: ""
        status: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: ' The name of the domain. '
        owner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: ' The Amazon Web Services account ID that owns the domain. '
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: ' The Amazon Resource Name (ARN) of the domain. '
        status:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          - description: ' The current status of a domain. '
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' A timestamp that represents the date and time the domain
              was created. '
        encryptionKey:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: ' The ARN of an Key Management Service (KMS) key associated
              with a domain. '
        repositoryCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of repositories in the domain. '
        assetSizeBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: ' The total size of all assets in the domain. '
        s3BucketArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Amazon S3 bucket that
              is used to store package assets in the domain.
      type: object
    Description:
      maxLength: 1000
      pattern: "\\P{C}*"
      type: string
    UpstreamRepositoryList:
      items:
        $ref: '#/components/schemas/UpstreamRepository'
      type: array
    CreateRepositoryRequest:
      example:
        upstreams: ""
        description: ""
        tags: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' A description of the created repository. '
        upstreams:
          allOf:
          - $ref: '#/components/schemas/UpstreamRepositoryList'
          - description: " A list of upstream repositories to associate with the repository.\
              \ The order of the upstream repositories in the list determines their\
              \ priority order when CodeArtifact looks for a requested package version.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\"\
              >Working with upstream repositories</a>. "
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: One or more tag key-value pairs for the repository.
      title: CreateRepositoryRequest
      type: object
    PolicyRevision:
      maxLength: 100
      minLength: 1
      pattern: \S+
      type: string
    DeleteDomainPermissionsPolicyRequest:
      properties: {}
      title: DeleteDomainPermissionsPolicyRequest
      type: object
    ResourcePolicy:
      description: " An CodeArtifact resource policy that contains a resource ARN,\
        \ document details, and a revision. "
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: ' The ARN of the resource associated with the resource policy '
        revision:
          allOf:
          - $ref: '#/components/schemas/PolicyRevision'
          - description: ' The current revision of the resource policy. '
        document:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          - description: ' The resource policy formatted in JSON. '
      type: object
    DeleteDomainRequest:
      properties: {}
      title: DeleteDomainRequest
      type: object
    DeletePackageRequest:
      properties: {}
      title: DeletePackageRequest
      type: object
    PackageSummary:
      description: " Details about a package, including its format, namespace, and\
        \ name. "
      example:
        originConfiguration:
          restrictions:
            upstream: ""
            publish: ""
        package: ""
        format: ""
        namespace: ""
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/PackageFormat'
          - description: ' The format of the package. '
        namespace:
          allOf:
          - $ref: '#/components/schemas/PackageNamespace'
          - description: "<p>The namespace of the package. The package component that\
              \ specifies its namespace depends on its type. For example:</p> <ul>\
              \ <li> <p> The namespace of a Maven package is its <code>groupId</code>.\
              \ </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>.\
              \ </p> </li> <li> <p> Python and NuGet packages do not contain a corresponding\
              \ component, packages of those formats do not have a namespace. </p>\
              \ </li> <li> <p> The namespace of a generic package is its <code>namespace</code>.\
              \ </p> </li> </ul>"
        package:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          - description: ' The name of the package. '
        originConfiguration:
          $ref: '#/components/schemas/PackageSummary_originConfiguration'
      type: object
    PackageVersionStatus:
      enum:
      - Published
      - Unfinished
      - Unlisted
      - Archived
      - Disposed
      - Deleted
      type: string
    DeletePackageVersionsRequest:
      example:
        versions: ""
        expectedStatus: ""
      properties:
        versions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionList'
          - description: ' An array of strings that specify the versions of the package
              to delete. '
        expectedStatus:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          - description: ' The expected status of the package version to delete. '
      required:
      - versions
      title: DeletePackageVersionsRequest
      type: object
    DeleteRepositoryPermissionsPolicyRequest:
      properties: {}
      title: DeleteRepositoryPermissionsPolicyRequest
      type: object
    DeleteRepositoryRequest:
      properties: {}
      title: DeleteRepositoryRequest
      type: object
    DescribeDomainRequest:
      properties: {}
      title: DescribeDomainRequest
      type: object
    DescribePackageRequest:
      properties: {}
      title: DescribePackageRequest
      type: object
    PackageDescription:
      description: Details about a package.
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/PackageFormat'
          - description: A format that specifies the type of the package.
        namespace:
          allOf:
          - $ref: '#/components/schemas/PackageNamespace'
          - description: "<p>The namespace of the package. The package component that\
              \ specifies its namespace depends on its type. For example:</p> <ul>\
              \ <li> <p> The namespace of a Maven package is its <code>groupId</code>.\
              \ </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>.\
              \ </p> </li> <li> <p> Python and NuGet packages do not contain a corresponding\
              \ component, packages of those formats do not have a namespace. </p>\
              \ </li> <li> <p> The namespace of a generic package is its <code>namespace</code>.\
              \ </p> </li> </ul>"
        name:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          - description: The name of the package.
        originConfiguration:
          $ref: '#/components/schemas/PackageDescription_originConfiguration'
      type: object
    DescribePackageVersionRequest:
      properties: {}
      title: DescribePackageVersionRequest
      type: object
    PackageVersionDescription:
      description: ' Details about a package version. '
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/PackageFormat'
          - description: ' The format of the package version. '
        namespace:
          allOf:
          - $ref: '#/components/schemas/PackageNamespace'
          - description: "<p>The namespace of the package version. The package version\
              \ component that specifies its namespace depends on its type. For example:</p>\
              \ <ul> <li> <p> The namespace of a Maven package version is its <code>groupId</code>.\
              \ </p> </li> <li> <p> The namespace of an npm package version is its\
              \ <code>scope</code>. </p> </li> <li> <p> Python and NuGet package versions\
              \ do not contain a corresponding component, package versions of those\
              \ formats do not have a namespace. </p> </li> <li> <p> The namespace\
              \ of a generic package is its <code>namespace</code>. </p> </li> </ul>"
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          - description: ' The name of the requested package. '
        displayName:
          allOf:
          - $ref: '#/components/schemas/String255'
          - description: " The name of the package that is displayed. The <code>displayName</code>\
              \ varies depending on the package version's format. For example, if\
              \ an npm package is named <code>ui</code>, is in the namespace <code>vue</code>,\
              \ and has the format <code>npm</code>, then the <code>displayName</code>\
              \ is <code>@vue/ui</code>. "
        version:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          - description: ' The version of the package. '
        summary:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' A summary of the package version. The summary is extracted
              from the package. The information in and detail level of the summary
              depends on the package version''s format. '
        homePage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The homepage associated with the package. '
        sourceCodeRepository:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The repository for the source code in the package version,\
              \ or the source code used to build it. "
        publishedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' A timestamp that contains the date and time the package
              version was published. '
        licenses:
          allOf:
          - $ref: '#/components/schemas/LicenseInfoList'
          - description: ' Information about licenses associated with the package
              version. '
        revision:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRevision'
          - description: ' The revision of the package version. '
        status:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          - description: ' A string that contains the status of the package version. '
        origin:
          $ref: '#/components/schemas/PackageVersionDescription_origin'
      type: object
    DescribeRepositoryRequest:
      properties: {}
      title: DescribeRepositoryRequest
      type: object
    DisassociateExternalConnectionRequest:
      properties: {}
      title: DisassociateExternalConnectionRequest
      type: object
    DisposePackageVersionsRequest:
      example:
        versions: ""
        versionRevisions: ""
        expectedStatus: ""
      properties:
        versions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionList'
          - description: ' The versions of the package you want to dispose. '
        versionRevisions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRevisionMap'
          - description: ' The revisions of the package versions you want to dispose. '
        expectedStatus:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          - description: ' The expected status of the package version to dispose. '
      required:
      - versions
      title: DisposePackageVersionsRequest
      type: object
    DomainStatus:
      enum:
      - Active
      - Deleted
      type: string
    Timestamp:
      format: date-time
      type: string
    Integer:
      type: integer
    Long:
      type: integer
    DomainEntryPoint:
      description: "Information about how a package originally entered the CodeArtifact\
        \ domain. For packages published directly to CodeArtifact, the entry point\
        \ is the repository it was published to. For packages ingested from an external\
        \ repository, the entry point is the external connection that it was ingested\
        \ from. An external connection is a CodeArtifact repository that is connected\
        \ to an external repository such as the npm registry or NuGet gallery."
      properties:
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The name of the repository that a package was originally
              published to.
        externalConnectionName:
          allOf:
          - $ref: '#/components/schemas/ExternalConnectionName'
          - description: The name of the external connection that a package was ingested
              from.
      type: object
    DomainSummary:
      description: " Information about a domain, including its name, Amazon Resource\
        \ Name (ARN), and status. The <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListDomains.html\"\
        >ListDomains</a> operation returns a list of <code>DomainSummary</code> objects. "
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: ' The name of the domain. '
        owner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: ' The 12-digit account number of the Amazon Web Services
              account that owns the domain. It does not include dashes or spaces. '
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: ' The ARN of the domain. '
        status:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          - description: ' A string that contains the status of the domain. '
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' A timestamp that contains the date and time the domain
              was created. '
        encryptionKey:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: ' The key used to encrypt the domain. '
      type: object
    DomainSummaryList:
      items:
        $ref: '#/components/schemas/DomainSummary'
      type: array
    ErrorMessage:
      type: string
    ExternalConnectionStatus:
      enum:
      - Available
      type: string
    GetAuthorizationTokenRequest:
      properties: {}
      title: GetAuthorizationTokenRequest
      type: object
    String:
      type: string
    GetDomainPermissionsPolicyRequest:
      properties: {}
      title: GetDomainPermissionsPolicyRequest
      type: object
    GetPackageVersionAssetRequest:
      properties: {}
      title: GetPackageVersionAssetRequest
      type: object
    GetPackageVersionReadmeRequest:
      properties: {}
      title: GetPackageVersionReadmeRequest
      type: object
    GetRepositoryEndpointRequest:
      properties: {}
      title: GetRepositoryEndpointRequest
      type: object
    GetRepositoryPermissionsPolicyRequest:
      properties: {}
      title: GetRepositoryPermissionsPolicyRequest
      type: object
    HashAlgorithm:
      enum:
      - MD5
      - SHA-1
      - SHA-256
      - SHA-512
      type: string
    LicenseInfo:
      description: ' Details of the license data. '
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Name of the license. '
        url:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The URL for license data. '
      type: object
    LicenseInfoList:
      items:
        $ref: '#/components/schemas/LicenseInfo'
      type: array
    ListDomainsMaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    PaginationToken:
      maxLength: 2000
      minLength: 1
      pattern: \S+
      type: string
    ListDomainsRequest:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListDomainsMaxResults'
          - description: ' The maximum number of results to return per page. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: ' The token for the next set of results. Use the value returned
              in the previous response in the next request to retrieve the next set
              of results. '
      title: ListDomainsRequest
      type: object
    ListPackageVersionAssetsMaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    ListPackageVersionAssetsRequest:
      properties: {}
      title: ListPackageVersionAssetsRequest
      type: object
    ListPackageVersionDependenciesRequest:
      properties: {}
      title: ListPackageVersionDependenciesRequest
      type: object
    PackageDependencyList:
      items:
        $ref: '#/components/schemas/PackageDependency'
      type: array
    ListPackageVersionsMaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    PackageVersionSortType:
      enum:
      - PUBLISHED_TIME
      type: string
    PackageVersionOriginType:
      enum:
      - INTERNAL
      - EXTERNAL
      - UNKNOWN
      type: string
    ListPackageVersionsRequest:
      properties: {}
      title: ListPackageVersionsRequest
      type: object
    PackageVersionSummaryList:
      items:
        $ref: '#/components/schemas/PackageVersionSummary'
      type: array
    ListPackagesMaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    ListPackagesRequest:
      properties: {}
      title: ListPackagesRequest
      type: object
    PackageSummaryList:
      items:
        $ref: '#/components/schemas/PackageSummary'
      type: array
    ListRepositoriesInDomainMaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    ListRepositoriesInDomainRequest:
      properties: {}
      title: ListRepositoriesInDomainRequest
      type: object
    RepositorySummaryList:
      items:
        $ref: '#/components/schemas/RepositorySummary'
      type: array
    ListRepositoriesMaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    ListRepositoriesRequest:
      properties: {}
      title: ListRepositoriesRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    PackageDependency:
      description: ' Details about a package dependency. '
      properties:
        namespace:
          allOf:
          - $ref: '#/components/schemas/PackageNamespace'
          - description: "<p>The namespace of the package that this package depends\
              \ on. The package component that specifies its namespace depends on\
              \ its type. For example:</p> <ul> <li> <p> The namespace of a Maven\
              \ package is its <code>groupId</code>. </p> </li> <li> <p> The namespace\
              \ of an npm package is its <code>scope</code>. </p> </li> <li> <p> Python\
              \ and NuGet packages do not contain a corresponding component, packages\
              \ of those formats do not have a namespace. </p> </li> </ul>"
        package:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          - description: ' The name of the package that this package depends on. '
        dependencyType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The type of a package dependency. The possible values\
              \ depend on the package type.</p> <ul> <li> <p>npm: <code>regular</code>,\
              \ <code>dev</code>, <code>peer</code>, <code>optional</code> </p> </li>\
              \ <li> <p>maven: <code>optional</code>, <code>parent</code>, <code>compile</code>,\
              \ <code>runtime</code>, <code>test</code>, <code>system</code>, <code>provided</code>.</p>\
              \ <note> <p>Note that <code>parent</code> is not a regular Maven dependency\
              \ type; instead this is extracted from the <code>&lt;parent&gt;</code>\
              \ element if one is defined in the package version's POM file.</p> </note>\
              \ </li> <li> <p>nuget: The <code>dependencyType</code> field is never\
              \ set for NuGet packages.</p> </li> <li> <p>pypi: <code>Requires-Dist</code>\
              \ </p> </li> </ul>"
        versionRequirement:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The required version, or version range, of the package\
              \ that this package depends on. The version format is specific to the\
              \ package type. For example, the following are possible valid required\
              \ versions: <code>1.2.3</code>, <code>^2.3.4</code>, or <code>4.x</code>. "
      type: object
    PackageOriginConfiguration:
      description: Details about the package origin configuration of a package.
      properties:
        restrictions:
          $ref: '#/components/schemas/PackageOriginConfiguration_restrictions'
      type: object
    PackageOriginRestrictions:
      description: Details about the origin restrictions set on the package. The package
        origin restrictions determine how new versions of a package can be added to
        a specific repository.
      properties:
        publish:
          allOf:
          - $ref: '#/components/schemas/AllowPublish'
          - description: The package origin configuration that determines if new versions
              of the package can be published directly to the repository.
        upstream:
          allOf:
          - $ref: '#/components/schemas/AllowUpstream'
          - description: The package origin configuration that determines if new versions
              of the package can be added to the repository from an external connection
              or upstream source.
      required:
      - publish
      - upstream
      type: object
    String255:
      maxLength: 255
      minLength: 1
      type: string
    PackageVersionOrigin:
      description: Information about how a package version was added to a repository.
      properties:
        domainEntryPoint:
          $ref: '#/components/schemas/PackageVersionOrigin_domainEntryPoint'
        originType:
          allOf:
          - $ref: '#/components/schemas/PackageVersionOriginType'
          - description: Describes how the package version was originally added to
              the domain. An <code>INTERNAL</code> origin type means the package version
              was published directly to a repository in the domain. An <code>EXTERNAL</code>
              origin type means the package version was ingested from an external
              connection.
      type: object
    PackageVersionErrorCode:
      enum:
      - ALREADY_EXISTS
      - MISMATCHED_REVISION
      - MISMATCHED_STATUS
      - NOT_ALLOWED
      - NOT_FOUND
      - SKIPPED
      type: string
    PackageVersionError:
      description: 'l An error associated with package. '
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/PackageVersionErrorCode'
          - description: "<p> The error code associated with the error. Valid error\
              \ codes are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code> </p> </li>\
              \ <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li> <p> <code>MISMATCHED_STATUS</code>\
              \ </p> </li> <li> <p> <code>NOT_ALLOWED</code> </p> </li> <li> <p> <code>NOT_FOUND</code>\
              \ </p> </li> <li> <p> <code>SKIPPED</code> </p> </li> </ul>"
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: ' The error message associated with the error. '
      type: object
    PackageVersionSummary:
      description: " Details about a package version, including its status, version,\
        \ and revision. The <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html\"\
        >ListPackageVersions</a> operation returns a list of <code>PackageVersionSummary</code>\
        \ objects. "
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          - description: ' Information about a package version. '
        revision:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRevision'
          - description: ' The revision associated with a package version. '
        status:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          - description: " A string that contains the status of the package version.\
              \ It can be one of the following: "
        origin:
          $ref: '#/components/schemas/PackageVersionDescription_origin'
      required:
      - status
      - version
      type: object
    PolicyDocument:
      maxLength: 7168
      minLength: 1
      pattern: "[\\P{C}\\s]+"
      type: string
    SHA256:
      maxLength: 64
      minLength: 64
      pattern: "[0-9a-f]+"
      type: string
    PublishPackageVersionRequest:
      example:
        assetContent: ""
      properties:
        assetContent:
          allOf:
          - $ref: '#/components/schemas/Asset'
          - description: The content of the asset to publish.
      required:
      - assetContent
      title: PublishPackageVersionRequest
      type: object
    PutDomainPermissionsPolicyRequest:
      example:
        policyDocument: ""
        domain: ""
        domainOwner: ""
        policyRevision: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: ' The name of the domain on which to set the resource policy. '
        domainOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: ' The 12-digit account number of the Amazon Web Services
              account that owns the domain. It does not include dashes or spaces. '
        policyRevision:
          allOf:
          - $ref: '#/components/schemas/PolicyRevision'
          - description: " The current revision of the resource policy to be set.\
              \ This revision is used for optimistic locking, which prevents others\
              \ from overwriting your changes to the domain's resource policy. "
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          - description: ' A valid displayable JSON Aspen policy string to be set
              as the access control resource policy on the provided domain. '
      required:
      - domain
      - policyDocument
      title: PutDomainPermissionsPolicyRequest
      type: object
    PutPackageOriginConfigurationRequest:
      example:
        restrictions:
          upstream: ""
          publish: ""
      properties:
        restrictions:
          $ref: '#/components/schemas/PutPackageOriginConfigurationRequest_restrictions'
      required:
      - restrictions
      title: PutPackageOriginConfigurationRequest
      type: object
    PutRepositoryPermissionsPolicyRequest:
      example:
        policyDocument: ""
        policyRevision: ""
      properties:
        policyRevision:
          allOf:
          - $ref: '#/components/schemas/PolicyRevision'
          - description: " Sets the revision of the resource policy that specifies\
              \ permissions to access the repository. This revision is used for optimistic\
              \ locking, which prevents others from overwriting your changes to the\
              \ repository's resource policy. "
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          - description: ' A valid displayable JSON Aspen policy string to be set
              as the access control resource policy on the provided repository. '
      required:
      - policyDocument
      title: PutRepositoryPermissionsPolicyRequest
      type: object
    UpstreamRepositoryInfoList:
      items:
        $ref: '#/components/schemas/UpstreamRepositoryInfo'
      type: array
    RepositoryExternalConnectionInfoList:
      items:
        $ref: '#/components/schemas/RepositoryExternalConnectionInfo'
      type: array
    RepositoryExternalConnectionInfo:
      description: ' Contains information about the external connection of a repository. '
      properties:
        externalConnectionName:
          allOf:
          - $ref: '#/components/schemas/ExternalConnectionName'
          - description: ' The name of the external connection associated with a repository. '
        packageFormat:
          allOf:
          - $ref: '#/components/schemas/PackageFormat'
          - description: "<p> The package format associated with a repository's external\
              \ connection. The valid package formats are: </p> <ul> <li> <p> <code>npm</code>:\
              \ A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>:\
              \ A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>:\
              \ A Maven package that contains compiled code in a distributable format,\
              \ such as a JAR file. </p> </li> <li> <p> <code>nuget</code>: A NuGet\
              \ package. </p> </li> </ul>"
        status:
          allOf:
          - $ref: '#/components/schemas/ExternalConnectionStatus'
          - description: " The status of the external connection of a repository.\
              \ There is one valid value, <code>Available</code>. "
      type: object
    RepositorySummary:
      description: " Details about a repository, including its Amazon Resource Name\
        \ (ARN), description, and domain information. The <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListRepositories.html\"\
        >ListRepositories</a> operation returns a list of <code>RepositorySummary</code>\
        \ objects. "
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: ' The name of the repository. '
        administratorAccount:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: ' The Amazon Web Services account ID that manages the repository. '
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: ' The name of the domain that contains the repository. '
        domainOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: ' The 12-digit account number of the Amazon Web Services
              account that owns the domain. It does not include dashes or spaces. '
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: ' The ARN of the repository. '
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' The description of the repository. '
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp that represents the date and time the repository
              was created.
      type: object
    SuccessfulPackageVersionInfo:
      description: ' Contains the revision and status of a package version. '
      properties:
        revision:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The revision of a package version. '
        status:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          - description: ' The status of a package version. '
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "\\P{C}*"
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags you want to modify or add to the resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      example:
        tagKeys: ""
      properties:
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The tag key for each tag that you want to remove from the
              resource.
      required:
      - tagKeys
      title: UntagResourceRequest
      type: object
    UpdatePackageVersionsStatusRequest:
      example:
        versions: ""
        versionRevisions: ""
        expectedStatus: ""
        targetStatus: ""
      properties:
        versions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionList'
          - description: ' An array of strings that specify the versions of the package
              with the statuses to update. '
        versionRevisions:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRevisionMap'
          - description: " A map of package versions and package version revisions.\
              \ The map <code>key</code> is the package version (for example, <code>3.5.2</code>),\
              \ and the map <code>value</code> is the package version revision. "
        expectedStatus:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          - description: " The package version’s expected status before it is updated.\
              \ If <code>expectedStatus</code> is provided, the package version's\
              \ status is updated only if its status at the time <code>UpdatePackageVersionsStatus</code>\
              \ is called matches <code>expectedStatus</code>. "
        targetStatus:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          - description: ' The status you want to change the package version status
              to. '
      required:
      - targetStatus
      - versions
      title: UpdatePackageVersionsStatusRequest
      type: object
    UpdateRepositoryRequest:
      example:
        upstreams: ""
        description: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' An updated repository description. '
        upstreams:
          allOf:
          - $ref: '#/components/schemas/UpstreamRepositoryList'
          - description: " A list of upstream repositories to associate with the repository.\
              \ The order of the upstream repositories in the list determines their\
              \ priority order when CodeArtifact looks for a requested package version.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\"\
              >Working with upstream repositories</a>. "
      title: UpdateRepositoryRequest
      type: object
    UpstreamRepositoryInfo:
      description: ' Information about an upstream repository. '
      properties:
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: ' The name of an upstream repository. '
      type: object
    CopyPackageVersions_request:
      properties:
        versions:
          description: <p> The versions of the package to be copied. </p> <note> <p>
            You must specify <code>versions</code> or <code>versionRevisions</code>.
            You cannot specify both. </p> </note>
          items:
            $ref: '#/components/schemas/PackageVersion'
          maxItems: 100
          type: array
        versionRevisions:
          additionalProperties:
            $ref: '#/components/schemas/PackageVersionRevision'
          description: <p> A list of key-value pairs. The keys are package versions
            and the values are package version revisions. A <code>CopyPackageVersion</code>
            operation succeeds if the specified versions in the source repository
            match the specified package version revision. </p> <note> <p> You must
            specify <code>versions</code> or <code>versionRevisions</code>. You cannot
            specify both. </p> </note>
          type: object
        allowOverwrite:
          description: " Set to true to overwrite a package version that already exists\
            \ in the destination repository. If set to false and the package version\
            \ already exists in the destination repository, the package version is\
            \ returned in the <code>failedVersions</code> field of the response with\
            \ an <code>ALREADY_EXISTS</code> error code. "
          type: boolean
        includeFromUpstream:
          description: " Set to true to copy packages from repositories that are upstream\
            \ from the source repository to the destination repository. The default\
            \ setting is false. For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\"\
            >Working with upstream repositories</a>. "
          type: boolean
      type: object
    CreateDomain_request:
      properties:
        encryptionKey:
          description: "<p> The encryption key for the domain. This is used to encrypt\
            \ content stored in a domain. An encryption key can be a key ID, a key\
            \ Amazon Resource Name (ARN), a key alias, or a key alias ARN. To specify\
            \ an <code>encryptionKey</code>, your IAM role must have <code>kms:DescribeKey</code>\
            \ and <code>kms:CreateGrant</code> permissions on the encryption key that\
            \ is used. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestSyntax\"\
            >DescribeKey</a> in the <i>Key Management Service API Reference</i> and\
            \ <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html\"\
            >Key Management Service API Permissions Reference</a> in the <i>Key Management\
            \ Service Developer Guide</i>. </p> <important> <p> CodeArtifact supports\
            \ only symmetric CMKs. Do not associate an asymmetric CMK with your domain.\
            \ For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\"\
            >Using symmetric and asymmetric keys</a> in the <i>Key Management Service\
            \ Developer Guide</i>. </p> </important>"
          maxLength: 1011
          minLength: 1
          pattern: \S+
          type: string
        tags:
          description: One or more tag key-value pairs for the domain.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      type: object
    UpdateRepository_request:
      properties:
        description:
          description: ' An updated repository description. '
          maxLength: 1000
          pattern: "\\P{C}*"
          type: string
        upstreams:
          description: " A list of upstream repositories to associate with the repository.\
            \ The order of the upstream repositories in the list determines their\
            \ priority order when CodeArtifact looks for a requested package version.\
            \ For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\"\
            >Working with upstream repositories</a>. "
          items:
            $ref: '#/components/schemas/UpstreamRepository'
          type: array
      type: object
    CreateRepository_request:
      properties:
        description:
          description: ' A description of the created repository. '
          maxLength: 1000
          pattern: "\\P{C}*"
          type: string
        upstreams:
          description: " A list of upstream repositories to associate with the repository.\
            \ The order of the upstream repositories in the list determines their\
            \ priority order when CodeArtifact looks for a requested package version.\
            \ For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\"\
            >Working with upstream repositories</a>. "
          items:
            $ref: '#/components/schemas/UpstreamRepository'
          type: array
        tags:
          description: One or more tag key-value pairs for the repository.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      type: object
    PutPackageOriginConfiguration_request_restrictions:
      description: Details about the origin restrictions set on the package. The package
        origin restrictions determine how new versions of a package can be added to
        a specific repository.
      properties:
        publish:
          allOf:
          - $ref: '#/components/schemas/AllowPublish'
          - description: The package origin configuration that determines if new versions
              of the package can be published directly to the repository.
        upstream:
          allOf:
          - $ref: '#/components/schemas/AllowUpstream'
          - description: The package origin configuration that determines if new versions
              of the package can be added to the repository from an external connection
              or upstream source.
      type: object
    PutPackageOriginConfiguration_request:
      properties:
        restrictions:
          $ref: '#/components/schemas/PutPackageOriginConfiguration_request_restrictions'
      required:
      - restrictions
      type: object
    DeletePackageVersions_request:
      properties:
        versions:
          description: ' An array of strings that specify the versions of the package
            to delete. '
          items:
            $ref: '#/components/schemas/PackageVersion'
          maxItems: 100
          type: array
        expectedStatus:
          description: ' The expected status of the package version to delete. '
          enum:
          - Published
          - Unfinished
          - Unlisted
          - Archived
          - Disposed
          - Deleted
          type: string
      required:
      - versions
      type: object
    DisposePackageVersions_request:
      properties:
        versions:
          description: ' The versions of the package you want to dispose. '
          items:
            $ref: '#/components/schemas/PackageVersion'
          maxItems: 100
          type: array
        versionRevisions:
          additionalProperties:
            $ref: '#/components/schemas/PackageVersionRevision'
          description: ' The revisions of the package versions you want to dispose. '
          type: object
        expectedStatus:
          description: ' The expected status of the package version to dispose. '
          enum:
          - Published
          - Unfinished
          - Unlisted
          - Archived
          - Disposed
          - Deleted
          type: string
      required:
      - versions
      type: object
    PutRepositoryPermissionsPolicy_request:
      properties:
        policyRevision:
          description: " Sets the revision of the resource policy that specifies permissions\
            \ to access the repository. This revision is used for optimistic locking,\
            \ which prevents others from overwriting your changes to the repository's\
            \ resource policy. "
          maxLength: 100
          minLength: 1
          pattern: \S+
          type: string
        policyDocument:
          description: ' A valid displayable JSON Aspen policy string to be set as
            the access control resource policy on the provided repository. '
          maxLength: 7168
          minLength: 1
          pattern: "[\\P{C}\\s]+"
          type: string
      required:
      - policyDocument
      type: object
    ListDomains_request:
      properties:
        maxResults:
          description: ' The maximum number of results to return per page. '
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: ' The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results. '
          maxLength: 2000
          minLength: 1
          pattern: \S+
          type: string
      type: object
    PublishPackageVersion_request:
      properties:
        assetContent:
          description: The content of the asset to publish.
          type: string
      required:
      - assetContent
      type: object
    PutDomainPermissionsPolicy_request:
      properties:
        domain:
          description: ' The name of the domain on which to set the resource policy. '
          maxLength: 50
          minLength: 2
          pattern: "[a-z][a-z0-9\\-]{0,48}[a-z0-9]"
          type: string
        domainOwner:
          description: ' The 12-digit account number of the Amazon Web Services account
            that owns the domain. It does not include dashes or spaces. '
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12}"
          type: string
        policyRevision:
          description: " The current revision of the resource policy to be set. This\
            \ revision is used for optimistic locking, which prevents others from\
            \ overwriting your changes to the domain's resource policy. "
          maxLength: 100
          minLength: 1
          pattern: \S+
          type: string
        policyDocument:
          description: ' A valid displayable JSON Aspen policy string to be set as
            the access control resource policy on the provided domain. '
          maxLength: 7168
          minLength: 1
          pattern: "[\\P{C}\\s]+"
          type: string
      required:
      - domain
      - policyDocument
      type: object
    TagResource_request:
      properties:
        tags:
          description: The tags you want to modify or add to the resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      required:
      - tags
      type: object
    UntagResource_request:
      properties:
        tagKeys:
          description: The tag key for each tag that you want to remove from the resource.
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 0
          type: array
      required:
      - tagKeys
      type: object
    UpdatePackageVersionsStatus_request:
      properties:
        versions:
          description: ' An array of strings that specify the versions of the package
            with the statuses to update. '
          items:
            $ref: '#/components/schemas/PackageVersion'
          maxItems: 100
          type: array
        versionRevisions:
          additionalProperties:
            $ref: '#/components/schemas/PackageVersionRevision'
          description: " A map of package versions and package version revisions.\
            \ The map <code>key</code> is the package version (for example, <code>3.5.2</code>),\
            \ and the map <code>value</code> is the package version revision. "
          type: object
        expectedStatus:
          description: " The package version’s expected status before it is updated.\
            \ If <code>expectedStatus</code> is provided, the package version's status\
            \ is updated only if its status at the time <code>UpdatePackageVersionsStatus</code>\
            \ is called matches <code>expectedStatus</code>. "
          enum:
          - Published
          - Unfinished
          - Unlisted
          - Archived
          - Disposed
          - Deleted
          type: string
        targetStatus:
          description: ' The status you want to change the package version status
            to. '
          enum:
          - Published
          - Unfinished
          - Unlisted
          - Archived
          - Disposed
          - Deleted
          type: string
      required:
      - targetStatus
      - versions
      type: object
    AssociateExternalConnectionResult_repository:
      allOf:
      - $ref: '#/components/schemas/RepositoryDescription'
      - description: ' Information about the connected repository after processing
          the request. '
      example:
        upstreams: ""
        domainName: ""
        externalConnections: ""
        name: ""
        domainOwner: ""
        description: ""
        createdTime: ""
        arn: ""
        administratorAccount: ""
    CreateDomainResult_domain:
      allOf:
      - $ref: '#/components/schemas/DomainDescription'
      - description: ' Contains information about the created domain after processing
          the request. '
      example:
        owner: ""
        repositoryCount: ""
        s3BucketArn: ""
        assetSizeBytes: ""
        name: ""
        createdTime: ""
        encryptionKey: ""
        arn: ""
        status: ""
    CreateRepositoryResult_repository:
      allOf:
      - $ref: '#/components/schemas/RepositoryDescription'
      - description: ' Information about the created repository after processing the
          request. '
      example:
        upstreams: ""
        domainName: ""
        externalConnections: ""
        name: ""
        domainOwner: ""
        description: ""
        createdTime: ""
        arn: ""
        administratorAccount: ""
    DeleteDomainResult_domain:
      allOf:
      - $ref: '#/components/schemas/DomainDescription'
      - description: ' Contains information about the deleted domain after processing
          the request. '
      example:
        owner: ""
        repositoryCount: ""
        s3BucketArn: ""
        assetSizeBytes: ""
        name: ""
        createdTime: ""
        encryptionKey: ""
        arn: ""
        status: ""
    DeleteDomainPermissionsPolicyResult_policy:
      allOf:
      - $ref: '#/components/schemas/ResourcePolicy'
      - description: ' Information about the deleted resource policy after processing
          the request. '
      example:
        document: ""
        resourceArn: ""
        revision: ""
    DeleteRepositoryResult_repository:
      allOf:
      - $ref: '#/components/schemas/RepositoryDescription'
      - description: ' Information about the deleted repository after processing the
          request. '
      example:
        upstreams: ""
        domainName: ""
        externalConnections: ""
        name: ""
        domainOwner: ""
        description: ""
        createdTime: ""
        arn: ""
        administratorAccount: ""
    DeleteRepositoryPermissionsPolicyResult_policy:
      allOf:
      - $ref: '#/components/schemas/ResourcePolicy'
      - description: ' Information about the deleted policy after processing the request. '
      example:
        document: ""
        resourceArn: ""
        revision: ""
    DescribePackageResult_package:
      allOf:
      - $ref: '#/components/schemas/PackageDescription'
      - description: A <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageDescription.html">PackageDescription</a>
          object that contains information about the requested package.
      example:
        originConfiguration:
          restrictions:
            upstream: ""
            publish: ""
        format: ""
        namespace: ""
        name: ""
    DescribePackageVersionResult_packageVersion:
      allOf:
      - $ref: '#/components/schemas/PackageVersionDescription'
      - description: ' A <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html">PackageVersionDescription</a>
          object that contains information about the requested package version. '
      example:
        summary: ""
        sourceCodeRepository: ""
        displayName: ""
        origin:
          originType: ""
          domainEntryPoint:
            externalConnectionName: ""
            repositoryName: ""
        format: ""
        version: ""
        homePage: ""
        revision: ""
        licenses: ""
        publishedTime: ""
        namespace: ""
        packageName: ""
        status: ""
    DescribeRepositoryResult_repository:
      allOf:
      - $ref: '#/components/schemas/RepositoryDescription'
      - description: ' A <code>RepositoryDescription</code> object that contains the
          requested repository information. '
      example:
        upstreams: ""
        domainName: ""
        externalConnections: ""
        name: ""
        domainOwner: ""
        description: ""
        createdTime: ""
        arn: ""
        administratorAccount: ""
    DisassociateExternalConnectionResult_repository:
      allOf:
      - $ref: '#/components/schemas/RepositoryDescription'
      - description: ' The repository associated with the removed external connection. '
      example:
        upstreams: ""
        domainName: ""
        externalConnections: ""
        name: ""
        domainOwner: ""
        description: ""
        createdTime: ""
        arn: ""
        administratorAccount: ""
    GetDomainPermissionsPolicyResult_policy:
      allOf:
      - $ref: '#/components/schemas/ResourcePolicy'
      - description: ' The returned resource policy. '
      example:
        document: ""
        resourceArn: ""
        revision: ""
    PublishPackageVersionResult_asset:
      allOf:
      - $ref: '#/components/schemas/AssetSummary'
      - description: An <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_AssetSummary.html">AssetSummary</a>
          for the published asset.
      example:
        size: ""
        name: ""
        hashes: ""
    PutDomainPermissionsPolicyResult_policy:
      allOf:
      - $ref: '#/components/schemas/ResourcePolicy'
      - description: ' The resource policy that was set after processing the request. '
      example:
        document: ""
        resourceArn: ""
        revision: ""
    PutPackageOriginConfigurationResult_originConfiguration:
      allOf:
      - $ref: '#/components/schemas/PackageOriginConfiguration'
      - description: A <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageOriginConfiguration.html">PackageOriginConfiguration</a>
          object that describes the origin configuration set for the package. It contains
          a <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageOriginRestrictions.html">PackageOriginRestrictions</a>
          object that describes how new versions of the package can be introduced
          to the repository.
      example:
        restrictions:
          upstream: ""
          publish: ""
    UpdateRepositoryResult_repository:
      allOf:
      - $ref: '#/components/schemas/RepositoryDescription'
      - description: ' The updated repository. '
      example:
        upstreams: ""
        domainName: ""
        externalConnections: ""
        name: ""
        domainOwner: ""
        description: ""
        createdTime: ""
        arn: ""
        administratorAccount: ""
    PackageSummary_originConfiguration:
      allOf:
      - $ref: '#/components/schemas/PackageOriginConfiguration'
      - description: A <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageOriginConfiguration.html">PackageOriginConfiguration</a>
          object that contains a <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageOriginRestrictions.html">PackageOriginRestrictions</a>
          object that contains information about the upstream and publish package
          origin restrictions.
      example:
        restrictions:
          upstream: ""
          publish: ""
    PackageDescription_originConfiguration:
      allOf:
      - $ref: '#/components/schemas/PackageOriginConfiguration'
      - description: The package origin configuration for the package.
      example:
        restrictions:
          upstream: ""
          publish: ""
    PackageVersionDescription_origin:
      allOf:
      - $ref: '#/components/schemas/PackageVersionOrigin'
      - description: A <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionOrigin.html">PackageVersionOrigin</a>
          object that contains information about how the package version was added
          to the repository.
      example:
        originType: ""
        domainEntryPoint:
          externalConnectionName: ""
          repositoryName: ""
    PackageOriginConfiguration_restrictions:
      allOf:
      - $ref: '#/components/schemas/PackageOriginRestrictions'
      - description: A <code>PackageOriginRestrictions</code> object that contains
          information about the upstream and publish package origin configuration
          for the package.
      example:
        upstream: ""
        publish: ""
    PackageVersionOrigin_domainEntryPoint:
      allOf:
      - $ref: '#/components/schemas/DomainEntryPoint'
      - description: A <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DomainEntryPoint.html">DomainEntryPoint</a>
          object that contains information about from which repository or external
          connection the package version was added to the domain.
      example:
        externalConnectionName: ""
        repositoryName: ""
    PutPackageOriginConfigurationRequest_restrictions:
      allOf:
      - $ref: '#/components/schemas/PackageOriginRestrictions'
      - description: <p>A <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageOriginRestrictions.html">PackageOriginRestrictions</a>
          object that contains information about the <code>upstream</code> and <code>publish</code>
          package origin restrictions. The <code>upstream</code> restriction determines
          if new package versions can be ingested or retained from external connections
          or upstream repositories. The <code>publish</code> restriction determines
          if new package versions can be published directly to the repository.</p>
          <p>You must include both the desired <code>upstream</code> and <code>publish</code>
          restrictions.</p>
      example:
        upstream: ""
        publish: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

