# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_package_version_result_package_version import DescribePackageVersionResultPackageVersion
from openapi_server import util


class DescribePackageVersionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, package_version: DescribePackageVersionResultPackageVersion=None):
        """DescribePackageVersionResult - a model defined in OpenAPI

        :param package_version: The package_version of this DescribePackageVersionResult.
        """
        self.openapi_types = {
            'package_version': DescribePackageVersionResultPackageVersion
        }

        self.attribute_map = {
            'package_version': 'packageVersion'
        }

        self._package_version = package_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePackageVersionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePackageVersionResult of this DescribePackageVersionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def package_version(self):
        """Gets the package_version of this DescribePackageVersionResult.


        :return: The package_version of this DescribePackageVersionResult.
        :rtype: DescribePackageVersionResultPackageVersion
        """
        return self._package_version

    @package_version.setter
    def package_version(self, package_version):
        """Sets the package_version of this DescribePackageVersionResult.


        :param package_version: The package_version of this DescribePackageVersionResult.
        :type package_version: DescribePackageVersionResultPackageVersion
        """
        if package_version is None:
            raise ValueError("Invalid value for `package_version`, must not be `None`")

        self._package_version = package_version
