# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.package_format import PackageFormat
from openapi_server.models.package_version_description_origin import PackageVersionDescriptionOrigin
from openapi_server.models.package_version_status import PackageVersionStatus
from openapi_server import util


class PackageVersionDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format: PackageFormat=None, namespace: str=None, package_name: str=None, display_name: str=None, version: str=None, summary: str=None, home_page: str=None, source_code_repository: str=None, published_time: datetime=None, licenses: List=None, revision: str=None, status: PackageVersionStatus=None, origin: PackageVersionDescriptionOrigin=None):
        """PackageVersionDescription - a model defined in OpenAPI

        :param format: The format of this PackageVersionDescription.
        :param namespace: The namespace of this PackageVersionDescription.
        :param package_name: The package_name of this PackageVersionDescription.
        :param display_name: The display_name of this PackageVersionDescription.
        :param version: The version of this PackageVersionDescription.
        :param summary: The summary of this PackageVersionDescription.
        :param home_page: The home_page of this PackageVersionDescription.
        :param source_code_repository: The source_code_repository of this PackageVersionDescription.
        :param published_time: The published_time of this PackageVersionDescription.
        :param licenses: The licenses of this PackageVersionDescription.
        :param revision: The revision of this PackageVersionDescription.
        :param status: The status of this PackageVersionDescription.
        :param origin: The origin of this PackageVersionDescription.
        """
        self.openapi_types = {
            'format': PackageFormat,
            'namespace': str,
            'package_name': str,
            'display_name': str,
            'version': str,
            'summary': str,
            'home_page': str,
            'source_code_repository': str,
            'published_time': datetime,
            'licenses': List,
            'revision': str,
            'status': PackageVersionStatus,
            'origin': PackageVersionDescriptionOrigin
        }

        self.attribute_map = {
            'format': 'format',
            'namespace': 'namespace',
            'package_name': 'packageName',
            'display_name': 'displayName',
            'version': 'version',
            'summary': 'summary',
            'home_page': 'homePage',
            'source_code_repository': 'sourceCodeRepository',
            'published_time': 'publishedTime',
            'licenses': 'licenses',
            'revision': 'revision',
            'status': 'status',
            'origin': 'origin'
        }

        self._format = format
        self._namespace = namespace
        self._package_name = package_name
        self._display_name = display_name
        self._version = version
        self._summary = summary
        self._home_page = home_page
        self._source_code_repository = source_code_repository
        self._published_time = published_time
        self._licenses = licenses
        self._revision = revision
        self._status = status
        self._origin = origin

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PackageVersionDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PackageVersionDescription of this PackageVersionDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format(self):
        """Gets the format of this PackageVersionDescription.


        :return: The format of this PackageVersionDescription.
        :rtype: PackageFormat
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this PackageVersionDescription.


        :param format: The format of this PackageVersionDescription.
        :type format: PackageFormat
        """

        self._format = format

    @property
    def namespace(self):
        """Gets the namespace of this PackageVersionDescription.


        :return: The namespace of this PackageVersionDescription.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this PackageVersionDescription.


        :param namespace: The namespace of this PackageVersionDescription.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def package_name(self):
        """Gets the package_name of this PackageVersionDescription.


        :return: The package_name of this PackageVersionDescription.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this PackageVersionDescription.


        :param package_name: The package_name of this PackageVersionDescription.
        :type package_name: str
        """

        self._package_name = package_name

    @property
    def display_name(self):
        """Gets the display_name of this PackageVersionDescription.


        :return: The display_name of this PackageVersionDescription.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this PackageVersionDescription.


        :param display_name: The display_name of this PackageVersionDescription.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def version(self):
        """Gets the version of this PackageVersionDescription.


        :return: The version of this PackageVersionDescription.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PackageVersionDescription.


        :param version: The version of this PackageVersionDescription.
        :type version: str
        """

        self._version = version

    @property
    def summary(self):
        """Gets the summary of this PackageVersionDescription.


        :return: The summary of this PackageVersionDescription.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this PackageVersionDescription.


        :param summary: The summary of this PackageVersionDescription.
        :type summary: str
        """

        self._summary = summary

    @property
    def home_page(self):
        """Gets the home_page of this PackageVersionDescription.


        :return: The home_page of this PackageVersionDescription.
        :rtype: str
        """
        return self._home_page

    @home_page.setter
    def home_page(self, home_page):
        """Sets the home_page of this PackageVersionDescription.


        :param home_page: The home_page of this PackageVersionDescription.
        :type home_page: str
        """

        self._home_page = home_page

    @property
    def source_code_repository(self):
        """Gets the source_code_repository of this PackageVersionDescription.


        :return: The source_code_repository of this PackageVersionDescription.
        :rtype: str
        """
        return self._source_code_repository

    @source_code_repository.setter
    def source_code_repository(self, source_code_repository):
        """Sets the source_code_repository of this PackageVersionDescription.


        :param source_code_repository: The source_code_repository of this PackageVersionDescription.
        :type source_code_repository: str
        """

        self._source_code_repository = source_code_repository

    @property
    def published_time(self):
        """Gets the published_time of this PackageVersionDescription.


        :return: The published_time of this PackageVersionDescription.
        :rtype: datetime
        """
        return self._published_time

    @published_time.setter
    def published_time(self, published_time):
        """Sets the published_time of this PackageVersionDescription.


        :param published_time: The published_time of this PackageVersionDescription.
        :type published_time: datetime
        """

        self._published_time = published_time

    @property
    def licenses(self):
        """Gets the licenses of this PackageVersionDescription.


        :return: The licenses of this PackageVersionDescription.
        :rtype: List
        """
        return self._licenses

    @licenses.setter
    def licenses(self, licenses):
        """Sets the licenses of this PackageVersionDescription.


        :param licenses: The licenses of this PackageVersionDescription.
        :type licenses: List
        """

        self._licenses = licenses

    @property
    def revision(self):
        """Gets the revision of this PackageVersionDescription.


        :return: The revision of this PackageVersionDescription.
        :rtype: str
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this PackageVersionDescription.


        :param revision: The revision of this PackageVersionDescription.
        :type revision: str
        """

        self._revision = revision

    @property
    def status(self):
        """Gets the status of this PackageVersionDescription.


        :return: The status of this PackageVersionDescription.
        :rtype: PackageVersionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PackageVersionDescription.


        :param status: The status of this PackageVersionDescription.
        :type status: PackageVersionStatus
        """

        self._status = status

    @property
    def origin(self):
        """Gets the origin of this PackageVersionDescription.


        :return: The origin of this PackageVersionDescription.
        :rtype: PackageVersionDescriptionOrigin
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this PackageVersionDescription.


        :param origin: The origin of this PackageVersionDescription.
        :type origin: PackageVersionDescriptionOrigin
        """

        self._origin = origin
