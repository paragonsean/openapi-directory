# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.package_format import PackageFormat
from openapi_server.models.package_version_status import PackageVersionStatus
from openapi_server.models.publish_package_version_result_asset import PublishPackageVersionResultAsset
from openapi_server import util


class PublishPackageVersionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format: PackageFormat=None, namespace: str=None, package: str=None, version: str=None, version_revision: str=None, status: PackageVersionStatus=None, asset: PublishPackageVersionResultAsset=None):
        """PublishPackageVersionResult - a model defined in OpenAPI

        :param format: The format of this PublishPackageVersionResult.
        :param namespace: The namespace of this PublishPackageVersionResult.
        :param package: The package of this PublishPackageVersionResult.
        :param version: The version of this PublishPackageVersionResult.
        :param version_revision: The version_revision of this PublishPackageVersionResult.
        :param status: The status of this PublishPackageVersionResult.
        :param asset: The asset of this PublishPackageVersionResult.
        """
        self.openapi_types = {
            'format': PackageFormat,
            'namespace': str,
            'package': str,
            'version': str,
            'version_revision': str,
            'status': PackageVersionStatus,
            'asset': PublishPackageVersionResultAsset
        }

        self.attribute_map = {
            'format': 'format',
            'namespace': 'namespace',
            'package': 'package',
            'version': 'version',
            'version_revision': 'versionRevision',
            'status': 'status',
            'asset': 'asset'
        }

        self._format = format
        self._namespace = namespace
        self._package = package
        self._version = version
        self._version_revision = version_revision
        self._status = status
        self._asset = asset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishPackageVersionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishPackageVersionResult of this PublishPackageVersionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format(self):
        """Gets the format of this PublishPackageVersionResult.


        :return: The format of this PublishPackageVersionResult.
        :rtype: PackageFormat
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this PublishPackageVersionResult.


        :param format: The format of this PublishPackageVersionResult.
        :type format: PackageFormat
        """

        self._format = format

    @property
    def namespace(self):
        """Gets the namespace of this PublishPackageVersionResult.


        :return: The namespace of this PublishPackageVersionResult.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this PublishPackageVersionResult.


        :param namespace: The namespace of this PublishPackageVersionResult.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def package(self):
        """Gets the package of this PublishPackageVersionResult.


        :return: The package of this PublishPackageVersionResult.
        :rtype: str
        """
        return self._package

    @package.setter
    def package(self, package):
        """Sets the package of this PublishPackageVersionResult.


        :param package: The package of this PublishPackageVersionResult.
        :type package: str
        """

        self._package = package

    @property
    def version(self):
        """Gets the version of this PublishPackageVersionResult.


        :return: The version of this PublishPackageVersionResult.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PublishPackageVersionResult.


        :param version: The version of this PublishPackageVersionResult.
        :type version: str
        """

        self._version = version

    @property
    def version_revision(self):
        """Gets the version_revision of this PublishPackageVersionResult.


        :return: The version_revision of this PublishPackageVersionResult.
        :rtype: str
        """
        return self._version_revision

    @version_revision.setter
    def version_revision(self, version_revision):
        """Sets the version_revision of this PublishPackageVersionResult.


        :param version_revision: The version_revision of this PublishPackageVersionResult.
        :type version_revision: str
        """

        self._version_revision = version_revision

    @property
    def status(self):
        """Gets the status of this PublishPackageVersionResult.


        :return: The status of this PublishPackageVersionResult.
        :rtype: PackageVersionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PublishPackageVersionResult.


        :param status: The status of this PublishPackageVersionResult.
        :type status: PackageVersionStatus
        """

        self._status = status

    @property
    def asset(self):
        """Gets the asset of this PublishPackageVersionResult.


        :return: The asset of this PublishPackageVersionResult.
        :rtype: PublishPackageVersionResultAsset
        """
        return self._asset

    @asset.setter
    def asset(self, asset):
        """Sets the asset of this PublishPackageVersionResult.


        :param asset: The asset of this PublishPackageVersionResult.
        :type asset: PublishPackageVersionResultAsset
        """

        self._asset = asset
