# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.package_version_description_origin import PackageVersionDescriptionOrigin
from openapi_server.models.package_version_status import PackageVersionStatus
from openapi_server import util


class PackageVersionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, version: str=None, revision: str=None, status: PackageVersionStatus=None, origin: PackageVersionDescriptionOrigin=None):
        """PackageVersionSummary - a model defined in OpenAPI

        :param version: The version of this PackageVersionSummary.
        :param revision: The revision of this PackageVersionSummary.
        :param status: The status of this PackageVersionSummary.
        :param origin: The origin of this PackageVersionSummary.
        """
        self.openapi_types = {
            'version': str,
            'revision': str,
            'status': PackageVersionStatus,
            'origin': PackageVersionDescriptionOrigin
        }

        self.attribute_map = {
            'version': 'version',
            'revision': 'revision',
            'status': 'status',
            'origin': 'origin'
        }

        self._version = version
        self._revision = revision
        self._status = status
        self._origin = origin

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PackageVersionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PackageVersionSummary of this PackageVersionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def version(self):
        """Gets the version of this PackageVersionSummary.


        :return: The version of this PackageVersionSummary.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PackageVersionSummary.


        :param version: The version of this PackageVersionSummary.
        :type version: str
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version

    @property
    def revision(self):
        """Gets the revision of this PackageVersionSummary.


        :return: The revision of this PackageVersionSummary.
        :rtype: str
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this PackageVersionSummary.


        :param revision: The revision of this PackageVersionSummary.
        :type revision: str
        """

        self._revision = revision

    @property
    def status(self):
        """Gets the status of this PackageVersionSummary.


        :return: The status of this PackageVersionSummary.
        :rtype: PackageVersionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PackageVersionSummary.


        :param status: The status of this PackageVersionSummary.
        :type status: PackageVersionStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def origin(self):
        """Gets the origin of this PackageVersionSummary.


        :return: The origin of this PackageVersionSummary.
        :rtype: PackageVersionDescriptionOrigin
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this PackageVersionSummary.


        :param origin: The origin of this PackageVersionSummary.
        :type origin: PackageVersionDescriptionOrigin
        """

        self._origin = origin
