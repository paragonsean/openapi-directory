# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.package_format import PackageFormat
from openapi_server.models.package_summary_origin_configuration import PackageSummaryOriginConfiguration
from openapi_server import util


class PackageSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format: PackageFormat=None, namespace: str=None, package: str=None, origin_configuration: PackageSummaryOriginConfiguration=None):
        """PackageSummary - a model defined in OpenAPI

        :param format: The format of this PackageSummary.
        :param namespace: The namespace of this PackageSummary.
        :param package: The package of this PackageSummary.
        :param origin_configuration: The origin_configuration of this PackageSummary.
        """
        self.openapi_types = {
            'format': PackageFormat,
            'namespace': str,
            'package': str,
            'origin_configuration': PackageSummaryOriginConfiguration
        }

        self.attribute_map = {
            'format': 'format',
            'namespace': 'namespace',
            'package': 'package',
            'origin_configuration': 'originConfiguration'
        }

        self._format = format
        self._namespace = namespace
        self._package = package
        self._origin_configuration = origin_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PackageSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PackageSummary of this PackageSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format(self):
        """Gets the format of this PackageSummary.


        :return: The format of this PackageSummary.
        :rtype: PackageFormat
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this PackageSummary.


        :param format: The format of this PackageSummary.
        :type format: PackageFormat
        """

        self._format = format

    @property
    def namespace(self):
        """Gets the namespace of this PackageSummary.


        :return: The namespace of this PackageSummary.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this PackageSummary.


        :param namespace: The namespace of this PackageSummary.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def package(self):
        """Gets the package of this PackageSummary.


        :return: The package of this PackageSummary.
        :rtype: str
        """
        return self._package

    @package.setter
    def package(self, package):
        """Sets the package of this PackageSummary.


        :param package: The package of this PackageSummary.
        :type package: str
        """

        self._package = package

    @property
    def origin_configuration(self):
        """Gets the origin_configuration of this PackageSummary.


        :return: The origin_configuration of this PackageSummary.
        :rtype: PackageSummaryOriginConfiguration
        """
        return self._origin_configuration

    @origin_configuration.setter
    def origin_configuration(self, origin_configuration):
        """Sets the origin_configuration of this PackageSummary.


        :param origin_configuration: The origin_configuration of this PackageSummary.
        :type origin_configuration: PackageSummaryOriginConfiguration
        """

        self._origin_configuration = origin_configuration
