# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.domain_status import DomainStatus
from openapi_server import util


class DomainSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, owner: str=None, arn: str=None, status: DomainStatus=None, created_time: datetime=None, encryption_key: str=None):
        """DomainSummary - a model defined in OpenAPI

        :param name: The name of this DomainSummary.
        :param owner: The owner of this DomainSummary.
        :param arn: The arn of this DomainSummary.
        :param status: The status of this DomainSummary.
        :param created_time: The created_time of this DomainSummary.
        :param encryption_key: The encryption_key of this DomainSummary.
        """
        self.openapi_types = {
            'name': str,
            'owner': str,
            'arn': str,
            'status': DomainStatus,
            'created_time': datetime,
            'encryption_key': str
        }

        self.attribute_map = {
            'name': 'name',
            'owner': 'owner',
            'arn': 'arn',
            'status': 'status',
            'created_time': 'createdTime',
            'encryption_key': 'encryptionKey'
        }

        self._name = name
        self._owner = owner
        self._arn = arn
        self._status = status
        self._created_time = created_time
        self._encryption_key = encryption_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainSummary of this DomainSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DomainSummary.


        :return: The name of this DomainSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DomainSummary.


        :param name: The name of this DomainSummary.
        :type name: str
        """

        self._name = name

    @property
    def owner(self):
        """Gets the owner of this DomainSummary.


        :return: The owner of this DomainSummary.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this DomainSummary.


        :param owner: The owner of this DomainSummary.
        :type owner: str
        """

        self._owner = owner

    @property
    def arn(self):
        """Gets the arn of this DomainSummary.


        :return: The arn of this DomainSummary.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DomainSummary.


        :param arn: The arn of this DomainSummary.
        :type arn: str
        """

        self._arn = arn

    @property
    def status(self):
        """Gets the status of this DomainSummary.


        :return: The status of this DomainSummary.
        :rtype: DomainStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DomainSummary.


        :param status: The status of this DomainSummary.
        :type status: DomainStatus
        """

        self._status = status

    @property
    def created_time(self):
        """Gets the created_time of this DomainSummary.


        :return: The created_time of this DomainSummary.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this DomainSummary.


        :param created_time: The created_time of this DomainSummary.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def encryption_key(self):
        """Gets the encryption_key of this DomainSummary.


        :return: The encryption_key of this DomainSummary.
        :rtype: str
        """
        return self._encryption_key

    @encryption_key.setter
    def encryption_key(self, encryption_key):
        """Sets the encryption_key of this DomainSummary.


        :param encryption_key: The encryption_key of this DomainSummary.
        :type encryption_key: str
        """

        self._encryption_key = encryption_key
