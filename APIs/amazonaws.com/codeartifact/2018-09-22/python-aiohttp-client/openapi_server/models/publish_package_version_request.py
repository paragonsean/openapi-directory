# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublishPackageVersionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_content: str=None):
        """PublishPackageVersionRequest - a model defined in OpenAPI

        :param asset_content: The asset_content of this PublishPackageVersionRequest.
        """
        self.openapi_types = {
            'asset_content': str
        }

        self.attribute_map = {
            'asset_content': 'assetContent'
        }

        self._asset_content = asset_content

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishPackageVersionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishPackageVersion_request of this PublishPackageVersionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_content(self):
        """Gets the asset_content of this PublishPackageVersionRequest.

        The content of the asset to publish.

        :return: The asset_content of this PublishPackageVersionRequest.
        :rtype: str
        """
        return self._asset_content

    @asset_content.setter
    def asset_content(self, asset_content):
        """Sets the asset_content of this PublishPackageVersionRequest.

        The content of the asset to publish.

        :param asset_content: The asset_content of this PublishPackageVersionRequest.
        :type asset_content: str
        """
        if asset_content is None:
            raise ValueError("Invalid value for `asset_content`, must not be `None`")

        self._asset_content = asset_content
