openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>AWS Signer is a fully managed code signing service to help you\
    \ ensure the trust and integrity of your code. </p> <p>AWS Signer supports the\
    \ following applications:</p> <p>With code signing for AWS Lambda, you can sign\
    \ <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/\">AWS Lambda</a> deployment\
    \ packages. Integrated support is provided for <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/gsg/\"\
    >Amazon S3</a>, <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/\"\
    >Amazon CloudWatch</a>, and <a href=\"http://docs.aws.amazon.com/awscloudtrail/latest/userguide/\"\
    >AWS CloudTrail</a>. In order to sign code, you create a signing profile and then\
    \ use Signer to sign Lambda zip files in S3. </p> <p>With code signing for IoT,\
    \ you can sign code for any IoT device that is supported by AWS. IoT code signing\
    \ is available for <a href=\"http://docs.aws.amazon.com/freertos/latest/userguide/\"\
    >Amazon FreeRTOS</a> and <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/\"\
    >AWS IoT Device Management</a>, and is integrated with <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/\"\
    >AWS Certificate Manager (ACM)</a>. In order to sign code, you import a third-party\
    \ code signing certificate using ACM, and use that to sign updates in Amazon FreeRTOS\
    \ and AWS IoT Device Management. </p> <p>With code signing for containers â€¦(TBD)</p>\
    \ <p>For more information about AWS Signer, see the <a href=\"https://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html\"\
    >AWS Signer Developer Guide</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Signer
  version: 2017-08-25
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: signer
  x-aws-signingName: signer
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/signer-2017-08-25.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/signer/
servers:
- description: The signer multi-region endpoint
  url: "http://signer.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The signer multi-region endpoint
  url: "https://signer.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The signer endpoint for China (Beijing) and China (Ningxia)
  url: "http://signer.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The signer endpoint for China (Beijing) and China (Ningxia)
  url: "https://signer.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /signing-profiles/{profileName}/permissions:
    get:
      description: Lists the cross-account permissions associated with a signing profile.
      operationId: ListProfilePermissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Name of the signing profile containing the cross-account permissions.
        explode: false
        in: path
        name: profileName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9_]{2,}"
          type: string
        style: simple
      - description: String for specifying the next set of paginated results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProfilePermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-accepts:
      - application/json
    post:
      description: Adds cross-account permissions to a signing profile.
      operationId: AddProfilePermission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The human-readable name of the signing profile.
        explode: false
        in: path
        name: profileName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9_]{2,}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProfilePermission_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddProfilePermissionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLimitExceededException'
          description: ServiceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /signing-profiles/{profileName}:
    delete:
      description: "Changes the state of an <code>ACTIVE</code> signing profile to\
        \ <code>CANCELED</code>. A canceled profile is still viewable with the <code>ListSigningProfiles</code>\
        \ operation, but it cannot perform new signing jobs, and is deleted two years\
        \ after cancelation."
      operationId: CancelSigningProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the signing profile to be canceled.
        explode: false
        in: path
        name: profileName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9_]{2,}"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-accepts:
      - application/json
    get:
      description: Returns information on a specific signing profile.
      operationId: GetSigningProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the target signing profile.
        explode: false
        in: path
        name: profileName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9_]{2,}"
          type: string
        style: simple
      - description: The AWS account ID of the profile owner.
        explode: true
        in: query
        name: profileOwner
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "^[0-9]{12}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSigningProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-accepts:
      - application/json
    put:
      description: 'Creates a signing profile. A signing profile is a code signing
        template that can be used to carry out a pre-defined signing job. '
      operationId: PutSigningProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the signing profile to be created.
        explode: false
        in: path
        name: profileName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9_]{2,}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSigningProfile_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSigningProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /signing-jobs/{jobId}:
    get:
      description: 'Returns information about a specific code signing job. You specify
        the job by using the <code>jobId</code> value that is returned by the <a>StartSigningJob</a>
        operation. '
      operationId: DescribeSigningJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the signing job on input.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSigningJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-accepts:
      - application/json
  /revocations#signatureTimestamp&platformId&profileVersionArn&jobArn&certificateHashes:
    get:
      description: "Retrieves the revocation status of one or more of the signing\
        \ profile, signing job, and signing certificate."
      operationId: GetRevocationStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The timestamp of the signature that validates the profile or
          job.
        explode: true
        in: query
        name: signatureTimestamp
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: 'The ID of a signing platform. '
        explode: true
        in: query
        name: platformId
        required: true
        schema:
          type: string
        style: form
      - description: The version of a signing profile.
        explode: true
        in: query
        name: profileVersionArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          type: string
        style: form
      - description: The ARN of a signing job.
        explode: true
        in: query
        name: jobArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          type: string
        style: form
      - description: <p>A list of composite signed hashes that identify certificates.</p>
          <p>A certificate identifier consists of a subject certificate TBS hash (signed
          by the parent CA) combined with a parent CA TBS hash (signed by the parent
          CAâ€™s CA). Root certificates are defined as their own CA.</p>
        explode: true
        in: query
        name: certificateHashes
        required: true
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRevocationStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-accepts:
      - application/json
  /signing-platforms/{platformId}:
    get:
      description: Returns information on a specific signing platform.
      operationId: GetSigningPlatform
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the target signing platform.
        explode: false
        in: path
        name: platformId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSigningPlatformResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-accepts:
      - application/json
  /signing-jobs:
    get:
      description: "Lists all your signing jobs. You can use the <code>maxResults</code>\
        \ parameter to limit the number of signing jobs that are returned in the response.\
        \ If additional jobs remain to be listed, code signing returns a <code>nextToken</code>\
        \ value. Use this value in subsequent calls to <code>ListSigningJobs</code>\
        \ to fetch the remaining values. You can continue calling <code>ListSigningJobs</code>\
        \ with your <code>maxResults</code> parameter and with new values that code\
        \ signing returns in the <code>nextToken</code> parameter until all of your\
        \ signing jobs have been returned. "
      operationId: ListSigningJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A status value with which to filter your results.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - InProgress
          - Failed
          - Succeeded
          type: string
        style: form
      - description: The ID of microcontroller platform that you specified for the
          distribution of your code image.
        explode: true
        in: query
        name: platformId
        required: false
        schema:
          type: string
        style: form
      - description: The IAM principal that requested the signing job.
        explode: true
        in: query
        name: requestedBy
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies the maximum number of items to return in the response.\
          \ Use this parameter when paginating results. If additional items exist\
          \ beyond the number you specify, the <code>nextToken</code> element is set\
          \ in the response. Use the <code>nextToken</code> value in a subsequent\
          \ request to retrieve additional items. "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 25
          minimum: 1
          type: integer
        style: form
      - description: "String for specifying the next set of paginated results to return.\
          \ After you receive a response with truncated results, use this parameter\
          \ in a subsequent request. Set it to the value of <code>nextToken</code>\
          \ from the response that you just received."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Filters results to return only signing jobs with revoked signatures.
        explode: true
        in: query
        name: isRevoked
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters results to return only signing jobs with signatures expiring
          before a specified timestamp.
        explode: true
        in: query
        name: signatureExpiresBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filters results to return only signing jobs with signatures expiring
          after a specified timestamp.
        explode: true
        in: query
        name: signatureExpiresAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filters results to return only signing jobs initiated by a specified
          IAM entity.
        explode: true
        in: query
        name: jobInvoker
        required: false
        schema:
          maxLength: 12
          minLength: 12
          pattern: "^[0-9]{12}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSigningJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-accepts:
      - application/json
    post:
      description: "<p>Initiates a signing job to be performed on the code provided.\
        \ Signing jobs are viewable by the <code>ListSigningJobs</code> operation\
        \ for two years after they are performed. Note the following requirements:\
        \ </p> <ul> <li> <p> You must create an Amazon S3 source bucket. For more\
        \ information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html\"\
        >Creating a Bucket</a> in the <i>Amazon S3 Getting Started Guide</i>. </p>\
        \ </li> <li> <p>Your S3 source bucket must be version enabled.</p> </li> <li>\
        \ <p>You must create an S3 destination bucket. Code signing uses your S3 destination\
        \ bucket to write your signed code.</p> </li> <li> <p>You specify the name\
        \ of the source and destination buckets when calling the <code>StartSigningJob</code>\
        \ operation.</p> </li> <li> <p>You must also specify a request token that\
        \ identifies your request to code signing.</p> </li> </ul> <p>You can call\
        \ the <a>DescribeSigningJob</a> and the <a>ListSigningJobs</a> actions after\
        \ you call <code>StartSigningJob</code>.</p> <p>For a Java example that shows\
        \ how to use this action, see <a href=\"https://docs.aws.amazon.com/signer/latest/developerguide/api-startsigningjob.html\"\
        >StartSigningJob</a>.</p>"
      operationId: StartSigningJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSigningJob_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSigningJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /signing-platforms:
    get:
      description: "Lists all signing platforms available in code signing that match\
        \ the request parameters. If additional jobs remain to be listed, code signing\
        \ returns a <code>nextToken</code> value. Use this value in subsequent calls\
        \ to <code>ListSigningJobs</code> to fetch the remaining values. You can continue\
        \ calling <code>ListSigningJobs</code> with your <code>maxResults</code> parameter\
        \ and with new values that code signing returns in the <code>nextToken</code>\
        \ parameter until all of your signing jobs have been returned."
      operationId: ListSigningPlatforms
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The category type of a signing platform.
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Any partner entities connected to a signing platform.
        explode: true
        in: query
        name: partner
        required: false
        schema:
          type: string
        style: form
      - description: The validation template that is used by the target signing platform.
        explode: true
        in: query
        name: target
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned by this operation.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 25
          minimum: 1
          type: integer
        style: form
      - description: "Value for specifying the next set of paginated results to return.\
          \ After you receive a response with truncated results, use this parameter\
          \ in a subsequent request. Set it to the value of <code>nextToken</code>\
          \ from the response that you just received."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSigningPlatformsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-accepts:
      - application/json
  /signing-profiles:
    get:
      description: "Lists all available signing profiles in your AWS account. Returns\
        \ only profiles with an <code>ACTIVE</code> status unless the <code>includeCanceled</code>\
        \ request field is set to <code>true</code>. If additional jobs remain to\
        \ be listed, code signing returns a <code>nextToken</code> value. Use this\
        \ value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining\
        \ values. You can continue calling <code>ListSigningJobs</code> with your\
        \ <code>maxResults</code> parameter and with new values that code signing\
        \ returns in the <code>nextToken</code> parameter until all of your signing\
        \ jobs have been returned."
      operationId: ListSigningProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Designates whether to include profiles with the status of <code>CANCELED</code>.
        explode: true
        in: query
        name: includeCanceled
        required: false
        schema:
          type: boolean
        style: form
      - description: The maximum number of profiles to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 25
          minimum: 1
          type: integer
        style: form
      - description: "Value for specifying the next set of paginated results to return.\
          \ After you receive a response with truncated results, use this parameter\
          \ in a subsequent request. Set it to the value of <code>nextToken</code>\
          \ from the response that you just received."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Filters results to return only signing jobs initiated for a specified
          signing platform.
        explode: true
        in: query
        name: platformId
        required: false
        schema:
          type: string
        style: form
      - description: Filters results to return only signing jobs with statuses in
          the specified list.
        explode: true
        in: query
        name: statuses
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SigningProfileStatus'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSigningProfilesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Returns a list of the tags associated with a signing profile resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) for the signing profile.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: "Adds one or more tags to a signing profile. Tags are labels that\
        \ you can use to identify and organize your AWS resources. Each tag consists\
        \ of a key and an optional value. To specify the signing profile, use its\
        \ Amazon Resource Name (ARN). To specify the tag, use a key-value pair."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) for the signing profile.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /signing-profiles/{profileName}/permissions/{statementId}#revisionId:
    delete:
      description: Removes cross-account permissions from a signing profile.
      operationId: RemoveProfilePermission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A human-readable name for the signing profile with permissions
          to be removed.
        explode: false
        in: path
        name: profileName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9_]{2,}"
          type: string
        style: simple
      - description: An identifier for the current revision of the signing profile
          permissions.
        explode: true
        in: query
        name: revisionId
        required: true
        schema:
          type: string
        style: form
      - description: A unique identifier for the cross-account permissions statement.
        explode: false
        in: path
        name: statementId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveProfilePermissionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-accepts:
      - application/json
  /signing-jobs/{jobId}/revoke:
    put:
      description: Changes the state of a signing job to REVOKED. This indicates that
        the signature is no longer valid.
      operationId: RevokeSignature
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the signing job to be revoked.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSignature_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /signing-profiles/{profileName}/revoke:
    put:
      description: Changes the state of a signing profile to REVOKED. This indicates
        that signatures generated using the signing profile after an effective start
        date are no longer valid.
      operationId: RevokeSigningProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the signing profile to be revoked.
        explode: false
        in: path
        name: profileName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9_]{2,}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSigningProfile_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /signing-jobs/with-payload:
    post:
      description: Signs a binary payload and returns a signature envelope.
      operationId: SignPayload
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignPayload_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignPayloadResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: "Removes one or more tags from a signing profile. To remove the\
        \ tags, specify a list of tag keys."
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) for the signing profile.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: A list of tag keys to be removed from the signing profile.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AddProfilePermissionResponse:
      example:
        revisionId: ""
      properties:
        revisionId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique identifier for the current profile revision.
      type: object
    ValidationException: {}
    ResourceNotFoundException: {}
    AccessDeniedException: {}
    ServiceLimitExceededException: {}
    ConflictException: {}
    TooManyRequestsException: {}
    InternalServiceErrorException: {}
    DescribeSigningJobResponse:
      example:
        profileName: ""
        signedObject:
          s3:
            bucketName: ""
            key: ""
        completedAt: ""
        profileVersion: ""
        jobOwner: ""
        jobInvoker: ""
        source:
          s3:
            bucketName: ""
            version: ""
            key: ""
        signingMaterial:
          certificateArn: ""
        platformId: ""
        overrides:
          signingImageFormat: ""
          signingConfiguration:
            encryptionAlgorithm: ""
            hashAlgorithm: ""
        platformDisplayName: ""
        revocationRecord:
          reason: ""
          revokedBy: ""
          revokedAt: ""
        jobId: ""
        createdAt: ""
        requestedBy: ""
        statusReason: ""
        signingParameters: ""
        signatureExpiresAt: ""
        status: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The ID of the signing job on output.
        source:
          $ref: '#/components/schemas/DescribeSigningJobResponse_source'
        signingMaterial:
          $ref: '#/components/schemas/DescribeSigningJobResponse_signingMaterial'
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          - description: The microcontroller platform to which your signed code image
              will be distributed.
        platformDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: A human-readable name for the signing platform associated
              with the signing job.
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          - description: The name of the profile that initiated the signing operation.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          - description: The version of the signing profile used to initiate the signing
              job.
        overrides:
          $ref: '#/components/schemas/DescribeSigningJobResponse_overrides'
        signingParameters:
          allOf:
          - $ref: '#/components/schemas/SigningParameters'
          - description: 'Map of user-assigned key-value pairs used during signing.
              These values contain any information that you specified for use in your
              signing job. '
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Date and time that the signing job was created.
        completedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Date and time that the signing job was completed.
        signatureExpiresAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Thr expiration timestamp for the signature generated by the
              signing job.
        requestedBy:
          allOf:
          - $ref: '#/components/schemas/RequestedBy'
          - description: The IAM principal that requested the signing job.
        status:
          allOf:
          - $ref: '#/components/schemas/SigningStatus'
          - description: Status of the signing job.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          - description: String value that contains the status reason.
        revocationRecord:
          $ref: '#/components/schemas/DescribeSigningJobResponse_revocationRecord'
        signedObject:
          $ref: '#/components/schemas/DescribeSigningJobResponse_signedObject'
        jobOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The AWS account ID of the job owner.
        jobInvoker:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The IAM entity that initiated the signing job.
      type: object
    GetRevocationStatusResponse:
      example:
        revokedEntities: ""
      properties:
        revokedEntities:
          allOf:
          - $ref: '#/components/schemas/RevokedEntities'
          - description: "A list of revoked entities (including one or more of the\
              \ signing profile ARN, signing job ID, and certificate hash) supplied\
              \ as input to the API."
      type: object
    String:
      type: string
    GetSigningPlatformResponse:
      example:
        partner: ""
        revocationSupported: ""
        signingImageFormat:
          supportedFormats: ""
          defaultFormat: ""
        displayName: ""
        maxSizeInMB: ""
        platformId: ""
        category: ""
        signingConfiguration:
          hashAlgorithmOptions:
            allowedValues: ""
            defaultValue: ""
          encryptionAlgorithmOptions:
            allowedValues: ""
            defaultValue: ""
        target: ""
      properties:
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          - description: The ID of the target signing platform.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The display name of the target signing platform.
        partner:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A list of partner entities that use the target signing platform.
        target:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The validation template that is used by the target signing
              platform.
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          - description: The category type of the target signing platform.
        signingConfiguration:
          $ref: '#/components/schemas/GetSigningPlatformResponse_signingConfiguration'
        signingImageFormat:
          $ref: '#/components/schemas/GetSigningPlatformResponse_signingImageFormat'
        maxSizeInMB:
          allOf:
          - $ref: '#/components/schemas/MaxSizeInMB'
          - description: The maximum size (in MB) of the payload that can be signed
              by the target platform.
        revocationSupported:
          allOf:
          - $ref: '#/components/schemas/bool'
          - description: A flag indicating whether signatures generated for the signing
              platform can be revoked.
      type: object
    GetSigningProfileResponse:
      example:
        profileName: ""
        profileVersionArn: ""
        profileVersion: ""
        signingMaterial:
          certificateArn: ""
        platformId: ""
        overrides:
          signingImageFormat: ""
          signingConfiguration:
            encryptionAlgorithm: ""
            hashAlgorithm: ""
        platformDisplayName: ""
        tags: ""
        revocationRecord:
          revokedBy: ""
          revocationEffectiveFrom: ""
          revokedAt: ""
        statusReason: ""
        signingParameters: ""
        signatureValidityPeriod:
          type: ""
          value: ""
        arn: ""
        status: ""
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          - description: The name of the target signing profile.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          - description: The current version of the signing profile.
        profileVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The signing profile ARN, including the profile version."
        revocationRecord:
          $ref: '#/components/schemas/SigningProfileRevocationRecord'
        signingMaterial:
          $ref: '#/components/schemas/GetSigningProfileResponse_signingMaterial'
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          - description: The ID of the platform that is used by the target signing
              profile.
        platformDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: A human-readable name for the signing platform associated
              with the signing profile.
        signatureValidityPeriod:
          $ref: '#/components/schemas/SignatureValidityPeriod'
        overrides:
          $ref: '#/components/schemas/GetSigningProfileResponse_overrides'
        signingParameters:
          allOf:
          - $ref: '#/components/schemas/SigningParameters'
          - description: A map of key-value pairs for signing operations that is attached
              to the target signing profile.
        status:
          allOf:
          - $ref: '#/components/schemas/SigningProfileStatus'
          - description: The status of the target signing profile.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Reason for the status of the target signing profile.
        arn:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: The Amazon Resource Name (ARN) for the signing profile.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A list of tags associated with the signing profile.
      type: object
    ListProfilePermissionsResponse:
      example:
        revisionId: ""
        policySizeBytes: ""
        permissions: ""
        nextToken: ""
      properties:
        revisionId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the current revision of profile permissions.
        policySizeBytes:
          allOf:
          - $ref: '#/components/schemas/PolicySizeBytes'
          - description: Total size of the policy associated with the Signing Profile
              in bytes.
        permissions:
          allOf:
          - $ref: '#/components/schemas/Permissions'
          - description: List of permissions associated with the Signing Profile.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: String for specifying the next set of paginated results.
      type: object
    ListSigningJobsResponse:
      example:
        nextToken: ""
        jobs: ""
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/SigningJobs'
          - description: A list of your signing jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: String for specifying the next set of paginated results.
      type: object
    ListSigningPlatformsResponse:
      example:
        nextToken: ""
        platforms: ""
      properties:
        platforms:
          allOf:
          - $ref: '#/components/schemas/SigningPlatforms'
          - description: A list of all platforms that match the request parameters.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Value for specifying the next set of paginated results to
              return.
      type: object
    ListSigningProfilesResponse:
      example:
        nextToken: ""
        profiles: ""
      properties:
        profiles:
          allOf:
          - $ref: '#/components/schemas/SigningProfiles'
          - description: A list of profiles that are available in the AWS account.
              This includes profiles with the status of <code>CANCELED</code> if the
              <code>includeCanceled</code> parameter is set to <code>true</code>.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Value for specifying the next set of paginated results to
              return.
      type: object
    SigningProfileStatus:
      enum:
      - Active
      - Canceled
      - Revoked
      type: string
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A list of tags associated with the signing profile.
      type: object
    BadRequestException: {}
    NotFoundException: {}
    PutSigningProfileResponse:
      example:
        profileVersionArn: ""
        profileVersion: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: The Amazon Resource Name (ARN) of the signing profile created.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          - description: The version of the signing profile being created.
        profileVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The signing profile ARN, including the profile version."
      type: object
    CertificateArn:
      type: string
    Integer:
      type: integer
    ValidityType:
      enum:
      - DAYS
      - MONTHS
      - YEARS
      type: string
    SigningConfigurationOverrides:
      description: A signing configuration that overrides the default encryption or
        hash algorithm of a signing job.
      properties:
        encryptionAlgorithm:
          allOf:
          - $ref: '#/components/schemas/EncryptionAlgorithm'
          - description: A specified override of the default encryption algorithm
              that is used in a code signing job.
        hashAlgorithm:
          allOf:
          - $ref: '#/components/schemas/HashAlgorithm'
          - description: A specified override of the default hash algorithm that is
              used in a code signing job.
      type: object
    ImageFormat:
      enum:
      - JSON
      - JSONEmbedded
      - JSONDetached
      type: string
    SigningParameterValue:
      type: string
    TagValue:
      maxLength: 256
      type: string
    RemoveProfilePermissionResponse:
      example:
        revisionId: ""
      properties:
        revisionId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An identifier for the current revision of the profile permissions.
      type: object
    SignPayloadResponse:
      example:
        jobId: ""
        metadata: ""
        signature: ""
        jobOwner: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: Unique identifier of the signing job.
        jobOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The AWS account ID of the job owner.
        metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: "Information including the signing profile ARN and the signing\
              \ job ID. Clients use metadata to signature records, for example, as\
              \ annotations added to the signature manifest inside an OCI registry."
        signature:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: A cryptographic signature.
      type: object
    StartSigningJobResponse:
      example:
        jobId: ""
        jobOwner: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The ID of your signing job.
        jobOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The AWS account ID of the signing job owner.
      type: object
    S3Source:
      description: Information about the S3 bucket where you saved your unsigned code.
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: Name of the S3 bucket.
        key:
          allOf:
          - $ref: '#/components/schemas/Key'
          - description: Key name of the bucket object that contains your unsigned
              code.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: Version of your source image in your version enabled S3 bucket.
      required:
      - bucketName
      - key
      - version
      type: object
    S3Destination:
      description: The name and prefix of the S3 bucket where code signing saves your
        signed objects.
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: Name of the S3 bucket.
        prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: An Amazon S3 prefix that you can use to limit responses to
              those that begin with the specified prefix.
      type: object
    ThrottlingException: {}
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      type: string
    AccountId:
      maxLength: 12
      minLength: 12
      pattern: "^[0-9]{12}$"
      type: string
    ProfileName:
      maxLength: 64
      minLength: 2
      pattern: "^[a-zA-Z0-9_]{2,}"
      type: string
    ProfileVersion:
      maxLength: 10
      minLength: 10
      pattern: "^[a-zA-Z0-9]{10}$"
      type: string
    AddProfilePermissionRequest:
      example:
        principal: ""
        revisionId: ""
        profileVersion: ""
        statementId: ""
        action: ""
      properties:
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          - description: The version of the signing profile.
        action:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The AWS Signer action permitted as part of cross-account
              permissions.
        principal:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The AWS principal receiving cross-account permissions. This
              may be an IAM role or another AWS account ID.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique identifier for the current profile revision.
        statementId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique identifier for the cross-account permission statement.
      required:
      - action
      - principal
      - statementId
      title: AddProfilePermissionRequest
      type: object
    Arn:
      maxLength: 2048
      minLength: 20
      type: string
    Blob:
      type: string
    BucketName:
      type: string
    CancelSigningProfileRequest:
      properties: {}
      title: CancelSigningProfileRequest
      type: object
    Category:
      enum:
      - AWSIoT
      type: string
    CertificateHashes:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ClientRequestToken:
      type: string
    JobId:
      type: string
    DescribeSigningJobRequest:
      properties: {}
      title: DescribeSigningJobRequest
      type: object
    Source:
      description: An <code>S3Source</code> object that contains information about
        the S3 bucket where you saved your unsigned code.
      properties:
        s3:
          $ref: '#/components/schemas/StartSigningJob_request_source_s3'
      type: object
    SigningMaterial:
      description: The ACM certificate that is used to sign your code.
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          - description: The Amazon Resource Name (ARN) of the certificates that is
              used to sign your code.
      required:
      - certificateArn
      type: object
    PlatformId:
      type: string
    DisplayName:
      type: string
    SigningPlatformOverrides:
      description: Any overrides that are applied to the signing configuration of
        a code signing platform.
      properties:
        signingConfiguration:
          $ref: '#/components/schemas/PutSigningProfile_request_overrides_signingConfiguration'
        signingImageFormat:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          - description: "A signed image is a JSON object. When overriding the default\
              \ signing platform configuration, a customer can select either of two\
              \ signing formats, <code>JSONEmbedded</code> or <code>JSONDetached</code>.\
              \ (A third format value, <code>JSON</code>, is reserved for future use.)\
              \ With <code>JSONEmbedded</code>, the signing image has the payload\
              \ embedded in it. With <code>JSONDetached</code>, the payload is not\
              \ be embedded in the signing image."
      type: object
    SigningParameters:
      additionalProperties:
        $ref: '#/components/schemas/SigningParameterValue'
      type: object
    Timestamp:
      format: date-time
      type: string
    RequestedBy:
      type: string
    SigningStatus:
      enum:
      - InProgress
      - Failed
      - Succeeded
      type: string
    StatusReason:
      type: string
    SigningJobRevocationRecord:
      description: Revocation information for a signing job.
      properties:
        reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A caller-supplied reason for revocation.
        revokedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time of revocation.
        revokedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identity of the revoker.
      type: object
    SignedObject:
      description: Points to an <code>S3SignedObject</code> object that contains information
        about your signed code image.
      properties:
        s3:
          $ref: '#/components/schemas/SignedObject_s3'
      type: object
    Destination:
      description: Points to an <code>S3Destination</code> object that contains information
        about your S3 bucket.
      properties:
        s3:
          $ref: '#/components/schemas/StartSigningJob_request_destination_s3'
      type: object
    EncryptionAlgorithm:
      enum:
      - RSA
      - ECDSA
      type: string
    EncryptionAlgorithms:
      items:
        $ref: '#/components/schemas/EncryptionAlgorithm'
      type: array
    EncryptionAlgorithmOptions:
      description: The encryption algorithm options that are available to a code signing
        job.
      properties:
        allowedValues:
          allOf:
          - $ref: '#/components/schemas/EncryptionAlgorithms'
          - description: The set of accepted encryption algorithms that are allowed
              in a code signing job.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/EncryptionAlgorithm'
          - description: The default encryption algorithm that is used by a code signing
              job.
      required:
      - allowedValues
      - defaultValue
      type: object
    GetRevocationStatusRequest:
      properties: {}
      title: GetRevocationStatusRequest
      type: object
    RevokedEntities:
      items:
        $ref: '#/components/schemas/String'
      type: array
    GetSigningPlatformRequest:
      properties: {}
      title: GetSigningPlatformRequest
      type: object
    SigningConfiguration:
      description: The configuration of a code signing operation.
      properties:
        encryptionAlgorithmOptions:
          $ref: '#/components/schemas/SigningConfiguration_encryptionAlgorithmOptions'
        hashAlgorithmOptions:
          $ref: '#/components/schemas/SigningConfiguration_hashAlgorithmOptions'
      required:
      - encryptionAlgorithmOptions
      - hashAlgorithmOptions
      type: object
    SigningImageFormat:
      description: The image format of a code signing platform or profile.
      properties:
        supportedFormats:
          allOf:
          - $ref: '#/components/schemas/ImageFormats'
          - description: The supported formats of a code signing image.
        defaultFormat:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          - description: The default format of a code signing image.
      required:
      - defaultFormat
      - supportedFormats
      type: object
    MaxSizeInMB:
      type: integer
    bool:
      type: boolean
    GetSigningProfileRequest:
      properties: {}
      title: GetSigningProfileRequest
      type: object
    SigningProfileRevocationRecord:
      description: Revocation information for a signing profile.
      example:
        revokedBy: ""
        revocationEffectiveFrom: ""
        revokedAt: ""
      properties:
        revocationEffectiveFrom:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when revocation becomes effective.
        revokedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the signing profile was revoked.
        revokedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identity of the revoker.
      type: object
    SignatureValidityPeriod:
      description: The validity period for a signing job.
      example:
        type: ""
        value: ""
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The numerical value of the time unit for signature validity.
        type:
          allOf:
          - $ref: '#/components/schemas/ValidityType'
          - description: The time unit for signature validity.
      type: object
    string:
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 200
      minProperties: 1
      type: object
    HashAlgorithm:
      enum:
      - SHA1
      - SHA256
      type: string
    HashAlgorithms:
      items:
        $ref: '#/components/schemas/HashAlgorithm'
      type: array
    HashAlgorithmOptions:
      description: The hash algorithms that are available to a code signing job.
      properties:
        allowedValues:
          allOf:
          - $ref: '#/components/schemas/HashAlgorithms'
          - description: The set of accepted hash algorithms allowed in a code signing
              job.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/HashAlgorithm'
          - description: The default hash algorithm that is used in a code signing
              job.
      required:
      - allowedValues
      - defaultValue
      type: object
    ImageFormats:
      items:
        $ref: '#/components/schemas/ImageFormat'
      type: array
    Key:
      type: string
    ListProfilePermissionsRequest:
      properties: {}
      title: ListProfilePermissionsRequest
      type: object
    PolicySizeBytes:
      type: integer
    Permissions:
      items:
        $ref: '#/components/schemas/Permission'
      type: array
    MaxResults:
      maximum: 25
      minimum: 1
      type: integer
    NextToken:
      type: string
    ListSigningJobsRequest:
      properties: {}
      title: ListSigningJobsRequest
      type: object
    SigningJobs:
      items:
        $ref: '#/components/schemas/SigningJob'
      type: array
    ListSigningPlatformsRequest:
      properties: {}
      title: ListSigningPlatformsRequest
      type: object
    SigningPlatforms:
      items:
        $ref: '#/components/schemas/SigningPlatform'
      type: array
    Statuses:
      items:
        $ref: '#/components/schemas/SigningProfileStatus'
      type: array
    ListSigningProfilesRequest:
      properties: {}
      title: ListSigningProfilesRequest
      type: object
    SigningProfiles:
      items:
        $ref: '#/components/schemas/SigningProfile'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    Metadata:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    Payload:
      maxLength: 4096
      minLength: 1
      type: string
    Permission:
      description: A cross-account permission for a signing profile.
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An AWS Signer action permitted as part of cross-account permissions.
        principal:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The AWS principal that has been granted a cross-account permission.
        statementId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique identifier for a cross-account permission statement.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          - description: The signing profile version that a permission applies to.
      type: object
    Prefix:
      type: string
    PutSigningProfileRequest:
      example:
        signingParameters: ""
        signatureValidityPeriod:
          type: ""
          value: ""
        signingMaterial:
          certificateArn: ""
        platformId: ""
        overrides:
          signingImageFormat: ""
          signingConfiguration:
            encryptionAlgorithm: ""
            hashAlgorithm: ""
        tags: ""
      properties:
        signingMaterial:
          $ref: '#/components/schemas/PutSigningProfileRequest_signingMaterial'
        signatureValidityPeriod:
          $ref: '#/components/schemas/PutSigningProfileRequest_signatureValidityPeriod'
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          - description: The ID of the signing platform to be created.
        overrides:
          $ref: '#/components/schemas/PutSigningProfileRequest_overrides'
        signingParameters:
          allOf:
          - $ref: '#/components/schemas/SigningParameters'
          - description: Map of key-value pairs for signing. These can include any
              information that you want to use during signing.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: Tags to be associated with the signing profile that is being
              created.
      required:
      - platformId
      title: PutSigningProfileRequest
      type: object
    RemoveProfilePermissionRequest:
      properties: {}
      title: RemoveProfilePermissionRequest
      type: object
    RevocationReasonString:
      maxLength: 500
      minLength: 1
      type: string
    RevokeSignatureRequest:
      example:
        reason: ""
        jobOwner: ""
      properties:
        jobOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: AWS account ID of the job owner.
        reason:
          allOf:
          - $ref: '#/components/schemas/RevocationReasonString'
          - description: The reason for revoking the signing job.
      required:
      - reason
      title: RevokeSignatureRequest
      type: object
    RevokeSigningProfileRequest:
      example:
        reason: ""
        profileVersion: ""
        effectiveTime: ""
      properties:
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          - description: The version of the signing profile to be revoked.
        reason:
          allOf:
          - $ref: '#/components/schemas/RevocationReasonString'
          - description: The reason for revoking a signing profile.
        effectiveTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp for when revocation of a Signing Profile should
              become effective. Signatures generated using the signing profile after
              this timestamp are not trusted.
      required:
      - effectiveTime
      - profileVersion
      - reason
      title: RevokeSigningProfileRequest
      type: object
    S3SignedObject:
      description: The S3 bucket name and key where code signing saved your signed
        code image.
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: Name of the S3 bucket.
        key:
          allOf:
          - $ref: '#/components/schemas/Key'
          - description: Key name that uniquely identifies a signed code image in
              your bucket.
      type: object
    Version:
      type: string
    SignPayloadRequest:
      example:
        profileName: ""
        payload: ""
        profileOwner: ""
        payloadFormat: ""
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          - description: The name of the signing profile.
        profileOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The AWS account ID of the profile owner.
        payload:
          allOf:
          - $ref: '#/components/schemas/Payload'
          - description: Specifies the object digest (hash) to sign.
        payloadFormat:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Payload content type
      required:
      - payload
      - payloadFormat
      - profileName
      title: SignPayloadRequest
      type: object
    SigningJob:
      description: Contains information about a signing job.
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The ID of the signing job.
        source:
          $ref: '#/components/schemas/SigningJob_source'
        signedObject:
          $ref: '#/components/schemas/SigningJob_signedObject'
        signingMaterial:
          $ref: '#/components/schemas/SigningJob_signingMaterial'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the signing job was created.
        status:
          allOf:
          - $ref: '#/components/schemas/SigningStatus'
          - description: The status of the signing job.
        isRevoked:
          allOf:
          - $ref: '#/components/schemas/bool'
          - description: Indicates whether the signing job is revoked.
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          - description: The name of the signing profile that created a signing job.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          - description: The version of the signing profile that created a signing
              job.
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          - description: The unique identifier for a signing platform.
        platformDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name of a signing platform.
        signatureExpiresAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the signature of a signing job expires.
        jobOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The AWS account ID of the job owner.
        jobInvoker:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The AWS account ID of the job invoker.
      type: object
    SigningParameterKey:
      type: string
    SigningPlatform:
      description: Contains information about the signing configurations and parameters
        that are used to perform a code signing job.
      properties:
        platformId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of a code signing platform.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The display name of a code signing platform.
        partner:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Any partner entities linked to a code signing platform.
        target:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The types of targets that can be signed by a code signing
              platform.
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          - description: The category of a code signing platform.
        signingConfiguration:
          $ref: '#/components/schemas/SigningPlatform_signingConfiguration'
        signingImageFormat:
          $ref: '#/components/schemas/SigningImageFormat'
        maxSizeInMB:
          allOf:
          - $ref: '#/components/schemas/MaxSizeInMB'
          - description: The maximum size (in MB) of code that can be signed by a
              code signing platform.
        revocationSupported:
          allOf:
          - $ref: '#/components/schemas/bool'
          - description: Indicates whether revocation is supported for the platform.
      type: object
    SigningProfile:
      description: Contains information about the ACM certificates and code signing
        configuration parameters that can be used by a given code signing user.
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          - description: The name of the signing profile.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          - description: The version of a signing profile.
        profileVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN of a signing profile, including the profile version."
        signingMaterial:
          $ref: '#/components/schemas/SigningProfile_signingMaterial'
        signatureValidityPeriod:
          $ref: '#/components/schemas/SigningProfile_signatureValidityPeriod'
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          - description: The ID of a platform that is available for use by a signing
              profile.
        platformDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name of the signing platform.
        signingParameters:
          allOf:
          - $ref: '#/components/schemas/SigningParameters'
          - description: The parameters that are available for use by a code signing
              user.
        status:
          allOf:
          - $ref: '#/components/schemas/SigningProfileStatus'
          - description: The status of a code signing profile.
        arn:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: The Amazon Resource Name (ARN) for the signing profile.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A list of tags associated with the signing profile.
      type: object
    StartSigningJobRequest:
      example:
        profileName: ""
        clientRequestToken: ""
        destination:
          s3:
            bucketName: ""
            prefix: ""
        profileOwner: ""
        source:
          s3:
            bucketName: ""
            version: ""
            key: ""
      properties:
        source:
          $ref: '#/components/schemas/StartSigningJobRequest_source'
        destination:
          $ref: '#/components/schemas/StartSigningJobRequest_destination'
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          - description: The name of the signing profile.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: String that identifies the signing request. All calls after
              the first that use this token return the same response as the first
              call.
        profileOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The AWS account ID of the signing profile owner.
      required:
      - clientRequestToken
      - destination
      - profileName
      - source
      title: StartSigningJobRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: One or more tags to be associated with the signing profile.
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    AddProfilePermission_request:
      properties:
        profileVersion:
          description: The version of the signing profile.
          maxLength: 10
          minLength: 10
          pattern: "^[a-zA-Z0-9]{10}$"
          type: string
        action:
          description: The AWS Signer action permitted as part of cross-account permissions.
          type: string
        principal:
          description: The AWS principal receiving cross-account permissions. This
            may be an IAM role or another AWS account ID.
          type: string
        revisionId:
          description: A unique identifier for the current profile revision.
          type: string
        statementId:
          description: A unique identifier for the cross-account permission statement.
          type: string
      required:
      - action
      - principal
      - statementId
      type: object
    PutSigningProfile_request_signingMaterial:
      description: The ACM certificate that is used to sign your code.
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          - description: The Amazon Resource Name (ARN) of the certificates that is
              used to sign your code.
      type: object
    PutSigningProfile_request_signatureValidityPeriod:
      description: The validity period for a signing job.
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The numerical value of the time unit for signature validity.
        type:
          allOf:
          - $ref: '#/components/schemas/ValidityType'
          - description: The time unit for signature validity.
      type: object
    PutSigningProfile_request_overrides_signingConfiguration:
      allOf:
      - $ref: '#/components/schemas/SigningConfigurationOverrides'
      - description: A signing configuration that overrides the default encryption
          or hash algorithm of a signing job.
      example:
        encryptionAlgorithm: ""
        hashAlgorithm: ""
    PutSigningProfile_request_overrides:
      description: Any overrides that are applied to the signing configuration of
        a code signing platform.
      properties:
        signingConfiguration:
          $ref: '#/components/schemas/PutSigningProfile_request_overrides_signingConfiguration'
        signingImageFormat:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          - description: "A signed image is a JSON object. When overriding the default\
              \ signing platform configuration, a customer can select either of two\
              \ signing formats, <code>JSONEmbedded</code> or <code>JSONDetached</code>.\
              \ (A third format value, <code>JSON</code>, is reserved for future use.)\
              \ With <code>JSONEmbedded</code>, the signing image has the payload\
              \ embedded in it. With <code>JSONDetached</code>, the payload is not\
              \ be embedded in the signing image."
      type: object
    PutSigningProfile_request:
      properties:
        signingMaterial:
          $ref: '#/components/schemas/PutSigningProfile_request_signingMaterial'
        signatureValidityPeriod:
          $ref: '#/components/schemas/PutSigningProfile_request_signatureValidityPeriod'
        platformId:
          description: The ID of the signing platform to be created.
          type: string
        overrides:
          $ref: '#/components/schemas/PutSigningProfile_request_overrides'
        signingParameters:
          additionalProperties:
            $ref: '#/components/schemas/SigningParameterValue'
          description: Map of key-value pairs for signing. These can include any information
            that you want to use during signing.
          type: object
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tags to be associated with the signing profile that is being
            created.
          maxProperties: 200
          minProperties: 1
          type: object
      required:
      - platformId
      type: object
    StartSigningJob_request_source_s3:
      allOf:
      - $ref: '#/components/schemas/S3Source'
      - description: The <code>S3Source</code> object.
      example:
        bucketName: ""
        version: ""
        key: ""
    StartSigningJob_request_source:
      description: An <code>S3Source</code> object that contains information about
        the S3 bucket where you saved your unsigned code.
      properties:
        s3:
          $ref: '#/components/schemas/StartSigningJob_request_source_s3'
      type: object
    StartSigningJob_request_destination_s3:
      allOf:
      - $ref: '#/components/schemas/S3Destination'
      - description: The <code>S3Destination</code> object.
      example:
        bucketName: ""
        prefix: ""
    StartSigningJob_request_destination:
      description: Points to an <code>S3Destination</code> object that contains information
        about your S3 bucket.
      properties:
        s3:
          $ref: '#/components/schemas/StartSigningJob_request_destination_s3'
      type: object
    StartSigningJob_request:
      properties:
        source:
          $ref: '#/components/schemas/StartSigningJob_request_source'
        destination:
          $ref: '#/components/schemas/StartSigningJob_request_destination'
        profileName:
          description: The name of the signing profile.
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9_]{2,}"
          type: string
        clientRequestToken:
          description: String that identifies the signing request. All calls after
            the first that use this token return the same response as the first call.
          type: string
        profileOwner:
          description: The AWS account ID of the signing profile owner.
          maxLength: 12
          minLength: 12
          pattern: "^[0-9]{12}$"
          type: string
      required:
      - clientRequestToken
      - destination
      - profileName
      - source
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: One or more tags to be associated with the signing profile.
          maxProperties: 200
          minProperties: 1
          type: object
      required:
      - tags
      type: object
    RevokeSignature_request:
      properties:
        jobOwner:
          description: AWS account ID of the job owner.
          maxLength: 12
          minLength: 12
          pattern: "^[0-9]{12}$"
          type: string
        reason:
          description: The reason for revoking the signing job.
          maxLength: 500
          minLength: 1
          type: string
      required:
      - reason
      type: object
    RevokeSigningProfile_request:
      properties:
        profileVersion:
          description: The version of the signing profile to be revoked.
          maxLength: 10
          minLength: 10
          pattern: "^[a-zA-Z0-9]{10}$"
          type: string
        reason:
          description: The reason for revoking a signing profile.
          maxLength: 500
          minLength: 1
          type: string
        effectiveTime:
          description: A timestamp for when revocation of a Signing Profile should
            become effective. Signatures generated using the signing profile after
            this timestamp are not trusted.
          format: date-time
          type: string
      required:
      - effectiveTime
      - profileVersion
      - reason
      type: object
    SignPayload_request:
      properties:
        profileName:
          description: The name of the signing profile.
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9_]{2,}"
          type: string
        profileOwner:
          description: The AWS account ID of the profile owner.
          maxLength: 12
          minLength: 12
          pattern: "^[0-9]{12}$"
          type: string
        payload:
          description: Specifies the object digest (hash) to sign.
          maxLength: 4096
          minLength: 1
          type: string
        payloadFormat:
          description: Payload content type
          type: string
      required:
      - payload
      - payloadFormat
      - profileName
      type: object
    DescribeSigningJobResponse_source:
      allOf:
      - $ref: '#/components/schemas/Source'
      - description: The object that contains the name of your S3 bucket or your raw
          code.
      example:
        s3:
          bucketName: ""
          version: ""
          key: ""
    DescribeSigningJobResponse_signingMaterial:
      allOf:
      - $ref: '#/components/schemas/SigningMaterial'
      - description: The Amazon Resource Name (ARN) of your code signing certificate.
      example:
        certificateArn: ""
    DescribeSigningJobResponse_overrides:
      allOf:
      - $ref: '#/components/schemas/SigningPlatformOverrides'
      - description: A list of any overrides that were applied to the signing operation.
      example:
        signingImageFormat: ""
        signingConfiguration:
          encryptionAlgorithm: ""
          hashAlgorithm: ""
    DescribeSigningJobResponse_revocationRecord:
      allOf:
      - $ref: '#/components/schemas/SigningJobRevocationRecord'
      - description: A revocation record if the signature generated by the signing
          job has been revoked. Contains a timestamp and the ID of the IAM entity
          that revoked the signature.
      example:
        reason: ""
        revokedBy: ""
        revokedAt: ""
    DescribeSigningJobResponse_signedObject:
      allOf:
      - $ref: '#/components/schemas/SignedObject'
      - description: Name of the S3 bucket where the signed code image is saved by
          code signing.
      example:
        s3:
          bucketName: ""
          key: ""
    GetSigningPlatformResponse_signingConfiguration:
      allOf:
      - $ref: '#/components/schemas/SigningConfiguration'
      - description: A list of configurations applied to the target platform at signing.
      example:
        hashAlgorithmOptions:
          allowedValues: ""
          defaultValue: ""
        encryptionAlgorithmOptions:
          allowedValues: ""
          defaultValue: ""
    GetSigningPlatformResponse_signingImageFormat:
      allOf:
      - $ref: '#/components/schemas/SigningImageFormat'
      - description: The format of the target platform's signing image.
      example:
        supportedFormats: ""
        defaultFormat: ""
    GetSigningProfileResponse_signingMaterial:
      allOf:
      - $ref: '#/components/schemas/SigningMaterial'
      - description: The ARN of the certificate that the target profile uses for signing
          operations.
      example:
        certificateArn: ""
    GetSigningProfileResponse_overrides:
      allOf:
      - $ref: '#/components/schemas/SigningPlatformOverrides'
      - description: A list of overrides applied by the target signing profile for
          signing operations.
      example:
        signingImageFormat: ""
        signingConfiguration:
          encryptionAlgorithm: ""
          hashAlgorithm: ""
    SignedObject_s3:
      allOf:
      - $ref: '#/components/schemas/S3SignedObject'
      - description: The <code>S3SignedObject</code>.
      example:
        bucketName: ""
        key: ""
    SigningConfiguration_encryptionAlgorithmOptions:
      allOf:
      - $ref: '#/components/schemas/EncryptionAlgorithmOptions'
      - description: The encryption algorithm options that are available for a code
          signing job.
      example:
        allowedValues: ""
        defaultValue: ""
    SigningConfiguration_hashAlgorithmOptions:
      allOf:
      - $ref: '#/components/schemas/HashAlgorithmOptions'
      - description: The hash algorithm options that are available for a code signing
          job.
      example:
        allowedValues: ""
        defaultValue: ""
    PutSigningProfileRequest_signingMaterial:
      allOf:
      - $ref: '#/components/schemas/SigningMaterial'
      - description: The AWS Certificate Manager certificate that will be used to
          sign code with the new signing profile.
      example:
        certificateArn: ""
    PutSigningProfileRequest_signatureValidityPeriod:
      allOf:
      - $ref: '#/components/schemas/SignatureValidityPeriod'
      - description: "The default validity period override for any signature generated\
          \ using this signing profile. If unspecified, the default is 135 months."
      example:
        type: ""
        value: ""
    PutSigningProfileRequest_overrides:
      allOf:
      - $ref: '#/components/schemas/SigningPlatformOverrides'
      - description: A subfield of <code>platform</code>. This specifies any different
          configuration options that you want to apply to the chosen platform (such
          as a different <code>hash-algorithm</code> or <code>signing-algorithm</code>).
      example:
        signingImageFormat: ""
        signingConfiguration:
          encryptionAlgorithm: ""
          hashAlgorithm: ""
    SigningJob_source:
      allOf:
      - $ref: '#/components/schemas/Source'
      - description: A <code>Source</code> that contains information about a signing
          job's code image source.
    SigningJob_signedObject:
      allOf:
      - $ref: '#/components/schemas/SignedObject'
      - description: A <code>SignedObject</code> structure that contains information
          about a signing job's signed code image.
    SigningJob_signingMaterial:
      allOf:
      - $ref: '#/components/schemas/SigningMaterial'
      - description: A <code>SigningMaterial</code> object that contains the Amazon
          Resource Name (ARN) of the certificate used for the signing job.
    SigningPlatform_signingConfiguration:
      allOf:
      - $ref: '#/components/schemas/SigningConfiguration'
      - description: The configuration of a code signing platform. This includes the
          designated hash algorithm and encryption algorithm of a signing platform.
    SigningProfile_signingMaterial:
      allOf:
      - $ref: '#/components/schemas/SigningMaterial'
      - description: The ACM certificate that is available for use by a signing profile.
    SigningProfile_signatureValidityPeriod:
      allOf:
      - $ref: '#/components/schemas/SignatureValidityPeriod'
      - description: The validity period for a signing job created using this signing
          profile.
    StartSigningJobRequest_source:
      allOf:
      - $ref: '#/components/schemas/Source'
      - description: The S3 bucket that contains the object to sign or a BLOB that
          contains your raw code.
      example:
        s3:
          bucketName: ""
          version: ""
          key: ""
    StartSigningJobRequest_destination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - description: The S3 bucket in which to save your signed object. The destination
          contains the name of your bucket and an optional prefix.
      example:
        s3:
          bucketName: ""
          prefix: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

