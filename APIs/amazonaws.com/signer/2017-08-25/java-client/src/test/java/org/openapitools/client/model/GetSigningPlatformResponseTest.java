/*
 * AWS Signer
 * <p>AWS Signer is a fully managed code signing service to help you ensure the trust and integrity of your code. </p> <p>AWS Signer supports the following applications:</p> <p>With code signing for AWS Lambda, you can sign <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/\">AWS Lambda</a> deployment packages. Integrated support is provided for <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/gsg/\">Amazon S3</a>, <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/\">Amazon CloudWatch</a>, and <a href=\"http://docs.aws.amazon.com/awscloudtrail/latest/userguide/\">AWS CloudTrail</a>. In order to sign code, you create a signing profile and then use Signer to sign Lambda zip files in S3. </p> <p>With code signing for IoT, you can sign code for any IoT device that is supported by AWS. IoT code signing is available for <a href=\"http://docs.aws.amazon.com/freertos/latest/userguide/\">Amazon FreeRTOS</a> and <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/\">AWS IoT Device Management</a>, and is integrated with <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/\">AWS Certificate Manager (ACM)</a>. In order to sign code, you import a third-party code signing certificate using ACM, and use that to sign updates in Amazon FreeRTOS and AWS IoT Device Management. </p> <p>With code signing for containers â€¦(TBD)</p> <p>For more information about AWS Signer, see the <a href=\"https://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html\">AWS Signer Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Category;
import org.openapitools.client.model.GetSigningPlatformResponseSigningConfiguration;
import org.openapitools.client.model.GetSigningPlatformResponseSigningImageFormat;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetSigningPlatformResponse
 */
public class GetSigningPlatformResponseTest {
    private final GetSigningPlatformResponse model = new GetSigningPlatformResponse();

    /**
     * Model tests for GetSigningPlatformResponse
     */
    @Test
    public void testGetSigningPlatformResponse() {
        // TODO: test GetSigningPlatformResponse
    }

    /**
     * Test the property 'platformId'
     */
    @Test
    public void platformIdTest() {
        // TODO: test platformId
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'partner'
     */
    @Test
    public void partnerTest() {
        // TODO: test partner
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'signingConfiguration'
     */
    @Test
    public void signingConfigurationTest() {
        // TODO: test signingConfiguration
    }

    /**
     * Test the property 'signingImageFormat'
     */
    @Test
    public void signingImageFormatTest() {
        // TODO: test signingImageFormat
    }

    /**
     * Test the property 'maxSizeInMB'
     */
    @Test
    public void maxSizeInMBTest() {
        // TODO: test maxSizeInMB
    }

    /**
     * Test the property 'revocationSupported'
     */
    @Test
    public void revocationSupportedTest() {
        // TODO: test revocationSupported
    }

}
