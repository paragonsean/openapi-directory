/**
 * AWS Signer
 * <p>AWS Signer is a fully managed code signing service to help you ensure the trust and integrity of your code. </p> <p>AWS Signer supports the following applications:</p> <p>With code signing for AWS Lambda, you can sign <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/\">AWS Lambda</a> deployment packages. Integrated support is provided for <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/gsg/\">Amazon S3</a>, <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/\">Amazon CloudWatch</a>, and <a href=\"http://docs.aws.amazon.com/awscloudtrail/latest/userguide/\">AWS CloudTrail</a>. In order to sign code, you create a signing profile and then use Signer to sign Lambda zip files in S3. </p> <p>With code signing for IoT, you can sign code for any IoT device that is supported by AWS. IoT code signing is available for <a href=\"http://docs.aws.amazon.com/freertos/latest/userguide/\">Amazon FreeRTOS</a> and <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/\">AWS IoT Device Management</a>, and is integrated with <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/\">AWS Certificate Manager (ACM)</a>. In order to sign code, you import a third-party code signing certificate using ACM, and use that to sign updates in Amazon FreeRTOS and AWS IoT Device Management. </p> <p>With code signing for containers â€¦(TBD)</p> <p>For more information about AWS Signer, see the <a href=\"https://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html\">AWS Signer Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHashAlgorithm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHashAlgorithm::OAIHashAlgorithm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHashAlgorithm::OAIHashAlgorithm() {
    this->initializeModel();
}

OAIHashAlgorithm::~OAIHashAlgorithm() {}

void OAIHashAlgorithm::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIHashAlgorithm::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIHashAlgorithm::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SHA1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHashAlgorithm::SHA1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHA256", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHashAlgorithm::SHA256;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIHashAlgorithm::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIHashAlgorithm::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIHashAlgorithm::SHA1:
            val = "SHA1";
            break;
        case eOAIHashAlgorithm::SHA256:
            val = "SHA256";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIHashAlgorithm::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIHashAlgorithm::eOAIHashAlgorithm OAIHashAlgorithm::getValue() const {
    return m_value;
}

void OAIHashAlgorithm::setValue(const OAIHashAlgorithm::eOAIHashAlgorithm& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIHashAlgorithm::isSet() const {
    
    return m_value_isSet;
}

bool OAIHashAlgorithm::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
