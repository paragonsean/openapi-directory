/**
 * AWS Signer
 * <p>AWS Signer is a fully managed code signing service to help you ensure the trust and integrity of your code. </p> <p>AWS Signer supports the following applications:</p> <p>With code signing for AWS Lambda, you can sign <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/\">AWS Lambda</a> deployment packages. Integrated support is provided for <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/gsg/\">Amazon S3</a>, <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/\">Amazon CloudWatch</a>, and <a href=\"http://docs.aws.amazon.com/awscloudtrail/latest/userguide/\">AWS CloudTrail</a>. In order to sign code, you create a signing profile and then use Signer to sign Lambda zip files in S3. </p> <p>With code signing for IoT, you can sign code for any IoT device that is supported by AWS. IoT code signing is available for <a href=\"http://docs.aws.amazon.com/freertos/latest/userguide/\">Amazon FreeRTOS</a> and <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/\">AWS IoT Device Management</a>, and is integrated with <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/\">AWS Certificate Manager (ACM)</a>. In order to sign code, you import a third-party code signing certificate using ACM, and use that to sign updates in Amazon FreeRTOS and AWS IoT Device Management. </p> <p>With code signing for containers â€¦(TBD)</p> <p>For more information about AWS Signer, see the <a href=\"https://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html\">AWS Signer Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISigningJob.h
 *
 * Contains information about a signing job.
 */

#ifndef OAISigningJob_H
#define OAISigningJob_H

#include <QJsonObject>

#include "OAISigningJob_signedObject.h"
#include "OAISigningJob_signingMaterial.h"
#include "OAISigningJob_source.h"
#include "OAISigningStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISigningJob_source;
class OAISigningJob_signedObject;
class OAISigningJob_signingMaterial;

class OAISigningJob : public OAIObject {
public:
    OAISigningJob();
    OAISigningJob(QString json);
    ~OAISigningJob() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getJobId() const;
    void setJobId(const QString &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    OAISigningJob_source getSource() const;
    void setSource(const OAISigningJob_source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAISigningJob_signedObject getSignedObject() const;
    void setSignedObject(const OAISigningJob_signedObject &signed_object);
    bool is_signed_object_Set() const;
    bool is_signed_object_Valid() const;

    OAISigningJob_signingMaterial getSigningMaterial() const;
    void setSigningMaterial(const OAISigningJob_signingMaterial &signing_material);
    bool is_signing_material_Set() const;
    bool is_signing_material_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAISigningStatus getStatus() const;
    void setStatus(const OAISigningStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    bool getIsRevoked() const;
    void setIsRevoked(const bool &is_revoked);
    bool is_is_revoked_Set() const;
    bool is_is_revoked_Valid() const;

    QString getProfileName() const;
    void setProfileName(const QString &profile_name);
    bool is_profile_name_Set() const;
    bool is_profile_name_Valid() const;

    QString getProfileVersion() const;
    void setProfileVersion(const QString &profile_version);
    bool is_profile_version_Set() const;
    bool is_profile_version_Valid() const;

    QString getPlatformId() const;
    void setPlatformId(const QString &platform_id);
    bool is_platform_id_Set() const;
    bool is_platform_id_Valid() const;

    QString getPlatformDisplayName() const;
    void setPlatformDisplayName(const QString &platform_display_name);
    bool is_platform_display_name_Set() const;
    bool is_platform_display_name_Valid() const;

    QDateTime getSignatureExpiresAt() const;
    void setSignatureExpiresAt(const QDateTime &signature_expires_at);
    bool is_signature_expires_at_Set() const;
    bool is_signature_expires_at_Valid() const;

    QString getJobOwner() const;
    void setJobOwner(const QString &job_owner);
    bool is_job_owner_Set() const;
    bool is_job_owner_Valid() const;

    QString getJobInvoker() const;
    void setJobInvoker(const QString &job_invoker);
    bool is_job_invoker_Set() const;
    bool is_job_invoker_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    OAISigningJob_source m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAISigningJob_signedObject m_signed_object;
    bool m_signed_object_isSet;
    bool m_signed_object_isValid;

    OAISigningJob_signingMaterial m_signing_material;
    bool m_signing_material_isSet;
    bool m_signing_material_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAISigningStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    bool m_is_revoked;
    bool m_is_revoked_isSet;
    bool m_is_revoked_isValid;

    QString m_profile_name;
    bool m_profile_name_isSet;
    bool m_profile_name_isValid;

    QString m_profile_version;
    bool m_profile_version_isSet;
    bool m_profile_version_isValid;

    QString m_platform_id;
    bool m_platform_id_isSet;
    bool m_platform_id_isValid;

    QString m_platform_display_name;
    bool m_platform_display_name_isSet;
    bool m_platform_display_name_isValid;

    QDateTime m_signature_expires_at;
    bool m_signature_expires_at_isSet;
    bool m_signature_expires_at_isValid;

    QString m_job_owner;
    bool m_job_owner_isSet;
    bool m_job_owner_isValid;

    QString m_job_invoker;
    bool m_job_invoker_isSet;
    bool m_job_invoker_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISigningJob)

#endif // OAISigningJob_H
