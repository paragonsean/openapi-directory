# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.signing_configuration_encryption_algorithm_options import SigningConfigurationEncryptionAlgorithmOptions
from openapi_server.models.signing_configuration_hash_algorithm_options import SigningConfigurationHashAlgorithmOptions
from openapi_server import util


class GetSigningPlatformResponseSigningConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encryption_algorithm_options: SigningConfigurationEncryptionAlgorithmOptions=None, hash_algorithm_options: SigningConfigurationHashAlgorithmOptions=None):
        """GetSigningPlatformResponseSigningConfiguration - a model defined in OpenAPI

        :param encryption_algorithm_options: The encryption_algorithm_options of this GetSigningPlatformResponseSigningConfiguration.
        :param hash_algorithm_options: The hash_algorithm_options of this GetSigningPlatformResponseSigningConfiguration.
        """
        self.openapi_types = {
            'encryption_algorithm_options': SigningConfigurationEncryptionAlgorithmOptions,
            'hash_algorithm_options': SigningConfigurationHashAlgorithmOptions
        }

        self.attribute_map = {
            'encryption_algorithm_options': 'encryptionAlgorithmOptions',
            'hash_algorithm_options': 'hashAlgorithmOptions'
        }

        self._encryption_algorithm_options = encryption_algorithm_options
        self._hash_algorithm_options = hash_algorithm_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSigningPlatformResponseSigningConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSigningPlatformResponse_signingConfiguration of this GetSigningPlatformResponseSigningConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encryption_algorithm_options(self):
        """Gets the encryption_algorithm_options of this GetSigningPlatformResponseSigningConfiguration.


        :return: The encryption_algorithm_options of this GetSigningPlatformResponseSigningConfiguration.
        :rtype: SigningConfigurationEncryptionAlgorithmOptions
        """
        return self._encryption_algorithm_options

    @encryption_algorithm_options.setter
    def encryption_algorithm_options(self, encryption_algorithm_options):
        """Sets the encryption_algorithm_options of this GetSigningPlatformResponseSigningConfiguration.


        :param encryption_algorithm_options: The encryption_algorithm_options of this GetSigningPlatformResponseSigningConfiguration.
        :type encryption_algorithm_options: SigningConfigurationEncryptionAlgorithmOptions
        """
        if encryption_algorithm_options is None:
            raise ValueError("Invalid value for `encryption_algorithm_options`, must not be `None`")

        self._encryption_algorithm_options = encryption_algorithm_options

    @property
    def hash_algorithm_options(self):
        """Gets the hash_algorithm_options of this GetSigningPlatformResponseSigningConfiguration.


        :return: The hash_algorithm_options of this GetSigningPlatformResponseSigningConfiguration.
        :rtype: SigningConfigurationHashAlgorithmOptions
        """
        return self._hash_algorithm_options

    @hash_algorithm_options.setter
    def hash_algorithm_options(self, hash_algorithm_options):
        """Sets the hash_algorithm_options of this GetSigningPlatformResponseSigningConfiguration.


        :param hash_algorithm_options: The hash_algorithm_options of this GetSigningPlatformResponseSigningConfiguration.
        :type hash_algorithm_options: SigningConfigurationHashAlgorithmOptions
        """
        if hash_algorithm_options is None:
            raise ValueError("Invalid value for `hash_algorithm_options`, must not be `None`")

        self._hash_algorithm_options = hash_algorithm_options
