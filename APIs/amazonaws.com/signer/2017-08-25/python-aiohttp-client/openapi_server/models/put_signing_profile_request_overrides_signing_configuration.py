# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.encryption_algorithm import EncryptionAlgorithm
from openapi_server.models.hash_algorithm import HashAlgorithm
from openapi_server import util


class PutSigningProfileRequestOverridesSigningConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encryption_algorithm: EncryptionAlgorithm=None, hash_algorithm: HashAlgorithm=None):
        """PutSigningProfileRequestOverridesSigningConfiguration - a model defined in OpenAPI

        :param encryption_algorithm: The encryption_algorithm of this PutSigningProfileRequestOverridesSigningConfiguration.
        :param hash_algorithm: The hash_algorithm of this PutSigningProfileRequestOverridesSigningConfiguration.
        """
        self.openapi_types = {
            'encryption_algorithm': EncryptionAlgorithm,
            'hash_algorithm': HashAlgorithm
        }

        self.attribute_map = {
            'encryption_algorithm': 'encryptionAlgorithm',
            'hash_algorithm': 'hashAlgorithm'
        }

        self._encryption_algorithm = encryption_algorithm
        self._hash_algorithm = hash_algorithm

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutSigningProfileRequestOverridesSigningConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutSigningProfile_request_overrides_signingConfiguration of this PutSigningProfileRequestOverridesSigningConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encryption_algorithm(self):
        """Gets the encryption_algorithm of this PutSigningProfileRequestOverridesSigningConfiguration.


        :return: The encryption_algorithm of this PutSigningProfileRequestOverridesSigningConfiguration.
        :rtype: EncryptionAlgorithm
        """
        return self._encryption_algorithm

    @encryption_algorithm.setter
    def encryption_algorithm(self, encryption_algorithm):
        """Sets the encryption_algorithm of this PutSigningProfileRequestOverridesSigningConfiguration.


        :param encryption_algorithm: The encryption_algorithm of this PutSigningProfileRequestOverridesSigningConfiguration.
        :type encryption_algorithm: EncryptionAlgorithm
        """

        self._encryption_algorithm = encryption_algorithm

    @property
    def hash_algorithm(self):
        """Gets the hash_algorithm of this PutSigningProfileRequestOverridesSigningConfiguration.


        :return: The hash_algorithm of this PutSigningProfileRequestOverridesSigningConfiguration.
        :rtype: HashAlgorithm
        """
        return self._hash_algorithm

    @hash_algorithm.setter
    def hash_algorithm(self, hash_algorithm):
        """Sets the hash_algorithm of this PutSigningProfileRequestOverridesSigningConfiguration.


        :param hash_algorithm: The hash_algorithm of this PutSigningProfileRequestOverridesSigningConfiguration.
        :type hash_algorithm: HashAlgorithm
        """

        self._hash_algorithm = hash_algorithm
