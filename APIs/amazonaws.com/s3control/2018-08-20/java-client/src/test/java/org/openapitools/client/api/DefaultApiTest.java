/*
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateAccessPointForObjectLambdaRequest;
import org.openapitools.client.model.CreateAccessPointForObjectLambdaResult;
import org.openapitools.client.model.CreateAccessPointRequest;
import org.openapitools.client.model.CreateAccessPointResult;
import org.openapitools.client.model.CreateBucketRequest;
import org.openapitools.client.model.CreateBucketResult;
import org.openapitools.client.model.CreateJobRequest;
import org.openapitools.client.model.CreateJobResult;
import org.openapitools.client.model.CreateMultiRegionAccessPointRequest;
import org.openapitools.client.model.CreateMultiRegionAccessPointResult;
import org.openapitools.client.model.DeleteMultiRegionAccessPointRequest;
import org.openapitools.client.model.DeleteMultiRegionAccessPointResult;
import org.openapitools.client.model.DescribeJobResult;
import org.openapitools.client.model.DescribeMultiRegionAccessPointOperationResult;
import org.openapitools.client.model.GetAccessPointConfigurationForObjectLambdaResult;
import org.openapitools.client.model.GetAccessPointForObjectLambdaResult;
import org.openapitools.client.model.GetAccessPointPolicyForObjectLambdaResult;
import org.openapitools.client.model.GetAccessPointPolicyResult;
import org.openapitools.client.model.GetAccessPointPolicyStatusForObjectLambdaResult;
import org.openapitools.client.model.GetAccessPointPolicyStatusResult;
import org.openapitools.client.model.GetAccessPointResult;
import org.openapitools.client.model.GetBucketLifecycleConfigurationResult;
import org.openapitools.client.model.GetBucketPolicyResult;
import org.openapitools.client.model.GetBucketReplicationResult;
import org.openapitools.client.model.GetBucketResult;
import org.openapitools.client.model.GetBucketTaggingResult;
import org.openapitools.client.model.GetBucketVersioningResult;
import org.openapitools.client.model.GetJobTaggingResult;
import org.openapitools.client.model.GetMultiRegionAccessPointPolicyResult;
import org.openapitools.client.model.GetMultiRegionAccessPointPolicyStatusResult;
import org.openapitools.client.model.GetMultiRegionAccessPointResult;
import org.openapitools.client.model.GetMultiRegionAccessPointRoutesResult;
import org.openapitools.client.model.GetPublicAccessBlockOutput;
import org.openapitools.client.model.GetStorageLensConfigurationResult;
import org.openapitools.client.model.GetStorageLensConfigurationTaggingResult;
import org.openapitools.client.model.JobStatus;
import org.openapitools.client.model.ListAccessPointsForObjectLambdaResult;
import org.openapitools.client.model.ListAccessPointsResult;
import org.openapitools.client.model.ListJobsResult;
import org.openapitools.client.model.ListMultiRegionAccessPointsResult;
import org.openapitools.client.model.ListRegionalBucketsResult;
import org.openapitools.client.model.ListStorageLensConfigurationsResult;
import org.openapitools.client.model.PutAccessPointPolicyForObjectLambdaRequest;
import org.openapitools.client.model.PutAccessPointPolicyRequest;
import org.openapitools.client.model.PutBucketLifecycleConfigurationRequest;
import org.openapitools.client.model.PutBucketPolicyRequest;
import org.openapitools.client.model.PutBucketReplicationRequest;
import org.openapitools.client.model.PutBucketTaggingRequest;
import org.openapitools.client.model.PutBucketVersioningRequest;
import org.openapitools.client.model.PutJobTaggingRequest;
import org.openapitools.client.model.PutMultiRegionAccessPointPolicyRequest;
import org.openapitools.client.model.PutMultiRegionAccessPointPolicyResult;
import org.openapitools.client.model.PutPublicAccessBlockRequest;
import org.openapitools.client.model.PutStorageLensConfigurationRequest;
import org.openapitools.client.model.PutStorageLensConfigurationTaggingRequest;
import org.openapitools.client.model.SubmitMultiRegionAccessPointRoutesRequest;
import org.openapitools.client.model.UpdateJobPriorityResult;
import org.openapitools.client.model.UpdateJobStatusResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * &lt;p&gt;Creates an access point and associates it with the specified bucket. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html\&quot;&gt;Managing Data Access with Amazon S3 Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p/&gt; &lt;note&gt; &lt;p&gt;S3 on Outposts only supports VPC-style access points. &lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt; Accessing Amazon S3 on Outposts using virtual private cloud (VPC) only access points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html#API_control_CreateAccessPoint_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;The following actions are related to &lt;code&gt;CreateAccessPoint&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html\&quot;&gt;GetAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html\&quot;&gt;DeleteAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html\&quot;&gt;ListAccessPoints&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAccessPointTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        CreateAccessPointRequest createAccessPointRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAccessPointResult response = api.createAccessPoint(xAmzAccountId, name, createAccessPointRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an Object Lambda Access Point. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/transforming-objects.html\&quot;&gt;Transforming objects with Object Lambda Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;CreateAccessPointForObjectLambda&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html\&quot;&gt;DeleteAccessPointForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html\&quot;&gt;GetAccessPointForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html\&quot;&gt;ListAccessPointsForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAccessPointForObjectLambdaTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        CreateAccessPointForObjectLambdaRequest createAccessPointForObjectLambdaRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAccessPointForObjectLambdaResult response = api.createAccessPointForObjectLambda(xAmzAccountId, name, createAccessPointForObjectLambdaRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action creates an Amazon S3 on Outposts bucket. To create an S3 bucket, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\&quot;&gt;Create Bucket&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Creates a new Outposts bucket. By creating the bucket, you become the bucket owner. To create an Outposts bucket, you must have S3 on Outposts. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; in &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;Not every string is an acceptable bucket name. For information on bucket naming restrictions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/BucketRestrictions.html#bucketnamingrules\&quot;&gt;Working with Amazon S3 Buckets&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;S3 on Outposts buckets support:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Tags&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;LifecycleConfigurations for deleting expired objects&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For a complete list of restrictions and Amazon S3 feature limitations on S3 on Outposts, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OnOutpostsRestrictionsLimitations.html\&quot;&gt; Amazon S3 on Outposts Restrictions and Limitations&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and &lt;code&gt;x-amz-outpost-id&lt;/code&gt; in your API request, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html#API_control_CreateBucket_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;CreateBucket&lt;/code&gt; for Amazon S3 on Outposts:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\&quot;&gt;PutObject&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html\&quot;&gt;GetBucket&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html\&quot;&gt;DeleteBucket&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html\&quot;&gt;CreateAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html\&quot;&gt;PutAccessPointPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBucketTest() throws ApiException {
        String name = null;
        CreateBucketRequest createBucketRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String xAmzAcl = null;
        String xAmzGrantFullControl = null;
        String xAmzGrantRead = null;
        String xAmzGrantReadAcp = null;
        String xAmzGrantWrite = null;
        String xAmzGrantWriteAcp = null;
        Boolean xAmzBucketObjectLockEnabled = null;
        String xAmzOutpostId = null;
        CreateBucketResult response = api.createBucket(name, createBucketRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, xAmzAcl, xAmzGrantFullControl, xAmzGrantRead, xAmzGrantReadAcp, xAmzGrantWrite, xAmzGrantWriteAcp, xAmzBucketObjectLockEnabled, xAmzOutpostId);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;You can use S3 Batch Operations to perform large-scale batch actions on Amazon S3 objects. Batch Operations can run a single action on lists of Amazon S3 objects that you specify. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html\&quot;&gt;S3 Batch Operations&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;This action creates a S3 Batch Operations job.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html\&quot;&gt;DescribeJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html\&quot;&gt;ListJobs&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html\&quot;&gt;UpdateJobPriority&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html\&quot;&gt;UpdateJobStatus&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_JobOperation.html\&quot;&gt;JobOperation&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createJobTest() throws ApiException {
        String xAmzAccountId = null;
        CreateJobRequest createJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateJobResult response = api.createJob(xAmzAccountId, createJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a Multi-Region Access Point and associates it with the specified buckets. For more information about creating Multi-Region Access Points, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html\&quot;&gt;Creating Multi-Region Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\&quot;&gt;Managing Multi-Region Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;This request is asynchronous, meaning that you might receive a response before the command has completed. When this request provides a response, it provides a token that you can use to monitor the status of the request with &lt;code&gt;DescribeMultiRegionAccessPointOperation&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;CreateMultiRegionAccessPoint&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html\&quot;&gt;DeleteMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html\&quot;&gt;DescribeMultiRegionAccessPointOperation&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html\&quot;&gt;GetMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html\&quot;&gt;ListMultiRegionAccessPoints&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMultiRegionAccessPointTest() throws ApiException {
        String xAmzAccountId = null;
        CreateMultiRegionAccessPointRequest createMultiRegionAccessPointRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateMultiRegionAccessPointResult response = api.createMultiRegionAccessPoint(xAmzAccountId, createMultiRegionAccessPointRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the specified access point.&lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html#API_control_DeleteAccessPoint_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;DeleteAccessPoint&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html\&quot;&gt;CreateAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html\&quot;&gt;GetAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html\&quot;&gt;ListAccessPoints&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccessPointTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteAccessPoint(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the specified Object Lambda Access Point.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;DeleteAccessPointForObjectLambda&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html\&quot;&gt;CreateAccessPointForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html\&quot;&gt;GetAccessPointForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html\&quot;&gt;ListAccessPointsForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccessPointForObjectLambdaTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteAccessPointForObjectLambda(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the access point policy for the specified access point.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html#API_control_DeleteAccessPointPolicy_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;DeleteAccessPointPolicy&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html\&quot;&gt;PutAccessPointPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html\&quot;&gt;GetAccessPointPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccessPointPolicyTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteAccessPointPolicy(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Removes the resource policy for an Object Lambda Access Point.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;DeleteAccessPointPolicyForObjectLambda&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html\&quot;&gt;GetAccessPointPolicyForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html\&quot;&gt;PutAccessPointPolicyForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccessPointPolicyForObjectLambdaTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteAccessPointPolicyForObjectLambda(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action deletes an Amazon S3 on Outposts bucket. To delete an S3 bucket, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html\&quot;&gt;DeleteBucket&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes the Amazon S3 on Outposts bucket. All objects (including all object versions and delete markers) in the bucket must be deleted before the bucket itself can be deleted. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; in &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html#API_control_DeleteBucket_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;Related Resources&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html\&quot;&gt;CreateBucket&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html\&quot;&gt;GetBucket&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html\&quot;&gt;DeleteObject&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBucketTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteBucket(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action deletes an Amazon S3 on Outposts bucket&#39;s lifecycle configuration. To delete an S3 bucket&#39;s lifecycle configuration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\&quot;&gt;DeleteBucketLifecycle&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes the lifecycle configuration from the specified Outposts bucket. Amazon S3 on Outposts removes all the lifecycle configuration rules in the lifecycle subresource associated with the bucket. Your objects never expire, and Amazon S3 on Outposts no longer automatically deletes any objects on the basis of rules contained in the deleted lifecycle configuration. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; in &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;To use this action, you must have permission to perform the &lt;code&gt;s3-outposts:DeleteLifecycleConfiguration&lt;/code&gt; action. By default, the bucket owner has this permission and the Outposts bucket owner can grant this permission to others.&lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html#API_control_DeleteBucketLifecycleConfiguration_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;For more information about object expiration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#intro-lifecycle-rules-actions\&quot;&gt;Elements to Describe Lifecycle Actions&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html\&quot;&gt;PutBucketLifecycleConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html\&quot;&gt;GetBucketLifecycleConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBucketLifecycleConfigurationTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteBucketLifecycleConfiguration(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action deletes an Amazon S3 on Outposts bucket policy. To delete an S3 bucket policy, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html\&quot;&gt;DeleteBucketPolicy&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;This implementation of the DELETE action uses the policy subresource to delete the policy of a specified Amazon S3 on Outposts bucket. If you are using an identity other than the root user of the Amazon Web Services account that owns the bucket, the calling identity must have the &lt;code&gt;s3-outposts:DeleteBucketPolicy&lt;/code&gt; permissions on the specified Outposts bucket and belong to the bucket owner&#39;s account to use this action. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; in &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If you don&#39;t have &lt;code&gt;DeleteBucketPolicy&lt;/code&gt; permissions, Amazon S3 returns a &lt;code&gt;403 Access Denied&lt;/code&gt; error. If you have the correct permissions, but you&#39;re not using an identity that belongs to the bucket owner&#39;s account, Amazon S3 returns a &lt;code&gt;405 Method Not Allowed&lt;/code&gt; error. &lt;/p&gt; &lt;important&gt; &lt;p&gt;As a security precaution, the root user of the Amazon Web Services account that owns a bucket can always use this action, even if the policy explicitly denies the root user the ability to perform this action.&lt;/p&gt; &lt;/important&gt; &lt;p&gt;For more information about bucket policies, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\&quot;&gt;Using Bucket Policies and User Policies&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html#API_control_DeleteBucketPolicy_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;DeleteBucketPolicy&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html\&quot;&gt;GetBucketPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html\&quot;&gt;PutBucketPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBucketPolicyTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteBucketPolicy(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This operation deletes an Amazon S3 on Outposts bucket&#39;s replication configuration. To delete an S3 bucket&#39;s replication configuration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html\&quot;&gt;DeleteBucketReplication&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes the replication configuration from the specified S3 on Outposts bucket.&lt;/p&gt; &lt;p&gt;To use this operation, you must have permissions to perform the &lt;code&gt;s3-outposts:PutReplicationConfiguration&lt;/code&gt; action. The Outposts bucket owner has this permission by default and can grant it to others. For more information about permissions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsIAM.html\&quot;&gt;Setting up IAM with S3 on Outposts&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsBucketPolicy.html\&quot;&gt;Managing access to S3 on Outposts buckets&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;It can take a while to propagate &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;DELETE&lt;/code&gt; requests for a replication configuration to all S3 on Outposts systems. Therefore, the replication configuration that&#39;s returned by a &lt;code&gt;GET&lt;/code&gt; request soon after a &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;DELETE&lt;/code&gt; request might return a more recent result than what&#39;s on the Outpost. If an Outpost is offline, the delay in updating the replication configuration on that Outpost can be significant.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketReplication.html#API_control_DeleteBucketReplication_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;For information about S3 replication on Outposts configuration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsReplication.html\&quot;&gt;Replicating objects for S3 on Outposts&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The following operations are related to &lt;code&gt;DeleteBucketReplication&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketReplication.html\&quot;&gt;PutBucketReplication&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketReplication.html\&quot;&gt;GetBucketReplication&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBucketReplicationTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteBucketReplication(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action deletes an Amazon S3 on Outposts bucket&#39;s tags. To delete an S3 bucket tags, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html\&quot;&gt;DeleteBucketTagging&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes the tags from the Outposts bucket. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; in &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;To use this action, you must have permission to perform the &lt;code&gt;PutBucketTagging&lt;/code&gt; action. By default, the bucket owner has this permission and can grant this permission to others. &lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html#API_control_DeleteBucketTagging_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;DeleteBucketTagging&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html\&quot;&gt;GetBucketTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html\&quot;&gt;PutBucketTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBucketTaggingTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteBucketTagging(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Removes the entire tag set from the specified S3 Batch Operations job. To use the &lt;code&gt;DeleteJobTagging&lt;/code&gt; operation, you must have permission to perform the &lt;code&gt;s3:DeleteJobTagging&lt;/code&gt; action. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags\&quot;&gt;Controlling access and labeling jobs using tags&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\&quot;&gt;CreateJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html\&quot;&gt;GetJobTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html\&quot;&gt;PutJobTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteJobTaggingTest() throws ApiException {
        String xAmzAccountId = null;
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteJobTagging(xAmzAccountId, id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes a Multi-Region Access Point. This action does not delete the buckets associated with the Multi-Region Access Point, only the Multi-Region Access Point itself.&lt;/p&gt; &lt;p&gt;This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\&quot;&gt;Managing Multi-Region Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;This request is asynchronous, meaning that you might receive a response before the command has completed. When this request provides a response, it provides a token that you can use to monitor the status of the request with &lt;code&gt;DescribeMultiRegionAccessPointOperation&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;DeleteMultiRegionAccessPoint&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html\&quot;&gt;CreateMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html\&quot;&gt;DescribeMultiRegionAccessPointOperation&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html\&quot;&gt;GetMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html\&quot;&gt;ListMultiRegionAccessPoints&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMultiRegionAccessPointTest() throws ApiException {
        String xAmzAccountId = null;
        DeleteMultiRegionAccessPointRequest deleteMultiRegionAccessPointRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteMultiRegionAccessPointResult response = api.deleteMultiRegionAccessPoint(xAmzAccountId, deleteMultiRegionAccessPointRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Removes the &lt;code&gt;PublicAccessBlock&lt;/code&gt; configuration for an Amazon Web Services account. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\&quot;&gt; Using Amazon S3 block public access&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html\&quot;&gt;GetPublicAccessBlock&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html\&quot;&gt;PutPublicAccessBlock&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePublicAccessBlockTest() throws ApiException {
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deletePublicAccessBlock(xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\&quot;&gt;Assessing your storage activity and usage with Amazon S3 Storage Lens &lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To use this action, you must have permission to perform the &lt;code&gt;s3:DeleteStorageLensConfiguration&lt;/code&gt; action. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\&quot;&gt;Setting permissions to use Amazon S3 Storage Lens&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteStorageLensConfigurationTest() throws ApiException {
        String storagelensid = null;
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteStorageLensConfiguration(storagelensid, xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the Amazon S3 Storage Lens configuration tags. For more information about S3 Storage Lens, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\&quot;&gt;Assessing your storage activity and usage with Amazon S3 Storage Lens &lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To use this action, you must have permission to perform the &lt;code&gt;s3:DeleteStorageLensConfigurationTagging&lt;/code&gt; action. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\&quot;&gt;Setting permissions to use Amazon S3 Storage Lens&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteStorageLensConfigurationTaggingTest() throws ApiException {
        String storagelensid = null;
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteStorageLensConfigurationTagging(storagelensid, xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Retrieves the configuration parameters and status for a Batch Operations job. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html\&quot;&gt;S3 Batch Operations&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\&quot;&gt;CreateJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html\&quot;&gt;ListJobs&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html\&quot;&gt;UpdateJobPriority&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html\&quot;&gt;UpdateJobStatus&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeJobTest() throws ApiException {
        String xAmzAccountId = null;
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeJobResult response = api.describeJob(xAmzAccountId, id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Retrieves the status of an asynchronous request to manage a Multi-Region Access Point. For more information about managing Multi-Region Access Points and how asynchronous requests work, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\&quot;&gt;Managing Multi-Region Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetMultiRegionAccessPoint&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html\&quot;&gt;CreateMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html\&quot;&gt;DeleteMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html\&quot;&gt;GetMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html\&quot;&gt;ListMultiRegionAccessPoints&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeMultiRegionAccessPointOperationTest() throws ApiException {
        String xAmzAccountId = null;
        String requestToken = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeMultiRegionAccessPointOperationResult response = api.describeMultiRegionAccessPointOperation(xAmzAccountId, requestToken, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns configuration information about the specified access point.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetAccessPoint&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html\&quot;&gt;CreateAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html\&quot;&gt;DeleteAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html\&quot;&gt;ListAccessPoints&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccessPointTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAccessPointResult response = api.getAccessPoint(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns configuration for an Object Lambda Access Point.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetAccessPointConfigurationForObjectLambda&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointConfigurationForObjectLambda.html\&quot;&gt;PutAccessPointConfigurationForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccessPointConfigurationForObjectLambdaTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAccessPointConfigurationForObjectLambdaResult response = api.getAccessPointConfigurationForObjectLambda(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns configuration information about the specified Object Lambda Access Point&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetAccessPointForObjectLambda&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html\&quot;&gt;CreateAccessPointForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html\&quot;&gt;DeleteAccessPointForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html\&quot;&gt;ListAccessPointsForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccessPointForObjectLambdaTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAccessPointForObjectLambdaResult response = api.getAccessPointForObjectLambda(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the access point policy associated with the specified access point.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetAccessPointPolicy&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html\&quot;&gt;PutAccessPointPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html\&quot;&gt;DeleteAccessPointPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccessPointPolicyTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAccessPointPolicyResult response = api.getAccessPointPolicy(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the resource policy for an Object Lambda Access Point.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetAccessPointPolicyForObjectLambda&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html\&quot;&gt;DeleteAccessPointPolicyForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html\&quot;&gt;PutAccessPointPolicyForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccessPointPolicyForObjectLambdaTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAccessPointPolicyForObjectLambdaResult response = api.getAccessPointPolicyForObjectLambda(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Indicates whether the specified access point currently has a policy that allows public access. For more information about public access through access points, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html\&quot;&gt;Managing Data Access with Amazon S3 access points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccessPointPolicyStatusTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAccessPointPolicyStatusResult response = api.getAccessPointPolicyStatus(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the status of the resource policy associated with an Object Lambda Access Point.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccessPointPolicyStatusForObjectLambdaTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAccessPointPolicyStatusForObjectLambdaResult response = api.getAccessPointPolicyStatusForObjectLambda(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Gets an Amazon S3 on Outposts bucket. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt; Using Amazon S3 on Outposts&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If you are using an identity other than the root user of the Amazon Web Services account that owns the Outposts bucket, the calling identity must have the &lt;code&gt;s3-outposts:GetBucket&lt;/code&gt; permissions on the specified Outposts bucket and belong to the Outposts bucket owner&#39;s account in order to use this action. Only users from Outposts bucket owner account with the right permissions can perform actions on an Outposts bucket. &lt;/p&gt; &lt;p&gt; If you don&#39;t have &lt;code&gt;s3-outposts:GetBucket&lt;/code&gt; permissions or you&#39;re not using an identity that belongs to the bucket owner&#39;s account, Amazon S3 returns a &lt;code&gt;403 Access Denied&lt;/code&gt; error.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetBucket&lt;/code&gt; for Amazon S3 on Outposts:&lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html#API_control_GetBucket_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\&quot;&gt;PutObject&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html\&quot;&gt;CreateBucket&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html\&quot;&gt;DeleteBucket&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBucketTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetBucketResult response = api.getBucket(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action gets an Amazon S3 on Outposts bucket&#39;s lifecycle configuration. To get an S3 bucket&#39;s lifecycle configuration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html\&quot;&gt;GetBucketLifecycleConfiguration&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Returns the lifecycle configuration information set on the Outposts bucket. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; and for information about lifecycle configuration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\&quot;&gt; Object Lifecycle Management&lt;/a&gt; in &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;To use this action, you must have permission to perform the &lt;code&gt;s3-outposts:GetLifecycleConfiguration&lt;/code&gt; action. The Outposts bucket owner has this permission, by default. The bucket owner can grant this permission to others. For more information about permissions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\&quot;&gt;Permissions Related to Bucket Subresource Operations&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html\&quot;&gt;Managing Access Permissions to Your Amazon S3 Resources&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html#API_control_GetBucketLifecycleConfiguration_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt; &lt;code&gt;GetBucketLifecycleConfiguration&lt;/code&gt; has the following special error:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Error code: &lt;code&gt;NoSuchLifecycleConfiguration&lt;/code&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Description: The lifecycle configuration does not exist.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;HTTP Status Code: 404 Not Found&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;SOAP Fault Code Prefix: Client&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetBucketLifecycleConfiguration&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html\&quot;&gt;PutBucketLifecycleConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html\&quot;&gt;DeleteBucketLifecycleConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBucketLifecycleConfigurationTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetBucketLifecycleConfigurationResult response = api.getBucketLifecycleConfiguration(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action gets a bucket policy for an Amazon S3 on Outposts bucket. To get a policy for an S3 bucket, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicy.html\&quot;&gt;GetBucketPolicy&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Returns the policy of a specified Outposts bucket. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If you are using an identity other than the root user of the Amazon Web Services account that owns the bucket, the calling identity must have the &lt;code&gt;GetBucketPolicy&lt;/code&gt; permissions on the specified bucket and belong to the bucket owner&#39;s account in order to use this action.&lt;/p&gt; &lt;p&gt;Only users from Outposts bucket owner account with the right permissions can perform actions on an Outposts bucket. If you don&#39;t have &lt;code&gt;s3-outposts:GetBucketPolicy&lt;/code&gt; permissions or you&#39;re not using an identity that belongs to the bucket owner&#39;s account, Amazon S3 returns a &lt;code&gt;403 Access Denied&lt;/code&gt; error.&lt;/p&gt; &lt;important&gt; &lt;p&gt;As a security precaution, the root user of the Amazon Web Services account that owns a bucket can always use this action, even if the policy explicitly denies the root user the ability to perform this action.&lt;/p&gt; &lt;/important&gt; &lt;p&gt;For more information about bucket policies, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\&quot;&gt;Using Bucket Policies and User Policies&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html#API_control_GetBucketPolicy_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetBucketPolicy&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\&quot;&gt;GetObject&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html\&quot;&gt;PutBucketPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html\&quot;&gt;DeleteBucketPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBucketPolicyTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetBucketPolicyResult response = api.getBucketPolicy(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This operation gets an Amazon S3 on Outposts bucket&#39;s replication configuration. To get an S3 bucket&#39;s replication configuration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html\&quot;&gt;GetBucketReplication&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Returns the replication configuration of an S3 on Outposts bucket. For more information about S3 on Outposts, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;. For information about S3 replication on Outposts configuration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsReplication.html\&quot;&gt;Replicating objects for S3 on Outposts&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;It can take a while to propagate &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;DELETE&lt;/code&gt; requests for a replication configuration to all S3 on Outposts systems. Therefore, the replication configuration that&#39;s returned by a &lt;code&gt;GET&lt;/code&gt; request soon after a &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;DELETE&lt;/code&gt; request might return a more recent result than what&#39;s on the Outpost. If an Outpost is offline, the delay in updating the replication configuration on that Outpost can be significant.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;This action requires permissions for the &lt;code&gt;s3-outposts:GetReplicationConfiguration&lt;/code&gt; action. The Outposts bucket owner has this permission by default and can grant it to others. For more information about permissions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsIAM.html\&quot;&gt;Setting up IAM with S3 on Outposts&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsBucketPolicy.html\&quot;&gt;Managing access to S3 on Outposts bucket&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketReplication.html#API_control_GetBucketReplication_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;If you include the &lt;code&gt;Filter&lt;/code&gt; element in a replication configuration, you must also include the &lt;code&gt;DeleteMarkerReplication&lt;/code&gt;, &lt;code&gt;Status&lt;/code&gt;, and &lt;code&gt;Priority&lt;/code&gt; elements. The response also returns those elements.&lt;/p&gt; &lt;p&gt;For information about S3 on Outposts replication failure reasons, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/outposts-replication-eventbridge.html#outposts-replication-failure-codes\&quot;&gt;Replication failure reasons&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The following operations are related to &lt;code&gt;GetBucketReplication&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketReplication.html\&quot;&gt;PutBucketReplication&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketReplication.html\&quot;&gt;DeleteBucketReplication&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBucketReplicationTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetBucketReplicationResult response = api.getBucketReplication(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action gets an Amazon S3 on Outposts bucket&#39;s tags. To get an S3 bucket tags, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html\&quot;&gt;GetBucketTagging&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Returns the tag set associated with the Outposts bucket. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;To use this action, you must have permission to perform the &lt;code&gt;GetBucketTagging&lt;/code&gt; action. By default, the bucket owner has this permission and can grant this permission to others.&lt;/p&gt; &lt;p&gt; &lt;code&gt;GetBucketTagging&lt;/code&gt; has the following special error:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Error code: &lt;code&gt;NoSuchTagSetError&lt;/code&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Description: There is no tag set associated with the bucket.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html#API_control_GetBucketTagging_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetBucketTagging&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html\&quot;&gt;PutBucketTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html\&quot;&gt;DeleteBucketTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBucketTaggingTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetBucketTaggingResult response = api.getBucketTagging(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This operation returns the versioning state for S3 on Outposts buckets only. To return the versioning state for an S3 bucket, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html\&quot;&gt;GetBucketVersioning&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Returns the versioning state for an S3 on Outposts bucket. With S3 Versioning, you can save multiple distinct copies of your objects and recover from unintended user actions and application failures.&lt;/p&gt; &lt;p&gt;If you&#39;ve never set versioning on your bucket, it has no versioning state. In that case, the &lt;code&gt;GetBucketVersioning&lt;/code&gt; request does not return a versioning state value.&lt;/p&gt; &lt;p&gt;For more information about versioning, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html\&quot;&gt;Versioning&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketVersioning.html#API_control_GetBucketVersioning_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following operations are related to &lt;code&gt;GetBucketVersioning&lt;/code&gt; for S3 on Outposts.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketVersioning.html\&quot;&gt;PutBucketVersioning&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html\&quot;&gt;PutBucketLifecycleConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html\&quot;&gt;GetBucketLifecycleConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBucketVersioningTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetBucketVersioningResult response = api.getBucketVersioning(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the tags on an S3 Batch Operations job. To use the &lt;code&gt;GetJobTagging&lt;/code&gt; operation, you must have permission to perform the &lt;code&gt;s3:GetJobTagging&lt;/code&gt; action. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags\&quot;&gt;Controlling access and labeling jobs using tags&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\&quot;&gt;CreateJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html\&quot;&gt;PutJobTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html\&quot;&gt;DeleteJobTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getJobTaggingTest() throws ApiException {
        String xAmzAccountId = null;
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetJobTaggingResult response = api.getJobTagging(xAmzAccountId, id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns configuration information about the specified Multi-Region Access Point.&lt;/p&gt; &lt;p&gt;This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\&quot;&gt;Managing Multi-Region Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetMultiRegionAccessPoint&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html\&quot;&gt;CreateMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html\&quot;&gt;DeleteMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html\&quot;&gt;DescribeMultiRegionAccessPointOperation&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html\&quot;&gt;ListMultiRegionAccessPoints&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultiRegionAccessPointTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetMultiRegionAccessPointResult response = api.getMultiRegionAccessPoint(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the access control policy of the specified Multi-Region Access Point.&lt;/p&gt; &lt;p&gt;This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\&quot;&gt;Managing Multi-Region Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetMultiRegionAccessPointPolicy&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html\&quot;&gt;GetMultiRegionAccessPointPolicyStatus&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html\&quot;&gt;PutMultiRegionAccessPointPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultiRegionAccessPointPolicyTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetMultiRegionAccessPointPolicyResult response = api.getMultiRegionAccessPointPolicy(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Indicates whether the specified Multi-Region Access Point has an access control policy that allows public access.&lt;/p&gt; &lt;p&gt;This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\&quot;&gt;Managing Multi-Region Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;GetMultiRegionAccessPointPolicyStatus&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html\&quot;&gt;GetMultiRegionAccessPointPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html\&quot;&gt;PutMultiRegionAccessPointPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultiRegionAccessPointPolicyStatusTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetMultiRegionAccessPointPolicyStatusResult response = api.getMultiRegionAccessPointPolicyStatus(xAmzAccountId, name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the routing configuration for a Multi-Region Access Point, indicating which Regions are active or passive.&lt;/p&gt; &lt;p&gt;To obtain routing control changes and failover requests, use the Amazon S3 failover control infrastructure endpoints in these five Amazon Web Services Regions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;us-east-1&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;us-west-2&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ap-southeast-2&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ap-northeast-1&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;eu-west-1&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;Your Amazon S3 bucket does not need to be in these five Regions.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultiRegionAccessPointRoutesTest() throws ApiException {
        String xAmzAccountId = null;
        String mrap = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetMultiRegionAccessPointRoutesResult response = api.getMultiRegionAccessPointRoutes(xAmzAccountId, mrap, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Retrieves the &lt;code&gt;PublicAccessBlock&lt;/code&gt; configuration for an Amazon Web Services account. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\&quot;&gt; Using Amazon S3 block public access&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html\&quot;&gt;DeletePublicAccessBlock&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html\&quot;&gt;PutPublicAccessBlock&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPublicAccessBlockTest() throws ApiException {
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetPublicAccessBlockOutput response = api.getPublicAccessBlock(xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Gets the Amazon S3 Storage Lens configuration. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\&quot;&gt;Assessing your storage activity and usage with Amazon S3 Storage Lens &lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;. For a complete list of S3 Storage Lens metrics, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_metrics_glossary.html\&quot;&gt;S3 Storage Lens metrics glossary&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To use this action, you must have permission to perform the &lt;code&gt;s3:GetStorageLensConfiguration&lt;/code&gt; action. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\&quot;&gt;Setting permissions to use Amazon S3 Storage Lens&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStorageLensConfigurationTest() throws ApiException {
        String storagelensid = null;
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetStorageLensConfigurationResult response = api.getStorageLensConfiguration(storagelensid, xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Gets the tags of Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\&quot;&gt;Assessing your storage activity and usage with Amazon S3 Storage Lens &lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To use this action, you must have permission to perform the &lt;code&gt;s3:GetStorageLensConfigurationTagging&lt;/code&gt; action. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\&quot;&gt;Setting permissions to use Amazon S3 Storage Lens&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStorageLensConfigurationTaggingTest() throws ApiException {
        String storagelensid = null;
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetStorageLensConfigurationTaggingResult response = api.getStorageLensConfigurationTagging(storagelensid, xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a list of the access points that are owned by the current account that&#39;s associated with the specified bucket. You can retrieve up to 1000 access points per call. If the specified bucket has more than 1,000 access points (or the number specified in &lt;code&gt;maxResults&lt;/code&gt;, whichever is less), the response will include a continuation token that you can use to list the additional access points.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;ListAccessPoints&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html\&quot;&gt;CreateAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html\&quot;&gt;DeleteAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html\&quot;&gt;GetAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAccessPointsTest() throws ApiException {
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String bucket = null;
        String nextToken = null;
        Integer maxResults = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListAccessPointsResult response = api.listAccessPoints(xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, bucket, nextToken, maxResults, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns some or all (up to 1,000) access points associated with the Object Lambda Access Point per call. If there are more access points than what can be returned in one call, the response will include a continuation token that you can use to list the additional access points.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;ListAccessPointsForObjectLambda&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html\&quot;&gt;CreateAccessPointForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html\&quot;&gt;DeleteAccessPointForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html\&quot;&gt;GetAccessPointForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAccessPointsForObjectLambdaTest() throws ApiException {
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListAccessPointsForObjectLambdaResult response = api.listAccessPointsForObjectLambda(xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists current S3 Batch Operations jobs and jobs that have ended within the last 30 days for the Amazon Web Services account making the request. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html\&quot;&gt;S3 Batch Operations&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;p/&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\&quot;&gt;CreateJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html\&quot;&gt;DescribeJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html\&quot;&gt;UpdateJobPriority&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html\&quot;&gt;UpdateJobStatus&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listJobsTest() throws ApiException {
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<JobStatus> jobStatuses = null;
        String nextToken = null;
        Integer maxResults = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListJobsResult response = api.listJobs(xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, jobStatuses, nextToken, maxResults, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a list of the Multi-Region Access Points currently associated with the specified Amazon Web Services account. Each call can return up to 100 Multi-Region Access Points, the maximum number of Multi-Region Access Points that can be associated with a single account.&lt;/p&gt; &lt;p&gt;This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\&quot;&gt;Managing Multi-Region Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;ListMultiRegionAccessPoint&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html\&quot;&gt;CreateMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html\&quot;&gt;DeleteMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html\&quot;&gt;DescribeMultiRegionAccessPointOperation&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html\&quot;&gt;GetMultiRegionAccessPoint&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMultiRegionAccessPointsTest() throws ApiException {
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListMultiRegionAccessPointsResult response = api.listMultiRegionAccessPoints(xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a list of all Outposts buckets in an Outpost that are owned by the authenticated sender of the request. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and &lt;code&gt;x-amz-outpost-id&lt;/code&gt; in your request, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListRegionalBuckets.html#API_control_ListRegionalBuckets_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRegionalBucketsTest() throws ApiException {
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        String xAmzOutpostId = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListRegionalBucketsResult response = api.listRegionalBuckets(xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, xAmzOutpostId, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Gets a list of Amazon S3 Storage Lens configurations. For more information about S3 Storage Lens, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\&quot;&gt;Assessing your storage activity and usage with Amazon S3 Storage Lens &lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To use this action, you must have permission to perform the &lt;code&gt;s3:ListStorageLensConfigurations&lt;/code&gt; action. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\&quot;&gt;Setting permissions to use Amazon S3 Storage Lens&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listStorageLensConfigurationsTest() throws ApiException {
        String xAmzAccountId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        String nextToken2 = null;
        ListStorageLensConfigurationsResult response = api.listStorageLensConfigurations(xAmzAccountId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, nextToken2);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Replaces configuration for an Object Lambda Access Point.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;PutAccessPointConfigurationForObjectLambda&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointConfigurationForObjectLambda.html\&quot;&gt;GetAccessPointConfigurationForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putAccessPointConfigurationForObjectLambdaTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        CreateAccessPointForObjectLambdaRequest createAccessPointForObjectLambdaRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.putAccessPointConfigurationForObjectLambda(xAmzAccountId, name, createAccessPointForObjectLambdaRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Associates an access policy with the specified access point. Each access point can have only one policy, so a request made to this API replaces any existing policy associated with the specified access point.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html#API_control_PutAccessPointPolicy_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;PutAccessPointPolicy&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html\&quot;&gt;GetAccessPointPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html\&quot;&gt;DeleteAccessPointPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putAccessPointPolicyTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        PutAccessPointPolicyRequest putAccessPointPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.putAccessPointPolicy(xAmzAccountId, name, putAccessPointPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates or replaces resource policy for an Object Lambda Access Point. For an example policy, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-create.html#olap-create-cli\&quot;&gt;Creating Object Lambda Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;PutAccessPointPolicyForObjectLambda&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html\&quot;&gt;DeleteAccessPointPolicyForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html\&quot;&gt;GetAccessPointPolicyForObjectLambda&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putAccessPointPolicyForObjectLambdaTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        PutAccessPointPolicyForObjectLambdaRequest putAccessPointPolicyForObjectLambdaRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.putAccessPointPolicyForObjectLambda(xAmzAccountId, name, putAccessPointPolicyForObjectLambdaRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action puts a lifecycle configuration to an Amazon S3 on Outposts bucket. To put a lifecycle configuration to an S3 bucket, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html\&quot;&gt;PutBucketLifecycleConfiguration&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Creates a new lifecycle configuration for the S3 on Outposts bucket or replaces an existing lifecycle configuration. Outposts buckets only support lifecycle configurations that delete/expire objects after a certain period of time and abort incomplete multipart uploads.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html#API_control_PutBucketLifecycleConfiguration_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;PutBucketLifecycleConfiguration&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html\&quot;&gt;GetBucketLifecycleConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html\&quot;&gt;DeleteBucketLifecycleConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putBucketLifecycleConfigurationTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        PutBucketLifecycleConfigurationRequest putBucketLifecycleConfigurationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.putBucketLifecycleConfiguration(xAmzAccountId, name, putBucketLifecycleConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action puts a bucket policy to an Amazon S3 on Outposts bucket. To put a policy on an S3 bucket, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html\&quot;&gt;PutBucketPolicy&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Applies an Amazon S3 bucket policy to an Outposts bucket. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If you are using an identity other than the root user of the Amazon Web Services account that owns the Outposts bucket, the calling identity must have the &lt;code&gt;PutBucketPolicy&lt;/code&gt; permissions on the specified Outposts bucket and belong to the bucket owner&#39;s account in order to use this action.&lt;/p&gt; &lt;p&gt;If you don&#39;t have &lt;code&gt;PutBucketPolicy&lt;/code&gt; permissions, Amazon S3 returns a &lt;code&gt;403 Access Denied&lt;/code&gt; error. If you have the correct permissions, but you&#39;re not using an identity that belongs to the bucket owner&#39;s account, Amazon S3 returns a &lt;code&gt;405 Method Not Allowed&lt;/code&gt; error.&lt;/p&gt; &lt;important&gt; &lt;p&gt; As a security precaution, the root user of the Amazon Web Services account that owns a bucket can always use this action, even if the policy explicitly denies the root user the ability to perform this action. &lt;/p&gt; &lt;/important&gt; &lt;p&gt;For more information about bucket policies, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\&quot;&gt;Using Bucket Policies and User Policies&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html#API_control_PutBucketPolicy_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;PutBucketPolicy&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html\&quot;&gt;GetBucketPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html\&quot;&gt;DeleteBucketPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putBucketPolicyTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        PutBucketPolicyRequest putBucketPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Boolean xAmzConfirmRemoveSelfBucketAccess = null;
        api.putBucketPolicy(xAmzAccountId, name, putBucketPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, xAmzConfirmRemoveSelfBucketAccess);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action creates an Amazon S3 on Outposts bucket&#39;s replication configuration. To create an S3 bucket&#39;s replication configuration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html\&quot;&gt;PutBucketReplication&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Creates a replication configuration or replaces an existing one. For information about S3 replication on Outposts configuration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsReplication.html\&quot;&gt;Replicating objects for S3 on Outposts&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;It can take a while to propagate &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;DELETE&lt;/code&gt; requests for a replication configuration to all S3 on Outposts systems. Therefore, the replication configuration that&#39;s returned by a &lt;code&gt;GET&lt;/code&gt; request soon after a &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;DELETE&lt;/code&gt; request might return a more recent result than what&#39;s on the Outpost. If an Outpost is offline, the delay in updating the replication configuration on that Outpost can be significant.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Specify the replication configuration in the request body. In the replication configuration, you provide the following information:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The name of the destination bucket or buckets where you want S3 on Outposts to replicate objects&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The Identity and Access Management (IAM) role that S3 on Outposts can assume to replicate objects on your behalf&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Other relevant information, such as replication rules&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;A replication configuration must include at least one rule and can contain a maximum of 100. Each rule identifies a subset of objects to replicate by filtering the objects in the source Outposts bucket. To choose additional subsets of objects to replicate, add a rule for each subset.&lt;/p&gt; &lt;p&gt;To specify a subset of the objects in the source Outposts bucket to apply a replication rule to, add the &lt;code&gt;Filter&lt;/code&gt; element as a child of the &lt;code&gt;Rule&lt;/code&gt; element. You can filter objects based on an object key prefix, one or more object tags, or both. When you add the &lt;code&gt;Filter&lt;/code&gt; element in the configuration, you must also add the following elements: &lt;code&gt;DeleteMarkerReplication&lt;/code&gt;, &lt;code&gt;Status&lt;/code&gt;, and &lt;code&gt;Priority&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;PutBucketReplication&lt;/code&gt; on Outposts requires that both the source and destination buckets must have versioning enabled. For information about enabling versioning on a bucket, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsManagingVersioning.html\&quot;&gt;Managing S3 Versioning for your S3 on Outposts bucket&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For information about S3 on Outposts replication failure reasons, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/outposts-replication-eventbridge.html#outposts-replication-failure-codes\&quot;&gt;Replication failure reasons&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Handling Replication of Encrypted Objects&lt;/b&gt; &lt;/p&gt; &lt;p&gt;Outposts buckets are encrypted at all times. All the objects in the source Outposts bucket are encrypted and can be replicated. Also, all the replicas in the destination Outposts bucket are encrypted with the same encryption key as the objects in the source Outposts bucket.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Permissions&lt;/b&gt; &lt;/p&gt; &lt;p&gt;To create a &lt;code&gt;PutBucketReplication&lt;/code&gt; request, you must have &lt;code&gt;s3-outposts:PutReplicationConfiguration&lt;/code&gt; permissions for the bucket. The Outposts bucket owner has this permission by default and can grant it to others. For more information about permissions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsIAM.html\&quot;&gt;Setting up IAM with S3 on Outposts&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsBucketPolicy.html\&quot;&gt;Managing access to S3 on Outposts buckets&lt;/a&gt;. &lt;/p&gt; &lt;note&gt; &lt;p&gt;To perform this operation, the user or role must also have the &lt;code&gt;iam:CreateRole&lt;/code&gt; and &lt;code&gt;iam:PassRole&lt;/code&gt; permissions. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_passrole.html\&quot;&gt;Granting a user permissions to pass a role to an Amazon Web Services service&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketReplication.html#API_control_PutBucketReplication_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following operations are related to &lt;code&gt;PutBucketReplication&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketReplication.html\&quot;&gt;GetBucketReplication&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketReplication.html\&quot;&gt;DeleteBucketReplication&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putBucketReplicationTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        PutBucketReplicationRequest putBucketReplicationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.putBucketReplication(xAmzAccountId, name, putBucketReplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This action puts tags on an Amazon S3 on Outposts bucket. To put tags on an S3 bucket, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html\&quot;&gt;PutBucketTagging&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Sets the tags for an S3 on Outposts bucket. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\&quot;&gt;Using Amazon S3 on Outposts&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;Use tags to organize your Amazon Web Services bill to reflect your own cost structure. To do this, sign up to get your Amazon Web Services account bill with tag key values included. Then, to see the cost of combined resources, organize your billing information according to resources with the same tag key values. For example, you can tag several resources with a specific application name, and then organize your billing information to see the total cost of that application across several services. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\&quot;&gt;Cost allocation and tagging&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Within a bucket, if you add a tag that has the same key as an existing tag, the new value overwrites the old value. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/CostAllocTagging.html\&quot;&gt; Using cost allocation in Amazon S3 bucket tags&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;To use this action, you must have permissions to perform the &lt;code&gt;s3-outposts:PutBucketTagging&lt;/code&gt; action. The Outposts bucket owner has this permission by default and can grant this permission to others. For more information about permissions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\&quot;&gt; Permissions Related to Bucket Subresource Operations&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html\&quot;&gt;Managing access permissions to your Amazon S3 resources&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;code&gt;PutBucketTagging&lt;/code&gt; has the following special errors:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Error code: &lt;code&gt;InvalidTagError&lt;/code&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Description: The tag provided was not a valid tag. This error can occur if the tag did not pass input validation. For information about tag restrictions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\&quot;&gt; User-Defined Tag Restrictions&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html\&quot;&gt; Amazon Web Services-Generated Cost Allocation Tag Restrictions&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Error code: &lt;code&gt;MalformedXMLError&lt;/code&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Description: The XML provided does not match the schema.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Error code: &lt;code&gt;OperationAbortedError &lt;/code&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Description: A conflicting conditional action is currently in progress against this resource. Try again.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Error code: &lt;code&gt;InternalError&lt;/code&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Description: The service was unable to apply the provided tag to the bucket.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html#API_control_PutBucketTagging_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;PutBucketTagging&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html\&quot;&gt;GetBucketTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html\&quot;&gt;DeleteBucketTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putBucketTaggingTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        PutBucketTaggingRequest putBucketTaggingRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.putBucketTagging(xAmzAccountId, name, putBucketTaggingRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;note&gt; &lt;p&gt;This operation sets the versioning state for S3 on Outposts buckets only. To set the versioning state for an S3 bucket, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html\&quot;&gt;PutBucketVersioning&lt;/a&gt; in the &lt;i&gt;Amazon S3 API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Sets the versioning state for an S3 on Outposts bucket. With S3 Versioning, you can save multiple distinct copies of your objects and recover from unintended user actions and application failures.&lt;/p&gt; &lt;p&gt;You can set the versioning state to one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Enabled&lt;/b&gt; - Enables versioning for the objects in the bucket. All objects added to the bucket receive a unique version ID.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Suspended&lt;/b&gt; - Suspends versioning for the objects in the bucket. All objects added to the bucket receive the version ID &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you&#39;ve never set versioning on your bucket, it has no versioning state. In that case, a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketVersioning.html\&quot;&gt; GetBucketVersioning&lt;/a&gt; request does not return a versioning state value.&lt;/p&gt; &lt;p&gt;When you enable S3 Versioning, for each object in your bucket, you have a current version and zero or more noncurrent versions. You can configure your bucket S3 Lifecycle rules to expire noncurrent versions after a specified time period. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsLifecycleManaging.html\&quot;&gt; Creating and managing a lifecycle configuration for your S3 on Outposts bucket&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If you have an object expiration lifecycle configuration in your non-versioned bucket and you want to maintain the same permanent delete behavior when you enable versioning, you must add a noncurrent expiration policy. The noncurrent expiration lifecycle configuration will manage the deletes of the noncurrent object versions in the version-enabled bucket. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html\&quot;&gt;Versioning&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;All Amazon S3 on Outposts REST API requests for this action require an additional parameter of &lt;code&gt;x-amz-outpost-id&lt;/code&gt; to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of &lt;code&gt;s3-control&lt;/code&gt;. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the &lt;code&gt;x-amz-outpost-id&lt;/code&gt; derived by using the access point ARN, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketVersioning.html#API_control_PutBucketVersioning_Examples\&quot;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &lt;p&gt;The following operations are related to &lt;code&gt;PutBucketVersioning&lt;/code&gt; for S3 on Outposts.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketVersioning.html\&quot;&gt;GetBucketVersioning&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html\&quot;&gt;PutBucketLifecycleConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html\&quot;&gt;GetBucketLifecycleConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putBucketVersioningTest() throws ApiException {
        String xAmzAccountId = null;
        String name = null;
        PutBucketVersioningRequest putBucketVersioningRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String xAmzMfa = null;
        api.putBucketVersioning(xAmzAccountId, name, putBucketVersioningRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, xAmzMfa);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Sets the supplied tag-set on an S3 Batch Operations job.&lt;/p&gt; &lt;p&gt;A tag is a key-value pair. You can associate S3 Batch Operations tags with any job by sending a PUT request against the tagging subresource that is associated with the job. To modify the existing tag set, you can either replace the existing tag set entirely, or make changes within the existing tag set by retrieving the existing tag set using &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html\&quot;&gt;GetJobTagging&lt;/a&gt;, modify that tag set, and use this action to replace the tag set with the one you modified. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags\&quot;&gt;Controlling access and labeling jobs using tags&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;. &lt;/p&gt; &lt;p/&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;If you send this request with an empty tag set, Amazon S3 deletes the existing tag set on the Batch Operations job. If you use this method, you are charged for a Tier 1 Request (PUT). For more information, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/s3/pricing/\&quot;&gt;Amazon S3 pricing&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For deleting existing tags for your Batch Operations job, a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html\&quot;&gt;DeleteJobTagging&lt;/a&gt; request is preferred because it achieves the same result without incurring charges.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A few things to consider about using tags:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Amazon S3 limits the maximum number of tags to 50 tags per job.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;You can associate up to 50 tags with a job as long as they have unique tag keys.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A tag key can be up to 128 Unicode characters in length, and tag values can be up to 256 Unicode characters in length.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The key and values are case sensitive.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For tagging-related restrictions related to characters and encodings, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\&quot;&gt;User-Defined Tag Restrictions&lt;/a&gt; in the &lt;i&gt;Billing and Cost Management User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p/&gt; &lt;p&gt;To use the &lt;code&gt;PutJobTagging&lt;/code&gt; operation, you must have permission to perform the &lt;code&gt;s3:PutJobTagging&lt;/code&gt; action.&lt;/p&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\&quot;&gt;CreateJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html\&quot;&gt;GetJobTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html\&quot;&gt;DeleteJobTagging&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putJobTaggingTest() throws ApiException {
        String xAmzAccountId = null;
        String id = null;
        PutJobTaggingRequest putJobTaggingRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.putJobTagging(xAmzAccountId, id, putJobTaggingRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Associates an access control policy with the specified Multi-Region Access Point. Each Multi-Region Access Point can have only one policy, so a request made to this action replaces any existing policy that is associated with the specified Multi-Region Access Point.&lt;/p&gt; &lt;p&gt;This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\&quot;&gt;Managing Multi-Region Access Points&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The following actions are related to &lt;code&gt;PutMultiRegionAccessPointPolicy&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html\&quot;&gt;GetMultiRegionAccessPointPolicy&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html\&quot;&gt;GetMultiRegionAccessPointPolicyStatus&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putMultiRegionAccessPointPolicyTest() throws ApiException {
        String xAmzAccountId = null;
        PutMultiRegionAccessPointPolicyRequest putMultiRegionAccessPointPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        PutMultiRegionAccessPointPolicyResult response = api.putMultiRegionAccessPointPolicy(xAmzAccountId, putMultiRegionAccessPointPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates or modifies the &lt;code&gt;PublicAccessBlock&lt;/code&gt; configuration for an Amazon Web Services account. For this operation, users must have the &lt;code&gt;s3:PutAccountPublicAccessBlock&lt;/code&gt; permission. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\&quot;&gt; Using Amazon S3 block public access&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html\&quot;&gt;GetPublicAccessBlock&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html\&quot;&gt;DeletePublicAccessBlock&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putPublicAccessBlockTest() throws ApiException {
        String xAmzAccountId = null;
        PutPublicAccessBlockRequest putPublicAccessBlockRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.putPublicAccessBlock(xAmzAccountId, putPublicAccessBlockRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Puts an Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\&quot;&gt;Working with Amazon S3 Storage Lens&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;. For a complete list of S3 Storage Lens metrics, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_metrics_glossary.html\&quot;&gt;S3 Storage Lens metrics glossary&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To use this action, you must have permission to perform the &lt;code&gt;s3:PutStorageLensConfiguration&lt;/code&gt; action. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\&quot;&gt;Setting permissions to use Amazon S3 Storage Lens&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putStorageLensConfigurationTest() throws ApiException {
        String storagelensid = null;
        String xAmzAccountId = null;
        PutStorageLensConfigurationRequest putStorageLensConfigurationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.putStorageLensConfiguration(storagelensid, xAmzAccountId, putStorageLensConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Put or replace tags on an existing Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\&quot;&gt;Assessing your storage activity and usage with Amazon S3 Storage Lens &lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To use this action, you must have permission to perform the &lt;code&gt;s3:PutStorageLensConfigurationTagging&lt;/code&gt; action. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\&quot;&gt;Setting permissions to use Amazon S3 Storage Lens&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putStorageLensConfigurationTaggingTest() throws ApiException {
        String storagelensid = null;
        String xAmzAccountId = null;
        PutStorageLensConfigurationTaggingRequest putStorageLensConfigurationTaggingRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.putStorageLensConfigurationTagging(storagelensid, xAmzAccountId, putStorageLensConfigurationTaggingRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Submits an updated route configuration for a Multi-Region Access Point. This API operation updates the routing status for the specified Regions from active to passive, or from passive to active. A value of &lt;code&gt;0&lt;/code&gt; indicates a passive status, which means that traffic won&#39;t be routed to the specified Region. A value of &lt;code&gt;100&lt;/code&gt; indicates an active status, which means that traffic will be routed to the specified Region. At least one Region must be active at all times.&lt;/p&gt; &lt;p&gt;When the routing configuration is changed, any in-progress operations (uploads, copies, deletes, and so on) to formerly active Regions will continue to run to their final completion state (success or failure). The routing configurations of any Regions that aren’t specified remain unchanged.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Updated routing configurations might not be immediately applied. It can take up to 2 minutes for your changes to take effect.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;To submit routing control changes and failover requests, use the Amazon S3 failover control infrastructure endpoints in these five Amazon Web Services Regions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;us-east-1&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;us-west-2&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ap-southeast-2&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ap-northeast-1&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;eu-west-1&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;Your Amazon S3 bucket does not need to be in these five Regions.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitMultiRegionAccessPointRoutesTest() throws ApiException {
        String xAmzAccountId = null;
        String mrap = null;
        SubmitMultiRegionAccessPointRoutesRequest submitMultiRegionAccessPointRoutesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.submitMultiRegionAccessPointRoutes(xAmzAccountId, mrap, submitMultiRegionAccessPointRoutesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates an existing S3 Batch Operations job&#39;s priority. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html\&quot;&gt;S3 Batch Operations&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\&quot;&gt;CreateJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html\&quot;&gt;ListJobs&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html\&quot;&gt;DescribeJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html\&quot;&gt;UpdateJobStatus&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateJobPriorityTest() throws ApiException {
        String xAmzAccountId = null;
        String id = null;
        Integer priority = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateJobPriorityResult response = api.updateJobPriority(xAmzAccountId, id, priority, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the status for the specified job. Use this action to confirm that you want to run a job or to cancel an existing job. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html\&quot;&gt;S3 Batch Operations&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p/&gt; &lt;p&gt;Related actions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\&quot;&gt;CreateJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html\&quot;&gt;ListJobs&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html\&quot;&gt;DescribeJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html\&quot;&gt;UpdateJobStatus&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateJobStatusTest() throws ApiException {
        String xAmzAccountId = null;
        String id = null;
        String requestedJobStatus = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String statusUpdateReason = null;
        UpdateJobStatusResult response = api.updateJobStatus(xAmzAccountId, id, requestedJobStatus, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, statusUpdateReason);
        // TODO: test validations
    }

}
