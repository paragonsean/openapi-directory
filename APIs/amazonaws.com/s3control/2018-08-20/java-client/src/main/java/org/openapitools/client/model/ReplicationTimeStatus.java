/*
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ReplicationTimeStatus
 */
@JsonAdapter(ReplicationTimeStatus.Adapter.class)
public enum ReplicationTimeStatus {
  
  ENABLED("Enabled"),
  
  DISABLED("Disabled");

  private String value;

  ReplicationTimeStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ReplicationTimeStatus fromValue(String value) {
    for (ReplicationTimeStatus b : ReplicationTimeStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ReplicationTimeStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final ReplicationTimeStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ReplicationTimeStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ReplicationTimeStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ReplicationTimeStatus.fromValue(value);
  }
}

