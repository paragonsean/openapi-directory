/*
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AsyncOperationName;
import org.openapitools.client.model.AsyncOperationRequestParameters;
import org.openapitools.client.model.AsyncOperationResponseDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeMultiRegionAccessPointOperationResultAsyncOperation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:46.356577-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeMultiRegionAccessPointOperationResultAsyncOperation {
  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_OPERATION = "Operation";
  @SerializedName(SERIALIZED_NAME_OPERATION)
  private AsyncOperationName operation;

  public static final String SERIALIZED_NAME_REQUEST_TOKEN_A_R_N = "RequestTokenARN";
  @SerializedName(SERIALIZED_NAME_REQUEST_TOKEN_A_R_N)
  private String requestTokenARN;

  public static final String SERIALIZED_NAME_REQUEST_PARAMETERS = "RequestParameters";
  @SerializedName(SERIALIZED_NAME_REQUEST_PARAMETERS)
  private AsyncOperationRequestParameters requestParameters;

  public static final String SERIALIZED_NAME_REQUEST_STATUS = "RequestStatus";
  @SerializedName(SERIALIZED_NAME_REQUEST_STATUS)
  private String requestStatus;

  public static final String SERIALIZED_NAME_RESPONSE_DETAILS = "ResponseDetails";
  @SerializedName(SERIALIZED_NAME_RESPONSE_DETAILS)
  private AsyncOperationResponseDetails responseDetails;

  public DescribeMultiRegionAccessPointOperationResultAsyncOperation() {
  }

  public DescribeMultiRegionAccessPointOperationResultAsyncOperation creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeMultiRegionAccessPointOperationResultAsyncOperation operation(AsyncOperationName operation) {
    this.operation = operation;
    return this;
  }

  /**
   * Get operation
   * @return operation
   */
  @javax.annotation.Nullable
  public AsyncOperationName getOperation() {
    return operation;
  }

  public void setOperation(AsyncOperationName operation) {
    this.operation = operation;
  }


  public DescribeMultiRegionAccessPointOperationResultAsyncOperation requestTokenARN(String requestTokenARN) {
    this.requestTokenARN = requestTokenARN;
    return this;
  }

  /**
   * Get requestTokenARN
   * @return requestTokenARN
   */
  @javax.annotation.Nullable
  public String getRequestTokenARN() {
    return requestTokenARN;
  }

  public void setRequestTokenARN(String requestTokenARN) {
    this.requestTokenARN = requestTokenARN;
  }


  public DescribeMultiRegionAccessPointOperationResultAsyncOperation requestParameters(AsyncOperationRequestParameters requestParameters) {
    this.requestParameters = requestParameters;
    return this;
  }

  /**
   * Get requestParameters
   * @return requestParameters
   */
  @javax.annotation.Nullable
  public AsyncOperationRequestParameters getRequestParameters() {
    return requestParameters;
  }

  public void setRequestParameters(AsyncOperationRequestParameters requestParameters) {
    this.requestParameters = requestParameters;
  }


  public DescribeMultiRegionAccessPointOperationResultAsyncOperation requestStatus(String requestStatus) {
    this.requestStatus = requestStatus;
    return this;
  }

  /**
   * Get requestStatus
   * @return requestStatus
   */
  @javax.annotation.Nullable
  public String getRequestStatus() {
    return requestStatus;
  }

  public void setRequestStatus(String requestStatus) {
    this.requestStatus = requestStatus;
  }


  public DescribeMultiRegionAccessPointOperationResultAsyncOperation responseDetails(AsyncOperationResponseDetails responseDetails) {
    this.responseDetails = responseDetails;
    return this;
  }

  /**
   * Get responseDetails
   * @return responseDetails
   */
  @javax.annotation.Nullable
  public AsyncOperationResponseDetails getResponseDetails() {
    return responseDetails;
  }

  public void setResponseDetails(AsyncOperationResponseDetails responseDetails) {
    this.responseDetails = responseDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeMultiRegionAccessPointOperationResultAsyncOperation describeMultiRegionAccessPointOperationResultAsyncOperation = (DescribeMultiRegionAccessPointOperationResultAsyncOperation) o;
    return Objects.equals(this.creationTime, describeMultiRegionAccessPointOperationResultAsyncOperation.creationTime) &&
        Objects.equals(this.operation, describeMultiRegionAccessPointOperationResultAsyncOperation.operation) &&
        Objects.equals(this.requestTokenARN, describeMultiRegionAccessPointOperationResultAsyncOperation.requestTokenARN) &&
        Objects.equals(this.requestParameters, describeMultiRegionAccessPointOperationResultAsyncOperation.requestParameters) &&
        Objects.equals(this.requestStatus, describeMultiRegionAccessPointOperationResultAsyncOperation.requestStatus) &&
        Objects.equals(this.responseDetails, describeMultiRegionAccessPointOperationResultAsyncOperation.responseDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationTime, operation, requestTokenARN, requestParameters, requestStatus, responseDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeMultiRegionAccessPointOperationResultAsyncOperation {\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    requestTokenARN: ").append(toIndentedString(requestTokenARN)).append("\n");
    sb.append("    requestParameters: ").append(toIndentedString(requestParameters)).append("\n");
    sb.append("    requestStatus: ").append(toIndentedString(requestStatus)).append("\n");
    sb.append("    responseDetails: ").append(toIndentedString(responseDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CreationTime");
    openapiFields.add("Operation");
    openapiFields.add("RequestTokenARN");
    openapiFields.add("RequestParameters");
    openapiFields.add("RequestStatus");
    openapiFields.add("ResponseDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeMultiRegionAccessPointOperationResultAsyncOperation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeMultiRegionAccessPointOperationResultAsyncOperation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeMultiRegionAccessPointOperationResultAsyncOperation is not found in the empty JSON string", DescribeMultiRegionAccessPointOperationResultAsyncOperation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeMultiRegionAccessPointOperationResultAsyncOperation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeMultiRegionAccessPointOperationResultAsyncOperation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `Operation`
      if (jsonObj.get("Operation") != null && !jsonObj.get("Operation").isJsonNull()) {
        AsyncOperationName.validateJsonElement(jsonObj.get("Operation"));
      }
      // validate the optional field `RequestTokenARN`
      if (jsonObj.get("RequestTokenARN") != null && !jsonObj.get("RequestTokenARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RequestTokenARN"));
      }
      // validate the optional field `RequestParameters`
      if (jsonObj.get("RequestParameters") != null && !jsonObj.get("RequestParameters").isJsonNull()) {
        AsyncOperationRequestParameters.validateJsonElement(jsonObj.get("RequestParameters"));
      }
      // validate the optional field `RequestStatus`
      if (jsonObj.get("RequestStatus") != null && !jsonObj.get("RequestStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RequestStatus"));
      }
      // validate the optional field `ResponseDetails`
      if (jsonObj.get("ResponseDetails") != null && !jsonObj.get("ResponseDetails").isJsonNull()) {
        AsyncOperationResponseDetails.validateJsonElement(jsonObj.get("ResponseDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeMultiRegionAccessPointOperationResultAsyncOperation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeMultiRegionAccessPointOperationResultAsyncOperation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeMultiRegionAccessPointOperationResultAsyncOperation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeMultiRegionAccessPointOperationResultAsyncOperation.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeMultiRegionAccessPointOperationResultAsyncOperation>() {
           @Override
           public void write(JsonWriter out, DescribeMultiRegionAccessPointOperationResultAsyncOperation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeMultiRegionAccessPointOperationResultAsyncOperation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeMultiRegionAccessPointOperationResultAsyncOperation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeMultiRegionAccessPointOperationResultAsyncOperation
   * @throws IOException if the JSON string is invalid with respect to DescribeMultiRegionAccessPointOperationResultAsyncOperation
   */
  public static DescribeMultiRegionAccessPointOperationResultAsyncOperation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeMultiRegionAccessPointOperationResultAsyncOperation.class);
  }

  /**
   * Convert an instance of DescribeMultiRegionAccessPointOperationResultAsyncOperation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

