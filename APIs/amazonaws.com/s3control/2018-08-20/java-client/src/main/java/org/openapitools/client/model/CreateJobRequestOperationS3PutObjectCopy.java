/*
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.S3CannedAccessControlList;
import org.openapitools.client.model.S3ChecksumAlgorithm;
import org.openapitools.client.model.S3CopyObjectOperationNewObjectMetadata;
import org.openapitools.client.model.S3MetadataDirective;
import org.openapitools.client.model.S3ObjectLockLegalHoldStatus;
import org.openapitools.client.model.S3ObjectLockMode;
import org.openapitools.client.model.S3StorageClass;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateJobRequestOperationS3PutObjectCopy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:46.356577-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateJobRequestOperationS3PutObjectCopy {
  public static final String SERIALIZED_NAME_TARGET_RESOURCE = "TargetResource";
  @SerializedName(SERIALIZED_NAME_TARGET_RESOURCE)
  private String targetResource;

  public static final String SERIALIZED_NAME_CANNED_ACCESS_CONTROL_LIST = "CannedAccessControlList";
  @SerializedName(SERIALIZED_NAME_CANNED_ACCESS_CONTROL_LIST)
  private S3CannedAccessControlList cannedAccessControlList;

  public static final String SERIALIZED_NAME_ACCESS_CONTROL_GRANTS = "AccessControlGrants";
  @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL_GRANTS)
  private List accessControlGrants;

  public static final String SERIALIZED_NAME_METADATA_DIRECTIVE = "MetadataDirective";
  @SerializedName(SERIALIZED_NAME_METADATA_DIRECTIVE)
  private S3MetadataDirective metadataDirective;

  public static final String SERIALIZED_NAME_MODIFIED_SINCE_CONSTRAINT = "ModifiedSinceConstraint";
  @SerializedName(SERIALIZED_NAME_MODIFIED_SINCE_CONSTRAINT)
  private OffsetDateTime modifiedSinceConstraint;

  public static final String SERIALIZED_NAME_NEW_OBJECT_METADATA = "NewObjectMetadata";
  @SerializedName(SERIALIZED_NAME_NEW_OBJECT_METADATA)
  private S3CopyObjectOperationNewObjectMetadata newObjectMetadata;

  public static final String SERIALIZED_NAME_NEW_OBJECT_TAGGING = "NewObjectTagging";
  @SerializedName(SERIALIZED_NAME_NEW_OBJECT_TAGGING)
  private List newObjectTagging;

  public static final String SERIALIZED_NAME_REDIRECT_LOCATION = "RedirectLocation";
  @SerializedName(SERIALIZED_NAME_REDIRECT_LOCATION)
  private String redirectLocation;

  public static final String SERIALIZED_NAME_REQUESTER_PAYS = "RequesterPays";
  @SerializedName(SERIALIZED_NAME_REQUESTER_PAYS)
  private Boolean requesterPays;

  public static final String SERIALIZED_NAME_STORAGE_CLASS = "StorageClass";
  @SerializedName(SERIALIZED_NAME_STORAGE_CLASS)
  private S3StorageClass storageClass;

  public static final String SERIALIZED_NAME_UN_MODIFIED_SINCE_CONSTRAINT = "UnModifiedSinceConstraint";
  @SerializedName(SERIALIZED_NAME_UN_MODIFIED_SINCE_CONSTRAINT)
  private OffsetDateTime unModifiedSinceConstraint;

  public static final String SERIALIZED_NAME_SS_E_AWS_KMS_KEY_ID = "SSEAwsKmsKeyId";
  @SerializedName(SERIALIZED_NAME_SS_E_AWS_KMS_KEY_ID)
  private String ssEAwsKmsKeyId;

  public static final String SERIALIZED_NAME_TARGET_KEY_PREFIX = "TargetKeyPrefix";
  @SerializedName(SERIALIZED_NAME_TARGET_KEY_PREFIX)
  private String targetKeyPrefix;

  public static final String SERIALIZED_NAME_OBJECT_LOCK_LEGAL_HOLD_STATUS = "ObjectLockLegalHoldStatus";
  @SerializedName(SERIALIZED_NAME_OBJECT_LOCK_LEGAL_HOLD_STATUS)
  private S3ObjectLockLegalHoldStatus objectLockLegalHoldStatus;

  public static final String SERIALIZED_NAME_OBJECT_LOCK_MODE = "ObjectLockMode";
  @SerializedName(SERIALIZED_NAME_OBJECT_LOCK_MODE)
  private S3ObjectLockMode objectLockMode;

  public static final String SERIALIZED_NAME_OBJECT_LOCK_RETAIN_UNTIL_DATE = "ObjectLockRetainUntilDate";
  @SerializedName(SERIALIZED_NAME_OBJECT_LOCK_RETAIN_UNTIL_DATE)
  private OffsetDateTime objectLockRetainUntilDate;

  public static final String SERIALIZED_NAME_BUCKET_KEY_ENABLED = "BucketKeyEnabled";
  @SerializedName(SERIALIZED_NAME_BUCKET_KEY_ENABLED)
  private Boolean bucketKeyEnabled;

  public static final String SERIALIZED_NAME_CHECKSUM_ALGORITHM = "ChecksumAlgorithm";
  @SerializedName(SERIALIZED_NAME_CHECKSUM_ALGORITHM)
  private S3ChecksumAlgorithm checksumAlgorithm;

  public CreateJobRequestOperationS3PutObjectCopy() {
  }

  public CreateJobRequestOperationS3PutObjectCopy targetResource(String targetResource) {
    this.targetResource = targetResource;
    return this;
  }

  /**
   * Get targetResource
   * @return targetResource
   */
  @javax.annotation.Nullable
  public String getTargetResource() {
    return targetResource;
  }

  public void setTargetResource(String targetResource) {
    this.targetResource = targetResource;
  }


  public CreateJobRequestOperationS3PutObjectCopy cannedAccessControlList(S3CannedAccessControlList cannedAccessControlList) {
    this.cannedAccessControlList = cannedAccessControlList;
    return this;
  }

  /**
   * Get cannedAccessControlList
   * @return cannedAccessControlList
   */
  @javax.annotation.Nullable
  public S3CannedAccessControlList getCannedAccessControlList() {
    return cannedAccessControlList;
  }

  public void setCannedAccessControlList(S3CannedAccessControlList cannedAccessControlList) {
    this.cannedAccessControlList = cannedAccessControlList;
  }


  public CreateJobRequestOperationS3PutObjectCopy accessControlGrants(List accessControlGrants) {
    this.accessControlGrants = accessControlGrants;
    return this;
  }

  /**
   * Get accessControlGrants
   * @return accessControlGrants
   */
  @javax.annotation.Nullable
  public List getAccessControlGrants() {
    return accessControlGrants;
  }

  public void setAccessControlGrants(List accessControlGrants) {
    this.accessControlGrants = accessControlGrants;
  }


  public CreateJobRequestOperationS3PutObjectCopy metadataDirective(S3MetadataDirective metadataDirective) {
    this.metadataDirective = metadataDirective;
    return this;
  }

  /**
   * Get metadataDirective
   * @return metadataDirective
   */
  @javax.annotation.Nullable
  public S3MetadataDirective getMetadataDirective() {
    return metadataDirective;
  }

  public void setMetadataDirective(S3MetadataDirective metadataDirective) {
    this.metadataDirective = metadataDirective;
  }


  public CreateJobRequestOperationS3PutObjectCopy modifiedSinceConstraint(OffsetDateTime modifiedSinceConstraint) {
    this.modifiedSinceConstraint = modifiedSinceConstraint;
    return this;
  }

  /**
   * Get modifiedSinceConstraint
   * @return modifiedSinceConstraint
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModifiedSinceConstraint() {
    return modifiedSinceConstraint;
  }

  public void setModifiedSinceConstraint(OffsetDateTime modifiedSinceConstraint) {
    this.modifiedSinceConstraint = modifiedSinceConstraint;
  }


  public CreateJobRequestOperationS3PutObjectCopy newObjectMetadata(S3CopyObjectOperationNewObjectMetadata newObjectMetadata) {
    this.newObjectMetadata = newObjectMetadata;
    return this;
  }

  /**
   * Get newObjectMetadata
   * @return newObjectMetadata
   */
  @javax.annotation.Nullable
  public S3CopyObjectOperationNewObjectMetadata getNewObjectMetadata() {
    return newObjectMetadata;
  }

  public void setNewObjectMetadata(S3CopyObjectOperationNewObjectMetadata newObjectMetadata) {
    this.newObjectMetadata = newObjectMetadata;
  }


  public CreateJobRequestOperationS3PutObjectCopy newObjectTagging(List newObjectTagging) {
    this.newObjectTagging = newObjectTagging;
    return this;
  }

  /**
   * Get newObjectTagging
   * @return newObjectTagging
   */
  @javax.annotation.Nullable
  public List getNewObjectTagging() {
    return newObjectTagging;
  }

  public void setNewObjectTagging(List newObjectTagging) {
    this.newObjectTagging = newObjectTagging;
  }


  public CreateJobRequestOperationS3PutObjectCopy redirectLocation(String redirectLocation) {
    this.redirectLocation = redirectLocation;
    return this;
  }

  /**
   * Get redirectLocation
   * @return redirectLocation
   */
  @javax.annotation.Nullable
  public String getRedirectLocation() {
    return redirectLocation;
  }

  public void setRedirectLocation(String redirectLocation) {
    this.redirectLocation = redirectLocation;
  }


  public CreateJobRequestOperationS3PutObjectCopy requesterPays(Boolean requesterPays) {
    this.requesterPays = requesterPays;
    return this;
  }

  /**
   * Get requesterPays
   * @return requesterPays
   */
  @javax.annotation.Nullable
  public Boolean getRequesterPays() {
    return requesterPays;
  }

  public void setRequesterPays(Boolean requesterPays) {
    this.requesterPays = requesterPays;
  }


  public CreateJobRequestOperationS3PutObjectCopy storageClass(S3StorageClass storageClass) {
    this.storageClass = storageClass;
    return this;
  }

  /**
   * Get storageClass
   * @return storageClass
   */
  @javax.annotation.Nullable
  public S3StorageClass getStorageClass() {
    return storageClass;
  }

  public void setStorageClass(S3StorageClass storageClass) {
    this.storageClass = storageClass;
  }


  public CreateJobRequestOperationS3PutObjectCopy unModifiedSinceConstraint(OffsetDateTime unModifiedSinceConstraint) {
    this.unModifiedSinceConstraint = unModifiedSinceConstraint;
    return this;
  }

  /**
   * Get unModifiedSinceConstraint
   * @return unModifiedSinceConstraint
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUnModifiedSinceConstraint() {
    return unModifiedSinceConstraint;
  }

  public void setUnModifiedSinceConstraint(OffsetDateTime unModifiedSinceConstraint) {
    this.unModifiedSinceConstraint = unModifiedSinceConstraint;
  }


  public CreateJobRequestOperationS3PutObjectCopy ssEAwsKmsKeyId(String ssEAwsKmsKeyId) {
    this.ssEAwsKmsKeyId = ssEAwsKmsKeyId;
    return this;
  }

  /**
   * Get ssEAwsKmsKeyId
   * @return ssEAwsKmsKeyId
   */
  @javax.annotation.Nullable
  public String getSsEAwsKmsKeyId() {
    return ssEAwsKmsKeyId;
  }

  public void setSsEAwsKmsKeyId(String ssEAwsKmsKeyId) {
    this.ssEAwsKmsKeyId = ssEAwsKmsKeyId;
  }


  public CreateJobRequestOperationS3PutObjectCopy targetKeyPrefix(String targetKeyPrefix) {
    this.targetKeyPrefix = targetKeyPrefix;
    return this;
  }

  /**
   * Get targetKeyPrefix
   * @return targetKeyPrefix
   */
  @javax.annotation.Nullable
  public String getTargetKeyPrefix() {
    return targetKeyPrefix;
  }

  public void setTargetKeyPrefix(String targetKeyPrefix) {
    this.targetKeyPrefix = targetKeyPrefix;
  }


  public CreateJobRequestOperationS3PutObjectCopy objectLockLegalHoldStatus(S3ObjectLockLegalHoldStatus objectLockLegalHoldStatus) {
    this.objectLockLegalHoldStatus = objectLockLegalHoldStatus;
    return this;
  }

  /**
   * Get objectLockLegalHoldStatus
   * @return objectLockLegalHoldStatus
   */
  @javax.annotation.Nullable
  public S3ObjectLockLegalHoldStatus getObjectLockLegalHoldStatus() {
    return objectLockLegalHoldStatus;
  }

  public void setObjectLockLegalHoldStatus(S3ObjectLockLegalHoldStatus objectLockLegalHoldStatus) {
    this.objectLockLegalHoldStatus = objectLockLegalHoldStatus;
  }


  public CreateJobRequestOperationS3PutObjectCopy objectLockMode(S3ObjectLockMode objectLockMode) {
    this.objectLockMode = objectLockMode;
    return this;
  }

  /**
   * Get objectLockMode
   * @return objectLockMode
   */
  @javax.annotation.Nullable
  public S3ObjectLockMode getObjectLockMode() {
    return objectLockMode;
  }

  public void setObjectLockMode(S3ObjectLockMode objectLockMode) {
    this.objectLockMode = objectLockMode;
  }


  public CreateJobRequestOperationS3PutObjectCopy objectLockRetainUntilDate(OffsetDateTime objectLockRetainUntilDate) {
    this.objectLockRetainUntilDate = objectLockRetainUntilDate;
    return this;
  }

  /**
   * Get objectLockRetainUntilDate
   * @return objectLockRetainUntilDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getObjectLockRetainUntilDate() {
    return objectLockRetainUntilDate;
  }

  public void setObjectLockRetainUntilDate(OffsetDateTime objectLockRetainUntilDate) {
    this.objectLockRetainUntilDate = objectLockRetainUntilDate;
  }


  public CreateJobRequestOperationS3PutObjectCopy bucketKeyEnabled(Boolean bucketKeyEnabled) {
    this.bucketKeyEnabled = bucketKeyEnabled;
    return this;
  }

  /**
   * Get bucketKeyEnabled
   * @return bucketKeyEnabled
   */
  @javax.annotation.Nullable
  public Boolean getBucketKeyEnabled() {
    return bucketKeyEnabled;
  }

  public void setBucketKeyEnabled(Boolean bucketKeyEnabled) {
    this.bucketKeyEnabled = bucketKeyEnabled;
  }


  public CreateJobRequestOperationS3PutObjectCopy checksumAlgorithm(S3ChecksumAlgorithm checksumAlgorithm) {
    this.checksumAlgorithm = checksumAlgorithm;
    return this;
  }

  /**
   * Get checksumAlgorithm
   * @return checksumAlgorithm
   */
  @javax.annotation.Nullable
  public S3ChecksumAlgorithm getChecksumAlgorithm() {
    return checksumAlgorithm;
  }

  public void setChecksumAlgorithm(S3ChecksumAlgorithm checksumAlgorithm) {
    this.checksumAlgorithm = checksumAlgorithm;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateJobRequestOperationS3PutObjectCopy createJobRequestOperationS3PutObjectCopy = (CreateJobRequestOperationS3PutObjectCopy) o;
    return Objects.equals(this.targetResource, createJobRequestOperationS3PutObjectCopy.targetResource) &&
        Objects.equals(this.cannedAccessControlList, createJobRequestOperationS3PutObjectCopy.cannedAccessControlList) &&
        Objects.equals(this.accessControlGrants, createJobRequestOperationS3PutObjectCopy.accessControlGrants) &&
        Objects.equals(this.metadataDirective, createJobRequestOperationS3PutObjectCopy.metadataDirective) &&
        Objects.equals(this.modifiedSinceConstraint, createJobRequestOperationS3PutObjectCopy.modifiedSinceConstraint) &&
        Objects.equals(this.newObjectMetadata, createJobRequestOperationS3PutObjectCopy.newObjectMetadata) &&
        Objects.equals(this.newObjectTagging, createJobRequestOperationS3PutObjectCopy.newObjectTagging) &&
        Objects.equals(this.redirectLocation, createJobRequestOperationS3PutObjectCopy.redirectLocation) &&
        Objects.equals(this.requesterPays, createJobRequestOperationS3PutObjectCopy.requesterPays) &&
        Objects.equals(this.storageClass, createJobRequestOperationS3PutObjectCopy.storageClass) &&
        Objects.equals(this.unModifiedSinceConstraint, createJobRequestOperationS3PutObjectCopy.unModifiedSinceConstraint) &&
        Objects.equals(this.ssEAwsKmsKeyId, createJobRequestOperationS3PutObjectCopy.ssEAwsKmsKeyId) &&
        Objects.equals(this.targetKeyPrefix, createJobRequestOperationS3PutObjectCopy.targetKeyPrefix) &&
        Objects.equals(this.objectLockLegalHoldStatus, createJobRequestOperationS3PutObjectCopy.objectLockLegalHoldStatus) &&
        Objects.equals(this.objectLockMode, createJobRequestOperationS3PutObjectCopy.objectLockMode) &&
        Objects.equals(this.objectLockRetainUntilDate, createJobRequestOperationS3PutObjectCopy.objectLockRetainUntilDate) &&
        Objects.equals(this.bucketKeyEnabled, createJobRequestOperationS3PutObjectCopy.bucketKeyEnabled) &&
        Objects.equals(this.checksumAlgorithm, createJobRequestOperationS3PutObjectCopy.checksumAlgorithm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(targetResource, cannedAccessControlList, accessControlGrants, metadataDirective, modifiedSinceConstraint, newObjectMetadata, newObjectTagging, redirectLocation, requesterPays, storageClass, unModifiedSinceConstraint, ssEAwsKmsKeyId, targetKeyPrefix, objectLockLegalHoldStatus, objectLockMode, objectLockRetainUntilDate, bucketKeyEnabled, checksumAlgorithm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateJobRequestOperationS3PutObjectCopy {\n");
    sb.append("    targetResource: ").append(toIndentedString(targetResource)).append("\n");
    sb.append("    cannedAccessControlList: ").append(toIndentedString(cannedAccessControlList)).append("\n");
    sb.append("    accessControlGrants: ").append(toIndentedString(accessControlGrants)).append("\n");
    sb.append("    metadataDirective: ").append(toIndentedString(metadataDirective)).append("\n");
    sb.append("    modifiedSinceConstraint: ").append(toIndentedString(modifiedSinceConstraint)).append("\n");
    sb.append("    newObjectMetadata: ").append(toIndentedString(newObjectMetadata)).append("\n");
    sb.append("    newObjectTagging: ").append(toIndentedString(newObjectTagging)).append("\n");
    sb.append("    redirectLocation: ").append(toIndentedString(redirectLocation)).append("\n");
    sb.append("    requesterPays: ").append(toIndentedString(requesterPays)).append("\n");
    sb.append("    storageClass: ").append(toIndentedString(storageClass)).append("\n");
    sb.append("    unModifiedSinceConstraint: ").append(toIndentedString(unModifiedSinceConstraint)).append("\n");
    sb.append("    ssEAwsKmsKeyId: ").append(toIndentedString(ssEAwsKmsKeyId)).append("\n");
    sb.append("    targetKeyPrefix: ").append(toIndentedString(targetKeyPrefix)).append("\n");
    sb.append("    objectLockLegalHoldStatus: ").append(toIndentedString(objectLockLegalHoldStatus)).append("\n");
    sb.append("    objectLockMode: ").append(toIndentedString(objectLockMode)).append("\n");
    sb.append("    objectLockRetainUntilDate: ").append(toIndentedString(objectLockRetainUntilDate)).append("\n");
    sb.append("    bucketKeyEnabled: ").append(toIndentedString(bucketKeyEnabled)).append("\n");
    sb.append("    checksumAlgorithm: ").append(toIndentedString(checksumAlgorithm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TargetResource");
    openapiFields.add("CannedAccessControlList");
    openapiFields.add("AccessControlGrants");
    openapiFields.add("MetadataDirective");
    openapiFields.add("ModifiedSinceConstraint");
    openapiFields.add("NewObjectMetadata");
    openapiFields.add("NewObjectTagging");
    openapiFields.add("RedirectLocation");
    openapiFields.add("RequesterPays");
    openapiFields.add("StorageClass");
    openapiFields.add("UnModifiedSinceConstraint");
    openapiFields.add("SSEAwsKmsKeyId");
    openapiFields.add("TargetKeyPrefix");
    openapiFields.add("ObjectLockLegalHoldStatus");
    openapiFields.add("ObjectLockMode");
    openapiFields.add("ObjectLockRetainUntilDate");
    openapiFields.add("BucketKeyEnabled");
    openapiFields.add("ChecksumAlgorithm");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateJobRequestOperationS3PutObjectCopy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateJobRequestOperationS3PutObjectCopy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateJobRequestOperationS3PutObjectCopy is not found in the empty JSON string", CreateJobRequestOperationS3PutObjectCopy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateJobRequestOperationS3PutObjectCopy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateJobRequestOperationS3PutObjectCopy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TargetResource`
      if (jsonObj.get("TargetResource") != null && !jsonObj.get("TargetResource").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TargetResource"));
      }
      // validate the optional field `CannedAccessControlList`
      if (jsonObj.get("CannedAccessControlList") != null && !jsonObj.get("CannedAccessControlList").isJsonNull()) {
        S3CannedAccessControlList.validateJsonElement(jsonObj.get("CannedAccessControlList"));
      }
      // validate the optional field `AccessControlGrants`
      if (jsonObj.get("AccessControlGrants") != null && !jsonObj.get("AccessControlGrants").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AccessControlGrants"));
      }
      // validate the optional field `MetadataDirective`
      if (jsonObj.get("MetadataDirective") != null && !jsonObj.get("MetadataDirective").isJsonNull()) {
        S3MetadataDirective.validateJsonElement(jsonObj.get("MetadataDirective"));
      }
      // validate the optional field `ModifiedSinceConstraint`
      if (jsonObj.get("ModifiedSinceConstraint") != null && !jsonObj.get("ModifiedSinceConstraint").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ModifiedSinceConstraint"));
      }
      // validate the optional field `NewObjectMetadata`
      if (jsonObj.get("NewObjectMetadata") != null && !jsonObj.get("NewObjectMetadata").isJsonNull()) {
        S3CopyObjectOperationNewObjectMetadata.validateJsonElement(jsonObj.get("NewObjectMetadata"));
      }
      // validate the optional field `NewObjectTagging`
      if (jsonObj.get("NewObjectTagging") != null && !jsonObj.get("NewObjectTagging").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NewObjectTagging"));
      }
      // validate the optional field `RedirectLocation`
      if (jsonObj.get("RedirectLocation") != null && !jsonObj.get("RedirectLocation").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RedirectLocation"));
      }
      // validate the optional field `RequesterPays`
      if (jsonObj.get("RequesterPays") != null && !jsonObj.get("RequesterPays").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("RequesterPays"));
      }
      // validate the optional field `StorageClass`
      if (jsonObj.get("StorageClass") != null && !jsonObj.get("StorageClass").isJsonNull()) {
        S3StorageClass.validateJsonElement(jsonObj.get("StorageClass"));
      }
      // validate the optional field `UnModifiedSinceConstraint`
      if (jsonObj.get("UnModifiedSinceConstraint") != null && !jsonObj.get("UnModifiedSinceConstraint").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("UnModifiedSinceConstraint"));
      }
      // validate the optional field `SSEAwsKmsKeyId`
      if (jsonObj.get("SSEAwsKmsKeyId") != null && !jsonObj.get("SSEAwsKmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SSEAwsKmsKeyId"));
      }
      // validate the optional field `TargetKeyPrefix`
      if (jsonObj.get("TargetKeyPrefix") != null && !jsonObj.get("TargetKeyPrefix").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TargetKeyPrefix"));
      }
      // validate the optional field `ObjectLockLegalHoldStatus`
      if (jsonObj.get("ObjectLockLegalHoldStatus") != null && !jsonObj.get("ObjectLockLegalHoldStatus").isJsonNull()) {
        S3ObjectLockLegalHoldStatus.validateJsonElement(jsonObj.get("ObjectLockLegalHoldStatus"));
      }
      // validate the optional field `ObjectLockMode`
      if (jsonObj.get("ObjectLockMode") != null && !jsonObj.get("ObjectLockMode").isJsonNull()) {
        S3ObjectLockMode.validateJsonElement(jsonObj.get("ObjectLockMode"));
      }
      // validate the optional field `ObjectLockRetainUntilDate`
      if (jsonObj.get("ObjectLockRetainUntilDate") != null && !jsonObj.get("ObjectLockRetainUntilDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ObjectLockRetainUntilDate"));
      }
      // validate the optional field `BucketKeyEnabled`
      if (jsonObj.get("BucketKeyEnabled") != null && !jsonObj.get("BucketKeyEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("BucketKeyEnabled"));
      }
      // validate the optional field `ChecksumAlgorithm`
      if (jsonObj.get("ChecksumAlgorithm") != null && !jsonObj.get("ChecksumAlgorithm").isJsonNull()) {
        S3ChecksumAlgorithm.validateJsonElement(jsonObj.get("ChecksumAlgorithm"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateJobRequestOperationS3PutObjectCopy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateJobRequestOperationS3PutObjectCopy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateJobRequestOperationS3PutObjectCopy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateJobRequestOperationS3PutObjectCopy.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateJobRequestOperationS3PutObjectCopy>() {
           @Override
           public void write(JsonWriter out, CreateJobRequestOperationS3PutObjectCopy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateJobRequestOperationS3PutObjectCopy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateJobRequestOperationS3PutObjectCopy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateJobRequestOperationS3PutObjectCopy
   * @throws IOException if the JSON string is invalid with respect to CreateJobRequestOperationS3PutObjectCopy
   */
  public static CreateJobRequestOperationS3PutObjectCopy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateJobRequestOperationS3PutObjectCopy.class);
  }

  /**
   * Convert an instance of CreateJobRequestOperationS3PutObjectCopy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

