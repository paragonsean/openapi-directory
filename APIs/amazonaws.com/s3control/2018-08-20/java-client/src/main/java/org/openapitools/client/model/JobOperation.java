/*
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateJobRequestOperationLambdaInvoke;
import org.openapitools.client.model.CreateJobRequestOperationS3InitiateRestoreObject;
import org.openapitools.client.model.CreateJobRequestOperationS3PutObjectAcl;
import org.openapitools.client.model.CreateJobRequestOperationS3PutObjectCopy;
import org.openapitools.client.model.CreateJobRequestOperationS3PutObjectTagging;
import org.openapitools.client.model.S3SetObjectLegalHoldOperation;
import org.openapitools.client.model.S3SetObjectRetentionOperation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The operation that you want this job to perform on every object listed in the manifest. For more information about the available operations, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-operations.html\&quot;&gt;Operations&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:46.356577-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class JobOperation {
  public static final String SERIALIZED_NAME_LAMBDA_INVOKE = "LambdaInvoke";
  @SerializedName(SERIALIZED_NAME_LAMBDA_INVOKE)
  private CreateJobRequestOperationLambdaInvoke lambdaInvoke;

  public static final String SERIALIZED_NAME_S3_PUT_OBJECT_COPY = "S3PutObjectCopy";
  @SerializedName(SERIALIZED_NAME_S3_PUT_OBJECT_COPY)
  private CreateJobRequestOperationS3PutObjectCopy s3PutObjectCopy;

  public static final String SERIALIZED_NAME_S3_PUT_OBJECT_ACL = "S3PutObjectAcl";
  @SerializedName(SERIALIZED_NAME_S3_PUT_OBJECT_ACL)
  private CreateJobRequestOperationS3PutObjectAcl s3PutObjectAcl;

  public static final String SERIALIZED_NAME_S3_PUT_OBJECT_TAGGING = "S3PutObjectTagging";
  @SerializedName(SERIALIZED_NAME_S3_PUT_OBJECT_TAGGING)
  private CreateJobRequestOperationS3PutObjectTagging s3PutObjectTagging;

  public static final String SERIALIZED_NAME_S3_DELETE_OBJECT_TAGGING = "S3DeleteObjectTagging";
  @SerializedName(SERIALIZED_NAME_S3_DELETE_OBJECT_TAGGING)
  private Object s3DeleteObjectTagging;

  public static final String SERIALIZED_NAME_S3_INITIATE_RESTORE_OBJECT = "S3InitiateRestoreObject";
  @SerializedName(SERIALIZED_NAME_S3_INITIATE_RESTORE_OBJECT)
  private CreateJobRequestOperationS3InitiateRestoreObject s3InitiateRestoreObject;

  public static final String SERIALIZED_NAME_S3_PUT_OBJECT_LEGAL_HOLD = "S3PutObjectLegalHold";
  @SerializedName(SERIALIZED_NAME_S3_PUT_OBJECT_LEGAL_HOLD)
  private S3SetObjectLegalHoldOperation s3PutObjectLegalHold;

  public static final String SERIALIZED_NAME_S3_PUT_OBJECT_RETENTION = "S3PutObjectRetention";
  @SerializedName(SERIALIZED_NAME_S3_PUT_OBJECT_RETENTION)
  private S3SetObjectRetentionOperation s3PutObjectRetention;

  public static final String SERIALIZED_NAME_S3_REPLICATE_OBJECT = "S3ReplicateObject";
  @SerializedName(SERIALIZED_NAME_S3_REPLICATE_OBJECT)
  private Object s3ReplicateObject;

  public JobOperation() {
  }

  public JobOperation lambdaInvoke(CreateJobRequestOperationLambdaInvoke lambdaInvoke) {
    this.lambdaInvoke = lambdaInvoke;
    return this;
  }

  /**
   * Get lambdaInvoke
   * @return lambdaInvoke
   */
  @javax.annotation.Nullable
  public CreateJobRequestOperationLambdaInvoke getLambdaInvoke() {
    return lambdaInvoke;
  }

  public void setLambdaInvoke(CreateJobRequestOperationLambdaInvoke lambdaInvoke) {
    this.lambdaInvoke = lambdaInvoke;
  }


  public JobOperation s3PutObjectCopy(CreateJobRequestOperationS3PutObjectCopy s3PutObjectCopy) {
    this.s3PutObjectCopy = s3PutObjectCopy;
    return this;
  }

  /**
   * Get s3PutObjectCopy
   * @return s3PutObjectCopy
   */
  @javax.annotation.Nullable
  public CreateJobRequestOperationS3PutObjectCopy getS3PutObjectCopy() {
    return s3PutObjectCopy;
  }

  public void setS3PutObjectCopy(CreateJobRequestOperationS3PutObjectCopy s3PutObjectCopy) {
    this.s3PutObjectCopy = s3PutObjectCopy;
  }


  public JobOperation s3PutObjectAcl(CreateJobRequestOperationS3PutObjectAcl s3PutObjectAcl) {
    this.s3PutObjectAcl = s3PutObjectAcl;
    return this;
  }

  /**
   * Get s3PutObjectAcl
   * @return s3PutObjectAcl
   */
  @javax.annotation.Nullable
  public CreateJobRequestOperationS3PutObjectAcl getS3PutObjectAcl() {
    return s3PutObjectAcl;
  }

  public void setS3PutObjectAcl(CreateJobRequestOperationS3PutObjectAcl s3PutObjectAcl) {
    this.s3PutObjectAcl = s3PutObjectAcl;
  }


  public JobOperation s3PutObjectTagging(CreateJobRequestOperationS3PutObjectTagging s3PutObjectTagging) {
    this.s3PutObjectTagging = s3PutObjectTagging;
    return this;
  }

  /**
   * Get s3PutObjectTagging
   * @return s3PutObjectTagging
   */
  @javax.annotation.Nullable
  public CreateJobRequestOperationS3PutObjectTagging getS3PutObjectTagging() {
    return s3PutObjectTagging;
  }

  public void setS3PutObjectTagging(CreateJobRequestOperationS3PutObjectTagging s3PutObjectTagging) {
    this.s3PutObjectTagging = s3PutObjectTagging;
  }


  public JobOperation s3DeleteObjectTagging(Object s3DeleteObjectTagging) {
    this.s3DeleteObjectTagging = s3DeleteObjectTagging;
    return this;
  }

  /**
   * Get s3DeleteObjectTagging
   * @return s3DeleteObjectTagging
   */
  @javax.annotation.Nullable
  public Object getS3DeleteObjectTagging() {
    return s3DeleteObjectTagging;
  }

  public void setS3DeleteObjectTagging(Object s3DeleteObjectTagging) {
    this.s3DeleteObjectTagging = s3DeleteObjectTagging;
  }


  public JobOperation s3InitiateRestoreObject(CreateJobRequestOperationS3InitiateRestoreObject s3InitiateRestoreObject) {
    this.s3InitiateRestoreObject = s3InitiateRestoreObject;
    return this;
  }

  /**
   * Get s3InitiateRestoreObject
   * @return s3InitiateRestoreObject
   */
  @javax.annotation.Nullable
  public CreateJobRequestOperationS3InitiateRestoreObject getS3InitiateRestoreObject() {
    return s3InitiateRestoreObject;
  }

  public void setS3InitiateRestoreObject(CreateJobRequestOperationS3InitiateRestoreObject s3InitiateRestoreObject) {
    this.s3InitiateRestoreObject = s3InitiateRestoreObject;
  }


  public JobOperation s3PutObjectLegalHold(S3SetObjectLegalHoldOperation s3PutObjectLegalHold) {
    this.s3PutObjectLegalHold = s3PutObjectLegalHold;
    return this;
  }

  /**
   * Get s3PutObjectLegalHold
   * @return s3PutObjectLegalHold
   */
  @javax.annotation.Nullable
  public S3SetObjectLegalHoldOperation getS3PutObjectLegalHold() {
    return s3PutObjectLegalHold;
  }

  public void setS3PutObjectLegalHold(S3SetObjectLegalHoldOperation s3PutObjectLegalHold) {
    this.s3PutObjectLegalHold = s3PutObjectLegalHold;
  }


  public JobOperation s3PutObjectRetention(S3SetObjectRetentionOperation s3PutObjectRetention) {
    this.s3PutObjectRetention = s3PutObjectRetention;
    return this;
  }

  /**
   * Get s3PutObjectRetention
   * @return s3PutObjectRetention
   */
  @javax.annotation.Nullable
  public S3SetObjectRetentionOperation getS3PutObjectRetention() {
    return s3PutObjectRetention;
  }

  public void setS3PutObjectRetention(S3SetObjectRetentionOperation s3PutObjectRetention) {
    this.s3PutObjectRetention = s3PutObjectRetention;
  }


  public JobOperation s3ReplicateObject(Object s3ReplicateObject) {
    this.s3ReplicateObject = s3ReplicateObject;
    return this;
  }

  /**
   * Get s3ReplicateObject
   * @return s3ReplicateObject
   */
  @javax.annotation.Nullable
  public Object getS3ReplicateObject() {
    return s3ReplicateObject;
  }

  public void setS3ReplicateObject(Object s3ReplicateObject) {
    this.s3ReplicateObject = s3ReplicateObject;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobOperation jobOperation = (JobOperation) o;
    return Objects.equals(this.lambdaInvoke, jobOperation.lambdaInvoke) &&
        Objects.equals(this.s3PutObjectCopy, jobOperation.s3PutObjectCopy) &&
        Objects.equals(this.s3PutObjectAcl, jobOperation.s3PutObjectAcl) &&
        Objects.equals(this.s3PutObjectTagging, jobOperation.s3PutObjectTagging) &&
        Objects.equals(this.s3DeleteObjectTagging, jobOperation.s3DeleteObjectTagging) &&
        Objects.equals(this.s3InitiateRestoreObject, jobOperation.s3InitiateRestoreObject) &&
        Objects.equals(this.s3PutObjectLegalHold, jobOperation.s3PutObjectLegalHold) &&
        Objects.equals(this.s3PutObjectRetention, jobOperation.s3PutObjectRetention) &&
        Objects.equals(this.s3ReplicateObject, jobOperation.s3ReplicateObject);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lambdaInvoke, s3PutObjectCopy, s3PutObjectAcl, s3PutObjectTagging, s3DeleteObjectTagging, s3InitiateRestoreObject, s3PutObjectLegalHold, s3PutObjectRetention, s3ReplicateObject);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobOperation {\n");
    sb.append("    lambdaInvoke: ").append(toIndentedString(lambdaInvoke)).append("\n");
    sb.append("    s3PutObjectCopy: ").append(toIndentedString(s3PutObjectCopy)).append("\n");
    sb.append("    s3PutObjectAcl: ").append(toIndentedString(s3PutObjectAcl)).append("\n");
    sb.append("    s3PutObjectTagging: ").append(toIndentedString(s3PutObjectTagging)).append("\n");
    sb.append("    s3DeleteObjectTagging: ").append(toIndentedString(s3DeleteObjectTagging)).append("\n");
    sb.append("    s3InitiateRestoreObject: ").append(toIndentedString(s3InitiateRestoreObject)).append("\n");
    sb.append("    s3PutObjectLegalHold: ").append(toIndentedString(s3PutObjectLegalHold)).append("\n");
    sb.append("    s3PutObjectRetention: ").append(toIndentedString(s3PutObjectRetention)).append("\n");
    sb.append("    s3ReplicateObject: ").append(toIndentedString(s3ReplicateObject)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LambdaInvoke");
    openapiFields.add("S3PutObjectCopy");
    openapiFields.add("S3PutObjectAcl");
    openapiFields.add("S3PutObjectTagging");
    openapiFields.add("S3DeleteObjectTagging");
    openapiFields.add("S3InitiateRestoreObject");
    openapiFields.add("S3PutObjectLegalHold");
    openapiFields.add("S3PutObjectRetention");
    openapiFields.add("S3ReplicateObject");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to JobOperation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!JobOperation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobOperation is not found in the empty JSON string", JobOperation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!JobOperation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JobOperation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `LambdaInvoke`
      if (jsonObj.get("LambdaInvoke") != null && !jsonObj.get("LambdaInvoke").isJsonNull()) {
        CreateJobRequestOperationLambdaInvoke.validateJsonElement(jsonObj.get("LambdaInvoke"));
      }
      // validate the optional field `S3PutObjectCopy`
      if (jsonObj.get("S3PutObjectCopy") != null && !jsonObj.get("S3PutObjectCopy").isJsonNull()) {
        CreateJobRequestOperationS3PutObjectCopy.validateJsonElement(jsonObj.get("S3PutObjectCopy"));
      }
      // validate the optional field `S3PutObjectAcl`
      if (jsonObj.get("S3PutObjectAcl") != null && !jsonObj.get("S3PutObjectAcl").isJsonNull()) {
        CreateJobRequestOperationS3PutObjectAcl.validateJsonElement(jsonObj.get("S3PutObjectAcl"));
      }
      // validate the optional field `S3PutObjectTagging`
      if (jsonObj.get("S3PutObjectTagging") != null && !jsonObj.get("S3PutObjectTagging").isJsonNull()) {
        CreateJobRequestOperationS3PutObjectTagging.validateJsonElement(jsonObj.get("S3PutObjectTagging"));
      }
      // validate the optional field `S3DeleteObjectTagging`
      if (jsonObj.get("S3DeleteObjectTagging") != null && !jsonObj.get("S3DeleteObjectTagging").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("S3DeleteObjectTagging"));
      }
      // validate the optional field `S3InitiateRestoreObject`
      if (jsonObj.get("S3InitiateRestoreObject") != null && !jsonObj.get("S3InitiateRestoreObject").isJsonNull()) {
        CreateJobRequestOperationS3InitiateRestoreObject.validateJsonElement(jsonObj.get("S3InitiateRestoreObject"));
      }
      // validate the optional field `S3PutObjectLegalHold`
      if (jsonObj.get("S3PutObjectLegalHold") != null && !jsonObj.get("S3PutObjectLegalHold").isJsonNull()) {
        S3SetObjectLegalHoldOperation.validateJsonElement(jsonObj.get("S3PutObjectLegalHold"));
      }
      // validate the optional field `S3PutObjectRetention`
      if (jsonObj.get("S3PutObjectRetention") != null && !jsonObj.get("S3PutObjectRetention").isJsonNull()) {
        S3SetObjectRetentionOperation.validateJsonElement(jsonObj.get("S3PutObjectRetention"));
      }
      // validate the optional field `S3ReplicateObject`
      if (jsonObj.get("S3ReplicateObject") != null && !jsonObj.get("S3ReplicateObject").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("S3ReplicateObject"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobOperation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobOperation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobOperation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobOperation.class));

       return (TypeAdapter<T>) new TypeAdapter<JobOperation>() {
           @Override
           public void write(JsonWriter out, JobOperation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JobOperation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of JobOperation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of JobOperation
   * @throws IOException if the JSON string is invalid with respect to JobOperation
   */
  public static JobOperation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobOperation.class);
  }

  /**
   * Convert an instance of JobOperation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

