/*
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:46.356577-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner {
  public static final String SERIALIZED_NAME_BUCKET = "Bucket";
  @SerializedName(SERIALIZED_NAME_BUCKET)
  private String bucket;

  public static final String SERIALIZED_NAME_REGION = "Region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_TRAFFIC_DIAL_PERCENTAGE = "TrafficDialPercentage";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_DIAL_PERCENTAGE)
  private Integer trafficDialPercentage;

  public SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner() {
  }

  public SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner bucket(String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Get bucket
   * @return bucket
   */
  @javax.annotation.Nullable
  public String getBucket() {
    return bucket;
  }

  public void setBucket(String bucket) {
    this.bucket = bucket;
  }


  public SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner trafficDialPercentage(Integer trafficDialPercentage) {
    this.trafficDialPercentage = trafficDialPercentage;
    return this;
  }

  /**
   * Get trafficDialPercentage
   * @return trafficDialPercentage
   */
  @javax.annotation.Nonnull
  public Integer getTrafficDialPercentage() {
    return trafficDialPercentage;
  }

  public void setTrafficDialPercentage(Integer trafficDialPercentage) {
    this.trafficDialPercentage = trafficDialPercentage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner submitMultiRegionAccessPointRoutesRequestRouteUpdatesInner = (SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner) o;
    return Objects.equals(this.bucket, submitMultiRegionAccessPointRoutesRequestRouteUpdatesInner.bucket) &&
        Objects.equals(this.region, submitMultiRegionAccessPointRoutesRequestRouteUpdatesInner.region) &&
        Objects.equals(this.trafficDialPercentage, submitMultiRegionAccessPointRoutesRequestRouteUpdatesInner.trafficDialPercentage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucket, region, trafficDialPercentage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner {\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    trafficDialPercentage: ").append(toIndentedString(trafficDialPercentage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Bucket");
    openapiFields.add("Region");
    openapiFields.add("TrafficDialPercentage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("TrafficDialPercentage");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner is not found in the empty JSON string", SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Bucket`
      if (jsonObj.get("Bucket") != null && !jsonObj.get("Bucket").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Bucket"));
      }
      // validate the optional field `Region`
      if (jsonObj.get("Region") != null && !jsonObj.get("Region").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Region"));
      }
      // validate the required field `TrafficDialPercentage`
      Integer.validateJsonElement(jsonObj.get("TrafficDialPercentage"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner>() {
           @Override
           public void write(JsonWriter out, SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner
   * @throws IOException if the JSON string is invalid with respect to SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner
   */
  public static SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner.class);
  }

  /**
   * Convert an instance of SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

