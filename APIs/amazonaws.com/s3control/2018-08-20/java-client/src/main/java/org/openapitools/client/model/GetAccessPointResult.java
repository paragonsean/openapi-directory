/*
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.GetAccessPointResultVpcConfiguration;
import org.openapitools.client.model.NetworkOrigin;
import org.openapitools.client.model.PublicAccessBlockConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetAccessPointResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:46.356577-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetAccessPointResult {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_BUCKET = "Bucket";
  @SerializedName(SERIALIZED_NAME_BUCKET)
  private String bucket;

  public static final String SERIALIZED_NAME_NETWORK_ORIGIN = "NetworkOrigin";
  @SerializedName(SERIALIZED_NAME_NETWORK_ORIGIN)
  private NetworkOrigin networkOrigin;

  public static final String SERIALIZED_NAME_VPC_CONFIGURATION = "VpcConfiguration";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIGURATION)
  private GetAccessPointResultVpcConfiguration vpcConfiguration;

  public static final String SERIALIZED_NAME_PUBLIC_ACCESS_BLOCK_CONFIGURATION = "PublicAccessBlockConfiguration";
  @SerializedName(SERIALIZED_NAME_PUBLIC_ACCESS_BLOCK_CONFIGURATION)
  private PublicAccessBlockConfiguration publicAccessBlockConfiguration;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_ALIAS = "Alias";
  @SerializedName(SERIALIZED_NAME_ALIAS)
  private String alias;

  public static final String SERIALIZED_NAME_ACCESS_POINT_ARN = "AccessPointArn";
  @SerializedName(SERIALIZED_NAME_ACCESS_POINT_ARN)
  private String accessPointArn;

  public static final String SERIALIZED_NAME_ENDPOINTS = "Endpoints";
  @SerializedName(SERIALIZED_NAME_ENDPOINTS)
  private Map endpoints;

  public static final String SERIALIZED_NAME_BUCKET_ACCOUNT_ID = "BucketAccountId";
  @SerializedName(SERIALIZED_NAME_BUCKET_ACCOUNT_ID)
  private String bucketAccountId;

  public GetAccessPointResult() {
  }

  public GetAccessPointResult name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetAccessPointResult bucket(String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Get bucket
   * @return bucket
   */
  @javax.annotation.Nullable
  public String getBucket() {
    return bucket;
  }

  public void setBucket(String bucket) {
    this.bucket = bucket;
  }


  public GetAccessPointResult networkOrigin(NetworkOrigin networkOrigin) {
    this.networkOrigin = networkOrigin;
    return this;
  }

  /**
   * Get networkOrigin
   * @return networkOrigin
   */
  @javax.annotation.Nullable
  public NetworkOrigin getNetworkOrigin() {
    return networkOrigin;
  }

  public void setNetworkOrigin(NetworkOrigin networkOrigin) {
    this.networkOrigin = networkOrigin;
  }


  public GetAccessPointResult vpcConfiguration(GetAccessPointResultVpcConfiguration vpcConfiguration) {
    this.vpcConfiguration = vpcConfiguration;
    return this;
  }

  /**
   * Get vpcConfiguration
   * @return vpcConfiguration
   */
  @javax.annotation.Nullable
  public GetAccessPointResultVpcConfiguration getVpcConfiguration() {
    return vpcConfiguration;
  }

  public void setVpcConfiguration(GetAccessPointResultVpcConfiguration vpcConfiguration) {
    this.vpcConfiguration = vpcConfiguration;
  }


  public GetAccessPointResult publicAccessBlockConfiguration(PublicAccessBlockConfiguration publicAccessBlockConfiguration) {
    this.publicAccessBlockConfiguration = publicAccessBlockConfiguration;
    return this;
  }

  /**
   * Get publicAccessBlockConfiguration
   * @return publicAccessBlockConfiguration
   */
  @javax.annotation.Nullable
  public PublicAccessBlockConfiguration getPublicAccessBlockConfiguration() {
    return publicAccessBlockConfiguration;
  }

  public void setPublicAccessBlockConfiguration(PublicAccessBlockConfiguration publicAccessBlockConfiguration) {
    this.publicAccessBlockConfiguration = publicAccessBlockConfiguration;
  }


  public GetAccessPointResult creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public GetAccessPointResult alias(String alias) {
    this.alias = alias;
    return this;
  }

  /**
   * Get alias
   * @return alias
   */
  @javax.annotation.Nullable
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }


  public GetAccessPointResult accessPointArn(String accessPointArn) {
    this.accessPointArn = accessPointArn;
    return this;
  }

  /**
   * Get accessPointArn
   * @return accessPointArn
   */
  @javax.annotation.Nullable
  public String getAccessPointArn() {
    return accessPointArn;
  }

  public void setAccessPointArn(String accessPointArn) {
    this.accessPointArn = accessPointArn;
  }


  public GetAccessPointResult endpoints(Map endpoints) {
    this.endpoints = endpoints;
    return this;
  }

  /**
   * Get endpoints
   * @return endpoints
   */
  @javax.annotation.Nullable
  public Map getEndpoints() {
    return endpoints;
  }

  public void setEndpoints(Map endpoints) {
    this.endpoints = endpoints;
  }


  public GetAccessPointResult bucketAccountId(String bucketAccountId) {
    this.bucketAccountId = bucketAccountId;
    return this;
  }

  /**
   * Get bucketAccountId
   * @return bucketAccountId
   */
  @javax.annotation.Nullable
  public String getBucketAccountId() {
    return bucketAccountId;
  }

  public void setBucketAccountId(String bucketAccountId) {
    this.bucketAccountId = bucketAccountId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccessPointResult getAccessPointResult = (GetAccessPointResult) o;
    return Objects.equals(this.name, getAccessPointResult.name) &&
        Objects.equals(this.bucket, getAccessPointResult.bucket) &&
        Objects.equals(this.networkOrigin, getAccessPointResult.networkOrigin) &&
        Objects.equals(this.vpcConfiguration, getAccessPointResult.vpcConfiguration) &&
        Objects.equals(this.publicAccessBlockConfiguration, getAccessPointResult.publicAccessBlockConfiguration) &&
        Objects.equals(this.creationDate, getAccessPointResult.creationDate) &&
        Objects.equals(this.alias, getAccessPointResult.alias) &&
        Objects.equals(this.accessPointArn, getAccessPointResult.accessPointArn) &&
        Objects.equals(this.endpoints, getAccessPointResult.endpoints) &&
        Objects.equals(this.bucketAccountId, getAccessPointResult.bucketAccountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, bucket, networkOrigin, vpcConfiguration, publicAccessBlockConfiguration, creationDate, alias, accessPointArn, endpoints, bucketAccountId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccessPointResult {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    networkOrigin: ").append(toIndentedString(networkOrigin)).append("\n");
    sb.append("    vpcConfiguration: ").append(toIndentedString(vpcConfiguration)).append("\n");
    sb.append("    publicAccessBlockConfiguration: ").append(toIndentedString(publicAccessBlockConfiguration)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    accessPointArn: ").append(toIndentedString(accessPointArn)).append("\n");
    sb.append("    endpoints: ").append(toIndentedString(endpoints)).append("\n");
    sb.append("    bucketAccountId: ").append(toIndentedString(bucketAccountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("Bucket");
    openapiFields.add("NetworkOrigin");
    openapiFields.add("VpcConfiguration");
    openapiFields.add("PublicAccessBlockConfiguration");
    openapiFields.add("CreationDate");
    openapiFields.add("Alias");
    openapiFields.add("AccessPointArn");
    openapiFields.add("Endpoints");
    openapiFields.add("BucketAccountId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAccessPointResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAccessPointResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAccessPointResult is not found in the empty JSON string", GetAccessPointResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAccessPointResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAccessPointResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Bucket`
      if (jsonObj.get("Bucket") != null && !jsonObj.get("Bucket").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Bucket"));
      }
      // validate the optional field `NetworkOrigin`
      if (jsonObj.get("NetworkOrigin") != null && !jsonObj.get("NetworkOrigin").isJsonNull()) {
        NetworkOrigin.validateJsonElement(jsonObj.get("NetworkOrigin"));
      }
      // validate the optional field `VpcConfiguration`
      if (jsonObj.get("VpcConfiguration") != null && !jsonObj.get("VpcConfiguration").isJsonNull()) {
        GetAccessPointResultVpcConfiguration.validateJsonElement(jsonObj.get("VpcConfiguration"));
      }
      // validate the optional field `PublicAccessBlockConfiguration`
      if (jsonObj.get("PublicAccessBlockConfiguration") != null && !jsonObj.get("PublicAccessBlockConfiguration").isJsonNull()) {
        PublicAccessBlockConfiguration.validateJsonElement(jsonObj.get("PublicAccessBlockConfiguration"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `Alias`
      if (jsonObj.get("Alias") != null && !jsonObj.get("Alias").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Alias"));
      }
      // validate the optional field `AccessPointArn`
      if (jsonObj.get("AccessPointArn") != null && !jsonObj.get("AccessPointArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AccessPointArn"));
      }
      // validate the optional field `Endpoints`
      if (jsonObj.get("Endpoints") != null && !jsonObj.get("Endpoints").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Endpoints"));
      }
      // validate the optional field `BucketAccountId`
      if (jsonObj.get("BucketAccountId") != null && !jsonObj.get("BucketAccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BucketAccountId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAccessPointResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAccessPointResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAccessPointResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAccessPointResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAccessPointResult>() {
           @Override
           public void write(JsonWriter out, GetAccessPointResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAccessPointResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAccessPointResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAccessPointResult
   * @throws IOException if the JSON string is invalid with respect to GetAccessPointResult
   */
  public static GetAccessPointResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAccessPointResult.class);
  }

  /**
   * Convert an instance of GetAccessPointResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

