/*
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel;
import org.openapitools.client.model.PutStorageLensConfigurationRequestStorageLensConfigurationAwsOrg;
import org.openapitools.client.model.PutStorageLensConfigurationRequestStorageLensConfigurationDataExport;
import org.openapitools.client.model.PutStorageLensConfigurationRequestStorageLensConfigurationExclude;
import org.openapitools.client.model.PutStorageLensConfigurationRequestStorageLensConfigurationInclude;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutStorageLensConfigurationRequestStorageLensConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:46.356577-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutStorageLensConfigurationRequestStorageLensConfiguration {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ACCOUNT_LEVEL = "AccountLevel";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_LEVEL)
  private PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel accountLevel;

  public static final String SERIALIZED_NAME_INCLUDE = "Include";
  @SerializedName(SERIALIZED_NAME_INCLUDE)
  private PutStorageLensConfigurationRequestStorageLensConfigurationInclude include;

  public static final String SERIALIZED_NAME_EXCLUDE = "Exclude";
  @SerializedName(SERIALIZED_NAME_EXCLUDE)
  private PutStorageLensConfigurationRequestStorageLensConfigurationExclude exclude;

  public static final String SERIALIZED_NAME_DATA_EXPORT = "DataExport";
  @SerializedName(SERIALIZED_NAME_DATA_EXPORT)
  private PutStorageLensConfigurationRequestStorageLensConfigurationDataExport dataExport;

  public static final String SERIALIZED_NAME_IS_ENABLED = "IsEnabled";
  @SerializedName(SERIALIZED_NAME_IS_ENABLED)
  private Boolean isEnabled;

  public static final String SERIALIZED_NAME_AWS_ORG = "AwsOrg";
  @SerializedName(SERIALIZED_NAME_AWS_ORG)
  private PutStorageLensConfigurationRequestStorageLensConfigurationAwsOrg awsOrg;

  public static final String SERIALIZED_NAME_STORAGE_LENS_ARN = "StorageLensArn";
  @SerializedName(SERIALIZED_NAME_STORAGE_LENS_ARN)
  private String storageLensArn;

  public PutStorageLensConfigurationRequestStorageLensConfiguration() {
  }

  public PutStorageLensConfigurationRequestStorageLensConfiguration id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public PutStorageLensConfigurationRequestStorageLensConfiguration accountLevel(PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel accountLevel) {
    this.accountLevel = accountLevel;
    return this;
  }

  /**
   * Get accountLevel
   * @return accountLevel
   */
  @javax.annotation.Nonnull
  public PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel getAccountLevel() {
    return accountLevel;
  }

  public void setAccountLevel(PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel accountLevel) {
    this.accountLevel = accountLevel;
  }


  public PutStorageLensConfigurationRequestStorageLensConfiguration include(PutStorageLensConfigurationRequestStorageLensConfigurationInclude include) {
    this.include = include;
    return this;
  }

  /**
   * Get include
   * @return include
   */
  @javax.annotation.Nullable
  public PutStorageLensConfigurationRequestStorageLensConfigurationInclude getInclude() {
    return include;
  }

  public void setInclude(PutStorageLensConfigurationRequestStorageLensConfigurationInclude include) {
    this.include = include;
  }


  public PutStorageLensConfigurationRequestStorageLensConfiguration exclude(PutStorageLensConfigurationRequestStorageLensConfigurationExclude exclude) {
    this.exclude = exclude;
    return this;
  }

  /**
   * Get exclude
   * @return exclude
   */
  @javax.annotation.Nullable
  public PutStorageLensConfigurationRequestStorageLensConfigurationExclude getExclude() {
    return exclude;
  }

  public void setExclude(PutStorageLensConfigurationRequestStorageLensConfigurationExclude exclude) {
    this.exclude = exclude;
  }


  public PutStorageLensConfigurationRequestStorageLensConfiguration dataExport(PutStorageLensConfigurationRequestStorageLensConfigurationDataExport dataExport) {
    this.dataExport = dataExport;
    return this;
  }

  /**
   * Get dataExport
   * @return dataExport
   */
  @javax.annotation.Nullable
  public PutStorageLensConfigurationRequestStorageLensConfigurationDataExport getDataExport() {
    return dataExport;
  }

  public void setDataExport(PutStorageLensConfigurationRequestStorageLensConfigurationDataExport dataExport) {
    this.dataExport = dataExport;
  }


  public PutStorageLensConfigurationRequestStorageLensConfiguration isEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

  /**
   * Get isEnabled
   * @return isEnabled
   */
  @javax.annotation.Nonnull
  public Boolean getIsEnabled() {
    return isEnabled;
  }

  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public PutStorageLensConfigurationRequestStorageLensConfiguration awsOrg(PutStorageLensConfigurationRequestStorageLensConfigurationAwsOrg awsOrg) {
    this.awsOrg = awsOrg;
    return this;
  }

  /**
   * Get awsOrg
   * @return awsOrg
   */
  @javax.annotation.Nullable
  public PutStorageLensConfigurationRequestStorageLensConfigurationAwsOrg getAwsOrg() {
    return awsOrg;
  }

  public void setAwsOrg(PutStorageLensConfigurationRequestStorageLensConfigurationAwsOrg awsOrg) {
    this.awsOrg = awsOrg;
  }


  public PutStorageLensConfigurationRequestStorageLensConfiguration storageLensArn(String storageLensArn) {
    this.storageLensArn = storageLensArn;
    return this;
  }

  /**
   * Get storageLensArn
   * @return storageLensArn
   */
  @javax.annotation.Nullable
  public String getStorageLensArn() {
    return storageLensArn;
  }

  public void setStorageLensArn(String storageLensArn) {
    this.storageLensArn = storageLensArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutStorageLensConfigurationRequestStorageLensConfiguration putStorageLensConfigurationRequestStorageLensConfiguration = (PutStorageLensConfigurationRequestStorageLensConfiguration) o;
    return Objects.equals(this.id, putStorageLensConfigurationRequestStorageLensConfiguration.id) &&
        Objects.equals(this.accountLevel, putStorageLensConfigurationRequestStorageLensConfiguration.accountLevel) &&
        Objects.equals(this.include, putStorageLensConfigurationRequestStorageLensConfiguration.include) &&
        Objects.equals(this.exclude, putStorageLensConfigurationRequestStorageLensConfiguration.exclude) &&
        Objects.equals(this.dataExport, putStorageLensConfigurationRequestStorageLensConfiguration.dataExport) &&
        Objects.equals(this.isEnabled, putStorageLensConfigurationRequestStorageLensConfiguration.isEnabled) &&
        Objects.equals(this.awsOrg, putStorageLensConfigurationRequestStorageLensConfiguration.awsOrg) &&
        Objects.equals(this.storageLensArn, putStorageLensConfigurationRequestStorageLensConfiguration.storageLensArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, accountLevel, include, exclude, dataExport, isEnabled, awsOrg, storageLensArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutStorageLensConfigurationRequestStorageLensConfiguration {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountLevel: ").append(toIndentedString(accountLevel)).append("\n");
    sb.append("    include: ").append(toIndentedString(include)).append("\n");
    sb.append("    exclude: ").append(toIndentedString(exclude)).append("\n");
    sb.append("    dataExport: ").append(toIndentedString(dataExport)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    awsOrg: ").append(toIndentedString(awsOrg)).append("\n");
    sb.append("    storageLensArn: ").append(toIndentedString(storageLensArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("AccountLevel");
    openapiFields.add("Include");
    openapiFields.add("Exclude");
    openapiFields.add("DataExport");
    openapiFields.add("IsEnabled");
    openapiFields.add("AwsOrg");
    openapiFields.add("StorageLensArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Id");
    openapiRequiredFields.add("AccountLevel");
    openapiRequiredFields.add("IsEnabled");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutStorageLensConfigurationRequestStorageLensConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutStorageLensConfigurationRequestStorageLensConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutStorageLensConfigurationRequestStorageLensConfiguration is not found in the empty JSON string", PutStorageLensConfigurationRequestStorageLensConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutStorageLensConfigurationRequestStorageLensConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutStorageLensConfigurationRequestStorageLensConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PutStorageLensConfigurationRequestStorageLensConfiguration.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Id`
      String.validateJsonElement(jsonObj.get("Id"));
      // validate the required field `AccountLevel`
      PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel.validateJsonElement(jsonObj.get("AccountLevel"));
      // validate the optional field `Include`
      if (jsonObj.get("Include") != null && !jsonObj.get("Include").isJsonNull()) {
        PutStorageLensConfigurationRequestStorageLensConfigurationInclude.validateJsonElement(jsonObj.get("Include"));
      }
      // validate the optional field `Exclude`
      if (jsonObj.get("Exclude") != null && !jsonObj.get("Exclude").isJsonNull()) {
        PutStorageLensConfigurationRequestStorageLensConfigurationExclude.validateJsonElement(jsonObj.get("Exclude"));
      }
      // validate the optional field `DataExport`
      if (jsonObj.get("DataExport") != null && !jsonObj.get("DataExport").isJsonNull()) {
        PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.validateJsonElement(jsonObj.get("DataExport"));
      }
      // validate the required field `IsEnabled`
      Boolean.validateJsonElement(jsonObj.get("IsEnabled"));
      // validate the optional field `AwsOrg`
      if (jsonObj.get("AwsOrg") != null && !jsonObj.get("AwsOrg").isJsonNull()) {
        PutStorageLensConfigurationRequestStorageLensConfigurationAwsOrg.validateJsonElement(jsonObj.get("AwsOrg"));
      }
      // validate the optional field `StorageLensArn`
      if (jsonObj.get("StorageLensArn") != null && !jsonObj.get("StorageLensArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StorageLensArn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutStorageLensConfigurationRequestStorageLensConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutStorageLensConfigurationRequestStorageLensConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutStorageLensConfigurationRequestStorageLensConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutStorageLensConfigurationRequestStorageLensConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<PutStorageLensConfigurationRequestStorageLensConfiguration>() {
           @Override
           public void write(JsonWriter out, PutStorageLensConfigurationRequestStorageLensConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutStorageLensConfigurationRequestStorageLensConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutStorageLensConfigurationRequestStorageLensConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutStorageLensConfigurationRequestStorageLensConfiguration
   * @throws IOException if the JSON string is invalid with respect to PutStorageLensConfigurationRequestStorageLensConfiguration
   */
  public static PutStorageLensConfigurationRequestStorageLensConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutStorageLensConfigurationRequestStorageLensConfiguration.class);
  }

  /**
   * Convert an instance of PutStorageLensConfigurationRequestStorageLensConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

