# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lifecycle_rule_filter_and import LifecycleRuleFilterAnd
from openapi_server.models.s3_tag import S3Tag
from openapi_server import util


class LifecycleRuleFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prefix: str=None, tag: S3Tag=None, _and: LifecycleRuleFilterAnd=None, object_size_greater_than: int=None, object_size_less_than: int=None):
        """LifecycleRuleFilter - a model defined in OpenAPI

        :param prefix: The prefix of this LifecycleRuleFilter.
        :param tag: The tag of this LifecycleRuleFilter.
        :param _and: The _and of this LifecycleRuleFilter.
        :param object_size_greater_than: The object_size_greater_than of this LifecycleRuleFilter.
        :param object_size_less_than: The object_size_less_than of this LifecycleRuleFilter.
        """
        self.openapi_types = {
            'prefix': str,
            'tag': S3Tag,
            '_and': LifecycleRuleFilterAnd,
            'object_size_greater_than': int,
            'object_size_less_than': int
        }

        self.attribute_map = {
            'prefix': 'Prefix',
            'tag': 'Tag',
            '_and': 'And',
            'object_size_greater_than': 'ObjectSizeGreaterThan',
            'object_size_less_than': 'ObjectSizeLessThan'
        }

        self._prefix = prefix
        self._tag = tag
        self.__and = _and
        self._object_size_greater_than = object_size_greater_than
        self._object_size_less_than = object_size_less_than

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LifecycleRuleFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LifecycleRule_Filter of this LifecycleRuleFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prefix(self):
        """Gets the prefix of this LifecycleRuleFilter.


        :return: The prefix of this LifecycleRuleFilter.
        :rtype: str
        """
        return self._prefix

    @prefix.setter
    def prefix(self, prefix):
        """Sets the prefix of this LifecycleRuleFilter.


        :param prefix: The prefix of this LifecycleRuleFilter.
        :type prefix: str
        """

        self._prefix = prefix

    @property
    def tag(self):
        """Gets the tag of this LifecycleRuleFilter.


        :return: The tag of this LifecycleRuleFilter.
        :rtype: S3Tag
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this LifecycleRuleFilter.


        :param tag: The tag of this LifecycleRuleFilter.
        :type tag: S3Tag
        """

        self._tag = tag

    @property
    def _and(self):
        """Gets the _and of this LifecycleRuleFilter.


        :return: The _and of this LifecycleRuleFilter.
        :rtype: LifecycleRuleFilterAnd
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this LifecycleRuleFilter.


        :param _and: The _and of this LifecycleRuleFilter.
        :type _and: LifecycleRuleFilterAnd
        """

        self.__and = _and

    @property
    def object_size_greater_than(self):
        """Gets the object_size_greater_than of this LifecycleRuleFilter.


        :return: The object_size_greater_than of this LifecycleRuleFilter.
        :rtype: int
        """
        return self._object_size_greater_than

    @object_size_greater_than.setter
    def object_size_greater_than(self, object_size_greater_than):
        """Sets the object_size_greater_than of this LifecycleRuleFilter.


        :param object_size_greater_than: The object_size_greater_than of this LifecycleRuleFilter.
        :type object_size_greater_than: int
        """

        self._object_size_greater_than = object_size_greater_than

    @property
    def object_size_less_than(self):
        """Gets the object_size_less_than of this LifecycleRuleFilter.


        :return: The object_size_less_than of this LifecycleRuleFilter.
        :rtype: int
        """
        return self._object_size_less_than

    @object_size_less_than.setter
    def object_size_less_than(self, object_size_less_than):
        """Sets the object_size_less_than of this LifecycleRuleFilter.


        :param object_size_less_than: The object_size_less_than of this LifecycleRuleFilter.
        :type object_size_less_than: int
        """

        self._object_size_less_than = object_size_less_than
