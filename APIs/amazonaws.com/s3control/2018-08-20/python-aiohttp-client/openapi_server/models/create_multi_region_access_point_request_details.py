# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.public_access_block_configuration import PublicAccessBlockConfiguration
from openapi_server import util


class CreateMultiRegionAccessPointRequestDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, public_access_block: PublicAccessBlockConfiguration=None, regions: List=None):
        """CreateMultiRegionAccessPointRequestDetails - a model defined in OpenAPI

        :param name: The name of this CreateMultiRegionAccessPointRequestDetails.
        :param public_access_block: The public_access_block of this CreateMultiRegionAccessPointRequestDetails.
        :param regions: The regions of this CreateMultiRegionAccessPointRequestDetails.
        """
        self.openapi_types = {
            'name': str,
            'public_access_block': PublicAccessBlockConfiguration,
            'regions': List
        }

        self.attribute_map = {
            'name': 'Name',
            'public_access_block': 'PublicAccessBlock',
            'regions': 'Regions'
        }

        self._name = name
        self._public_access_block = public_access_block
        self._regions = regions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateMultiRegionAccessPointRequestDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateMultiRegionAccessPointRequest_Details of this CreateMultiRegionAccessPointRequestDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateMultiRegionAccessPointRequestDetails.


        :return: The name of this CreateMultiRegionAccessPointRequestDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateMultiRegionAccessPointRequestDetails.


        :param name: The name of this CreateMultiRegionAccessPointRequestDetails.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def public_access_block(self):
        """Gets the public_access_block of this CreateMultiRegionAccessPointRequestDetails.


        :return: The public_access_block of this CreateMultiRegionAccessPointRequestDetails.
        :rtype: PublicAccessBlockConfiguration
        """
        return self._public_access_block

    @public_access_block.setter
    def public_access_block(self, public_access_block):
        """Sets the public_access_block of this CreateMultiRegionAccessPointRequestDetails.


        :param public_access_block: The public_access_block of this CreateMultiRegionAccessPointRequestDetails.
        :type public_access_block: PublicAccessBlockConfiguration
        """

        self._public_access_block = public_access_block

    @property
    def regions(self):
        """Gets the regions of this CreateMultiRegionAccessPointRequestDetails.


        :return: The regions of this CreateMultiRegionAccessPointRequestDetails.
        :rtype: List
        """
        return self._regions

    @regions.setter
    def regions(self, regions):
        """Sets the regions of this CreateMultiRegionAccessPointRequestDetails.


        :param regions: The regions of this CreateMultiRegionAccessPointRequestDetails.
        :type regions: List
        """
        if regions is None:
            raise ValueError("Invalid value for `regions`, must not be `None`")

        self._regions = regions
