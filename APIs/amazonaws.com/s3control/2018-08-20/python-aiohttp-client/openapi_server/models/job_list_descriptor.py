# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_descriptor_progress_summary import JobDescriptorProgressSummary
from openapi_server.models.job_status import JobStatus
from openapi_server.models.operation_name import OperationName
from openapi_server import util


class JobListDescriptor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_id: str=None, description: str=None, operation: OperationName=None, priority: int=None, status: JobStatus=None, creation_time: datetime=None, termination_date: datetime=None, progress_summary: JobDescriptorProgressSummary=None):
        """JobListDescriptor - a model defined in OpenAPI

        :param job_id: The job_id of this JobListDescriptor.
        :param description: The description of this JobListDescriptor.
        :param operation: The operation of this JobListDescriptor.
        :param priority: The priority of this JobListDescriptor.
        :param status: The status of this JobListDescriptor.
        :param creation_time: The creation_time of this JobListDescriptor.
        :param termination_date: The termination_date of this JobListDescriptor.
        :param progress_summary: The progress_summary of this JobListDescriptor.
        """
        self.openapi_types = {
            'job_id': str,
            'description': str,
            'operation': OperationName,
            'priority': int,
            'status': JobStatus,
            'creation_time': datetime,
            'termination_date': datetime,
            'progress_summary': JobDescriptorProgressSummary
        }

        self.attribute_map = {
            'job_id': 'JobId',
            'description': 'Description',
            'operation': 'Operation',
            'priority': 'Priority',
            'status': 'Status',
            'creation_time': 'CreationTime',
            'termination_date': 'TerminationDate',
            'progress_summary': 'ProgressSummary'
        }

        self._job_id = job_id
        self._description = description
        self._operation = operation
        self._priority = priority
        self._status = status
        self._creation_time = creation_time
        self._termination_date = termination_date
        self._progress_summary = progress_summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobListDescriptor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobListDescriptor of this JobListDescriptor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_id(self):
        """Gets the job_id of this JobListDescriptor.


        :return: The job_id of this JobListDescriptor.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this JobListDescriptor.


        :param job_id: The job_id of this JobListDescriptor.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def description(self):
        """Gets the description of this JobListDescriptor.


        :return: The description of this JobListDescriptor.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this JobListDescriptor.


        :param description: The description of this JobListDescriptor.
        :type description: str
        """

        self._description = description

    @property
    def operation(self):
        """Gets the operation of this JobListDescriptor.


        :return: The operation of this JobListDescriptor.
        :rtype: OperationName
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this JobListDescriptor.


        :param operation: The operation of this JobListDescriptor.
        :type operation: OperationName
        """

        self._operation = operation

    @property
    def priority(self):
        """Gets the priority of this JobListDescriptor.


        :return: The priority of this JobListDescriptor.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this JobListDescriptor.


        :param priority: The priority of this JobListDescriptor.
        :type priority: int
        """

        self._priority = priority

    @property
    def status(self):
        """Gets the status of this JobListDescriptor.


        :return: The status of this JobListDescriptor.
        :rtype: JobStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this JobListDescriptor.


        :param status: The status of this JobListDescriptor.
        :type status: JobStatus
        """

        self._status = status

    @property
    def creation_time(self):
        """Gets the creation_time of this JobListDescriptor.


        :return: The creation_time of this JobListDescriptor.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this JobListDescriptor.


        :param creation_time: The creation_time of this JobListDescriptor.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def termination_date(self):
        """Gets the termination_date of this JobListDescriptor.


        :return: The termination_date of this JobListDescriptor.
        :rtype: datetime
        """
        return self._termination_date

    @termination_date.setter
    def termination_date(self, termination_date):
        """Sets the termination_date of this JobListDescriptor.


        :param termination_date: The termination_date of this JobListDescriptor.
        :type termination_date: datetime
        """

        self._termination_date = termination_date

    @property
    def progress_summary(self):
        """Gets the progress_summary of this JobListDescriptor.


        :return: The progress_summary of this JobListDescriptor.
        :rtype: JobDescriptorProgressSummary
        """
        return self._progress_summary

    @progress_summary.setter
    def progress_summary(self, progress_summary):
        """Sets the progress_summary of this JobListDescriptor.


        :param progress_summary: The progress_summary of this JobListDescriptor.
        :type progress_summary: JobDescriptorProgressSummary
        """

        self._progress_summary = progress_summary
