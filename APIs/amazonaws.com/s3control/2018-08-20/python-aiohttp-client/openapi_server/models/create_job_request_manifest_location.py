# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateJobRequestManifestLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_arn: str=None, object_version_id: str=None, e_tag: str=None):
        """CreateJobRequestManifestLocation - a model defined in OpenAPI

        :param object_arn: The object_arn of this CreateJobRequestManifestLocation.
        :param object_version_id: The object_version_id of this CreateJobRequestManifestLocation.
        :param e_tag: The e_tag of this CreateJobRequestManifestLocation.
        """
        self.openapi_types = {
            'object_arn': str,
            'object_version_id': str,
            'e_tag': str
        }

        self.attribute_map = {
            'object_arn': 'ObjectArn',
            'object_version_id': 'ObjectVersionId',
            'e_tag': 'ETag'
        }

        self._object_arn = object_arn
        self._object_version_id = object_version_id
        self._e_tag = e_tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateJobRequestManifestLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateJob_request_Manifest_Location of this CreateJobRequestManifestLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_arn(self):
        """Gets the object_arn of this CreateJobRequestManifestLocation.


        :return: The object_arn of this CreateJobRequestManifestLocation.
        :rtype: str
        """
        return self._object_arn

    @object_arn.setter
    def object_arn(self, object_arn):
        """Sets the object_arn of this CreateJobRequestManifestLocation.


        :param object_arn: The object_arn of this CreateJobRequestManifestLocation.
        :type object_arn: str
        """
        if object_arn is None:
            raise ValueError("Invalid value for `object_arn`, must not be `None`")

        self._object_arn = object_arn

    @property
    def object_version_id(self):
        """Gets the object_version_id of this CreateJobRequestManifestLocation.


        :return: The object_version_id of this CreateJobRequestManifestLocation.
        :rtype: str
        """
        return self._object_version_id

    @object_version_id.setter
    def object_version_id(self, object_version_id):
        """Sets the object_version_id of this CreateJobRequestManifestLocation.


        :param object_version_id: The object_version_id of this CreateJobRequestManifestLocation.
        :type object_version_id: str
        """

        self._object_version_id = object_version_id

    @property
    def e_tag(self):
        """Gets the e_tag of this CreateJobRequestManifestLocation.


        :return: The e_tag of this CreateJobRequestManifestLocation.
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this CreateJobRequestManifestLocation.


        :param e_tag: The e_tag of this CreateJobRequestManifestLocation.
        :type e_tag: str
        """
        if e_tag is None:
            raise ValueError("Invalid value for `e_tag`, must not be `None`")

        self._e_tag = e_tag
