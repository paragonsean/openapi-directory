# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.s3_access_control_list_owner import S3AccessControlListOwner
from openapi_server import util


class S3AccessControlList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, owner: S3AccessControlListOwner=None, grants: List=None):
        """S3AccessControlList - a model defined in OpenAPI

        :param owner: The owner of this S3AccessControlList.
        :param grants: The grants of this S3AccessControlList.
        """
        self.openapi_types = {
            'owner': S3AccessControlListOwner,
            'grants': List
        }

        self.attribute_map = {
            'owner': 'Owner',
            'grants': 'Grants'
        }

        self._owner = owner
        self._grants = grants

    @classmethod
    def from_dict(cls, dikt: dict) -> 'S3AccessControlList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The S3AccessControlList of this S3AccessControlList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def owner(self):
        """Gets the owner of this S3AccessControlList.


        :return: The owner of this S3AccessControlList.
        :rtype: S3AccessControlListOwner
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this S3AccessControlList.


        :param owner: The owner of this S3AccessControlList.
        :type owner: S3AccessControlListOwner
        """
        if owner is None:
            raise ValueError("Invalid value for `owner`, must not be `None`")

        self._owner = owner

    @property
    def grants(self):
        """Gets the grants of this S3AccessControlList.


        :return: The grants of this S3AccessControlList.
        :rtype: List
        """
        return self._grants

    @grants.setter
    def grants(self, grants):
        """Sets the grants of this S3AccessControlList.


        :param grants: The grants of this S3AccessControlList.
        :type grants: List
        """

        self._grants = grants
