# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.multi_region_access_point_policy_document_established import MultiRegionAccessPointPolicyDocumentEstablished
from openapi_server.models.multi_region_access_point_policy_document_proposed import MultiRegionAccessPointPolicyDocumentProposed
from openapi_server import util


class GetMultiRegionAccessPointPolicyResultPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, established: MultiRegionAccessPointPolicyDocumentEstablished=None, proposed: MultiRegionAccessPointPolicyDocumentProposed=None):
        """GetMultiRegionAccessPointPolicyResultPolicy - a model defined in OpenAPI

        :param established: The established of this GetMultiRegionAccessPointPolicyResultPolicy.
        :param proposed: The proposed of this GetMultiRegionAccessPointPolicyResultPolicy.
        """
        self.openapi_types = {
            'established': MultiRegionAccessPointPolicyDocumentEstablished,
            'proposed': MultiRegionAccessPointPolicyDocumentProposed
        }

        self.attribute_map = {
            'established': 'Established',
            'proposed': 'Proposed'
        }

        self._established = established
        self._proposed = proposed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMultiRegionAccessPointPolicyResultPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetMultiRegionAccessPointPolicyResult_Policy of this GetMultiRegionAccessPointPolicyResultPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def established(self):
        """Gets the established of this GetMultiRegionAccessPointPolicyResultPolicy.


        :return: The established of this GetMultiRegionAccessPointPolicyResultPolicy.
        :rtype: MultiRegionAccessPointPolicyDocumentEstablished
        """
        return self._established

    @established.setter
    def established(self, established):
        """Sets the established of this GetMultiRegionAccessPointPolicyResultPolicy.


        :param established: The established of this GetMultiRegionAccessPointPolicyResultPolicy.
        :type established: MultiRegionAccessPointPolicyDocumentEstablished
        """

        self._established = established

    @property
    def proposed(self):
        """Gets the proposed of this GetMultiRegionAccessPointPolicyResultPolicy.


        :return: The proposed of this GetMultiRegionAccessPointPolicyResultPolicy.
        :rtype: MultiRegionAccessPointPolicyDocumentProposed
        """
        return self._proposed

    @proposed.setter
    def proposed(self, proposed):
        """Sets the proposed of this GetMultiRegionAccessPointPolicyResultPolicy.


        :param proposed: The proposed of this GetMultiRegionAccessPointPolicyResultPolicy.
        :type proposed: MultiRegionAccessPointPolicyDocumentProposed
        """

        self._proposed = proposed
