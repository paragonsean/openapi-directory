# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bucket_location_constraint import BucketLocationConstraint
from openapi_server import util


class CreateBucketRequestCreateBucketConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_constraint: BucketLocationConstraint=None):
        """CreateBucketRequestCreateBucketConfiguration - a model defined in OpenAPI

        :param location_constraint: The location_constraint of this CreateBucketRequestCreateBucketConfiguration.
        """
        self.openapi_types = {
            'location_constraint': BucketLocationConstraint
        }

        self.attribute_map = {
            'location_constraint': 'LocationConstraint'
        }

        self._location_constraint = location_constraint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateBucketRequestCreateBucketConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateBucketRequest_CreateBucketConfiguration of this CreateBucketRequestCreateBucketConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_constraint(self):
        """Gets the location_constraint of this CreateBucketRequestCreateBucketConfiguration.


        :return: The location_constraint of this CreateBucketRequestCreateBucketConfiguration.
        :rtype: BucketLocationConstraint
        """
        return self._location_constraint

    @location_constraint.setter
    def location_constraint(self, location_constraint):
        """Sets the location_constraint of this CreateBucketRequestCreateBucketConfiguration.


        :param location_constraint: The location_constraint of this CreateBucketRequestCreateBucketConfiguration.
        :type location_constraint: BucketLocationConstraint
        """

        self._location_constraint = location_constraint
