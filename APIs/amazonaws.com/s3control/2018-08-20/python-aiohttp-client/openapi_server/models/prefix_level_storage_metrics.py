# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.selection_criteria import SelectionCriteria
from openapi_server import util


class PrefixLevelStorageMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_enabled: bool=None, selection_criteria: SelectionCriteria=None):
        """PrefixLevelStorageMetrics - a model defined in OpenAPI

        :param is_enabled: The is_enabled of this PrefixLevelStorageMetrics.
        :param selection_criteria: The selection_criteria of this PrefixLevelStorageMetrics.
        """
        self.openapi_types = {
            'is_enabled': bool,
            'selection_criteria': SelectionCriteria
        }

        self.attribute_map = {
            'is_enabled': 'IsEnabled',
            'selection_criteria': 'SelectionCriteria'
        }

        self._is_enabled = is_enabled
        self._selection_criteria = selection_criteria

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrefixLevelStorageMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrefixLevel_StorageMetrics of this PrefixLevelStorageMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_enabled(self):
        """Gets the is_enabled of this PrefixLevelStorageMetrics.


        :return: The is_enabled of this PrefixLevelStorageMetrics.
        :rtype: bool
        """
        return self._is_enabled

    @is_enabled.setter
    def is_enabled(self, is_enabled):
        """Sets the is_enabled of this PrefixLevelStorageMetrics.


        :param is_enabled: The is_enabled of this PrefixLevelStorageMetrics.
        :type is_enabled: bool
        """

        self._is_enabled = is_enabled

    @property
    def selection_criteria(self):
        """Gets the selection_criteria of this PrefixLevelStorageMetrics.


        :return: The selection_criteria of this PrefixLevelStorageMetrics.
        :rtype: SelectionCriteria
        """
        return self._selection_criteria

    @selection_criteria.setter
    def selection_criteria(self, selection_criteria):
        """Sets the selection_criteria of this PrefixLevelStorageMetrics.


        :param selection_criteria: The selection_criteria of this PrefixLevelStorageMetrics.
        :type selection_criteria: SelectionCriteria
        """

        self._selection_criteria = selection_criteria
