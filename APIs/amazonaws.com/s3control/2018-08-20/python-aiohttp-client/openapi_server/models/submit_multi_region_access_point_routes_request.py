# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.submit_multi_region_access_point_routes_request_route_updates_inner import SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner
from openapi_server import util


class SubmitMultiRegionAccessPointRoutesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, route_updates: List[SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner]=None):
        """SubmitMultiRegionAccessPointRoutesRequest - a model defined in OpenAPI

        :param route_updates: The route_updates of this SubmitMultiRegionAccessPointRoutesRequest.
        """
        self.openapi_types = {
            'route_updates': List[SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner]
        }

        self.attribute_map = {
            'route_updates': 'RouteUpdates'
        }

        self._route_updates = route_updates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubmitMultiRegionAccessPointRoutesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubmitMultiRegionAccessPointRoutes_request of this SubmitMultiRegionAccessPointRoutesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def route_updates(self):
        """Gets the route_updates of this SubmitMultiRegionAccessPointRoutesRequest.

        The different routes that make up the new route configuration. Active routes return a value of <code>100</code>, and passive routes return a value of <code>0</code>.

        :return: The route_updates of this SubmitMultiRegionAccessPointRoutesRequest.
        :rtype: List[SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner]
        """
        return self._route_updates

    @route_updates.setter
    def route_updates(self, route_updates):
        """Sets the route_updates of this SubmitMultiRegionAccessPointRoutesRequest.

        The different routes that make up the new route configuration. Active routes return a value of <code>100</code>, and passive routes return a value of <code>0</code>.

        :param route_updates: The route_updates of this SubmitMultiRegionAccessPointRoutesRequest.
        :type route_updates: List[SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner]
        """
        if route_updates is None:
            raise ValueError("Invalid value for `route_updates`, must not be `None`")

        self._route_updates = route_updates
