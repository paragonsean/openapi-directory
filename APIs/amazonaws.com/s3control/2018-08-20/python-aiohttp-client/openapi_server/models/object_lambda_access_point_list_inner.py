# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_access_point_for_object_lambda_result_alias import CreateAccessPointForObjectLambdaResultAlias
from openapi_server import util


class ObjectLambdaAccessPointListInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, object_lambda_access_point_arn: str=None, alias: CreateAccessPointForObjectLambdaResultAlias=None):
        """ObjectLambdaAccessPointListInner - a model defined in OpenAPI

        :param name: The name of this ObjectLambdaAccessPointListInner.
        :param object_lambda_access_point_arn: The object_lambda_access_point_arn of this ObjectLambdaAccessPointListInner.
        :param alias: The alias of this ObjectLambdaAccessPointListInner.
        """
        self.openapi_types = {
            'name': str,
            'object_lambda_access_point_arn': str,
            'alias': CreateAccessPointForObjectLambdaResultAlias
        }

        self.attribute_map = {
            'name': 'Name',
            'object_lambda_access_point_arn': 'ObjectLambdaAccessPointArn',
            'alias': 'Alias'
        }

        self._name = name
        self._object_lambda_access_point_arn = object_lambda_access_point_arn
        self._alias = alias

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjectLambdaAccessPointListInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ObjectLambdaAccessPointList_inner of this ObjectLambdaAccessPointListInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ObjectLambdaAccessPointListInner.


        :return: The name of this ObjectLambdaAccessPointListInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ObjectLambdaAccessPointListInner.


        :param name: The name of this ObjectLambdaAccessPointListInner.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def object_lambda_access_point_arn(self):
        """Gets the object_lambda_access_point_arn of this ObjectLambdaAccessPointListInner.


        :return: The object_lambda_access_point_arn of this ObjectLambdaAccessPointListInner.
        :rtype: str
        """
        return self._object_lambda_access_point_arn

    @object_lambda_access_point_arn.setter
    def object_lambda_access_point_arn(self, object_lambda_access_point_arn):
        """Sets the object_lambda_access_point_arn of this ObjectLambdaAccessPointListInner.


        :param object_lambda_access_point_arn: The object_lambda_access_point_arn of this ObjectLambdaAccessPointListInner.
        :type object_lambda_access_point_arn: str
        """

        self._object_lambda_access_point_arn = object_lambda_access_point_arn

    @property
    def alias(self):
        """Gets the alias of this ObjectLambdaAccessPointListInner.


        :return: The alias of this ObjectLambdaAccessPointListInner.
        :rtype: CreateAccessPointForObjectLambdaResultAlias
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this ObjectLambdaAccessPointListInner.


        :param alias: The alias of this ObjectLambdaAccessPointListInner.
        :type alias: CreateAccessPointForObjectLambdaResultAlias
        """

        self._alias = alias
