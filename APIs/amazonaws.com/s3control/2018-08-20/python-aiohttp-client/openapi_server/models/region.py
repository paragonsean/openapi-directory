# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Region(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket: str=None, bucket_account_id: str=None):
        """Region - a model defined in OpenAPI

        :param bucket: The bucket of this Region.
        :param bucket_account_id: The bucket_account_id of this Region.
        """
        self.openapi_types = {
            'bucket': str,
            'bucket_account_id': str
        }

        self.attribute_map = {
            'bucket': 'Bucket',
            'bucket_account_id': 'BucketAccountId'
        }

        self._bucket = bucket
        self._bucket_account_id = bucket_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Region':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Region of this Region.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket(self):
        """Gets the bucket of this Region.


        :return: The bucket of this Region.
        :rtype: str
        """
        return self._bucket

    @bucket.setter
    def bucket(self, bucket):
        """Sets the bucket of this Region.


        :param bucket: The bucket of this Region.
        :type bucket: str
        """
        if bucket is None:
            raise ValueError("Invalid value for `bucket`, must not be `None`")

        self._bucket = bucket

    @property
    def bucket_account_id(self):
        """Gets the bucket_account_id of this Region.


        :return: The bucket_account_id of this Region.
        :rtype: str
        """
        return self._bucket_account_id

    @bucket_account_id.setter
    def bucket_account_id(self, bucket_account_id):
        """Sets the bucket_account_id of this Region.


        :param bucket_account_id: The bucket_account_id of this Region.
        :type bucket_account_id: str
        """

        self._bucket_account_id = bucket_account_id
