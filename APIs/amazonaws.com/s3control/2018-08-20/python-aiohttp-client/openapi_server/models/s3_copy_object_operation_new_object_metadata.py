# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.s3_sse_algorithm import S3SSEAlgorithm
from openapi_server import util


class S3CopyObjectOperationNewObjectMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_control: str=None, content_disposition: str=None, content_encoding: str=None, content_language: str=None, user_metadata: Dict=None, content_length: int=None, content_md5: str=None, content_type: str=None, http_expires_date: datetime=None, requester_charged: bool=None, sse_algorithm: S3SSEAlgorithm=None):
        """S3CopyObjectOperationNewObjectMetadata - a model defined in OpenAPI

        :param cache_control: The cache_control of this S3CopyObjectOperationNewObjectMetadata.
        :param content_disposition: The content_disposition of this S3CopyObjectOperationNewObjectMetadata.
        :param content_encoding: The content_encoding of this S3CopyObjectOperationNewObjectMetadata.
        :param content_language: The content_language of this S3CopyObjectOperationNewObjectMetadata.
        :param user_metadata: The user_metadata of this S3CopyObjectOperationNewObjectMetadata.
        :param content_length: The content_length of this S3CopyObjectOperationNewObjectMetadata.
        :param content_md5: The content_md5 of this S3CopyObjectOperationNewObjectMetadata.
        :param content_type: The content_type of this S3CopyObjectOperationNewObjectMetadata.
        :param http_expires_date: The http_expires_date of this S3CopyObjectOperationNewObjectMetadata.
        :param requester_charged: The requester_charged of this S3CopyObjectOperationNewObjectMetadata.
        :param sse_algorithm: The sse_algorithm of this S3CopyObjectOperationNewObjectMetadata.
        """
        self.openapi_types = {
            'cache_control': str,
            'content_disposition': str,
            'content_encoding': str,
            'content_language': str,
            'user_metadata': Dict,
            'content_length': int,
            'content_md5': str,
            'content_type': str,
            'http_expires_date': datetime,
            'requester_charged': bool,
            'sse_algorithm': S3SSEAlgorithm
        }

        self.attribute_map = {
            'cache_control': 'CacheControl',
            'content_disposition': 'ContentDisposition',
            'content_encoding': 'ContentEncoding',
            'content_language': 'ContentLanguage',
            'user_metadata': 'UserMetadata',
            'content_length': 'ContentLength',
            'content_md5': 'ContentMD5',
            'content_type': 'ContentType',
            'http_expires_date': 'HttpExpiresDate',
            'requester_charged': 'RequesterCharged',
            'sse_algorithm': 'SSEAlgorithm'
        }

        self._cache_control = cache_control
        self._content_disposition = content_disposition
        self._content_encoding = content_encoding
        self._content_language = content_language
        self._user_metadata = user_metadata
        self._content_length = content_length
        self._content_md5 = content_md5
        self._content_type = content_type
        self._http_expires_date = http_expires_date
        self._requester_charged = requester_charged
        self._sse_algorithm = sse_algorithm

    @classmethod
    def from_dict(cls, dikt: dict) -> 'S3CopyObjectOperationNewObjectMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The S3CopyObjectOperation_NewObjectMetadata of this S3CopyObjectOperationNewObjectMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_control(self):
        """Gets the cache_control of this S3CopyObjectOperationNewObjectMetadata.


        :return: The cache_control of this S3CopyObjectOperationNewObjectMetadata.
        :rtype: str
        """
        return self._cache_control

    @cache_control.setter
    def cache_control(self, cache_control):
        """Sets the cache_control of this S3CopyObjectOperationNewObjectMetadata.


        :param cache_control: The cache_control of this S3CopyObjectOperationNewObjectMetadata.
        :type cache_control: str
        """

        self._cache_control = cache_control

    @property
    def content_disposition(self):
        """Gets the content_disposition of this S3CopyObjectOperationNewObjectMetadata.


        :return: The content_disposition of this S3CopyObjectOperationNewObjectMetadata.
        :rtype: str
        """
        return self._content_disposition

    @content_disposition.setter
    def content_disposition(self, content_disposition):
        """Sets the content_disposition of this S3CopyObjectOperationNewObjectMetadata.


        :param content_disposition: The content_disposition of this S3CopyObjectOperationNewObjectMetadata.
        :type content_disposition: str
        """

        self._content_disposition = content_disposition

    @property
    def content_encoding(self):
        """Gets the content_encoding of this S3CopyObjectOperationNewObjectMetadata.


        :return: The content_encoding of this S3CopyObjectOperationNewObjectMetadata.
        :rtype: str
        """
        return self._content_encoding

    @content_encoding.setter
    def content_encoding(self, content_encoding):
        """Sets the content_encoding of this S3CopyObjectOperationNewObjectMetadata.


        :param content_encoding: The content_encoding of this S3CopyObjectOperationNewObjectMetadata.
        :type content_encoding: str
        """

        self._content_encoding = content_encoding

    @property
    def content_language(self):
        """Gets the content_language of this S3CopyObjectOperationNewObjectMetadata.


        :return: The content_language of this S3CopyObjectOperationNewObjectMetadata.
        :rtype: str
        """
        return self._content_language

    @content_language.setter
    def content_language(self, content_language):
        """Sets the content_language of this S3CopyObjectOperationNewObjectMetadata.


        :param content_language: The content_language of this S3CopyObjectOperationNewObjectMetadata.
        :type content_language: str
        """

        self._content_language = content_language

    @property
    def user_metadata(self):
        """Gets the user_metadata of this S3CopyObjectOperationNewObjectMetadata.


        :return: The user_metadata of this S3CopyObjectOperationNewObjectMetadata.
        :rtype: Dict
        """
        return self._user_metadata

    @user_metadata.setter
    def user_metadata(self, user_metadata):
        """Sets the user_metadata of this S3CopyObjectOperationNewObjectMetadata.


        :param user_metadata: The user_metadata of this S3CopyObjectOperationNewObjectMetadata.
        :type user_metadata: Dict
        """

        self._user_metadata = user_metadata

    @property
    def content_length(self):
        """Gets the content_length of this S3CopyObjectOperationNewObjectMetadata.


        :return: The content_length of this S3CopyObjectOperationNewObjectMetadata.
        :rtype: int
        """
        return self._content_length

    @content_length.setter
    def content_length(self, content_length):
        """Sets the content_length of this S3CopyObjectOperationNewObjectMetadata.


        :param content_length: The content_length of this S3CopyObjectOperationNewObjectMetadata.
        :type content_length: int
        """

        self._content_length = content_length

    @property
    def content_md5(self):
        """Gets the content_md5 of this S3CopyObjectOperationNewObjectMetadata.


        :return: The content_md5 of this S3CopyObjectOperationNewObjectMetadata.
        :rtype: str
        """
        return self._content_md5

    @content_md5.setter
    def content_md5(self, content_md5):
        """Sets the content_md5 of this S3CopyObjectOperationNewObjectMetadata.


        :param content_md5: The content_md5 of this S3CopyObjectOperationNewObjectMetadata.
        :type content_md5: str
        """

        self._content_md5 = content_md5

    @property
    def content_type(self):
        """Gets the content_type of this S3CopyObjectOperationNewObjectMetadata.


        :return: The content_type of this S3CopyObjectOperationNewObjectMetadata.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this S3CopyObjectOperationNewObjectMetadata.


        :param content_type: The content_type of this S3CopyObjectOperationNewObjectMetadata.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def http_expires_date(self):
        """Gets the http_expires_date of this S3CopyObjectOperationNewObjectMetadata.


        :return: The http_expires_date of this S3CopyObjectOperationNewObjectMetadata.
        :rtype: datetime
        """
        return self._http_expires_date

    @http_expires_date.setter
    def http_expires_date(self, http_expires_date):
        """Sets the http_expires_date of this S3CopyObjectOperationNewObjectMetadata.


        :param http_expires_date: The http_expires_date of this S3CopyObjectOperationNewObjectMetadata.
        :type http_expires_date: datetime
        """

        self._http_expires_date = http_expires_date

    @property
    def requester_charged(self):
        """Gets the requester_charged of this S3CopyObjectOperationNewObjectMetadata.


        :return: The requester_charged of this S3CopyObjectOperationNewObjectMetadata.
        :rtype: bool
        """
        return self._requester_charged

    @requester_charged.setter
    def requester_charged(self, requester_charged):
        """Sets the requester_charged of this S3CopyObjectOperationNewObjectMetadata.


        :param requester_charged: The requester_charged of this S3CopyObjectOperationNewObjectMetadata.
        :type requester_charged: bool
        """

        self._requester_charged = requester_charged

    @property
    def sse_algorithm(self):
        """Gets the sse_algorithm of this S3CopyObjectOperationNewObjectMetadata.


        :return: The sse_algorithm of this S3CopyObjectOperationNewObjectMetadata.
        :rtype: S3SSEAlgorithm
        """
        return self._sse_algorithm

    @sse_algorithm.setter
    def sse_algorithm(self, sse_algorithm):
        """Sets the sse_algorithm of this S3CopyObjectOperationNewObjectMetadata.


        :param sse_algorithm: The sse_algorithm of this S3CopyObjectOperationNewObjectMetadata.
        :type sse_algorithm: S3SSEAlgorithm
        """

        self._sse_algorithm = sse_algorithm
