# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_multi_region_access_point_result_access_point import GetMultiRegionAccessPointResultAccessPoint
from openapi_server import util


class GetMultiRegionAccessPointResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_point: GetMultiRegionAccessPointResultAccessPoint=None):
        """GetMultiRegionAccessPointResult - a model defined in OpenAPI

        :param access_point: The access_point of this GetMultiRegionAccessPointResult.
        """
        self.openapi_types = {
            'access_point': GetMultiRegionAccessPointResultAccessPoint
        }

        self.attribute_map = {
            'access_point': 'AccessPoint'
        }

        self._access_point = access_point

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMultiRegionAccessPointResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetMultiRegionAccessPointResult of this GetMultiRegionAccessPointResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_point(self):
        """Gets the access_point of this GetMultiRegionAccessPointResult.


        :return: The access_point of this GetMultiRegionAccessPointResult.
        :rtype: GetMultiRegionAccessPointResultAccessPoint
        """
        return self._access_point

    @access_point.setter
    def access_point(self, access_point):
        """Sets the access_point of this GetMultiRegionAccessPointResult.


        :param access_point: The access_point of this GetMultiRegionAccessPointResult.
        :type access_point: GetMultiRegionAccessPointResultAccessPoint
        """

        self._access_point = access_point
