# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutStorageLensConfigurationRequestStorageLensConfigurationInclude(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buckets: List=None, regions: List=None):
        """PutStorageLensConfigurationRequestStorageLensConfigurationInclude - a model defined in OpenAPI

        :param buckets: The buckets of this PutStorageLensConfigurationRequestStorageLensConfigurationInclude.
        :param regions: The regions of this PutStorageLensConfigurationRequestStorageLensConfigurationInclude.
        """
        self.openapi_types = {
            'buckets': List,
            'regions': List
        }

        self.attribute_map = {
            'buckets': 'Buckets',
            'regions': 'Regions'
        }

        self._buckets = buckets
        self._regions = regions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutStorageLensConfigurationRequestStorageLensConfigurationInclude':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutStorageLensConfiguration_request_StorageLensConfiguration_Include of this PutStorageLensConfigurationRequestStorageLensConfigurationInclude.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buckets(self):
        """Gets the buckets of this PutStorageLensConfigurationRequestStorageLensConfigurationInclude.


        :return: The buckets of this PutStorageLensConfigurationRequestStorageLensConfigurationInclude.
        :rtype: List
        """
        return self._buckets

    @buckets.setter
    def buckets(self, buckets):
        """Sets the buckets of this PutStorageLensConfigurationRequestStorageLensConfigurationInclude.


        :param buckets: The buckets of this PutStorageLensConfigurationRequestStorageLensConfigurationInclude.
        :type buckets: List
        """

        self._buckets = buckets

    @property
    def regions(self):
        """Gets the regions of this PutStorageLensConfigurationRequestStorageLensConfigurationInclude.


        :return: The regions of this PutStorageLensConfigurationRequestStorageLensConfigurationInclude.
        :rtype: List
        """
        return self._regions

    @regions.setter
    def regions(self, regions):
        """Sets the regions of this PutStorageLensConfigurationRequestStorageLensConfigurationInclude.


        :param regions: The regions of this PutStorageLensConfigurationRequestStorageLensConfigurationInclude.
        :type regions: List
        """

        self._regions = regions
