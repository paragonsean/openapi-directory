# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LifecycleRuleAbortIncompleteMultipartUpload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, days_after_initiation: int=None):
        """LifecycleRuleAbortIncompleteMultipartUpload - a model defined in OpenAPI

        :param days_after_initiation: The days_after_initiation of this LifecycleRuleAbortIncompleteMultipartUpload.
        """
        self.openapi_types = {
            'days_after_initiation': int
        }

        self.attribute_map = {
            'days_after_initiation': 'DaysAfterInitiation'
        }

        self._days_after_initiation = days_after_initiation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LifecycleRuleAbortIncompleteMultipartUpload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LifecycleRule_AbortIncompleteMultipartUpload of this LifecycleRuleAbortIncompleteMultipartUpload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def days_after_initiation(self):
        """Gets the days_after_initiation of this LifecycleRuleAbortIncompleteMultipartUpload.


        :return: The days_after_initiation of this LifecycleRuleAbortIncompleteMultipartUpload.
        :rtype: int
        """
        return self._days_after_initiation

    @days_after_initiation.setter
    def days_after_initiation(self, days_after_initiation):
        """Sets the days_after_initiation of this LifecycleRuleAbortIncompleteMultipartUpload.


        :param days_after_initiation: The days_after_initiation of this LifecycleRuleAbortIncompleteMultipartUpload.
        :type days_after_initiation: int
        """

        self._days_after_initiation = days_after_initiation
