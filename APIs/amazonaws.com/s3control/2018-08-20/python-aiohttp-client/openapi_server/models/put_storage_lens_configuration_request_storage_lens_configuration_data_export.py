# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.storage_lens_data_export_cloud_watch_metrics import StorageLensDataExportCloudWatchMetrics
from openapi_server.models.storage_lens_data_export_s3_bucket_destination import StorageLensDataExportS3BucketDestination
from openapi_server import util


class PutStorageLensConfigurationRequestStorageLensConfigurationDataExport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_bucket_destination: StorageLensDataExportS3BucketDestination=None, cloud_watch_metrics: StorageLensDataExportCloudWatchMetrics=None):
        """PutStorageLensConfigurationRequestStorageLensConfigurationDataExport - a model defined in OpenAPI

        :param s3_bucket_destination: The s3_bucket_destination of this PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.
        :param cloud_watch_metrics: The cloud_watch_metrics of this PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.
        """
        self.openapi_types = {
            's3_bucket_destination': StorageLensDataExportS3BucketDestination,
            'cloud_watch_metrics': StorageLensDataExportCloudWatchMetrics
        }

        self.attribute_map = {
            's3_bucket_destination': 'S3BucketDestination',
            'cloud_watch_metrics': 'CloudWatchMetrics'
        }

        self._s3_bucket_destination = s3_bucket_destination
        self._cloud_watch_metrics = cloud_watch_metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutStorageLensConfigurationRequestStorageLensConfigurationDataExport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutStorageLensConfiguration_request_StorageLensConfiguration_DataExport of this PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_bucket_destination(self):
        """Gets the s3_bucket_destination of this PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.


        :return: The s3_bucket_destination of this PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.
        :rtype: StorageLensDataExportS3BucketDestination
        """
        return self._s3_bucket_destination

    @s3_bucket_destination.setter
    def s3_bucket_destination(self, s3_bucket_destination):
        """Sets the s3_bucket_destination of this PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.


        :param s3_bucket_destination: The s3_bucket_destination of this PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.
        :type s3_bucket_destination: StorageLensDataExportS3BucketDestination
        """

        self._s3_bucket_destination = s3_bucket_destination

    @property
    def cloud_watch_metrics(self):
        """Gets the cloud_watch_metrics of this PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.


        :return: The cloud_watch_metrics of this PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.
        :rtype: StorageLensDataExportCloudWatchMetrics
        """
        return self._cloud_watch_metrics

    @cloud_watch_metrics.setter
    def cloud_watch_metrics(self, cloud_watch_metrics):
        """Sets the cloud_watch_metrics of this PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.


        :param cloud_watch_metrics: The cloud_watch_metrics of this PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.
        :type cloud_watch_metrics: StorageLensDataExportCloudWatchMetrics
        """

        self._cloud_watch_metrics = cloud_watch_metrics
