# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class S3JobManifestGeneratorFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, eligible_for_replication: bool=None, created_after: datetime=None, created_before: datetime=None, object_replication_statuses: List=None):
        """S3JobManifestGeneratorFilter - a model defined in OpenAPI

        :param eligible_for_replication: The eligible_for_replication of this S3JobManifestGeneratorFilter.
        :param created_after: The created_after of this S3JobManifestGeneratorFilter.
        :param created_before: The created_before of this S3JobManifestGeneratorFilter.
        :param object_replication_statuses: The object_replication_statuses of this S3JobManifestGeneratorFilter.
        """
        self.openapi_types = {
            'eligible_for_replication': bool,
            'created_after': datetime,
            'created_before': datetime,
            'object_replication_statuses': List
        }

        self.attribute_map = {
            'eligible_for_replication': 'EligibleForReplication',
            'created_after': 'CreatedAfter',
            'created_before': 'CreatedBefore',
            'object_replication_statuses': 'ObjectReplicationStatuses'
        }

        self._eligible_for_replication = eligible_for_replication
        self._created_after = created_after
        self._created_before = created_before
        self._object_replication_statuses = object_replication_statuses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'S3JobManifestGeneratorFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The S3JobManifestGenerator_Filter of this S3JobManifestGeneratorFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eligible_for_replication(self):
        """Gets the eligible_for_replication of this S3JobManifestGeneratorFilter.


        :return: The eligible_for_replication of this S3JobManifestGeneratorFilter.
        :rtype: bool
        """
        return self._eligible_for_replication

    @eligible_for_replication.setter
    def eligible_for_replication(self, eligible_for_replication):
        """Sets the eligible_for_replication of this S3JobManifestGeneratorFilter.


        :param eligible_for_replication: The eligible_for_replication of this S3JobManifestGeneratorFilter.
        :type eligible_for_replication: bool
        """

        self._eligible_for_replication = eligible_for_replication

    @property
    def created_after(self):
        """Gets the created_after of this S3JobManifestGeneratorFilter.


        :return: The created_after of this S3JobManifestGeneratorFilter.
        :rtype: datetime
        """
        return self._created_after

    @created_after.setter
    def created_after(self, created_after):
        """Sets the created_after of this S3JobManifestGeneratorFilter.


        :param created_after: The created_after of this S3JobManifestGeneratorFilter.
        :type created_after: datetime
        """

        self._created_after = created_after

    @property
    def created_before(self):
        """Gets the created_before of this S3JobManifestGeneratorFilter.


        :return: The created_before of this S3JobManifestGeneratorFilter.
        :rtype: datetime
        """
        return self._created_before

    @created_before.setter
    def created_before(self, created_before):
        """Sets the created_before of this S3JobManifestGeneratorFilter.


        :param created_before: The created_before of this S3JobManifestGeneratorFilter.
        :type created_before: datetime
        """

        self._created_before = created_before

    @property
    def object_replication_statuses(self):
        """Gets the object_replication_statuses of this S3JobManifestGeneratorFilter.


        :return: The object_replication_statuses of this S3JobManifestGeneratorFilter.
        :rtype: List
        """
        return self._object_replication_statuses

    @object_replication_statuses.setter
    def object_replication_statuses(self, object_replication_statuses):
        """Sets the object_replication_statuses of this S3JobManifestGeneratorFilter.


        :param object_replication_statuses: The object_replication_statuses of this S3JobManifestGeneratorFilter.
        :type object_replication_statuses: List
        """

        self._object_replication_statuses = object_replication_statuses
