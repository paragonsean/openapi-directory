# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.put_bucket_versioning_request_versioning_configuration import PutBucketVersioningRequestVersioningConfiguration
from openapi_server import util


class PutBucketVersioningRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, versioning_configuration: PutBucketVersioningRequestVersioningConfiguration=None):
        """PutBucketVersioningRequest - a model defined in OpenAPI

        :param versioning_configuration: The versioning_configuration of this PutBucketVersioningRequest.
        """
        self.openapi_types = {
            'versioning_configuration': PutBucketVersioningRequestVersioningConfiguration
        }

        self.attribute_map = {
            'versioning_configuration': 'VersioningConfiguration'
        }

        self._versioning_configuration = versioning_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutBucketVersioningRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutBucketVersioning_request of this PutBucketVersioningRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def versioning_configuration(self):
        """Gets the versioning_configuration of this PutBucketVersioningRequest.


        :return: The versioning_configuration of this PutBucketVersioningRequest.
        :rtype: PutBucketVersioningRequestVersioningConfiguration
        """
        return self._versioning_configuration

    @versioning_configuration.setter
    def versioning_configuration(self, versioning_configuration):
        """Sets the versioning_configuration of this PutBucketVersioningRequest.


        :param versioning_configuration: The versioning_configuration of this PutBucketVersioningRequest.
        :type versioning_configuration: PutBucketVersioningRequestVersioningConfiguration
        """
        if versioning_configuration is None:
            raise ValueError("Invalid value for `versioning_configuration`, must not be `None`")

        self._versioning_configuration = versioning_configuration
