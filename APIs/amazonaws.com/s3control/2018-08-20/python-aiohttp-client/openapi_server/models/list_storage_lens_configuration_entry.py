# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListStorageLensConfigurationEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, storage_lens_arn: str=None, home_region: str=None, is_enabled: bool=None):
        """ListStorageLensConfigurationEntry - a model defined in OpenAPI

        :param id: The id of this ListStorageLensConfigurationEntry.
        :param storage_lens_arn: The storage_lens_arn of this ListStorageLensConfigurationEntry.
        :param home_region: The home_region of this ListStorageLensConfigurationEntry.
        :param is_enabled: The is_enabled of this ListStorageLensConfigurationEntry.
        """
        self.openapi_types = {
            'id': str,
            'storage_lens_arn': str,
            'home_region': str,
            'is_enabled': bool
        }

        self.attribute_map = {
            'id': 'Id',
            'storage_lens_arn': 'StorageLensArn',
            'home_region': 'HomeRegion',
            'is_enabled': 'IsEnabled'
        }

        self._id = id
        self._storage_lens_arn = storage_lens_arn
        self._home_region = home_region
        self._is_enabled = is_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListStorageLensConfigurationEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListStorageLensConfigurationEntry of this ListStorageLensConfigurationEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ListStorageLensConfigurationEntry.


        :return: The id of this ListStorageLensConfigurationEntry.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ListStorageLensConfigurationEntry.


        :param id: The id of this ListStorageLensConfigurationEntry.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def storage_lens_arn(self):
        """Gets the storage_lens_arn of this ListStorageLensConfigurationEntry.


        :return: The storage_lens_arn of this ListStorageLensConfigurationEntry.
        :rtype: str
        """
        return self._storage_lens_arn

    @storage_lens_arn.setter
    def storage_lens_arn(self, storage_lens_arn):
        """Sets the storage_lens_arn of this ListStorageLensConfigurationEntry.


        :param storage_lens_arn: The storage_lens_arn of this ListStorageLensConfigurationEntry.
        :type storage_lens_arn: str
        """
        if storage_lens_arn is None:
            raise ValueError("Invalid value for `storage_lens_arn`, must not be `None`")

        self._storage_lens_arn = storage_lens_arn

    @property
    def home_region(self):
        """Gets the home_region of this ListStorageLensConfigurationEntry.


        :return: The home_region of this ListStorageLensConfigurationEntry.
        :rtype: str
        """
        return self._home_region

    @home_region.setter
    def home_region(self, home_region):
        """Sets the home_region of this ListStorageLensConfigurationEntry.


        :param home_region: The home_region of this ListStorageLensConfigurationEntry.
        :type home_region: str
        """
        if home_region is None:
            raise ValueError("Invalid value for `home_region`, must not be `None`")

        self._home_region = home_region

    @property
    def is_enabled(self):
        """Gets the is_enabled of this ListStorageLensConfigurationEntry.


        :return: The is_enabled of this ListStorageLensConfigurationEntry.
        :rtype: bool
        """
        return self._is_enabled

    @is_enabled.setter
    def is_enabled(self, is_enabled):
        """Sets the is_enabled of this ListStorageLensConfigurationEntry.


        :param is_enabled: The is_enabled of this ListStorageLensConfigurationEntry.
        :type is_enabled: bool
        """

        self._is_enabled = is_enabled
