/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIS3Grant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIS3Grant::OAIS3Grant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIS3Grant::OAIS3Grant() {
    this->initializeModel();
}

OAIS3Grant::~OAIS3Grant() {}

void OAIS3Grant::initializeModel() {

    m_grantee_isSet = false;
    m_grantee_isValid = false;

    m_permission_isSet = false;
    m_permission_isValid = false;
}

void OAIS3Grant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIS3Grant::fromJsonObject(QJsonObject json) {

    m_grantee_isValid = ::OpenAPI::fromJsonValue(m_grantee, json[QString("Grantee")]);
    m_grantee_isSet = !json[QString("Grantee")].isNull() && m_grantee_isValid;

    m_permission_isValid = ::OpenAPI::fromJsonValue(m_permission, json[QString("Permission")]);
    m_permission_isSet = !json[QString("Permission")].isNull() && m_permission_isValid;
}

QString OAIS3Grant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIS3Grant::asJsonObject() const {
    QJsonObject obj;
    if (m_grantee.isSet()) {
        obj.insert(QString("Grantee"), ::OpenAPI::toJsonValue(m_grantee));
    }
    if (m_permission.isSet()) {
        obj.insert(QString("Permission"), ::OpenAPI::toJsonValue(m_permission));
    }
    return obj;
}

OAIS3Grant_Grantee OAIS3Grant::getGrantee() const {
    return m_grantee;
}
void OAIS3Grant::setGrantee(const OAIS3Grant_Grantee &grantee) {
    m_grantee = grantee;
    m_grantee_isSet = true;
}

bool OAIS3Grant::is_grantee_Set() const{
    return m_grantee_isSet;
}

bool OAIS3Grant::is_grantee_Valid() const{
    return m_grantee_isValid;
}

OAIS3Permission OAIS3Grant::getPermission() const {
    return m_permission;
}
void OAIS3Grant::setPermission(const OAIS3Permission &permission) {
    m_permission = permission;
    m_permission_isSet = true;
}

bool OAIS3Grant::is_permission_Set() const{
    return m_permission_isSet;
}

bool OAIS3Grant::is_permission_Valid() const{
    return m_permission_isValid;
}

bool OAIS3Grant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_grantee.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_permission.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIS3Grant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
