/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateJob_request_Manifest_Location.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateJob_request_Manifest_Location::OAICreateJob_request_Manifest_Location(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateJob_request_Manifest_Location::OAICreateJob_request_Manifest_Location() {
    this->initializeModel();
}

OAICreateJob_request_Manifest_Location::~OAICreateJob_request_Manifest_Location() {}

void OAICreateJob_request_Manifest_Location::initializeModel() {

    m_object_arn_isSet = false;
    m_object_arn_isValid = false;

    m_object_version_id_isSet = false;
    m_object_version_id_isValid = false;

    m_e_tag_isSet = false;
    m_e_tag_isValid = false;
}

void OAICreateJob_request_Manifest_Location::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateJob_request_Manifest_Location::fromJsonObject(QJsonObject json) {

    m_object_arn_isValid = ::OpenAPI::fromJsonValue(m_object_arn, json[QString("ObjectArn")]);
    m_object_arn_isSet = !json[QString("ObjectArn")].isNull() && m_object_arn_isValid;

    m_object_version_id_isValid = ::OpenAPI::fromJsonValue(m_object_version_id, json[QString("ObjectVersionId")]);
    m_object_version_id_isSet = !json[QString("ObjectVersionId")].isNull() && m_object_version_id_isValid;

    m_e_tag_isValid = ::OpenAPI::fromJsonValue(m_e_tag, json[QString("ETag")]);
    m_e_tag_isSet = !json[QString("ETag")].isNull() && m_e_tag_isValid;
}

QString OAICreateJob_request_Manifest_Location::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateJob_request_Manifest_Location::asJsonObject() const {
    QJsonObject obj;
    if (m_object_arn_isSet) {
        obj.insert(QString("ObjectArn"), ::OpenAPI::toJsonValue(m_object_arn));
    }
    if (m_object_version_id_isSet) {
        obj.insert(QString("ObjectVersionId"), ::OpenAPI::toJsonValue(m_object_version_id));
    }
    if (m_e_tag_isSet) {
        obj.insert(QString("ETag"), ::OpenAPI::toJsonValue(m_e_tag));
    }
    return obj;
}

QString OAICreateJob_request_Manifest_Location::getObjectArn() const {
    return m_object_arn;
}
void OAICreateJob_request_Manifest_Location::setObjectArn(const QString &object_arn) {
    m_object_arn = object_arn;
    m_object_arn_isSet = true;
}

bool OAICreateJob_request_Manifest_Location::is_object_arn_Set() const{
    return m_object_arn_isSet;
}

bool OAICreateJob_request_Manifest_Location::is_object_arn_Valid() const{
    return m_object_arn_isValid;
}

QString OAICreateJob_request_Manifest_Location::getObjectVersionId() const {
    return m_object_version_id;
}
void OAICreateJob_request_Manifest_Location::setObjectVersionId(const QString &object_version_id) {
    m_object_version_id = object_version_id;
    m_object_version_id_isSet = true;
}

bool OAICreateJob_request_Manifest_Location::is_object_version_id_Set() const{
    return m_object_version_id_isSet;
}

bool OAICreateJob_request_Manifest_Location::is_object_version_id_Valid() const{
    return m_object_version_id_isValid;
}

QString OAICreateJob_request_Manifest_Location::getETag() const {
    return m_e_tag;
}
void OAICreateJob_request_Manifest_Location::setETag(const QString &e_tag) {
    m_e_tag = e_tag;
    m_e_tag_isSet = true;
}

bool OAICreateJob_request_Manifest_Location::is_e_tag_Set() const{
    return m_e_tag_isSet;
}

bool OAICreateJob_request_Manifest_Location::is_e_tag_Valid() const{
    return m_e_tag_isValid;
}

bool OAICreateJob_request_Manifest_Location::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_version_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_tag_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateJob_request_Manifest_Location::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_object_arn_isValid && m_e_tag_isValid && true;
}

} // namespace OpenAPI
