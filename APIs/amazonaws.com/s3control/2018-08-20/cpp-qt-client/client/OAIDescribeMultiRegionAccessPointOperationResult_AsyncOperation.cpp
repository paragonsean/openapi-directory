/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation() {
    this->initializeModel();
}

OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::~OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation() {}

void OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_request_token_arn_isSet = false;
    m_request_token_arn_isValid = false;

    m_request_parameters_isSet = false;
    m_request_parameters_isValid = false;

    m_request_status_isSet = false;
    m_request_status_isValid = false;

    m_response_details_isSet = false;
    m_response_details_isValid = false;
}

void OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("Operation")]);
    m_operation_isSet = !json[QString("Operation")].isNull() && m_operation_isValid;

    m_request_token_arn_isValid = ::OpenAPI::fromJsonValue(m_request_token_arn, json[QString("RequestTokenARN")]);
    m_request_token_arn_isSet = !json[QString("RequestTokenARN")].isNull() && m_request_token_arn_isValid;

    m_request_parameters_isValid = ::OpenAPI::fromJsonValue(m_request_parameters, json[QString("RequestParameters")]);
    m_request_parameters_isSet = !json[QString("RequestParameters")].isNull() && m_request_parameters_isValid;

    m_request_status_isValid = ::OpenAPI::fromJsonValue(m_request_status, json[QString("RequestStatus")]);
    m_request_status_isSet = !json[QString("RequestStatus")].isNull() && m_request_status_isValid;

    m_response_details_isValid = ::OpenAPI::fromJsonValue(m_response_details, json[QString("ResponseDetails")]);
    m_response_details_isSet = !json[QString("ResponseDetails")].isNull() && m_response_details_isValid;
}

QString OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_operation.isSet()) {
        obj.insert(QString("Operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_request_token_arn_isSet) {
        obj.insert(QString("RequestTokenARN"), ::OpenAPI::toJsonValue(m_request_token_arn));
    }
    if (m_request_parameters.isSet()) {
        obj.insert(QString("RequestParameters"), ::OpenAPI::toJsonValue(m_request_parameters));
    }
    if (m_request_status_isSet) {
        obj.insert(QString("RequestStatus"), ::OpenAPI::toJsonValue(m_request_status));
    }
    if (m_response_details.isSet()) {
        obj.insert(QString("ResponseDetails"), ::OpenAPI::toJsonValue(m_response_details));
    }
    return obj;
}

QDateTime OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

OAIAsyncOperationName OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::getOperation() const {
    return m_operation;
}
void OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::setOperation(const OAIAsyncOperationName &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_operation_Valid() const{
    return m_operation_isValid;
}

QString OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::getRequestTokenArn() const {
    return m_request_token_arn;
}
void OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::setRequestTokenArn(const QString &request_token_arn) {
    m_request_token_arn = request_token_arn;
    m_request_token_arn_isSet = true;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_request_token_arn_Set() const{
    return m_request_token_arn_isSet;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_request_token_arn_Valid() const{
    return m_request_token_arn_isValid;
}

OAIAsyncOperation_RequestParameters OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::getRequestParameters() const {
    return m_request_parameters;
}
void OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::setRequestParameters(const OAIAsyncOperation_RequestParameters &request_parameters) {
    m_request_parameters = request_parameters;
    m_request_parameters_isSet = true;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_request_parameters_Set() const{
    return m_request_parameters_isSet;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_request_parameters_Valid() const{
    return m_request_parameters_isValid;
}

QString OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::getRequestStatus() const {
    return m_request_status;
}
void OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::setRequestStatus(const QString &request_status) {
    m_request_status = request_status;
    m_request_status_isSet = true;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_request_status_Set() const{
    return m_request_status_isSet;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_request_status_Valid() const{
    return m_request_status_isValid;
}

OAIAsyncOperation_ResponseDetails OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::getResponseDetails() const {
    return m_response_details;
}
void OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::setResponseDetails(const OAIAsyncOperation_ResponseDetails &response_details) {
    m_response_details = response_details;
    m_response_details_isSet = true;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_response_details_Set() const{
    return m_response_details_isSet;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::is_response_details_Valid() const{
    return m_response_details_isValid;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_token_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeMultiRegionAccessPointOperationResult_AsyncOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
