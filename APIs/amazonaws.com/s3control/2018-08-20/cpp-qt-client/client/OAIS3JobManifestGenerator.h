/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3JobManifestGenerator.h
 *
 * The container for the service that will create the S3 manifest.
 */

#ifndef OAIS3JobManifestGenerator_H
#define OAIS3JobManifestGenerator_H

#include <QJsonObject>

#include "OAIS3JobManifestGenerator_Filter.h"
#include "OAIS3JobManifestGenerator_ManifestOutputLocation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3JobManifestGenerator_ManifestOutputLocation;
class OAIS3JobManifestGenerator_Filter;

class OAIS3JobManifestGenerator : public OAIObject {
public:
    OAIS3JobManifestGenerator();
    OAIS3JobManifestGenerator(QString json);
    ~OAIS3JobManifestGenerator() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExpectedBucketOwner() const;
    void setExpectedBucketOwner(const QString &expected_bucket_owner);
    bool is_expected_bucket_owner_Set() const;
    bool is_expected_bucket_owner_Valid() const;

    QString getSourceBucket() const;
    void setSourceBucket(const QString &source_bucket);
    bool is_source_bucket_Set() const;
    bool is_source_bucket_Valid() const;

    OAIS3JobManifestGenerator_ManifestOutputLocation getManifestOutputLocation() const;
    void setManifestOutputLocation(const OAIS3JobManifestGenerator_ManifestOutputLocation &manifest_output_location);
    bool is_manifest_output_location_Set() const;
    bool is_manifest_output_location_Valid() const;

    OAIS3JobManifestGenerator_Filter getFilter() const;
    void setFilter(const OAIS3JobManifestGenerator_Filter &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    bool getEnableManifestOutput() const;
    void setEnableManifestOutput(const bool &enable_manifest_output);
    bool is_enable_manifest_output_Set() const;
    bool is_enable_manifest_output_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_expected_bucket_owner;
    bool m_expected_bucket_owner_isSet;
    bool m_expected_bucket_owner_isValid;

    QString m_source_bucket;
    bool m_source_bucket_isSet;
    bool m_source_bucket_isValid;

    OAIS3JobManifestGenerator_ManifestOutputLocation m_manifest_output_location;
    bool m_manifest_output_location_isSet;
    bool m_manifest_output_location_isValid;

    OAIS3JobManifestGenerator_Filter m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    bool m_enable_manifest_output;
    bool m_enable_manifest_output_isSet;
    bool m_enable_manifest_output_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3JobManifestGenerator)

#endif // OAIS3JobManifestGenerator_H
