/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIS3Grant_Grantee.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIS3Grant_Grantee::OAIS3Grant_Grantee(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIS3Grant_Grantee::OAIS3Grant_Grantee() {
    this->initializeModel();
}

OAIS3Grant_Grantee::~OAIS3Grant_Grantee() {}

void OAIS3Grant_Grantee::initializeModel() {

    m_type_identifier_isSet = false;
    m_type_identifier_isValid = false;

    m_identifier_isSet = false;
    m_identifier_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;
}

void OAIS3Grant_Grantee::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIS3Grant_Grantee::fromJsonObject(QJsonObject json) {

    m_type_identifier_isValid = ::OpenAPI::fromJsonValue(m_type_identifier, json[QString("TypeIdentifier")]);
    m_type_identifier_isSet = !json[QString("TypeIdentifier")].isNull() && m_type_identifier_isValid;

    m_identifier_isValid = ::OpenAPI::fromJsonValue(m_identifier, json[QString("Identifier")]);
    m_identifier_isSet = !json[QString("Identifier")].isNull() && m_identifier_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("DisplayName")]);
    m_display_name_isSet = !json[QString("DisplayName")].isNull() && m_display_name_isValid;
}

QString OAIS3Grant_Grantee::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIS3Grant_Grantee::asJsonObject() const {
    QJsonObject obj;
    if (m_type_identifier.isSet()) {
        obj.insert(QString("TypeIdentifier"), ::OpenAPI::toJsonValue(m_type_identifier));
    }
    if (m_identifier_isSet) {
        obj.insert(QString("Identifier"), ::OpenAPI::toJsonValue(m_identifier));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("DisplayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    return obj;
}

OAIS3GranteeTypeIdentifier OAIS3Grant_Grantee::getTypeIdentifier() const {
    return m_type_identifier;
}
void OAIS3Grant_Grantee::setTypeIdentifier(const OAIS3GranteeTypeIdentifier &type_identifier) {
    m_type_identifier = type_identifier;
    m_type_identifier_isSet = true;
}

bool OAIS3Grant_Grantee::is_type_identifier_Set() const{
    return m_type_identifier_isSet;
}

bool OAIS3Grant_Grantee::is_type_identifier_Valid() const{
    return m_type_identifier_isValid;
}

QString OAIS3Grant_Grantee::getIdentifier() const {
    return m_identifier;
}
void OAIS3Grant_Grantee::setIdentifier(const QString &identifier) {
    m_identifier = identifier;
    m_identifier_isSet = true;
}

bool OAIS3Grant_Grantee::is_identifier_Set() const{
    return m_identifier_isSet;
}

bool OAIS3Grant_Grantee::is_identifier_Valid() const{
    return m_identifier_isValid;
}

QString OAIS3Grant_Grantee::getDisplayName() const {
    return m_display_name;
}
void OAIS3Grant_Grantee::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIS3Grant_Grantee::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIS3Grant_Grantee::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIS3Grant_Grantee::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type_identifier.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIS3Grant_Grantee::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
