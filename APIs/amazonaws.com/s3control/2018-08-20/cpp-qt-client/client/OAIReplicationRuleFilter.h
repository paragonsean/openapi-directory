/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplicationRuleFilter.h
 *
 * A filter that identifies the subset of objects to which the replication rule applies. A &lt;code&gt;Filter&lt;/code&gt; element must specify exactly one &lt;code&gt;Prefix&lt;/code&gt;, &lt;code&gt;Tag&lt;/code&gt;, or &lt;code&gt;And&lt;/code&gt; child element.
 */

#ifndef OAIReplicationRuleFilter_H
#define OAIReplicationRuleFilter_H

#include <QJsonObject>

#include "OAIReplicationRuleFilter_And.h"
#include "OAIS3Tag.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3Tag;
class OAIReplicationRuleFilter_And;

class OAIReplicationRuleFilter : public OAIObject {
public:
    OAIReplicationRuleFilter();
    OAIReplicationRuleFilter(QString json);
    ~OAIReplicationRuleFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    OAIS3Tag getTag() const;
    void setTag(const OAIS3Tag &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    OAIReplicationRuleFilter_And getRAnd() const;
    void setRAnd(const OAIReplicationRuleFilter_And &r_and);
    bool is_r_and_Set() const;
    bool is_r_and_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;

    OAIS3Tag m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;

    OAIReplicationRuleFilter_And m_r_and;
    bool m_r_and_isSet;
    bool m_r_and_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplicationRuleFilter)

#endif // OAIReplicationRuleFilter_H
