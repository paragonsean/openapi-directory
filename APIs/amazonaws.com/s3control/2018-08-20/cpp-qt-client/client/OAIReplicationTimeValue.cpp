/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReplicationTimeValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReplicationTimeValue::OAIReplicationTimeValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReplicationTimeValue::OAIReplicationTimeValue() {
    this->initializeModel();
}

OAIReplicationTimeValue::~OAIReplicationTimeValue() {}

void OAIReplicationTimeValue::initializeModel() {

    m_minutes_isSet = false;
    m_minutes_isValid = false;
}

void OAIReplicationTimeValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReplicationTimeValue::fromJsonObject(QJsonObject json) {

    m_minutes_isValid = ::OpenAPI::fromJsonValue(m_minutes, json[QString("Minutes")]);
    m_minutes_isSet = !json[QString("Minutes")].isNull() && m_minutes_isValid;
}

QString OAIReplicationTimeValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReplicationTimeValue::asJsonObject() const {
    QJsonObject obj;
    if (m_minutes_isSet) {
        obj.insert(QString("Minutes"), ::OpenAPI::toJsonValue(m_minutes));
    }
    return obj;
}

qint32 OAIReplicationTimeValue::getMinutes() const {
    return m_minutes;
}
void OAIReplicationTimeValue::setMinutes(const qint32 &minutes) {
    m_minutes = minutes;
    m_minutes_isSet = true;
}

bool OAIReplicationTimeValue::is_minutes_Set() const{
    return m_minutes_isSet;
}

bool OAIReplicationTimeValue::is_minutes_Valid() const{
    return m_minutes_isValid;
}

bool OAIReplicationTimeValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReplicationTimeValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
