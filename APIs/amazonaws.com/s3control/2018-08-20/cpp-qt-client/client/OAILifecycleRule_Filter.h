/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILifecycleRule_Filter.h
 *
 * 
 */

#ifndef OAILifecycleRule_Filter_H
#define OAILifecycleRule_Filter_H

#include <QJsonObject>

#include "OAILifecycleRuleFilter_And.h"
#include "OAIS3Tag.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3Tag;
class OAILifecycleRuleFilter_And;

class OAILifecycleRule_Filter : public OAIObject {
public:
    OAILifecycleRule_Filter();
    OAILifecycleRule_Filter(QString json);
    ~OAILifecycleRule_Filter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    OAIS3Tag getTag() const;
    void setTag(const OAIS3Tag &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    OAILifecycleRuleFilter_And getRAnd() const;
    void setRAnd(const OAILifecycleRuleFilter_And &r_and);
    bool is_r_and_Set() const;
    bool is_r_and_Valid() const;

    qint32 getObjectSizeGreaterThan() const;
    void setObjectSizeGreaterThan(const qint32 &object_size_greater_than);
    bool is_object_size_greater_than_Set() const;
    bool is_object_size_greater_than_Valid() const;

    qint32 getObjectSizeLessThan() const;
    void setObjectSizeLessThan(const qint32 &object_size_less_than);
    bool is_object_size_less_than_Set() const;
    bool is_object_size_less_than_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;

    OAIS3Tag m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;

    OAILifecycleRuleFilter_And m_r_and;
    bool m_r_and_isSet;
    bool m_r_and_isValid;

    qint32 m_object_size_greater_than;
    bool m_object_size_greater_than_isSet;
    bool m_object_size_greater_than_isValid;

    qint32 m_object_size_less_than;
    bool m_object_size_less_than_isSet;
    bool m_object_size_less_than_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILifecycleRule_Filter)

#endif // OAILifecycleRule_Filter_H
