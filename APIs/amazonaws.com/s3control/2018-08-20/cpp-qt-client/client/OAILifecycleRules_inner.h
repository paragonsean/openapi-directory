/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILifecycleRules_inner.h
 *
 * 
 */

#ifndef OAILifecycleRules_inner_H
#define OAILifecycleRules_inner_H

#include <QJsonObject>

#include "OAIExpirationStatus.h"
#include "OAILifecycleRule_AbortIncompleteMultipartUpload.h"
#include "OAILifecycleRule_Expiration.h"
#include "OAILifecycleRule_Filter.h"
#include "OAILifecycleRule_NoncurrentVersionExpiration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILifecycleRule_Expiration;
class OAILifecycleRule_Filter;
class OAILifecycleRule_NoncurrentVersionExpiration;
class OAILifecycleRule_AbortIncompleteMultipartUpload;

class OAILifecycleRules_inner : public OAIObject {
public:
    OAILifecycleRules_inner();
    OAILifecycleRules_inner(QString json);
    ~OAILifecycleRules_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILifecycleRule_Expiration getExpiration() const;
    void setExpiration(const OAILifecycleRule_Expiration &expiration);
    bool is_expiration_Set() const;
    bool is_expiration_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAILifecycleRule_Filter getFilter() const;
    void setFilter(const OAILifecycleRule_Filter &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    OAIExpirationStatus getStatus() const;
    void setStatus(const OAIExpirationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList getTransitions() const;
    void setTransitions(const QList &transitions);
    bool is_transitions_Set() const;
    bool is_transitions_Valid() const;

    QList getNoncurrentVersionTransitions() const;
    void setNoncurrentVersionTransitions(const QList &noncurrent_version_transitions);
    bool is_noncurrent_version_transitions_Set() const;
    bool is_noncurrent_version_transitions_Valid() const;

    OAILifecycleRule_NoncurrentVersionExpiration getNoncurrentVersionExpiration() const;
    void setNoncurrentVersionExpiration(const OAILifecycleRule_NoncurrentVersionExpiration &noncurrent_version_expiration);
    bool is_noncurrent_version_expiration_Set() const;
    bool is_noncurrent_version_expiration_Valid() const;

    OAILifecycleRule_AbortIncompleteMultipartUpload getAbortIncompleteMultipartUpload() const;
    void setAbortIncompleteMultipartUpload(const OAILifecycleRule_AbortIncompleteMultipartUpload &abort_incomplete_multipart_upload);
    bool is_abort_incomplete_multipart_upload_Set() const;
    bool is_abort_incomplete_multipart_upload_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILifecycleRule_Expiration m_expiration;
    bool m_expiration_isSet;
    bool m_expiration_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAILifecycleRule_Filter m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    OAIExpirationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList m_transitions;
    bool m_transitions_isSet;
    bool m_transitions_isValid;

    QList m_noncurrent_version_transitions;
    bool m_noncurrent_version_transitions_isSet;
    bool m_noncurrent_version_transitions_isValid;

    OAILifecycleRule_NoncurrentVersionExpiration m_noncurrent_version_expiration;
    bool m_noncurrent_version_expiration_isSet;
    bool m_noncurrent_version_expiration_isValid;

    OAILifecycleRule_AbortIncompleteMultipartUpload m_abort_incomplete_multipart_upload;
    bool m_abort_incomplete_multipart_upload_isSet;
    bool m_abort_incomplete_multipart_upload_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILifecycleRules_inner)

#endif // OAILifecycleRules_inner_H
