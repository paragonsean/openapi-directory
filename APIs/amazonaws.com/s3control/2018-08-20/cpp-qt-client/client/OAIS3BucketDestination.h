/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3BucketDestination.h
 *
 * A container for the bucket where the Amazon S3 Storage Lens metrics export files are located.
 */

#ifndef OAIS3BucketDestination_H
#define OAIS3BucketDestination_H

#include <QJsonObject>

#include "OAIFormat.h"
#include "OAIOutputSchemaVersion.h"
#include "OAIS3BucketDestination_Encryption.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3BucketDestination_Encryption;

class OAIS3BucketDestination : public OAIObject {
public:
    OAIS3BucketDestination();
    OAIS3BucketDestination(QString json);
    ~OAIS3BucketDestination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFormat getFormat() const;
    void setFormat(const OAIFormat &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    OAIOutputSchemaVersion getOutputSchemaVersion() const;
    void setOutputSchemaVersion(const OAIOutputSchemaVersion &output_schema_version);
    bool is_output_schema_version_Set() const;
    bool is_output_schema_version_Valid() const;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    OAIS3BucketDestination_Encryption getEncryption() const;
    void setEncryption(const OAIS3BucketDestination_Encryption &encryption);
    bool is_encryption_Set() const;
    bool is_encryption_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFormat m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    OAIOutputSchemaVersion m_output_schema_version;
    bool m_output_schema_version_isSet;
    bool m_output_schema_version_isValid;

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;

    OAIS3BucketDestination_Encryption m_encryption;
    bool m_encryption_isSet;
    bool m_encryption_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3BucketDestination)

#endif // OAIS3BucketDestination_H
