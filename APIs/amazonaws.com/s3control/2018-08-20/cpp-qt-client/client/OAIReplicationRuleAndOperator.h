/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplicationRuleAndOperator.h
 *
 * &lt;p&gt;A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. &lt;/p&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;If you specify both a &lt;code&gt;Prefix&lt;/code&gt; and a &lt;code&gt;Tag&lt;/code&gt; filter, wrap these filters in an &lt;code&gt;And&lt;/code&gt; element. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you specify a filter based on multiple tags, wrap the &lt;code&gt;Tag&lt;/code&gt; elements in an &lt;code&gt;And&lt;/code&gt; element.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */

#ifndef OAIReplicationRuleAndOperator_H
#define OAIReplicationRuleAndOperator_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReplicationRuleAndOperator : public OAIObject {
public:
    OAIReplicationRuleAndOperator();
    OAIReplicationRuleAndOperator(QString json);
    ~OAIReplicationRuleAndOperator() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplicationRuleAndOperator)

#endif // OAIReplicationRuleAndOperator_H
