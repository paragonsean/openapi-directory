/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetAccessPointConfigurationForObjectLambdaResult_Configuration.h
 *
 * 
 */

#ifndef OAIGetAccessPointConfigurationForObjectLambdaResult_Configuration_H
#define OAIGetAccessPointConfigurationForObjectLambdaResult_Configuration_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetAccessPointConfigurationForObjectLambdaResult_Configuration : public OAIObject {
public:
    OAIGetAccessPointConfigurationForObjectLambdaResult_Configuration();
    OAIGetAccessPointConfigurationForObjectLambdaResult_Configuration(QString json);
    ~OAIGetAccessPointConfigurationForObjectLambdaResult_Configuration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSupportingAccessPoint() const;
    void setSupportingAccessPoint(const QString &supporting_access_point);
    bool is_supporting_access_point_Set() const;
    bool is_supporting_access_point_Valid() const;

    bool getCloudWatchMetricsEnabled() const;
    void setCloudWatchMetricsEnabled(const bool &cloud_watch_metrics_enabled);
    bool is_cloud_watch_metrics_enabled_Set() const;
    bool is_cloud_watch_metrics_enabled_Valid() const;

    QList getAllowedFeatures() const;
    void setAllowedFeatures(const QList &allowed_features);
    bool is_allowed_features_Set() const;
    bool is_allowed_features_Valid() const;

    QList getTransformationConfigurations() const;
    void setTransformationConfigurations(const QList &transformation_configurations);
    bool is_transformation_configurations_Set() const;
    bool is_transformation_configurations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_supporting_access_point;
    bool m_supporting_access_point_isSet;
    bool m_supporting_access_point_isValid;

    bool m_cloud_watch_metrics_enabled;
    bool m_cloud_watch_metrics_enabled_isSet;
    bool m_cloud_watch_metrics_enabled_isValid;

    QList m_allowed_features;
    bool m_allowed_features_isSet;
    bool m_allowed_features_isValid;

    QList m_transformation_configurations;
    bool m_transformation_configurations_isSet;
    bool m_transformation_configurations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetAccessPointConfigurationForObjectLambdaResult_Configuration)

#endif // OAIGetAccessPointConfigurationForObjectLambdaResult_Configuration_H
