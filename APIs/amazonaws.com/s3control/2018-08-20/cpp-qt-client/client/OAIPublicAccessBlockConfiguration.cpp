/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublicAccessBlockConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublicAccessBlockConfiguration::OAIPublicAccessBlockConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublicAccessBlockConfiguration::OAIPublicAccessBlockConfiguration() {
    this->initializeModel();
}

OAIPublicAccessBlockConfiguration::~OAIPublicAccessBlockConfiguration() {}

void OAIPublicAccessBlockConfiguration::initializeModel() {

    m_block_public_acls_isSet = false;
    m_block_public_acls_isValid = false;

    m_ignore_public_acls_isSet = false;
    m_ignore_public_acls_isValid = false;

    m_block_public_policy_isSet = false;
    m_block_public_policy_isValid = false;

    m_restrict_public_buckets_isSet = false;
    m_restrict_public_buckets_isValid = false;
}

void OAIPublicAccessBlockConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublicAccessBlockConfiguration::fromJsonObject(QJsonObject json) {

    m_block_public_acls_isValid = ::OpenAPI::fromJsonValue(m_block_public_acls, json[QString("BlockPublicAcls")]);
    m_block_public_acls_isSet = !json[QString("BlockPublicAcls")].isNull() && m_block_public_acls_isValid;

    m_ignore_public_acls_isValid = ::OpenAPI::fromJsonValue(m_ignore_public_acls, json[QString("IgnorePublicAcls")]);
    m_ignore_public_acls_isSet = !json[QString("IgnorePublicAcls")].isNull() && m_ignore_public_acls_isValid;

    m_block_public_policy_isValid = ::OpenAPI::fromJsonValue(m_block_public_policy, json[QString("BlockPublicPolicy")]);
    m_block_public_policy_isSet = !json[QString("BlockPublicPolicy")].isNull() && m_block_public_policy_isValid;

    m_restrict_public_buckets_isValid = ::OpenAPI::fromJsonValue(m_restrict_public_buckets, json[QString("RestrictPublicBuckets")]);
    m_restrict_public_buckets_isSet = !json[QString("RestrictPublicBuckets")].isNull() && m_restrict_public_buckets_isValid;
}

QString OAIPublicAccessBlockConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublicAccessBlockConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_block_public_acls_isSet) {
        obj.insert(QString("BlockPublicAcls"), ::OpenAPI::toJsonValue(m_block_public_acls));
    }
    if (m_ignore_public_acls_isSet) {
        obj.insert(QString("IgnorePublicAcls"), ::OpenAPI::toJsonValue(m_ignore_public_acls));
    }
    if (m_block_public_policy_isSet) {
        obj.insert(QString("BlockPublicPolicy"), ::OpenAPI::toJsonValue(m_block_public_policy));
    }
    if (m_restrict_public_buckets_isSet) {
        obj.insert(QString("RestrictPublicBuckets"), ::OpenAPI::toJsonValue(m_restrict_public_buckets));
    }
    return obj;
}

bool OAIPublicAccessBlockConfiguration::getBlockPublicAcls() const {
    return m_block_public_acls;
}
void OAIPublicAccessBlockConfiguration::setBlockPublicAcls(const bool &block_public_acls) {
    m_block_public_acls = block_public_acls;
    m_block_public_acls_isSet = true;
}

bool OAIPublicAccessBlockConfiguration::is_block_public_acls_Set() const{
    return m_block_public_acls_isSet;
}

bool OAIPublicAccessBlockConfiguration::is_block_public_acls_Valid() const{
    return m_block_public_acls_isValid;
}

bool OAIPublicAccessBlockConfiguration::getIgnorePublicAcls() const {
    return m_ignore_public_acls;
}
void OAIPublicAccessBlockConfiguration::setIgnorePublicAcls(const bool &ignore_public_acls) {
    m_ignore_public_acls = ignore_public_acls;
    m_ignore_public_acls_isSet = true;
}

bool OAIPublicAccessBlockConfiguration::is_ignore_public_acls_Set() const{
    return m_ignore_public_acls_isSet;
}

bool OAIPublicAccessBlockConfiguration::is_ignore_public_acls_Valid() const{
    return m_ignore_public_acls_isValid;
}

bool OAIPublicAccessBlockConfiguration::getBlockPublicPolicy() const {
    return m_block_public_policy;
}
void OAIPublicAccessBlockConfiguration::setBlockPublicPolicy(const bool &block_public_policy) {
    m_block_public_policy = block_public_policy;
    m_block_public_policy_isSet = true;
}

bool OAIPublicAccessBlockConfiguration::is_block_public_policy_Set() const{
    return m_block_public_policy_isSet;
}

bool OAIPublicAccessBlockConfiguration::is_block_public_policy_Valid() const{
    return m_block_public_policy_isValid;
}

bool OAIPublicAccessBlockConfiguration::getRestrictPublicBuckets() const {
    return m_restrict_public_buckets;
}
void OAIPublicAccessBlockConfiguration::setRestrictPublicBuckets(const bool &restrict_public_buckets) {
    m_restrict_public_buckets = restrict_public_buckets;
    m_restrict_public_buckets_isSet = true;
}

bool OAIPublicAccessBlockConfiguration::is_restrict_public_buckets_Set() const{
    return m_restrict_public_buckets_isSet;
}

bool OAIPublicAccessBlockConfiguration::is_restrict_public_buckets_Valid() const{
    return m_restrict_public_buckets_isValid;
}

bool OAIPublicAccessBlockConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_block_public_acls_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ignore_public_acls_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_block_public_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_restrict_public_buckets_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublicAccessBlockConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
