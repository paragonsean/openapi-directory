/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAsyncOperation_RequestParameters.h
 *
 * 
 */

#ifndef OAIAsyncOperation_RequestParameters_H
#define OAIAsyncOperation_RequestParameters_H

#include <QJsonObject>

#include "OAIAsyncRequestParameters_CreateMultiRegionAccessPointRequest.h"
#include "OAIAsyncRequestParameters_DeleteMultiRegionAccessPointRequest.h"
#include "OAIAsyncRequestParameters_PutMultiRegionAccessPointPolicyRequest.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAsyncRequestParameters_CreateMultiRegionAccessPointRequest;
class OAIAsyncRequestParameters_DeleteMultiRegionAccessPointRequest;
class OAIAsyncRequestParameters_PutMultiRegionAccessPointPolicyRequest;

class OAIAsyncOperation_RequestParameters : public OAIObject {
public:
    OAIAsyncOperation_RequestParameters();
    OAIAsyncOperation_RequestParameters(QString json);
    ~OAIAsyncOperation_RequestParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAsyncRequestParameters_CreateMultiRegionAccessPointRequest getCreateMultiRegionAccessPointRequest() const;
    void setCreateMultiRegionAccessPointRequest(const OAIAsyncRequestParameters_CreateMultiRegionAccessPointRequest &create_multi_region_access_point_request);
    bool is_create_multi_region_access_point_request_Set() const;
    bool is_create_multi_region_access_point_request_Valid() const;

    OAIAsyncRequestParameters_DeleteMultiRegionAccessPointRequest getDeleteMultiRegionAccessPointRequest() const;
    void setDeleteMultiRegionAccessPointRequest(const OAIAsyncRequestParameters_DeleteMultiRegionAccessPointRequest &delete_multi_region_access_point_request);
    bool is_delete_multi_region_access_point_request_Set() const;
    bool is_delete_multi_region_access_point_request_Valid() const;

    OAIAsyncRequestParameters_PutMultiRegionAccessPointPolicyRequest getPutMultiRegionAccessPointPolicyRequest() const;
    void setPutMultiRegionAccessPointPolicyRequest(const OAIAsyncRequestParameters_PutMultiRegionAccessPointPolicyRequest &put_multi_region_access_point_policy_request);
    bool is_put_multi_region_access_point_policy_request_Set() const;
    bool is_put_multi_region_access_point_policy_request_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAsyncRequestParameters_CreateMultiRegionAccessPointRequest m_create_multi_region_access_point_request;
    bool m_create_multi_region_access_point_request_isSet;
    bool m_create_multi_region_access_point_request_isValid;

    OAIAsyncRequestParameters_DeleteMultiRegionAccessPointRequest m_delete_multi_region_access_point_request;
    bool m_delete_multi_region_access_point_request_isSet;
    bool m_delete_multi_region_access_point_request_isValid;

    OAIAsyncRequestParameters_PutMultiRegionAccessPointPolicyRequest m_put_multi_region_access_point_policy_request;
    bool m_put_multi_region_access_point_policy_request_isSet;
    bool m_put_multi_region_access_point_policy_request_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAsyncOperation_RequestParameters)

#endif // OAIAsyncOperation_RequestParameters_H
