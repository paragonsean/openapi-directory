/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountLevel_AdvancedCostOptimizationMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountLevel_AdvancedCostOptimizationMetrics::OAIAccountLevel_AdvancedCostOptimizationMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountLevel_AdvancedCostOptimizationMetrics::OAIAccountLevel_AdvancedCostOptimizationMetrics() {
    this->initializeModel();
}

OAIAccountLevel_AdvancedCostOptimizationMetrics::~OAIAccountLevel_AdvancedCostOptimizationMetrics() {}

void OAIAccountLevel_AdvancedCostOptimizationMetrics::initializeModel() {

    m_is_enabled_isSet = false;
    m_is_enabled_isValid = false;
}

void OAIAccountLevel_AdvancedCostOptimizationMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountLevel_AdvancedCostOptimizationMetrics::fromJsonObject(QJsonObject json) {

    m_is_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_enabled, json[QString("IsEnabled")]);
    m_is_enabled_isSet = !json[QString("IsEnabled")].isNull() && m_is_enabled_isValid;
}

QString OAIAccountLevel_AdvancedCostOptimizationMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountLevel_AdvancedCostOptimizationMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_is_enabled_isSet) {
        obj.insert(QString("IsEnabled"), ::OpenAPI::toJsonValue(m_is_enabled));
    }
    return obj;
}

bool OAIAccountLevel_AdvancedCostOptimizationMetrics::getIsEnabled() const {
    return m_is_enabled;
}
void OAIAccountLevel_AdvancedCostOptimizationMetrics::setIsEnabled(const bool &is_enabled) {
    m_is_enabled = is_enabled;
    m_is_enabled_isSet = true;
}

bool OAIAccountLevel_AdvancedCostOptimizationMetrics::is_is_enabled_Set() const{
    return m_is_enabled_isSet;
}

bool OAIAccountLevel_AdvancedCostOptimizationMetrics::is_is_enabled_Valid() const{
    return m_is_enabled_isValid;
}

bool OAIAccountLevel_AdvancedCostOptimizationMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountLevel_AdvancedCostOptimizationMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
