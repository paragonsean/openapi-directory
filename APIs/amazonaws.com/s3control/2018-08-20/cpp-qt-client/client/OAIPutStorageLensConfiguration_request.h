/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutStorageLensConfiguration_request.h
 *
 * 
 */

#ifndef OAIPutStorageLensConfiguration_request_H
#define OAIPutStorageLensConfiguration_request_H

#include <QJsonObject>

#include "OAIPutStorageLensConfiguration_request_StorageLensConfiguration.h"
#include "OAIPutStorageLensConfiguration_request_Tags_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPutStorageLensConfiguration_request_StorageLensConfiguration;
class OAIPutStorageLensConfiguration_request_Tags_inner;

class OAIPutStorageLensConfiguration_request : public OAIObject {
public:
    OAIPutStorageLensConfiguration_request();
    OAIPutStorageLensConfiguration_request(QString json);
    ~OAIPutStorageLensConfiguration_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPutStorageLensConfiguration_request_StorageLensConfiguration getStorageLensConfiguration() const;
    void setStorageLensConfiguration(const OAIPutStorageLensConfiguration_request_StorageLensConfiguration &storage_lens_configuration);
    bool is_storage_lens_configuration_Set() const;
    bool is_storage_lens_configuration_Valid() const;

    QList<OAIPutStorageLensConfiguration_request_Tags_inner> getTags() const;
    void setTags(const QList<OAIPutStorageLensConfiguration_request_Tags_inner> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPutStorageLensConfiguration_request_StorageLensConfiguration m_storage_lens_configuration;
    bool m_storage_lens_configuration_isSet;
    bool m_storage_lens_configuration_isValid;

    QList<OAIPutStorageLensConfiguration_request_Tags_inner> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutStorageLensConfiguration_request)

#endif // OAIPutStorageLensConfiguration_request_H
