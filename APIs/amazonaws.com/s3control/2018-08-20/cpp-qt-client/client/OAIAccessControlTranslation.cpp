/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccessControlTranslation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccessControlTranslation::OAIAccessControlTranslation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccessControlTranslation::OAIAccessControlTranslation() {
    this->initializeModel();
}

OAIAccessControlTranslation::~OAIAccessControlTranslation() {}

void OAIAccessControlTranslation::initializeModel() {

    m_owner_isSet = false;
    m_owner_isValid = false;
}

void OAIAccessControlTranslation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccessControlTranslation::fromJsonObject(QJsonObject json) {

    m_owner_isValid = ::OpenAPI::fromJsonValue(m_owner, json[QString("Owner")]);
    m_owner_isSet = !json[QString("Owner")].isNull() && m_owner_isValid;
}

QString OAIAccessControlTranslation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccessControlTranslation::asJsonObject() const {
    QJsonObject obj;
    if (m_owner.isSet()) {
        obj.insert(QString("Owner"), ::OpenAPI::toJsonValue(m_owner));
    }
    return obj;
}

OAIOwnerOverride OAIAccessControlTranslation::getOwner() const {
    return m_owner;
}
void OAIAccessControlTranslation::setOwner(const OAIOwnerOverride &owner) {
    m_owner = owner;
    m_owner_isSet = true;
}

bool OAIAccessControlTranslation::is_owner_Set() const{
    return m_owner_isSet;
}

bool OAIAccessControlTranslation::is_owner_Valid() const{
    return m_owner_isValid;
}

bool OAIAccessControlTranslation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_owner.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccessControlTranslation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_owner_isValid && true;
}

} // namespace OpenAPI
