/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestination_ReplicationTime.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestination_ReplicationTime::OAIDestination_ReplicationTime(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestination_ReplicationTime::OAIDestination_ReplicationTime() {
    this->initializeModel();
}

OAIDestination_ReplicationTime::~OAIDestination_ReplicationTime() {}

void OAIDestination_ReplicationTime::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;
}

void OAIDestination_ReplicationTime::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestination_ReplicationTime::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("Time")]);
    m_time_isSet = !json[QString("Time")].isNull() && m_time_isValid;
}

QString OAIDestination_ReplicationTime::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestination_ReplicationTime::asJsonObject() const {
    QJsonObject obj;
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_time.isSet()) {
        obj.insert(QString("Time"), ::OpenAPI::toJsonValue(m_time));
    }
    return obj;
}

OAIReplicationTimeStatus OAIDestination_ReplicationTime::getStatus() const {
    return m_status;
}
void OAIDestination_ReplicationTime::setStatus(const OAIReplicationTimeStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDestination_ReplicationTime::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDestination_ReplicationTime::is_status_Valid() const{
    return m_status_isValid;
}

OAIReplicationTime_Time OAIDestination_ReplicationTime::getTime() const {
    return m_time;
}
void OAIDestination_ReplicationTime::setTime(const OAIReplicationTime_Time &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIDestination_ReplicationTime::is_time_Set() const{
    return m_time_isSet;
}

bool OAIDestination_ReplicationTime::is_time_Valid() const{
    return m_time_isValid;
}

bool OAIDestination_ReplicationTime::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestination_ReplicationTime::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_status_isValid && m_time_isValid && true;
}

} // namespace OpenAPI
