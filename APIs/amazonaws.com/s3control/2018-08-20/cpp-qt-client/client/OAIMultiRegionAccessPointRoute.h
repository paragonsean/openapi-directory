/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMultiRegionAccessPointRoute.h
 *
 * &lt;p&gt;A structure for a Multi-Region Access Point that indicates where Amazon S3 traffic can be routed. Routes can be either active or passive. Active routes can process Amazon S3 requests through the Multi-Region Access Point, but passive routes are not eligible to process Amazon S3 requests. &lt;/p&gt; &lt;p&gt;Each route contains the Amazon S3 bucket name and the Amazon Web Services Region that the bucket is located in. The route also includes the &lt;code&gt;TrafficDialPercentage&lt;/code&gt; value, which shows whether the bucket and Region are active (indicated by a value of &lt;code&gt;100&lt;/code&gt;) or passive (indicated by a value of &lt;code&gt;0&lt;/code&gt;).&lt;/p&gt;
 */

#ifndef OAIMultiRegionAccessPointRoute_H
#define OAIMultiRegionAccessPointRoute_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMultiRegionAccessPointRoute : public OAIObject {
public:
    OAIMultiRegionAccessPointRoute();
    OAIMultiRegionAccessPointRoute(QString json);
    ~OAIMultiRegionAccessPointRoute() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBucket() const;
    void setBucket(const QString &bucket);
    bool is_bucket_Set() const;
    bool is_bucket_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    qint32 getTrafficDialPercentage() const;
    void setTrafficDialPercentage(const qint32 &traffic_dial_percentage);
    bool is_traffic_dial_percentage_Set() const;
    bool is_traffic_dial_percentage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bucket;
    bool m_bucket_isSet;
    bool m_bucket_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    qint32 m_traffic_dial_percentage;
    bool m_traffic_dial_percentage_isSet;
    bool m_traffic_dial_percentage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMultiRegionAccessPointRoute)

#endif // OAIMultiRegionAccessPointRoute_H
