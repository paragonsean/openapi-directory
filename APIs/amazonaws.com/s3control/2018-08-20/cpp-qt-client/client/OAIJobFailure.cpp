/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobFailure.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobFailure::OAIJobFailure(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobFailure::OAIJobFailure() {
    this->initializeModel();
}

OAIJobFailure::~OAIJobFailure() {}

void OAIJobFailure::initializeModel() {

    m_failure_code_isSet = false;
    m_failure_code_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;
}

void OAIJobFailure::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobFailure::fromJsonObject(QJsonObject json) {

    m_failure_code_isValid = ::OpenAPI::fromJsonValue(m_failure_code, json[QString("FailureCode")]);
    m_failure_code_isSet = !json[QString("FailureCode")].isNull() && m_failure_code_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("FailureReason")]);
    m_failure_reason_isSet = !json[QString("FailureReason")].isNull() && m_failure_reason_isValid;
}

QString OAIJobFailure::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobFailure::asJsonObject() const {
    QJsonObject obj;
    if (m_failure_code_isSet) {
        obj.insert(QString("FailureCode"), ::OpenAPI::toJsonValue(m_failure_code));
    }
    if (m_failure_reason_isSet) {
        obj.insert(QString("FailureReason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    return obj;
}

QString OAIJobFailure::getFailureCode() const {
    return m_failure_code;
}
void OAIJobFailure::setFailureCode(const QString &failure_code) {
    m_failure_code = failure_code;
    m_failure_code_isSet = true;
}

bool OAIJobFailure::is_failure_code_Set() const{
    return m_failure_code_isSet;
}

bool OAIJobFailure::is_failure_code_Valid() const{
    return m_failure_code_isValid;
}

QString OAIJobFailure::getFailureReason() const {
    return m_failure_reason;
}
void OAIJobFailure::setFailureReason(const QString &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAIJobFailure::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAIJobFailure::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

bool OAIJobFailure::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_failure_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobFailure::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
