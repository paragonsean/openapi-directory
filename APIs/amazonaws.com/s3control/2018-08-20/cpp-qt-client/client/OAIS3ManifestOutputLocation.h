/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3ManifestOutputLocation.h
 *
 * Location details for where the generated manifest should be written.
 */

#ifndef OAIS3ManifestOutputLocation_H
#define OAIS3ManifestOutputLocation_H

#include <QJsonObject>

#include "OAIGeneratedManifestFormat.h"
#include "OAIS3ManifestOutputLocation_ManifestEncryption.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3ManifestOutputLocation_ManifestEncryption;

class OAIS3ManifestOutputLocation : public OAIObject {
public:
    OAIS3ManifestOutputLocation();
    OAIS3ManifestOutputLocation(QString json);
    ~OAIS3ManifestOutputLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExpectedManifestBucketOwner() const;
    void setExpectedManifestBucketOwner(const QString &expected_manifest_bucket_owner);
    bool is_expected_manifest_bucket_owner_Set() const;
    bool is_expected_manifest_bucket_owner_Valid() const;

    QString getBucket() const;
    void setBucket(const QString &bucket);
    bool is_bucket_Set() const;
    bool is_bucket_Valid() const;

    QString getManifestPrefix() const;
    void setManifestPrefix(const QString &manifest_prefix);
    bool is_manifest_prefix_Set() const;
    bool is_manifest_prefix_Valid() const;

    OAIS3ManifestOutputLocation_ManifestEncryption getManifestEncryption() const;
    void setManifestEncryption(const OAIS3ManifestOutputLocation_ManifestEncryption &manifest_encryption);
    bool is_manifest_encryption_Set() const;
    bool is_manifest_encryption_Valid() const;

    OAIGeneratedManifestFormat getManifestFormat() const;
    void setManifestFormat(const OAIGeneratedManifestFormat &manifest_format);
    bool is_manifest_format_Set() const;
    bool is_manifest_format_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_expected_manifest_bucket_owner;
    bool m_expected_manifest_bucket_owner_isSet;
    bool m_expected_manifest_bucket_owner_isValid;

    QString m_bucket;
    bool m_bucket_isSet;
    bool m_bucket_isValid;

    QString m_manifest_prefix;
    bool m_manifest_prefix_isSet;
    bool m_manifest_prefix_isValid;

    OAIS3ManifestOutputLocation_ManifestEncryption m_manifest_encryption;
    bool m_manifest_encryption_isSet;
    bool m_manifest_encryption_isValid;

    OAIGeneratedManifestFormat m_manifest_format;
    bool m_manifest_format_isSet;
    bool m_manifest_format_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3ManifestOutputLocation)

#endif // OAIS3ManifestOutputLocation_H
