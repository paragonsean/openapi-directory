/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBucketLevel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBucketLevel::OAIBucketLevel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBucketLevel::OAIBucketLevel() {
    this->initializeModel();
}

OAIBucketLevel::~OAIBucketLevel() {}

void OAIBucketLevel::initializeModel() {

    m_activity_metrics_isSet = false;
    m_activity_metrics_isValid = false;

    m_prefix_level_isSet = false;
    m_prefix_level_isValid = false;

    m_advanced_cost_optimization_metrics_isSet = false;
    m_advanced_cost_optimization_metrics_isValid = false;

    m_advanced_data_protection_metrics_isSet = false;
    m_advanced_data_protection_metrics_isValid = false;

    m_detailed_status_codes_metrics_isSet = false;
    m_detailed_status_codes_metrics_isValid = false;
}

void OAIBucketLevel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBucketLevel::fromJsonObject(QJsonObject json) {

    m_activity_metrics_isValid = ::OpenAPI::fromJsonValue(m_activity_metrics, json[QString("ActivityMetrics")]);
    m_activity_metrics_isSet = !json[QString("ActivityMetrics")].isNull() && m_activity_metrics_isValid;

    m_prefix_level_isValid = ::OpenAPI::fromJsonValue(m_prefix_level, json[QString("PrefixLevel")]);
    m_prefix_level_isSet = !json[QString("PrefixLevel")].isNull() && m_prefix_level_isValid;

    m_advanced_cost_optimization_metrics_isValid = ::OpenAPI::fromJsonValue(m_advanced_cost_optimization_metrics, json[QString("AdvancedCostOptimizationMetrics")]);
    m_advanced_cost_optimization_metrics_isSet = !json[QString("AdvancedCostOptimizationMetrics")].isNull() && m_advanced_cost_optimization_metrics_isValid;

    m_advanced_data_protection_metrics_isValid = ::OpenAPI::fromJsonValue(m_advanced_data_protection_metrics, json[QString("AdvancedDataProtectionMetrics")]);
    m_advanced_data_protection_metrics_isSet = !json[QString("AdvancedDataProtectionMetrics")].isNull() && m_advanced_data_protection_metrics_isValid;

    m_detailed_status_codes_metrics_isValid = ::OpenAPI::fromJsonValue(m_detailed_status_codes_metrics, json[QString("DetailedStatusCodesMetrics")]);
    m_detailed_status_codes_metrics_isSet = !json[QString("DetailedStatusCodesMetrics")].isNull() && m_detailed_status_codes_metrics_isValid;
}

QString OAIBucketLevel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBucketLevel::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_metrics.isSet()) {
        obj.insert(QString("ActivityMetrics"), ::OpenAPI::toJsonValue(m_activity_metrics));
    }
    if (m_prefix_level.isSet()) {
        obj.insert(QString("PrefixLevel"), ::OpenAPI::toJsonValue(m_prefix_level));
    }
    if (m_advanced_cost_optimization_metrics.isSet()) {
        obj.insert(QString("AdvancedCostOptimizationMetrics"), ::OpenAPI::toJsonValue(m_advanced_cost_optimization_metrics));
    }
    if (m_advanced_data_protection_metrics.isSet()) {
        obj.insert(QString("AdvancedDataProtectionMetrics"), ::OpenAPI::toJsonValue(m_advanced_data_protection_metrics));
    }
    if (m_detailed_status_codes_metrics.isSet()) {
        obj.insert(QString("DetailedStatusCodesMetrics"), ::OpenAPI::toJsonValue(m_detailed_status_codes_metrics));
    }
    return obj;
}

OAIBucketLevel_ActivityMetrics OAIBucketLevel::getActivityMetrics() const {
    return m_activity_metrics;
}
void OAIBucketLevel::setActivityMetrics(const OAIBucketLevel_ActivityMetrics &activity_metrics) {
    m_activity_metrics = activity_metrics;
    m_activity_metrics_isSet = true;
}

bool OAIBucketLevel::is_activity_metrics_Set() const{
    return m_activity_metrics_isSet;
}

bool OAIBucketLevel::is_activity_metrics_Valid() const{
    return m_activity_metrics_isValid;
}

OAIBucketLevel_PrefixLevel OAIBucketLevel::getPrefixLevel() const {
    return m_prefix_level;
}
void OAIBucketLevel::setPrefixLevel(const OAIBucketLevel_PrefixLevel &prefix_level) {
    m_prefix_level = prefix_level;
    m_prefix_level_isSet = true;
}

bool OAIBucketLevel::is_prefix_level_Set() const{
    return m_prefix_level_isSet;
}

bool OAIBucketLevel::is_prefix_level_Valid() const{
    return m_prefix_level_isValid;
}

OAIBucketLevel_AdvancedCostOptimizationMetrics OAIBucketLevel::getAdvancedCostOptimizationMetrics() const {
    return m_advanced_cost_optimization_metrics;
}
void OAIBucketLevel::setAdvancedCostOptimizationMetrics(const OAIBucketLevel_AdvancedCostOptimizationMetrics &advanced_cost_optimization_metrics) {
    m_advanced_cost_optimization_metrics = advanced_cost_optimization_metrics;
    m_advanced_cost_optimization_metrics_isSet = true;
}

bool OAIBucketLevel::is_advanced_cost_optimization_metrics_Set() const{
    return m_advanced_cost_optimization_metrics_isSet;
}

bool OAIBucketLevel::is_advanced_cost_optimization_metrics_Valid() const{
    return m_advanced_cost_optimization_metrics_isValid;
}

OAIBucketLevel_AdvancedDataProtectionMetrics OAIBucketLevel::getAdvancedDataProtectionMetrics() const {
    return m_advanced_data_protection_metrics;
}
void OAIBucketLevel::setAdvancedDataProtectionMetrics(const OAIBucketLevel_AdvancedDataProtectionMetrics &advanced_data_protection_metrics) {
    m_advanced_data_protection_metrics = advanced_data_protection_metrics;
    m_advanced_data_protection_metrics_isSet = true;
}

bool OAIBucketLevel::is_advanced_data_protection_metrics_Set() const{
    return m_advanced_data_protection_metrics_isSet;
}

bool OAIBucketLevel::is_advanced_data_protection_metrics_Valid() const{
    return m_advanced_data_protection_metrics_isValid;
}

OAIBucketLevel_DetailedStatusCodesMetrics OAIBucketLevel::getDetailedStatusCodesMetrics() const {
    return m_detailed_status_codes_metrics;
}
void OAIBucketLevel::setDetailedStatusCodesMetrics(const OAIBucketLevel_DetailedStatusCodesMetrics &detailed_status_codes_metrics) {
    m_detailed_status_codes_metrics = detailed_status_codes_metrics;
    m_detailed_status_codes_metrics_isSet = true;
}

bool OAIBucketLevel::is_detailed_status_codes_metrics_Set() const{
    return m_detailed_status_codes_metrics_isSet;
}

bool OAIBucketLevel::is_detailed_status_codes_metrics_Valid() const{
    return m_detailed_status_codes_metrics_isValid;
}

bool OAIBucketLevel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_prefix_level.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_advanced_cost_optimization_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_advanced_data_protection_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_detailed_status_codes_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBucketLevel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
