/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectLambdaContentTransformation_AwsLambda.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectLambdaContentTransformation_AwsLambda::OAIObjectLambdaContentTransformation_AwsLambda(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectLambdaContentTransformation_AwsLambda::OAIObjectLambdaContentTransformation_AwsLambda() {
    this->initializeModel();
}

OAIObjectLambdaContentTransformation_AwsLambda::~OAIObjectLambdaContentTransformation_AwsLambda() {}

void OAIObjectLambdaContentTransformation_AwsLambda::initializeModel() {

    m_function_arn_isSet = false;
    m_function_arn_isValid = false;

    m_function_payload_isSet = false;
    m_function_payload_isValid = false;
}

void OAIObjectLambdaContentTransformation_AwsLambda::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIObjectLambdaContentTransformation_AwsLambda::fromJsonObject(QJsonObject json) {

    m_function_arn_isValid = ::OpenAPI::fromJsonValue(m_function_arn, json[QString("FunctionArn")]);
    m_function_arn_isSet = !json[QString("FunctionArn")].isNull() && m_function_arn_isValid;

    m_function_payload_isValid = ::OpenAPI::fromJsonValue(m_function_payload, json[QString("FunctionPayload")]);
    m_function_payload_isSet = !json[QString("FunctionPayload")].isNull() && m_function_payload_isValid;
}

QString OAIObjectLambdaContentTransformation_AwsLambda::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIObjectLambdaContentTransformation_AwsLambda::asJsonObject() const {
    QJsonObject obj;
    if (m_function_arn_isSet) {
        obj.insert(QString("FunctionArn"), ::OpenAPI::toJsonValue(m_function_arn));
    }
    if (m_function_payload_isSet) {
        obj.insert(QString("FunctionPayload"), ::OpenAPI::toJsonValue(m_function_payload));
    }
    return obj;
}

QString OAIObjectLambdaContentTransformation_AwsLambda::getFunctionArn() const {
    return m_function_arn;
}
void OAIObjectLambdaContentTransformation_AwsLambda::setFunctionArn(const QString &function_arn) {
    m_function_arn = function_arn;
    m_function_arn_isSet = true;
}

bool OAIObjectLambdaContentTransformation_AwsLambda::is_function_arn_Set() const{
    return m_function_arn_isSet;
}

bool OAIObjectLambdaContentTransformation_AwsLambda::is_function_arn_Valid() const{
    return m_function_arn_isValid;
}

QString OAIObjectLambdaContentTransformation_AwsLambda::getFunctionPayload() const {
    return m_function_payload;
}
void OAIObjectLambdaContentTransformation_AwsLambda::setFunctionPayload(const QString &function_payload) {
    m_function_payload = function_payload;
    m_function_payload_isSet = true;
}

bool OAIObjectLambdaContentTransformation_AwsLambda::is_function_payload_Set() const{
    return m_function_payload_isSet;
}

bool OAIObjectLambdaContentTransformation_AwsLambda::is_function_payload_Valid() const{
    return m_function_payload_isValid;
}

bool OAIObjectLambdaContentTransformation_AwsLambda::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_function_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_function_payload_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIObjectLambdaContentTransformation_AwsLambda::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_function_arn_isValid && true;
}

} // namespace OpenAPI
