/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MultiRegionAccessPointPolicyDocument from './MultiRegionAccessPointPolicyDocument';
import MultiRegionAccessPointPolicyDocumentEstablished from './MultiRegionAccessPointPolicyDocumentEstablished';
import MultiRegionAccessPointPolicyDocumentProposed from './MultiRegionAccessPointPolicyDocumentProposed';

/**
 * The GetMultiRegionAccessPointPolicyResultPolicy model module.
 * @module model/GetMultiRegionAccessPointPolicyResultPolicy
 * @version 2018-08-20
 */
class GetMultiRegionAccessPointPolicyResultPolicy {
    /**
     * Constructs a new <code>GetMultiRegionAccessPointPolicyResultPolicy</code>.
     * @alias module:model/GetMultiRegionAccessPointPolicyResultPolicy
     * @implements module:model/MultiRegionAccessPointPolicyDocument
     */
    constructor() { 
        MultiRegionAccessPointPolicyDocument.initialize(this);
        GetMultiRegionAccessPointPolicyResultPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetMultiRegionAccessPointPolicyResultPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetMultiRegionAccessPointPolicyResultPolicy} obj Optional instance to populate.
     * @return {module:model/GetMultiRegionAccessPointPolicyResultPolicy} The populated <code>GetMultiRegionAccessPointPolicyResultPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetMultiRegionAccessPointPolicyResultPolicy();
            MultiRegionAccessPointPolicyDocument.constructFromObject(data, obj);

            if (data.hasOwnProperty('Established')) {
                obj['Established'] = MultiRegionAccessPointPolicyDocumentEstablished.constructFromObject(data['Established']);
            }
            if (data.hasOwnProperty('Proposed')) {
                obj['Proposed'] = MultiRegionAccessPointPolicyDocumentProposed.constructFromObject(data['Proposed']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetMultiRegionAccessPointPolicyResultPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetMultiRegionAccessPointPolicyResultPolicy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Established`
        if (data['Established']) { // data not null
          MultiRegionAccessPointPolicyDocumentEstablished.validateJSON(data['Established']);
        }
        // validate the optional field `Proposed`
        if (data['Proposed']) { // data not null
          MultiRegionAccessPointPolicyDocumentProposed.validateJSON(data['Proposed']);
        }

        return true;
    }


}



/**
 * @member {module:model/MultiRegionAccessPointPolicyDocumentEstablished} Established
 */
GetMultiRegionAccessPointPolicyResultPolicy.prototype['Established'] = undefined;

/**
 * @member {module:model/MultiRegionAccessPointPolicyDocumentProposed} Proposed
 */
GetMultiRegionAccessPointPolicyResultPolicy.prototype['Proposed'] = undefined;


// Implement MultiRegionAccessPointPolicyDocument interface:
/**
 * @member {module:model/MultiRegionAccessPointPolicyDocumentEstablished} Established
 */
MultiRegionAccessPointPolicyDocument.prototype['Established'] = undefined;
/**
 * @member {module:model/MultiRegionAccessPointPolicyDocumentProposed} Proposed
 */
MultiRegionAccessPointPolicyDocument.prototype['Proposed'] = undefined;




export default GetMultiRegionAccessPointPolicyResultPolicy;

