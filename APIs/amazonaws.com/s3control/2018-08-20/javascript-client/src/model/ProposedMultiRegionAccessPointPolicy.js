/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProposedMultiRegionAccessPointPolicy model module.
 * @module model/ProposedMultiRegionAccessPointPolicy
 * @version 2018-08-20
 */
class ProposedMultiRegionAccessPointPolicy {
    /**
     * Constructs a new <code>ProposedMultiRegionAccessPointPolicy</code>.
     * &lt;p&gt;The proposed access control policy for the Multi-Region Access Point.&lt;/p&gt; &lt;p&gt;When you update the policy, the update is first listed as the proposed policy. After the update is finished and all Regions have been updated, the proposed policy is listed as the established policy. If both policies have the same version number, the proposed policy is the established policy.&lt;/p&gt;
     * @alias module:model/ProposedMultiRegionAccessPointPolicy
     */
    constructor() { 
        
        ProposedMultiRegionAccessPointPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProposedMultiRegionAccessPointPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProposedMultiRegionAccessPointPolicy} obj Optional instance to populate.
     * @return {module:model/ProposedMultiRegionAccessPointPolicy} The populated <code>ProposedMultiRegionAccessPointPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProposedMultiRegionAccessPointPolicy();

            if (data.hasOwnProperty('Policy')) {
                obj['Policy'] = ApiClient.convertToType(data['Policy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProposedMultiRegionAccessPointPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProposedMultiRegionAccessPointPolicy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Policy`
        if (data['Policy']) { // data not null
          String.validateJSON(data['Policy']);
        }

        return true;
    }


}



/**
 * @member {String} Policy
 */
ProposedMultiRegionAccessPointPolicy.prototype['Policy'] = undefined;






export default ProposedMultiRegionAccessPointPolicy;

