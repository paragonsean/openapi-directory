/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel from './PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel';
import PutStorageLensConfigurationRequestStorageLensConfigurationAwsOrg from './PutStorageLensConfigurationRequestStorageLensConfigurationAwsOrg';
import PutStorageLensConfigurationRequestStorageLensConfigurationDataExport from './PutStorageLensConfigurationRequestStorageLensConfigurationDataExport';
import PutStorageLensConfigurationRequestStorageLensConfigurationExclude from './PutStorageLensConfigurationRequestStorageLensConfigurationExclude';
import PutStorageLensConfigurationRequestStorageLensConfigurationInclude from './PutStorageLensConfigurationRequestStorageLensConfigurationInclude';

/**
 * The StorageLensConfiguration model module.
 * @module model/StorageLensConfiguration
 * @version 2018-08-20
 */
class StorageLensConfiguration {
    /**
     * Constructs a new <code>StorageLensConfiguration</code>.
     * A container for the Amazon S3 Storage Lens configuration.
     * @alias module:model/StorageLensConfiguration
     * @param id {String} 
     * @param accountLevel {module:model/PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel} 
     * @param isEnabled {Boolean} 
     */
    constructor(id, accountLevel, isEnabled) { 
        
        StorageLensConfiguration.initialize(this, id, accountLevel, isEnabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, accountLevel, isEnabled) { 
        obj['Id'] = id;
        obj['AccountLevel'] = accountLevel;
        obj['IsEnabled'] = isEnabled;
    }

    /**
     * Constructs a <code>StorageLensConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageLensConfiguration} obj Optional instance to populate.
     * @return {module:model/StorageLensConfiguration} The populated <code>StorageLensConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageLensConfiguration();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('AccountLevel')) {
                obj['AccountLevel'] = PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel.constructFromObject(data['AccountLevel']);
            }
            if (data.hasOwnProperty('Include')) {
                obj['Include'] = PutStorageLensConfigurationRequestStorageLensConfigurationInclude.constructFromObject(data['Include']);
            }
            if (data.hasOwnProperty('Exclude')) {
                obj['Exclude'] = PutStorageLensConfigurationRequestStorageLensConfigurationExclude.constructFromObject(data['Exclude']);
            }
            if (data.hasOwnProperty('DataExport')) {
                obj['DataExport'] = PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.constructFromObject(data['DataExport']);
            }
            if (data.hasOwnProperty('IsEnabled')) {
                obj['IsEnabled'] = ApiClient.convertToType(data['IsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('AwsOrg')) {
                obj['AwsOrg'] = PutStorageLensConfigurationRequestStorageLensConfigurationAwsOrg.constructFromObject(data['AwsOrg']);
            }
            if (data.hasOwnProperty('StorageLensArn')) {
                obj['StorageLensArn'] = ApiClient.convertToType(data['StorageLensArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageLensConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageLensConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StorageLensConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `AccountLevel`
        if (data['AccountLevel']) { // data not null
          PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel.validateJSON(data['AccountLevel']);
        }
        // validate the optional field `Include`
        if (data['Include']) { // data not null
          PutStorageLensConfigurationRequestStorageLensConfigurationInclude.validateJSON(data['Include']);
        }
        // validate the optional field `Exclude`
        if (data['Exclude']) { // data not null
          PutStorageLensConfigurationRequestStorageLensConfigurationExclude.validateJSON(data['Exclude']);
        }
        // validate the optional field `DataExport`
        if (data['DataExport']) { // data not null
          PutStorageLensConfigurationRequestStorageLensConfigurationDataExport.validateJSON(data['DataExport']);
        }
        // validate the optional field `IsEnabled`
        if (data['IsEnabled']) { // data not null
          Boolean.validateJSON(data['IsEnabled']);
        }
        // validate the optional field `AwsOrg`
        if (data['AwsOrg']) { // data not null
          PutStorageLensConfigurationRequestStorageLensConfigurationAwsOrg.validateJSON(data['AwsOrg']);
        }
        // validate the optional field `StorageLensArn`
        if (data['StorageLensArn']) { // data not null
          String.validateJSON(data['StorageLensArn']);
        }

        return true;
    }


}

StorageLensConfiguration.RequiredProperties = ["Id", "AccountLevel", "IsEnabled"];

/**
 * @member {String} Id
 */
StorageLensConfiguration.prototype['Id'] = undefined;

/**
 * @member {module:model/PutStorageLensConfigurationRequestStorageLensConfigurationAccountLevel} AccountLevel
 */
StorageLensConfiguration.prototype['AccountLevel'] = undefined;

/**
 * @member {module:model/PutStorageLensConfigurationRequestStorageLensConfigurationInclude} Include
 */
StorageLensConfiguration.prototype['Include'] = undefined;

/**
 * @member {module:model/PutStorageLensConfigurationRequestStorageLensConfigurationExclude} Exclude
 */
StorageLensConfiguration.prototype['Exclude'] = undefined;

/**
 * @member {module:model/PutStorageLensConfigurationRequestStorageLensConfigurationDataExport} DataExport
 */
StorageLensConfiguration.prototype['DataExport'] = undefined;

/**
 * @member {Boolean} IsEnabled
 */
StorageLensConfiguration.prototype['IsEnabled'] = undefined;

/**
 * @member {module:model/PutStorageLensConfigurationRequestStorageLensConfigurationAwsOrg} AwsOrg
 */
StorageLensConfiguration.prototype['AwsOrg'] = undefined;

/**
 * @member {String} StorageLensArn
 */
StorageLensConfiguration.prototype['StorageLensArn'] = undefined;






export default StorageLensConfiguration;

