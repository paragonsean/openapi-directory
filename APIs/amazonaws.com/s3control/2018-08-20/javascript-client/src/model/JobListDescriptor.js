/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobDescriptorProgressSummary from './JobDescriptorProgressSummary';
import JobStatus from './JobStatus';
import OperationName from './OperationName';

/**
 * The JobListDescriptor model module.
 * @module model/JobListDescriptor
 * @version 2018-08-20
 */
class JobListDescriptor {
    /**
     * Constructs a new <code>JobListDescriptor</code>.
     * Contains the configuration and status information for a single job retrieved as part of a job list.
     * @alias module:model/JobListDescriptor
     */
    constructor() { 
        
        JobListDescriptor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobListDescriptor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobListDescriptor} obj Optional instance to populate.
     * @return {module:model/JobListDescriptor} The populated <code>JobListDescriptor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobListDescriptor();

            if (data.hasOwnProperty('JobId')) {
                obj['JobId'] = ApiClient.convertToType(data['JobId'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Operation')) {
                obj['Operation'] = ApiClient.convertToType(data['Operation'], OperationName);
            }
            if (data.hasOwnProperty('Priority')) {
                obj['Priority'] = ApiClient.convertToType(data['Priority'], 'Number');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], JobStatus);
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('TerminationDate')) {
                obj['TerminationDate'] = ApiClient.convertToType(data['TerminationDate'], 'Date');
            }
            if (data.hasOwnProperty('ProgressSummary')) {
                obj['ProgressSummary'] = JobDescriptorProgressSummary.constructFromObject(data['ProgressSummary']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobListDescriptor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobListDescriptor</code>.
     */
    static validateJSON(data) {
        // validate the optional field `JobId`
        if (data['JobId']) { // data not null
          String.validateJSON(data['JobId']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `Operation`
        if (data['Operation']) { // data not null
          OperationName.validateJSON(data['Operation']);
        }
        // validate the optional field `Priority`
        if (data['Priority']) { // data not null
          Number.validateJSON(data['Priority']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          JobStatus.validateJSON(data['Status']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `TerminationDate`
        if (data['TerminationDate']) { // data not null
          Date.validateJSON(data['TerminationDate']);
        }
        // validate the optional field `ProgressSummary`
        if (data['ProgressSummary']) { // data not null
          JobDescriptorProgressSummary.validateJSON(data['ProgressSummary']);
        }

        return true;
    }


}



/**
 * @member {String} JobId
 */
JobListDescriptor.prototype['JobId'] = undefined;

/**
 * @member {String} Description
 */
JobListDescriptor.prototype['Description'] = undefined;

/**
 * @member {module:model/OperationName} Operation
 */
JobListDescriptor.prototype['Operation'] = undefined;

/**
 * @member {Number} Priority
 */
JobListDescriptor.prototype['Priority'] = undefined;

/**
 * @member {module:model/JobStatus} Status
 */
JobListDescriptor.prototype['Status'] = undefined;

/**
 * @member {Date} CreationTime
 */
JobListDescriptor.prototype['CreationTime'] = undefined;

/**
 * @member {Date} TerminationDate
 */
JobListDescriptor.prototype['TerminationDate'] = undefined;

/**
 * @member {module:model/JobDescriptorProgressSummary} ProgressSummary
 */
JobListDescriptor.prototype['ProgressSummary'] = undefined;






export default JobListDescriptor;

