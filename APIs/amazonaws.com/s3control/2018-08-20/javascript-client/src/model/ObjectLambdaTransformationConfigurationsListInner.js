/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjectLambdaTransformationConfiguration from './ObjectLambdaTransformationConfiguration';
import ObjectLambdaTransformationConfigurationContentTransformation from './ObjectLambdaTransformationConfigurationContentTransformation';

/**
 * The ObjectLambdaTransformationConfigurationsListInner model module.
 * @module model/ObjectLambdaTransformationConfigurationsListInner
 * @version 2018-08-20
 */
class ObjectLambdaTransformationConfigurationsListInner {
    /**
     * Constructs a new <code>ObjectLambdaTransformationConfigurationsListInner</code>.
     * @alias module:model/ObjectLambdaTransformationConfigurationsListInner
     * @implements module:model/ObjectLambdaTransformationConfiguration
     * @param actions {Array} 
     * @param contentTransformation {module:model/ObjectLambdaTransformationConfigurationContentTransformation} 
     */
    constructor(actions, contentTransformation) { 
        ObjectLambdaTransformationConfiguration.initialize(this, actions, contentTransformation);
        ObjectLambdaTransformationConfigurationsListInner.initialize(this, actions, contentTransformation);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, actions, contentTransformation) { 
        obj['Actions'] = actions;
        obj['ContentTransformation'] = contentTransformation;
    }

    /**
     * Constructs a <code>ObjectLambdaTransformationConfigurationsListInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjectLambdaTransformationConfigurationsListInner} obj Optional instance to populate.
     * @return {module:model/ObjectLambdaTransformationConfigurationsListInner} The populated <code>ObjectLambdaTransformationConfigurationsListInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjectLambdaTransformationConfigurationsListInner();
            ObjectLambdaTransformationConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('Actions')) {
                obj['Actions'] = ApiClient.convertToType(data['Actions'], Array);
            }
            if (data.hasOwnProperty('ContentTransformation')) {
                obj['ContentTransformation'] = ObjectLambdaTransformationConfigurationContentTransformation.constructFromObject(data['ContentTransformation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjectLambdaTransformationConfigurationsListInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjectLambdaTransformationConfigurationsListInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ObjectLambdaTransformationConfigurationsListInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Actions`
        if (data['Actions']) { // data not null
          Array.validateJSON(data['Actions']);
        }
        // validate the optional field `ContentTransformation`
        if (data['ContentTransformation']) { // data not null
          ObjectLambdaTransformationConfigurationContentTransformation.validateJSON(data['ContentTransformation']);
        }

        return true;
    }


}

ObjectLambdaTransformationConfigurationsListInner.RequiredProperties = ["Actions", "ContentTransformation"];

/**
 * @member {Array} Actions
 */
ObjectLambdaTransformationConfigurationsListInner.prototype['Actions'] = undefined;

/**
 * @member {module:model/ObjectLambdaTransformationConfigurationContentTransformation} ContentTransformation
 */
ObjectLambdaTransformationConfigurationsListInner.prototype['ContentTransformation'] = undefined;


// Implement ObjectLambdaTransformationConfiguration interface:
/**
 * @member {Array} Actions
 */
ObjectLambdaTransformationConfiguration.prototype['Actions'] = undefined;
/**
 * @member {module:model/ObjectLambdaTransformationConfigurationContentTransformation} ContentTransformation
 */
ObjectLambdaTransformationConfiguration.prototype['ContentTransformation'] = undefined;




export default ObjectLambdaTransformationConfigurationsListInner;

