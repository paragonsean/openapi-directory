/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Metrics from './Metrics';
import MetricsEventThreshold from './MetricsEventThreshold';
import MetricsStatus from './MetricsStatus';

/**
 * The DestinationMetrics model module.
 * @module model/DestinationMetrics
 * @version 2018-08-20
 */
class DestinationMetrics {
    /**
     * Constructs a new <code>DestinationMetrics</code>.
     * @alias module:model/DestinationMetrics
     * @implements module:model/Metrics
     * @param status {module:model/MetricsStatus} 
     */
    constructor(status) { 
        Metrics.initialize(this, status);
        DestinationMetrics.initialize(this, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status) { 
        obj['Status'] = status;
    }

    /**
     * Constructs a <code>DestinationMetrics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinationMetrics} obj Optional instance to populate.
     * @return {module:model/DestinationMetrics} The populated <code>DestinationMetrics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinationMetrics();
            Metrics.constructFromObject(data, obj);

            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], MetricsStatus);
            }
            if (data.hasOwnProperty('EventThreshold')) {
                obj['EventThreshold'] = MetricsEventThreshold.constructFromObject(data['EventThreshold']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinationMetrics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinationMetrics</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DestinationMetrics.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          MetricsStatus.validateJSON(data['Status']);
        }
        // validate the optional field `EventThreshold`
        if (data['EventThreshold']) { // data not null
          MetricsEventThreshold.validateJSON(data['EventThreshold']);
        }

        return true;
    }


}

DestinationMetrics.RequiredProperties = ["Status"];

/**
 * @member {module:model/MetricsStatus} Status
 */
DestinationMetrics.prototype['Status'] = undefined;

/**
 * @member {module:model/MetricsEventThreshold} EventThreshold
 */
DestinationMetrics.prototype['EventThreshold'] = undefined;


// Implement Metrics interface:
/**
 * @member {module:model/MetricsStatus} Status
 */
Metrics.prototype['Status'] = undefined;
/**
 * @member {module:model/MetricsEventThreshold} EventThreshold
 */
Metrics.prototype['EventThreshold'] = undefined;




export default DestinationMetrics;

