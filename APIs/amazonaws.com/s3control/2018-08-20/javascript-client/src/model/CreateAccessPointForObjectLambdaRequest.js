/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateAccessPointForObjectLambdaRequestConfiguration from './CreateAccessPointForObjectLambdaRequestConfiguration';

/**
 * The CreateAccessPointForObjectLambdaRequest model module.
 * @module model/CreateAccessPointForObjectLambdaRequest
 * @version 2018-08-20
 */
class CreateAccessPointForObjectLambdaRequest {
    /**
     * Constructs a new <code>CreateAccessPointForObjectLambdaRequest</code>.
     * @alias module:model/CreateAccessPointForObjectLambdaRequest
     * @param configuration {module:model/CreateAccessPointForObjectLambdaRequestConfiguration} 
     */
    constructor(configuration) { 
        
        CreateAccessPointForObjectLambdaRequest.initialize(this, configuration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, configuration) { 
        obj['Configuration'] = configuration;
    }

    /**
     * Constructs a <code>CreateAccessPointForObjectLambdaRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAccessPointForObjectLambdaRequest} obj Optional instance to populate.
     * @return {module:model/CreateAccessPointForObjectLambdaRequest} The populated <code>CreateAccessPointForObjectLambdaRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAccessPointForObjectLambdaRequest();

            if (data.hasOwnProperty('Configuration')) {
                obj['Configuration'] = CreateAccessPointForObjectLambdaRequestConfiguration.constructFromObject(data['Configuration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAccessPointForObjectLambdaRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAccessPointForObjectLambdaRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAccessPointForObjectLambdaRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Configuration`
        if (data['Configuration']) { // data not null
          CreateAccessPointForObjectLambdaRequestConfiguration.validateJSON(data['Configuration']);
        }

        return true;
    }


}

CreateAccessPointForObjectLambdaRequest.RequiredProperties = ["Configuration"];

/**
 * @member {module:model/CreateAccessPointForObjectLambdaRequestConfiguration} Configuration
 */
CreateAccessPointForObjectLambdaRequest.prototype['Configuration'] = undefined;






export default CreateAccessPointForObjectLambdaRequest;

