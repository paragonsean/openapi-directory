/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReplicationRule from './ReplicationRule';
import ReplicationRuleDeleteMarkerReplication from './ReplicationRuleDeleteMarkerReplication';
import ReplicationRuleDestination from './ReplicationRuleDestination';
import ReplicationRuleExistingObjectReplication from './ReplicationRuleExistingObjectReplication';
import ReplicationRuleFilter from './ReplicationRuleFilter';
import ReplicationRuleSourceSelectionCriteria from './ReplicationRuleSourceSelectionCriteria';
import ReplicationRuleStatus from './ReplicationRuleStatus';

/**
 * The ReplicationRulesInner model module.
 * @module model/ReplicationRulesInner
 * @version 2018-08-20
 */
class ReplicationRulesInner {
    /**
     * Constructs a new <code>ReplicationRulesInner</code>.
     * @alias module:model/ReplicationRulesInner
     * @implements module:model/ReplicationRule
     * @param status {module:model/ReplicationRuleStatus} 
     * @param destination {module:model/ReplicationRuleDestination} 
     * @param bucket {String} 
     */
    constructor(status, destination, bucket) { 
        ReplicationRule.initialize(this, status, destination, bucket);
        ReplicationRulesInner.initialize(this, status, destination, bucket);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status, destination, bucket) { 
        obj['Status'] = status;
        obj['Destination'] = destination;
        obj['Bucket'] = bucket;
    }

    /**
     * Constructs a <code>ReplicationRulesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplicationRulesInner} obj Optional instance to populate.
     * @return {module:model/ReplicationRulesInner} The populated <code>ReplicationRulesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplicationRulesInner();
            ReplicationRule.constructFromObject(data, obj);

            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'String');
            }
            if (data.hasOwnProperty('Priority')) {
                obj['Priority'] = ApiClient.convertToType(data['Priority'], 'Number');
            }
            if (data.hasOwnProperty('Prefix')) {
                obj['Prefix'] = ApiClient.convertToType(data['Prefix'], 'String');
            }
            if (data.hasOwnProperty('Filter')) {
                obj['Filter'] = ReplicationRuleFilter.constructFromObject(data['Filter']);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], ReplicationRuleStatus);
            }
            if (data.hasOwnProperty('SourceSelectionCriteria')) {
                obj['SourceSelectionCriteria'] = ReplicationRuleSourceSelectionCriteria.constructFromObject(data['SourceSelectionCriteria']);
            }
            if (data.hasOwnProperty('ExistingObjectReplication')) {
                obj['ExistingObjectReplication'] = ReplicationRuleExistingObjectReplication.constructFromObject(data['ExistingObjectReplication']);
            }
            if (data.hasOwnProperty('Destination')) {
                obj['Destination'] = ReplicationRuleDestination.constructFromObject(data['Destination']);
            }
            if (data.hasOwnProperty('DeleteMarkerReplication')) {
                obj['DeleteMarkerReplication'] = ReplicationRuleDeleteMarkerReplication.constructFromObject(data['DeleteMarkerReplication']);
            }
            if (data.hasOwnProperty('Bucket')) {
                obj['Bucket'] = ApiClient.convertToType(data['Bucket'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplicationRulesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplicationRulesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReplicationRulesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ID`
        if (data['ID']) { // data not null
          String.validateJSON(data['ID']);
        }
        // validate the optional field `Priority`
        if (data['Priority']) { // data not null
          Number.validateJSON(data['Priority']);
        }
        // validate the optional field `Prefix`
        if (data['Prefix']) { // data not null
          String.validateJSON(data['Prefix']);
        }
        // validate the optional field `Filter`
        if (data['Filter']) { // data not null
          ReplicationRuleFilter.validateJSON(data['Filter']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          ReplicationRuleStatus.validateJSON(data['Status']);
        }
        // validate the optional field `SourceSelectionCriteria`
        if (data['SourceSelectionCriteria']) { // data not null
          ReplicationRuleSourceSelectionCriteria.validateJSON(data['SourceSelectionCriteria']);
        }
        // validate the optional field `ExistingObjectReplication`
        if (data['ExistingObjectReplication']) { // data not null
          ReplicationRuleExistingObjectReplication.validateJSON(data['ExistingObjectReplication']);
        }
        // validate the optional field `Destination`
        if (data['Destination']) { // data not null
          ReplicationRuleDestination.validateJSON(data['Destination']);
        }
        // validate the optional field `DeleteMarkerReplication`
        if (data['DeleteMarkerReplication']) { // data not null
          ReplicationRuleDeleteMarkerReplication.validateJSON(data['DeleteMarkerReplication']);
        }
        // validate the optional field `Bucket`
        if (data['Bucket']) { // data not null
          String.validateJSON(data['Bucket']);
        }

        return true;
    }


}

ReplicationRulesInner.RequiredProperties = ["Status", "Destination", "Bucket"];

/**
 * @member {String} ID
 */
ReplicationRulesInner.prototype['ID'] = undefined;

/**
 * @member {Number} Priority
 */
ReplicationRulesInner.prototype['Priority'] = undefined;

/**
 * @member {String} Prefix
 */
ReplicationRulesInner.prototype['Prefix'] = undefined;

/**
 * @member {module:model/ReplicationRuleFilter} Filter
 */
ReplicationRulesInner.prototype['Filter'] = undefined;

/**
 * @member {module:model/ReplicationRuleStatus} Status
 */
ReplicationRulesInner.prototype['Status'] = undefined;

/**
 * @member {module:model/ReplicationRuleSourceSelectionCriteria} SourceSelectionCriteria
 */
ReplicationRulesInner.prototype['SourceSelectionCriteria'] = undefined;

/**
 * @member {module:model/ReplicationRuleExistingObjectReplication} ExistingObjectReplication
 */
ReplicationRulesInner.prototype['ExistingObjectReplication'] = undefined;

/**
 * @member {module:model/ReplicationRuleDestination} Destination
 */
ReplicationRulesInner.prototype['Destination'] = undefined;

/**
 * @member {module:model/ReplicationRuleDeleteMarkerReplication} DeleteMarkerReplication
 */
ReplicationRulesInner.prototype['DeleteMarkerReplication'] = undefined;

/**
 * @member {String} Bucket
 */
ReplicationRulesInner.prototype['Bucket'] = undefined;


// Implement ReplicationRule interface:
/**
 * @member {String} ID
 */
ReplicationRule.prototype['ID'] = undefined;
/**
 * @member {Number} Priority
 */
ReplicationRule.prototype['Priority'] = undefined;
/**
 * @member {String} Prefix
 */
ReplicationRule.prototype['Prefix'] = undefined;
/**
 * @member {module:model/ReplicationRuleFilter} Filter
 */
ReplicationRule.prototype['Filter'] = undefined;
/**
 * @member {module:model/ReplicationRuleStatus} Status
 */
ReplicationRule.prototype['Status'] = undefined;
/**
 * @member {module:model/ReplicationRuleSourceSelectionCriteria} SourceSelectionCriteria
 */
ReplicationRule.prototype['SourceSelectionCriteria'] = undefined;
/**
 * @member {module:model/ReplicationRuleExistingObjectReplication} ExistingObjectReplication
 */
ReplicationRule.prototype['ExistingObjectReplication'] = undefined;
/**
 * @member {module:model/ReplicationRuleDestination} Destination
 */
ReplicationRule.prototype['Destination'] = undefined;
/**
 * @member {module:model/ReplicationRuleDeleteMarkerReplication} DeleteMarkerReplication
 */
ReplicationRule.prototype['DeleteMarkerReplication'] = undefined;
/**
 * @member {String} Bucket
 */
ReplicationRule.prototype['Bucket'] = undefined;




export default ReplicationRulesInner;

