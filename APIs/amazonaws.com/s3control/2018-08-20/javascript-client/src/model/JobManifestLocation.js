/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobManifestLocation model module.
 * @module model/JobManifestLocation
 * @version 2018-08-20
 */
class JobManifestLocation {
    /**
     * Constructs a new <code>JobManifestLocation</code>.
     * Contains the information required to locate a manifest object.
     * @alias module:model/JobManifestLocation
     * @param objectArn {String} 
     * @param eTag {String} 
     */
    constructor(objectArn, eTag) { 
        
        JobManifestLocation.initialize(this, objectArn, eTag);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, objectArn, eTag) { 
        obj['ObjectArn'] = objectArn;
        obj['ETag'] = eTag;
    }

    /**
     * Constructs a <code>JobManifestLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobManifestLocation} obj Optional instance to populate.
     * @return {module:model/JobManifestLocation} The populated <code>JobManifestLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobManifestLocation();

            if (data.hasOwnProperty('ObjectArn')) {
                obj['ObjectArn'] = ApiClient.convertToType(data['ObjectArn'], 'String');
            }
            if (data.hasOwnProperty('ObjectVersionId')) {
                obj['ObjectVersionId'] = ApiClient.convertToType(data['ObjectVersionId'], 'String');
            }
            if (data.hasOwnProperty('ETag')) {
                obj['ETag'] = ApiClient.convertToType(data['ETag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobManifestLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobManifestLocation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobManifestLocation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ObjectArn`
        if (data['ObjectArn']) { // data not null
          String.validateJSON(data['ObjectArn']);
        }
        // validate the optional field `ObjectVersionId`
        if (data['ObjectVersionId']) { // data not null
          String.validateJSON(data['ObjectVersionId']);
        }
        // validate the optional field `ETag`
        if (data['ETag']) { // data not null
          String.validateJSON(data['ETag']);
        }

        return true;
    }


}

JobManifestLocation.RequiredProperties = ["ObjectArn", "ETag"];

/**
 * @member {String} ObjectArn
 */
JobManifestLocation.prototype['ObjectArn'] = undefined;

/**
 * @member {String} ObjectVersionId
 */
JobManifestLocation.prototype['ObjectVersionId'] = undefined;

/**
 * @member {String} ETag
 */
JobManifestLocation.prototype['ETag'] = undefined;






export default JobManifestLocation;

