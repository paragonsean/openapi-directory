/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateJobRequestOperationLambdaInvoke from './CreateJobRequestOperationLambdaInvoke';
import CreateJobRequestOperationS3InitiateRestoreObject from './CreateJobRequestOperationS3InitiateRestoreObject';
import CreateJobRequestOperationS3PutObjectAcl from './CreateJobRequestOperationS3PutObjectAcl';
import CreateJobRequestOperationS3PutObjectCopy from './CreateJobRequestOperationS3PutObjectCopy';
import CreateJobRequestOperationS3PutObjectTagging from './CreateJobRequestOperationS3PutObjectTagging';
import S3SetObjectLegalHoldOperation from './S3SetObjectLegalHoldOperation';
import S3SetObjectRetentionOperation from './S3SetObjectRetentionOperation';

/**
 * The JobOperation model module.
 * @module model/JobOperation
 * @version 2018-08-20
 */
class JobOperation {
    /**
     * Constructs a new <code>JobOperation</code>.
     * The operation that you want this job to perform on every object listed in the manifest. For more information about the available operations, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-operations.html\&quot;&gt;Operations&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.
     * @alias module:model/JobOperation
     */
    constructor() { 
        
        JobOperation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobOperation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobOperation} obj Optional instance to populate.
     * @return {module:model/JobOperation} The populated <code>JobOperation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobOperation();

            if (data.hasOwnProperty('LambdaInvoke')) {
                obj['LambdaInvoke'] = CreateJobRequestOperationLambdaInvoke.constructFromObject(data['LambdaInvoke']);
            }
            if (data.hasOwnProperty('S3PutObjectCopy')) {
                obj['S3PutObjectCopy'] = CreateJobRequestOperationS3PutObjectCopy.constructFromObject(data['S3PutObjectCopy']);
            }
            if (data.hasOwnProperty('S3PutObjectAcl')) {
                obj['S3PutObjectAcl'] = CreateJobRequestOperationS3PutObjectAcl.constructFromObject(data['S3PutObjectAcl']);
            }
            if (data.hasOwnProperty('S3PutObjectTagging')) {
                obj['S3PutObjectTagging'] = CreateJobRequestOperationS3PutObjectTagging.constructFromObject(data['S3PutObjectTagging']);
            }
            if (data.hasOwnProperty('S3DeleteObjectTagging')) {
                obj['S3DeleteObjectTagging'] = ApiClient.convertToType(data['S3DeleteObjectTagging'], Object);
            }
            if (data.hasOwnProperty('S3InitiateRestoreObject')) {
                obj['S3InitiateRestoreObject'] = CreateJobRequestOperationS3InitiateRestoreObject.constructFromObject(data['S3InitiateRestoreObject']);
            }
            if (data.hasOwnProperty('S3PutObjectLegalHold')) {
                obj['S3PutObjectLegalHold'] = S3SetObjectLegalHoldOperation.constructFromObject(data['S3PutObjectLegalHold']);
            }
            if (data.hasOwnProperty('S3PutObjectRetention')) {
                obj['S3PutObjectRetention'] = S3SetObjectRetentionOperation.constructFromObject(data['S3PutObjectRetention']);
            }
            if (data.hasOwnProperty('S3ReplicateObject')) {
                obj['S3ReplicateObject'] = ApiClient.convertToType(data['S3ReplicateObject'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobOperation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobOperation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `LambdaInvoke`
        if (data['LambdaInvoke']) { // data not null
          CreateJobRequestOperationLambdaInvoke.validateJSON(data['LambdaInvoke']);
        }
        // validate the optional field `S3PutObjectCopy`
        if (data['S3PutObjectCopy']) { // data not null
          CreateJobRequestOperationS3PutObjectCopy.validateJSON(data['S3PutObjectCopy']);
        }
        // validate the optional field `S3PutObjectAcl`
        if (data['S3PutObjectAcl']) { // data not null
          CreateJobRequestOperationS3PutObjectAcl.validateJSON(data['S3PutObjectAcl']);
        }
        // validate the optional field `S3PutObjectTagging`
        if (data['S3PutObjectTagging']) { // data not null
          CreateJobRequestOperationS3PutObjectTagging.validateJSON(data['S3PutObjectTagging']);
        }
        // validate the optional field `S3DeleteObjectTagging`
        if (data['S3DeleteObjectTagging']) { // data not null
          Object.validateJSON(data['S3DeleteObjectTagging']);
        }
        // validate the optional field `S3InitiateRestoreObject`
        if (data['S3InitiateRestoreObject']) { // data not null
          CreateJobRequestOperationS3InitiateRestoreObject.validateJSON(data['S3InitiateRestoreObject']);
        }
        // validate the optional field `S3PutObjectLegalHold`
        if (data['S3PutObjectLegalHold']) { // data not null
          S3SetObjectLegalHoldOperation.validateJSON(data['S3PutObjectLegalHold']);
        }
        // validate the optional field `S3PutObjectRetention`
        if (data['S3PutObjectRetention']) { // data not null
          S3SetObjectRetentionOperation.validateJSON(data['S3PutObjectRetention']);
        }
        // validate the optional field `S3ReplicateObject`
        if (data['S3ReplicateObject']) { // data not null
          Object.validateJSON(data['S3ReplicateObject']);
        }

        return true;
    }


}



/**
 * @member {module:model/CreateJobRequestOperationLambdaInvoke} LambdaInvoke
 */
JobOperation.prototype['LambdaInvoke'] = undefined;

/**
 * @member {module:model/CreateJobRequestOperationS3PutObjectCopy} S3PutObjectCopy
 */
JobOperation.prototype['S3PutObjectCopy'] = undefined;

/**
 * @member {module:model/CreateJobRequestOperationS3PutObjectAcl} S3PutObjectAcl
 */
JobOperation.prototype['S3PutObjectAcl'] = undefined;

/**
 * @member {module:model/CreateJobRequestOperationS3PutObjectTagging} S3PutObjectTagging
 */
JobOperation.prototype['S3PutObjectTagging'] = undefined;

/**
 * @member {Object} S3DeleteObjectTagging
 */
JobOperation.prototype['S3DeleteObjectTagging'] = undefined;

/**
 * @member {module:model/CreateJobRequestOperationS3InitiateRestoreObject} S3InitiateRestoreObject
 */
JobOperation.prototype['S3InitiateRestoreObject'] = undefined;

/**
 * @member {module:model/S3SetObjectLegalHoldOperation} S3PutObjectLegalHold
 */
JobOperation.prototype['S3PutObjectLegalHold'] = undefined;

/**
 * @member {module:model/S3SetObjectRetentionOperation} S3PutObjectRetention
 */
JobOperation.prototype['S3PutObjectRetention'] = undefined;

/**
 * @member {Object} S3ReplicateObject
 */
JobOperation.prototype['S3ReplicateObject'] = undefined;






export default JobOperation;

