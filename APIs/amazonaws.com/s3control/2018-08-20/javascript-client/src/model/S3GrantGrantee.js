/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import S3Grantee from './S3Grantee';
import S3GranteeTypeIdentifier from './S3GranteeTypeIdentifier';

/**
 * The S3GrantGrantee model module.
 * @module model/S3GrantGrantee
 * @version 2018-08-20
 */
class S3GrantGrantee {
    /**
     * Constructs a new <code>S3GrantGrantee</code>.
     * @alias module:model/S3GrantGrantee
     * @implements module:model/S3Grantee
     */
    constructor() { 
        S3Grantee.initialize(this);
        S3GrantGrantee.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>S3GrantGrantee</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3GrantGrantee} obj Optional instance to populate.
     * @return {module:model/S3GrantGrantee} The populated <code>S3GrantGrantee</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3GrantGrantee();
            S3Grantee.constructFromObject(data, obj);

            if (data.hasOwnProperty('TypeIdentifier')) {
                obj['TypeIdentifier'] = ApiClient.convertToType(data['TypeIdentifier'], S3GranteeTypeIdentifier);
            }
            if (data.hasOwnProperty('Identifier')) {
                obj['Identifier'] = ApiClient.convertToType(data['Identifier'], 'String');
            }
            if (data.hasOwnProperty('DisplayName')) {
                obj['DisplayName'] = ApiClient.convertToType(data['DisplayName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3GrantGrantee</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3GrantGrantee</code>.
     */
    static validateJSON(data) {
        // validate the optional field `TypeIdentifier`
        if (data['TypeIdentifier']) { // data not null
          S3GranteeTypeIdentifier.validateJSON(data['TypeIdentifier']);
        }
        // validate the optional field `Identifier`
        if (data['Identifier']) { // data not null
          String.validateJSON(data['Identifier']);
        }
        // validate the optional field `DisplayName`
        if (data['DisplayName']) { // data not null
          String.validateJSON(data['DisplayName']);
        }

        return true;
    }


}



/**
 * @member {module:model/S3GranteeTypeIdentifier} TypeIdentifier
 */
S3GrantGrantee.prototype['TypeIdentifier'] = undefined;

/**
 * @member {String} Identifier
 */
S3GrantGrantee.prototype['Identifier'] = undefined;

/**
 * @member {String} DisplayName
 */
S3GrantGrantee.prototype['DisplayName'] = undefined;


// Implement S3Grantee interface:
/**
 * @member {module:model/S3GranteeTypeIdentifier} TypeIdentifier
 */
S3Grantee.prototype['TypeIdentifier'] = undefined;
/**
 * @member {String} Identifier
 */
S3Grantee.prototype['Identifier'] = undefined;
/**
 * @member {String} DisplayName
 */
S3Grantee.prototype['DisplayName'] = undefined;




export default S3GrantGrantee;

