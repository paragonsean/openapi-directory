/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateJobRequestManifest from './CreateJobRequestManifest';
import CreateJobRequestManifestGenerator from './CreateJobRequestManifestGenerator';
import CreateJobRequestOperation from './CreateJobRequestOperation';
import CreateJobRequestReport from './CreateJobRequestReport';
import S3Tag from './S3Tag';

/**
 * The CreateJobRequest model module.
 * @module model/CreateJobRequest
 * @version 2018-08-20
 */
class CreateJobRequest {
    /**
     * Constructs a new <code>CreateJobRequest</code>.
     * @alias module:model/CreateJobRequest
     * @param operation {module:model/CreateJobRequestOperation} 
     * @param report {module:model/CreateJobRequestReport} 
     * @param clientRequestToken {String} An idempotency token to ensure that you don't accidentally submit the same request twice. You can use any string up to the maximum length.
     * @param priority {Number} The numerical priority for this job. Higher numbers indicate higher priority.
     * @param roleArn {String} The Amazon Resource Name (ARN) for the Identity and Access Management (IAM) role that Batch Operations will use to run this job's action on every object in the manifest.
     */
    constructor(operation, report, clientRequestToken, priority, roleArn) { 
        
        CreateJobRequest.initialize(this, operation, report, clientRequestToken, priority, roleArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, operation, report, clientRequestToken, priority, roleArn) { 
        obj['Operation'] = operation;
        obj['Report'] = report;
        obj['ClientRequestToken'] = clientRequestToken;
        obj['Priority'] = priority;
        obj['RoleArn'] = roleArn;
    }

    /**
     * Constructs a <code>CreateJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateJobRequest} obj Optional instance to populate.
     * @return {module:model/CreateJobRequest} The populated <code>CreateJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateJobRequest();

            if (data.hasOwnProperty('ConfirmationRequired')) {
                obj['ConfirmationRequired'] = ApiClient.convertToType(data['ConfirmationRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('Operation')) {
                obj['Operation'] = CreateJobRequestOperation.constructFromObject(data['Operation']);
            }
            if (data.hasOwnProperty('Report')) {
                obj['Report'] = CreateJobRequestReport.constructFromObject(data['Report']);
            }
            if (data.hasOwnProperty('ClientRequestToken')) {
                obj['ClientRequestToken'] = ApiClient.convertToType(data['ClientRequestToken'], 'String');
            }
            if (data.hasOwnProperty('Manifest')) {
                obj['Manifest'] = CreateJobRequestManifest.constructFromObject(data['Manifest']);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Priority')) {
                obj['Priority'] = ApiClient.convertToType(data['Priority'], 'Number');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [S3Tag]);
            }
            if (data.hasOwnProperty('ManifestGenerator')) {
                obj['ManifestGenerator'] = CreateJobRequestManifestGenerator.constructFromObject(data['ManifestGenerator']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Operation`
        if (data['Operation']) { // data not null
          CreateJobRequestOperation.validateJSON(data['Operation']);
        }
        // validate the optional field `Report`
        if (data['Report']) { // data not null
          CreateJobRequestReport.validateJSON(data['Report']);
        }
        // ensure the json data is a string
        if (data['ClientRequestToken'] && !(typeof data['ClientRequestToken'] === 'string' || data['ClientRequestToken'] instanceof String)) {
            throw new Error("Expected the field `ClientRequestToken` to be a primitive type in the JSON string but got " + data['ClientRequestToken']);
        }
        // validate the optional field `Manifest`
        if (data['Manifest']) { // data not null
          CreateJobRequestManifest.validateJSON(data['Manifest']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['RoleArn'] && !(typeof data['RoleArn'] === 'string' || data['RoleArn'] instanceof String)) {
            throw new Error("Expected the field `RoleArn` to be a primitive type in the JSON string but got " + data['RoleArn']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                S3Tag.validateJSON(item);
            };
        }
        // validate the optional field `ManifestGenerator`
        if (data['ManifestGenerator']) { // data not null
          CreateJobRequestManifestGenerator.validateJSON(data['ManifestGenerator']);
        }

        return true;
    }


}

CreateJobRequest.RequiredProperties = ["Operation", "Report", "ClientRequestToken", "Priority", "RoleArn"];

/**
 * Indicates whether confirmation is required before Amazon S3 runs the job. Confirmation is only required for jobs created through the Amazon S3 console.
 * @member {Boolean} ConfirmationRequired
 */
CreateJobRequest.prototype['ConfirmationRequired'] = undefined;

/**
 * @member {module:model/CreateJobRequestOperation} Operation
 */
CreateJobRequest.prototype['Operation'] = undefined;

/**
 * @member {module:model/CreateJobRequestReport} Report
 */
CreateJobRequest.prototype['Report'] = undefined;

/**
 * An idempotency token to ensure that you don't accidentally submit the same request twice. You can use any string up to the maximum length.
 * @member {String} ClientRequestToken
 */
CreateJobRequest.prototype['ClientRequestToken'] = undefined;

/**
 * @member {module:model/CreateJobRequestManifest} Manifest
 */
CreateJobRequest.prototype['Manifest'] = undefined;

/**
 * A description for this job. You can use any string within the permitted length. Descriptions don't need to be unique and can be used for multiple jobs.
 * @member {String} Description
 */
CreateJobRequest.prototype['Description'] = undefined;

/**
 * The numerical priority for this job. Higher numbers indicate higher priority.
 * @member {Number} Priority
 */
CreateJobRequest.prototype['Priority'] = undefined;

/**
 * The Amazon Resource Name (ARN) for the Identity and Access Management (IAM) role that Batch Operations will use to run this job's action on every object in the manifest.
 * @member {String} RoleArn
 */
CreateJobRequest.prototype['RoleArn'] = undefined;

/**
 * A set of tags to associate with the S3 Batch Operations job. This is an optional parameter. 
 * @member {Array.<module:model/S3Tag>} Tags
 */
CreateJobRequest.prototype['Tags'] = undefined;

/**
 * @member {module:model/CreateJobRequestManifestGenerator} ManifestGenerator
 */
CreateJobRequest.prototype['ManifestGenerator'] = undefined;






export default CreateJobRequest;

