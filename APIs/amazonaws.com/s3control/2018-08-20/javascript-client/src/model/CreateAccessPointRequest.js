/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateAccessPointRequestPublicAccessBlockConfiguration from './CreateAccessPointRequestPublicAccessBlockConfiguration';
import CreateAccessPointRequestVpcConfiguration from './CreateAccessPointRequestVpcConfiguration';

/**
 * The CreateAccessPointRequest model module.
 * @module model/CreateAccessPointRequest
 * @version 2018-08-20
 */
class CreateAccessPointRequest {
    /**
     * Constructs a new <code>CreateAccessPointRequest</code>.
     * @alias module:model/CreateAccessPointRequest
     * @param bucket {String} <p>The name of the bucket that you want to associate this access point with.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>
     */
    constructor(bucket) { 
        
        CreateAccessPointRequest.initialize(this, bucket);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bucket) { 
        obj['Bucket'] = bucket;
    }

    /**
     * Constructs a <code>CreateAccessPointRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAccessPointRequest} obj Optional instance to populate.
     * @return {module:model/CreateAccessPointRequest} The populated <code>CreateAccessPointRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAccessPointRequest();

            if (data.hasOwnProperty('Bucket')) {
                obj['Bucket'] = ApiClient.convertToType(data['Bucket'], 'String');
            }
            if (data.hasOwnProperty('VpcConfiguration')) {
                obj['VpcConfiguration'] = CreateAccessPointRequestVpcConfiguration.constructFromObject(data['VpcConfiguration']);
            }
            if (data.hasOwnProperty('PublicAccessBlockConfiguration')) {
                obj['PublicAccessBlockConfiguration'] = CreateAccessPointRequestPublicAccessBlockConfiguration.constructFromObject(data['PublicAccessBlockConfiguration']);
            }
            if (data.hasOwnProperty('BucketAccountId')) {
                obj['BucketAccountId'] = ApiClient.convertToType(data['BucketAccountId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAccessPointRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAccessPointRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAccessPointRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Bucket'] && !(typeof data['Bucket'] === 'string' || data['Bucket'] instanceof String)) {
            throw new Error("Expected the field `Bucket` to be a primitive type in the JSON string but got " + data['Bucket']);
        }
        // validate the optional field `VpcConfiguration`
        if (data['VpcConfiguration']) { // data not null
          CreateAccessPointRequestVpcConfiguration.validateJSON(data['VpcConfiguration']);
        }
        // validate the optional field `PublicAccessBlockConfiguration`
        if (data['PublicAccessBlockConfiguration']) { // data not null
          CreateAccessPointRequestPublicAccessBlockConfiguration.validateJSON(data['PublicAccessBlockConfiguration']);
        }
        // ensure the json data is a string
        if (data['BucketAccountId'] && !(typeof data['BucketAccountId'] === 'string' || data['BucketAccountId'] instanceof String)) {
            throw new Error("Expected the field `BucketAccountId` to be a primitive type in the JSON string but got " + data['BucketAccountId']);
        }

        return true;
    }


}

CreateAccessPointRequest.RequiredProperties = ["Bucket"];

/**
 * <p>The name of the bucket that you want to associate this access point with.</p> <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p> <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/bucket/&lt;my-bucket-name&gt;</code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p>
 * @member {String} Bucket
 */
CreateAccessPointRequest.prototype['Bucket'] = undefined;

/**
 * @member {module:model/CreateAccessPointRequestVpcConfiguration} VpcConfiguration
 */
CreateAccessPointRequest.prototype['VpcConfiguration'] = undefined;

/**
 * @member {module:model/CreateAccessPointRequestPublicAccessBlockConfiguration} PublicAccessBlockConfiguration
 */
CreateAccessPointRequest.prototype['PublicAccessBlockConfiguration'] = undefined;

/**
 * The Amazon Web Services account ID associated with the S3 bucket associated with this access point.
 * @member {String} BucketAccountId
 */
CreateAccessPointRequest.prototype['BucketAccountId'] = undefined;






export default CreateAccessPointRequest;

