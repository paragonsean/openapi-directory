/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LifecycleRuleAndOperator from './LifecycleRuleAndOperator';

/**
 * The LifecycleRuleFilterAnd model module.
 * @module model/LifecycleRuleFilterAnd
 * @version 2018-08-20
 */
class LifecycleRuleFilterAnd {
    /**
     * Constructs a new <code>LifecycleRuleFilterAnd</code>.
     * @alias module:model/LifecycleRuleFilterAnd
     * @implements module:model/LifecycleRuleAndOperator
     */
    constructor() { 
        LifecycleRuleAndOperator.initialize(this);
        LifecycleRuleFilterAnd.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LifecycleRuleFilterAnd</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LifecycleRuleFilterAnd} obj Optional instance to populate.
     * @return {module:model/LifecycleRuleFilterAnd} The populated <code>LifecycleRuleFilterAnd</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LifecycleRuleFilterAnd();
            LifecycleRuleAndOperator.constructFromObject(data, obj);

            if (data.hasOwnProperty('Prefix')) {
                obj['Prefix'] = ApiClient.convertToType(data['Prefix'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
            if (data.hasOwnProperty('ObjectSizeGreaterThan')) {
                obj['ObjectSizeGreaterThan'] = ApiClient.convertToType(data['ObjectSizeGreaterThan'], 'Number');
            }
            if (data.hasOwnProperty('ObjectSizeLessThan')) {
                obj['ObjectSizeLessThan'] = ApiClient.convertToType(data['ObjectSizeLessThan'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LifecycleRuleFilterAnd</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LifecycleRuleFilterAnd</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Prefix`
        if (data['Prefix']) { // data not null
          String.validateJSON(data['Prefix']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }
        // validate the optional field `ObjectSizeGreaterThan`
        if (data['ObjectSizeGreaterThan']) { // data not null
          Number.validateJSON(data['ObjectSizeGreaterThan']);
        }
        // validate the optional field `ObjectSizeLessThan`
        if (data['ObjectSizeLessThan']) { // data not null
          Number.validateJSON(data['ObjectSizeLessThan']);
        }

        return true;
    }


}



/**
 * @member {String} Prefix
 */
LifecycleRuleFilterAnd.prototype['Prefix'] = undefined;

/**
 * @member {Array} Tags
 */
LifecycleRuleFilterAnd.prototype['Tags'] = undefined;

/**
 * @member {Number} ObjectSizeGreaterThan
 */
LifecycleRuleFilterAnd.prototype['ObjectSizeGreaterThan'] = undefined;

/**
 * @member {Number} ObjectSizeLessThan
 */
LifecycleRuleFilterAnd.prototype['ObjectSizeLessThan'] = undefined;


// Implement LifecycleRuleAndOperator interface:
/**
 * @member {String} Prefix
 */
LifecycleRuleAndOperator.prototype['Prefix'] = undefined;
/**
 * @member {Array} Tags
 */
LifecycleRuleAndOperator.prototype['Tags'] = undefined;
/**
 * @member {Number} ObjectSizeGreaterThan
 */
LifecycleRuleAndOperator.prototype['ObjectSizeGreaterThan'] = undefined;
/**
 * @member {Number} ObjectSizeLessThan
 */
LifecycleRuleAndOperator.prototype['ObjectSizeLessThan'] = undefined;




export default LifecycleRuleFilterAnd;

