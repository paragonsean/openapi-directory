/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import S3SSEAlgorithm from './S3SSEAlgorithm';

/**
 * The S3ObjectMetadata model module.
 * @module model/S3ObjectMetadata
 * @version 2018-08-20
 */
class S3ObjectMetadata {
    /**
     * Constructs a new <code>S3ObjectMetadata</code>.
     * &lt;p/&gt;
     * @alias module:model/S3ObjectMetadata
     */
    constructor() { 
        
        S3ObjectMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>S3ObjectMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3ObjectMetadata} obj Optional instance to populate.
     * @return {module:model/S3ObjectMetadata} The populated <code>S3ObjectMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3ObjectMetadata();

            if (data.hasOwnProperty('CacheControl')) {
                obj['CacheControl'] = ApiClient.convertToType(data['CacheControl'], 'String');
            }
            if (data.hasOwnProperty('ContentDisposition')) {
                obj['ContentDisposition'] = ApiClient.convertToType(data['ContentDisposition'], 'String');
            }
            if (data.hasOwnProperty('ContentEncoding')) {
                obj['ContentEncoding'] = ApiClient.convertToType(data['ContentEncoding'], 'String');
            }
            if (data.hasOwnProperty('ContentLanguage')) {
                obj['ContentLanguage'] = ApiClient.convertToType(data['ContentLanguage'], 'String');
            }
            if (data.hasOwnProperty('UserMetadata')) {
                obj['UserMetadata'] = ApiClient.convertToType(data['UserMetadata'], Object);
            }
            if (data.hasOwnProperty('ContentLength')) {
                obj['ContentLength'] = ApiClient.convertToType(data['ContentLength'], 'Number');
            }
            if (data.hasOwnProperty('ContentMD5')) {
                obj['ContentMD5'] = ApiClient.convertToType(data['ContentMD5'], 'String');
            }
            if (data.hasOwnProperty('ContentType')) {
                obj['ContentType'] = ApiClient.convertToType(data['ContentType'], 'String');
            }
            if (data.hasOwnProperty('HttpExpiresDate')) {
                obj['HttpExpiresDate'] = ApiClient.convertToType(data['HttpExpiresDate'], 'Date');
            }
            if (data.hasOwnProperty('RequesterCharged')) {
                obj['RequesterCharged'] = ApiClient.convertToType(data['RequesterCharged'], 'Boolean');
            }
            if (data.hasOwnProperty('SSEAlgorithm')) {
                obj['SSEAlgorithm'] = ApiClient.convertToType(data['SSEAlgorithm'], S3SSEAlgorithm);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3ObjectMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3ObjectMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CacheControl`
        if (data['CacheControl']) { // data not null
          String.validateJSON(data['CacheControl']);
        }
        // validate the optional field `ContentDisposition`
        if (data['ContentDisposition']) { // data not null
          String.validateJSON(data['ContentDisposition']);
        }
        // validate the optional field `ContentEncoding`
        if (data['ContentEncoding']) { // data not null
          String.validateJSON(data['ContentEncoding']);
        }
        // validate the optional field `ContentLanguage`
        if (data['ContentLanguage']) { // data not null
          String.validateJSON(data['ContentLanguage']);
        }
        // validate the optional field `UserMetadata`
        if (data['UserMetadata']) { // data not null
          Object.validateJSON(data['UserMetadata']);
        }
        // validate the optional field `ContentLength`
        if (data['ContentLength']) { // data not null
          Number.validateJSON(data['ContentLength']);
        }
        // validate the optional field `ContentMD5`
        if (data['ContentMD5']) { // data not null
          String.validateJSON(data['ContentMD5']);
        }
        // validate the optional field `ContentType`
        if (data['ContentType']) { // data not null
          String.validateJSON(data['ContentType']);
        }
        // validate the optional field `HttpExpiresDate`
        if (data['HttpExpiresDate']) { // data not null
          Date.validateJSON(data['HttpExpiresDate']);
        }
        // validate the optional field `RequesterCharged`
        if (data['RequesterCharged']) { // data not null
          Boolean.validateJSON(data['RequesterCharged']);
        }
        // validate the optional field `SSEAlgorithm`
        if (data['SSEAlgorithm']) { // data not null
          S3SSEAlgorithm.validateJSON(data['SSEAlgorithm']);
        }

        return true;
    }


}



/**
 * @member {String} CacheControl
 */
S3ObjectMetadata.prototype['CacheControl'] = undefined;

/**
 * @member {String} ContentDisposition
 */
S3ObjectMetadata.prototype['ContentDisposition'] = undefined;

/**
 * @member {String} ContentEncoding
 */
S3ObjectMetadata.prototype['ContentEncoding'] = undefined;

/**
 * @member {String} ContentLanguage
 */
S3ObjectMetadata.prototype['ContentLanguage'] = undefined;

/**
 * @member {Object} UserMetadata
 */
S3ObjectMetadata.prototype['UserMetadata'] = undefined;

/**
 * @member {Number} ContentLength
 */
S3ObjectMetadata.prototype['ContentLength'] = undefined;

/**
 * @member {String} ContentMD5
 */
S3ObjectMetadata.prototype['ContentMD5'] = undefined;

/**
 * @member {String} ContentType
 */
S3ObjectMetadata.prototype['ContentType'] = undefined;

/**
 * @member {Date} HttpExpiresDate
 */
S3ObjectMetadata.prototype['HttpExpiresDate'] = undefined;

/**
 * @member {Boolean} RequesterCharged
 */
S3ObjectMetadata.prototype['RequesterCharged'] = undefined;

/**
 * @member {module:model/S3SSEAlgorithm} SSEAlgorithm
 */
S3ObjectMetadata.prototype['SSEAlgorithm'] = undefined;






export default S3ObjectMetadata;

