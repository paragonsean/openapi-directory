/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner from './SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner';

/**
 * The SubmitMultiRegionAccessPointRoutesRequest model module.
 * @module model/SubmitMultiRegionAccessPointRoutesRequest
 * @version 2018-08-20
 */
class SubmitMultiRegionAccessPointRoutesRequest {
    /**
     * Constructs a new <code>SubmitMultiRegionAccessPointRoutesRequest</code>.
     * @alias module:model/SubmitMultiRegionAccessPointRoutesRequest
     * @param routeUpdates {Array.<module:model/SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner>} The different routes that make up the new route configuration. Active routes return a value of <code>100</code>, and passive routes return a value of <code>0</code>.
     */
    constructor(routeUpdates) { 
        
        SubmitMultiRegionAccessPointRoutesRequest.initialize(this, routeUpdates);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, routeUpdates) { 
        obj['RouteUpdates'] = routeUpdates;
    }

    /**
     * Constructs a <code>SubmitMultiRegionAccessPointRoutesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubmitMultiRegionAccessPointRoutesRequest} obj Optional instance to populate.
     * @return {module:model/SubmitMultiRegionAccessPointRoutesRequest} The populated <code>SubmitMultiRegionAccessPointRoutesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubmitMultiRegionAccessPointRoutesRequest();

            if (data.hasOwnProperty('RouteUpdates')) {
                obj['RouteUpdates'] = ApiClient.convertToType(data['RouteUpdates'], [SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubmitMultiRegionAccessPointRoutesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubmitMultiRegionAccessPointRoutesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SubmitMultiRegionAccessPointRoutesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['RouteUpdates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['RouteUpdates'])) {
                throw new Error("Expected the field `RouteUpdates` to be an array in the JSON data but got " + data['RouteUpdates']);
            }
            // validate the optional field `RouteUpdates` (array)
            for (const item of data['RouteUpdates']) {
                SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner.validateJSON(item);
            };
        }

        return true;
    }


}

SubmitMultiRegionAccessPointRoutesRequest.RequiredProperties = ["RouteUpdates"];

/**
 * The different routes that make up the new route configuration. Active routes return a value of <code>100</code>, and passive routes return a value of <code>0</code>.
 * @member {Array.<module:model/SubmitMultiRegionAccessPointRoutesRequestRouteUpdatesInner>} RouteUpdates
 */
SubmitMultiRegionAccessPointRoutesRequest.prototype['RouteUpdates'] = undefined;






export default SubmitMultiRegionAccessPointRoutesRequest;

