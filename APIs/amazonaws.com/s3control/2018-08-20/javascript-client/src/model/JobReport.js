/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobReportFormat from './JobReportFormat';
import JobReportScope from './JobReportScope';

/**
 * The JobReport model module.
 * @module model/JobReport
 * @version 2018-08-20
 */
class JobReport {
    /**
     * Constructs a new <code>JobReport</code>.
     * Contains the configuration parameters for a job-completion report.
     * @alias module:model/JobReport
     * @param enabled {Boolean} 
     */
    constructor(enabled) { 
        
        JobReport.initialize(this, enabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enabled) { 
        obj['Enabled'] = enabled;
    }

    /**
     * Constructs a <code>JobReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobReport} obj Optional instance to populate.
     * @return {module:model/JobReport} The populated <code>JobReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobReport();

            if (data.hasOwnProperty('Bucket')) {
                obj['Bucket'] = ApiClient.convertToType(data['Bucket'], 'String');
            }
            if (data.hasOwnProperty('Format')) {
                obj['Format'] = ApiClient.convertToType(data['Format'], JobReportFormat);
            }
            if (data.hasOwnProperty('Enabled')) {
                obj['Enabled'] = ApiClient.convertToType(data['Enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('Prefix')) {
                obj['Prefix'] = ApiClient.convertToType(data['Prefix'], 'String');
            }
            if (data.hasOwnProperty('ReportScope')) {
                obj['ReportScope'] = ApiClient.convertToType(data['ReportScope'], JobReportScope);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobReport</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobReport.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Bucket`
        if (data['Bucket']) { // data not null
          String.validateJSON(data['Bucket']);
        }
        // validate the optional field `Format`
        if (data['Format']) { // data not null
          JobReportFormat.validateJSON(data['Format']);
        }
        // validate the optional field `Enabled`
        if (data['Enabled']) { // data not null
          Boolean.validateJSON(data['Enabled']);
        }
        // validate the optional field `Prefix`
        if (data['Prefix']) { // data not null
          String.validateJSON(data['Prefix']);
        }
        // validate the optional field `ReportScope`
        if (data['ReportScope']) { // data not null
          JobReportScope.validateJSON(data['ReportScope']);
        }

        return true;
    }


}

JobReport.RequiredProperties = ["Enabled"];

/**
 * @member {String} Bucket
 */
JobReport.prototype['Bucket'] = undefined;

/**
 * @member {module:model/JobReportFormat} Format
 */
JobReport.prototype['Format'] = undefined;

/**
 * @member {Boolean} Enabled
 */
JobReport.prototype['Enabled'] = undefined;

/**
 * @member {String} Prefix
 */
JobReport.prototype['Prefix'] = undefined;

/**
 * @member {module:model/JobReportScope} ReportScope
 */
JobReport.prototype['ReportScope'] = undefined;






export default JobReport;

