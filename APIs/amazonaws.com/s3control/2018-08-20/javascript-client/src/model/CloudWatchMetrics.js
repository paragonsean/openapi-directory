/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CloudWatchMetrics model module.
 * @module model/CloudWatchMetrics
 * @version 2018-08-20
 */
class CloudWatchMetrics {
    /**
     * Constructs a new <code>CloudWatchMetrics</code>.
     * &lt;p&gt;A container for enabling Amazon CloudWatch publishing for S3 Storage Lens metrics.&lt;/p&gt; &lt;p&gt;For more information about publishing S3 Storage Lens metrics to CloudWatch, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_view_metrics_cloudwatch.html\&quot;&gt;Monitor S3 Storage Lens metrics in CloudWatch&lt;/a&gt; in the &lt;i&gt;Amazon S3 User Guide&lt;/i&gt;.&lt;/p&gt;
     * @alias module:model/CloudWatchMetrics
     * @param isEnabled {Boolean} 
     */
    constructor(isEnabled) { 
        
        CloudWatchMetrics.initialize(this, isEnabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, isEnabled) { 
        obj['IsEnabled'] = isEnabled;
    }

    /**
     * Constructs a <code>CloudWatchMetrics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudWatchMetrics} obj Optional instance to populate.
     * @return {module:model/CloudWatchMetrics} The populated <code>CloudWatchMetrics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudWatchMetrics();

            if (data.hasOwnProperty('IsEnabled')) {
                obj['IsEnabled'] = ApiClient.convertToType(data['IsEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudWatchMetrics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudWatchMetrics</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CloudWatchMetrics.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `IsEnabled`
        if (data['IsEnabled']) { // data not null
          Boolean.validateJSON(data['IsEnabled']);
        }

        return true;
    }


}

CloudWatchMetrics.RequiredProperties = ["IsEnabled"];

/**
 * @member {Boolean} IsEnabled
 */
CloudWatchMetrics.prototype['IsEnabled'] = undefined;






export default CloudWatchMetrics;

