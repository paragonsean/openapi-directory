/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import S3AccessControlList from './S3AccessControlList';
import S3AccessControlListOwner from './S3AccessControlListOwner';

/**
 * The S3AccessControlPolicyAccessControlList model module.
 * @module model/S3AccessControlPolicyAccessControlList
 * @version 2018-08-20
 */
class S3AccessControlPolicyAccessControlList {
    /**
     * Constructs a new <code>S3AccessControlPolicyAccessControlList</code>.
     * @alias module:model/S3AccessControlPolicyAccessControlList
     * @implements module:model/S3AccessControlList
     * @param owner {module:model/S3AccessControlListOwner} 
     */
    constructor(owner) { 
        S3AccessControlList.initialize(this, owner);
        S3AccessControlPolicyAccessControlList.initialize(this, owner);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, owner) { 
        obj['Owner'] = owner;
    }

    /**
     * Constructs a <code>S3AccessControlPolicyAccessControlList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3AccessControlPolicyAccessControlList} obj Optional instance to populate.
     * @return {module:model/S3AccessControlPolicyAccessControlList} The populated <code>S3AccessControlPolicyAccessControlList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3AccessControlPolicyAccessControlList();
            S3AccessControlList.constructFromObject(data, obj);

            if (data.hasOwnProperty('Owner')) {
                obj['Owner'] = S3AccessControlListOwner.constructFromObject(data['Owner']);
            }
            if (data.hasOwnProperty('Grants')) {
                obj['Grants'] = ApiClient.convertToType(data['Grants'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3AccessControlPolicyAccessControlList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3AccessControlPolicyAccessControlList</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of S3AccessControlPolicyAccessControlList.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Owner`
        if (data['Owner']) { // data not null
          S3AccessControlListOwner.validateJSON(data['Owner']);
        }
        // validate the optional field `Grants`
        if (data['Grants']) { // data not null
          Array.validateJSON(data['Grants']);
        }

        return true;
    }


}

S3AccessControlPolicyAccessControlList.RequiredProperties = ["Owner"];

/**
 * @member {module:model/S3AccessControlListOwner} Owner
 */
S3AccessControlPolicyAccessControlList.prototype['Owner'] = undefined;

/**
 * @member {Array} Grants
 */
S3AccessControlPolicyAccessControlList.prototype['Grants'] = undefined;


// Implement S3AccessControlList interface:
/**
 * @member {module:model/S3AccessControlListOwner} Owner
 */
S3AccessControlList.prototype['Owner'] = undefined;
/**
 * @member {Array} Grants
 */
S3AccessControlList.prototype['Grants'] = undefined;




export default S3AccessControlPolicyAccessControlList;

