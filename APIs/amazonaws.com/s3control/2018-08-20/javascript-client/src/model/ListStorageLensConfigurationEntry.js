/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListStorageLensConfigurationEntry model module.
 * @module model/ListStorageLensConfigurationEntry
 * @version 2018-08-20
 */
class ListStorageLensConfigurationEntry {
    /**
     * Constructs a new <code>ListStorageLensConfigurationEntry</code>.
     * Part of &lt;code&gt;ListStorageLensConfigurationResult&lt;/code&gt;. Each entry includes the description of the S3 Storage Lens configuration, its home Region, whether it is enabled, its Amazon Resource Name (ARN), and config ID.
     * @alias module:model/ListStorageLensConfigurationEntry
     * @param id {String} 
     * @param storageLensArn {String} 
     * @param homeRegion {String} 
     */
    constructor(id, storageLensArn, homeRegion) { 
        
        ListStorageLensConfigurationEntry.initialize(this, id, storageLensArn, homeRegion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, storageLensArn, homeRegion) { 
        obj['Id'] = id;
        obj['StorageLensArn'] = storageLensArn;
        obj['HomeRegion'] = homeRegion;
    }

    /**
     * Constructs a <code>ListStorageLensConfigurationEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListStorageLensConfigurationEntry} obj Optional instance to populate.
     * @return {module:model/ListStorageLensConfigurationEntry} The populated <code>ListStorageLensConfigurationEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListStorageLensConfigurationEntry();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('StorageLensArn')) {
                obj['StorageLensArn'] = ApiClient.convertToType(data['StorageLensArn'], 'String');
            }
            if (data.hasOwnProperty('HomeRegion')) {
                obj['HomeRegion'] = ApiClient.convertToType(data['HomeRegion'], 'String');
            }
            if (data.hasOwnProperty('IsEnabled')) {
                obj['IsEnabled'] = ApiClient.convertToType(data['IsEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListStorageLensConfigurationEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListStorageLensConfigurationEntry</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListStorageLensConfigurationEntry.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `StorageLensArn`
        if (data['StorageLensArn']) { // data not null
          String.validateJSON(data['StorageLensArn']);
        }
        // validate the optional field `HomeRegion`
        if (data['HomeRegion']) { // data not null
          String.validateJSON(data['HomeRegion']);
        }
        // validate the optional field `IsEnabled`
        if (data['IsEnabled']) { // data not null
          Boolean.validateJSON(data['IsEnabled']);
        }

        return true;
    }


}

ListStorageLensConfigurationEntry.RequiredProperties = ["Id", "StorageLensArn", "HomeRegion"];

/**
 * @member {String} Id
 */
ListStorageLensConfigurationEntry.prototype['Id'] = undefined;

/**
 * @member {String} StorageLensArn
 */
ListStorageLensConfigurationEntry.prototype['StorageLensArn'] = undefined;

/**
 * @member {String} HomeRegion
 */
ListStorageLensConfigurationEntry.prototype['HomeRegion'] = undefined;

/**
 * @member {Boolean} IsEnabled
 */
ListStorageLensConfigurationEntry.prototype['IsEnabled'] = undefined;






export default ListStorageLensConfigurationEntry;

