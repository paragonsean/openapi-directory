/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MultiRegionAccessPointStatus from './MultiRegionAccessPointStatus';
import PublicAccessBlockConfiguration from './PublicAccessBlockConfiguration';

/**
 * The MultiRegionAccessPointReport model module.
 * @module model/MultiRegionAccessPointReport
 * @version 2018-08-20
 */
class MultiRegionAccessPointReport {
    /**
     * Constructs a new <code>MultiRegionAccessPointReport</code>.
     * A collection of statuses for a Multi-Region Access Point in the various Regions it supports.
     * @alias module:model/MultiRegionAccessPointReport
     */
    constructor() { 
        
        MultiRegionAccessPointReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MultiRegionAccessPointReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MultiRegionAccessPointReport} obj Optional instance to populate.
     * @return {module:model/MultiRegionAccessPointReport} The populated <code>MultiRegionAccessPointReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MultiRegionAccessPointReport();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Alias')) {
                obj['Alias'] = ApiClient.convertToType(data['Alias'], 'String');
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('PublicAccessBlock')) {
                obj['PublicAccessBlock'] = PublicAccessBlockConfiguration.constructFromObject(data['PublicAccessBlock']);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], MultiRegionAccessPointStatus);
            }
            if (data.hasOwnProperty('Regions')) {
                obj['Regions'] = ApiClient.convertToType(data['Regions'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MultiRegionAccessPointReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MultiRegionAccessPointReport</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Alias`
        if (data['Alias']) { // data not null
          String.validateJSON(data['Alias']);
        }
        // validate the optional field `CreatedAt`
        if (data['CreatedAt']) { // data not null
          Date.validateJSON(data['CreatedAt']);
        }
        // validate the optional field `PublicAccessBlock`
        if (data['PublicAccessBlock']) { // data not null
          PublicAccessBlockConfiguration.validateJSON(data['PublicAccessBlock']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          MultiRegionAccessPointStatus.validateJSON(data['Status']);
        }
        // validate the optional field `Regions`
        if (data['Regions']) { // data not null
          Array.validateJSON(data['Regions']);
        }

        return true;
    }


}



/**
 * @member {String} Name
 */
MultiRegionAccessPointReport.prototype['Name'] = undefined;

/**
 * @member {String} Alias
 */
MultiRegionAccessPointReport.prototype['Alias'] = undefined;

/**
 * @member {Date} CreatedAt
 */
MultiRegionAccessPointReport.prototype['CreatedAt'] = undefined;

/**
 * @member {module:model/PublicAccessBlockConfiguration} PublicAccessBlock
 */
MultiRegionAccessPointReport.prototype['PublicAccessBlock'] = undefined;

/**
 * @member {module:model/MultiRegionAccessPointStatus} Status
 */
MultiRegionAccessPointReport.prototype['Status'] = undefined;

/**
 * @member {Array} Regions
 */
MultiRegionAccessPointReport.prototype['Regions'] = undefined;






export default MultiRegionAccessPointReport;

