/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PutStorageLensConfigurationRequestStorageLensConfiguration from './PutStorageLensConfigurationRequestStorageLensConfiguration';
import PutStorageLensConfigurationRequestTagsInner from './PutStorageLensConfigurationRequestTagsInner';

/**
 * The PutStorageLensConfigurationRequest model module.
 * @module model/PutStorageLensConfigurationRequest
 * @version 2018-08-20
 */
class PutStorageLensConfigurationRequest {
    /**
     * Constructs a new <code>PutStorageLensConfigurationRequest</code>.
     * @alias module:model/PutStorageLensConfigurationRequest
     * @param storageLensConfiguration {module:model/PutStorageLensConfigurationRequestStorageLensConfiguration} 
     */
    constructor(storageLensConfiguration) { 
        
        PutStorageLensConfigurationRequest.initialize(this, storageLensConfiguration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, storageLensConfiguration) { 
        obj['StorageLensConfiguration'] = storageLensConfiguration;
    }

    /**
     * Constructs a <code>PutStorageLensConfigurationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutStorageLensConfigurationRequest} obj Optional instance to populate.
     * @return {module:model/PutStorageLensConfigurationRequest} The populated <code>PutStorageLensConfigurationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutStorageLensConfigurationRequest();

            if (data.hasOwnProperty('StorageLensConfiguration')) {
                obj['StorageLensConfiguration'] = PutStorageLensConfigurationRequestStorageLensConfiguration.constructFromObject(data['StorageLensConfiguration']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [PutStorageLensConfigurationRequestTagsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutStorageLensConfigurationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutStorageLensConfigurationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutStorageLensConfigurationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `StorageLensConfiguration`
        if (data['StorageLensConfiguration']) { // data not null
          PutStorageLensConfigurationRequestStorageLensConfiguration.validateJSON(data['StorageLensConfiguration']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                PutStorageLensConfigurationRequestTagsInner.validateJSON(item);
            };
        }

        return true;
    }


}

PutStorageLensConfigurationRequest.RequiredProperties = ["StorageLensConfiguration"];

/**
 * @member {module:model/PutStorageLensConfigurationRequestStorageLensConfiguration} StorageLensConfiguration
 */
PutStorageLensConfigurationRequest.prototype['StorageLensConfiguration'] = undefined;

/**
 * <p>The tag set of the S3 Storage Lens configuration.</p> <note> <p>You can set up to a maximum of 50 tags.</p> </note>
 * @member {Array.<module:model/PutStorageLensConfigurationRequestTagsInner>} Tags
 */
PutStorageLensConfigurationRequest.prototype['Tags'] = undefined;






export default PutStorageLensConfigurationRequest;

