/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import S3CannedAccessControlList from './S3CannedAccessControlList';
import S3ChecksumAlgorithm from './S3ChecksumAlgorithm';
import S3CopyObjectOperation from './S3CopyObjectOperation';
import S3CopyObjectOperationNewObjectMetadata from './S3CopyObjectOperationNewObjectMetadata';
import S3MetadataDirective from './S3MetadataDirective';
import S3ObjectLockLegalHoldStatus from './S3ObjectLockLegalHoldStatus';
import S3ObjectLockMode from './S3ObjectLockMode';
import S3StorageClass from './S3StorageClass';

/**
 * The CreateJobRequestOperationS3PutObjectCopy model module.
 * @module model/CreateJobRequestOperationS3PutObjectCopy
 * @version 2018-08-20
 */
class CreateJobRequestOperationS3PutObjectCopy {
    /**
     * Constructs a new <code>CreateJobRequestOperationS3PutObjectCopy</code>.
     * @alias module:model/CreateJobRequestOperationS3PutObjectCopy
     * @implements module:model/S3CopyObjectOperation
     */
    constructor() { 
        S3CopyObjectOperation.initialize(this);
        CreateJobRequestOperationS3PutObjectCopy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateJobRequestOperationS3PutObjectCopy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateJobRequestOperationS3PutObjectCopy} obj Optional instance to populate.
     * @return {module:model/CreateJobRequestOperationS3PutObjectCopy} The populated <code>CreateJobRequestOperationS3PutObjectCopy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateJobRequestOperationS3PutObjectCopy();
            S3CopyObjectOperation.constructFromObject(data, obj);

            if (data.hasOwnProperty('TargetResource')) {
                obj['TargetResource'] = ApiClient.convertToType(data['TargetResource'], 'String');
            }
            if (data.hasOwnProperty('CannedAccessControlList')) {
                obj['CannedAccessControlList'] = ApiClient.convertToType(data['CannedAccessControlList'], S3CannedAccessControlList);
            }
            if (data.hasOwnProperty('AccessControlGrants')) {
                obj['AccessControlGrants'] = ApiClient.convertToType(data['AccessControlGrants'], Array);
            }
            if (data.hasOwnProperty('MetadataDirective')) {
                obj['MetadataDirective'] = ApiClient.convertToType(data['MetadataDirective'], S3MetadataDirective);
            }
            if (data.hasOwnProperty('ModifiedSinceConstraint')) {
                obj['ModifiedSinceConstraint'] = ApiClient.convertToType(data['ModifiedSinceConstraint'], 'Date');
            }
            if (data.hasOwnProperty('NewObjectMetadata')) {
                obj['NewObjectMetadata'] = S3CopyObjectOperationNewObjectMetadata.constructFromObject(data['NewObjectMetadata']);
            }
            if (data.hasOwnProperty('NewObjectTagging')) {
                obj['NewObjectTagging'] = ApiClient.convertToType(data['NewObjectTagging'], Array);
            }
            if (data.hasOwnProperty('RedirectLocation')) {
                obj['RedirectLocation'] = ApiClient.convertToType(data['RedirectLocation'], 'String');
            }
            if (data.hasOwnProperty('RequesterPays')) {
                obj['RequesterPays'] = ApiClient.convertToType(data['RequesterPays'], 'Boolean');
            }
            if (data.hasOwnProperty('StorageClass')) {
                obj['StorageClass'] = ApiClient.convertToType(data['StorageClass'], S3StorageClass);
            }
            if (data.hasOwnProperty('UnModifiedSinceConstraint')) {
                obj['UnModifiedSinceConstraint'] = ApiClient.convertToType(data['UnModifiedSinceConstraint'], 'Date');
            }
            if (data.hasOwnProperty('SSEAwsKmsKeyId')) {
                obj['SSEAwsKmsKeyId'] = ApiClient.convertToType(data['SSEAwsKmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('TargetKeyPrefix')) {
                obj['TargetKeyPrefix'] = ApiClient.convertToType(data['TargetKeyPrefix'], 'String');
            }
            if (data.hasOwnProperty('ObjectLockLegalHoldStatus')) {
                obj['ObjectLockLegalHoldStatus'] = ApiClient.convertToType(data['ObjectLockLegalHoldStatus'], S3ObjectLockLegalHoldStatus);
            }
            if (data.hasOwnProperty('ObjectLockMode')) {
                obj['ObjectLockMode'] = ApiClient.convertToType(data['ObjectLockMode'], S3ObjectLockMode);
            }
            if (data.hasOwnProperty('ObjectLockRetainUntilDate')) {
                obj['ObjectLockRetainUntilDate'] = ApiClient.convertToType(data['ObjectLockRetainUntilDate'], 'Date');
            }
            if (data.hasOwnProperty('BucketKeyEnabled')) {
                obj['BucketKeyEnabled'] = ApiClient.convertToType(data['BucketKeyEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('ChecksumAlgorithm')) {
                obj['ChecksumAlgorithm'] = ApiClient.convertToType(data['ChecksumAlgorithm'], S3ChecksumAlgorithm);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateJobRequestOperationS3PutObjectCopy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateJobRequestOperationS3PutObjectCopy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `TargetResource`
        if (data['TargetResource']) { // data not null
          String.validateJSON(data['TargetResource']);
        }
        // validate the optional field `CannedAccessControlList`
        if (data['CannedAccessControlList']) { // data not null
          S3CannedAccessControlList.validateJSON(data['CannedAccessControlList']);
        }
        // validate the optional field `AccessControlGrants`
        if (data['AccessControlGrants']) { // data not null
          Array.validateJSON(data['AccessControlGrants']);
        }
        // validate the optional field `MetadataDirective`
        if (data['MetadataDirective']) { // data not null
          S3MetadataDirective.validateJSON(data['MetadataDirective']);
        }
        // validate the optional field `ModifiedSinceConstraint`
        if (data['ModifiedSinceConstraint']) { // data not null
          Date.validateJSON(data['ModifiedSinceConstraint']);
        }
        // validate the optional field `NewObjectMetadata`
        if (data['NewObjectMetadata']) { // data not null
          S3CopyObjectOperationNewObjectMetadata.validateJSON(data['NewObjectMetadata']);
        }
        // validate the optional field `NewObjectTagging`
        if (data['NewObjectTagging']) { // data not null
          Array.validateJSON(data['NewObjectTagging']);
        }
        // validate the optional field `RedirectLocation`
        if (data['RedirectLocation']) { // data not null
          String.validateJSON(data['RedirectLocation']);
        }
        // validate the optional field `RequesterPays`
        if (data['RequesterPays']) { // data not null
          Boolean.validateJSON(data['RequesterPays']);
        }
        // validate the optional field `StorageClass`
        if (data['StorageClass']) { // data not null
          S3StorageClass.validateJSON(data['StorageClass']);
        }
        // validate the optional field `UnModifiedSinceConstraint`
        if (data['UnModifiedSinceConstraint']) { // data not null
          Date.validateJSON(data['UnModifiedSinceConstraint']);
        }
        // validate the optional field `SSEAwsKmsKeyId`
        if (data['SSEAwsKmsKeyId']) { // data not null
          String.validateJSON(data['SSEAwsKmsKeyId']);
        }
        // validate the optional field `TargetKeyPrefix`
        if (data['TargetKeyPrefix']) { // data not null
          String.validateJSON(data['TargetKeyPrefix']);
        }
        // validate the optional field `ObjectLockLegalHoldStatus`
        if (data['ObjectLockLegalHoldStatus']) { // data not null
          S3ObjectLockLegalHoldStatus.validateJSON(data['ObjectLockLegalHoldStatus']);
        }
        // validate the optional field `ObjectLockMode`
        if (data['ObjectLockMode']) { // data not null
          S3ObjectLockMode.validateJSON(data['ObjectLockMode']);
        }
        // validate the optional field `ObjectLockRetainUntilDate`
        if (data['ObjectLockRetainUntilDate']) { // data not null
          Date.validateJSON(data['ObjectLockRetainUntilDate']);
        }
        // validate the optional field `BucketKeyEnabled`
        if (data['BucketKeyEnabled']) { // data not null
          Boolean.validateJSON(data['BucketKeyEnabled']);
        }
        // validate the optional field `ChecksumAlgorithm`
        if (data['ChecksumAlgorithm']) { // data not null
          S3ChecksumAlgorithm.validateJSON(data['ChecksumAlgorithm']);
        }

        return true;
    }


}



/**
 * @member {String} TargetResource
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['TargetResource'] = undefined;

/**
 * @member {module:model/S3CannedAccessControlList} CannedAccessControlList
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['CannedAccessControlList'] = undefined;

/**
 * @member {Array} AccessControlGrants
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['AccessControlGrants'] = undefined;

/**
 * @member {module:model/S3MetadataDirective} MetadataDirective
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['MetadataDirective'] = undefined;

/**
 * @member {Date} ModifiedSinceConstraint
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['ModifiedSinceConstraint'] = undefined;

/**
 * @member {module:model/S3CopyObjectOperationNewObjectMetadata} NewObjectMetadata
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['NewObjectMetadata'] = undefined;

/**
 * @member {Array} NewObjectTagging
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['NewObjectTagging'] = undefined;

/**
 * @member {String} RedirectLocation
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['RedirectLocation'] = undefined;

/**
 * @member {Boolean} RequesterPays
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['RequesterPays'] = undefined;

/**
 * @member {module:model/S3StorageClass} StorageClass
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['StorageClass'] = undefined;

/**
 * @member {Date} UnModifiedSinceConstraint
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['UnModifiedSinceConstraint'] = undefined;

/**
 * @member {String} SSEAwsKmsKeyId
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['SSEAwsKmsKeyId'] = undefined;

/**
 * @member {String} TargetKeyPrefix
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['TargetKeyPrefix'] = undefined;

/**
 * @member {module:model/S3ObjectLockLegalHoldStatus} ObjectLockLegalHoldStatus
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['ObjectLockLegalHoldStatus'] = undefined;

/**
 * @member {module:model/S3ObjectLockMode} ObjectLockMode
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['ObjectLockMode'] = undefined;

/**
 * @member {Date} ObjectLockRetainUntilDate
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['ObjectLockRetainUntilDate'] = undefined;

/**
 * @member {Boolean} BucketKeyEnabled
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['BucketKeyEnabled'] = undefined;

/**
 * @member {module:model/S3ChecksumAlgorithm} ChecksumAlgorithm
 */
CreateJobRequestOperationS3PutObjectCopy.prototype['ChecksumAlgorithm'] = undefined;


// Implement S3CopyObjectOperation interface:
/**
 * @member {String} TargetResource
 */
S3CopyObjectOperation.prototype['TargetResource'] = undefined;
/**
 * @member {module:model/S3CannedAccessControlList} CannedAccessControlList
 */
S3CopyObjectOperation.prototype['CannedAccessControlList'] = undefined;
/**
 * @member {Array} AccessControlGrants
 */
S3CopyObjectOperation.prototype['AccessControlGrants'] = undefined;
/**
 * @member {module:model/S3MetadataDirective} MetadataDirective
 */
S3CopyObjectOperation.prototype['MetadataDirective'] = undefined;
/**
 * @member {Date} ModifiedSinceConstraint
 */
S3CopyObjectOperation.prototype['ModifiedSinceConstraint'] = undefined;
/**
 * @member {module:model/S3CopyObjectOperationNewObjectMetadata} NewObjectMetadata
 */
S3CopyObjectOperation.prototype['NewObjectMetadata'] = undefined;
/**
 * @member {Array} NewObjectTagging
 */
S3CopyObjectOperation.prototype['NewObjectTagging'] = undefined;
/**
 * @member {String} RedirectLocation
 */
S3CopyObjectOperation.prototype['RedirectLocation'] = undefined;
/**
 * @member {Boolean} RequesterPays
 */
S3CopyObjectOperation.prototype['RequesterPays'] = undefined;
/**
 * @member {module:model/S3StorageClass} StorageClass
 */
S3CopyObjectOperation.prototype['StorageClass'] = undefined;
/**
 * @member {Date} UnModifiedSinceConstraint
 */
S3CopyObjectOperation.prototype['UnModifiedSinceConstraint'] = undefined;
/**
 * @member {String} SSEAwsKmsKeyId
 */
S3CopyObjectOperation.prototype['SSEAwsKmsKeyId'] = undefined;
/**
 * @member {String} TargetKeyPrefix
 */
S3CopyObjectOperation.prototype['TargetKeyPrefix'] = undefined;
/**
 * @member {module:model/S3ObjectLockLegalHoldStatus} ObjectLockLegalHoldStatus
 */
S3CopyObjectOperation.prototype['ObjectLockLegalHoldStatus'] = undefined;
/**
 * @member {module:model/S3ObjectLockMode} ObjectLockMode
 */
S3CopyObjectOperation.prototype['ObjectLockMode'] = undefined;
/**
 * @member {Date} ObjectLockRetainUntilDate
 */
S3CopyObjectOperation.prototype['ObjectLockRetainUntilDate'] = undefined;
/**
 * @member {Boolean} BucketKeyEnabled
 */
S3CopyObjectOperation.prototype['BucketKeyEnabled'] = undefined;
/**
 * @member {module:model/S3ChecksumAlgorithm} ChecksumAlgorithm
 */
S3CopyObjectOperation.prototype['ChecksumAlgorithm'] = undefined;




export default CreateJobRequestOperationS3PutObjectCopy;

