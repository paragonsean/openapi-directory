/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsS3Control);
  }
}(this, function(expect, AwsS3Control) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsS3Control.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createAccessPoint', function() {
      it('should call createAccessPoint successfully', function(done) {
        //uncomment below and update the code to test createAccessPoint
        //instance.createAccessPoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAccessPointForObjectLambda', function() {
      it('should call createAccessPointForObjectLambda successfully', function(done) {
        //uncomment below and update the code to test createAccessPointForObjectLambda
        //instance.createAccessPointForObjectLambda(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBucket', function() {
      it('should call createBucket successfully', function(done) {
        //uncomment below and update the code to test createBucket
        //instance.createBucket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createJob', function() {
      it('should call createJob successfully', function(done) {
        //uncomment below and update the code to test createJob
        //instance.createJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMultiRegionAccessPoint', function() {
      it('should call createMultiRegionAccessPoint successfully', function(done) {
        //uncomment below and update the code to test createMultiRegionAccessPoint
        //instance.createMultiRegionAccessPoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccessPoint', function() {
      it('should call deleteAccessPoint successfully', function(done) {
        //uncomment below and update the code to test deleteAccessPoint
        //instance.deleteAccessPoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccessPointForObjectLambda', function() {
      it('should call deleteAccessPointForObjectLambda successfully', function(done) {
        //uncomment below and update the code to test deleteAccessPointForObjectLambda
        //instance.deleteAccessPointForObjectLambda(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccessPointPolicy', function() {
      it('should call deleteAccessPointPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteAccessPointPolicy
        //instance.deleteAccessPointPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccessPointPolicyForObjectLambda', function() {
      it('should call deleteAccessPointPolicyForObjectLambda successfully', function(done) {
        //uncomment below and update the code to test deleteAccessPointPolicyForObjectLambda
        //instance.deleteAccessPointPolicyForObjectLambda(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBucket', function() {
      it('should call deleteBucket successfully', function(done) {
        //uncomment below and update the code to test deleteBucket
        //instance.deleteBucket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBucketLifecycleConfiguration', function() {
      it('should call deleteBucketLifecycleConfiguration successfully', function(done) {
        //uncomment below and update the code to test deleteBucketLifecycleConfiguration
        //instance.deleteBucketLifecycleConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBucketPolicy', function() {
      it('should call deleteBucketPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteBucketPolicy
        //instance.deleteBucketPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBucketReplication', function() {
      it('should call deleteBucketReplication successfully', function(done) {
        //uncomment below and update the code to test deleteBucketReplication
        //instance.deleteBucketReplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBucketTagging', function() {
      it('should call deleteBucketTagging successfully', function(done) {
        //uncomment below and update the code to test deleteBucketTagging
        //instance.deleteBucketTagging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteJobTagging', function() {
      it('should call deleteJobTagging successfully', function(done) {
        //uncomment below and update the code to test deleteJobTagging
        //instance.deleteJobTagging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMultiRegionAccessPoint', function() {
      it('should call deleteMultiRegionAccessPoint successfully', function(done) {
        //uncomment below and update the code to test deleteMultiRegionAccessPoint
        //instance.deleteMultiRegionAccessPoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePublicAccessBlock', function() {
      it('should call deletePublicAccessBlock successfully', function(done) {
        //uncomment below and update the code to test deletePublicAccessBlock
        //instance.deletePublicAccessBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStorageLensConfiguration', function() {
      it('should call deleteStorageLensConfiguration successfully', function(done) {
        //uncomment below and update the code to test deleteStorageLensConfiguration
        //instance.deleteStorageLensConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStorageLensConfigurationTagging', function() {
      it('should call deleteStorageLensConfigurationTagging successfully', function(done) {
        //uncomment below and update the code to test deleteStorageLensConfigurationTagging
        //instance.deleteStorageLensConfigurationTagging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeJob', function() {
      it('should call describeJob successfully', function(done) {
        //uncomment below and update the code to test describeJob
        //instance.describeJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeMultiRegionAccessPointOperation', function() {
      it('should call describeMultiRegionAccessPointOperation successfully', function(done) {
        //uncomment below and update the code to test describeMultiRegionAccessPointOperation
        //instance.describeMultiRegionAccessPointOperation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessPoint', function() {
      it('should call getAccessPoint successfully', function(done) {
        //uncomment below and update the code to test getAccessPoint
        //instance.getAccessPoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessPointConfigurationForObjectLambda', function() {
      it('should call getAccessPointConfigurationForObjectLambda successfully', function(done) {
        //uncomment below and update the code to test getAccessPointConfigurationForObjectLambda
        //instance.getAccessPointConfigurationForObjectLambda(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessPointForObjectLambda', function() {
      it('should call getAccessPointForObjectLambda successfully', function(done) {
        //uncomment below and update the code to test getAccessPointForObjectLambda
        //instance.getAccessPointForObjectLambda(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessPointPolicy', function() {
      it('should call getAccessPointPolicy successfully', function(done) {
        //uncomment below and update the code to test getAccessPointPolicy
        //instance.getAccessPointPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessPointPolicyForObjectLambda', function() {
      it('should call getAccessPointPolicyForObjectLambda successfully', function(done) {
        //uncomment below and update the code to test getAccessPointPolicyForObjectLambda
        //instance.getAccessPointPolicyForObjectLambda(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessPointPolicyStatus', function() {
      it('should call getAccessPointPolicyStatus successfully', function(done) {
        //uncomment below and update the code to test getAccessPointPolicyStatus
        //instance.getAccessPointPolicyStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessPointPolicyStatusForObjectLambda', function() {
      it('should call getAccessPointPolicyStatusForObjectLambda successfully', function(done) {
        //uncomment below and update the code to test getAccessPointPolicyStatusForObjectLambda
        //instance.getAccessPointPolicyStatusForObjectLambda(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucket', function() {
      it('should call getBucket successfully', function(done) {
        //uncomment below and update the code to test getBucket
        //instance.getBucket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucketLifecycleConfiguration', function() {
      it('should call getBucketLifecycleConfiguration successfully', function(done) {
        //uncomment below and update the code to test getBucketLifecycleConfiguration
        //instance.getBucketLifecycleConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucketPolicy', function() {
      it('should call getBucketPolicy successfully', function(done) {
        //uncomment below and update the code to test getBucketPolicy
        //instance.getBucketPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucketReplication', function() {
      it('should call getBucketReplication successfully', function(done) {
        //uncomment below and update the code to test getBucketReplication
        //instance.getBucketReplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucketTagging', function() {
      it('should call getBucketTagging successfully', function(done) {
        //uncomment below and update the code to test getBucketTagging
        //instance.getBucketTagging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucketVersioning', function() {
      it('should call getBucketVersioning successfully', function(done) {
        //uncomment below and update the code to test getBucketVersioning
        //instance.getBucketVersioning(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobTagging', function() {
      it('should call getJobTagging successfully', function(done) {
        //uncomment below and update the code to test getJobTagging
        //instance.getJobTagging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMultiRegionAccessPoint', function() {
      it('should call getMultiRegionAccessPoint successfully', function(done) {
        //uncomment below and update the code to test getMultiRegionAccessPoint
        //instance.getMultiRegionAccessPoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMultiRegionAccessPointPolicy', function() {
      it('should call getMultiRegionAccessPointPolicy successfully', function(done) {
        //uncomment below and update the code to test getMultiRegionAccessPointPolicy
        //instance.getMultiRegionAccessPointPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMultiRegionAccessPointPolicyStatus', function() {
      it('should call getMultiRegionAccessPointPolicyStatus successfully', function(done) {
        //uncomment below and update the code to test getMultiRegionAccessPointPolicyStatus
        //instance.getMultiRegionAccessPointPolicyStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMultiRegionAccessPointRoutes', function() {
      it('should call getMultiRegionAccessPointRoutes successfully', function(done) {
        //uncomment below and update the code to test getMultiRegionAccessPointRoutes
        //instance.getMultiRegionAccessPointRoutes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPublicAccessBlock', function() {
      it('should call getPublicAccessBlock successfully', function(done) {
        //uncomment below and update the code to test getPublicAccessBlock
        //instance.getPublicAccessBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStorageLensConfiguration', function() {
      it('should call getStorageLensConfiguration successfully', function(done) {
        //uncomment below and update the code to test getStorageLensConfiguration
        //instance.getStorageLensConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStorageLensConfigurationTagging', function() {
      it('should call getStorageLensConfigurationTagging successfully', function(done) {
        //uncomment below and update the code to test getStorageLensConfigurationTagging
        //instance.getStorageLensConfigurationTagging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAccessPoints', function() {
      it('should call listAccessPoints successfully', function(done) {
        //uncomment below and update the code to test listAccessPoints
        //instance.listAccessPoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAccessPointsForObjectLambda', function() {
      it('should call listAccessPointsForObjectLambda successfully', function(done) {
        //uncomment below and update the code to test listAccessPointsForObjectLambda
        //instance.listAccessPointsForObjectLambda(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listJobs', function() {
      it('should call listJobs successfully', function(done) {
        //uncomment below and update the code to test listJobs
        //instance.listJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMultiRegionAccessPoints', function() {
      it('should call listMultiRegionAccessPoints successfully', function(done) {
        //uncomment below and update the code to test listMultiRegionAccessPoints
        //instance.listMultiRegionAccessPoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRegionalBuckets', function() {
      it('should call listRegionalBuckets successfully', function(done) {
        //uncomment below and update the code to test listRegionalBuckets
        //instance.listRegionalBuckets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStorageLensConfigurations', function() {
      it('should call listStorageLensConfigurations successfully', function(done) {
        //uncomment below and update the code to test listStorageLensConfigurations
        //instance.listStorageLensConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putAccessPointConfigurationForObjectLambda', function() {
      it('should call putAccessPointConfigurationForObjectLambda successfully', function(done) {
        //uncomment below and update the code to test putAccessPointConfigurationForObjectLambda
        //instance.putAccessPointConfigurationForObjectLambda(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putAccessPointPolicy', function() {
      it('should call putAccessPointPolicy successfully', function(done) {
        //uncomment below and update the code to test putAccessPointPolicy
        //instance.putAccessPointPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putAccessPointPolicyForObjectLambda', function() {
      it('should call putAccessPointPolicyForObjectLambda successfully', function(done) {
        //uncomment below and update the code to test putAccessPointPolicyForObjectLambda
        //instance.putAccessPointPolicyForObjectLambda(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putBucketLifecycleConfiguration', function() {
      it('should call putBucketLifecycleConfiguration successfully', function(done) {
        //uncomment below and update the code to test putBucketLifecycleConfiguration
        //instance.putBucketLifecycleConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putBucketPolicy', function() {
      it('should call putBucketPolicy successfully', function(done) {
        //uncomment below and update the code to test putBucketPolicy
        //instance.putBucketPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putBucketReplication', function() {
      it('should call putBucketReplication successfully', function(done) {
        //uncomment below and update the code to test putBucketReplication
        //instance.putBucketReplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putBucketTagging', function() {
      it('should call putBucketTagging successfully', function(done) {
        //uncomment below and update the code to test putBucketTagging
        //instance.putBucketTagging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putBucketVersioning', function() {
      it('should call putBucketVersioning successfully', function(done) {
        //uncomment below and update the code to test putBucketVersioning
        //instance.putBucketVersioning(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putJobTagging', function() {
      it('should call putJobTagging successfully', function(done) {
        //uncomment below and update the code to test putJobTagging
        //instance.putJobTagging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putMultiRegionAccessPointPolicy', function() {
      it('should call putMultiRegionAccessPointPolicy successfully', function(done) {
        //uncomment below and update the code to test putMultiRegionAccessPointPolicy
        //instance.putMultiRegionAccessPointPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putPublicAccessBlock', function() {
      it('should call putPublicAccessBlock successfully', function(done) {
        //uncomment below and update the code to test putPublicAccessBlock
        //instance.putPublicAccessBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putStorageLensConfiguration', function() {
      it('should call putStorageLensConfiguration successfully', function(done) {
        //uncomment below and update the code to test putStorageLensConfiguration
        //instance.putStorageLensConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putStorageLensConfigurationTagging', function() {
      it('should call putStorageLensConfigurationTagging successfully', function(done) {
        //uncomment below and update the code to test putStorageLensConfigurationTagging
        //instance.putStorageLensConfigurationTagging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitMultiRegionAccessPointRoutes', function() {
      it('should call submitMultiRegionAccessPointRoutes successfully', function(done) {
        //uncomment below and update the code to test submitMultiRegionAccessPointRoutes
        //instance.submitMultiRegionAccessPointRoutes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateJobPriority', function() {
      it('should call updateJobPriority successfully', function(done) {
        //uncomment below and update the code to test updateJobPriority
        //instance.updateJobPriority(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateJobStatus', function() {
      it('should call updateJobStatus successfully', function(done) {
        //uncomment below and update the code to test updateJobStatus
        //instance.updateJobStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
