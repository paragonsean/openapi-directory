/**
 * AWS S3 Control
 *  Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. 
 *
 * The version of the OpenAPI document: 2018-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsS3Control);
  }
}(this, function(expect, AwsS3Control) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsS3Control.S3CopyObjectOperation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('S3CopyObjectOperation', function() {
    it('should create an instance of S3CopyObjectOperation', function() {
      // uncomment below and update the code to test S3CopyObjectOperation
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be.a(AwsS3Control.S3CopyObjectOperation);
    });

    it('should have the property targetResource (base name: "TargetResource")', function() {
      // uncomment below and update the code to test the property targetResource
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property cannedAccessControlList (base name: "CannedAccessControlList")', function() {
      // uncomment below and update the code to test the property cannedAccessControlList
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property accessControlGrants (base name: "AccessControlGrants")', function() {
      // uncomment below and update the code to test the property accessControlGrants
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property metadataDirective (base name: "MetadataDirective")', function() {
      // uncomment below and update the code to test the property metadataDirective
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property modifiedSinceConstraint (base name: "ModifiedSinceConstraint")', function() {
      // uncomment below and update the code to test the property modifiedSinceConstraint
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property newObjectMetadata (base name: "NewObjectMetadata")', function() {
      // uncomment below and update the code to test the property newObjectMetadata
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property newObjectTagging (base name: "NewObjectTagging")', function() {
      // uncomment below and update the code to test the property newObjectTagging
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property redirectLocation (base name: "RedirectLocation")', function() {
      // uncomment below and update the code to test the property redirectLocation
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property requesterPays (base name: "RequesterPays")', function() {
      // uncomment below and update the code to test the property requesterPays
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property storageClass (base name: "StorageClass")', function() {
      // uncomment below and update the code to test the property storageClass
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property unModifiedSinceConstraint (base name: "UnModifiedSinceConstraint")', function() {
      // uncomment below and update the code to test the property unModifiedSinceConstraint
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property sSEAwsKmsKeyId (base name: "SSEAwsKmsKeyId")', function() {
      // uncomment below and update the code to test the property sSEAwsKmsKeyId
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property targetKeyPrefix (base name: "TargetKeyPrefix")', function() {
      // uncomment below and update the code to test the property targetKeyPrefix
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property objectLockLegalHoldStatus (base name: "ObjectLockLegalHoldStatus")', function() {
      // uncomment below and update the code to test the property objectLockLegalHoldStatus
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property objectLockMode (base name: "ObjectLockMode")', function() {
      // uncomment below and update the code to test the property objectLockMode
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property objectLockRetainUntilDate (base name: "ObjectLockRetainUntilDate")', function() {
      // uncomment below and update the code to test the property objectLockRetainUntilDate
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property bucketKeyEnabled (base name: "BucketKeyEnabled")', function() {
      // uncomment below and update the code to test the property bucketKeyEnabled
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

    it('should have the property checksumAlgorithm (base name: "ChecksumAlgorithm")', function() {
      // uncomment below and update the code to test the property checksumAlgorithm
      //var instance = new AwsS3Control.S3CopyObjectOperation();
      //expect(instance).to.be();
    });

  });

}));
