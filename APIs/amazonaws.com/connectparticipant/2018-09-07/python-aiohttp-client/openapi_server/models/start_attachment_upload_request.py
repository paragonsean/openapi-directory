# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartAttachmentUploadRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_type: str=None, attachment_size_in_bytes: int=None, attachment_name: str=None, client_token: str=None):
        """StartAttachmentUploadRequest - a model defined in OpenAPI

        :param content_type: The content_type of this StartAttachmentUploadRequest.
        :param attachment_size_in_bytes: The attachment_size_in_bytes of this StartAttachmentUploadRequest.
        :param attachment_name: The attachment_name of this StartAttachmentUploadRequest.
        :param client_token: The client_token of this StartAttachmentUploadRequest.
        """
        self.openapi_types = {
            'content_type': str,
            'attachment_size_in_bytes': int,
            'attachment_name': str,
            'client_token': str
        }

        self.attribute_map = {
            'content_type': 'ContentType',
            'attachment_size_in_bytes': 'AttachmentSizeInBytes',
            'attachment_name': 'AttachmentName',
            'client_token': 'ClientToken'
        }

        self._content_type = content_type
        self._attachment_size_in_bytes = attachment_size_in_bytes
        self._attachment_name = attachment_name
        self._client_token = client_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartAttachmentUploadRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartAttachmentUpload_request of this StartAttachmentUploadRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_type(self):
        """Gets the content_type of this StartAttachmentUploadRequest.

        Describes the MIME file type of the attachment. For a list of supported file types, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/feature-limits.html\">Feature specifications</a> in the <i>Amazon Connect Administrator Guide</i>.

        :return: The content_type of this StartAttachmentUploadRequest.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this StartAttachmentUploadRequest.

        Describes the MIME file type of the attachment. For a list of supported file types, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/feature-limits.html\">Feature specifications</a> in the <i>Amazon Connect Administrator Guide</i>.

        :param content_type: The content_type of this StartAttachmentUploadRequest.
        :type content_type: str
        """
        if content_type is None:
            raise ValueError("Invalid value for `content_type`, must not be `None`")
        if content_type is not None and len(content_type) > 255:
            raise ValueError("Invalid value for `content_type`, length must be less than or equal to `255`")
        if content_type is not None and len(content_type) < 1:
            raise ValueError("Invalid value for `content_type`, length must be greater than or equal to `1`")

        self._content_type = content_type

    @property
    def attachment_size_in_bytes(self):
        """Gets the attachment_size_in_bytes of this StartAttachmentUploadRequest.

        The size of the attachment in bytes.

        :return: The attachment_size_in_bytes of this StartAttachmentUploadRequest.
        :rtype: int
        """
        return self._attachment_size_in_bytes

    @attachment_size_in_bytes.setter
    def attachment_size_in_bytes(self, attachment_size_in_bytes):
        """Sets the attachment_size_in_bytes of this StartAttachmentUploadRequest.

        The size of the attachment in bytes.

        :param attachment_size_in_bytes: The attachment_size_in_bytes of this StartAttachmentUploadRequest.
        :type attachment_size_in_bytes: int
        """
        if attachment_size_in_bytes is None:
            raise ValueError("Invalid value for `attachment_size_in_bytes`, must not be `None`")
        if attachment_size_in_bytes is not None and attachment_size_in_bytes < 1:
            raise ValueError("Invalid value for `attachment_size_in_bytes`, must be a value greater than or equal to `1`")

        self._attachment_size_in_bytes = attachment_size_in_bytes

    @property
    def attachment_name(self):
        """Gets the attachment_name of this StartAttachmentUploadRequest.

        A case-sensitive name of the attachment being uploaded.

        :return: The attachment_name of this StartAttachmentUploadRequest.
        :rtype: str
        """
        return self._attachment_name

    @attachment_name.setter
    def attachment_name(self, attachment_name):
        """Sets the attachment_name of this StartAttachmentUploadRequest.

        A case-sensitive name of the attachment being uploaded.

        :param attachment_name: The attachment_name of this StartAttachmentUploadRequest.
        :type attachment_name: str
        """
        if attachment_name is None:
            raise ValueError("Invalid value for `attachment_name`, must not be `None`")
        if attachment_name is not None and len(attachment_name) > 256:
            raise ValueError("Invalid value for `attachment_name`, length must be less than or equal to `256`")
        if attachment_name is not None and len(attachment_name) < 1:
            raise ValueError("Invalid value for `attachment_name`, length must be greater than or equal to `1`")

        self._attachment_name = attachment_name

    @property
    def client_token(self):
        """Gets the client_token of this StartAttachmentUploadRequest.

        A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.

        :return: The client_token of this StartAttachmentUploadRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this StartAttachmentUploadRequest.

        A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.

        :param client_token: The client_token of this StartAttachmentUploadRequest.
        :type client_token: str
        """
        if client_token is None:
            raise ValueError("Invalid value for `client_token`, must not be `None`")
        if client_token is not None and len(client_token) > 500:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `500`")
        if client_token is not None and len(client_token) < 1:
            raise ValueError("Invalid value for `client_token`, length must be greater than or equal to `1`")

        self._client_token = client_token
