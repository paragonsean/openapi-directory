# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chat_item_type import ChatItemType
from openapi_server.models.item_message_metadata import ItemMessageMetadata
from openapi_server.models.participant_role import ParticipantRole
from openapi_server import util


class Item(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, absolute_time: str=None, content: str=None, content_type: str=None, id: str=None, type: ChatItemType=None, participant_id: str=None, display_name: str=None, participant_role: ParticipantRole=None, attachments: List=None, message_metadata: ItemMessageMetadata=None, related_contact_id: str=None, contact_id: str=None):
        """Item - a model defined in OpenAPI

        :param absolute_time: The absolute_time of this Item.
        :param content: The content of this Item.
        :param content_type: The content_type of this Item.
        :param id: The id of this Item.
        :param type: The type of this Item.
        :param participant_id: The participant_id of this Item.
        :param display_name: The display_name of this Item.
        :param participant_role: The participant_role of this Item.
        :param attachments: The attachments of this Item.
        :param message_metadata: The message_metadata of this Item.
        :param related_contact_id: The related_contact_id of this Item.
        :param contact_id: The contact_id of this Item.
        """
        self.openapi_types = {
            'absolute_time': str,
            'content': str,
            'content_type': str,
            'id': str,
            'type': ChatItemType,
            'participant_id': str,
            'display_name': str,
            'participant_role': ParticipantRole,
            'attachments': List,
            'message_metadata': ItemMessageMetadata,
            'related_contact_id': str,
            'contact_id': str
        }

        self.attribute_map = {
            'absolute_time': 'AbsoluteTime',
            'content': 'Content',
            'content_type': 'ContentType',
            'id': 'Id',
            'type': 'Type',
            'participant_id': 'ParticipantId',
            'display_name': 'DisplayName',
            'participant_role': 'ParticipantRole',
            'attachments': 'Attachments',
            'message_metadata': 'MessageMetadata',
            'related_contact_id': 'RelatedContactId',
            'contact_id': 'ContactId'
        }

        self._absolute_time = absolute_time
        self._content = content
        self._content_type = content_type
        self._id = id
        self._type = type
        self._participant_id = participant_id
        self._display_name = display_name
        self._participant_role = participant_role
        self._attachments = attachments
        self._message_metadata = message_metadata
        self._related_contact_id = related_contact_id
        self._contact_id = contact_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Item':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Item of this Item.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def absolute_time(self):
        """Gets the absolute_time of this Item.


        :return: The absolute_time of this Item.
        :rtype: str
        """
        return self._absolute_time

    @absolute_time.setter
    def absolute_time(self, absolute_time):
        """Sets the absolute_time of this Item.


        :param absolute_time: The absolute_time of this Item.
        :type absolute_time: str
        """

        self._absolute_time = absolute_time

    @property
    def content(self):
        """Gets the content of this Item.


        :return: The content of this Item.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this Item.


        :param content: The content of this Item.
        :type content: str
        """

        self._content = content

    @property
    def content_type(self):
        """Gets the content_type of this Item.


        :return: The content_type of this Item.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this Item.


        :param content_type: The content_type of this Item.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def id(self):
        """Gets the id of this Item.


        :return: The id of this Item.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Item.


        :param id: The id of this Item.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this Item.


        :return: The type of this Item.
        :rtype: ChatItemType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Item.


        :param type: The type of this Item.
        :type type: ChatItemType
        """

        self._type = type

    @property
    def participant_id(self):
        """Gets the participant_id of this Item.


        :return: The participant_id of this Item.
        :rtype: str
        """
        return self._participant_id

    @participant_id.setter
    def participant_id(self, participant_id):
        """Sets the participant_id of this Item.


        :param participant_id: The participant_id of this Item.
        :type participant_id: str
        """

        self._participant_id = participant_id

    @property
    def display_name(self):
        """Gets the display_name of this Item.


        :return: The display_name of this Item.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Item.


        :param display_name: The display_name of this Item.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def participant_role(self):
        """Gets the participant_role of this Item.


        :return: The participant_role of this Item.
        :rtype: ParticipantRole
        """
        return self._participant_role

    @participant_role.setter
    def participant_role(self, participant_role):
        """Sets the participant_role of this Item.


        :param participant_role: The participant_role of this Item.
        :type participant_role: ParticipantRole
        """

        self._participant_role = participant_role

    @property
    def attachments(self):
        """Gets the attachments of this Item.


        :return: The attachments of this Item.
        :rtype: List
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this Item.


        :param attachments: The attachments of this Item.
        :type attachments: List
        """

        self._attachments = attachments

    @property
    def message_metadata(self):
        """Gets the message_metadata of this Item.


        :return: The message_metadata of this Item.
        :rtype: ItemMessageMetadata
        """
        return self._message_metadata

    @message_metadata.setter
    def message_metadata(self, message_metadata):
        """Sets the message_metadata of this Item.


        :param message_metadata: The message_metadata of this Item.
        :type message_metadata: ItemMessageMetadata
        """

        self._message_metadata = message_metadata

    @property
    def related_contact_id(self):
        """Gets the related_contact_id of this Item.


        :return: The related_contact_id of this Item.
        :rtype: str
        """
        return self._related_contact_id

    @related_contact_id.setter
    def related_contact_id(self, related_contact_id):
        """Sets the related_contact_id of this Item.


        :param related_contact_id: The related_contact_id of this Item.
        :type related_contact_id: str
        """

        self._related_contact_id = related_contact_id

    @property
    def contact_id(self):
        """Gets the contact_id of this Item.


        :return: The contact_id of this Item.
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this Item.


        :param contact_id: The contact_id of this Item.
        :type contact_id: str
        """

        self._contact_id = contact_id
