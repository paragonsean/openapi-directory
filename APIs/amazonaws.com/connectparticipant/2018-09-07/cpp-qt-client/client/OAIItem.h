/**
 * Amazon Connect Participant Service
 * <p>Amazon Connect is an easy-to-use omnichannel cloud contact center service that enables companies of any size to deliver superior customer service at a lower cost. Amazon Connect communications capabilities make it easy for companies to deliver personalized interactions across communication channels, including chat. </p> <p>Use the Amazon Connect Participant Service to manage participants (for example, agents, customers, and managers listening in), and to send messages and events within a chat contact. The APIs in the service enable the following: sending chat messages, attachment sharing, managing a participant's connection state and message events, and retrieving chat transcripts.</p>
 *
 * The version of the OpenAPI document: 2018-09-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItem.h
 *
 * An item - message or event - that has been sent. 
 */

#ifndef OAIItem_H
#define OAIItem_H

#include <QJsonObject>

#include "OAIChatItemType.h"
#include "OAIItem_MessageMetadata.h"
#include "OAIParticipantRole.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIItem_MessageMetadata;

class OAIItem : public OAIObject {
public:
    OAIItem();
    OAIItem(QString json);
    ~OAIItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAbsoluteTime() const;
    void setAbsoluteTime(const QString &absolute_time);
    bool is_absolute_time_Set() const;
    bool is_absolute_time_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIChatItemType getType() const;
    void setType(const OAIChatItemType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getParticipantId() const;
    void setParticipantId(const QString &participant_id);
    bool is_participant_id_Set() const;
    bool is_participant_id_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIParticipantRole getParticipantRole() const;
    void setParticipantRole(const OAIParticipantRole &participant_role);
    bool is_participant_role_Set() const;
    bool is_participant_role_Valid() const;

    QList getAttachments() const;
    void setAttachments(const QList &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    OAIItem_MessageMetadata getMessageMetadata() const;
    void setMessageMetadata(const OAIItem_MessageMetadata &message_metadata);
    bool is_message_metadata_Set() const;
    bool is_message_metadata_Valid() const;

    QString getRelatedContactId() const;
    void setRelatedContactId(const QString &related_contact_id);
    bool is_related_contact_id_Set() const;
    bool is_related_contact_id_Valid() const;

    QString getContactId() const;
    void setContactId(const QString &contact_id);
    bool is_contact_id_Set() const;
    bool is_contact_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_absolute_time;
    bool m_absolute_time_isSet;
    bool m_absolute_time_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIChatItemType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_participant_id;
    bool m_participant_id_isSet;
    bool m_participant_id_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIParticipantRole m_participant_role;
    bool m_participant_role_isSet;
    bool m_participant_role_isValid;

    QList m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    OAIItem_MessageMetadata m_message_metadata;
    bool m_message_metadata_isSet;
    bool m_message_metadata_isValid;

    QString m_related_contact_id;
    bool m_related_contact_id_isSet;
    bool m_related_contact_id_isValid;

    QString m_contact_id;
    bool m_contact_id_isSet;
    bool m_contact_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItem)

#endif // OAIItem_H
