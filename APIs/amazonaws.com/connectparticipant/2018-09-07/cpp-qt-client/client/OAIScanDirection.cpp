/**
 * Amazon Connect Participant Service
 * <p>Amazon Connect is an easy-to-use omnichannel cloud contact center service that enables companies of any size to deliver superior customer service at a lower cost. Amazon Connect communications capabilities make it easy for companies to deliver personalized interactions across communication channels, including chat. </p> <p>Use the Amazon Connect Participant Service to manage participants (for example, agents, customers, and managers listening in), and to send messages and events within a chat contact. The APIs in the service enable the following: sending chat messages, attachment sharing, managing a participant's connection state and message events, and retrieving chat transcripts.</p>
 *
 * The version of the OpenAPI document: 2018-09-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScanDirection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScanDirection::OAIScanDirection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScanDirection::OAIScanDirection() {
    this->initializeModel();
}

OAIScanDirection::~OAIScanDirection() {}

void OAIScanDirection::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIScanDirection::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIScanDirection::fromJson(QString jsonString) {
    
    if ( jsonString.compare("FORWARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIScanDirection::FORWARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BACKWARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIScanDirection::BACKWARD;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIScanDirection::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIScanDirection::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIScanDirection::FORWARD:
            val = "FORWARD";
            break;
        case eOAIScanDirection::BACKWARD:
            val = "BACKWARD";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIScanDirection::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIScanDirection::eOAIScanDirection OAIScanDirection::getValue() const {
    return m_value;
}

void OAIScanDirection::setValue(const OAIScanDirection::eOAIScanDirection& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIScanDirection::isSet() const {
    
    return m_value_isSet;
}

bool OAIScanDirection::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
