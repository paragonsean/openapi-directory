/**
 * Amazon Connect Participant Service
 * <p>Amazon Connect is an easy-to-use omnichannel cloud contact center service that enables companies of any size to deliver superior customer service at a lower cost. Amazon Connect communications capabilities make it easy for companies to deliver personalized interactions across communication channels, including chat. </p> <p>Use the Amazon Connect Participant Service to manage participants (for example, agents, customers, and managers listening in), and to send messages and events within a chat contact. The APIs in the service enable the following: sending chat messages, attachment sharing, managing a participant's connection state and message events, and retrieving chat transcripts.</p>
 *
 * The version of the OpenAPI document: 2018-09-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConnectionType from './ConnectionType';

/**
 * The CreateParticipantConnectionRequest model module.
 * @module model/CreateParticipantConnectionRequest
 * @version 2018-09-07
 */
class CreateParticipantConnectionRequest {
    /**
     * Constructs a new <code>CreateParticipantConnectionRequest</code>.
     * @alias module:model/CreateParticipantConnectionRequest
     */
    constructor() { 
        
        CreateParticipantConnectionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateParticipantConnectionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateParticipantConnectionRequest} obj Optional instance to populate.
     * @return {module:model/CreateParticipantConnectionRequest} The populated <code>CreateParticipantConnectionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateParticipantConnectionRequest();

            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], [ConnectionType]);
            }
            if (data.hasOwnProperty('ConnectParticipant')) {
                obj['ConnectParticipant'] = ApiClient.convertToType(data['ConnectParticipant'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateParticipantConnectionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateParticipantConnectionRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['Type'])) {
            throw new Error("Expected the field `Type` to be an array in the JSON data but got " + data['Type']);
        }

        return true;
    }


}



/**
 * Type of connection information required. This can be omitted if <code>ConnectParticipant</code> is <code>true</code>.
 * @member {Array.<module:model/ConnectionType>} Type
 */
CreateParticipantConnectionRequest.prototype['Type'] = undefined;

/**
 * Amazon Connect Participant is used to mark the participant as connected for customer participant in message streaming, as well as for agent or manager participant in non-streaming chats.
 * @member {Boolean} ConnectParticipant
 */
CreateParticipantConnectionRequest.prototype['ConnectParticipant'] = undefined;






export default CreateParticipantConnectionRequest;

