/**
 * Amazon Connect Participant Service
 * <p>Amazon Connect is an easy-to-use omnichannel cloud contact center service that enables companies of any size to deliver superior customer service at a lower cost. Amazon Connect communications capabilities make it easy for companies to deliver personalized interactions across communication channels, including chat. </p> <p>Use the Amazon Connect Participant Service to manage participants (for example, agents, customers, and managers listening in), and to send messages and events within a chat contact. The APIs in the service enable the following: sending chat messages, attachment sharing, managing a participant's connection state and message events, and retrieving chat transcripts.</p>
 *
 * The version of the OpenAPI document: 2018-09-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StartAttachmentUploadRequest model module.
 * @module model/StartAttachmentUploadRequest
 * @version 2018-09-07
 */
class StartAttachmentUploadRequest {
    /**
     * Constructs a new <code>StartAttachmentUploadRequest</code>.
     * @alias module:model/StartAttachmentUploadRequest
     * @param contentType {String} Describes the MIME file type of the attachment. For a list of supported file types, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/feature-limits.html\">Feature specifications</a> in the <i>Amazon Connect Administrator Guide</i>.
     * @param attachmentSizeInBytes {Number} The size of the attachment in bytes.
     * @param attachmentName {String} A case-sensitive name of the attachment being uploaded.
     * @param clientToken {String} A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.
     */
    constructor(contentType, attachmentSizeInBytes, attachmentName, clientToken) { 
        
        StartAttachmentUploadRequest.initialize(this, contentType, attachmentSizeInBytes, attachmentName, clientToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contentType, attachmentSizeInBytes, attachmentName, clientToken) { 
        obj['ContentType'] = contentType;
        obj['AttachmentSizeInBytes'] = attachmentSizeInBytes;
        obj['AttachmentName'] = attachmentName;
        obj['ClientToken'] = clientToken;
    }

    /**
     * Constructs a <code>StartAttachmentUploadRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartAttachmentUploadRequest} obj Optional instance to populate.
     * @return {module:model/StartAttachmentUploadRequest} The populated <code>StartAttachmentUploadRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartAttachmentUploadRequest();

            if (data.hasOwnProperty('ContentType')) {
                obj['ContentType'] = ApiClient.convertToType(data['ContentType'], 'String');
            }
            if (data.hasOwnProperty('AttachmentSizeInBytes')) {
                obj['AttachmentSizeInBytes'] = ApiClient.convertToType(data['AttachmentSizeInBytes'], 'Number');
            }
            if (data.hasOwnProperty('AttachmentName')) {
                obj['AttachmentName'] = ApiClient.convertToType(data['AttachmentName'], 'String');
            }
            if (data.hasOwnProperty('ClientToken')) {
                obj['ClientToken'] = ApiClient.convertToType(data['ClientToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartAttachmentUploadRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartAttachmentUploadRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartAttachmentUploadRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ContentType'] && !(typeof data['ContentType'] === 'string' || data['ContentType'] instanceof String)) {
            throw new Error("Expected the field `ContentType` to be a primitive type in the JSON string but got " + data['ContentType']);
        }
        // ensure the json data is a string
        if (data['AttachmentName'] && !(typeof data['AttachmentName'] === 'string' || data['AttachmentName'] instanceof String)) {
            throw new Error("Expected the field `AttachmentName` to be a primitive type in the JSON string but got " + data['AttachmentName']);
        }
        // ensure the json data is a string
        if (data['ClientToken'] && !(typeof data['ClientToken'] === 'string' || data['ClientToken'] instanceof String)) {
            throw new Error("Expected the field `ClientToken` to be a primitive type in the JSON string but got " + data['ClientToken']);
        }

        return true;
    }


}

StartAttachmentUploadRequest.RequiredProperties = ["ContentType", "AttachmentSizeInBytes", "AttachmentName", "ClientToken"];

/**
 * Describes the MIME file type of the attachment. For a list of supported file types, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/feature-limits.html\">Feature specifications</a> in the <i>Amazon Connect Administrator Guide</i>.
 * @member {String} ContentType
 */
StartAttachmentUploadRequest.prototype['ContentType'] = undefined;

/**
 * The size of the attachment in bytes.
 * @member {Number} AttachmentSizeInBytes
 */
StartAttachmentUploadRequest.prototype['AttachmentSizeInBytes'] = undefined;

/**
 * A case-sensitive name of the attachment being uploaded.
 * @member {String} AttachmentName
 */
StartAttachmentUploadRequest.prototype['AttachmentName'] = undefined;

/**
 * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.
 * @member {String} ClientToken
 */
StartAttachmentUploadRequest.prototype['ClientToken'] = undefined;






export default StartAttachmentUploadRequest;

