/**
 * Amazon Connect Participant Service
 * <p>Amazon Connect is an easy-to-use omnichannel cloud contact center service that enables companies of any size to deliver superior customer service at a lower cost. Amazon Connect communications capabilities make it easy for companies to deliver personalized interactions across communication channels, including chat. </p> <p>Use the Amazon Connect Participant Service to manage participants (for example, agents, customers, and managers listening in), and to send messages and events within a chat contact. The APIs in the service enable the following: sending chat messages, attachment sharing, managing a participant's connection state and message events, and retrieving chat transcripts.</p>
 *
 * The version of the OpenAPI document: 2018-09-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetTranscriptRequestStartPosition from './GetTranscriptRequestStartPosition';

/**
 * The GetTranscriptRequest model module.
 * @module model/GetTranscriptRequest
 * @version 2018-09-07
 */
class GetTranscriptRequest {
    /**
     * Constructs a new <code>GetTranscriptRequest</code>.
     * @alias module:model/GetTranscriptRequest
     */
    constructor() { 
        
        GetTranscriptRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetTranscriptRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetTranscriptRequest} obj Optional instance to populate.
     * @return {module:model/GetTranscriptRequest} The populated <code>GetTranscriptRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetTranscriptRequest();

            if (data.hasOwnProperty('ContactId')) {
                obj['ContactId'] = ApiClient.convertToType(data['ContactId'], 'String');
            }
            if (data.hasOwnProperty('MaxResults')) {
                obj['MaxResults'] = ApiClient.convertToType(data['MaxResults'], 'Number');
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
            if (data.hasOwnProperty('ScanDirection')) {
                obj['ScanDirection'] = ApiClient.convertToType(data['ScanDirection'], 'String');
            }
            if (data.hasOwnProperty('SortOrder')) {
                obj['SortOrder'] = ApiClient.convertToType(data['SortOrder'], 'String');
            }
            if (data.hasOwnProperty('StartPosition')) {
                obj['StartPosition'] = GetTranscriptRequestStartPosition.constructFromObject(data['StartPosition']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetTranscriptRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetTranscriptRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ContactId'] && !(typeof data['ContactId'] === 'string' || data['ContactId'] instanceof String)) {
            throw new Error("Expected the field `ContactId` to be a primitive type in the JSON string but got " + data['ContactId']);
        }
        // ensure the json data is a string
        if (data['NextToken'] && !(typeof data['NextToken'] === 'string' || data['NextToken'] instanceof String)) {
            throw new Error("Expected the field `NextToken` to be a primitive type in the JSON string but got " + data['NextToken']);
        }
        // ensure the json data is a string
        if (data['ScanDirection'] && !(typeof data['ScanDirection'] === 'string' || data['ScanDirection'] instanceof String)) {
            throw new Error("Expected the field `ScanDirection` to be a primitive type in the JSON string but got " + data['ScanDirection']);
        }
        // ensure the json data is a string
        if (data['SortOrder'] && !(typeof data['SortOrder'] === 'string' || data['SortOrder'] instanceof String)) {
            throw new Error("Expected the field `SortOrder` to be a primitive type in the JSON string but got " + data['SortOrder']);
        }
        // validate the optional field `StartPosition`
        if (data['StartPosition']) { // data not null
          GetTranscriptRequestStartPosition.validateJSON(data['StartPosition']);
        }

        return true;
    }


}



/**
 * The contactId from the current contact chain for which transcript is needed.
 * @member {String} ContactId
 */
GetTranscriptRequest.prototype['ContactId'] = undefined;

/**
 * The maximum number of results to return in the page. Default: 10. 
 * @member {Number} MaxResults
 */
GetTranscriptRequest.prototype['MaxResults'] = undefined;

/**
 * The pagination token. Use the value returned previously in the next subsequent request to retrieve the next set of results.
 * @member {String} NextToken
 */
GetTranscriptRequest.prototype['NextToken'] = undefined;

/**
 * The direction from StartPosition from which to retrieve message. Default: BACKWARD when no StartPosition is provided, FORWARD with StartPosition. 
 * @member {module:model/GetTranscriptRequest.ScanDirectionEnum} ScanDirection
 */
GetTranscriptRequest.prototype['ScanDirection'] = undefined;

/**
 * The sort order for the records. Default: DESCENDING.
 * @member {module:model/GetTranscriptRequest.SortOrderEnum} SortOrder
 */
GetTranscriptRequest.prototype['SortOrder'] = undefined;

/**
 * @member {module:model/GetTranscriptRequestStartPosition} StartPosition
 */
GetTranscriptRequest.prototype['StartPosition'] = undefined;





/**
 * Allowed values for the <code>ScanDirection</code> property.
 * @enum {String}
 * @readonly
 */
GetTranscriptRequest['ScanDirectionEnum'] = {

    /**
     * value: "FORWARD"
     * @const
     */
    "FORWARD": "FORWARD",

    /**
     * value: "BACKWARD"
     * @const
     */
    "BACKWARD": "BACKWARD"
};


/**
 * Allowed values for the <code>SortOrder</code> property.
 * @enum {String}
 * @readonly
 */
GetTranscriptRequest['SortOrderEnum'] = {

    /**
     * value: "DESCENDING"
     * @const
     */
    "DESCENDING": "DESCENDING",

    /**
     * value: "ASCENDING"
     * @const
     */
    "ASCENDING": "ASCENDING"
};



export default GetTranscriptRequest;

