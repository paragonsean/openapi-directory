/**
 * Amazon Data Lifecycle Manager
 * <fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon Data Lifecycle Manager, you can manage the lifecycle of your Amazon Web Services resources. You create lifecycle policies, which are used to automate operations on the specified resources.</p> <p>Amazon Data Lifecycle Manager supports Amazon EBS volumes and snapshots. For information about using Amazon Data Lifecycle Manager with Amazon EBS, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html\"> Amazon Data Lifecycle Manager</a> in the <i>Amazon EC2 User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-01-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICrossRegionCopyAction.h
 *
 * &lt;p&gt; &lt;b&gt;[Event-based policies only]&lt;/b&gt; Specifies a cross-Region copy action for event-based policies.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To specify a cross-Region copy rule for snapshot and AMI policies, use &lt;a&gt;CrossRegionCopyRule&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt;
 */

#ifndef OAICrossRegionCopyAction_H
#define OAICrossRegionCopyAction_H

#include <QJsonObject>

#include "OAICrossRegionCopyAction_EncryptionConfiguration.h"
#include "OAICrossRegionCopyRetainRule.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICrossRegionCopyAction_EncryptionConfiguration;
class OAICrossRegionCopyRetainRule;

class OAICrossRegionCopyAction : public OAIObject {
public:
    OAICrossRegionCopyAction();
    OAICrossRegionCopyAction(QString json);
    ~OAICrossRegionCopyAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTarget() const;
    void setTarget(const QString &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    OAICrossRegionCopyAction_EncryptionConfiguration getEncryptionConfiguration() const;
    void setEncryptionConfiguration(const OAICrossRegionCopyAction_EncryptionConfiguration &encryption_configuration);
    bool is_encryption_configuration_Set() const;
    bool is_encryption_configuration_Valid() const;

    OAICrossRegionCopyRetainRule getRetainRule() const;
    void setRetainRule(const OAICrossRegionCopyRetainRule &retain_rule);
    bool is_retain_rule_Set() const;
    bool is_retain_rule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    OAICrossRegionCopyAction_EncryptionConfiguration m_encryption_configuration;
    bool m_encryption_configuration_isSet;
    bool m_encryption_configuration_isValid;

    OAICrossRegionCopyRetainRule m_retain_rule;
    bool m_retain_rule_isSet;
    bool m_retain_rule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICrossRegionCopyAction)

#endif // OAICrossRegionCopyAction_H
