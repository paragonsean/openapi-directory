/**
 * Amazon Data Lifecycle Manager
 * <fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon Data Lifecycle Manager, you can manage the lifecycle of your Amazon Web Services resources. You create lifecycle policies, which are used to automate operations on the specified resources.</p> <p>Amazon Data Lifecycle Manager supports Amazon EBS volumes and snapshots. For information about using Amazon Data Lifecycle Manager with Amazon EBS, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html\"> Amazon Data Lifecycle Manager</a> in the <i>Amazon EC2 User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-01-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICrossRegionCopyRule.h
 *
 * &lt;p&gt; &lt;b&gt;[Snapshot and AMI policies only]&lt;/b&gt; Specifies a cross-Region copy rule for snapshot and AMI policies.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To specify a cross-Region copy action for event-based polices, use &lt;a&gt;CrossRegionCopyAction&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt;
 */

#ifndef OAICrossRegionCopyRule_H
#define OAICrossRegionCopyRule_H

#include <QJsonObject>

#include "OAICrossRegionCopyRule_DeprecateRule.h"
#include "OAICrossRegionCopyRule_RetainRule.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICrossRegionCopyRule_RetainRule;
class OAICrossRegionCopyRule_DeprecateRule;

class OAICrossRegionCopyRule : public OAIObject {
public:
    OAICrossRegionCopyRule();
    OAICrossRegionCopyRule(QString json);
    ~OAICrossRegionCopyRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTargetRegion() const;
    void setTargetRegion(const QString &target_region);
    bool is_target_region_Set() const;
    bool is_target_region_Valid() const;

    QString getTarget() const;
    void setTarget(const QString &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    bool getEncrypted() const;
    void setEncrypted(const bool &encrypted);
    bool is_encrypted_Set() const;
    bool is_encrypted_Valid() const;

    QString getCmkArn() const;
    void setCmkArn(const QString &cmk_arn);
    bool is_cmk_arn_Set() const;
    bool is_cmk_arn_Valid() const;

    bool getCopyTags() const;
    void setCopyTags(const bool &copy_tags);
    bool is_copy_tags_Set() const;
    bool is_copy_tags_Valid() const;

    OAICrossRegionCopyRule_RetainRule getRetainRule() const;
    void setRetainRule(const OAICrossRegionCopyRule_RetainRule &retain_rule);
    bool is_retain_rule_Set() const;
    bool is_retain_rule_Valid() const;

    OAICrossRegionCopyRule_DeprecateRule getDeprecateRule() const;
    void setDeprecateRule(const OAICrossRegionCopyRule_DeprecateRule &deprecate_rule);
    bool is_deprecate_rule_Set() const;
    bool is_deprecate_rule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_target_region;
    bool m_target_region_isSet;
    bool m_target_region_isValid;

    QString m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    bool m_encrypted;
    bool m_encrypted_isSet;
    bool m_encrypted_isValid;

    QString m_cmk_arn;
    bool m_cmk_arn_isSet;
    bool m_cmk_arn_isValid;

    bool m_copy_tags;
    bool m_copy_tags_isSet;
    bool m_copy_tags_isValid;

    OAICrossRegionCopyRule_RetainRule m_retain_rule;
    bool m_retain_rule_isSet;
    bool m_retain_rule_isValid;

    OAICrossRegionCopyRule_DeprecateRule m_deprecate_rule;
    bool m_deprecate_rule_isSet;
    bool m_deprecate_rule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICrossRegionCopyRule)

#endif // OAICrossRegionCopyRule_H
