/**
 * Amazon Data Lifecycle Manager
 * <fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon Data Lifecycle Manager, you can manage the lifecycle of your Amazon Web Services resources. You create lifecycle policies, which are used to automate operations on the specified resources.</p> <p>Amazon Data Lifecycle Manager supports Amazon EBS volumes and snapshots. For information about using Amazon Data Lifecycle Manager with Amazon EBS, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html\"> Amazon Data Lifecycle Manager</a> in the <i>Amazon EC2 User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-01-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParameters.h
 *
 * &lt;p&gt; &lt;b&gt;[Snapshot and AMI policies only]&lt;/b&gt; Specifies optional parameters for snapshot and AMI policies. The set of valid parameters depends on the combination of policy type and target resource type.&lt;/p&gt; &lt;p&gt;If you choose to exclude boot volumes and you specify tags that consequently exclude all of the additional data volumes attached to an instance, then Amazon Data Lifecycle Manager will not create any snapshots for the affected instance, and it will emit a &lt;code&gt;SnapshotsCreateFailed&lt;/code&gt; Amazon CloudWatch metric. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-dlm-cw-metrics.html\&quot;&gt;Monitor your policies using Amazon CloudWatch&lt;/a&gt;.&lt;/p&gt;
 */

#ifndef OAIParameters_H
#define OAIParameters_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIParameters : public OAIObject {
public:
    OAIParameters();
    OAIParameters(QString json);
    ~OAIParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getExcludeBootVolume() const;
    void setExcludeBootVolume(const bool &exclude_boot_volume);
    bool is_exclude_boot_volume_Set() const;
    bool is_exclude_boot_volume_Valid() const;

    bool getNoReboot() const;
    void setNoReboot(const bool &no_reboot);
    bool is_no_reboot_Set() const;
    bool is_no_reboot_Valid() const;

    QList getExcludeDataVolumeTags() const;
    void setExcludeDataVolumeTags(const QList &exclude_data_volume_tags);
    bool is_exclude_data_volume_tags_Set() const;
    bool is_exclude_data_volume_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_exclude_boot_volume;
    bool m_exclude_boot_volume_isSet;
    bool m_exclude_boot_volume_isValid;

    bool m_no_reboot;
    bool m_no_reboot_isSet;
    bool m_no_reboot_isValid;

    QList m_exclude_data_volume_tags;
    bool m_exclude_data_volume_tags_isSet;
    bool m_exclude_data_volume_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParameters)

#endif // OAIParameters_H
