/**
 * Amazon Data Lifecycle Manager
 * <fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon Data Lifecycle Manager, you can manage the lifecycle of your Amazon Web Services resources. You create lifecycle policies, which are used to automate operations on the specified resources.</p> <p>Amazon Data Lifecycle Manager supports Amazon EBS volumes and snapshots. For information about using Amazon Data Lifecycle Manager with Amazon EBS, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html\"> Amazon Data Lifecycle Manager</a> in the <i>Amazon EC2 User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-01-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILifecyclePolicySummary.h
 *
 * Summary information about a lifecycle policy.
 */

#ifndef OAILifecyclePolicySummary_H
#define OAILifecyclePolicySummary_H

#include <QJsonObject>

#include "OAIGettablePolicyStateValues.h"
#include "OAIPolicyTypeValues.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILifecyclePolicySummary : public OAIObject {
public:
    OAILifecyclePolicySummary();
    OAILifecyclePolicySummary(QString json);
    ~OAILifecyclePolicySummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPolicyId() const;
    void setPolicyId(const QString &policy_id);
    bool is_policy_id_Set() const;
    bool is_policy_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIGettablePolicyStateValues getState() const;
    void setState(const OAIGettablePolicyStateValues &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIPolicyTypeValues getPolicyType() const;
    void setPolicyType(const OAIPolicyTypeValues &policy_type);
    bool is_policy_type_Set() const;
    bool is_policy_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_policy_id;
    bool m_policy_id_isSet;
    bool m_policy_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIGettablePolicyStateValues m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIPolicyTypeValues m_policy_type;
    bool m_policy_type_isSet;
    bool m_policy_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILifecyclePolicySummary)

#endif // OAILifecyclePolicySummary_H
