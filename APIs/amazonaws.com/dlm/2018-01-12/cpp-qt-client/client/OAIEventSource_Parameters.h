/**
 * Amazon Data Lifecycle Manager
 * <fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon Data Lifecycle Manager, you can manage the lifecycle of your Amazon Web Services resources. You create lifecycle policies, which are used to automate operations on the specified resources.</p> <p>Amazon Data Lifecycle Manager supports Amazon EBS volumes and snapshots. For information about using Amazon Data Lifecycle Manager with Amazon EBS, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html\"> Amazon Data Lifecycle Manager</a> in the <i>Amazon EC2 User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-01-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventSource_Parameters.h
 *
 * 
 */

#ifndef OAIEventSource_Parameters_H
#define OAIEventSource_Parameters_H

#include <QJsonObject>

#include "OAIEventTypeValues.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEventSource_Parameters : public OAIObject {
public:
    OAIEventSource_Parameters();
    OAIEventSource_Parameters(QString json);
    ~OAIEventSource_Parameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEventTypeValues getEventType() const;
    void setEventType(const OAIEventTypeValues &event_type);
    bool is_event_type_Set() const;
    bool is_event_type_Valid() const;

    QList getSnapshotOwner() const;
    void setSnapshotOwner(const QList &snapshot_owner);
    bool is_snapshot_owner_Set() const;
    bool is_snapshot_owner_Valid() const;

    QString getDescriptionRegex() const;
    void setDescriptionRegex(const QString &description_regex);
    bool is_description_regex_Set() const;
    bool is_description_regex_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEventTypeValues m_event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    QList m_snapshot_owner;
    bool m_snapshot_owner_isSet;
    bool m_snapshot_owner_isValid;

    QString m_description_regex;
    bool m_description_regex_isSet;
    bool m_description_regex_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventSource_Parameters)

#endif // OAIEventSource_Parameters_H
