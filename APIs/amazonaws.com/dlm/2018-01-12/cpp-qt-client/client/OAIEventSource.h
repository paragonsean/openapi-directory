/**
 * Amazon Data Lifecycle Manager
 * <fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon Data Lifecycle Manager, you can manage the lifecycle of your Amazon Web Services resources. You create lifecycle policies, which are used to automate operations on the specified resources.</p> <p>Amazon Data Lifecycle Manager supports Amazon EBS volumes and snapshots. For information about using Amazon Data Lifecycle Manager with Amazon EBS, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html\"> Amazon Data Lifecycle Manager</a> in the <i>Amazon EC2 User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-01-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventSource.h
 *
 *  &lt;b&gt;[Event-based policies only]&lt;/b&gt; Specifies an event that activates an event-based policy.
 */

#ifndef OAIEventSource_H
#define OAIEventSource_H

#include <QJsonObject>

#include "OAIEventSourceValues.h"
#include "OAIEventSource_Parameters.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventSource_Parameters;

class OAIEventSource : public OAIObject {
public:
    OAIEventSource();
    OAIEventSource(QString json);
    ~OAIEventSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEventSourceValues getType() const;
    void setType(const OAIEventSourceValues &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIEventSource_Parameters getParameters() const;
    void setParameters(const OAIEventSource_Parameters &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEventSourceValues m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIEventSource_Parameters m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventSource)

#endif // OAIEventSource_H
