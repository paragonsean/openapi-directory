/*
 * Amazon Data Lifecycle Manager
 * <fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon Data Lifecycle Manager, you can manage the lifecycle of your Amazon Web Services resources. You create lifecycle policies, which are used to automate operations on the specified resources.</p> <p>Amazon Data Lifecycle Manager supports Amazon EBS volumes and snapshots. For information about using Amazon Data Lifecycle Manager with Amazon EBS, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html\"> Amazon Data Lifecycle Manager</a> in the <i>Amazon EC2 User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-01-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ScheduleArchiveRule;
import org.openapitools.client.model.ScheduleCreateRule;
import org.openapitools.client.model.ScheduleDeprecateRule;
import org.openapitools.client.model.ScheduleFastRestoreRule;
import org.openapitools.client.model.ScheduleRetainRule;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  &lt;b&gt;[Snapshot and AMI policies only]&lt;/b&gt; Specifies a schedule for a snapshot or AMI lifecycle policy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:36.229817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Schedule {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COPY_TAGS = "CopyTags";
  @SerializedName(SERIALIZED_NAME_COPY_TAGS)
  private Boolean copyTags;

  public static final String SERIALIZED_NAME_TAGS_TO_ADD = "TagsToAdd";
  @SerializedName(SERIALIZED_NAME_TAGS_TO_ADD)
  private List tagsToAdd;

  public static final String SERIALIZED_NAME_VARIABLE_TAGS = "VariableTags";
  @SerializedName(SERIALIZED_NAME_VARIABLE_TAGS)
  private List variableTags;

  public static final String SERIALIZED_NAME_CREATE_RULE = "CreateRule";
  @SerializedName(SERIALIZED_NAME_CREATE_RULE)
  private ScheduleCreateRule createRule;

  public static final String SERIALIZED_NAME_RETAIN_RULE = "RetainRule";
  @SerializedName(SERIALIZED_NAME_RETAIN_RULE)
  private ScheduleRetainRule retainRule;

  public static final String SERIALIZED_NAME_FAST_RESTORE_RULE = "FastRestoreRule";
  @SerializedName(SERIALIZED_NAME_FAST_RESTORE_RULE)
  private ScheduleFastRestoreRule fastRestoreRule;

  public static final String SERIALIZED_NAME_CROSS_REGION_COPY_RULES = "CrossRegionCopyRules";
  @SerializedName(SERIALIZED_NAME_CROSS_REGION_COPY_RULES)
  private List crossRegionCopyRules;

  public static final String SERIALIZED_NAME_SHARE_RULES = "ShareRules";
  @SerializedName(SERIALIZED_NAME_SHARE_RULES)
  private List shareRules;

  public static final String SERIALIZED_NAME_DEPRECATE_RULE = "DeprecateRule";
  @SerializedName(SERIALIZED_NAME_DEPRECATE_RULE)
  private ScheduleDeprecateRule deprecateRule;

  public static final String SERIALIZED_NAME_ARCHIVE_RULE = "ArchiveRule";
  @SerializedName(SERIALIZED_NAME_ARCHIVE_RULE)
  private ScheduleArchiveRule archiveRule;

  public Schedule() {
  }

  public Schedule name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Schedule copyTags(Boolean copyTags) {
    this.copyTags = copyTags;
    return this;
  }

  /**
   * Get copyTags
   * @return copyTags
   */
  @javax.annotation.Nullable
  public Boolean getCopyTags() {
    return copyTags;
  }

  public void setCopyTags(Boolean copyTags) {
    this.copyTags = copyTags;
  }


  public Schedule tagsToAdd(List tagsToAdd) {
    this.tagsToAdd = tagsToAdd;
    return this;
  }

  /**
   * Get tagsToAdd
   * @return tagsToAdd
   */
  @javax.annotation.Nullable
  public List getTagsToAdd() {
    return tagsToAdd;
  }

  public void setTagsToAdd(List tagsToAdd) {
    this.tagsToAdd = tagsToAdd;
  }


  public Schedule variableTags(List variableTags) {
    this.variableTags = variableTags;
    return this;
  }

  /**
   * Get variableTags
   * @return variableTags
   */
  @javax.annotation.Nullable
  public List getVariableTags() {
    return variableTags;
  }

  public void setVariableTags(List variableTags) {
    this.variableTags = variableTags;
  }


  public Schedule createRule(ScheduleCreateRule createRule) {
    this.createRule = createRule;
    return this;
  }

  /**
   * Get createRule
   * @return createRule
   */
  @javax.annotation.Nullable
  public ScheduleCreateRule getCreateRule() {
    return createRule;
  }

  public void setCreateRule(ScheduleCreateRule createRule) {
    this.createRule = createRule;
  }


  public Schedule retainRule(ScheduleRetainRule retainRule) {
    this.retainRule = retainRule;
    return this;
  }

  /**
   * Get retainRule
   * @return retainRule
   */
  @javax.annotation.Nullable
  public ScheduleRetainRule getRetainRule() {
    return retainRule;
  }

  public void setRetainRule(ScheduleRetainRule retainRule) {
    this.retainRule = retainRule;
  }


  public Schedule fastRestoreRule(ScheduleFastRestoreRule fastRestoreRule) {
    this.fastRestoreRule = fastRestoreRule;
    return this;
  }

  /**
   * Get fastRestoreRule
   * @return fastRestoreRule
   */
  @javax.annotation.Nullable
  public ScheduleFastRestoreRule getFastRestoreRule() {
    return fastRestoreRule;
  }

  public void setFastRestoreRule(ScheduleFastRestoreRule fastRestoreRule) {
    this.fastRestoreRule = fastRestoreRule;
  }


  public Schedule crossRegionCopyRules(List crossRegionCopyRules) {
    this.crossRegionCopyRules = crossRegionCopyRules;
    return this;
  }

  /**
   * Get crossRegionCopyRules
   * @return crossRegionCopyRules
   */
  @javax.annotation.Nullable
  public List getCrossRegionCopyRules() {
    return crossRegionCopyRules;
  }

  public void setCrossRegionCopyRules(List crossRegionCopyRules) {
    this.crossRegionCopyRules = crossRegionCopyRules;
  }


  public Schedule shareRules(List shareRules) {
    this.shareRules = shareRules;
    return this;
  }

  /**
   * Get shareRules
   * @return shareRules
   */
  @javax.annotation.Nullable
  public List getShareRules() {
    return shareRules;
  }

  public void setShareRules(List shareRules) {
    this.shareRules = shareRules;
  }


  public Schedule deprecateRule(ScheduleDeprecateRule deprecateRule) {
    this.deprecateRule = deprecateRule;
    return this;
  }

  /**
   * Get deprecateRule
   * @return deprecateRule
   */
  @javax.annotation.Nullable
  public ScheduleDeprecateRule getDeprecateRule() {
    return deprecateRule;
  }

  public void setDeprecateRule(ScheduleDeprecateRule deprecateRule) {
    this.deprecateRule = deprecateRule;
  }


  public Schedule archiveRule(ScheduleArchiveRule archiveRule) {
    this.archiveRule = archiveRule;
    return this;
  }

  /**
   * Get archiveRule
   * @return archiveRule
   */
  @javax.annotation.Nullable
  public ScheduleArchiveRule getArchiveRule() {
    return archiveRule;
  }

  public void setArchiveRule(ScheduleArchiveRule archiveRule) {
    this.archiveRule = archiveRule;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Schedule schedule = (Schedule) o;
    return Objects.equals(this.name, schedule.name) &&
        Objects.equals(this.copyTags, schedule.copyTags) &&
        Objects.equals(this.tagsToAdd, schedule.tagsToAdd) &&
        Objects.equals(this.variableTags, schedule.variableTags) &&
        Objects.equals(this.createRule, schedule.createRule) &&
        Objects.equals(this.retainRule, schedule.retainRule) &&
        Objects.equals(this.fastRestoreRule, schedule.fastRestoreRule) &&
        Objects.equals(this.crossRegionCopyRules, schedule.crossRegionCopyRules) &&
        Objects.equals(this.shareRules, schedule.shareRules) &&
        Objects.equals(this.deprecateRule, schedule.deprecateRule) &&
        Objects.equals(this.archiveRule, schedule.archiveRule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, copyTags, tagsToAdd, variableTags, createRule, retainRule, fastRestoreRule, crossRegionCopyRules, shareRules, deprecateRule, archiveRule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Schedule {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    copyTags: ").append(toIndentedString(copyTags)).append("\n");
    sb.append("    tagsToAdd: ").append(toIndentedString(tagsToAdd)).append("\n");
    sb.append("    variableTags: ").append(toIndentedString(variableTags)).append("\n");
    sb.append("    createRule: ").append(toIndentedString(createRule)).append("\n");
    sb.append("    retainRule: ").append(toIndentedString(retainRule)).append("\n");
    sb.append("    fastRestoreRule: ").append(toIndentedString(fastRestoreRule)).append("\n");
    sb.append("    crossRegionCopyRules: ").append(toIndentedString(crossRegionCopyRules)).append("\n");
    sb.append("    shareRules: ").append(toIndentedString(shareRules)).append("\n");
    sb.append("    deprecateRule: ").append(toIndentedString(deprecateRule)).append("\n");
    sb.append("    archiveRule: ").append(toIndentedString(archiveRule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("CopyTags");
    openapiFields.add("TagsToAdd");
    openapiFields.add("VariableTags");
    openapiFields.add("CreateRule");
    openapiFields.add("RetainRule");
    openapiFields.add("FastRestoreRule");
    openapiFields.add("CrossRegionCopyRules");
    openapiFields.add("ShareRules");
    openapiFields.add("DeprecateRule");
    openapiFields.add("ArchiveRule");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Schedule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Schedule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Schedule is not found in the empty JSON string", Schedule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Schedule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Schedule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `CopyTags`
      if (jsonObj.get("CopyTags") != null && !jsonObj.get("CopyTags").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CopyTags"));
      }
      // validate the optional field `TagsToAdd`
      if (jsonObj.get("TagsToAdd") != null && !jsonObj.get("TagsToAdd").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TagsToAdd"));
      }
      // validate the optional field `VariableTags`
      if (jsonObj.get("VariableTags") != null && !jsonObj.get("VariableTags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("VariableTags"));
      }
      // validate the optional field `CreateRule`
      if (jsonObj.get("CreateRule") != null && !jsonObj.get("CreateRule").isJsonNull()) {
        ScheduleCreateRule.validateJsonElement(jsonObj.get("CreateRule"));
      }
      // validate the optional field `RetainRule`
      if (jsonObj.get("RetainRule") != null && !jsonObj.get("RetainRule").isJsonNull()) {
        ScheduleRetainRule.validateJsonElement(jsonObj.get("RetainRule"));
      }
      // validate the optional field `FastRestoreRule`
      if (jsonObj.get("FastRestoreRule") != null && !jsonObj.get("FastRestoreRule").isJsonNull()) {
        ScheduleFastRestoreRule.validateJsonElement(jsonObj.get("FastRestoreRule"));
      }
      // validate the optional field `CrossRegionCopyRules`
      if (jsonObj.get("CrossRegionCopyRules") != null && !jsonObj.get("CrossRegionCopyRules").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CrossRegionCopyRules"));
      }
      // validate the optional field `ShareRules`
      if (jsonObj.get("ShareRules") != null && !jsonObj.get("ShareRules").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ShareRules"));
      }
      // validate the optional field `DeprecateRule`
      if (jsonObj.get("DeprecateRule") != null && !jsonObj.get("DeprecateRule").isJsonNull()) {
        ScheduleDeprecateRule.validateJsonElement(jsonObj.get("DeprecateRule"));
      }
      // validate the optional field `ArchiveRule`
      if (jsonObj.get("ArchiveRule") != null && !jsonObj.get("ArchiveRule").isJsonNull()) {
        ScheduleArchiveRule.validateJsonElement(jsonObj.get("ArchiveRule"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Schedule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Schedule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Schedule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Schedule.class));

       return (TypeAdapter<T>) new TypeAdapter<Schedule>() {
           @Override
           public void write(JsonWriter out, Schedule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Schedule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Schedule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Schedule
   * @throws IOException if the JSON string is invalid with respect to Schedule
   */
  public static Schedule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Schedule.class);
  }

  /**
   * Convert an instance of Schedule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

