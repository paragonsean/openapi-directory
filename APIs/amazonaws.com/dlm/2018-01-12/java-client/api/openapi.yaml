openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon\
    \ Data Lifecycle Manager, you can manage the lifecycle of your Amazon Web Services\
    \ resources. You create lifecycle policies, which are used to automate operations\
    \ on the specified resources.</p> <p>Amazon Data Lifecycle Manager supports Amazon\
    \ EBS volumes and snapshots. For information about using Amazon Data Lifecycle\
    \ Manager with Amazon EBS, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html\"\
    > Amazon Data Lifecycle Manager</a> in the <i>Amazon EC2 User Guide</i>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Data Lifecycle Manager
  version: 2018-01-12
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: dlm
  x-aws-signingName: dlm
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dlm-2018-01-12.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/dlm/
servers:
- description: The Amazon DLM multi-region endpoint
  url: "http://dlm.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon DLM multi-region endpoint
  url: "https://dlm.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)
  url: "http://dlm.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)
  url: "https://dlm.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /policies:
    get:
      description: "<p>Gets summary information about all or the specified data lifecycle\
        \ policies.</p> <p>To get complete information about a policy, use <a>GetLifecyclePolicy</a>.</p>"
      operationId: GetLifecyclePolicies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifiers of the data lifecycle policies.
        explode: true
        in: query
        name: policyIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/PolicyId'
          type: array
        style: form
      - description: The activation state.
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - ENABLED
          - DISABLED
          - ERROR
          type: string
        style: form
      - description: The resource type.
        explode: true
        in: query
        name: resourceTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ResourceTypeValues'
          maxItems: 1
          minItems: 1
          type: array
        style: form
      - description: <p>The target tag for a policy.</p> <p>Tags are strings in the
          format <code>key=value</code>.</p>
        explode: true
        in: query
        name: targetTags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/TagFilter'
          maxItems: 50
          minItems: 1
          type: array
        style: form
      - description: <p>The tags to add to objects created by the policy.</p> <p>Tags
          are strings in the format <code>key=value</code>.</p> <p>These user-defined
          tags are added in addition to the Amazon Web Services-added lifecycle tags.</p>
        explode: true
        in: query
        name: tagsToAdd
        required: false
        schema:
          items:
            $ref: '#/components/schemas/TagFilter'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLifecyclePoliciesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
    post:
      description: Creates a policy to manage the lifecycle of the specified Amazon
        Web Services resources. You can create up to 100 lifecycle policies.
      operationId: CreateLifecyclePolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLifecyclePolicy_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLifecyclePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /policies/{policyId}/:
    delete:
      description: "<p>Deletes the specified lifecycle policy and halts the automated\
        \ operations that the policy specified.</p> <p>For more information about\
        \ deleting a policy, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-modify-delete.html#delete\"\
        >Delete lifecycle policies</a>.</p>"
      operationId: DeleteLifecyclePolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the lifecycle policy.
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          maxLength: 64
          minLength: 0
          pattern: "policy-[A-Za-z0-9]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLifecyclePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
    get:
      description: Gets detailed information about the specified lifecycle policy.
      operationId: GetLifecyclePolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the lifecycle policy.
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          maxLength: 64
          minLength: 0
          pattern: "policy-[A-Za-z0-9]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLifecyclePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Lists the tags for the specified resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\\d+:policy/[0-9A-Za-z_-]{1,128}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: Adds the specified tags to the specified resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\\d+:policy/[0-9A-Za-z_-]{1,128}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes the specified tags from the specified resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\\d+:policy/[0-9A-Za-z_-]{1,128}$"
          type: string
        style: simple
      - description: The tag keys.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /policies/{policyId}:
    patch:
      description: "<p>Updates the specified lifecycle policy.</p> <p>For more information\
        \ about updating a policy, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-modify-delete.html#modify\"\
        >Modify lifecycle policies</a>.</p>"
      operationId: UpdateLifecyclePolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the lifecycle policy.
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          maxLength: 64
          minLength: 0
          pattern: "policy-[A-Za-z0-9]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLifecyclePolicy_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLifecyclePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateLifecyclePolicyResponse:
      example:
        PolicyId: ""
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          - description: The identifier of the lifecycle policy.
      type: object
    PolicyTypeValues:
      enum:
      - EBS_SNAPSHOT_MANAGEMENT
      - IMAGE_MANAGEMENT
      - EVENT_BASED_POLICY
      type: string
    ResourceTypeValuesList:
      items:
        $ref: '#/components/schemas/ResourceTypeValues'
      maxItems: 1
      minItems: 1
      type: array
    ResourceLocationList:
      items:
        $ref: '#/components/schemas/ResourceLocationValues'
      maxItems: 1
      minItems: 1
      type: array
    TargetTagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 1
      type: array
    ScheduleList:
      items:
        $ref: '#/components/schemas/Schedule'
      maxItems: 4
      minItems: 1
      type: array
    Parameters:
      description: "<p> <b>[Snapshot and AMI policies only]</b> Specifies optional\
        \ parameters for snapshot and AMI policies. The set of valid parameters depends\
        \ on the combination of policy type and target resource type.</p> <p>If you\
        \ choose to exclude boot volumes and you specify tags that consequently exclude\
        \ all of the additional data volumes attached to an instance, then Amazon\
        \ Data Lifecycle Manager will not create any snapshots for the affected instance,\
        \ and it will emit a <code>SnapshotsCreateFailed</code> Amazon CloudWatch\
        \ metric. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-dlm-cw-metrics.html\"\
        >Monitor your policies using Amazon CloudWatch</a>.</p>"
      properties:
        ExcludeBootVolume:
          allOf:
          - $ref: '#/components/schemas/ExcludeBootVolume'
          - description: " <b>[Snapshot policies that target instances only]</b> Indicates\
              \ whether to exclude the root volume from multi-volume snapshot sets.\
              \ The default is <code>false</code>. If you specify <code>true</code>,\
              \ then the root volumes attached to targeted instances will be excluded\
              \ from the multi-volume snapshot sets created by the policy."
        NoReboot:
          allOf:
          - $ref: '#/components/schemas/NoReboot'
          - description: " <b>[AMI policies only]</b> Indicates whether targeted instances\
              \ are rebooted when the lifecycle policy runs. <code>true</code> indicates\
              \ that targeted instances are not rebooted when the policy runs. <code>false</code>\
              \ indicates that target instances are rebooted when the policy runs.\
              \ The default is <code>true</code> (instances are not rebooted)."
        ExcludeDataVolumeTags:
          allOf:
          - $ref: '#/components/schemas/ExcludeDataVolumeTagList'
          - description: "<p> <b>[Snapshot policies that target instances only]</b>\
              \ The tags used to identify data (non-root) volumes to exclude from\
              \ multi-volume snapshot sets.</p> <p>If you create a snapshot lifecycle\
              \ policy that targets instances and you specify tags for this parameter,\
              \ then data volumes with the specified tags that are attached to targeted\
              \ instances will be excluded from the multi-volume snapshot sets created\
              \ by the policy.</p>"
      type: object
    EventSource:
      description: " <b>[Event-based policies only]</b> Specifies an event that activates\
        \ an event-based policy."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/EventSourceValues'
          - description: The source of the event. Currently only managed CloudWatch
              Events rules are supported.
        Parameters:
          $ref: '#/components/schemas/EventSource_Parameters'
      required:
      - Type
      type: object
    ActionList:
      items:
        $ref: '#/components/schemas/Action'
      maxItems: 1
      minItems: 1
      type: array
    TagValue:
      maxLength: 256
      pattern: "[\\p{all}]*"
      type: string
    InvalidRequestException: {}
    LimitExceededException: {}
    InternalServerException: {}
    DeleteLifecyclePolicyResponse:
      properties: {}
      type: object
    ResourceNotFoundException: {}
    GetLifecyclePoliciesResponse:
      example:
        Policies: ""
      properties:
        Policies:
          allOf:
          - $ref: '#/components/schemas/LifecyclePolicySummaryList'
          - description: Summary information about the lifecycle policies.
      type: object
    PolicyId:
      maxLength: 64
      minLength: 0
      pattern: "policy-[A-Za-z0-9]+"
      type: string
    ResourceTypeValues:
      enum:
      - VOLUME
      - INSTANCE
      type: string
    TagFilter:
      maxLength: 256
      minLength: 0
      pattern: "[\\p{all}]*"
      type: string
    GetLifecyclePolicyResponse:
      example:
        Policy:
          ExecutionRoleArn: ""
          Description: ""
          PolicyArn: ""
          State: ""
          DateCreated: ""
          PolicyDetails:
            PolicyType: ""
            ResourceTypes: ""
            Schedules: ""
            EventSource:
              Type: ""
              Parameters:
                EventType: ""
                SnapshotOwner: ""
                DescriptionRegex: ""
            Parameters:
              ExcludeBootVolume: ""
              ExcludeDataVolumeTags: ""
              NoReboot: ""
            Actions: ""
            TargetTags: ""
            ResourceLocations: ""
          PolicyId: ""
          DateModified: ""
          Tags: ""
          StatusMessage: ""
      properties:
        Policy:
          $ref: '#/components/schemas/GetLifecyclePolicyResponse_Policy'
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: Information about the tags.
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      type: string
    UpdateLifecyclePolicyResponse:
      properties: {}
      type: object
    ActionName:
      maxLength: 120
      minLength: 0
      pattern: "[0-9A-Za-z _-]+"
      type: string
    CrossRegionCopyActionList:
      items:
        $ref: '#/components/schemas/CrossRegionCopyAction'
      maxItems: 3
      minItems: 0
      type: array
    Action:
      description: " <b>[Event-based policies only]</b> Specifies an action for an\
        \ event-based policy."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          - description: A descriptive name for the action.
        CrossRegionCopy:
          allOf:
          - $ref: '#/components/schemas/CrossRegionCopyActionList'
          - description: The rule for copying shared snapshots across Regions.
      required:
      - CrossRegionCopy
      - Name
      type: object
    RetentionArchiveTier:
      description: "<p> <b>[Snapshot policies only]</b> Describes the retention rule\
        \ for archived snapshots. Once the archive retention threshold is met, the\
        \ snapshots are permanently deleted from the archive tier.</p> <note> <p>The\
        \ archive retention rule must retain snapshots in the archive tier for a minimum\
        \ of 90 days.</p> </note> <p>For <b>count-based schedules</b>, you must specify\
        \ <b>Count</b>. For <b>age-based schedules</b>, you must specify <b>Interval</b>\
        \ and <b> IntervalUnit</b>.</p> <p>For more information about using snapshot\
        \ archiving, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-ami-policy.html#dlm-archive\"\
        >Considerations for snapshot lifecycle policies</a>.</p>"
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: "The maximum number of snapshots to retain in the archive\
              \ storage tier for each volume. The count must ensure that each snapshot\
              \ remains in the archive tier for at least 90 days. For example, if\
              \ the schedule creates snapshots every 30 days, you must specify a count\
              \ of 3 or more to ensure that each snapshot is archived for at least\
              \ 90 days."
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          - description: "Specifies the period of time to retain snapshots in the\
              \ archive tier. After this period expires, the snapshot is permanently\
              \ deleted."
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          - description: "The unit of time in which to measure the <b>Interval</b>.\
              \ For example, to retain a snapshots in the archive tier for 6 months,\
              \ specify <code>Interval=6</code> and <code>IntervalUnit=MONTHS</code>."
      type: object
    ArchiveRetainRule:
      description: " <b>[Snapshot policies only]</b> Specifies information about the\
        \ archive storage tier retention period."
      properties:
        RetentionArchiveTier:
          $ref: '#/components/schemas/ArchiveRetainRule_RetentionArchiveTier'
      required:
      - RetentionArchiveTier
      type: object
    ArchiveRule:
      description: " <b>[Snapshot policies only]</b> Specifies a snapshot archiving\
        \ rule for a schedule."
      properties:
        RetainRule:
          $ref: '#/components/schemas/ArchiveRule_RetainRule'
      required:
      - RetainRule
      type: object
    AvailabilityZone:
      maxLength: 16
      minLength: 0
      pattern: "([a-z]+-){2,3}\\d[a-z]"
      type: string
    AvailabilityZoneList:
      items:
        $ref: '#/components/schemas/AvailabilityZone'
      maxItems: 10
      minItems: 1
      type: array
    AwsAccountId:
      maxLength: 12
      minLength: 12
      pattern: "^[0-9]{12}$"
      type: string
    CmkArn:
      maxLength: 2048
      minLength: 0
      pattern: "arn:aws(-[a-z]{1,3}){0,2}:kms:([a-z]+-){2,3}\\d:\\d+:key/.*"
      type: string
    CopyTags:
      type: boolean
    CopyTagsNullable:
      type: boolean
    Count:
      maximum: 1000
      minimum: 1
      type: integer
    ExecutionRoleArn:
      maxLength: 2048
      minLength: 0
      pattern: "arn:aws(-[a-z]{1,3}){0,2}:iam::\\d+:role/.*"
      type: string
    PolicyDescription:
      maxLength: 500
      minLength: 0
      pattern: "[0-9A-Za-z _-]+"
      type: string
    SettablePolicyStateValues:
      enum:
      - ENABLED
      - DISABLED
      type: string
    PolicyDetails:
      description: " <b>[All policy types]</b> Specifies the configuration of a lifecycle\
        \ policy."
      properties:
        PolicyType:
          allOf:
          - $ref: '#/components/schemas/PolicyTypeValues'
          - description: "<p> <b>[All policy types]</b> The valid target resource\
              \ types and actions a policy can manage. Specify <code>EBS_SNAPSHOT_MANAGEMENT</code>\
              \ to create a lifecycle policy that manages the lifecycle of Amazon\
              \ EBS snapshots. Specify <code>IMAGE_MANAGEMENT</code> to create a lifecycle\
              \ policy that manages the lifecycle of EBS-backed AMIs. Specify <code>EVENT_BASED_POLICY\
              \ </code> to create an event-based policy that performs specific actions\
              \ when a defined event occurs in your Amazon Web Services account.</p>\
              \ <p>The default is <code>EBS_SNAPSHOT_MANAGEMENT</code>.</p>"
        ResourceTypes:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeValuesList'
          - description: " <b>[Snapshot policies only]</b> The target resource type\
              \ for snapshot and AMI lifecycle policies. Use <code>VOLUME </code>to\
              \ create snapshots of individual volumes or use <code>INSTANCE</code>\
              \ to create multi-volume snapshots from the volumes for an instance."
        ResourceLocations:
          allOf:
          - $ref: '#/components/schemas/ResourceLocationList'
          - description: "<p> <b>[Snapshot and AMI policies only]</b> The location\
              \ of the resources to backup. If the source resources are located in\
              \ an Amazon Web Services Region, specify <code>CLOUD</code>. If the\
              \ source resources are located on an Outpost in your account, specify\
              \ <code>OUTPOST</code>.</p> <p>If you specify <code>OUTPOST</code>,\
              \ Amazon Data Lifecycle Manager backs up all resources of the specified\
              \ type with matching target tags across all of the Outposts in your\
              \ account.</p>"
        TargetTags:
          allOf:
          - $ref: '#/components/schemas/TargetTagList'
          - description: " <b>[Snapshot and AMI policies only]</b> The single tag\
              \ that identifies targeted resources for this policy."
        Schedules:
          allOf:
          - $ref: '#/components/schemas/ScheduleList'
          - description: " <b>[Snapshot and AMI policies only]</b> The schedules of\
              \ policy-defined actions for snapshot and AMI lifecycle policies. A\
              \ policy can have up to four schedules—one mandatory schedule and up\
              \ to three optional schedules."
        Parameters:
          $ref: '#/components/schemas/CreateLifecyclePolicy_request_PolicyDetails_Parameters'
        EventSource:
          $ref: '#/components/schemas/CreateLifecyclePolicy_request_PolicyDetails_EventSource'
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          - description: " <b>[Event-based policies only]</b> The actions to be performed\
              \ when the event-based policy is activated. You can specify only one\
              \ action per policy."
      type: object
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 200
      minProperties: 1
      type: object
    CreateLifecyclePolicyRequest:
      example:
        ExecutionRoleArn: ""
        Description: ""
        State: ""
        PolicyDetails:
          PolicyType: ""
          ResourceTypes: ""
          Schedules: ""
          EventSource:
            Type: ""
            Parameters:
              EventType: ""
              SnapshotOwner: ""
              DescriptionRegex: ""
          Parameters:
            ExcludeBootVolume: ""
            ExcludeDataVolumeTags: ""
            NoReboot: ""
          Actions: ""
          TargetTags: ""
          ResourceLocations: ""
        Tags: ""
      properties:
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM role used to run
              the operations specified by the lifecycle policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: "A description of the lifecycle policy. The characters ^[0-9A-Za-z\
              \ _-]+$ are supported."
        State:
          allOf:
          - $ref: '#/components/schemas/SettablePolicyStateValues'
          - description: The desired activation state of the lifecycle policy after
              creation.
        PolicyDetails:
          $ref: '#/components/schemas/CreateLifecyclePolicyRequest_PolicyDetails'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to apply to the lifecycle policy during creation.
      required:
      - Description
      - ExecutionRoleArn
      - PolicyDetails
      - State
      title: CreateLifecyclePolicyRequest
      type: object
    LocationValues:
      enum:
      - CLOUD
      - OUTPOST_LOCAL
      type: string
    Interval:
      minimum: 1
      type: integer
    IntervalUnitValues:
      enum:
      - HOURS
      type: string
    TimesList:
      items:
        $ref: '#/components/schemas/Time'
      maxItems: 1
      type: array
    CronExpression:
      maxLength: 106
      minLength: 17
      pattern: "cron\\([^\\n]{11,100}\\)"
      type: string
    CreateRule:
      description: "<p> <b>[Snapshot and AMI policies only]</b> Specifies when the\
        \ policy should create snapshots or AMIs.</p> <note> <ul> <li> <p>You must\
        \ specify either <b>CronExpression</b>, or <b>Interval</b>, <b>IntervalUnit</b>,\
        \ and <b>Times</b>.</p> </li> <li> <p>If you need to specify an <a>ArchiveRule</a>\
        \ for the schedule, then you must specify a creation frequency of at least\
        \ 28 days.</p> </li> </ul> </note>"
      properties:
        Location:
          allOf:
          - $ref: '#/components/schemas/LocationValues'
          - description: "<p> <b>[Snapshot policies only]</b> Specifies the destination\
              \ for snapshots created by the policy. To create snapshots in the same\
              \ Region as the source resource, specify <code>CLOUD</code>. To create\
              \ snapshots on the same Outpost as the source resource, specify <code>OUTPOST_LOCAL</code>.\
              \ If you omit this parameter, <code>CLOUD</code> is used by default.</p>\
              \ <p>If the policy targets resources in an Amazon Web Services Region,\
              \ then you must create snapshots in the same Region as the source resource.\
              \ If the policy targets resources on an Outpost, then you can create\
              \ snapshots on the same Outpost as the source resource, or in the Region\
              \ of that Outpost.</p>"
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          - description: "The interval between snapshots. The supported values are\
              \ 1, 2, 3, 4, 6, 8, 12, and 24."
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnitValues'
          - description: The interval unit.
        Times:
          allOf:
          - $ref: '#/components/schemas/TimesList'
          - description: "<p>The time, in UTC, to start the operation. The supported\
              \ format is hh:mm.</p> <p>The operation occurs within a one-hour window\
              \ following the specified time. If you do not specify a time, Amazon\
              \ Data Lifecycle Manager selects a time within the next 24 hours.</p>"
        CronExpression:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          - description: "The schedule, as a Cron expression. The schedule interval\
              \ must be between 1 hour and 1 year. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions\"\
              >Cron expressions</a> in the <i>Amazon CloudWatch User Guide</i>."
      type: object
    Target:
      maxLength: 2048
      minLength: 0
      pattern: "^[\\w:\\-\\/\\*]+$"
      type: string
    EncryptionConfiguration:
      description: " <b>[Event-based policies only]</b> Specifies the encryption settings\
        \ for cross-Region snapshot copies created by event-based policies."
      properties:
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          - description: "To encrypt a copy of an unencrypted snapshot when encryption\
              \ by default is not enabled, enable encryption using this parameter.\
              \ Copies of encrypted snapshots are encrypted, even if this parameter\
              \ is false or when encryption by default is not enabled."
        CmkArn:
          allOf:
          - $ref: '#/components/schemas/CmkArn'
          - description: "The Amazon Resource Name (ARN) of the KMS key to use for\
              \ EBS encryption. If this parameter is not specified, the default KMS\
              \ key for the account is used."
      required:
      - Encrypted
      type: object
    CrossRegionCopyRetainRule:
      description: "Specifies a retention rule for cross-Region snapshot copies created\
        \ by snapshot or event-based policies, or cross-Region AMI copies created\
        \ by AMI policies. After the retention period expires, the cross-Region copy\
        \ is deleted."
      properties:
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          - description: "The amount of time to retain a cross-Region snapshot or\
              \ AMI copy. The maximum is 100 years. This is equivalent to 1200 months,\
              \ 5200 weeks, or 36500 days."
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          - description: "The unit of time for time-based retention. For example,\
              \ to retain a cross-Region copy for 3 months, specify <code>Interval=3</code>\
              \ and <code>IntervalUnit=MONTHS</code>."
      type: object
    CrossRegionCopyAction:
      description: "<p> <b>[Event-based policies only]</b> Specifies a cross-Region\
        \ copy action for event-based policies.</p> <note> <p>To specify a cross-Region\
        \ copy rule for snapshot and AMI policies, use <a>CrossRegionCopyRule</a>.</p>\
        \ </note>"
      properties:
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          - description: The target Region.
        EncryptionConfiguration:
          $ref: '#/components/schemas/CrossRegionCopyAction_EncryptionConfiguration'
        RetainRule:
          $ref: '#/components/schemas/CrossRegionCopyRetainRule'
      required:
      - EncryptionConfiguration
      - Target
      type: object
    RetentionIntervalUnitValues:
      enum:
      - DAYS
      - WEEKS
      - MONTHS
      - YEARS
      type: string
    CrossRegionCopyDeprecateRule:
      description: " <b>[AMI policies only]</b> Specifies an AMI deprecation rule\
        \ for cross-Region AMI copies created by an AMI policy."
      properties:
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          - description: "The period after which to deprecate the cross-Region AMI\
              \ copies. The period must be less than or equal to the cross-Region\
              \ AMI copy retention period, and it can't be greater than 10 years.\
              \ This is equivalent to 120 months, 520 weeks, or 3650 days."
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          - description: "The unit of time in which to measure the <b>Interval</b>.\
              \ For example, to deprecate a cross-Region AMI copy after 3 months,\
              \ specify <code>Interval=3</code> and <code>IntervalUnit=MONTHS</code>."
      type: object
    TargetRegion:
      maxLength: 16
      minLength: 0
      pattern: "([a-z]+-){2,3}\\d"
      type: string
    Encrypted:
      type: boolean
    CrossRegionCopyRule:
      description: "<p> <b>[Snapshot and AMI policies only]</b> Specifies a cross-Region\
        \ copy rule for snapshot and AMI policies.</p> <note> <p>To specify a cross-Region\
        \ copy action for event-based polices, use <a>CrossRegionCopyAction</a>.</p>\
        \ </note>"
      properties:
        TargetRegion:
          allOf:
          - $ref: '#/components/schemas/TargetRegion'
          - description: "<note> <p>Avoid using this parameter when creating new policies.\
              \ Instead, use <b>Target</b> to specify a target Region or a target\
              \ Outpost for snapshot copies.</p> <p>For policies created before the\
              \ <b>Target</b> parameter was introduced, this parameter indicates the\
              \ target Region for snapshot copies.</p> </note>"
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          - description: <p>The target Region or the Amazon Resource Name (ARN) of
              the target Outpost for the snapshot copies.</p> <p>Use this parameter
              instead of <b>TargetRegion</b>. Do not specify both.</p>
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          - description: "To encrypt a copy of an unencrypted snapshot if encryption\
              \ by default is not enabled, enable encryption using this parameter.\
              \ Copies of encrypted snapshots are encrypted, even if this parameter\
              \ is false or if encryption by default is not enabled."
        CmkArn:
          allOf:
          - $ref: '#/components/schemas/CmkArn'
          - description: "The Amazon Resource Name (ARN) of the KMS key to use for\
              \ EBS encryption. If this parameter is not specified, the default KMS\
              \ key for the account is used."
        CopyTags:
          allOf:
          - $ref: '#/components/schemas/CopyTagsNullable'
          - description: Indicates whether to copy all user-defined tags from the
              source snapshot or AMI to the cross-Region copy.
        RetainRule:
          $ref: '#/components/schemas/CrossRegionCopyRule_RetainRule'
        DeprecateRule:
          $ref: '#/components/schemas/CrossRegionCopyRule_DeprecateRule'
      required:
      - Encrypted
      type: object
    CrossRegionCopyRules:
      items:
        $ref: '#/components/schemas/CrossRegionCopyRule'
      maxItems: 3
      minItems: 0
      type: array
    DeleteLifecyclePolicyRequest:
      properties: {}
      title: DeleteLifecyclePolicyRequest
      type: object
    DeprecateRule:
      description: "<p> <b>[AMI policies only]</b> Specifies an AMI deprecation rule\
        \ for AMIs created by an AMI lifecycle policy.</p> <p>For age-based schedules,\
        \ you must specify <b>Interval</b> and <b>IntervalUnit</b>. For count-based\
        \ schedules, you must specify <b>Count</b>.</p>"
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: "If the schedule has a count-based retention rule, this parameter\
              \ specifies the number of oldest AMIs to deprecate. The count must be\
              \ less than or equal to the schedule's retention count, and it can't\
              \ be greater than 1000."
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          - description: "If the schedule has an age-based retention rule, this parameter\
              \ specifies the period after which to deprecate AMIs created by the\
              \ schedule. The period must be less than or equal to the schedule's\
              \ retention period, and it can't be greater than 10 years. This is equivalent\
              \ to 120 months, 520 weeks, or 3650 days."
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          - description: The unit of time in which to measure the <b>Interval</b>.
      type: object
    DescriptionRegex:
      maxLength: 1000
      minLength: 0
      pattern: "[\\p{all}]*"
      type: string
    EventTypeValues:
      enum:
      - shareSnapshot
      type: string
    SnapshotOwnerList:
      items:
        $ref: '#/components/schemas/AwsAccountId'
      maxItems: 50
      minItems: 0
      type: array
    EventParameters:
      description: " <b>[Event-based policies only]</b> Specifies an event that activates\
        \ an event-based policy."
      properties:
        EventType:
          allOf:
          - $ref: '#/components/schemas/EventTypeValues'
          - description: "The type of event. Currently, only snapshot sharing events\
              \ are supported."
        SnapshotOwner:
          allOf:
          - $ref: '#/components/schemas/SnapshotOwnerList'
          - description: The IDs of the Amazon Web Services accounts that can trigger
              policy by sharing snapshots with your account. The policy only runs
              if one of the specified Amazon Web Services accounts shares a snapshot
              with your account.
        DescriptionRegex:
          allOf:
          - $ref: '#/components/schemas/DescriptionRegex'
          - description: "<p>The snapshot description that can trigger the policy.\
              \ The description pattern is specified using a regular expression. The\
              \ policy runs only if a snapshot with a description that matches the\
              \ specified pattern is shared with your account.</p> <p>For example,\
              \ specifying <code>^.*Created for policy: policy-1234567890abcdef0.*$</code>\
              \ configures the policy to run only if snapshots created by policy <code>policy-1234567890abcdef0</code>\
              \ are shared with your account.</p>"
      required:
      - DescriptionRegex
      - EventType
      - SnapshotOwner
      type: object
    EventSourceValues:
      enum:
      - MANAGED_CWE
      type: string
    ExcludeBootVolume:
      type: boolean
    Tag:
      description: Specifies a tag for a resource.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The tag key.
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The tag value.
      required:
      - Key
      - Value
      type: object
    ExcludeDataVolumeTagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 0
      type: array
    FastRestoreRule:
      description: " <b>[Snapshot policies only]</b> Specifies a rule for enabling\
        \ fast snapshot restore for snapshots created by snapshot policies. You can\
        \ enable fast snapshot restore based on either a count or a time interval."
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: The number of snapshots to be enabled with fast snapshot
              restore.
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          - description: "The amount of time to enable fast snapshot restore. The\
              \ maximum is 100 years. This is equivalent to 1200 months, 5200 weeks,\
              \ or 36500 days."
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          - description: The unit of time for enabling fast snapshot restore.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneList'
          - description: The Availability Zones in which to enable fast snapshot restore.
      required:
      - AvailabilityZones
      type: object
    PolicyIdList:
      items:
        $ref: '#/components/schemas/PolicyId'
      type: array
    GettablePolicyStateValues:
      enum:
      - ENABLED
      - DISABLED
      - ERROR
      type: string
    TargetTagsFilterList:
      items:
        $ref: '#/components/schemas/TagFilter'
      maxItems: 50
      minItems: 1
      type: array
    TagsToAddFilterList:
      items:
        $ref: '#/components/schemas/TagFilter'
      maxItems: 50
      minItems: 0
      type: array
    GetLifecyclePoliciesRequest:
      properties: {}
      title: GetLifecyclePoliciesRequest
      type: object
    LifecyclePolicySummaryList:
      items:
        $ref: '#/components/schemas/LifecyclePolicySummary'
      type: array
    GetLifecyclePolicyRequest:
      properties: {}
      title: GetLifecyclePolicyRequest
      type: object
    LifecyclePolicy:
      description: " <b>[All policy types]</b> Detailed information about a snapshot,\
        \ AMI, or event-based lifecycle policy."
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          - description: The identifier of the lifecycle policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: The description of the lifecycle policy.
        State:
          allOf:
          - $ref: '#/components/schemas/GettablePolicyStateValues'
          - description: The activation state of the lifecycle policy.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The description of the status.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM role used to run
              the operations specified by the lifecycle policy.
        DateCreated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The local date and time when the lifecycle policy was created.
        DateModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The local date and time when the lifecycle policy was last
              modified.
        PolicyDetails:
          $ref: '#/components/schemas/LifecyclePolicy_PolicyDetails'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags.
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          - description: The Amazon Resource Name (ARN) of the policy.
      type: object
    StatusMessage:
      maxLength: 500
      minLength: 0
      pattern: "[\\p{all}]*"
      type: string
    Timestamp:
      format: date-time
      type: string
    PolicyArn:
      maxLength: 2048
      minLength: 0
      pattern: "^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\\d+:policy/[0-9A-Za-z_-]{1,128}$"
      type: string
    LifecyclePolicySummary:
      description: Summary information about a lifecycle policy.
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          - description: The identifier of the lifecycle policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: The description of the lifecycle policy.
        State:
          allOf:
          - $ref: '#/components/schemas/GettablePolicyStateValues'
          - description: The activation state of the lifecycle policy.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags.
        PolicyType:
          allOf:
          - $ref: '#/components/schemas/PolicyTypeValues'
          - description: The type of policy. <code>EBS_SNAPSHOT_MANAGEMENT</code>
              indicates that the policy manages the lifecycle of Amazon EBS snapshots.
              <code>IMAGE_MANAGEMENT</code> indicates that the policy manages the
              lifecycle of EBS-backed AMIs. <code>EVENT_BASED_POLICY</code> indicates
              that the policy automates cross-account snapshot copies for snapshots
              that are shared with your account.
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    NoReboot:
      type: boolean
    ResourceLocationValues:
      enum:
      - CLOUD
      - OUTPOST
      type: string
    StandardTierRetainRuleCount:
      maximum: 1000
      minimum: 0
      type: integer
    StandardTierRetainRuleInterval:
      minimum: 0
      type: integer
    RetainRule:
      description: "<p> <b>[Snapshot and AMI policies only]</b> Specifies a retention\
        \ rule for snapshots created by snapshot policies, or for AMIs created by\
        \ AMI policies.</p> <note> <p>For snapshot policies that have an <a>ArchiveRule</a>,\
        \ this retention rule applies to standard tier retention. When the retention\
        \ threshold is met, snapshots are moved from the standard to the archive tier.</p>\
        \ <p>For snapshot policies that do not have an <b>ArchiveRule</b>, snapshots\
        \ are permanently deleted when this retention threshold is met.</p> </note>\
        \ <p>You can retain snapshots based on either a count or a time interval.</p>\
        \ <ul> <li> <p> <b>Count-based retention</b> </p> <p>You must specify <b>Count</b>.\
        \ If you specify an <a>ArchiveRule</a> for the schedule, then you can specify\
        \ a retention count of <code>0</code> to archive snapshots immediately after\
        \ creation. If you specify a <a>FastRestoreRule</a>, <a>ShareRule</a>, or\
        \ a <a>CrossRegionCopyRule</a>, then you must specify a retention count of\
        \ <code>1</code> or more.</p> </li> <li> <p> <b>Age-based retention</b> </p>\
        \ <p>You must specify <b>Interval</b> and <b>IntervalUnit</b>. If you specify\
        \ an <a>ArchiveRule</a> for the schedule, then you can specify a retention\
        \ interval of <code>0</code> days to archive snapshots immediately after creation.\
        \ If you specify a <a>FastRestoreRule</a>, <a>ShareRule</a>, or a <a>CrossRegionCopyRule</a>,\
        \ then you must specify a retention interval of <code>1</code> day or more.</p>\
        \ </li> </ul>"
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/StandardTierRetainRuleCount'
          - description: "The number of snapshots to retain for each volume, up to\
              \ a maximum of 1000. For example if you want to retain a maximum of\
              \ three snapshots, specify <code>3</code>. When the fourth snapshot\
              \ is created, the oldest retained snapshot is deleted, or it is moved\
              \ to the archive tier if you have specified an <a>ArchiveRule</a>."
        Interval:
          allOf:
          - $ref: '#/components/schemas/StandardTierRetainRuleInterval'
          - description: "The amount of time to retain each snapshot. The maximum\
              \ is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500\
              \ days."
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          - description: "The unit of time for time-based retention. For example,\
              \ to retain snapshots for 3 months, specify <code>Interval=3</code>\
              \ and <code>IntervalUnit=MONTHS</code>. Once the snapshot has been retained\
              \ for 3 months, it is deleted, or it is moved to the archive tier if\
              \ you have specified an <a>ArchiveRule</a>."
      type: object
    ScheduleName:
      maxLength: 120
      minLength: 0
      pattern: "[0-9A-Za-z _-]+"
      type: string
    TagsToAddList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 45
      minItems: 0
      type: array
    VariableTagsList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 45
      minItems: 0
      type: array
    ShareRules:
      items:
        $ref: '#/components/schemas/ShareRule'
      maxItems: 1
      minItems: 0
      type: array
    Schedule:
      description: " <b>[Snapshot and AMI policies only]</b> Specifies a schedule\
        \ for a snapshot or AMI lifecycle policy."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleName'
          - description: The name of the schedule.
        CopyTags:
          allOf:
          - $ref: '#/components/schemas/CopyTags'
          - description: Copy all user-defined tags on a source volume to snapshots
              of the volume created by this policy.
        TagsToAdd:
          allOf:
          - $ref: '#/components/schemas/TagsToAddList'
          - description: The tags to apply to policy-created resources. These user-defined
              tags are in addition to the Amazon Web Services-added lifecycle tags.
        VariableTags:
          allOf:
          - $ref: '#/components/schemas/VariableTagsList'
          - description: " <b>[AMI policies and snapshot policies that target instances\
              \ only]</b> A collection of key/value pairs with values determined dynamically\
              \ when the policy is executed. Keys may be any valid Amazon EC2 tag\
              \ key. Values must be in one of the two following formats: <code>$(instance-id)</code>\
              \ or <code>$(timestamp)</code>. Variable tags are only valid for EBS\
              \ Snapshot Management – Instance policies."
        CreateRule:
          $ref: '#/components/schemas/Schedule_CreateRule'
        RetainRule:
          $ref: '#/components/schemas/Schedule_RetainRule'
        FastRestoreRule:
          $ref: '#/components/schemas/Schedule_FastRestoreRule'
        CrossRegionCopyRules:
          allOf:
          - $ref: '#/components/schemas/CrossRegionCopyRules'
          - description: "<p>Specifies a rule for copying snapshots or AMIs across\
              \ regions.</p> <note> <p>You can't specify cross-Region copy rules for\
              \ policies that create snapshots on an Outpost. If the policy creates\
              \ snapshots in a Region, then snapshots can be copied to up to three\
              \ Regions or Outposts.</p> </note>"
        ShareRules:
          allOf:
          - $ref: '#/components/schemas/ShareRules'
          - description: " <b>[Snapshot policies only]</b> The rule for sharing snapshots\
              \ with other Amazon Web Services accounts."
        DeprecateRule:
          $ref: '#/components/schemas/Schedule_DeprecateRule'
        ArchiveRule:
          $ref: '#/components/schemas/Schedule_ArchiveRule'
      type: object
    ShareTargetAccountList:
      items:
        $ref: '#/components/schemas/AwsAccountId'
      minItems: 1
      type: array
    ShareRule:
      description: " <b>[Snapshot policies only]</b> Specifies a rule for sharing\
        \ snapshots across Amazon Web Services accounts."
      properties:
        TargetAccounts:
          allOf:
          - $ref: '#/components/schemas/ShareTargetAccountList'
          - description: The IDs of the Amazon Web Services accounts with which to
              share the snapshots.
        UnshareInterval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          - description: The period after which snapshots that are shared with other
              Amazon Web Services accounts are automatically unshared.
        UnshareIntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          - description: The unit of time for the automatic unsharing interval.
      required:
      - TargetAccounts
      type: object
    String:
      maxLength: 500
      minLength: 0
      pattern: "[\\p{all}]*"
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: One or more tags.
      required:
      - Tags
      title: TagResourceRequest
      type: object
    Time:
      maxLength: 5
      minLength: 5
      pattern: "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"
      type: string
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateLifecyclePolicyRequest:
      example:
        ExecutionRoleArn: ""
        Description: ""
        State: ""
        PolicyDetails:
          PolicyType: ""
          ResourceTypes: ""
          Schedules: ""
          EventSource:
            Type: ""
            Parameters:
              EventType: ""
              SnapshotOwner: ""
              DescriptionRegex: ""
          Parameters:
            ExcludeBootVolume: ""
            ExcludeDataVolumeTags: ""
            NoReboot: ""
          Actions: ""
          TargetTags: ""
          ResourceLocations: ""
      properties:
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM role used to run
              the operations specified by the lifecycle policy.
        State:
          allOf:
          - $ref: '#/components/schemas/SettablePolicyStateValues'
          - description: The desired activation state of the lifecycle policy after
              creation.
        Description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: A description of the lifecycle policy.
        PolicyDetails:
          $ref: '#/components/schemas/UpdateLifecyclePolicyRequest_PolicyDetails'
      title: UpdateLifecyclePolicyRequest
      type: object
    CreateLifecyclePolicy_request_PolicyDetails_Parameters:
      allOf:
      - $ref: '#/components/schemas/Parameters'
      - description: "<p> <b>[Snapshot and AMI policies only]</b> A set of optional\
          \ parameters for snapshot and AMI lifecycle policies. </p> <note> <p>If\
          \ you are modifying a policy that was created or previously modified using\
          \ the Amazon Data Lifecycle Manager console, then you must include this\
          \ parameter and specify either the default values or the new values that\
          \ you require. You can't omit this parameter or set its values to null.</p>\
          \ </note>"
      example:
        ExcludeBootVolume: ""
        ExcludeDataVolumeTags: ""
        NoReboot: ""
    CreateLifecyclePolicy_request_PolicyDetails_EventSource:
      allOf:
      - $ref: '#/components/schemas/EventSource'
      - description: " <b>[Event-based policies only]</b> The event that activates\
          \ the event-based policy."
      example:
        Type: ""
        Parameters:
          EventType: ""
          SnapshotOwner: ""
          DescriptionRegex: ""
    CreateLifecyclePolicy_request_PolicyDetails:
      description: " <b>[All policy types]</b> Specifies the configuration of a lifecycle\
        \ policy."
      properties:
        PolicyType:
          allOf:
          - $ref: '#/components/schemas/PolicyTypeValues'
          - description: "<p> <b>[All policy types]</b> The valid target resource\
              \ types and actions a policy can manage. Specify <code>EBS_SNAPSHOT_MANAGEMENT</code>\
              \ to create a lifecycle policy that manages the lifecycle of Amazon\
              \ EBS snapshots. Specify <code>IMAGE_MANAGEMENT</code> to create a lifecycle\
              \ policy that manages the lifecycle of EBS-backed AMIs. Specify <code>EVENT_BASED_POLICY\
              \ </code> to create an event-based policy that performs specific actions\
              \ when a defined event occurs in your Amazon Web Services account.</p>\
              \ <p>The default is <code>EBS_SNAPSHOT_MANAGEMENT</code>.</p>"
        ResourceTypes:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeValuesList'
          - description: " <b>[Snapshot policies only]</b> The target resource type\
              \ for snapshot and AMI lifecycle policies. Use <code>VOLUME </code>to\
              \ create snapshots of individual volumes or use <code>INSTANCE</code>\
              \ to create multi-volume snapshots from the volumes for an instance."
        ResourceLocations:
          allOf:
          - $ref: '#/components/schemas/ResourceLocationList'
          - description: "<p> <b>[Snapshot and AMI policies only]</b> The location\
              \ of the resources to backup. If the source resources are located in\
              \ an Amazon Web Services Region, specify <code>CLOUD</code>. If the\
              \ source resources are located on an Outpost in your account, specify\
              \ <code>OUTPOST</code>.</p> <p>If you specify <code>OUTPOST</code>,\
              \ Amazon Data Lifecycle Manager backs up all resources of the specified\
              \ type with matching target tags across all of the Outposts in your\
              \ account.</p>"
        TargetTags:
          allOf:
          - $ref: '#/components/schemas/TargetTagList'
          - description: " <b>[Snapshot and AMI policies only]</b> The single tag\
              \ that identifies targeted resources for this policy."
        Schedules:
          allOf:
          - $ref: '#/components/schemas/ScheduleList'
          - description: " <b>[Snapshot and AMI policies only]</b> The schedules of\
              \ policy-defined actions for snapshot and AMI lifecycle policies. A\
              \ policy can have up to four schedules—one mandatory schedule and up\
              \ to three optional schedules."
        Parameters:
          $ref: '#/components/schemas/CreateLifecyclePolicy_request_PolicyDetails_Parameters'
        EventSource:
          $ref: '#/components/schemas/CreateLifecyclePolicy_request_PolicyDetails_EventSource'
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          - description: " <b>[Event-based policies only]</b> The actions to be performed\
              \ when the event-based policy is activated. You can specify only one\
              \ action per policy."
      type: object
    CreateLifecyclePolicy_request:
      properties:
        ExecutionRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role used to run
            the operations specified by the lifecycle policy.
          maxLength: 2048
          minLength: 0
          pattern: "arn:aws(-[a-z]{1,3}){0,2}:iam::\\d+:role/.*"
          type: string
        Description:
          description: "A description of the lifecycle policy. The characters ^[0-9A-Za-z\
            \ _-]+$ are supported."
          maxLength: 500
          minLength: 0
          pattern: "[0-9A-Za-z _-]+"
          type: string
        State:
          description: The desired activation state of the lifecycle policy after
            creation.
          enum:
          - ENABLED
          - DISABLED
          type: string
        PolicyDetails:
          $ref: '#/components/schemas/CreateLifecyclePolicy_request_PolicyDetails'
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to apply to the lifecycle policy during creation.
          maxProperties: 200
          minProperties: 1
          type: object
      required:
      - Description
      - ExecutionRoleArn
      - PolicyDetails
      - State
      type: object
    TagResource_request:
      properties:
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: One or more tags.
          maxProperties: 200
          minProperties: 1
          type: object
      required:
      - Tags
      type: object
    UpdateLifecyclePolicy_request:
      properties:
        ExecutionRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role used to run
            the operations specified by the lifecycle policy.
          maxLength: 2048
          minLength: 0
          pattern: "arn:aws(-[a-z]{1,3}){0,2}:iam::\\d+:role/.*"
          type: string
        State:
          description: The desired activation state of the lifecycle policy after
            creation.
          enum:
          - ENABLED
          - DISABLED
          type: string
        Description:
          description: A description of the lifecycle policy.
          maxLength: 500
          minLength: 0
          pattern: "[0-9A-Za-z _-]+"
          type: string
        PolicyDetails:
          $ref: '#/components/schemas/CreateLifecyclePolicy_request_PolicyDetails'
      type: object
    EventSource_Parameters:
      allOf:
      - $ref: '#/components/schemas/EventParameters'
      - description: Information about the event.
      example:
        EventType: ""
        SnapshotOwner: ""
        DescriptionRegex: ""
    GetLifecyclePolicyResponse_Policy:
      allOf:
      - $ref: '#/components/schemas/LifecyclePolicy'
      - description: Detailed information about the lifecycle policy.
      example:
        ExecutionRoleArn: ""
        Description: ""
        PolicyArn: ""
        State: ""
        DateCreated: ""
        PolicyDetails:
          PolicyType: ""
          ResourceTypes: ""
          Schedules: ""
          EventSource:
            Type: ""
            Parameters:
              EventType: ""
              SnapshotOwner: ""
              DescriptionRegex: ""
          Parameters:
            ExcludeBootVolume: ""
            ExcludeDataVolumeTags: ""
            NoReboot: ""
          Actions: ""
          TargetTags: ""
          ResourceLocations: ""
        PolicyId: ""
        DateModified: ""
        Tags: ""
        StatusMessage: ""
    ArchiveRetainRule_RetentionArchiveTier:
      allOf:
      - $ref: '#/components/schemas/RetentionArchiveTier'
      - description: "Information about retention period in the Amazon EBS Snapshots\
          \ Archive. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/snapshot-archive.html\"\
          >Archive Amazon EBS snapshots</a>."
    ArchiveRule_RetainRule:
      allOf:
      - $ref: '#/components/schemas/ArchiveRetainRule'
      - description: Information about the retention period for the snapshot archiving
          rule.
    CreateLifecyclePolicyRequest_PolicyDetails:
      allOf:
      - $ref: '#/components/schemas/PolicyDetails'
      - description: The configuration details of the lifecycle policy.
      example:
        PolicyType: ""
        ResourceTypes: ""
        Schedules: ""
        EventSource:
          Type: ""
          Parameters:
            EventType: ""
            SnapshotOwner: ""
            DescriptionRegex: ""
        Parameters:
          ExcludeBootVolume: ""
          ExcludeDataVolumeTags: ""
          NoReboot: ""
        Actions: ""
        TargetTags: ""
        ResourceLocations: ""
    CrossRegionCopyAction_EncryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/EncryptionConfiguration'
      - description: The encryption settings for the copied snapshot.
    CrossRegionCopyRule_RetainRule:
      allOf:
      - $ref: '#/components/schemas/CrossRegionCopyRetainRule'
      - description: The retention rule that indicates how long the cross-Region snapshot
          or AMI copies are to be retained in the destination Region.
    CrossRegionCopyRule_DeprecateRule:
      allOf:
      - $ref: '#/components/schemas/CrossRegionCopyDeprecateRule'
      - description: " <b>[AMI policies only]</b> The AMI deprecation rule for cross-Region\
          \ AMI copies created by the rule."
    LifecyclePolicy_PolicyDetails:
      allOf:
      - $ref: '#/components/schemas/PolicyDetails'
      - description: The configuration of the lifecycle policy
      example:
        PolicyType: ""
        ResourceTypes: ""
        Schedules: ""
        EventSource:
          Type: ""
          Parameters:
            EventType: ""
            SnapshotOwner: ""
            DescriptionRegex: ""
        Parameters:
          ExcludeBootVolume: ""
          ExcludeDataVolumeTags: ""
          NoReboot: ""
        Actions: ""
        TargetTags: ""
        ResourceLocations: ""
    Schedule_CreateRule:
      allOf:
      - $ref: '#/components/schemas/CreateRule'
      - description: The creation rule.
    Schedule_RetainRule:
      allOf:
      - $ref: '#/components/schemas/RetainRule'
      - description: The retention rule for snapshots or AMIs created by the policy.
    Schedule_FastRestoreRule:
      allOf:
      - $ref: '#/components/schemas/FastRestoreRule'
      - description: " <b>[Snapshot policies only]</b> The rule for enabling fast\
          \ snapshot restore."
    Schedule_DeprecateRule:
      allOf:
      - $ref: '#/components/schemas/DeprecateRule'
      - description: " <b>[AMI policies only]</b> The AMI deprecation rule for the\
          \ schedule."
    Schedule_ArchiveRule:
      allOf:
      - $ref: '#/components/schemas/ArchiveRule'
      - description: "<p> <b>[Snapshot policies that target volumes only]</b> The\
          \ snapshot archiving rule for the schedule. When you specify an archiving\
          \ rule, snapshots are automatically moved from the standard tier to the\
          \ archive tier once the schedule's retention threshold is met. Snapshots\
          \ are then retained in the archive tier for the archive retention period\
          \ that you specify. </p> <p>For more information about using snapshot archiving,\
          \ see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-ami-policy.html#dlm-archive\"\
          >Considerations for snapshot lifecycle policies</a>.</p>"
    UpdateLifecyclePolicyRequest_PolicyDetails:
      allOf:
      - $ref: '#/components/schemas/PolicyDetails'
      - description: The configuration of the lifecycle policy. You cannot update
          the policy type or the resource type.
      example:
        PolicyType: ""
        ResourceTypes: ""
        Schedules: ""
        EventSource:
          Type: ""
          Parameters:
            EventType: ""
            SnapshotOwner: ""
            DescriptionRegex: ""
        Parameters:
          ExcludeBootVolume: ""
          ExcludeDataVolumeTags: ""
          NoReboot: ""
        Actions: ""
        TargetTags: ""
        ResourceLocations: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

