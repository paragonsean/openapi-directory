# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.interval_unit_values import IntervalUnitValues
from openapi_server.models.location_values import LocationValues
from openapi_server import util


class CreateRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location: LocationValues=None, interval: int=None, interval_unit: IntervalUnitValues=None, times: List=None, cron_expression: str=None):
        """CreateRule - a model defined in OpenAPI

        :param location: The location of this CreateRule.
        :param interval: The interval of this CreateRule.
        :param interval_unit: The interval_unit of this CreateRule.
        :param times: The times of this CreateRule.
        :param cron_expression: The cron_expression of this CreateRule.
        """
        self.openapi_types = {
            'location': LocationValues,
            'interval': int,
            'interval_unit': IntervalUnitValues,
            'times': List,
            'cron_expression': str
        }

        self.attribute_map = {
            'location': 'Location',
            'interval': 'Interval',
            'interval_unit': 'IntervalUnit',
            'times': 'Times',
            'cron_expression': 'CronExpression'
        }

        self._location = location
        self._interval = interval
        self._interval_unit = interval_unit
        self._times = times
        self._cron_expression = cron_expression

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRule of this CreateRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location(self):
        """Gets the location of this CreateRule.


        :return: The location of this CreateRule.
        :rtype: LocationValues
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this CreateRule.


        :param location: The location of this CreateRule.
        :type location: LocationValues
        """

        self._location = location

    @property
    def interval(self):
        """Gets the interval of this CreateRule.


        :return: The interval of this CreateRule.
        :rtype: int
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this CreateRule.


        :param interval: The interval of this CreateRule.
        :type interval: int
        """

        self._interval = interval

    @property
    def interval_unit(self):
        """Gets the interval_unit of this CreateRule.


        :return: The interval_unit of this CreateRule.
        :rtype: IntervalUnitValues
        """
        return self._interval_unit

    @interval_unit.setter
    def interval_unit(self, interval_unit):
        """Sets the interval_unit of this CreateRule.


        :param interval_unit: The interval_unit of this CreateRule.
        :type interval_unit: IntervalUnitValues
        """

        self._interval_unit = interval_unit

    @property
    def times(self):
        """Gets the times of this CreateRule.


        :return: The times of this CreateRule.
        :rtype: List
        """
        return self._times

    @times.setter
    def times(self, times):
        """Sets the times of this CreateRule.


        :param times: The times of this CreateRule.
        :type times: List
        """

        self._times = times

    @property
    def cron_expression(self):
        """Gets the cron_expression of this CreateRule.


        :return: The cron_expression of this CreateRule.
        :rtype: str
        """
        return self._cron_expression

    @cron_expression.setter
    def cron_expression(self, cron_expression):
        """Sets the cron_expression of this CreateRule.


        :param cron_expression: The cron_expression of this CreateRule.
        :type cron_expression: str
        """

        self._cron_expression = cron_expression
