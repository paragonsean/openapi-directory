# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CrossRegionCopyActionEncryptionConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encrypted: bool=None, cmk_arn: str=None):
        """CrossRegionCopyActionEncryptionConfiguration - a model defined in OpenAPI

        :param encrypted: The encrypted of this CrossRegionCopyActionEncryptionConfiguration.
        :param cmk_arn: The cmk_arn of this CrossRegionCopyActionEncryptionConfiguration.
        """
        self.openapi_types = {
            'encrypted': bool,
            'cmk_arn': str
        }

        self.attribute_map = {
            'encrypted': 'Encrypted',
            'cmk_arn': 'CmkArn'
        }

        self._encrypted = encrypted
        self._cmk_arn = cmk_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CrossRegionCopyActionEncryptionConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CrossRegionCopyAction_EncryptionConfiguration of this CrossRegionCopyActionEncryptionConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encrypted(self):
        """Gets the encrypted of this CrossRegionCopyActionEncryptionConfiguration.


        :return: The encrypted of this CrossRegionCopyActionEncryptionConfiguration.
        :rtype: bool
        """
        return self._encrypted

    @encrypted.setter
    def encrypted(self, encrypted):
        """Sets the encrypted of this CrossRegionCopyActionEncryptionConfiguration.


        :param encrypted: The encrypted of this CrossRegionCopyActionEncryptionConfiguration.
        :type encrypted: bool
        """
        if encrypted is None:
            raise ValueError("Invalid value for `encrypted`, must not be `None`")

        self._encrypted = encrypted

    @property
    def cmk_arn(self):
        """Gets the cmk_arn of this CrossRegionCopyActionEncryptionConfiguration.


        :return: The cmk_arn of this CrossRegionCopyActionEncryptionConfiguration.
        :rtype: str
        """
        return self._cmk_arn

    @cmk_arn.setter
    def cmk_arn(self, cmk_arn):
        """Sets the cmk_arn of this CrossRegionCopyActionEncryptionConfiguration.


        :param cmk_arn: The cmk_arn of this CrossRegionCopyActionEncryptionConfiguration.
        :type cmk_arn: str
        """

        self._cmk_arn = cmk_arn
