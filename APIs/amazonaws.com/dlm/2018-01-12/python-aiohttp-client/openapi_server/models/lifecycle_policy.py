# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gettable_policy_state_values import GettablePolicyStateValues
from openapi_server.models.lifecycle_policy_policy_details import LifecyclePolicyPolicyDetails
from openapi_server import util


class LifecyclePolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_id: str=None, description: str=None, state: GettablePolicyStateValues=None, status_message: str=None, execution_role_arn: str=None, date_created: datetime=None, date_modified: datetime=None, policy_details: LifecyclePolicyPolicyDetails=None, tags: Dict=None, policy_arn: str=None):
        """LifecyclePolicy - a model defined in OpenAPI

        :param policy_id: The policy_id of this LifecyclePolicy.
        :param description: The description of this LifecyclePolicy.
        :param state: The state of this LifecyclePolicy.
        :param status_message: The status_message of this LifecyclePolicy.
        :param execution_role_arn: The execution_role_arn of this LifecyclePolicy.
        :param date_created: The date_created of this LifecyclePolicy.
        :param date_modified: The date_modified of this LifecyclePolicy.
        :param policy_details: The policy_details of this LifecyclePolicy.
        :param tags: The tags of this LifecyclePolicy.
        :param policy_arn: The policy_arn of this LifecyclePolicy.
        """
        self.openapi_types = {
            'policy_id': str,
            'description': str,
            'state': GettablePolicyStateValues,
            'status_message': str,
            'execution_role_arn': str,
            'date_created': datetime,
            'date_modified': datetime,
            'policy_details': LifecyclePolicyPolicyDetails,
            'tags': Dict,
            'policy_arn': str
        }

        self.attribute_map = {
            'policy_id': 'PolicyId',
            'description': 'Description',
            'state': 'State',
            'status_message': 'StatusMessage',
            'execution_role_arn': 'ExecutionRoleArn',
            'date_created': 'DateCreated',
            'date_modified': 'DateModified',
            'policy_details': 'PolicyDetails',
            'tags': 'Tags',
            'policy_arn': 'PolicyArn'
        }

        self._policy_id = policy_id
        self._description = description
        self._state = state
        self._status_message = status_message
        self._execution_role_arn = execution_role_arn
        self._date_created = date_created
        self._date_modified = date_modified
        self._policy_details = policy_details
        self._tags = tags
        self._policy_arn = policy_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LifecyclePolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LifecyclePolicy of this LifecyclePolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_id(self):
        """Gets the policy_id of this LifecyclePolicy.


        :return: The policy_id of this LifecyclePolicy.
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this LifecyclePolicy.


        :param policy_id: The policy_id of this LifecyclePolicy.
        :type policy_id: str
        """

        self._policy_id = policy_id

    @property
    def description(self):
        """Gets the description of this LifecyclePolicy.


        :return: The description of this LifecyclePolicy.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this LifecyclePolicy.


        :param description: The description of this LifecyclePolicy.
        :type description: str
        """

        self._description = description

    @property
    def state(self):
        """Gets the state of this LifecyclePolicy.


        :return: The state of this LifecyclePolicy.
        :rtype: GettablePolicyStateValues
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this LifecyclePolicy.


        :param state: The state of this LifecyclePolicy.
        :type state: GettablePolicyStateValues
        """

        self._state = state

    @property
    def status_message(self):
        """Gets the status_message of this LifecyclePolicy.


        :return: The status_message of this LifecyclePolicy.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this LifecyclePolicy.


        :param status_message: The status_message of this LifecyclePolicy.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def execution_role_arn(self):
        """Gets the execution_role_arn of this LifecyclePolicy.


        :return: The execution_role_arn of this LifecyclePolicy.
        :rtype: str
        """
        return self._execution_role_arn

    @execution_role_arn.setter
    def execution_role_arn(self, execution_role_arn):
        """Sets the execution_role_arn of this LifecyclePolicy.


        :param execution_role_arn: The execution_role_arn of this LifecyclePolicy.
        :type execution_role_arn: str
        """

        self._execution_role_arn = execution_role_arn

    @property
    def date_created(self):
        """Gets the date_created of this LifecyclePolicy.


        :return: The date_created of this LifecyclePolicy.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this LifecyclePolicy.


        :param date_created: The date_created of this LifecyclePolicy.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this LifecyclePolicy.


        :return: The date_modified of this LifecyclePolicy.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this LifecyclePolicy.


        :param date_modified: The date_modified of this LifecyclePolicy.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def policy_details(self):
        """Gets the policy_details of this LifecyclePolicy.


        :return: The policy_details of this LifecyclePolicy.
        :rtype: LifecyclePolicyPolicyDetails
        """
        return self._policy_details

    @policy_details.setter
    def policy_details(self, policy_details):
        """Sets the policy_details of this LifecyclePolicy.


        :param policy_details: The policy_details of this LifecyclePolicy.
        :type policy_details: LifecyclePolicyPolicyDetails
        """

        self._policy_details = policy_details

    @property
    def tags(self):
        """Gets the tags of this LifecyclePolicy.


        :return: The tags of this LifecyclePolicy.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this LifecyclePolicy.


        :param tags: The tags of this LifecyclePolicy.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def policy_arn(self):
        """Gets the policy_arn of this LifecyclePolicy.


        :return: The policy_arn of this LifecyclePolicy.
        :rtype: str
        """
        return self._policy_arn

    @policy_arn.setter
    def policy_arn(self, policy_arn):
        """Sets the policy_arn of this LifecyclePolicy.


        :param policy_arn: The policy_arn of this LifecyclePolicy.
        :type policy_arn: str
        """

        self._policy_arn = policy_arn
