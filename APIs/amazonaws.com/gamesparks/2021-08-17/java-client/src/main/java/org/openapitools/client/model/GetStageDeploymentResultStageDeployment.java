/*
 * GameSparks
 * <p/>
 *
 * The version of the OpenAPI document: 2021-08-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DeploymentAction;
import org.openapitools.client.model.DeploymentState;
import org.openapitools.client.model.StageDeploymentDetailsDeploymentResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetStageDeploymentResultStageDeployment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:22.850983-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetStageDeploymentResultStageDeployment {
  public static final String SERIALIZED_NAME_CREATED = "Created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_DEPLOYMENT_ACTION = "DeploymentAction";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_ACTION)
  private DeploymentAction deploymentAction;

  public static final String SERIALIZED_NAME_DEPLOYMENT_ID = "DeploymentId";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_ID)
  private String deploymentId;

  public static final String SERIALIZED_NAME_DEPLOYMENT_RESULT = "DeploymentResult";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_RESULT)
  private StageDeploymentDetailsDeploymentResult deploymentResult;

  public static final String SERIALIZED_NAME_DEPLOYMENT_STATE = "DeploymentState";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_STATE)
  private DeploymentState deploymentState;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "LastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public static final String SERIALIZED_NAME_SNAPSHOT_ID = "SnapshotId";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_ID)
  private String snapshotId;

  public GetStageDeploymentResultStageDeployment() {
  }

  public GetStageDeploymentResultStageDeployment created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  /**
   * Get created
   * @return created
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public GetStageDeploymentResultStageDeployment deploymentAction(DeploymentAction deploymentAction) {
    this.deploymentAction = deploymentAction;
    return this;
  }

  /**
   * Get deploymentAction
   * @return deploymentAction
   */
  @javax.annotation.Nullable
  public DeploymentAction getDeploymentAction() {
    return deploymentAction;
  }

  public void setDeploymentAction(DeploymentAction deploymentAction) {
    this.deploymentAction = deploymentAction;
  }


  public GetStageDeploymentResultStageDeployment deploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
    return this;
  }

  /**
   * Get deploymentId
   * @return deploymentId
   */
  @javax.annotation.Nullable
  public String getDeploymentId() {
    return deploymentId;
  }

  public void setDeploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
  }


  public GetStageDeploymentResultStageDeployment deploymentResult(StageDeploymentDetailsDeploymentResult deploymentResult) {
    this.deploymentResult = deploymentResult;
    return this;
  }

  /**
   * Get deploymentResult
   * @return deploymentResult
   */
  @javax.annotation.Nullable
  public StageDeploymentDetailsDeploymentResult getDeploymentResult() {
    return deploymentResult;
  }

  public void setDeploymentResult(StageDeploymentDetailsDeploymentResult deploymentResult) {
    this.deploymentResult = deploymentResult;
  }


  public GetStageDeploymentResultStageDeployment deploymentState(DeploymentState deploymentState) {
    this.deploymentState = deploymentState;
    return this;
  }

  /**
   * Get deploymentState
   * @return deploymentState
   */
  @javax.annotation.Nullable
  public DeploymentState getDeploymentState() {
    return deploymentState;
  }

  public void setDeploymentState(DeploymentState deploymentState) {
    this.deploymentState = deploymentState;
  }


  public GetStageDeploymentResultStageDeployment lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Get lastUpdated
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public GetStageDeploymentResultStageDeployment snapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
    return this;
  }

  /**
   * Get snapshotId
   * @return snapshotId
   */
  @javax.annotation.Nullable
  public String getSnapshotId() {
    return snapshotId;
  }

  public void setSnapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetStageDeploymentResultStageDeployment getStageDeploymentResultStageDeployment = (GetStageDeploymentResultStageDeployment) o;
    return Objects.equals(this.created, getStageDeploymentResultStageDeployment.created) &&
        Objects.equals(this.deploymentAction, getStageDeploymentResultStageDeployment.deploymentAction) &&
        Objects.equals(this.deploymentId, getStageDeploymentResultStageDeployment.deploymentId) &&
        Objects.equals(this.deploymentResult, getStageDeploymentResultStageDeployment.deploymentResult) &&
        Objects.equals(this.deploymentState, getStageDeploymentResultStageDeployment.deploymentState) &&
        Objects.equals(this.lastUpdated, getStageDeploymentResultStageDeployment.lastUpdated) &&
        Objects.equals(this.snapshotId, getStageDeploymentResultStageDeployment.snapshotId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, deploymentAction, deploymentId, deploymentResult, deploymentState, lastUpdated, snapshotId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetStageDeploymentResultStageDeployment {\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    deploymentAction: ").append(toIndentedString(deploymentAction)).append("\n");
    sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
    sb.append("    deploymentResult: ").append(toIndentedString(deploymentResult)).append("\n");
    sb.append("    deploymentState: ").append(toIndentedString(deploymentState)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    snapshotId: ").append(toIndentedString(snapshotId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Created");
    openapiFields.add("DeploymentAction");
    openapiFields.add("DeploymentId");
    openapiFields.add("DeploymentResult");
    openapiFields.add("DeploymentState");
    openapiFields.add("LastUpdated");
    openapiFields.add("SnapshotId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetStageDeploymentResultStageDeployment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetStageDeploymentResultStageDeployment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetStageDeploymentResultStageDeployment is not found in the empty JSON string", GetStageDeploymentResultStageDeployment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetStageDeploymentResultStageDeployment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetStageDeploymentResultStageDeployment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Created`
      if (jsonObj.get("Created") != null && !jsonObj.get("Created").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("Created"));
      }
      // validate the optional field `DeploymentAction`
      if (jsonObj.get("DeploymentAction") != null && !jsonObj.get("DeploymentAction").isJsonNull()) {
        DeploymentAction.validateJsonElement(jsonObj.get("DeploymentAction"));
      }
      // validate the optional field `DeploymentId`
      if (jsonObj.get("DeploymentId") != null && !jsonObj.get("DeploymentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeploymentId"));
      }
      // validate the optional field `DeploymentResult`
      if (jsonObj.get("DeploymentResult") != null && !jsonObj.get("DeploymentResult").isJsonNull()) {
        StageDeploymentDetailsDeploymentResult.validateJsonElement(jsonObj.get("DeploymentResult"));
      }
      // validate the optional field `DeploymentState`
      if (jsonObj.get("DeploymentState") != null && !jsonObj.get("DeploymentState").isJsonNull()) {
        DeploymentState.validateJsonElement(jsonObj.get("DeploymentState"));
      }
      // validate the optional field `LastUpdated`
      if (jsonObj.get("LastUpdated") != null && !jsonObj.get("LastUpdated").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdated"));
      }
      // validate the optional field `SnapshotId`
      if (jsonObj.get("SnapshotId") != null && !jsonObj.get("SnapshotId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetStageDeploymentResultStageDeployment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetStageDeploymentResultStageDeployment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetStageDeploymentResultStageDeployment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetStageDeploymentResultStageDeployment.class));

       return (TypeAdapter<T>) new TypeAdapter<GetStageDeploymentResultStageDeployment>() {
           @Override
           public void write(JsonWriter out, GetStageDeploymentResultStageDeployment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetStageDeploymentResultStageDeployment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetStageDeploymentResultStageDeployment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetStageDeploymentResultStageDeployment
   * @throws IOException if the JSON string is invalid with respect to GetStageDeploymentResultStageDeployment
   */
  public static GetStageDeploymentResultStageDeployment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetStageDeploymentResultStageDeployment.class);
  }

  /**
   * Convert an instance of GetStageDeploymentResultStageDeployment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

