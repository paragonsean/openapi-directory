openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: <p/>
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: GameSparks
  version: 2021-08-17
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: gamesparks
  x-aws-signingName: gamesparks
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/gamesparks-2021-08-17.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/gamesparks/
servers:
- description: The GameSparks multi-region endpoint
  url: "http://gamesparks.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The GameSparks multi-region endpoint
  url: "https://gamesparks.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The GameSparks endpoint for China (Beijing) and China (Ningxia)
  url: "http://gamesparks.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The GameSparks endpoint for China (Beijing) and China (Ningxia)
  url: "https://gamesparks.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /game:
    get:
      description: Gets a paginated list of games.
      operationId: ListGames
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The maximum number of results to return.</p> <p> Use this
          parameter with NextToken to get results as a set of sequential pages. </p>
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "<p>The token that indicates the start of the next sequential\
          \ page of results.</p> <p> Use the token that is returned with a previous\
          \ call to this operation. To start at the beginning of the result set, do\
          \ not specify a value. </p>"
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: ^\S(.*\S)?$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGamesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    post:
      description: " Creates a new game with an empty configuration. After creating\
        \ your game, you can update the configuration using <code>UpdateGameConfiguration</code>\
        \ or <code>ImportGameConfiguration</code>. "
      operationId: CreateGame
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGame_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGameResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /game/{GameName}/snapshot:
    get:
      description: Gets a paginated list of snapshot summaries from the game.
      operationId: ListSnapshots
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: <p>The maximum number of results to return.</p> <p> Use this
          parameter with NextToken to get results as a set of sequential pages. </p>
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "<p>The token that indicates the start of the next sequential\
          \ page of results.</p> <p> Use the token that is returned with a previous\
          \ call to this operation. To start at the beginning of the result set, do\
          \ not specify a value. </p>"
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: ^\S(.*\S)?$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    post:
      description: Creates a snapshot of the game configuration.
      operationId: CreateSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSnapshot_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSnapshotResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /game/{GameName}/stage:
    get:
      description: Gets a paginated list of stage summaries from the game.
      operationId: ListStages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: <p>The maximum number of results to return.</p> <p> Use this
          parameter with NextToken to get results as a set of sequential pages. </p>
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "<p>The token that indicates the start of the next sequential\
          \ page of results.</p> <p> Use the token that is returned with a previous\
          \ call to this operation. To start at the beginning of the result set, do\
          \ not specify a value. </p>"
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: ^\S(.*\S)?$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStagesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    post:
      description: Creates a new stage for stage-by-stage game development and deployment.
      operationId: CreateStage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStageResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /game/{GameName}:
    delete:
      description: Deletes a game.
      operationId: DeleteGame
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game to delete.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGameResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    get:
      description: Gets details about a game.
      operationId: GetGame
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGameResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    patch:
      description: Updates details of the game.
      operationId: UpdateGame
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGame_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGameResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /game/{GameName}/stage/{StageName}:
    delete:
      description: "Deletes a stage from a game, along with the associated game runtime."
      operationId: DeleteStage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the stage to delete.
        explode: false
        in: path
        name: StageName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStageResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    get:
      description: Gets information about a stage.
      operationId: GetStage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the stage.
        explode: false
        in: path
        name: StageName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStageResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    patch:
      description: Updates the metadata of a stage.
      operationId: UpdateStage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the stage.
        explode: false
        in: path
        name: StageName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStageResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /runtime/game/{GameName}/stage/{StageName}/player/{PlayerId}/disconnect:
    post:
      description: "<p>Disconnects a player from the game runtime.</p> <p> If a player\
        \ has multiple connections, this operation attempts to close all of them.\
        \ </p>"
      operationId: DisconnectPlayer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The unique identifier representing a player.
        explode: false
        in: path
        name: PlayerId
        required: true
        schema:
          maxLength: 44
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the stage.
        explode: false
        in: path
        name: StageName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisconnectPlayerResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /game/{GameName}/snapshot/{SnapshotId}/export:
    get:
      description: Exports a game configuration snapshot.
      operationId: ExportSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The identifier of the snapshot to export.
        explode: false
        in: path
        name: SnapshotId
        required: true
        schema:
          maxLength: 36
          minLength: 33
          pattern: "^Snapshot_\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3,6}Z$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportSnapshotResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /extension/{Namespace}/{Name}:
    get:
      description: Gets details about a specified extension.
      operationId: GetExtension
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the extension.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The namespace (qualifier) of the extension.
        explode: false
        in: path
        name: Namespace
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExtensionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /extension/{Namespace}/{Name}/version/{ExtensionVersion}:
    get:
      description: Gets details about a specified extension version.
      operationId: GetExtensionVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The version of the extension.
        explode: false
        in: path
        name: ExtensionVersion
        required: true
        schema:
          maxLength: 20
          minLength: 0
          type: string
        style: simple
      - description: The name of the extension.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The namespace (qualifier) of the extension.
        explode: false
        in: path
        name: Namespace
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExtensionVersionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /game/{GameName}/configuration:
    get:
      description: Gets the configuration of the game.
      operationId: GetGameConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The list of sections to return.
        explode: true
        in: query
        name: Sections
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SectionName'
          maxItems: 100
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGameConfigurationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    patch:
      description: Updates one or more sections of the game configuration.
      operationId: UpdateGameConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGameConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGameConfigurationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: "<p>Imports a game configuration.</p> <p> This operation replaces\
        \ the current configuration of the game with the provided input. This is not\
        \ a reversible operation. If you want to preserve the previous configuration,\
        \ use <code>CreateSnapshot</code> to make a new snapshot before importing.\
        \ </p>"
      operationId: ImportGameConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportGameConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportGameConfigurationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /game/{GameName}/snapshot/{SnapshotId}/generated-sdk-code-job/{JobId}:
    get:
      description: Gets details about a job that is generating code for a snapshot.
      operationId: GetGeneratedCodeJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The identifier of the code generation job.
        explode: false
        in: path
        name: JobId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      - description: The identifier of the snapshot for the code generation job.
        explode: false
        in: path
        name: SnapshotId
        required: true
        schema:
          maxLength: 36
          minLength: 33
          pattern: "^Snapshot_\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3,6}Z$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGeneratedCodeJobResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /runtime/game/{GameName}/stage/{StageName}/player/{PlayerId}/connection:
    get:
      description: "<p>Gets the status of a player's connection to the game runtime.</p>\
        \ <p> It's possible for a single player to have multiple connections to the\
        \ game runtime. If a player is not connected, this operation returns an empty\
        \ list. </p>"
      operationId: GetPlayerConnectionStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The unique identifier representing a player.
        explode: false
        in: path
        name: PlayerId
        required: true
        schema:
          maxLength: 44
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the stage.
        explode: false
        in: path
        name: StageName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlayerConnectionStatusResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /game/{GameName}/snapshot/{SnapshotId}:
    get:
      description: Gets a copy of the game configuration in a snapshot.
      operationId: GetSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The list of game configuration sections to be described.
        explode: true
        in: query
        name: Sections
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SectionName'
          maxItems: 100
          minItems: 1
          type: array
        style: form
      - description: The identifier of the snapshot.
        explode: false
        in: path
        name: SnapshotId
        required: true
        schema:
          maxLength: 36
          minLength: 33
          pattern: "^Snapshot_\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3,6}Z$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSnapshotResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    patch:
      description: Updates the metadata of a GameSparks snapshot.
      operationId: UpdateSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The identifier of the snapshot.
        explode: false
        in: path
        name: SnapshotId
        required: true
        schema:
          maxLength: 36
          minLength: 33
          pattern: "^Snapshot_\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3,6}Z$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSnapshot_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSnapshotResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /game/{GameName}/stage/{StageName}/deployment:
    get:
      description: Gets information about a stage deployment.
      operationId: GetStageDeployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The identifier of the stage deployment. <code>StartStageDeployment</code>
          returns the identifier that you use here. '
        explode: true
        in: query
        name: DeploymentId
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: ^\S(.*\S)?$
          type: string
        style: form
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the stage.
        explode: false
        in: path
        name: StageName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStageDeploymentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    post:
      description: "<p>Deploys a snapshot to the stage and creates a new game runtime.</p>\
        \ <p> After you call this operation, you can check the deployment status by\
        \ using <code>GetStageDeployment</code>. </p> <p> If there are any players\
        \ connected to the previous game runtime, then both runtimes persist. Existing\
        \ connections to the previous runtime are maintained. When players disconnect\
        \ and reconnect, they connect to the new runtime. After there are no connections\
        \ to the previous game runtime, it is deleted. </p>"
      operationId: StartStageDeployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the stage to deploy the snapshot onto.
        explode: false
        in: path
        name: StageName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartStageDeployment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartStageDeploymentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /extension/{Namespace}/{Name}/version:
    get:
      description: "<p>Gets a paginated list of available versions for the extension.</p>\
        \ <p> Each time an API change is made to an extension, the version is incremented.\
        \ The list retrieved by this operation shows the versions that are currently\
        \ available. </p>"
      operationId: ListExtensionVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The maximum number of results to return.</p> <p> Use this
          parameter with NextToken to get results as a set of sequential pages. </p>
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The name of the extension.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The namespace (qualifier) of the extension.
        explode: false
        in: path
        name: Namespace
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: "<p>The token that indicates the start of the next sequential\
          \ page of results.</p> <p> Use the token that is returned with a previous\
          \ call to this operation. To start at the beginning of the result set, do\
          \ not specify a value. </p>"
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: ^\S(.*\S)?$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExtensionVersionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /extension:
    get:
      description: <p>Gets a paginated list of available extensions.</p> <p> Extensions
        provide features that games can use from scripts. </p>
      operationId: ListExtensions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The maximum number of results to return.</p> <p> Use this
          parameter with NextToken to get results as a set of sequential pages. </p>
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "<p>The token that indicates the start of the next sequential\
          \ page of results.</p> <p> Use the token that is returned with a previous\
          \ call to this operation. To start at the beginning of the result set, do\
          \ not specify a value. </p>"
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: ^\S(.*\S)?$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExtensionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /game/{GameName}/snapshot/{SnapshotId}/generated-sdk-code-jobs:
    get:
      description: Gets a paginated list of code generation jobs for a snapshot.
      operationId: ListGeneratedCodeJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: <p>The maximum number of results to return.</p> <p> Use this
          parameter with NextToken to get results as a set of sequential pages. </p>
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "<p>The token that indicates the start of the next sequential\
          \ page of results.</p> <p> Use the token that is returned with a previous\
          \ call to this operation. To start at the beginning of the result set, do\
          \ not specify a value. </p>"
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: ^\S(.*\S)?$
          type: string
        style: form
      - description: The identifier of the snapshot.
        explode: false
        in: path
        name: SnapshotId
        required: true
        schema:
          maxLength: 36
          minLength: 33
          pattern: "^Snapshot_\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3,6}Z$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGeneratedCodeJobsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /game/{GameName}/stage/{StageName}/deployments:
    get:
      description: Gets a paginated list of stage deployment summaries from the game.
      operationId: ListStageDeployments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: <p>The maximum number of results to return.</p> <p> Use this
          parameter with NextToken to get results as a set of sequential pages. </p>
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "<p>The token that indicates the start of the next sequential\
          \ page of results.</p> <p> Use the token that is returned with a previous\
          \ call to this operation. To start at the beginning of the result set, do\
          \ not specify a value. </p>"
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: ^\S(.*\S)?$
          type: string
        style: form
      - description: The name of the stage.
        explode: false
        in: path
        name: StageName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStageDeploymentsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /tags/{ResourceArn}:
    get:
      description: Lists the tags associated with a GameSparks resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the GameSparks resource.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: '^arn:aws:gamesparks:'
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    post:
      description: Adds tags to a GameSparks resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource to add the tags
          to.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: '^arn:aws:gamesparks:'
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /game/{GameName}/snapshot/{SnapshotId}/generated-sdk-code-job:
    post:
      description: ' Starts an asynchronous process that generates client code for
        system-defined and custom messages. The resulting code is collected as a .zip
        file and uploaded to a pre-signed Amazon S3 URL. '
      operationId: StartGeneratedCodeJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the game.
        explode: false
        in: path
        name: GameName
        required: true
        schema:
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The identifier of the snapshot for which to generate code.
        explode: false
        in: path
        name: SnapshotId
        required: true
        schema:
          maxLength: 36
          minLength: 33
          pattern: "^Snapshot_\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3,6}Z$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartGeneratedCodeJob_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartGeneratedCodeJobResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{ResourceArn}#tagKeys:
    delete:
      description: Removes tags from a GameSparks resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource to remove the
          tags from.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: '^arn:aws:gamesparks:'
          type: string
        style: simple
      - description: The keys of the tags to remove.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateGameResult:
      example:
        Game:
          Description: ""
          State: ""
          EnableTerminationProtection: ""
          LastUpdated: ""
          Arn: ""
          Tags: ""
          Created: ""
          Name: ""
      properties:
        Game:
          $ref: '#/components/schemas/CreateGameResult_Game'
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^[\\s\\w+-=\\.:/@]*$"
      type: string
    ValidationException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    ConflictException: {}
    InternalServerException: {}
    ServiceQuotaExceededException: {}
    CreateSnapshotResult:
      example:
        Snapshot:
          Description: ""
          Sections: ""
          Id: ""
          LastUpdated: ""
          Created: ""
      properties:
        Snapshot:
          $ref: '#/components/schemas/CreateSnapshotResult_Snapshot'
      type: object
    ResourceNotFoundException: {}
    CreateStageResult:
      example:
        Stage:
          Role: ""
          GameKey: ""
          Description: ""
          LogGroup: ""
          State: ""
          LastUpdated: ""
          Arn: ""
          Tags: ""
          Created: ""
          Name: ""
      properties:
        Stage:
          $ref: '#/components/schemas/CreateStageResult_Stage'
      type: object
    DeleteGameResult:
      properties: {}
      type: object
    DeleteStageResult:
      properties: {}
      type: object
    DisconnectPlayerResult:
      example:
        DisconnectFailures: ""
        DisconnectSuccesses: ""
      properties:
        DisconnectFailures:
          allOf:
          - $ref: '#/components/schemas/ConnectionIdList'
          - description: The list of the connection ids that could not be disconnected.
        DisconnectSuccesses:
          allOf:
          - $ref: '#/components/schemas/ConnectionIdList'
          - description: The list of the connection ids that were disconnected.
      type: object
    ExportSnapshotResult:
      example:
        S3Url: ""
      properties:
        S3Url:
          allOf:
          - $ref: '#/components/schemas/S3PresignedUrl'
          - description: "<p>The presigned URL for the snapshot data.</p> <p> This\
              \ URL will be available for 10 minutes, and can be used to download\
              \ the snapshot content. If the URL expires, a new one can be requested\
              \ using the same operation. </p>"
      type: object
    GetExtensionResult:
      example:
        Extension:
          Description: ""
          Namespace: ""
          Name: ""
      properties:
        Extension:
          $ref: '#/components/schemas/GetExtensionResult_Extension'
      type: object
    GetExtensionVersionResult:
      example:
        ExtensionVersion:
          Version: ""
          Schema: ""
          Namespace: ""
          Name: ""
      properties:
        ExtensionVersion:
          $ref: '#/components/schemas/GetExtensionVersionResult_ExtensionVersion'
      type: object
    GetGameResult:
      example:
        Game:
          Description: ""
          State: ""
          EnableTerminationProtection: ""
          LastUpdated: ""
          Arn: ""
          Tags: ""
          Created: ""
          Name: ""
      properties:
        Game:
          $ref: '#/components/schemas/GetGameResult_Game'
      type: object
    GetGameConfigurationResult:
      example:
        GameConfiguration:
          Sections: ""
          LastUpdated: ""
          Created: ""
      properties:
        GameConfiguration:
          $ref: '#/components/schemas/GetGameConfigurationResult_GameConfiguration'
      type: object
    SectionName:
      maxLength: 36
      minLength: 1
      pattern: "^[a-zA-Z0-9.]+$"
      type: string
    GetGeneratedCodeJobResult:
      example:
        GeneratedCodeJob:
          Status: ""
          Description: ""
          S3Url: ""
          GeneratedCodeJobId: ""
          ExpirationTime: ""
      properties:
        GeneratedCodeJob:
          $ref: '#/components/schemas/GetGeneratedCodeJobResult_GeneratedCodeJob'
      type: object
    GetPlayerConnectionStatusResult:
      example:
        Connections: ""
      properties:
        Connections:
          allOf:
          - $ref: '#/components/schemas/ConnectionList'
          - description: "The list of connection ids, one for each connection in use\
              \ by the player."
      type: object
    GetSnapshotResult:
      example:
        Snapshot:
          Description: ""
          Sections: ""
          Id: ""
          LastUpdated: ""
          Created: ""
      properties:
        Snapshot:
          $ref: '#/components/schemas/GetSnapshotResult_Snapshot'
      type: object
    GetStageResult:
      example:
        Stage:
          Role: ""
          GameKey: ""
          Description: ""
          LogGroup: ""
          State: ""
          LastUpdated: ""
          Arn: ""
          Tags: ""
          Created: ""
          Name: ""
      properties:
        Stage:
          $ref: '#/components/schemas/GetStageResult_Stage'
      type: object
    GetStageDeploymentResult:
      example:
        StageDeployment:
          DeploymentAction: ""
          SnapshotId: ""
          DeploymentId: ""
          DeploymentState: ""
          DeploymentResult:
            Message: ""
            ResultCode: ""
          LastUpdated: ""
          Created: ""
      properties:
        StageDeployment:
          $ref: '#/components/schemas/GetStageDeploymentResult_StageDeployment'
      type: object
    ImportGameConfigurationResult:
      example:
        GameConfiguration:
          Sections: ""
          LastUpdated: ""
          Created: ""
      properties:
        GameConfiguration:
          $ref: '#/components/schemas/GetGameConfigurationResult_GameConfiguration'
      type: object
    RawGameConfigurationData:
      maxLength: 1024000
      minLength: 10
      type: string
    ListExtensionVersionsResult:
      example:
        NextToken: ""
        ExtensionVersions: ""
      properties:
        ExtensionVersions:
          allOf:
          - $ref: '#/components/schemas/ExtensionVersionDetailsList'
          - description: The list of extension versions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: <p>The token that indicates the start of the next sequential
              page of results.</p> <p> Use this value when making the next call to
              this operation to continue where the last one finished. </p>
      type: object
    ListExtensionsResult:
      example:
        NextToken: ""
        Extensions: ""
      properties:
        Extensions:
          allOf:
          - $ref: '#/components/schemas/ExtensionDetailsList'
          - description: The list of extensions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: <p>The token that indicates the start of the next sequential
              page of results.</p> <p> Use this value when making the next call to
              this operation to continue where the last one finished. </p>
      type: object
    ListGamesResult:
      example:
        NextToken: ""
        Games: ""
      properties:
        Games:
          allOf:
          - $ref: '#/components/schemas/GameSummaryList'
          - description: The list of games.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: <p>The token that indicates the start of the next sequential
              page of results.</p> <p> Use this value when making the next call to
              this operation to continue where the last one finished. </p>
      type: object
    ListGeneratedCodeJobsResult:
      example:
        NextToken: ""
        GeneratedCodeJobs: ""
      properties:
        GeneratedCodeJobs:
          allOf:
          - $ref: '#/components/schemas/GeneratedCodeJobDetailsList'
          - description: The list of generated code jobs.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: <p>The token that indicates the start of the next sequential
              page of results.</p> <p> Use this value when making the next call to
              this operation to continue where the last one finished. </p>
      type: object
    ListSnapshotsResult:
      example:
        NextToken: ""
        Snapshots: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: <p>The token that indicates the start of the next sequential
              page of results.</p> <p> Use this value when making the next call to
              this operation to continue where the last one finished. </p>
        Snapshots:
          allOf:
          - $ref: '#/components/schemas/SnapshotSummaryList'
          - description: ' A list of snapshot summaries. You can use the returned
              snapshot IDs in the <code>UpdateSnapshot</code> and <code>GetSnapshot</code>
              operations. '
      type: object
    ListStageDeploymentsResult:
      example:
        NextToken: ""
        StageDeployments: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: <p>The token that indicates the start of the next sequential
              page of results.</p> <p> Use this value when making the next call to
              this operation to continue where the last one finished. </p>
        StageDeployments:
          allOf:
          - $ref: '#/components/schemas/StageDeploymentList'
          - description: ' A list of stage deployment summaries. You can use the deployment
              IDs in the <code>UpdateStageDeployment</code> and <code>GetStageDeployment</code>
              actions. '
      type: object
    ListStagesResult:
      example:
        NextToken: ""
        Stages: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: <p>The token that indicates the start of the next sequential
              page of results.</p> <p> Use this value when making the next call to
              this operation to continue where the last one finished. </p>
        Stages:
          allOf:
          - $ref: '#/components/schemas/StageSummaryList'
          - description: ' A list of stage summaries. You can use the stage names
              in the <code>UpdateStage</code> and <code>GetStage</code> actions. '
      type: object
    ListTagsForResourceResult:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags associated with the resource.
      type: object
    StartGeneratedCodeJobResult:
      example:
        GeneratedCodeJobId: ""
      properties:
        GeneratedCodeJobId:
          allOf:
          - $ref: '#/components/schemas/GeneratedCodeJobId'
          - description: ' The identifier of the code generation job. You can use
              this identifier in the <code>GetGeneratedCodeJob</code> operation. '
      type: object
    GameSdkVersion:
      maxLength: 10
      minLength: 5
      pattern: "^((\\d|[1-9]\\d*)\\.(\\d|[0-9]\\d*)\\.(\\d|[0-9]\\d*)|LATEST)$"
      type: string
    Language:
      maxLength: 16
      minLength: 1
      pattern: "^[a-zA-Z_]+$"
      type: string
    TargetPlatform:
      maxLength: 16
      minLength: 1
      pattern: "^[a-zA-Z]+$"
      type: string
    StartStageDeploymentResult:
      example:
        StageDeployment:
          DeploymentAction: ""
          SnapshotId: ""
          DeploymentId: ""
          DeploymentState: ""
          DeploymentResult:
            Message: ""
            ResultCode: ""
          LastUpdated: ""
          Created: ""
      properties:
        StageDeployment:
          $ref: '#/components/schemas/StartStageDeploymentResult_StageDeployment'
      type: object
    TagResourceResult:
      properties: {}
      type: object
    UntagResourceResult:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      type: string
    UpdateGameResult:
      example:
        Game:
          Description: ""
          State: ""
          EnableTerminationProtection: ""
          LastUpdated: ""
          Arn: ""
          Tags: ""
          Created: ""
          Name: ""
      properties:
        Game:
          $ref: '#/components/schemas/GetGameResult_Game'
      type: object
    UpdateGameConfigurationResult:
      example:
        GameConfiguration:
          Sections: ""
          LastUpdated: ""
          Created: ""
      properties:
        GameConfiguration:
          $ref: '#/components/schemas/GetGameConfigurationResult_GameConfiguration'
      type: object
    SectionModification:
      description: A single modification to the configuration section.
      properties:
        Operation:
          allOf:
          - $ref: '#/components/schemas/Operation'
          - description: "<p>The operation to be performed on a configuration section.</p>\
              \ <p> Content can be added, deleted, or replaced within a section. </p>"
        Path:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: The path within the section content to be modified.
        Section:
          allOf:
          - $ref: '#/components/schemas/SectionName'
          - description: The name of the section to be modified.
        Value:
          allOf:
          - $ref: '#/components/schemas/Document'
          - description: "<p>For add and replace operations, this is the value that\
              \ will be used.</p> <p> This field should be omitted for delete operations.\
              \ </p>"
      required:
      - Operation
      - Path
      - Section
      type: object
    UpdateSnapshotResult:
      example:
        Snapshot:
          Description: ""
          Sections: ""
          Id: ""
          LastUpdated: ""
          Created: ""
      properties:
        Snapshot:
          $ref: '#/components/schemas/UpdateSnapshotResult_Snapshot'
      type: object
    UpdateStageResult:
      example:
        Stage:
          Role: ""
          GameKey: ""
          Description: ""
          LogGroup: ""
          State: ""
          LastUpdated: ""
          Arn: ""
          Tags: ""
          Created: ""
          Name: ""
      properties:
        Stage:
          $ref: '#/components/schemas/UpdateStageResult_Stage'
      type: object
    ARN:
      maxLength: 2048
      minLength: 20
      pattern: "^[A-Za-z0-9:_/-]+$"
      type: string
    ByteSize:
      minimum: 0
      type: integer
    ClientToken:
      maxLength: 126
      minLength: 33
      type: string
    DateTime:
      format: date-time
      type: string
    ConnectionId:
      maxLength: 36
      minLength: 1
      type: string
    Connection:
      description: Details about a WebSocket connection.
      properties:
        Created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time when the connection was created.
        Id:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          - description: The identifier used to indicate a specific WebSocket connection.
      type: object
    ConnectionIdList:
      items:
        $ref: '#/components/schemas/ConnectionId'
      type: array
    ConnectionList:
      items:
        $ref: '#/components/schemas/Connection'
      type: array
    GameDescription:
      maxLength: 250
      minLength: 0
      pattern: ^\S(.*\S)?$|^$
      type: string
    GameName:
      maxLength: 36
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 1
      type: object
    CreateGameRequest:
      example:
        Description: ""
        GameName: ""
        ClientToken: ""
        Tags: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: " A client-defined token. With an active client token in\
              \ the request, this action is idempotent. "
        Description:
          allOf:
          - $ref: '#/components/schemas/GameDescription'
          - description: The description of the game.
        GameName:
          allOf:
          - $ref: '#/components/schemas/GameName'
          - description: The name of the game.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tags to apply to the game.
      required:
      - GameName
      title: CreateGameRequest
      type: object
    GameDetails:
      description: Details about a game.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The Amazon Resource Name (ARN) of this game.
        Created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date when the game was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/GameDescription'
          - description: The description of the game.
        EnableTerminationProtection:
          allOf:
          - $ref: '#/components/schemas/GameTerminationProtection'
          - description: Determines if the game can be deleted.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date when the game was last modified.
        Name:
          allOf:
          - $ref: '#/components/schemas/GameName'
          - description: The name of the game.
        State:
          allOf:
          - $ref: '#/components/schemas/GameState'
          - description: The state of the game.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags associated with the game.
      type: object
    SnapshotDescription:
      maxLength: 250
      minLength: 0
      pattern: ^\S(.*\S)?$|^$
      type: string
    CreateSnapshotRequest:
      example:
        Description: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/SnapshotDescription'
          - description: The description of the snapshot.
      title: CreateSnapshotRequest
      type: object
    SnapshotDetails:
      description: Properties that provide details of a snapshot.
      properties:
        Created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The timestamp of when the snapshot was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/SnapshotDescription'
          - description: The description of the snapshot.
        Id:
          allOf:
          - $ref: '#/components/schemas/SnapshotId'
          - description: The identifier of the snapshot.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The timestamp of when the snapshot was last updated.
        Sections:
          allOf:
          - $ref: '#/components/schemas/Sections'
          - description: The sections in the snapshot.
      type: object
    StageDescription:
      maxLength: 250
      minLength: 0
      pattern: ^\S(.*\S)?$|^$
      type: string
    RoleARN:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/.+$"
      type: string
    StageName:
      maxLength: 36
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    CreateStageRequest:
      example:
        Role: ""
        Description: ""
        StageName: ""
        ClientToken: ""
        Tags: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: " A client-defined token. With an active client token in\
              \ the request, this action is idempotent. "
        Description:
          allOf:
          - $ref: '#/components/schemas/StageDescription'
          - description: The description of the stage.
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleARN'
          - description: ' The Amazon Resource Name (ARN) of the role to run the game
              with. This role can be a game-defined role or the default role that
              GameSparks created. '
        StageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: The name of the stage.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tags to apply to the stage.
      required:
      - Role
      - StageName
      title: CreateStageRequest
      type: object
    StageDetails:
      description: Properties that provide details of a stage.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The Amazon Resource Name (ARN) of the stage.
        Created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The timestamp of when the stage was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/StageDescription'
          - description: The description of the stage.
        GameKey:
          allOf:
          - $ref: '#/components/schemas/GameKey'
          - description: <p>The game key associated with the stage.</p> <p> The game
              key is a unique identifier that the game client uses to connect to the
              GameSparks backend. </p>
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The timestamp of when the stage was last updated.
        LogGroup:
          allOf:
          - $ref: '#/components/schemas/LogGroupName'
          - description: The Amazon CloudWatch log group for game runtimes deployed
              to the stage.
        Name:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: The name of the stage.
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleARN'
          - description: The Amazon Resource Name (ARN) of the role used to run the
              game runtimes deployed to the stage.
        State:
          allOf:
          - $ref: '#/components/schemas/StageState'
          - description: The state of the stage.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags associated with the stage.
      type: object
    DeleteGameRequest:
      properties: {}
      title: DeleteGameRequest
      type: object
    DeleteStageRequest:
      properties: {}
      title: DeleteStageRequest
      type: object
    DeploymentAction:
      enum:
      - DEPLOY
      - UNDEPLOY
      type: string
    DeploymentId:
      maxLength: 128
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    Message:
      type: string
    ResultCode:
      enum:
      - SUCCESS
      - INVALID_ROLE_FAILURE
      - UNSPECIFIED_FAILURE
      type: string
    DeploymentResult:
      description: The result of the deployment.
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: Details about the deployment result.
        ResultCode:
          allOf:
          - $ref: '#/components/schemas/ResultCode'
          - description: The type of deployment result.
      type: object
    DeploymentState:
      enum:
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      type: string
    PlayerId:
      maxLength: 44
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    DisconnectPlayerRequest:
      properties: {}
      title: DisconnectPlayerRequest
      type: object
    Document:
      description: <p/>
      properties: {}
      type: object
    SnapshotId:
      maxLength: 36
      minLength: 33
      pattern: "^Snapshot_\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3,6}Z$"
      type: string
    ExportSnapshotRequest:
      properties: {}
      title: ExportSnapshotRequest
      type: object
    S3PresignedUrl:
      maxLength: 2048
      minLength: 10
      pattern: ^https:\/\/(.*)\.s3(.*)\.amazonaws\.com\/(.*)$
      type: string
    ExtensionDescription:
      maxLength: 250
      minLength: 0
      pattern: ^\S(.*\S)?$|^$
      type: string
    ExtensionName:
      maxLength: 36
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    ExtensionNamespace:
      maxLength: 36
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    ExtensionDetails:
      description: Details about the extension.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/ExtensionDescription'
          - description: The description of the extension.
        Name:
          allOf:
          - $ref: '#/components/schemas/ExtensionName'
          - description: The name of the extension.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/ExtensionNamespace'
          - description: The namespace (qualifier) of the extension.
      type: object
    ExtensionDetailsList:
      items:
        $ref: '#/components/schemas/ExtensionDetails'
      type: array
    ExtensionVersion:
      maxLength: 20
      minLength: 0
      type: string
    ExtensionVersionSchema:
      maxLength: 2048
      minLength: 0
      type: string
    ExtensionVersionDetails:
      description: Details about the extension version.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ExtensionName'
          - description: The name of the extension.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/ExtensionNamespace'
          - description: The namespace (qualifier) of the extension.
        Schema:
          allOf:
          - $ref: '#/components/schemas/ExtensionVersionSchema'
          - description: The model that defines the interface for this extension version.
        Version:
          allOf:
          - $ref: '#/components/schemas/ExtensionVersion'
          - description: The version of the extension.
      type: object
    ExtensionVersionDetailsList:
      items:
        $ref: '#/components/schemas/ExtensionVersionDetails'
      type: array
    Sections:
      additionalProperties:
        $ref: '#/components/schemas/Section'
      type: object
    GameConfigurationDetails:
      description: "<p>Details about the game configuration.</p> <p> The game configuration\
        \ is organized into named sections, where the schema of each section is defined\
        \ by an extension. The schema for these sections can be retrieved using the\
        \ <code>GetExtensionVersion</code> operation. </p>"
      properties:
        Created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date when the game was created.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date when the game was last modified.
        Sections:
          allOf:
          - $ref: '#/components/schemas/Sections'
          - description: "Configuration data, organized by section name."
      type: object
    GameTerminationProtection:
      type: boolean
    GameState:
      enum:
      - ACTIVE
      - DELETING
      type: string
    GameKey:
      maxLength: 44
      minLength: 1
      type: string
    GameSummary:
      description: The summary of the properties of a game.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/GameDescription'
          - description: The description of the game.
        Name:
          allOf:
          - $ref: '#/components/schemas/GameName'
          - description: The name of the game.
        State:
          allOf:
          - $ref: '#/components/schemas/GameState'
          - description: The state of the game.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags associated with the game.
      type: object
    GameSummaryList:
      items:
        $ref: '#/components/schemas/GameSummary'
      type: array
    GeneratedCodeJobDescription:
      maxLength: 250
      minLength: 0
      pattern: ^\S(.*\S)?$|^$
      type: string
    GeneratedCodeJobId:
      pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
      type: string
    GeneratedCodeJobState:
      enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - PENDING
      type: string
    GeneratedCodeJobDetails:
      description: Details about a generated code job.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/GeneratedCodeJobDescription'
          - description: The description of the generated code job.
        ExpirationTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: <p>The expiration date and time for the download URL.</p>
              <p> The download URL us guaranteed to be available until at least this
              time. </p>
        GeneratedCodeJobId:
          allOf:
          - $ref: '#/components/schemas/GeneratedCodeJobId'
          - description: The identifier for the generated code job.
        S3Url:
          allOf:
          - $ref: '#/components/schemas/S3PresignedUrl'
          - description: A presigned URL that can be used to download the generated
              code.
        Status:
          allOf:
          - $ref: '#/components/schemas/GeneratedCodeJobState'
          - description: The status of the generated code job
      type: object
    GeneratedCodeJobDetailsList:
      items:
        $ref: '#/components/schemas/GeneratedCodeJobDetails'
      type: array
    Generator:
      description: Properties that specify the code generator for a generated code
        job.
      properties:
        GameSdkVersion:
          allOf:
          - $ref: '#/components/schemas/GameSdkVersion'
          - description: The target version of the GameSparks Game SDK.
        Language:
          allOf:
          - $ref: '#/components/schemas/Language'
          - description: "<p>The programming language for the generated code.</p>\
              \ <p> Not all languages are supported for each platform. For cases where\
              \ multiple languages are supported, this parameter specifies the language\
              \ to be used. If this value is omitted, the default language for the\
              \ target platform will be used. </p>"
        TargetPlatform:
          allOf:
          - $ref: '#/components/schemas/TargetPlatform'
          - description: The platform that will be used to run the generated code.
      type: object
    GetExtensionRequest:
      properties: {}
      title: GetExtensionRequest
      type: object
    GetExtensionVersionRequest:
      properties: {}
      title: GetExtensionVersionRequest
      type: object
    SectionList:
      items:
        $ref: '#/components/schemas/SectionName'
      maxItems: 100
      minItems: 1
      type: array
    GetGameConfigurationRequest:
      properties: {}
      title: GetGameConfigurationRequest
      type: object
    GetGameRequest:
      properties: {}
      title: GetGameRequest
      type: object
    GetGeneratedCodeJobRequest:
      properties: {}
      title: GetGeneratedCodeJobRequest
      type: object
    GetPlayerConnectionStatusRequest:
      properties: {}
      title: GetPlayerConnectionStatusRequest
      type: object
    GetSnapshotRequest:
      properties: {}
      title: GetSnapshotRequest
      type: object
    GetStageDeploymentRequest:
      properties: {}
      title: GetStageDeploymentRequest
      type: object
    StageDeploymentDetails:
      description: Properties that provide details of a stage deployment.
      properties:
        Created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The timestamp of when the stage deployment was created.
        DeploymentAction:
          allOf:
          - $ref: '#/components/schemas/DeploymentAction'
          - description: The type of action of the stage deployment.
        DeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The identifier of the deployment.
        DeploymentResult:
          $ref: '#/components/schemas/StageDeploymentDetails_DeploymentResult'
        DeploymentState:
          allOf:
          - $ref: '#/components/schemas/DeploymentState'
          - description: The state of the deployment.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The timestamp of when the deployment was last updated.
        SnapshotId:
          allOf:
          - $ref: '#/components/schemas/SnapshotId'
          - description: The identifier of the snapshot associated with the stage
              deployment.
      type: object
    GetStageRequest:
      properties: {}
      title: GetStageRequest
      type: object
    ImportGameConfigurationSource:
      description: The source used to import configuration sections.
      properties:
        File:
          allOf:
          - $ref: '#/components/schemas/RawGameConfigurationData'
          - description: The JSON string containing the configuration sections.
      required:
      - File
      type: object
    ImportGameConfigurationRequest:
      example:
        ImportSource:
          File: ""
      properties:
        ImportSource:
          $ref: '#/components/schemas/ImportGameConfigurationRequest_ImportSource'
      required:
      - ImportSource
      title: ImportGameConfigurationRequest
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 1024
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    ListExtensionVersionsRequest:
      properties: {}
      title: ListExtensionVersionsRequest
      type: object
    ListExtensionsRequest:
      properties: {}
      title: ListExtensionsRequest
      type: object
    ListGamesRequest:
      properties: {}
      title: ListGamesRequest
      type: object
    ListGeneratedCodeJobsRequest:
      properties: {}
      title: ListGeneratedCodeJobsRequest
      type: object
    ListSnapshotsRequest:
      properties: {}
      title: ListSnapshotsRequest
      type: object
    SnapshotSummaryList:
      items:
        $ref: '#/components/schemas/SnapshotSummary'
      type: array
    ListStageDeploymentsRequest:
      properties: {}
      title: ListStageDeploymentsRequest
      type: object
    StageDeploymentList:
      items:
        $ref: '#/components/schemas/StageDeploymentSummary'
      type: array
    ListStagesRequest:
      properties: {}
      title: ListStagesRequest
      type: object
    StageSummaryList:
      items:
        $ref: '#/components/schemas/StageSummary'
      type: array
    ResourceArn:
      maxLength: 2048
      minLength: 20
      pattern: '^arn:aws:gamesparks:'
      type: string
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    LogGroupName:
      maxLength: 512
      minLength: 1
      type: string
    Operation:
      enum:
      - ADD
      - REMOVE
      - REPLACE
      type: string
    Path:
      maxLength: 500
      minLength: 1
      pattern: "^\\/.*[^\\/]$"
      type: string
    Section:
      description: The configuration section.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Document'
          - description: The content of a configuration section.
        Name:
          allOf:
          - $ref: '#/components/schemas/SectionName'
          - description: The name of the section.
        Size:
          allOf:
          - $ref: '#/components/schemas/ByteSize'
          - description: "The size, in bytes, of the section contents."
      type: object
    SectionModificationList:
      items:
        $ref: '#/components/schemas/SectionModification'
      maxItems: 100
      minItems: 1
      type: array
    SnapshotSummary:
      description: The summary of the properties of a snapshot.
      properties:
        Created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The timestamp of when the snapshot was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/SnapshotDescription'
          - description: The description of the snapshot.
        Id:
          allOf:
          - $ref: '#/components/schemas/SnapshotId'
          - description: The identifier of the snapshot.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Then timestamp of when the snapshot was last updated.
      type: object
    StageDeploymentSummary:
      description: The summary of the properties of a stage deployment.
      properties:
        DeploymentAction:
          allOf:
          - $ref: '#/components/schemas/DeploymentAction'
          - description: The type of action of the deployment.
        DeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The identifier of the deployment.
        DeploymentResult:
          $ref: '#/components/schemas/StageDeploymentDetails_DeploymentResult'
        DeploymentState:
          allOf:
          - $ref: '#/components/schemas/DeploymentState'
          - description: The state of the deployment.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The timestamp of when the deployment was last updated.
        SnapshotId:
          allOf:
          - $ref: '#/components/schemas/SnapshotId'
          - description: The identifier of the snapshot associated with the stage
              deployment.
      type: object
    StageState:
      enum:
      - ACTIVE
      - DELETING
      type: string
    StageSummary:
      description: The summary of the properties of a stage.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/StageDescription'
          - description: The description of the stage.
        GameKey:
          allOf:
          - $ref: '#/components/schemas/GameKey'
          - description: <p>The game key associated with the stage.</p> <p> The game
              key is a unique identifier that the game client uses to connect to the
              GameSparks backend. </p>
        Name:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: The name of the stage.
        State:
          allOf:
          - $ref: '#/components/schemas/StageState'
          - description: The state of the stage.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags associated with the stage.
      type: object
    StartGeneratedCodeJobRequest:
      example:
        Generator:
          Language: ""
          TargetPlatform: ""
          GameSdkVersion: ""
      properties:
        Generator:
          $ref: '#/components/schemas/StartGeneratedCodeJobRequest_Generator'
      required:
      - Generator
      title: StartGeneratedCodeJobRequest
      type: object
    StartStageDeploymentRequest:
      example:
        SnapshotId: ""
        ClientToken: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: " A client-defined token. With an active client token in\
              \ the request, this action is idempotent. "
        SnapshotId:
          allOf:
          - $ref: '#/components/schemas/SnapshotId'
          - description: The identifier of the snapshot to deploy.
      required:
      - SnapshotId
      title: StartStageDeploymentRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to add to the resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateGameConfigurationRequest:
      example:
        Modifications: ""
      properties:
        Modifications:
          allOf:
          - $ref: '#/components/schemas/SectionModificationList'
          - description: The list of modifications to make.
      required:
      - Modifications
      title: UpdateGameConfigurationRequest
      type: object
    UpdateGameRequest:
      example:
        Description: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/GameDescription'
          - description: The description of the game.
      title: UpdateGameRequest
      type: object
    UpdateSnapshotRequest:
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/SnapshotDescription'
          - description: The description of the snapshot.
      title: UpdateSnapshotRequest
      type: object
    UpdateStageRequest:
      example:
        Role: ""
        Description: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/StageDescription'
          - description: The description of the stage.
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleARN'
          - description: The Amazon Resource Name (ARN) of the role to use for the
              game snapshots deployed to this stage.
      title: UpdateStageRequest
      type: object
    CreateGame_request:
      properties:
        ClientToken:
          description: " A client-defined token. With an active client token in the\
            \ request, this action is idempotent. "
          maxLength: 126
          minLength: 33
          type: string
        Description:
          description: The description of the game.
          maxLength: 250
          minLength: 0
          pattern: ^\S(.*\S)?$|^$
          type: string
        GameName:
          description: The name of the game.
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The list of tags to apply to the game.
          maxProperties: 50
          minProperties: 1
          type: object
      required:
      - GameName
      type: object
    CreateSnapshot_request:
      properties:
        Description:
          description: The description of the snapshot.
          maxLength: 250
          minLength: 0
          pattern: ^\S(.*\S)?$|^$
          type: string
      type: object
    CreateStage_request:
      properties:
        ClientToken:
          description: " A client-defined token. With an active client token in the\
            \ request, this action is idempotent. "
          maxLength: 126
          minLength: 33
          type: string
        Description:
          description: The description of the stage.
          maxLength: 250
          minLength: 0
          pattern: ^\S(.*\S)?$|^$
          type: string
        Role:
          description: ' The Amazon Resource Name (ARN) of the role to run the game
            with. This role can be a game-defined role or the default role that GameSparks
            created. '
          maxLength: 2048
          minLength: 20
          pattern: "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/.+$"
          type: string
        StageName:
          description: The name of the stage.
          maxLength: 36
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The list of tags to apply to the stage.
          maxProperties: 50
          minProperties: 1
          type: object
      required:
      - Role
      - StageName
      type: object
    UpdateGame_request:
      properties:
        Description:
          description: The description of the game.
          maxLength: 250
          minLength: 0
          pattern: ^\S(.*\S)?$|^$
          type: string
      type: object
    UpdateStage_request:
      properties:
        Description:
          description: The description of the stage.
          maxLength: 250
          minLength: 0
          pattern: ^\S(.*\S)?$|^$
          type: string
        Role:
          description: The Amazon Resource Name (ARN) of the role to use for the game
            snapshots deployed to this stage.
          maxLength: 2048
          minLength: 20
          pattern: "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/.+$"
          type: string
      type: object
    ImportGameConfiguration_request_ImportSource:
      description: The source used to import configuration sections.
      properties:
        File:
          allOf:
          - $ref: '#/components/schemas/RawGameConfigurationData'
          - description: The JSON string containing the configuration sections.
      type: object
    ImportGameConfiguration_request:
      properties:
        ImportSource:
          $ref: '#/components/schemas/ImportGameConfiguration_request_ImportSource'
      required:
      - ImportSource
      type: object
    UpdateGameConfiguration_request:
      properties:
        Modifications:
          description: The list of modifications to make.
          items:
            $ref: '#/components/schemas/SectionModification'
          maxItems: 100
          minItems: 1
          type: array
      required:
      - Modifications
      type: object
    StartStageDeployment_request:
      properties:
        ClientToken:
          description: " A client-defined token. With an active client token in the\
            \ request, this action is idempotent. "
          maxLength: 126
          minLength: 33
          type: string
        SnapshotId:
          description: The identifier of the snapshot to deploy.
          maxLength: 36
          minLength: 33
          pattern: "^Snapshot_\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3,6}Z$"
          type: string
      required:
      - SnapshotId
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to add to the resource.
          maxProperties: 50
          minProperties: 1
          type: object
      required:
      - tags
      type: object
    StartGeneratedCodeJob_request_Generator:
      description: Properties that specify the code generator for a generated code
        job.
      properties:
        GameSdkVersion:
          allOf:
          - $ref: '#/components/schemas/GameSdkVersion'
          - description: The target version of the GameSparks Game SDK.
        Language:
          allOf:
          - $ref: '#/components/schemas/Language'
          - description: "<p>The programming language for the generated code.</p>\
              \ <p> Not all languages are supported for each platform. For cases where\
              \ multiple languages are supported, this parameter specifies the language\
              \ to be used. If this value is omitted, the default language for the\
              \ target platform will be used. </p>"
        TargetPlatform:
          allOf:
          - $ref: '#/components/schemas/TargetPlatform'
          - description: The platform that will be used to run the generated code.
      type: object
    StartGeneratedCodeJob_request:
      properties:
        Generator:
          $ref: '#/components/schemas/StartGeneratedCodeJob_request_Generator'
      required:
      - Generator
      type: object
    CreateGameResult_Game:
      allOf:
      - $ref: '#/components/schemas/GameDetails'
      - description: Details about the game that was created.
      example:
        Description: ""
        State: ""
        EnableTerminationProtection: ""
        LastUpdated: ""
        Arn: ""
        Tags: ""
        Created: ""
        Name: ""
    CreateSnapshotResult_Snapshot:
      allOf:
      - $ref: '#/components/schemas/SnapshotDetails'
      - description: Properties that provide details of the created snapshot.
      example:
        Description: ""
        Sections: ""
        Id: ""
        LastUpdated: ""
        Created: ""
    CreateStageResult_Stage:
      allOf:
      - $ref: '#/components/schemas/StageDetails'
      - description: Properties that describe the stage.
      example:
        Role: ""
        GameKey: ""
        Description: ""
        LogGroup: ""
        State: ""
        LastUpdated: ""
        Arn: ""
        Tags: ""
        Created: ""
        Name: ""
    GetExtensionResult_Extension:
      allOf:
      - $ref: '#/components/schemas/ExtensionDetails'
      - description: Details about the extension.
      example:
        Description: ""
        Namespace: ""
        Name: ""
    GetExtensionVersionResult_ExtensionVersion:
      allOf:
      - $ref: '#/components/schemas/ExtensionVersionDetails'
      - description: The version of the extension.
      example:
        Version: ""
        Schema: ""
        Namespace: ""
        Name: ""
    GetGameResult_Game:
      allOf:
      - $ref: '#/components/schemas/GameDetails'
      - description: The details of the game.
      example:
        Description: ""
        State: ""
        EnableTerminationProtection: ""
        LastUpdated: ""
        Arn: ""
        Tags: ""
        Created: ""
        Name: ""
    GetGameConfigurationResult_GameConfiguration:
      allOf:
      - $ref: '#/components/schemas/GameConfigurationDetails'
      - description: Details about the game configuration.
      example:
        Sections: ""
        LastUpdated: ""
        Created: ""
    GetGeneratedCodeJobResult_GeneratedCodeJob:
      allOf:
      - $ref: '#/components/schemas/GeneratedCodeJobDetails'
      - description: Details about the generated code job.
      example:
        Status: ""
        Description: ""
        S3Url: ""
        GeneratedCodeJobId: ""
        ExpirationTime: ""
    GetSnapshotResult_Snapshot:
      allOf:
      - $ref: '#/components/schemas/SnapshotDetails'
      - description: Properties that provide details of the snapshot.
      example:
        Description: ""
        Sections: ""
        Id: ""
        LastUpdated: ""
        Created: ""
    GetStageResult_Stage:
      allOf:
      - $ref: '#/components/schemas/StageDetails'
      - description: Properties that provide details of the stage.
      example:
        Role: ""
        GameKey: ""
        Description: ""
        LogGroup: ""
        State: ""
        LastUpdated: ""
        Arn: ""
        Tags: ""
        Created: ""
        Name: ""
    GetStageDeploymentResult_StageDeployment:
      allOf:
      - $ref: '#/components/schemas/StageDeploymentDetails'
      - description: Properties that provide details of the stage deployment.
      example:
        DeploymentAction: ""
        SnapshotId: ""
        DeploymentId: ""
        DeploymentState: ""
        DeploymentResult:
          Message: ""
          ResultCode: ""
        LastUpdated: ""
        Created: ""
    StartStageDeploymentResult_StageDeployment:
      allOf:
      - $ref: '#/components/schemas/StageDeploymentDetails'
      - description: Properties that describe the stage deployment.
      example:
        DeploymentAction: ""
        SnapshotId: ""
        DeploymentId: ""
        DeploymentState: ""
        DeploymentResult:
          Message: ""
          ResultCode: ""
        LastUpdated: ""
        Created: ""
    UpdateSnapshotResult_Snapshot:
      allOf:
      - $ref: '#/components/schemas/SnapshotDetails'
      - description: Properties that provide details of the updated snapshot.
      example:
        Description: ""
        Sections: ""
        Id: ""
        LastUpdated: ""
        Created: ""
    UpdateStageResult_Stage:
      allOf:
      - $ref: '#/components/schemas/StageDetails'
      - description: Properties that provide details of the updated stage.
      example:
        Role: ""
        GameKey: ""
        Description: ""
        LogGroup: ""
        State: ""
        LastUpdated: ""
        Arn: ""
        Tags: ""
        Created: ""
        Name: ""
    StageDeploymentDetails_DeploymentResult:
      allOf:
      - $ref: '#/components/schemas/DeploymentResult'
      - description: The result of the deployment.
      example:
        Message: ""
        ResultCode: ""
    ImportGameConfigurationRequest_ImportSource:
      allOf:
      - $ref: '#/components/schemas/ImportGameConfigurationSource'
      - description: The source used to import configuration sections.
      example:
        File: ""
    StartGeneratedCodeJobRequest_Generator:
      allOf:
      - $ref: '#/components/schemas/Generator'
      - description: Properties of the generator to use for the job.
      example:
        Language: ""
        TargetPlatform: ""
        GameSdkVersion: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

