/**
 * GameSparks
 * <p/>
 *
 * The version of the OpenAPI document: 2021-08-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartGeneratedCodeJobRequest_Generator.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartGeneratedCodeJobRequest_Generator::OAIStartGeneratedCodeJobRequest_Generator(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartGeneratedCodeJobRequest_Generator::OAIStartGeneratedCodeJobRequest_Generator() {
    this->initializeModel();
}

OAIStartGeneratedCodeJobRequest_Generator::~OAIStartGeneratedCodeJobRequest_Generator() {}

void OAIStartGeneratedCodeJobRequest_Generator::initializeModel() {

    m_game_sdk_version_isSet = false;
    m_game_sdk_version_isValid = false;

    m_language_isSet = false;
    m_language_isValid = false;

    m_target_platform_isSet = false;
    m_target_platform_isValid = false;
}

void OAIStartGeneratedCodeJobRequest_Generator::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartGeneratedCodeJobRequest_Generator::fromJsonObject(QJsonObject json) {

    m_game_sdk_version_isValid = ::OpenAPI::fromJsonValue(m_game_sdk_version, json[QString("GameSdkVersion")]);
    m_game_sdk_version_isSet = !json[QString("GameSdkVersion")].isNull() && m_game_sdk_version_isValid;

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("Language")]);
    m_language_isSet = !json[QString("Language")].isNull() && m_language_isValid;

    m_target_platform_isValid = ::OpenAPI::fromJsonValue(m_target_platform, json[QString("TargetPlatform")]);
    m_target_platform_isSet = !json[QString("TargetPlatform")].isNull() && m_target_platform_isValid;
}

QString OAIStartGeneratedCodeJobRequest_Generator::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartGeneratedCodeJobRequest_Generator::asJsonObject() const {
    QJsonObject obj;
    if (m_game_sdk_version_isSet) {
        obj.insert(QString("GameSdkVersion"), ::OpenAPI::toJsonValue(m_game_sdk_version));
    }
    if (m_language_isSet) {
        obj.insert(QString("Language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_target_platform_isSet) {
        obj.insert(QString("TargetPlatform"), ::OpenAPI::toJsonValue(m_target_platform));
    }
    return obj;
}

QString OAIStartGeneratedCodeJobRequest_Generator::getGameSdkVersion() const {
    return m_game_sdk_version;
}
void OAIStartGeneratedCodeJobRequest_Generator::setGameSdkVersion(const QString &game_sdk_version) {
    m_game_sdk_version = game_sdk_version;
    m_game_sdk_version_isSet = true;
}

bool OAIStartGeneratedCodeJobRequest_Generator::is_game_sdk_version_Set() const{
    return m_game_sdk_version_isSet;
}

bool OAIStartGeneratedCodeJobRequest_Generator::is_game_sdk_version_Valid() const{
    return m_game_sdk_version_isValid;
}

QString OAIStartGeneratedCodeJobRequest_Generator::getLanguage() const {
    return m_language;
}
void OAIStartGeneratedCodeJobRequest_Generator::setLanguage(const QString &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAIStartGeneratedCodeJobRequest_Generator::is_language_Set() const{
    return m_language_isSet;
}

bool OAIStartGeneratedCodeJobRequest_Generator::is_language_Valid() const{
    return m_language_isValid;
}

QString OAIStartGeneratedCodeJobRequest_Generator::getTargetPlatform() const {
    return m_target_platform;
}
void OAIStartGeneratedCodeJobRequest_Generator::setTargetPlatform(const QString &target_platform) {
    m_target_platform = target_platform;
    m_target_platform_isSet = true;
}

bool OAIStartGeneratedCodeJobRequest_Generator::is_target_platform_Set() const{
    return m_target_platform_isSet;
}

bool OAIStartGeneratedCodeJobRequest_Generator::is_target_platform_Valid() const{
    return m_target_platform_isValid;
}

bool OAIStartGeneratedCodeJobRequest_Generator::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_game_sdk_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_platform_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartGeneratedCodeJobRequest_Generator::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
