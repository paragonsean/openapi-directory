/**
 * GameSparks
 * <p/>
 *
 * The version of the OpenAPI document: 2021-08-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateSnapshotResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateSnapshotResult::OAICreateSnapshotResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateSnapshotResult::OAICreateSnapshotResult() {
    this->initializeModel();
}

OAICreateSnapshotResult::~OAICreateSnapshotResult() {}

void OAICreateSnapshotResult::initializeModel() {

    m_snapshot_isSet = false;
    m_snapshot_isValid = false;
}

void OAICreateSnapshotResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateSnapshotResult::fromJsonObject(QJsonObject json) {

    m_snapshot_isValid = ::OpenAPI::fromJsonValue(m_snapshot, json[QString("Snapshot")]);
    m_snapshot_isSet = !json[QString("Snapshot")].isNull() && m_snapshot_isValid;
}

QString OAICreateSnapshotResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateSnapshotResult::asJsonObject() const {
    QJsonObject obj;
    if (m_snapshot.isSet()) {
        obj.insert(QString("Snapshot"), ::OpenAPI::toJsonValue(m_snapshot));
    }
    return obj;
}

OAICreateSnapshotResult_Snapshot OAICreateSnapshotResult::getSnapshot() const {
    return m_snapshot;
}
void OAICreateSnapshotResult::setSnapshot(const OAICreateSnapshotResult_Snapshot &snapshot) {
    m_snapshot = snapshot;
    m_snapshot_isSet = true;
}

bool OAICreateSnapshotResult::is_snapshot_Set() const{
    return m_snapshot_isSet;
}

bool OAICreateSnapshotResult::is_snapshot_Valid() const{
    return m_snapshot_isValid;
}

bool OAICreateSnapshotResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_snapshot.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateSnapshotResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
