/**
 * GameSparks
 * <p/>
 *
 * The version of the OpenAPI document: 2021-08-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISectionModification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISectionModification::OAISectionModification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISectionModification::OAISectionModification() {
    this->initializeModel();
}

OAISectionModification::~OAISectionModification() {}

void OAISectionModification::initializeModel() {

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_section_isSet = false;
    m_section_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAISectionModification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISectionModification::fromJsonObject(QJsonObject json) {

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("Operation")]);
    m_operation_isSet = !json[QString("Operation")].isNull() && m_operation_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("Path")]);
    m_path_isSet = !json[QString("Path")].isNull() && m_path_isValid;

    m_section_isValid = ::OpenAPI::fromJsonValue(m_section, json[QString("Section")]);
    m_section_isSet = !json[QString("Section")].isNull() && m_section_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;
}

QString OAISectionModification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISectionModification::asJsonObject() const {
    QJsonObject obj;
    if (m_operation.isSet()) {
        obj.insert(QString("Operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_path_isSet) {
        obj.insert(QString("Path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_section_isSet) {
        obj.insert(QString("Section"), ::OpenAPI::toJsonValue(m_section));
    }
    if (m_value.isSet()) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

OAIOperation OAISectionModification::getOperation() const {
    return m_operation;
}
void OAISectionModification::setOperation(const OAIOperation &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAISectionModification::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAISectionModification::is_operation_Valid() const{
    return m_operation_isValid;
}

QString OAISectionModification::getPath() const {
    return m_path;
}
void OAISectionModification::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAISectionModification::is_path_Set() const{
    return m_path_isSet;
}

bool OAISectionModification::is_path_Valid() const{
    return m_path_isValid;
}

QString OAISectionModification::getSection() const {
    return m_section;
}
void OAISectionModification::setSection(const QString &section) {
    m_section = section;
    m_section_isSet = true;
}

bool OAISectionModification::is_section_Set() const{
    return m_section_isSet;
}

bool OAISectionModification::is_section_Valid() const{
    return m_section_isValid;
}

OAIObject OAISectionModification::getValue() const {
    return m_value;
}
void OAISectionModification::setValue(const OAIObject &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAISectionModification::is_value_Set() const{
    return m_value_isSet;
}

bool OAISectionModification::is_value_Valid() const{
    return m_value_isValid;
}

bool OAISectionModification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_section_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISectionModification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_operation_isValid && m_path_isValid && m_section_isValid && true;
}

} // namespace OpenAPI
