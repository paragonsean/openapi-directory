/**
 * GameSparks
 * <p/>
 *
 * The version of the OpenAPI document: 2021-08-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateGameResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateGameResult::OAIUpdateGameResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateGameResult::OAIUpdateGameResult() {
    this->initializeModel();
}

OAIUpdateGameResult::~OAIUpdateGameResult() {}

void OAIUpdateGameResult::initializeModel() {

    m_game_isSet = false;
    m_game_isValid = false;
}

void OAIUpdateGameResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateGameResult::fromJsonObject(QJsonObject json) {

    m_game_isValid = ::OpenAPI::fromJsonValue(m_game, json[QString("Game")]);
    m_game_isSet = !json[QString("Game")].isNull() && m_game_isValid;
}

QString OAIUpdateGameResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateGameResult::asJsonObject() const {
    QJsonObject obj;
    if (m_game.isSet()) {
        obj.insert(QString("Game"), ::OpenAPI::toJsonValue(m_game));
    }
    return obj;
}

OAIGetGameResult_Game OAIUpdateGameResult::getGame() const {
    return m_game;
}
void OAIUpdateGameResult::setGame(const OAIGetGameResult_Game &game) {
    m_game = game;
    m_game_isSet = true;
}

bool OAIUpdateGameResult::is_game_Set() const{
    return m_game_isSet;
}

bool OAIUpdateGameResult::is_game_Valid() const{
    return m_game_isValid;
}

bool OAIUpdateGameResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_game.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateGameResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
