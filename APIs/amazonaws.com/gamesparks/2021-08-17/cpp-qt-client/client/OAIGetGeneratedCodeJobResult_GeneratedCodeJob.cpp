/**
 * GameSparks
 * <p/>
 *
 * The version of the OpenAPI document: 2021-08-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetGeneratedCodeJobResult_GeneratedCodeJob.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetGeneratedCodeJobResult_GeneratedCodeJob::OAIGetGeneratedCodeJobResult_GeneratedCodeJob(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetGeneratedCodeJobResult_GeneratedCodeJob::OAIGetGeneratedCodeJobResult_GeneratedCodeJob() {
    this->initializeModel();
}

OAIGetGeneratedCodeJobResult_GeneratedCodeJob::~OAIGetGeneratedCodeJobResult_GeneratedCodeJob() {}

void OAIGetGeneratedCodeJobResult_GeneratedCodeJob::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_expiration_time_isSet = false;
    m_expiration_time_isValid = false;

    m_generated_code_job_id_isSet = false;
    m_generated_code_job_id_isValid = false;

    m_s3_url_isSet = false;
    m_s3_url_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIGetGeneratedCodeJobResult_GeneratedCodeJob::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetGeneratedCodeJobResult_GeneratedCodeJob::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_expiration_time_isValid = ::OpenAPI::fromJsonValue(m_expiration_time, json[QString("ExpirationTime")]);
    m_expiration_time_isSet = !json[QString("ExpirationTime")].isNull() && m_expiration_time_isValid;

    m_generated_code_job_id_isValid = ::OpenAPI::fromJsonValue(m_generated_code_job_id, json[QString("GeneratedCodeJobId")]);
    m_generated_code_job_id_isSet = !json[QString("GeneratedCodeJobId")].isNull() && m_generated_code_job_id_isValid;

    m_s3_url_isValid = ::OpenAPI::fromJsonValue(m_s3_url, json[QString("S3Url")]);
    m_s3_url_isSet = !json[QString("S3Url")].isNull() && m_s3_url_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIGetGeneratedCodeJobResult_GeneratedCodeJob::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetGeneratedCodeJobResult_GeneratedCodeJob::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_expiration_time_isSet) {
        obj.insert(QString("ExpirationTime"), ::OpenAPI::toJsonValue(m_expiration_time));
    }
    if (m_generated_code_job_id_isSet) {
        obj.insert(QString("GeneratedCodeJobId"), ::OpenAPI::toJsonValue(m_generated_code_job_id));
    }
    if (m_s3_url_isSet) {
        obj.insert(QString("S3Url"), ::OpenAPI::toJsonValue(m_s3_url));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIGetGeneratedCodeJobResult_GeneratedCodeJob::getDescription() const {
    return m_description;
}
void OAIGetGeneratedCodeJobResult_GeneratedCodeJob::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIGetGeneratedCodeJobResult_GeneratedCodeJob::getExpirationTime() const {
    return m_expiration_time;
}
void OAIGetGeneratedCodeJobResult_GeneratedCodeJob::setExpirationTime(const QDateTime &expiration_time) {
    m_expiration_time = expiration_time;
    m_expiration_time_isSet = true;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::is_expiration_time_Set() const{
    return m_expiration_time_isSet;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::is_expiration_time_Valid() const{
    return m_expiration_time_isValid;
}

QString OAIGetGeneratedCodeJobResult_GeneratedCodeJob::getGeneratedCodeJobId() const {
    return m_generated_code_job_id;
}
void OAIGetGeneratedCodeJobResult_GeneratedCodeJob::setGeneratedCodeJobId(const QString &generated_code_job_id) {
    m_generated_code_job_id = generated_code_job_id;
    m_generated_code_job_id_isSet = true;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::is_generated_code_job_id_Set() const{
    return m_generated_code_job_id_isSet;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::is_generated_code_job_id_Valid() const{
    return m_generated_code_job_id_isValid;
}

QString OAIGetGeneratedCodeJobResult_GeneratedCodeJob::getS3Url() const {
    return m_s3_url;
}
void OAIGetGeneratedCodeJobResult_GeneratedCodeJob::setS3Url(const QString &s3_url) {
    m_s3_url = s3_url;
    m_s3_url_isSet = true;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::is_s3_url_Set() const{
    return m_s3_url_isSet;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::is_s3_url_Valid() const{
    return m_s3_url_isValid;
}

OAIGeneratedCodeJobState OAIGetGeneratedCodeJobResult_GeneratedCodeJob::getStatus() const {
    return m_status;
}
void OAIGetGeneratedCodeJobResult_GeneratedCodeJob::setStatus(const OAIGeneratedCodeJobState &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_generated_code_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetGeneratedCodeJobResult_GeneratedCodeJob::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
