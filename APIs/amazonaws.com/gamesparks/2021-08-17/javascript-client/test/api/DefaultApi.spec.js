/**
 * GameSparks
 * <p/>
 *
 * The version of the OpenAPI document: 2021-08-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GameSparks);
  }
}(this, function(expect, GameSparks) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GameSparks.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createGame', function() {
      it('should call createGame successfully', function(done) {
        //uncomment below and update the code to test createGame
        //instance.createGame(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSnapshot', function() {
      it('should call createSnapshot successfully', function(done) {
        //uncomment below and update the code to test createSnapshot
        //instance.createSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStage', function() {
      it('should call createStage successfully', function(done) {
        //uncomment below and update the code to test createStage
        //instance.createStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGame', function() {
      it('should call deleteGame successfully', function(done) {
        //uncomment below and update the code to test deleteGame
        //instance.deleteGame(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStage', function() {
      it('should call deleteStage successfully', function(done) {
        //uncomment below and update the code to test deleteStage
        //instance.deleteStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disconnectPlayer', function() {
      it('should call disconnectPlayer successfully', function(done) {
        //uncomment below and update the code to test disconnectPlayer
        //instance.disconnectPlayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportSnapshot', function() {
      it('should call exportSnapshot successfully', function(done) {
        //uncomment below and update the code to test exportSnapshot
        //instance.exportSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExtension', function() {
      it('should call getExtension successfully', function(done) {
        //uncomment below and update the code to test getExtension
        //instance.getExtension(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExtensionVersion', function() {
      it('should call getExtensionVersion successfully', function(done) {
        //uncomment below and update the code to test getExtensionVersion
        //instance.getExtensionVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGame', function() {
      it('should call getGame successfully', function(done) {
        //uncomment below and update the code to test getGame
        //instance.getGame(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGameConfiguration', function() {
      it('should call getGameConfiguration successfully', function(done) {
        //uncomment below and update the code to test getGameConfiguration
        //instance.getGameConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGeneratedCodeJob', function() {
      it('should call getGeneratedCodeJob successfully', function(done) {
        //uncomment below and update the code to test getGeneratedCodeJob
        //instance.getGeneratedCodeJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPlayerConnectionStatus', function() {
      it('should call getPlayerConnectionStatus successfully', function(done) {
        //uncomment below and update the code to test getPlayerConnectionStatus
        //instance.getPlayerConnectionStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSnapshot', function() {
      it('should call getSnapshot successfully', function(done) {
        //uncomment below and update the code to test getSnapshot
        //instance.getSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStage', function() {
      it('should call getStage successfully', function(done) {
        //uncomment below and update the code to test getStage
        //instance.getStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStageDeployment', function() {
      it('should call getStageDeployment successfully', function(done) {
        //uncomment below and update the code to test getStageDeployment
        //instance.getStageDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importGameConfiguration', function() {
      it('should call importGameConfiguration successfully', function(done) {
        //uncomment below and update the code to test importGameConfiguration
        //instance.importGameConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionVersions', function() {
      it('should call listExtensionVersions successfully', function(done) {
        //uncomment below and update the code to test listExtensionVersions
        //instance.listExtensionVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensions', function() {
      it('should call listExtensions successfully', function(done) {
        //uncomment below and update the code to test listExtensions
        //instance.listExtensions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listGames', function() {
      it('should call listGames successfully', function(done) {
        //uncomment below and update the code to test listGames
        //instance.listGames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listGeneratedCodeJobs', function() {
      it('should call listGeneratedCodeJobs successfully', function(done) {
        //uncomment below and update the code to test listGeneratedCodeJobs
        //instance.listGeneratedCodeJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSnapshots', function() {
      it('should call listSnapshots successfully', function(done) {
        //uncomment below and update the code to test listSnapshots
        //instance.listSnapshots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStageDeployments', function() {
      it('should call listStageDeployments successfully', function(done) {
        //uncomment below and update the code to test listStageDeployments
        //instance.listStageDeployments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStages', function() {
      it('should call listStages successfully', function(done) {
        //uncomment below and update the code to test listStages
        //instance.listStages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startGeneratedCodeJob', function() {
      it('should call startGeneratedCodeJob successfully', function(done) {
        //uncomment below and update the code to test startGeneratedCodeJob
        //instance.startGeneratedCodeJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startStageDeployment', function() {
      it('should call startStageDeployment successfully', function(done) {
        //uncomment below and update the code to test startStageDeployment
        //instance.startStageDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGame', function() {
      it('should call updateGame successfully', function(done) {
        //uncomment below and update the code to test updateGame
        //instance.updateGame(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGameConfiguration', function() {
      it('should call updateGameConfiguration successfully', function(done) {
        //uncomment below and update the code to test updateGameConfiguration
        //instance.updateGameConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSnapshot', function() {
      it('should call updateSnapshot successfully', function(done) {
        //uncomment below and update the code to test updateSnapshot
        //instance.updateSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateStage', function() {
      it('should call updateStage successfully', function(done) {
        //uncomment below and update the code to test updateStage
        //instance.updateStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
