/**
 * GameSparks
 * <p/>
 *
 * The version of the OpenAPI document: 2021-08-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Operation from './Operation';

/**
 * The SectionModification model module.
 * @module model/SectionModification
 * @version 2021-08-17
 */
class SectionModification {
    /**
     * Constructs a new <code>SectionModification</code>.
     * A single modification to the configuration section.
     * @alias module:model/SectionModification
     * @param operation {module:model/Operation} 
     * @param path {String} 
     * @param section {String} 
     */
    constructor(operation, path, section) { 
        
        SectionModification.initialize(this, operation, path, section);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, operation, path, section) { 
        obj['Operation'] = operation;
        obj['Path'] = path;
        obj['Section'] = section;
    }

    /**
     * Constructs a <code>SectionModification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SectionModification} obj Optional instance to populate.
     * @return {module:model/SectionModification} The populated <code>SectionModification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SectionModification();

            if (data.hasOwnProperty('Operation')) {
                obj['Operation'] = ApiClient.convertToType(data['Operation'], Operation);
            }
            if (data.hasOwnProperty('Path')) {
                obj['Path'] = ApiClient.convertToType(data['Path'], 'String');
            }
            if (data.hasOwnProperty('Section')) {
                obj['Section'] = ApiClient.convertToType(data['Section'], 'String');
            }
            if (data.hasOwnProperty('Value')) {
                obj['Value'] = ApiClient.convertToType(data['Value'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SectionModification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SectionModification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SectionModification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Operation`
        if (data['Operation']) { // data not null
          Operation.validateJSON(data['Operation']);
        }
        // validate the optional field `Path`
        if (data['Path']) { // data not null
          String.validateJSON(data['Path']);
        }
        // validate the optional field `Section`
        if (data['Section']) { // data not null
          String.validateJSON(data['Section']);
        }
        // validate the optional field `Value`
        if (data['Value']) { // data not null
          Object.validateJSON(data['Value']);
        }

        return true;
    }


}

SectionModification.RequiredProperties = ["Operation", "Path", "Section"];

/**
 * @member {module:model/Operation} Operation
 */
SectionModification.prototype['Operation'] = undefined;

/**
 * @member {String} Path
 */
SectionModification.prototype['Path'] = undefined;

/**
 * @member {String} Section
 */
SectionModification.prototype['Section'] = undefined;

/**
 * @member {Object} Value
 */
SectionModification.prototype['Value'] = undefined;






export default SectionModification;

