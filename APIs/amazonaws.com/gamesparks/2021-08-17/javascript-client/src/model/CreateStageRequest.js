/**
 * GameSparks
 * <p/>
 *
 * The version of the OpenAPI document: 2021-08-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateStageRequest model module.
 * @module model/CreateStageRequest
 * @version 2021-08-17
 */
class CreateStageRequest {
    /**
     * Constructs a new <code>CreateStageRequest</code>.
     * @alias module:model/CreateStageRequest
     * @param role {String}  The Amazon Resource Name (ARN) of the role to run the game with. This role can be a game-defined role or the default role that GameSparks created. 
     * @param stageName {String} The name of the stage.
     */
    constructor(role, stageName) { 
        
        CreateStageRequest.initialize(this, role, stageName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, role, stageName) { 
        obj['Role'] = role;
        obj['StageName'] = stageName;
    }

    /**
     * Constructs a <code>CreateStageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateStageRequest} obj Optional instance to populate.
     * @return {module:model/CreateStageRequest} The populated <code>CreateStageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateStageRequest();

            if (data.hasOwnProperty('ClientToken')) {
                obj['ClientToken'] = ApiClient.convertToType(data['ClientToken'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Role')) {
                obj['Role'] = ApiClient.convertToType(data['Role'], 'String');
            }
            if (data.hasOwnProperty('StageName')) {
                obj['StageName'] = ApiClient.convertToType(data['StageName'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateStageRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateStageRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateStageRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ClientToken'] && !(typeof data['ClientToken'] === 'string' || data['ClientToken'] instanceof String)) {
            throw new Error("Expected the field `ClientToken` to be a primitive type in the JSON string but got " + data['ClientToken']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Role'] && !(typeof data['Role'] === 'string' || data['Role'] instanceof String)) {
            throw new Error("Expected the field `Role` to be a primitive type in the JSON string but got " + data['Role']);
        }
        // ensure the json data is a string
        if (data['StageName'] && !(typeof data['StageName'] === 'string' || data['StageName'] instanceof String)) {
            throw new Error("Expected the field `StageName` to be a primitive type in the JSON string but got " + data['StageName']);
        }

        return true;
    }


}

CreateStageRequest.RequiredProperties = ["Role", "StageName"];

/**
 *  A client-defined token. With an active client token in the request, this action is idempotent. 
 * @member {String} ClientToken
 */
CreateStageRequest.prototype['ClientToken'] = undefined;

/**
 * The description of the stage.
 * @member {String} Description
 */
CreateStageRequest.prototype['Description'] = undefined;

/**
 *  The Amazon Resource Name (ARN) of the role to run the game with. This role can be a game-defined role or the default role that GameSparks created. 
 * @member {String} Role
 */
CreateStageRequest.prototype['Role'] = undefined;

/**
 * The name of the stage.
 * @member {String} StageName
 */
CreateStageRequest.prototype['StageName'] = undefined;

/**
 * The list of tags to apply to the stage.
 * @member {Object.<String, String>} Tags
 */
CreateStageRequest.prototype['Tags'] = undefined;






export default CreateStageRequest;

