# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_extension_result_extension import GetExtensionResultExtension
from openapi_server import util


class GetExtensionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extension: GetExtensionResultExtension=None):
        """GetExtensionResult - a model defined in OpenAPI

        :param extension: The extension of this GetExtensionResult.
        """
        self.openapi_types = {
            'extension': GetExtensionResultExtension
        }

        self.attribute_map = {
            'extension': 'Extension'
        }

        self._extension = extension

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetExtensionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetExtensionResult of this GetExtensionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extension(self):
        """Gets the extension of this GetExtensionResult.


        :return: The extension of this GetExtensionResult.
        :rtype: GetExtensionResultExtension
        """
        return self._extension

    @extension.setter
    def extension(self, extension):
        """Sets the extension of this GetExtensionResult.


        :param extension: The extension of this GetExtensionResult.
        :type extension: GetExtensionResultExtension
        """

        self._extension = extension
