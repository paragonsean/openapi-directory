# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stage_state import StageState
from openapi_server import util


class StageSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, game_key: str=None, name: str=None, state: StageState=None, tags: Dict=None):
        """StageSummary - a model defined in OpenAPI

        :param description: The description of this StageSummary.
        :param game_key: The game_key of this StageSummary.
        :param name: The name of this StageSummary.
        :param state: The state of this StageSummary.
        :param tags: The tags of this StageSummary.
        """
        self.openapi_types = {
            'description': str,
            'game_key': str,
            'name': str,
            'state': StageState,
            'tags': Dict
        }

        self.attribute_map = {
            'description': 'Description',
            'game_key': 'GameKey',
            'name': 'Name',
            'state': 'State',
            'tags': 'Tags'
        }

        self._description = description
        self._game_key = game_key
        self._name = name
        self._state = state
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StageSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StageSummary of this StageSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this StageSummary.


        :return: The description of this StageSummary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this StageSummary.


        :param description: The description of this StageSummary.
        :type description: str
        """

        self._description = description

    @property
    def game_key(self):
        """Gets the game_key of this StageSummary.


        :return: The game_key of this StageSummary.
        :rtype: str
        """
        return self._game_key

    @game_key.setter
    def game_key(self, game_key):
        """Sets the game_key of this StageSummary.


        :param game_key: The game_key of this StageSummary.
        :type game_key: str
        """

        self._game_key = game_key

    @property
    def name(self):
        """Gets the name of this StageSummary.


        :return: The name of this StageSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StageSummary.


        :param name: The name of this StageSummary.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this StageSummary.


        :return: The state of this StageSummary.
        :rtype: StageState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this StageSummary.


        :param state: The state of this StageSummary.
        :type state: StageState
        """

        self._state = state

    @property
    def tags(self):
        """Gets the tags of this StageSummary.


        :return: The tags of this StageSummary.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this StageSummary.


        :param tags: The tags of this StageSummary.
        :type tags: Dict
        """

        self._tags = tags
