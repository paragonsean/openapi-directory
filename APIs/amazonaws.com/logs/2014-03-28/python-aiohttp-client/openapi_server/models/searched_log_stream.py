# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchedLogStream(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_stream_name: str=None, searched_completely: bool=None):
        """SearchedLogStream - a model defined in OpenAPI

        :param log_stream_name: The log_stream_name of this SearchedLogStream.
        :param searched_completely: The searched_completely of this SearchedLogStream.
        """
        self.openapi_types = {
            'log_stream_name': str,
            'searched_completely': bool
        }

        self.attribute_map = {
            'log_stream_name': 'logStreamName',
            'searched_completely': 'searchedCompletely'
        }

        self._log_stream_name = log_stream_name
        self._searched_completely = searched_completely

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchedLogStream':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchedLogStream of this SearchedLogStream.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_stream_name(self):
        """Gets the log_stream_name of this SearchedLogStream.


        :return: The log_stream_name of this SearchedLogStream.
        :rtype: str
        """
        return self._log_stream_name

    @log_stream_name.setter
    def log_stream_name(self, log_stream_name):
        """Sets the log_stream_name of this SearchedLogStream.


        :param log_stream_name: The log_stream_name of this SearchedLogStream.
        :type log_stream_name: str
        """

        self._log_stream_name = log_stream_name

    @property
    def searched_completely(self):
        """Gets the searched_completely of this SearchedLogStream.


        :return: The searched_completely of this SearchedLogStream.
        :rtype: bool
        """
        return self._searched_completely

    @searched_completely.setter
    def searched_completely(self, searched_completely):
        """Sets the searched_completely of this SearchedLogStream.


        :param searched_completely: The searched_completely of this SearchedLogStream.
        :type searched_completely: bool
        """

        self._searched_completely = searched_completely
