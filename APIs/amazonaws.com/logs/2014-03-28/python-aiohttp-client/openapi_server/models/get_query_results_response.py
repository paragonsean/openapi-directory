# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_query_results_response_statistics import GetQueryResultsResponseStatistics
from openapi_server.models.query_status import QueryStatus
from openapi_server import util


class GetQueryResultsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, results: List=None, statistics: GetQueryResultsResponseStatistics=None, status: QueryStatus=None, encryption_key: str=None):
        """GetQueryResultsResponse - a model defined in OpenAPI

        :param results: The results of this GetQueryResultsResponse.
        :param statistics: The statistics of this GetQueryResultsResponse.
        :param status: The status of this GetQueryResultsResponse.
        :param encryption_key: The encryption_key of this GetQueryResultsResponse.
        """
        self.openapi_types = {
            'results': List,
            'statistics': GetQueryResultsResponseStatistics,
            'status': QueryStatus,
            'encryption_key': str
        }

        self.attribute_map = {
            'results': 'results',
            'statistics': 'statistics',
            'status': 'status',
            'encryption_key': 'encryptionKey'
        }

        self._results = results
        self._statistics = statistics
        self._status = status
        self._encryption_key = encryption_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetQueryResultsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetQueryResultsResponse of this GetQueryResultsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def results(self):
        """Gets the results of this GetQueryResultsResponse.


        :return: The results of this GetQueryResultsResponse.
        :rtype: List
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this GetQueryResultsResponse.


        :param results: The results of this GetQueryResultsResponse.
        :type results: List
        """

        self._results = results

    @property
    def statistics(self):
        """Gets the statistics of this GetQueryResultsResponse.


        :return: The statistics of this GetQueryResultsResponse.
        :rtype: GetQueryResultsResponseStatistics
        """
        return self._statistics

    @statistics.setter
    def statistics(self, statistics):
        """Sets the statistics of this GetQueryResultsResponse.


        :param statistics: The statistics of this GetQueryResultsResponse.
        :type statistics: GetQueryResultsResponseStatistics
        """

        self._statistics = statistics

    @property
    def status(self):
        """Gets the status of this GetQueryResultsResponse.


        :return: The status of this GetQueryResultsResponse.
        :rtype: QueryStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetQueryResultsResponse.


        :param status: The status of this GetQueryResultsResponse.
        :type status: QueryStatus
        """

        self._status = status

    @property
    def encryption_key(self):
        """Gets the encryption_key of this GetQueryResultsResponse.


        :return: The encryption_key of this GetQueryResultsResponse.
        :rtype: str
        """
        return self._encryption_key

    @encryption_key.setter
    def encryption_key(self, encryption_key):
        """Sets the encryption_key of this GetQueryResultsResponse.


        :param encryption_key: The encryption_key of this GetQueryResultsResponse.
        :type encryption_key: str
        """

        self._encryption_key = encryption_key
