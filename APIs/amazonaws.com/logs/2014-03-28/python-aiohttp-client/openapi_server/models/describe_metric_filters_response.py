# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeMetricFiltersResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_filters: List=None, next_token: str=None):
        """DescribeMetricFiltersResponse - a model defined in OpenAPI

        :param metric_filters: The metric_filters of this DescribeMetricFiltersResponse.
        :param next_token: The next_token of this DescribeMetricFiltersResponse.
        """
        self.openapi_types = {
            'metric_filters': List,
            'next_token': str
        }

        self.attribute_map = {
            'metric_filters': 'metricFilters',
            'next_token': 'nextToken'
        }

        self._metric_filters = metric_filters
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeMetricFiltersResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeMetricFiltersResponse of this DescribeMetricFiltersResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_filters(self):
        """Gets the metric_filters of this DescribeMetricFiltersResponse.


        :return: The metric_filters of this DescribeMetricFiltersResponse.
        :rtype: List
        """
        return self._metric_filters

    @metric_filters.setter
    def metric_filters(self, metric_filters):
        """Sets the metric_filters of this DescribeMetricFiltersResponse.


        :param metric_filters: The metric_filters of this DescribeMetricFiltersResponse.
        :type metric_filters: List
        """

        self._metric_filters = metric_filters

    @property
    def next_token(self):
        """Gets the next_token of this DescribeMetricFiltersResponse.

        The token for the next set of items to return. The token expires after 24 hours.

        :return: The next_token of this DescribeMetricFiltersResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeMetricFiltersResponse.

        The token for the next set of items to return. The token expires after 24 hours.

        :param next_token: The next_token of this DescribeMetricFiltersResponse.
        :type next_token: str
        """
        if next_token is not None and len(next_token) < 1:
            raise ValueError("Invalid value for `next_token`, length must be greater than or equal to `1`")

        self._next_token = next_token
