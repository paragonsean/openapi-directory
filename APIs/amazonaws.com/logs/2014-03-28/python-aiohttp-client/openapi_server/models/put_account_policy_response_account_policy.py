# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy_type import PolicyType
from openapi_server.models.scope import Scope
from openapi_server import util


class PutAccountPolicyResponseAccountPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_name: str=None, policy_document: str=None, last_updated_time: int=None, policy_type: PolicyType=None, scope: Scope=None, account_id: str=None):
        """PutAccountPolicyResponseAccountPolicy - a model defined in OpenAPI

        :param policy_name: The policy_name of this PutAccountPolicyResponseAccountPolicy.
        :param policy_document: The policy_document of this PutAccountPolicyResponseAccountPolicy.
        :param last_updated_time: The last_updated_time of this PutAccountPolicyResponseAccountPolicy.
        :param policy_type: The policy_type of this PutAccountPolicyResponseAccountPolicy.
        :param scope: The scope of this PutAccountPolicyResponseAccountPolicy.
        :param account_id: The account_id of this PutAccountPolicyResponseAccountPolicy.
        """
        self.openapi_types = {
            'policy_name': str,
            'policy_document': str,
            'last_updated_time': int,
            'policy_type': PolicyType,
            'scope': Scope,
            'account_id': str
        }

        self.attribute_map = {
            'policy_name': 'policyName',
            'policy_document': 'policyDocument',
            'last_updated_time': 'lastUpdatedTime',
            'policy_type': 'policyType',
            'scope': 'scope',
            'account_id': 'accountId'
        }

        self._policy_name = policy_name
        self._policy_document = policy_document
        self._last_updated_time = last_updated_time
        self._policy_type = policy_type
        self._scope = scope
        self._account_id = account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutAccountPolicyResponseAccountPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutAccountPolicyResponse_accountPolicy of this PutAccountPolicyResponseAccountPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_name(self):
        """Gets the policy_name of this PutAccountPolicyResponseAccountPolicy.


        :return: The policy_name of this PutAccountPolicyResponseAccountPolicy.
        :rtype: str
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name):
        """Sets the policy_name of this PutAccountPolicyResponseAccountPolicy.


        :param policy_name: The policy_name of this PutAccountPolicyResponseAccountPolicy.
        :type policy_name: str
        """

        self._policy_name = policy_name

    @property
    def policy_document(self):
        """Gets the policy_document of this PutAccountPolicyResponseAccountPolicy.


        :return: The policy_document of this PutAccountPolicyResponseAccountPolicy.
        :rtype: str
        """
        return self._policy_document

    @policy_document.setter
    def policy_document(self, policy_document):
        """Sets the policy_document of this PutAccountPolicyResponseAccountPolicy.


        :param policy_document: The policy_document of this PutAccountPolicyResponseAccountPolicy.
        :type policy_document: str
        """

        self._policy_document = policy_document

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this PutAccountPolicyResponseAccountPolicy.


        :return: The last_updated_time of this PutAccountPolicyResponseAccountPolicy.
        :rtype: int
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this PutAccountPolicyResponseAccountPolicy.


        :param last_updated_time: The last_updated_time of this PutAccountPolicyResponseAccountPolicy.
        :type last_updated_time: int
        """

        self._last_updated_time = last_updated_time

    @property
    def policy_type(self):
        """Gets the policy_type of this PutAccountPolicyResponseAccountPolicy.


        :return: The policy_type of this PutAccountPolicyResponseAccountPolicy.
        :rtype: PolicyType
        """
        return self._policy_type

    @policy_type.setter
    def policy_type(self, policy_type):
        """Sets the policy_type of this PutAccountPolicyResponseAccountPolicy.


        :param policy_type: The policy_type of this PutAccountPolicyResponseAccountPolicy.
        :type policy_type: PolicyType
        """

        self._policy_type = policy_type

    @property
    def scope(self):
        """Gets the scope of this PutAccountPolicyResponseAccountPolicy.


        :return: The scope of this PutAccountPolicyResponseAccountPolicy.
        :rtype: Scope
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this PutAccountPolicyResponseAccountPolicy.


        :param scope: The scope of this PutAccountPolicyResponseAccountPolicy.
        :type scope: Scope
        """

        self._scope = scope

    @property
    def account_id(self):
        """Gets the account_id of this PutAccountPolicyResponseAccountPolicy.


        :return: The account_id of this PutAccountPolicyResponseAccountPolicy.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this PutAccountPolicyResponseAccountPolicy.


        :param account_id: The account_id of this PutAccountPolicyResponseAccountPolicy.
        :type account_id: str
        """

        self._account_id = account_id
