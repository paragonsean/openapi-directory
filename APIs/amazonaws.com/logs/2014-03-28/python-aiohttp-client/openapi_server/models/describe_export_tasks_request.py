# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.export_task_status_code import ExportTaskStatusCode
from openapi_server import util


class DescribeExportTasksRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, task_id: str=None, status_code: ExportTaskStatusCode=None, next_token: str=None, limit: int=None):
        """DescribeExportTasksRequest - a model defined in OpenAPI

        :param task_id: The task_id of this DescribeExportTasksRequest.
        :param status_code: The status_code of this DescribeExportTasksRequest.
        :param next_token: The next_token of this DescribeExportTasksRequest.
        :param limit: The limit of this DescribeExportTasksRequest.
        """
        self.openapi_types = {
            'task_id': str,
            'status_code': ExportTaskStatusCode,
            'next_token': str,
            'limit': int
        }

        self.attribute_map = {
            'task_id': 'taskId',
            'status_code': 'statusCode',
            'next_token': 'nextToken',
            'limit': 'limit'
        }

        self._task_id = task_id
        self._status_code = status_code
        self._next_token = next_token
        self._limit = limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeExportTasksRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeExportTasksRequest of this DescribeExportTasksRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_id(self):
        """Gets the task_id of this DescribeExportTasksRequest.


        :return: The task_id of this DescribeExportTasksRequest.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this DescribeExportTasksRequest.


        :param task_id: The task_id of this DescribeExportTasksRequest.
        :type task_id: str
        """

        self._task_id = task_id

    @property
    def status_code(self):
        """Gets the status_code of this DescribeExportTasksRequest.


        :return: The status_code of this DescribeExportTasksRequest.
        :rtype: ExportTaskStatusCode
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this DescribeExportTasksRequest.


        :param status_code: The status_code of this DescribeExportTasksRequest.
        :type status_code: ExportTaskStatusCode
        """

        self._status_code = status_code

    @property
    def next_token(self):
        """Gets the next_token of this DescribeExportTasksRequest.


        :return: The next_token of this DescribeExportTasksRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeExportTasksRequest.


        :param next_token: The next_token of this DescribeExportTasksRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def limit(self):
        """Gets the limit of this DescribeExportTasksRequest.


        :return: The limit of this DescribeExportTasksRequest.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this DescribeExportTasksRequest.


        :param limit: The limit of this DescribeExportTasksRequest.
        :type limit: int
        """

        self._limit = limit
