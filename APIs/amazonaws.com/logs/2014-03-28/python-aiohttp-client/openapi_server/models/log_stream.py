# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LogStream(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_stream_name: str=None, creation_time: int=None, first_event_timestamp: int=None, last_event_timestamp: int=None, last_ingestion_time: int=None, upload_sequence_token: str=None, arn: str=None, stored_bytes: int=None):
        """LogStream - a model defined in OpenAPI

        :param log_stream_name: The log_stream_name of this LogStream.
        :param creation_time: The creation_time of this LogStream.
        :param first_event_timestamp: The first_event_timestamp of this LogStream.
        :param last_event_timestamp: The last_event_timestamp of this LogStream.
        :param last_ingestion_time: The last_ingestion_time of this LogStream.
        :param upload_sequence_token: The upload_sequence_token of this LogStream.
        :param arn: The arn of this LogStream.
        :param stored_bytes: The stored_bytes of this LogStream.
        """
        self.openapi_types = {
            'log_stream_name': str,
            'creation_time': int,
            'first_event_timestamp': int,
            'last_event_timestamp': int,
            'last_ingestion_time': int,
            'upload_sequence_token': str,
            'arn': str,
            'stored_bytes': int
        }

        self.attribute_map = {
            'log_stream_name': 'logStreamName',
            'creation_time': 'creationTime',
            'first_event_timestamp': 'firstEventTimestamp',
            'last_event_timestamp': 'lastEventTimestamp',
            'last_ingestion_time': 'lastIngestionTime',
            'upload_sequence_token': 'uploadSequenceToken',
            'arn': 'arn',
            'stored_bytes': 'storedBytes'
        }

        self._log_stream_name = log_stream_name
        self._creation_time = creation_time
        self._first_event_timestamp = first_event_timestamp
        self._last_event_timestamp = last_event_timestamp
        self._last_ingestion_time = last_ingestion_time
        self._upload_sequence_token = upload_sequence_token
        self._arn = arn
        self._stored_bytes = stored_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogStream':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogStream of this LogStream.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_stream_name(self):
        """Gets the log_stream_name of this LogStream.


        :return: The log_stream_name of this LogStream.
        :rtype: str
        """
        return self._log_stream_name

    @log_stream_name.setter
    def log_stream_name(self, log_stream_name):
        """Sets the log_stream_name of this LogStream.


        :param log_stream_name: The log_stream_name of this LogStream.
        :type log_stream_name: str
        """

        self._log_stream_name = log_stream_name

    @property
    def creation_time(self):
        """Gets the creation_time of this LogStream.


        :return: The creation_time of this LogStream.
        :rtype: int
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this LogStream.


        :param creation_time: The creation_time of this LogStream.
        :type creation_time: int
        """

        self._creation_time = creation_time

    @property
    def first_event_timestamp(self):
        """Gets the first_event_timestamp of this LogStream.


        :return: The first_event_timestamp of this LogStream.
        :rtype: int
        """
        return self._first_event_timestamp

    @first_event_timestamp.setter
    def first_event_timestamp(self, first_event_timestamp):
        """Sets the first_event_timestamp of this LogStream.


        :param first_event_timestamp: The first_event_timestamp of this LogStream.
        :type first_event_timestamp: int
        """

        self._first_event_timestamp = first_event_timestamp

    @property
    def last_event_timestamp(self):
        """Gets the last_event_timestamp of this LogStream.


        :return: The last_event_timestamp of this LogStream.
        :rtype: int
        """
        return self._last_event_timestamp

    @last_event_timestamp.setter
    def last_event_timestamp(self, last_event_timestamp):
        """Sets the last_event_timestamp of this LogStream.


        :param last_event_timestamp: The last_event_timestamp of this LogStream.
        :type last_event_timestamp: int
        """

        self._last_event_timestamp = last_event_timestamp

    @property
    def last_ingestion_time(self):
        """Gets the last_ingestion_time of this LogStream.


        :return: The last_ingestion_time of this LogStream.
        :rtype: int
        """
        return self._last_ingestion_time

    @last_ingestion_time.setter
    def last_ingestion_time(self, last_ingestion_time):
        """Sets the last_ingestion_time of this LogStream.


        :param last_ingestion_time: The last_ingestion_time of this LogStream.
        :type last_ingestion_time: int
        """

        self._last_ingestion_time = last_ingestion_time

    @property
    def upload_sequence_token(self):
        """Gets the upload_sequence_token of this LogStream.


        :return: The upload_sequence_token of this LogStream.
        :rtype: str
        """
        return self._upload_sequence_token

    @upload_sequence_token.setter
    def upload_sequence_token(self, upload_sequence_token):
        """Sets the upload_sequence_token of this LogStream.


        :param upload_sequence_token: The upload_sequence_token of this LogStream.
        :type upload_sequence_token: str
        """

        self._upload_sequence_token = upload_sequence_token

    @property
    def arn(self):
        """Gets the arn of this LogStream.


        :return: The arn of this LogStream.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this LogStream.


        :param arn: The arn of this LogStream.
        :type arn: str
        """

        self._arn = arn

    @property
    def stored_bytes(self):
        """Gets the stored_bytes of this LogStream.


        :return: The stored_bytes of this LogStream.
        :rtype: int
        """
        return self._stored_bytes

    @stored_bytes.setter
    def stored_bytes(self, stored_bytes):
        """Sets the stored_bytes of this LogStream.


        :param stored_bytes: The stored_bytes of this LogStream.
        :type stored_bytes: int
        """

        self._stored_bytes = stored_bytes
