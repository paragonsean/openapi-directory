# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetricFilterMatchRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_number: int=None, event_message: str=None, extracted_values: Dict=None):
        """MetricFilterMatchRecord - a model defined in OpenAPI

        :param event_number: The event_number of this MetricFilterMatchRecord.
        :param event_message: The event_message of this MetricFilterMatchRecord.
        :param extracted_values: The extracted_values of this MetricFilterMatchRecord.
        """
        self.openapi_types = {
            'event_number': int,
            'event_message': str,
            'extracted_values': Dict
        }

        self.attribute_map = {
            'event_number': 'eventNumber',
            'event_message': 'eventMessage',
            'extracted_values': 'extractedValues'
        }

        self._event_number = event_number
        self._event_message = event_message
        self._extracted_values = extracted_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricFilterMatchRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricFilterMatchRecord of this MetricFilterMatchRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_number(self):
        """Gets the event_number of this MetricFilterMatchRecord.


        :return: The event_number of this MetricFilterMatchRecord.
        :rtype: int
        """
        return self._event_number

    @event_number.setter
    def event_number(self, event_number):
        """Sets the event_number of this MetricFilterMatchRecord.


        :param event_number: The event_number of this MetricFilterMatchRecord.
        :type event_number: int
        """

        self._event_number = event_number

    @property
    def event_message(self):
        """Gets the event_message of this MetricFilterMatchRecord.


        :return: The event_message of this MetricFilterMatchRecord.
        :rtype: str
        """
        return self._event_message

    @event_message.setter
    def event_message(self, event_message):
        """Sets the event_message of this MetricFilterMatchRecord.


        :param event_message: The event_message of this MetricFilterMatchRecord.
        :type event_message: str
        """

        self._event_message = event_message

    @property
    def extracted_values(self):
        """Gets the extracted_values of this MetricFilterMatchRecord.


        :return: The extracted_values of this MetricFilterMatchRecord.
        :rtype: Dict
        """
        return self._extracted_values

    @extracted_values.setter
    def extracted_values(self, extracted_values):
        """Sets the extracted_values of this MetricFilterMatchRecord.


        :param extracted_values: The extracted_values of this MetricFilterMatchRecord.
        :type extracted_values: Dict
        """

        self._extracted_values = extracted_values
