# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutDestinationPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_name: str=None, access_policy: str=None, force_update: bool=None):
        """PutDestinationPolicyRequest - a model defined in OpenAPI

        :param destination_name: The destination_name of this PutDestinationPolicyRequest.
        :param access_policy: The access_policy of this PutDestinationPolicyRequest.
        :param force_update: The force_update of this PutDestinationPolicyRequest.
        """
        self.openapi_types = {
            'destination_name': str,
            'access_policy': str,
            'force_update': bool
        }

        self.attribute_map = {
            'destination_name': 'destinationName',
            'access_policy': 'accessPolicy',
            'force_update': 'forceUpdate'
        }

        self._destination_name = destination_name
        self._access_policy = access_policy
        self._force_update = force_update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutDestinationPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutDestinationPolicyRequest of this PutDestinationPolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_name(self):
        """Gets the destination_name of this PutDestinationPolicyRequest.


        :return: The destination_name of this PutDestinationPolicyRequest.
        :rtype: str
        """
        return self._destination_name

    @destination_name.setter
    def destination_name(self, destination_name):
        """Sets the destination_name of this PutDestinationPolicyRequest.


        :param destination_name: The destination_name of this PutDestinationPolicyRequest.
        :type destination_name: str
        """
        if destination_name is None:
            raise ValueError("Invalid value for `destination_name`, must not be `None`")

        self._destination_name = destination_name

    @property
    def access_policy(self):
        """Gets the access_policy of this PutDestinationPolicyRequest.


        :return: The access_policy of this PutDestinationPolicyRequest.
        :rtype: str
        """
        return self._access_policy

    @access_policy.setter
    def access_policy(self, access_policy):
        """Sets the access_policy of this PutDestinationPolicyRequest.


        :param access_policy: The access_policy of this PutDestinationPolicyRequest.
        :type access_policy: str
        """
        if access_policy is None:
            raise ValueError("Invalid value for `access_policy`, must not be `None`")

        self._access_policy = access_policy

    @property
    def force_update(self):
        """Gets the force_update of this PutDestinationPolicyRequest.


        :return: The force_update of this PutDestinationPolicyRequest.
        :rtype: bool
        """
        return self._force_update

    @force_update.setter
    def force_update(self, force_update):
        """Sets the force_update of this PutDestinationPolicyRequest.


        :param force_update: The force_update of this PutDestinationPolicyRequest.
        :type force_update: bool
        """

        self._force_update = force_update
