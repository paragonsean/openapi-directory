# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssociateKmsKeyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_group_name: str=None, kms_key_id: str=None, resource_identifier: str=None):
        """AssociateKmsKeyRequest - a model defined in OpenAPI

        :param log_group_name: The log_group_name of this AssociateKmsKeyRequest.
        :param kms_key_id: The kms_key_id of this AssociateKmsKeyRequest.
        :param resource_identifier: The resource_identifier of this AssociateKmsKeyRequest.
        """
        self.openapi_types = {
            'log_group_name': str,
            'kms_key_id': str,
            'resource_identifier': str
        }

        self.attribute_map = {
            'log_group_name': 'logGroupName',
            'kms_key_id': 'kmsKeyId',
            'resource_identifier': 'resourceIdentifier'
        }

        self._log_group_name = log_group_name
        self._kms_key_id = kms_key_id
        self._resource_identifier = resource_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociateKmsKeyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociateKmsKeyRequest of this AssociateKmsKeyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_group_name(self):
        """Gets the log_group_name of this AssociateKmsKeyRequest.


        :return: The log_group_name of this AssociateKmsKeyRequest.
        :rtype: str
        """
        return self._log_group_name

    @log_group_name.setter
    def log_group_name(self, log_group_name):
        """Sets the log_group_name of this AssociateKmsKeyRequest.


        :param log_group_name: The log_group_name of this AssociateKmsKeyRequest.
        :type log_group_name: str
        """

        self._log_group_name = log_group_name

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this AssociateKmsKeyRequest.


        :return: The kms_key_id of this AssociateKmsKeyRequest.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this AssociateKmsKeyRequest.


        :param kms_key_id: The kms_key_id of this AssociateKmsKeyRequest.
        :type kms_key_id: str
        """
        if kms_key_id is None:
            raise ValueError("Invalid value for `kms_key_id`, must not be `None`")

        self._kms_key_id = kms_key_id

    @property
    def resource_identifier(self):
        """Gets the resource_identifier of this AssociateKmsKeyRequest.


        :return: The resource_identifier of this AssociateKmsKeyRequest.
        :rtype: str
        """
        return self._resource_identifier

    @resource_identifier.setter
    def resource_identifier(self, resource_identifier):
        """Sets the resource_identifier of this AssociateKmsKeyRequest.


        :param resource_identifier: The resource_identifier of this AssociateKmsKeyRequest.
        :type resource_identifier: str
        """

        self._resource_identifier = resource_identifier
