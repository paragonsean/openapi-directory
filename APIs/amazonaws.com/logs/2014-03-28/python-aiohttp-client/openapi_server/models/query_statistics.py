# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, records_matched: float=None, records_scanned: float=None, bytes_scanned: float=None):
        """QueryStatistics - a model defined in OpenAPI

        :param records_matched: The records_matched of this QueryStatistics.
        :param records_scanned: The records_scanned of this QueryStatistics.
        :param bytes_scanned: The bytes_scanned of this QueryStatistics.
        """
        self.openapi_types = {
            'records_matched': float,
            'records_scanned': float,
            'bytes_scanned': float
        }

        self.attribute_map = {
            'records_matched': 'recordsMatched',
            'records_scanned': 'recordsScanned',
            'bytes_scanned': 'bytesScanned'
        }

        self._records_matched = records_matched
        self._records_scanned = records_scanned
        self._bytes_scanned = bytes_scanned

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryStatistics of this QueryStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def records_matched(self):
        """Gets the records_matched of this QueryStatistics.


        :return: The records_matched of this QueryStatistics.
        :rtype: float
        """
        return self._records_matched

    @records_matched.setter
    def records_matched(self, records_matched):
        """Sets the records_matched of this QueryStatistics.


        :param records_matched: The records_matched of this QueryStatistics.
        :type records_matched: float
        """

        self._records_matched = records_matched

    @property
    def records_scanned(self):
        """Gets the records_scanned of this QueryStatistics.


        :return: The records_scanned of this QueryStatistics.
        :rtype: float
        """
        return self._records_scanned

    @records_scanned.setter
    def records_scanned(self, records_scanned):
        """Sets the records_scanned of this QueryStatistics.


        :param records_scanned: The records_scanned of this QueryStatistics.
        :type records_scanned: float
        """

        self._records_scanned = records_scanned

    @property
    def bytes_scanned(self):
        """Gets the bytes_scanned of this QueryStatistics.


        :return: The bytes_scanned of this QueryStatistics.
        :rtype: float
        """
        return self._bytes_scanned

    @bytes_scanned.setter
    def bytes_scanned(self, bytes_scanned):
        """Sets the bytes_scanned of this QueryStatistics.


        :param bytes_scanned: The bytes_scanned of this QueryStatistics.
        :type bytes_scanned: float
        """

        self._bytes_scanned = bytes_scanned
