# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer_master_key_spec import CustomerMasterKeySpec
from openapi_server.models.expiration_model_type import ExpirationModelType
from openapi_server.models.key_manager_type import KeyManagerType
from openapi_server.models.key_metadata_multi_region_configuration import KeyMetadataMultiRegionConfiguration
from openapi_server.models.key_metadata_xks_key_configuration import KeyMetadataXksKeyConfiguration
from openapi_server.models.key_spec import KeySpec
from openapi_server.models.key_state import KeyState
from openapi_server.models.key_usage_type import KeyUsageType
from openapi_server.models.origin_type import OriginType
from openapi_server import util


class ReplicateKeyResponseReplicaKeyMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aws_account_id: str=None, key_id: str=None, arn: str=None, creation_date: datetime=None, enabled: bool=None, description: str=None, key_usage: KeyUsageType=None, key_state: KeyState=None, deletion_date: datetime=None, valid_to: datetime=None, origin: OriginType=None, custom_key_store_id: str=None, cloud_hsm_cluster_id: str=None, expiration_model: ExpirationModelType=None, key_manager: KeyManagerType=None, customer_master_key_spec: CustomerMasterKeySpec=None, key_spec: KeySpec=None, encryption_algorithms: List=None, signing_algorithms: List=None, multi_region: bool=None, multi_region_configuration: KeyMetadataMultiRegionConfiguration=None, pending_deletion_window_in_days: int=None, mac_algorithms: List=None, xks_key_configuration: KeyMetadataXksKeyConfiguration=None):
        """ReplicateKeyResponseReplicaKeyMetadata - a model defined in OpenAPI

        :param aws_account_id: The aws_account_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :param key_id: The key_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :param arn: The arn of this ReplicateKeyResponseReplicaKeyMetadata.
        :param creation_date: The creation_date of this ReplicateKeyResponseReplicaKeyMetadata.
        :param enabled: The enabled of this ReplicateKeyResponseReplicaKeyMetadata.
        :param description: The description of this ReplicateKeyResponseReplicaKeyMetadata.
        :param key_usage: The key_usage of this ReplicateKeyResponseReplicaKeyMetadata.
        :param key_state: The key_state of this ReplicateKeyResponseReplicaKeyMetadata.
        :param deletion_date: The deletion_date of this ReplicateKeyResponseReplicaKeyMetadata.
        :param valid_to: The valid_to of this ReplicateKeyResponseReplicaKeyMetadata.
        :param origin: The origin of this ReplicateKeyResponseReplicaKeyMetadata.
        :param custom_key_store_id: The custom_key_store_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :param cloud_hsm_cluster_id: The cloud_hsm_cluster_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :param expiration_model: The expiration_model of this ReplicateKeyResponseReplicaKeyMetadata.
        :param key_manager: The key_manager of this ReplicateKeyResponseReplicaKeyMetadata.
        :param customer_master_key_spec: The customer_master_key_spec of this ReplicateKeyResponseReplicaKeyMetadata.
        :param key_spec: The key_spec of this ReplicateKeyResponseReplicaKeyMetadata.
        :param encryption_algorithms: The encryption_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.
        :param signing_algorithms: The signing_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.
        :param multi_region: The multi_region of this ReplicateKeyResponseReplicaKeyMetadata.
        :param multi_region_configuration: The multi_region_configuration of this ReplicateKeyResponseReplicaKeyMetadata.
        :param pending_deletion_window_in_days: The pending_deletion_window_in_days of this ReplicateKeyResponseReplicaKeyMetadata.
        :param mac_algorithms: The mac_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.
        :param xks_key_configuration: The xks_key_configuration of this ReplicateKeyResponseReplicaKeyMetadata.
        """
        self.openapi_types = {
            'aws_account_id': str,
            'key_id': str,
            'arn': str,
            'creation_date': datetime,
            'enabled': bool,
            'description': str,
            'key_usage': KeyUsageType,
            'key_state': KeyState,
            'deletion_date': datetime,
            'valid_to': datetime,
            'origin': OriginType,
            'custom_key_store_id': str,
            'cloud_hsm_cluster_id': str,
            'expiration_model': ExpirationModelType,
            'key_manager': KeyManagerType,
            'customer_master_key_spec': CustomerMasterKeySpec,
            'key_spec': KeySpec,
            'encryption_algorithms': List,
            'signing_algorithms': List,
            'multi_region': bool,
            'multi_region_configuration': KeyMetadataMultiRegionConfiguration,
            'pending_deletion_window_in_days': int,
            'mac_algorithms': List,
            'xks_key_configuration': KeyMetadataXksKeyConfiguration
        }

        self.attribute_map = {
            'aws_account_id': 'AWSAccountId',
            'key_id': 'KeyId',
            'arn': 'Arn',
            'creation_date': 'CreationDate',
            'enabled': 'Enabled',
            'description': 'Description',
            'key_usage': 'KeyUsage',
            'key_state': 'KeyState',
            'deletion_date': 'DeletionDate',
            'valid_to': 'ValidTo',
            'origin': 'Origin',
            'custom_key_store_id': 'CustomKeyStoreId',
            'cloud_hsm_cluster_id': 'CloudHsmClusterId',
            'expiration_model': 'ExpirationModel',
            'key_manager': 'KeyManager',
            'customer_master_key_spec': 'CustomerMasterKeySpec',
            'key_spec': 'KeySpec',
            'encryption_algorithms': 'EncryptionAlgorithms',
            'signing_algorithms': 'SigningAlgorithms',
            'multi_region': 'MultiRegion',
            'multi_region_configuration': 'MultiRegionConfiguration',
            'pending_deletion_window_in_days': 'PendingDeletionWindowInDays',
            'mac_algorithms': 'MacAlgorithms',
            'xks_key_configuration': 'XksKeyConfiguration'
        }

        self._aws_account_id = aws_account_id
        self._key_id = key_id
        self._arn = arn
        self._creation_date = creation_date
        self._enabled = enabled
        self._description = description
        self._key_usage = key_usage
        self._key_state = key_state
        self._deletion_date = deletion_date
        self._valid_to = valid_to
        self._origin = origin
        self._custom_key_store_id = custom_key_store_id
        self._cloud_hsm_cluster_id = cloud_hsm_cluster_id
        self._expiration_model = expiration_model
        self._key_manager = key_manager
        self._customer_master_key_spec = customer_master_key_spec
        self._key_spec = key_spec
        self._encryption_algorithms = encryption_algorithms
        self._signing_algorithms = signing_algorithms
        self._multi_region = multi_region
        self._multi_region_configuration = multi_region_configuration
        self._pending_deletion_window_in_days = pending_deletion_window_in_days
        self._mac_algorithms = mac_algorithms
        self._xks_key_configuration = xks_key_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplicateKeyResponseReplicaKeyMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplicateKeyResponse_ReplicaKeyMetadata of this ReplicateKeyResponseReplicaKeyMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aws_account_id(self):
        """Gets the aws_account_id of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The aws_account_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: str
        """
        return self._aws_account_id

    @aws_account_id.setter
    def aws_account_id(self, aws_account_id):
        """Sets the aws_account_id of this ReplicateKeyResponseReplicaKeyMetadata.


        :param aws_account_id: The aws_account_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :type aws_account_id: str
        """

        self._aws_account_id = aws_account_id

    @property
    def key_id(self):
        """Gets the key_id of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The key_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this ReplicateKeyResponseReplicaKeyMetadata.


        :param key_id: The key_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :type key_id: str
        """
        if key_id is None:
            raise ValueError("Invalid value for `key_id`, must not be `None`")

        self._key_id = key_id

    @property
    def arn(self):
        """Gets the arn of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The arn of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ReplicateKeyResponseReplicaKeyMetadata.


        :param arn: The arn of this ReplicateKeyResponseReplicaKeyMetadata.
        :type arn: str
        """

        self._arn = arn

    @property
    def creation_date(self):
        """Gets the creation_date of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The creation_date of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this ReplicateKeyResponseReplicaKeyMetadata.


        :param creation_date: The creation_date of this ReplicateKeyResponseReplicaKeyMetadata.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def enabled(self):
        """Gets the enabled of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The enabled of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this ReplicateKeyResponseReplicaKeyMetadata.


        :param enabled: The enabled of this ReplicateKeyResponseReplicaKeyMetadata.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def description(self):
        """Gets the description of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The description of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ReplicateKeyResponseReplicaKeyMetadata.


        :param description: The description of this ReplicateKeyResponseReplicaKeyMetadata.
        :type description: str
        """

        self._description = description

    @property
    def key_usage(self):
        """Gets the key_usage of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The key_usage of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: KeyUsageType
        """
        return self._key_usage

    @key_usage.setter
    def key_usage(self, key_usage):
        """Sets the key_usage of this ReplicateKeyResponseReplicaKeyMetadata.


        :param key_usage: The key_usage of this ReplicateKeyResponseReplicaKeyMetadata.
        :type key_usage: KeyUsageType
        """

        self._key_usage = key_usage

    @property
    def key_state(self):
        """Gets the key_state of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The key_state of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: KeyState
        """
        return self._key_state

    @key_state.setter
    def key_state(self, key_state):
        """Sets the key_state of this ReplicateKeyResponseReplicaKeyMetadata.


        :param key_state: The key_state of this ReplicateKeyResponseReplicaKeyMetadata.
        :type key_state: KeyState
        """

        self._key_state = key_state

    @property
    def deletion_date(self):
        """Gets the deletion_date of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The deletion_date of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: datetime
        """
        return self._deletion_date

    @deletion_date.setter
    def deletion_date(self, deletion_date):
        """Sets the deletion_date of this ReplicateKeyResponseReplicaKeyMetadata.


        :param deletion_date: The deletion_date of this ReplicateKeyResponseReplicaKeyMetadata.
        :type deletion_date: datetime
        """

        self._deletion_date = deletion_date

    @property
    def valid_to(self):
        """Gets the valid_to of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The valid_to of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: datetime
        """
        return self._valid_to

    @valid_to.setter
    def valid_to(self, valid_to):
        """Sets the valid_to of this ReplicateKeyResponseReplicaKeyMetadata.


        :param valid_to: The valid_to of this ReplicateKeyResponseReplicaKeyMetadata.
        :type valid_to: datetime
        """

        self._valid_to = valid_to

    @property
    def origin(self):
        """Gets the origin of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The origin of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: OriginType
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this ReplicateKeyResponseReplicaKeyMetadata.


        :param origin: The origin of this ReplicateKeyResponseReplicaKeyMetadata.
        :type origin: OriginType
        """

        self._origin = origin

    @property
    def custom_key_store_id(self):
        """Gets the custom_key_store_id of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The custom_key_store_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: str
        """
        return self._custom_key_store_id

    @custom_key_store_id.setter
    def custom_key_store_id(self, custom_key_store_id):
        """Sets the custom_key_store_id of this ReplicateKeyResponseReplicaKeyMetadata.


        :param custom_key_store_id: The custom_key_store_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :type custom_key_store_id: str
        """

        self._custom_key_store_id = custom_key_store_id

    @property
    def cloud_hsm_cluster_id(self):
        """Gets the cloud_hsm_cluster_id of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The cloud_hsm_cluster_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: str
        """
        return self._cloud_hsm_cluster_id

    @cloud_hsm_cluster_id.setter
    def cloud_hsm_cluster_id(self, cloud_hsm_cluster_id):
        """Sets the cloud_hsm_cluster_id of this ReplicateKeyResponseReplicaKeyMetadata.


        :param cloud_hsm_cluster_id: The cloud_hsm_cluster_id of this ReplicateKeyResponseReplicaKeyMetadata.
        :type cloud_hsm_cluster_id: str
        """

        self._cloud_hsm_cluster_id = cloud_hsm_cluster_id

    @property
    def expiration_model(self):
        """Gets the expiration_model of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The expiration_model of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: ExpirationModelType
        """
        return self._expiration_model

    @expiration_model.setter
    def expiration_model(self, expiration_model):
        """Sets the expiration_model of this ReplicateKeyResponseReplicaKeyMetadata.


        :param expiration_model: The expiration_model of this ReplicateKeyResponseReplicaKeyMetadata.
        :type expiration_model: ExpirationModelType
        """

        self._expiration_model = expiration_model

    @property
    def key_manager(self):
        """Gets the key_manager of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The key_manager of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: KeyManagerType
        """
        return self._key_manager

    @key_manager.setter
    def key_manager(self, key_manager):
        """Sets the key_manager of this ReplicateKeyResponseReplicaKeyMetadata.


        :param key_manager: The key_manager of this ReplicateKeyResponseReplicaKeyMetadata.
        :type key_manager: KeyManagerType
        """

        self._key_manager = key_manager

    @property
    def customer_master_key_spec(self):
        """Gets the customer_master_key_spec of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The customer_master_key_spec of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: CustomerMasterKeySpec
        """
        return self._customer_master_key_spec

    @customer_master_key_spec.setter
    def customer_master_key_spec(self, customer_master_key_spec):
        """Sets the customer_master_key_spec of this ReplicateKeyResponseReplicaKeyMetadata.


        :param customer_master_key_spec: The customer_master_key_spec of this ReplicateKeyResponseReplicaKeyMetadata.
        :type customer_master_key_spec: CustomerMasterKeySpec
        """

        self._customer_master_key_spec = customer_master_key_spec

    @property
    def key_spec(self):
        """Gets the key_spec of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The key_spec of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: KeySpec
        """
        return self._key_spec

    @key_spec.setter
    def key_spec(self, key_spec):
        """Sets the key_spec of this ReplicateKeyResponseReplicaKeyMetadata.


        :param key_spec: The key_spec of this ReplicateKeyResponseReplicaKeyMetadata.
        :type key_spec: KeySpec
        """

        self._key_spec = key_spec

    @property
    def encryption_algorithms(self):
        """Gets the encryption_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The encryption_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: List
        """
        return self._encryption_algorithms

    @encryption_algorithms.setter
    def encryption_algorithms(self, encryption_algorithms):
        """Sets the encryption_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.


        :param encryption_algorithms: The encryption_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.
        :type encryption_algorithms: List
        """

        self._encryption_algorithms = encryption_algorithms

    @property
    def signing_algorithms(self):
        """Gets the signing_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The signing_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: List
        """
        return self._signing_algorithms

    @signing_algorithms.setter
    def signing_algorithms(self, signing_algorithms):
        """Sets the signing_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.


        :param signing_algorithms: The signing_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.
        :type signing_algorithms: List
        """

        self._signing_algorithms = signing_algorithms

    @property
    def multi_region(self):
        """Gets the multi_region of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The multi_region of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: bool
        """
        return self._multi_region

    @multi_region.setter
    def multi_region(self, multi_region):
        """Sets the multi_region of this ReplicateKeyResponseReplicaKeyMetadata.


        :param multi_region: The multi_region of this ReplicateKeyResponseReplicaKeyMetadata.
        :type multi_region: bool
        """

        self._multi_region = multi_region

    @property
    def multi_region_configuration(self):
        """Gets the multi_region_configuration of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The multi_region_configuration of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: KeyMetadataMultiRegionConfiguration
        """
        return self._multi_region_configuration

    @multi_region_configuration.setter
    def multi_region_configuration(self, multi_region_configuration):
        """Sets the multi_region_configuration of this ReplicateKeyResponseReplicaKeyMetadata.


        :param multi_region_configuration: The multi_region_configuration of this ReplicateKeyResponseReplicaKeyMetadata.
        :type multi_region_configuration: KeyMetadataMultiRegionConfiguration
        """

        self._multi_region_configuration = multi_region_configuration

    @property
    def pending_deletion_window_in_days(self):
        """Gets the pending_deletion_window_in_days of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The pending_deletion_window_in_days of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: int
        """
        return self._pending_deletion_window_in_days

    @pending_deletion_window_in_days.setter
    def pending_deletion_window_in_days(self, pending_deletion_window_in_days):
        """Sets the pending_deletion_window_in_days of this ReplicateKeyResponseReplicaKeyMetadata.


        :param pending_deletion_window_in_days: The pending_deletion_window_in_days of this ReplicateKeyResponseReplicaKeyMetadata.
        :type pending_deletion_window_in_days: int
        """

        self._pending_deletion_window_in_days = pending_deletion_window_in_days

    @property
    def mac_algorithms(self):
        """Gets the mac_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The mac_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: List
        """
        return self._mac_algorithms

    @mac_algorithms.setter
    def mac_algorithms(self, mac_algorithms):
        """Sets the mac_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.


        :param mac_algorithms: The mac_algorithms of this ReplicateKeyResponseReplicaKeyMetadata.
        :type mac_algorithms: List
        """

        self._mac_algorithms = mac_algorithms

    @property
    def xks_key_configuration(self):
        """Gets the xks_key_configuration of this ReplicateKeyResponseReplicaKeyMetadata.


        :return: The xks_key_configuration of this ReplicateKeyResponseReplicaKeyMetadata.
        :rtype: KeyMetadataXksKeyConfiguration
        """
        return self._xks_key_configuration

    @xks_key_configuration.setter
    def xks_key_configuration(self, xks_key_configuration):
        """Sets the xks_key_configuration of this ReplicateKeyResponseReplicaKeyMetadata.


        :param xks_key_configuration: The xks_key_configuration of this ReplicateKeyResponseReplicaKeyMetadata.
        :type xks_key_configuration: KeyMetadataXksKeyConfiguration
        """

        self._xks_key_configuration = xks_key_configuration
