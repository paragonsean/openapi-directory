# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListGrantsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, grants: List=None, next_marker: str=None, truncated: bool=None):
        """ListGrantsResponse - a model defined in OpenAPI

        :param grants: The grants of this ListGrantsResponse.
        :param next_marker: The next_marker of this ListGrantsResponse.
        :param truncated: The truncated of this ListGrantsResponse.
        """
        self.openapi_types = {
            'grants': List,
            'next_marker': str,
            'truncated': bool
        }

        self.attribute_map = {
            'grants': 'Grants',
            'next_marker': 'NextMarker',
            'truncated': 'Truncated'
        }

        self._grants = grants
        self._next_marker = next_marker
        self._truncated = truncated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListGrantsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListGrantsResponse of this ListGrantsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def grants(self):
        """Gets the grants of this ListGrantsResponse.


        :return: The grants of this ListGrantsResponse.
        :rtype: List
        """
        return self._grants

    @grants.setter
    def grants(self, grants):
        """Sets the grants of this ListGrantsResponse.


        :param grants: The grants of this ListGrantsResponse.
        :type grants: List
        """

        self._grants = grants

    @property
    def next_marker(self):
        """Gets the next_marker of this ListGrantsResponse.


        :return: The next_marker of this ListGrantsResponse.
        :rtype: str
        """
        return self._next_marker

    @next_marker.setter
    def next_marker(self, next_marker):
        """Sets the next_marker of this ListGrantsResponse.


        :param next_marker: The next_marker of this ListGrantsResponse.
        :type next_marker: str
        """

        self._next_marker = next_marker

    @property
    def truncated(self):
        """Gets the truncated of this ListGrantsResponse.


        :return: The truncated of this ListGrantsResponse.
        :rtype: bool
        """
        return self._truncated

    @truncated.setter
    def truncated(self, truncated):
        """Sets the truncated of this ListGrantsResponse.


        :param truncated: The truncated of this ListGrantsResponse.
        :type truncated: bool
        """

        self._truncated = truncated
