# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetParametersForImportResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_id: str=None, import_token: str=None, public_key: str=None, parameters_valid_to: datetime=None):
        """GetParametersForImportResponse - a model defined in OpenAPI

        :param key_id: The key_id of this GetParametersForImportResponse.
        :param import_token: The import_token of this GetParametersForImportResponse.
        :param public_key: The public_key of this GetParametersForImportResponse.
        :param parameters_valid_to: The parameters_valid_to of this GetParametersForImportResponse.
        """
        self.openapi_types = {
            'key_id': str,
            'import_token': str,
            'public_key': str,
            'parameters_valid_to': datetime
        }

        self.attribute_map = {
            'key_id': 'KeyId',
            'import_token': 'ImportToken',
            'public_key': 'PublicKey',
            'parameters_valid_to': 'ParametersValidTo'
        }

        self._key_id = key_id
        self._import_token = import_token
        self._public_key = public_key
        self._parameters_valid_to = parameters_valid_to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetParametersForImportResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetParametersForImportResponse of this GetParametersForImportResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_id(self):
        """Gets the key_id of this GetParametersForImportResponse.


        :return: The key_id of this GetParametersForImportResponse.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this GetParametersForImportResponse.


        :param key_id: The key_id of this GetParametersForImportResponse.
        :type key_id: str
        """

        self._key_id = key_id

    @property
    def import_token(self):
        """Gets the import_token of this GetParametersForImportResponse.


        :return: The import_token of this GetParametersForImportResponse.
        :rtype: str
        """
        return self._import_token

    @import_token.setter
    def import_token(self, import_token):
        """Sets the import_token of this GetParametersForImportResponse.


        :param import_token: The import_token of this GetParametersForImportResponse.
        :type import_token: str
        """

        self._import_token = import_token

    @property
    def public_key(self):
        """Gets the public_key of this GetParametersForImportResponse.


        :return: The public_key of this GetParametersForImportResponse.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key):
        """Sets the public_key of this GetParametersForImportResponse.


        :param public_key: The public_key of this GetParametersForImportResponse.
        :type public_key: str
        """

        self._public_key = public_key

    @property
    def parameters_valid_to(self):
        """Gets the parameters_valid_to of this GetParametersForImportResponse.


        :return: The parameters_valid_to of this GetParametersForImportResponse.
        :rtype: datetime
        """
        return self._parameters_valid_to

    @parameters_valid_to.setter
    def parameters_valid_to(self, parameters_valid_to):
        """Sets the parameters_valid_to of this GetParametersForImportResponse.


        :param parameters_valid_to: The parameters_valid_to of this GetParametersForImportResponse.
        :type parameters_valid_to: datetime
        """

        self._parameters_valid_to = parameters_valid_to
