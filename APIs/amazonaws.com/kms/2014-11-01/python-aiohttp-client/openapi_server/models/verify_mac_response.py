# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mac_algorithm_spec import MacAlgorithmSpec
from openapi_server import util


class VerifyMacResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_id: str=None, mac_valid: bool=None, mac_algorithm: MacAlgorithmSpec=None):
        """VerifyMacResponse - a model defined in OpenAPI

        :param key_id: The key_id of this VerifyMacResponse.
        :param mac_valid: The mac_valid of this VerifyMacResponse.
        :param mac_algorithm: The mac_algorithm of this VerifyMacResponse.
        """
        self.openapi_types = {
            'key_id': str,
            'mac_valid': bool,
            'mac_algorithm': MacAlgorithmSpec
        }

        self.attribute_map = {
            'key_id': 'KeyId',
            'mac_valid': 'MacValid',
            'mac_algorithm': 'MacAlgorithm'
        }

        self._key_id = key_id
        self._mac_valid = mac_valid
        self._mac_algorithm = mac_algorithm

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyMacResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VerifyMacResponse of this VerifyMacResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_id(self):
        """Gets the key_id of this VerifyMacResponse.


        :return: The key_id of this VerifyMacResponse.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this VerifyMacResponse.


        :param key_id: The key_id of this VerifyMacResponse.
        :type key_id: str
        """

        self._key_id = key_id

    @property
    def mac_valid(self):
        """Gets the mac_valid of this VerifyMacResponse.


        :return: The mac_valid of this VerifyMacResponse.
        :rtype: bool
        """
        return self._mac_valid

    @mac_valid.setter
    def mac_valid(self, mac_valid):
        """Sets the mac_valid of this VerifyMacResponse.


        :param mac_valid: The mac_valid of this VerifyMacResponse.
        :type mac_valid: bool
        """

        self._mac_valid = mac_valid

    @property
    def mac_algorithm(self):
        """Gets the mac_algorithm of this VerifyMacResponse.


        :return: The mac_algorithm of this VerifyMacResponse.
        :rtype: MacAlgorithmSpec
        """
        return self._mac_algorithm

    @mac_algorithm.setter
    def mac_algorithm(self, mac_algorithm):
        """Sets the mac_algorithm of this VerifyMacResponse.


        :param mac_algorithm: The mac_algorithm of this VerifyMacResponse.
        :type mac_algorithm: MacAlgorithmSpec
        """

        self._mac_algorithm = mac_algorithm
