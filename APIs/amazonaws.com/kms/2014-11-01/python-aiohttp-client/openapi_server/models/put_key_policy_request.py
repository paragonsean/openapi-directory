# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutKeyPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_id: str=None, policy_name: str=None, policy: str=None, bypass_policy_lockout_safety_check: bool=None):
        """PutKeyPolicyRequest - a model defined in OpenAPI

        :param key_id: The key_id of this PutKeyPolicyRequest.
        :param policy_name: The policy_name of this PutKeyPolicyRequest.
        :param policy: The policy of this PutKeyPolicyRequest.
        :param bypass_policy_lockout_safety_check: The bypass_policy_lockout_safety_check of this PutKeyPolicyRequest.
        """
        self.openapi_types = {
            'key_id': str,
            'policy_name': str,
            'policy': str,
            'bypass_policy_lockout_safety_check': bool
        }

        self.attribute_map = {
            'key_id': 'KeyId',
            'policy_name': 'PolicyName',
            'policy': 'Policy',
            'bypass_policy_lockout_safety_check': 'BypassPolicyLockoutSafetyCheck'
        }

        self._key_id = key_id
        self._policy_name = policy_name
        self._policy = policy
        self._bypass_policy_lockout_safety_check = bypass_policy_lockout_safety_check

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutKeyPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutKeyPolicyRequest of this PutKeyPolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_id(self):
        """Gets the key_id of this PutKeyPolicyRequest.


        :return: The key_id of this PutKeyPolicyRequest.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this PutKeyPolicyRequest.


        :param key_id: The key_id of this PutKeyPolicyRequest.
        :type key_id: str
        """
        if key_id is None:
            raise ValueError("Invalid value for `key_id`, must not be `None`")

        self._key_id = key_id

    @property
    def policy_name(self):
        """Gets the policy_name of this PutKeyPolicyRequest.


        :return: The policy_name of this PutKeyPolicyRequest.
        :rtype: str
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name):
        """Sets the policy_name of this PutKeyPolicyRequest.


        :param policy_name: The policy_name of this PutKeyPolicyRequest.
        :type policy_name: str
        """
        if policy_name is None:
            raise ValueError("Invalid value for `policy_name`, must not be `None`")

        self._policy_name = policy_name

    @property
    def policy(self):
        """Gets the policy of this PutKeyPolicyRequest.


        :return: The policy of this PutKeyPolicyRequest.
        :rtype: str
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this PutKeyPolicyRequest.


        :param policy: The policy of this PutKeyPolicyRequest.
        :type policy: str
        """
        if policy is None:
            raise ValueError("Invalid value for `policy`, must not be `None`")

        self._policy = policy

    @property
    def bypass_policy_lockout_safety_check(self):
        """Gets the bypass_policy_lockout_safety_check of this PutKeyPolicyRequest.


        :return: The bypass_policy_lockout_safety_check of this PutKeyPolicyRequest.
        :rtype: bool
        """
        return self._bypass_policy_lockout_safety_check

    @bypass_policy_lockout_safety_check.setter
    def bypass_policy_lockout_safety_check(self, bypass_policy_lockout_safety_check):
        """Sets the bypass_policy_lockout_safety_check of this PutKeyPolicyRequest.


        :param bypass_policy_lockout_safety_check: The bypass_policy_lockout_safety_check of this PutKeyPolicyRequest.
        :type bypass_policy_lockout_safety_check: bool
        """

        self._bypass_policy_lockout_safety_check = bypass_policy_lockout_safety_check
