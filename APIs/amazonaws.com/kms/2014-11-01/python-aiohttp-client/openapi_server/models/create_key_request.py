# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer_master_key_spec import CustomerMasterKeySpec
from openapi_server.models.key_spec import KeySpec
from openapi_server.models.key_usage_type import KeyUsageType
from openapi_server.models.origin_type import OriginType
from openapi_server import util


class CreateKeyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy: str=None, description: str=None, key_usage: KeyUsageType=None, customer_master_key_spec: CustomerMasterKeySpec=None, key_spec: KeySpec=None, origin: OriginType=None, custom_key_store_id: str=None, bypass_policy_lockout_safety_check: bool=None, tags: List=None, multi_region: bool=None, xks_key_id: str=None):
        """CreateKeyRequest - a model defined in OpenAPI

        :param policy: The policy of this CreateKeyRequest.
        :param description: The description of this CreateKeyRequest.
        :param key_usage: The key_usage of this CreateKeyRequest.
        :param customer_master_key_spec: The customer_master_key_spec of this CreateKeyRequest.
        :param key_spec: The key_spec of this CreateKeyRequest.
        :param origin: The origin of this CreateKeyRequest.
        :param custom_key_store_id: The custom_key_store_id of this CreateKeyRequest.
        :param bypass_policy_lockout_safety_check: The bypass_policy_lockout_safety_check of this CreateKeyRequest.
        :param tags: The tags of this CreateKeyRequest.
        :param multi_region: The multi_region of this CreateKeyRequest.
        :param xks_key_id: The xks_key_id of this CreateKeyRequest.
        """
        self.openapi_types = {
            'policy': str,
            'description': str,
            'key_usage': KeyUsageType,
            'customer_master_key_spec': CustomerMasterKeySpec,
            'key_spec': KeySpec,
            'origin': OriginType,
            'custom_key_store_id': str,
            'bypass_policy_lockout_safety_check': bool,
            'tags': List,
            'multi_region': bool,
            'xks_key_id': str
        }

        self.attribute_map = {
            'policy': 'Policy',
            'description': 'Description',
            'key_usage': 'KeyUsage',
            'customer_master_key_spec': 'CustomerMasterKeySpec',
            'key_spec': 'KeySpec',
            'origin': 'Origin',
            'custom_key_store_id': 'CustomKeyStoreId',
            'bypass_policy_lockout_safety_check': 'BypassPolicyLockoutSafetyCheck',
            'tags': 'Tags',
            'multi_region': 'MultiRegion',
            'xks_key_id': 'XksKeyId'
        }

        self._policy = policy
        self._description = description
        self._key_usage = key_usage
        self._customer_master_key_spec = customer_master_key_spec
        self._key_spec = key_spec
        self._origin = origin
        self._custom_key_store_id = custom_key_store_id
        self._bypass_policy_lockout_safety_check = bypass_policy_lockout_safety_check
        self._tags = tags
        self._multi_region = multi_region
        self._xks_key_id = xks_key_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateKeyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateKeyRequest of this CreateKeyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy(self):
        """Gets the policy of this CreateKeyRequest.


        :return: The policy of this CreateKeyRequest.
        :rtype: str
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this CreateKeyRequest.


        :param policy: The policy of this CreateKeyRequest.
        :type policy: str
        """

        self._policy = policy

    @property
    def description(self):
        """Gets the description of this CreateKeyRequest.


        :return: The description of this CreateKeyRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateKeyRequest.


        :param description: The description of this CreateKeyRequest.
        :type description: str
        """

        self._description = description

    @property
    def key_usage(self):
        """Gets the key_usage of this CreateKeyRequest.


        :return: The key_usage of this CreateKeyRequest.
        :rtype: KeyUsageType
        """
        return self._key_usage

    @key_usage.setter
    def key_usage(self, key_usage):
        """Sets the key_usage of this CreateKeyRequest.


        :param key_usage: The key_usage of this CreateKeyRequest.
        :type key_usage: KeyUsageType
        """

        self._key_usage = key_usage

    @property
    def customer_master_key_spec(self):
        """Gets the customer_master_key_spec of this CreateKeyRequest.


        :return: The customer_master_key_spec of this CreateKeyRequest.
        :rtype: CustomerMasterKeySpec
        """
        return self._customer_master_key_spec

    @customer_master_key_spec.setter
    def customer_master_key_spec(self, customer_master_key_spec):
        """Sets the customer_master_key_spec of this CreateKeyRequest.


        :param customer_master_key_spec: The customer_master_key_spec of this CreateKeyRequest.
        :type customer_master_key_spec: CustomerMasterKeySpec
        """

        self._customer_master_key_spec = customer_master_key_spec

    @property
    def key_spec(self):
        """Gets the key_spec of this CreateKeyRequest.


        :return: The key_spec of this CreateKeyRequest.
        :rtype: KeySpec
        """
        return self._key_spec

    @key_spec.setter
    def key_spec(self, key_spec):
        """Sets the key_spec of this CreateKeyRequest.


        :param key_spec: The key_spec of this CreateKeyRequest.
        :type key_spec: KeySpec
        """

        self._key_spec = key_spec

    @property
    def origin(self):
        """Gets the origin of this CreateKeyRequest.


        :return: The origin of this CreateKeyRequest.
        :rtype: OriginType
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this CreateKeyRequest.


        :param origin: The origin of this CreateKeyRequest.
        :type origin: OriginType
        """

        self._origin = origin

    @property
    def custom_key_store_id(self):
        """Gets the custom_key_store_id of this CreateKeyRequest.


        :return: The custom_key_store_id of this CreateKeyRequest.
        :rtype: str
        """
        return self._custom_key_store_id

    @custom_key_store_id.setter
    def custom_key_store_id(self, custom_key_store_id):
        """Sets the custom_key_store_id of this CreateKeyRequest.


        :param custom_key_store_id: The custom_key_store_id of this CreateKeyRequest.
        :type custom_key_store_id: str
        """

        self._custom_key_store_id = custom_key_store_id

    @property
    def bypass_policy_lockout_safety_check(self):
        """Gets the bypass_policy_lockout_safety_check of this CreateKeyRequest.


        :return: The bypass_policy_lockout_safety_check of this CreateKeyRequest.
        :rtype: bool
        """
        return self._bypass_policy_lockout_safety_check

    @bypass_policy_lockout_safety_check.setter
    def bypass_policy_lockout_safety_check(self, bypass_policy_lockout_safety_check):
        """Sets the bypass_policy_lockout_safety_check of this CreateKeyRequest.


        :param bypass_policy_lockout_safety_check: The bypass_policy_lockout_safety_check of this CreateKeyRequest.
        :type bypass_policy_lockout_safety_check: bool
        """

        self._bypass_policy_lockout_safety_check = bypass_policy_lockout_safety_check

    @property
    def tags(self):
        """Gets the tags of this CreateKeyRequest.


        :return: The tags of this CreateKeyRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateKeyRequest.


        :param tags: The tags of this CreateKeyRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def multi_region(self):
        """Gets the multi_region of this CreateKeyRequest.


        :return: The multi_region of this CreateKeyRequest.
        :rtype: bool
        """
        return self._multi_region

    @multi_region.setter
    def multi_region(self, multi_region):
        """Sets the multi_region of this CreateKeyRequest.


        :param multi_region: The multi_region of this CreateKeyRequest.
        :type multi_region: bool
        """

        self._multi_region = multi_region

    @property
    def xks_key_id(self):
        """Gets the xks_key_id of this CreateKeyRequest.


        :return: The xks_key_id of this CreateKeyRequest.
        :rtype: str
        """
        return self._xks_key_id

    @xks_key_id.setter
    def xks_key_id(self, xks_key_id):
        """Sets the xks_key_id of this CreateKeyRequest.


        :param xks_key_id: The xks_key_id of this CreateKeyRequest.
        :type xks_key_id: str
        """

        self._xks_key_id = xks_key_id
