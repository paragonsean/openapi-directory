# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GenerateRandomResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, plaintext: str=None, ciphertext_for_recipient: str=None):
        """GenerateRandomResponse - a model defined in OpenAPI

        :param plaintext: The plaintext of this GenerateRandomResponse.
        :param ciphertext_for_recipient: The ciphertext_for_recipient of this GenerateRandomResponse.
        """
        self.openapi_types = {
            'plaintext': str,
            'ciphertext_for_recipient': str
        }

        self.attribute_map = {
            'plaintext': 'Plaintext',
            'ciphertext_for_recipient': 'CiphertextForRecipient'
        }

        self._plaintext = plaintext
        self._ciphertext_for_recipient = ciphertext_for_recipient

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateRandomResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateRandomResponse of this GenerateRandomResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plaintext(self):
        """Gets the plaintext of this GenerateRandomResponse.


        :return: The plaintext of this GenerateRandomResponse.
        :rtype: str
        """
        return self._plaintext

    @plaintext.setter
    def plaintext(self, plaintext):
        """Sets the plaintext of this GenerateRandomResponse.


        :param plaintext: The plaintext of this GenerateRandomResponse.
        :type plaintext: str
        """

        self._plaintext = plaintext

    @property
    def ciphertext_for_recipient(self):
        """Gets the ciphertext_for_recipient of this GenerateRandomResponse.


        :return: The ciphertext_for_recipient of this GenerateRandomResponse.
        :rtype: str
        """
        return self._ciphertext_for_recipient

    @ciphertext_for_recipient.setter
    def ciphertext_for_recipient(self, ciphertext_for_recipient):
        """Sets the ciphertext_for_recipient of this GenerateRandomResponse.


        :param ciphertext_for_recipient: The ciphertext_for_recipient of this GenerateRandomResponse.
        :type ciphertext_for_recipient: str
        """

        self._ciphertext_for_recipient = ciphertext_for_recipient
