# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_key_pair_spec import DataKeyPairSpec
from openapi_server import util


class GenerateDataKeyPairWithoutPlaintextResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, private_key_ciphertext_blob: str=None, public_key: str=None, key_id: str=None, key_pair_spec: DataKeyPairSpec=None):
        """GenerateDataKeyPairWithoutPlaintextResponse - a model defined in OpenAPI

        :param private_key_ciphertext_blob: The private_key_ciphertext_blob of this GenerateDataKeyPairWithoutPlaintextResponse.
        :param public_key: The public_key of this GenerateDataKeyPairWithoutPlaintextResponse.
        :param key_id: The key_id of this GenerateDataKeyPairWithoutPlaintextResponse.
        :param key_pair_spec: The key_pair_spec of this GenerateDataKeyPairWithoutPlaintextResponse.
        """
        self.openapi_types = {
            'private_key_ciphertext_blob': str,
            'public_key': str,
            'key_id': str,
            'key_pair_spec': DataKeyPairSpec
        }

        self.attribute_map = {
            'private_key_ciphertext_blob': 'PrivateKeyCiphertextBlob',
            'public_key': 'PublicKey',
            'key_id': 'KeyId',
            'key_pair_spec': 'KeyPairSpec'
        }

        self._private_key_ciphertext_blob = private_key_ciphertext_blob
        self._public_key = public_key
        self._key_id = key_id
        self._key_pair_spec = key_pair_spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateDataKeyPairWithoutPlaintextResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateDataKeyPairWithoutPlaintextResponse of this GenerateDataKeyPairWithoutPlaintextResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def private_key_ciphertext_blob(self):
        """Gets the private_key_ciphertext_blob of this GenerateDataKeyPairWithoutPlaintextResponse.


        :return: The private_key_ciphertext_blob of this GenerateDataKeyPairWithoutPlaintextResponse.
        :rtype: str
        """
        return self._private_key_ciphertext_blob

    @private_key_ciphertext_blob.setter
    def private_key_ciphertext_blob(self, private_key_ciphertext_blob):
        """Sets the private_key_ciphertext_blob of this GenerateDataKeyPairWithoutPlaintextResponse.


        :param private_key_ciphertext_blob: The private_key_ciphertext_blob of this GenerateDataKeyPairWithoutPlaintextResponse.
        :type private_key_ciphertext_blob: str
        """

        self._private_key_ciphertext_blob = private_key_ciphertext_blob

    @property
    def public_key(self):
        """Gets the public_key of this GenerateDataKeyPairWithoutPlaintextResponse.


        :return: The public_key of this GenerateDataKeyPairWithoutPlaintextResponse.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key):
        """Sets the public_key of this GenerateDataKeyPairWithoutPlaintextResponse.


        :param public_key: The public_key of this GenerateDataKeyPairWithoutPlaintextResponse.
        :type public_key: str
        """

        self._public_key = public_key

    @property
    def key_id(self):
        """Gets the key_id of this GenerateDataKeyPairWithoutPlaintextResponse.


        :return: The key_id of this GenerateDataKeyPairWithoutPlaintextResponse.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this GenerateDataKeyPairWithoutPlaintextResponse.


        :param key_id: The key_id of this GenerateDataKeyPairWithoutPlaintextResponse.
        :type key_id: str
        """

        self._key_id = key_id

    @property
    def key_pair_spec(self):
        """Gets the key_pair_spec of this GenerateDataKeyPairWithoutPlaintextResponse.


        :return: The key_pair_spec of this GenerateDataKeyPairWithoutPlaintextResponse.
        :rtype: DataKeyPairSpec
        """
        return self._key_pair_spec

    @key_pair_spec.setter
    def key_pair_spec(self, key_pair_spec):
        """Sets the key_pair_spec of this GenerateDataKeyPairWithoutPlaintextResponse.


        :param key_pair_spec: The key_pair_spec of this GenerateDataKeyPairWithoutPlaintextResponse.
        :type key_pair_spec: DataKeyPairSpec
        """

        self._key_pair_spec = key_pair_spec
