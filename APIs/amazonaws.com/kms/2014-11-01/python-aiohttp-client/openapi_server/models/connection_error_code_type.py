# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectionErrorCodeType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    INVALID_CREDENTIALS = 'INVALID_CREDENTIALS'
    CLUSTER_NOT_FOUND = 'CLUSTER_NOT_FOUND'
    NETWORK_ERRORS = 'NETWORK_ERRORS'
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    INSUFFICIENT_CLOUDHSM_HSMS = 'INSUFFICIENT_CLOUDHSM_HSMS'
    USER_LOCKED_OUT = 'USER_LOCKED_OUT'
    USER_NOT_FOUND = 'USER_NOT_FOUND'
    USER_LOGGED_IN = 'USER_LOGGED_IN'
    SUBNET_NOT_FOUND = 'SUBNET_NOT_FOUND'
    INSUFFICIENT_FREE_ADDRESSES_IN_SUBNET = 'INSUFFICIENT_FREE_ADDRESSES_IN_SUBNET'
    XKS_PROXY_ACCESS_DENIED = 'XKS_PROXY_ACCESS_DENIED'
    XKS_PROXY_NOT_REACHABLE = 'XKS_PROXY_NOT_REACHABLE'
    XKS_VPC_ENDPOINT_SERVICE_NOT_FOUND = 'XKS_VPC_ENDPOINT_SERVICE_NOT_FOUND'
    XKS_PROXY_INVALID_RESPONSE = 'XKS_PROXY_INVALID_RESPONSE'
    XKS_PROXY_INVALID_CONFIGURATION = 'XKS_PROXY_INVALID_CONFIGURATION'
    XKS_VPC_ENDPOINT_SERVICE_INVALID_CONFIGURATION = 'XKS_VPC_ENDPOINT_SERVICE_INVALID_CONFIGURATION'
    XKS_PROXY_TIMED_OUT = 'XKS_PROXY_TIMED_OUT'
    XKS_PROXY_INVALID_TLS_CONFIGURATION = 'XKS_PROXY_INVALID_TLS_CONFIGURATION'

    def __init__(self):
        """ConnectionErrorCodeType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectionErrorCodeType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectionErrorCodeType of this ConnectionErrorCodeType.
        """
        return util.deserialize_model(dikt, cls)
