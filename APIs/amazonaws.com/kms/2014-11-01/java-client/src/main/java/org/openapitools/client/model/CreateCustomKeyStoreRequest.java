/*
 * AWS Key Management Service
 * <fullname>Key Management Service</fullname> <p>Key Management Service (KMS) is an encryption and key management web service. This guide describes the KMS operations that you can call programmatically. For general information about KMS, see the <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/\"> <i>Key Management Service Developer Guide</i> </a>.</p> <note> <p>KMS has replaced the term <i>customer master key (CMK)</i> with <i>KMS key</i> and <i>KMS key</i>. The concept has not changed. To prevent breaking changes, KMS is keeping some variations of this term.</p> <p>Amazon Web Services provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, macOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to KMS and other Amazon Web Services services. For example, the SDKs take care of tasks such as signing requests (see below), managing errors, and retrying requests automatically. For more information about the Amazon Web Services SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> </note> <p>We recommend that you use the Amazon Web Services SDKs to make programmatic API calls to KMS.</p> <p>If you need to use FIPS 140-2 validated cryptographic modules when communicating with Amazon Web Services, use the FIPS endpoint in your preferred Amazon Web Services Region. For more information about the available FIPS endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/kms.html#kms_region\">Service endpoints</a> in the Key Management Service topic of the <i>Amazon Web Services General Reference</i>.</p> <p>All KMS API calls must be signed and be transmitted using Transport Layer Security (TLS). KMS recommends you always use the latest supported TLS version. Clients must also support cipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic Curve Ephemeral Diffie-Hellman (ECDHE). Most modern systems such as Java 7 and later support these modes.</p> <p> <b>Signing Requests</b> </p> <p>Requests must be signed using an access key ID and a secret access key. We strongly recommend that you do not use your Amazon Web Services account root access key ID and secret access key for everyday work. You can use the access key ID and secret access key for an IAM user or you can use the Security Token Service (STS) to generate temporary security credentials and use those to sign requests. </p> <p>All KMS requests must be signed with <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> <p> <b>Logging API Requests</b> </p> <p>KMS supports CloudTrail, a service that logs Amazon Web Services API calls and related events for your Amazon Web Services account and delivers them to an Amazon S3 bucket that you specify. By using the information collected by CloudTrail, you can determine what requests were made to KMS, who made the request, when it was made, and so on. To learn more about CloudTrail, including how to turn it on and find your log files, see the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/\">CloudTrail User Guide</a>.</p> <p> <b>Additional Resources</b> </p> <p>For more information about credentials and request signing, see the following:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html\">Amazon Web Services Security Credentials</a> - This topic provides general information about the types of credentials used to access Amazon Web Services.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\">Temporary Security Credentials</a> - This section of the <i>IAM User Guide</i> describes how to create and use temporary security credentials.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a> - This set of topics walks you through the process of signing a request using an access key ID and a secret access key.</p> </li> </ul> <p> <b>Commonly Used API Operations</b> </p> <p>Of the API operations discussed in this guide, the following will prove the most useful for most applications. You will likely perform operations other than these, such as creating keys and assigning policies, by using the console.</p> <ul> <li> <p> <a>Encrypt</a> </p> </li> <li> <p> <a>Decrypt</a> </p> </li> <li> <p> <a>GenerateDataKey</a> </p> </li> <li> <p> <a>GenerateDataKeyWithoutPlaintext</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateCustomKeyStoreRequestXksProxyAuthenticationCredential;
import org.openapitools.client.model.CustomKeyStoreType;
import org.openapitools.client.model.XksProxyConnectivityType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateCustomKeyStoreRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:30.384853-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateCustomKeyStoreRequest {
  public static final String SERIALIZED_NAME_CUSTOM_KEY_STORE_NAME = "CustomKeyStoreName";
  @SerializedName(SERIALIZED_NAME_CUSTOM_KEY_STORE_NAME)
  private String customKeyStoreName;

  public static final String SERIALIZED_NAME_CLOUD_HSM_CLUSTER_ID = "CloudHsmClusterId";
  @SerializedName(SERIALIZED_NAME_CLOUD_HSM_CLUSTER_ID)
  private String cloudHsmClusterId;

  public static final String SERIALIZED_NAME_TRUST_ANCHOR_CERTIFICATE = "TrustAnchorCertificate";
  @SerializedName(SERIALIZED_NAME_TRUST_ANCHOR_CERTIFICATE)
  private String trustAnchorCertificate;

  public static final String SERIALIZED_NAME_KEY_STORE_PASSWORD = "KeyStorePassword";
  @SerializedName(SERIALIZED_NAME_KEY_STORE_PASSWORD)
  private String keyStorePassword;

  public static final String SERIALIZED_NAME_CUSTOM_KEY_STORE_TYPE = "CustomKeyStoreType";
  @SerializedName(SERIALIZED_NAME_CUSTOM_KEY_STORE_TYPE)
  private CustomKeyStoreType customKeyStoreType;

  public static final String SERIALIZED_NAME_XKS_PROXY_URI_ENDPOINT = "XksProxyUriEndpoint";
  @SerializedName(SERIALIZED_NAME_XKS_PROXY_URI_ENDPOINT)
  private String xksProxyUriEndpoint;

  public static final String SERIALIZED_NAME_XKS_PROXY_URI_PATH = "XksProxyUriPath";
  @SerializedName(SERIALIZED_NAME_XKS_PROXY_URI_PATH)
  private String xksProxyUriPath;

  public static final String SERIALIZED_NAME_XKS_PROXY_VPC_ENDPOINT_SERVICE_NAME = "XksProxyVpcEndpointServiceName";
  @SerializedName(SERIALIZED_NAME_XKS_PROXY_VPC_ENDPOINT_SERVICE_NAME)
  private String xksProxyVpcEndpointServiceName;

  public static final String SERIALIZED_NAME_XKS_PROXY_AUTHENTICATION_CREDENTIAL = "XksProxyAuthenticationCredential";
  @SerializedName(SERIALIZED_NAME_XKS_PROXY_AUTHENTICATION_CREDENTIAL)
  private CreateCustomKeyStoreRequestXksProxyAuthenticationCredential xksProxyAuthenticationCredential;

  public static final String SERIALIZED_NAME_XKS_PROXY_CONNECTIVITY = "XksProxyConnectivity";
  @SerializedName(SERIALIZED_NAME_XKS_PROXY_CONNECTIVITY)
  private XksProxyConnectivityType xksProxyConnectivity;

  public CreateCustomKeyStoreRequest() {
  }

  public CreateCustomKeyStoreRequest customKeyStoreName(String customKeyStoreName) {
    this.customKeyStoreName = customKeyStoreName;
    return this;
  }

  /**
   * Get customKeyStoreName
   * @return customKeyStoreName
   */
  @javax.annotation.Nonnull
  public String getCustomKeyStoreName() {
    return customKeyStoreName;
  }

  public void setCustomKeyStoreName(String customKeyStoreName) {
    this.customKeyStoreName = customKeyStoreName;
  }


  public CreateCustomKeyStoreRequest cloudHsmClusterId(String cloudHsmClusterId) {
    this.cloudHsmClusterId = cloudHsmClusterId;
    return this;
  }

  /**
   * Get cloudHsmClusterId
   * @return cloudHsmClusterId
   */
  @javax.annotation.Nullable
  public String getCloudHsmClusterId() {
    return cloudHsmClusterId;
  }

  public void setCloudHsmClusterId(String cloudHsmClusterId) {
    this.cloudHsmClusterId = cloudHsmClusterId;
  }


  public CreateCustomKeyStoreRequest trustAnchorCertificate(String trustAnchorCertificate) {
    this.trustAnchorCertificate = trustAnchorCertificate;
    return this;
  }

  /**
   * Get trustAnchorCertificate
   * @return trustAnchorCertificate
   */
  @javax.annotation.Nullable
  public String getTrustAnchorCertificate() {
    return trustAnchorCertificate;
  }

  public void setTrustAnchorCertificate(String trustAnchorCertificate) {
    this.trustAnchorCertificate = trustAnchorCertificate;
  }


  public CreateCustomKeyStoreRequest keyStorePassword(String keyStorePassword) {
    this.keyStorePassword = keyStorePassword;
    return this;
  }

  /**
   * Get keyStorePassword
   * @return keyStorePassword
   */
  @javax.annotation.Nullable
  public String getKeyStorePassword() {
    return keyStorePassword;
  }

  public void setKeyStorePassword(String keyStorePassword) {
    this.keyStorePassword = keyStorePassword;
  }


  public CreateCustomKeyStoreRequest customKeyStoreType(CustomKeyStoreType customKeyStoreType) {
    this.customKeyStoreType = customKeyStoreType;
    return this;
  }

  /**
   * Get customKeyStoreType
   * @return customKeyStoreType
   */
  @javax.annotation.Nullable
  public CustomKeyStoreType getCustomKeyStoreType() {
    return customKeyStoreType;
  }

  public void setCustomKeyStoreType(CustomKeyStoreType customKeyStoreType) {
    this.customKeyStoreType = customKeyStoreType;
  }


  public CreateCustomKeyStoreRequest xksProxyUriEndpoint(String xksProxyUriEndpoint) {
    this.xksProxyUriEndpoint = xksProxyUriEndpoint;
    return this;
  }

  /**
   * Get xksProxyUriEndpoint
   * @return xksProxyUriEndpoint
   */
  @javax.annotation.Nullable
  public String getXksProxyUriEndpoint() {
    return xksProxyUriEndpoint;
  }

  public void setXksProxyUriEndpoint(String xksProxyUriEndpoint) {
    this.xksProxyUriEndpoint = xksProxyUriEndpoint;
  }


  public CreateCustomKeyStoreRequest xksProxyUriPath(String xksProxyUriPath) {
    this.xksProxyUriPath = xksProxyUriPath;
    return this;
  }

  /**
   * Get xksProxyUriPath
   * @return xksProxyUriPath
   */
  @javax.annotation.Nullable
  public String getXksProxyUriPath() {
    return xksProxyUriPath;
  }

  public void setXksProxyUriPath(String xksProxyUriPath) {
    this.xksProxyUriPath = xksProxyUriPath;
  }


  public CreateCustomKeyStoreRequest xksProxyVpcEndpointServiceName(String xksProxyVpcEndpointServiceName) {
    this.xksProxyVpcEndpointServiceName = xksProxyVpcEndpointServiceName;
    return this;
  }

  /**
   * Get xksProxyVpcEndpointServiceName
   * @return xksProxyVpcEndpointServiceName
   */
  @javax.annotation.Nullable
  public String getXksProxyVpcEndpointServiceName() {
    return xksProxyVpcEndpointServiceName;
  }

  public void setXksProxyVpcEndpointServiceName(String xksProxyVpcEndpointServiceName) {
    this.xksProxyVpcEndpointServiceName = xksProxyVpcEndpointServiceName;
  }


  public CreateCustomKeyStoreRequest xksProxyAuthenticationCredential(CreateCustomKeyStoreRequestXksProxyAuthenticationCredential xksProxyAuthenticationCredential) {
    this.xksProxyAuthenticationCredential = xksProxyAuthenticationCredential;
    return this;
  }

  /**
   * Get xksProxyAuthenticationCredential
   * @return xksProxyAuthenticationCredential
   */
  @javax.annotation.Nullable
  public CreateCustomKeyStoreRequestXksProxyAuthenticationCredential getXksProxyAuthenticationCredential() {
    return xksProxyAuthenticationCredential;
  }

  public void setXksProxyAuthenticationCredential(CreateCustomKeyStoreRequestXksProxyAuthenticationCredential xksProxyAuthenticationCredential) {
    this.xksProxyAuthenticationCredential = xksProxyAuthenticationCredential;
  }


  public CreateCustomKeyStoreRequest xksProxyConnectivity(XksProxyConnectivityType xksProxyConnectivity) {
    this.xksProxyConnectivity = xksProxyConnectivity;
    return this;
  }

  /**
   * Get xksProxyConnectivity
   * @return xksProxyConnectivity
   */
  @javax.annotation.Nullable
  public XksProxyConnectivityType getXksProxyConnectivity() {
    return xksProxyConnectivity;
  }

  public void setXksProxyConnectivity(XksProxyConnectivityType xksProxyConnectivity) {
    this.xksProxyConnectivity = xksProxyConnectivity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCustomKeyStoreRequest createCustomKeyStoreRequest = (CreateCustomKeyStoreRequest) o;
    return Objects.equals(this.customKeyStoreName, createCustomKeyStoreRequest.customKeyStoreName) &&
        Objects.equals(this.cloudHsmClusterId, createCustomKeyStoreRequest.cloudHsmClusterId) &&
        Objects.equals(this.trustAnchorCertificate, createCustomKeyStoreRequest.trustAnchorCertificate) &&
        Objects.equals(this.keyStorePassword, createCustomKeyStoreRequest.keyStorePassword) &&
        Objects.equals(this.customKeyStoreType, createCustomKeyStoreRequest.customKeyStoreType) &&
        Objects.equals(this.xksProxyUriEndpoint, createCustomKeyStoreRequest.xksProxyUriEndpoint) &&
        Objects.equals(this.xksProxyUriPath, createCustomKeyStoreRequest.xksProxyUriPath) &&
        Objects.equals(this.xksProxyVpcEndpointServiceName, createCustomKeyStoreRequest.xksProxyVpcEndpointServiceName) &&
        Objects.equals(this.xksProxyAuthenticationCredential, createCustomKeyStoreRequest.xksProxyAuthenticationCredential) &&
        Objects.equals(this.xksProxyConnectivity, createCustomKeyStoreRequest.xksProxyConnectivity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customKeyStoreName, cloudHsmClusterId, trustAnchorCertificate, keyStorePassword, customKeyStoreType, xksProxyUriEndpoint, xksProxyUriPath, xksProxyVpcEndpointServiceName, xksProxyAuthenticationCredential, xksProxyConnectivity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCustomKeyStoreRequest {\n");
    sb.append("    customKeyStoreName: ").append(toIndentedString(customKeyStoreName)).append("\n");
    sb.append("    cloudHsmClusterId: ").append(toIndentedString(cloudHsmClusterId)).append("\n");
    sb.append("    trustAnchorCertificate: ").append(toIndentedString(trustAnchorCertificate)).append("\n");
    sb.append("    keyStorePassword: ").append(toIndentedString(keyStorePassword)).append("\n");
    sb.append("    customKeyStoreType: ").append(toIndentedString(customKeyStoreType)).append("\n");
    sb.append("    xksProxyUriEndpoint: ").append(toIndentedString(xksProxyUriEndpoint)).append("\n");
    sb.append("    xksProxyUriPath: ").append(toIndentedString(xksProxyUriPath)).append("\n");
    sb.append("    xksProxyVpcEndpointServiceName: ").append(toIndentedString(xksProxyVpcEndpointServiceName)).append("\n");
    sb.append("    xksProxyAuthenticationCredential: ").append(toIndentedString(xksProxyAuthenticationCredential)).append("\n");
    sb.append("    xksProxyConnectivity: ").append(toIndentedString(xksProxyConnectivity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CustomKeyStoreName");
    openapiFields.add("CloudHsmClusterId");
    openapiFields.add("TrustAnchorCertificate");
    openapiFields.add("KeyStorePassword");
    openapiFields.add("CustomKeyStoreType");
    openapiFields.add("XksProxyUriEndpoint");
    openapiFields.add("XksProxyUriPath");
    openapiFields.add("XksProxyVpcEndpointServiceName");
    openapiFields.add("XksProxyAuthenticationCredential");
    openapiFields.add("XksProxyConnectivity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CustomKeyStoreName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateCustomKeyStoreRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateCustomKeyStoreRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateCustomKeyStoreRequest is not found in the empty JSON string", CreateCustomKeyStoreRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateCustomKeyStoreRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateCustomKeyStoreRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateCustomKeyStoreRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `CustomKeyStoreName`
      String.validateJsonElement(jsonObj.get("CustomKeyStoreName"));
      // validate the optional field `CloudHsmClusterId`
      if (jsonObj.get("CloudHsmClusterId") != null && !jsonObj.get("CloudHsmClusterId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CloudHsmClusterId"));
      }
      // validate the optional field `TrustAnchorCertificate`
      if (jsonObj.get("TrustAnchorCertificate") != null && !jsonObj.get("TrustAnchorCertificate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrustAnchorCertificate"));
      }
      // validate the optional field `KeyStorePassword`
      if (jsonObj.get("KeyStorePassword") != null && !jsonObj.get("KeyStorePassword").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KeyStorePassword"));
      }
      // validate the optional field `CustomKeyStoreType`
      if (jsonObj.get("CustomKeyStoreType") != null && !jsonObj.get("CustomKeyStoreType").isJsonNull()) {
        CustomKeyStoreType.validateJsonElement(jsonObj.get("CustomKeyStoreType"));
      }
      // validate the optional field `XksProxyUriEndpoint`
      if (jsonObj.get("XksProxyUriEndpoint") != null && !jsonObj.get("XksProxyUriEndpoint").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("XksProxyUriEndpoint"));
      }
      // validate the optional field `XksProxyUriPath`
      if (jsonObj.get("XksProxyUriPath") != null && !jsonObj.get("XksProxyUriPath").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("XksProxyUriPath"));
      }
      // validate the optional field `XksProxyVpcEndpointServiceName`
      if (jsonObj.get("XksProxyVpcEndpointServiceName") != null && !jsonObj.get("XksProxyVpcEndpointServiceName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("XksProxyVpcEndpointServiceName"));
      }
      // validate the optional field `XksProxyAuthenticationCredential`
      if (jsonObj.get("XksProxyAuthenticationCredential") != null && !jsonObj.get("XksProxyAuthenticationCredential").isJsonNull()) {
        CreateCustomKeyStoreRequestXksProxyAuthenticationCredential.validateJsonElement(jsonObj.get("XksProxyAuthenticationCredential"));
      }
      // validate the optional field `XksProxyConnectivity`
      if (jsonObj.get("XksProxyConnectivity") != null && !jsonObj.get("XksProxyConnectivity").isJsonNull()) {
        XksProxyConnectivityType.validateJsonElement(jsonObj.get("XksProxyConnectivity"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateCustomKeyStoreRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateCustomKeyStoreRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateCustomKeyStoreRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateCustomKeyStoreRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateCustomKeyStoreRequest>() {
           @Override
           public void write(JsonWriter out, CreateCustomKeyStoreRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateCustomKeyStoreRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateCustomKeyStoreRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateCustomKeyStoreRequest
   * @throws IOException if the JSON string is invalid with respect to CreateCustomKeyStoreRequest
   */
  public static CreateCustomKeyStoreRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateCustomKeyStoreRequest.class);
  }

  /**
   * Convert an instance of CreateCustomKeyStoreRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

