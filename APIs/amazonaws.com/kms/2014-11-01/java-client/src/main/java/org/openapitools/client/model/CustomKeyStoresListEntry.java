/*
 * AWS Key Management Service
 * <fullname>Key Management Service</fullname> <p>Key Management Service (KMS) is an encryption and key management web service. This guide describes the KMS operations that you can call programmatically. For general information about KMS, see the <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/\"> <i>Key Management Service Developer Guide</i> </a>.</p> <note> <p>KMS has replaced the term <i>customer master key (CMK)</i> with <i>KMS key</i> and <i>KMS key</i>. The concept has not changed. To prevent breaking changes, KMS is keeping some variations of this term.</p> <p>Amazon Web Services provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, macOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to KMS and other Amazon Web Services services. For example, the SDKs take care of tasks such as signing requests (see below), managing errors, and retrying requests automatically. For more information about the Amazon Web Services SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> </note> <p>We recommend that you use the Amazon Web Services SDKs to make programmatic API calls to KMS.</p> <p>If you need to use FIPS 140-2 validated cryptographic modules when communicating with Amazon Web Services, use the FIPS endpoint in your preferred Amazon Web Services Region. For more information about the available FIPS endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/kms.html#kms_region\">Service endpoints</a> in the Key Management Service topic of the <i>Amazon Web Services General Reference</i>.</p> <p>All KMS API calls must be signed and be transmitted using Transport Layer Security (TLS). KMS recommends you always use the latest supported TLS version. Clients must also support cipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic Curve Ephemeral Diffie-Hellman (ECDHE). Most modern systems such as Java 7 and later support these modes.</p> <p> <b>Signing Requests</b> </p> <p>Requests must be signed using an access key ID and a secret access key. We strongly recommend that you do not use your Amazon Web Services account root access key ID and secret access key for everyday work. You can use the access key ID and secret access key for an IAM user or you can use the Security Token Service (STS) to generate temporary security credentials and use those to sign requests. </p> <p>All KMS requests must be signed with <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> <p> <b>Logging API Requests</b> </p> <p>KMS supports CloudTrail, a service that logs Amazon Web Services API calls and related events for your Amazon Web Services account and delivers them to an Amazon S3 bucket that you specify. By using the information collected by CloudTrail, you can determine what requests were made to KMS, who made the request, when it was made, and so on. To learn more about CloudTrail, including how to turn it on and find your log files, see the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/\">CloudTrail User Guide</a>.</p> <p> <b>Additional Resources</b> </p> <p>For more information about credentials and request signing, see the following:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html\">Amazon Web Services Security Credentials</a> - This topic provides general information about the types of credentials used to access Amazon Web Services.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\">Temporary Security Credentials</a> - This section of the <i>IAM User Guide</i> describes how to create and use temporary security credentials.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a> - This set of topics walks you through the process of signing a request using an access key ID and a secret access key.</p> </li> </ul> <p> <b>Commonly Used API Operations</b> </p> <p>Of the API operations discussed in this guide, the following will prove the most useful for most applications. You will likely perform operations other than these, such as creating keys and assigning policies, by using the console.</p> <ul> <li> <p> <a>Encrypt</a> </p> </li> <li> <p> <a>Decrypt</a> </p> </li> <li> <p> <a>GenerateDataKey</a> </p> </li> <li> <p> <a>GenerateDataKeyWithoutPlaintext</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ConnectionErrorCodeType;
import org.openapitools.client.model.ConnectionStateType;
import org.openapitools.client.model.CustomKeyStoreType;
import org.openapitools.client.model.CustomKeyStoresListEntryXksProxyConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains information about each custom key store in the custom key store list.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:30.384853-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CustomKeyStoresListEntry {
  public static final String SERIALIZED_NAME_CUSTOM_KEY_STORE_ID = "CustomKeyStoreId";
  @SerializedName(SERIALIZED_NAME_CUSTOM_KEY_STORE_ID)
  private String customKeyStoreId;

  public static final String SERIALIZED_NAME_CUSTOM_KEY_STORE_NAME = "CustomKeyStoreName";
  @SerializedName(SERIALIZED_NAME_CUSTOM_KEY_STORE_NAME)
  private String customKeyStoreName;

  public static final String SERIALIZED_NAME_CLOUD_HSM_CLUSTER_ID = "CloudHsmClusterId";
  @SerializedName(SERIALIZED_NAME_CLOUD_HSM_CLUSTER_ID)
  private String cloudHsmClusterId;

  public static final String SERIALIZED_NAME_TRUST_ANCHOR_CERTIFICATE = "TrustAnchorCertificate";
  @SerializedName(SERIALIZED_NAME_TRUST_ANCHOR_CERTIFICATE)
  private String trustAnchorCertificate;

  public static final String SERIALIZED_NAME_CONNECTION_STATE = "ConnectionState";
  @SerializedName(SERIALIZED_NAME_CONNECTION_STATE)
  private ConnectionStateType connectionState;

  public static final String SERIALIZED_NAME_CONNECTION_ERROR_CODE = "ConnectionErrorCode";
  @SerializedName(SERIALIZED_NAME_CONNECTION_ERROR_CODE)
  private ConnectionErrorCodeType connectionErrorCode;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_CUSTOM_KEY_STORE_TYPE = "CustomKeyStoreType";
  @SerializedName(SERIALIZED_NAME_CUSTOM_KEY_STORE_TYPE)
  private CustomKeyStoreType customKeyStoreType;

  public static final String SERIALIZED_NAME_XKS_PROXY_CONFIGURATION = "XksProxyConfiguration";
  @SerializedName(SERIALIZED_NAME_XKS_PROXY_CONFIGURATION)
  private CustomKeyStoresListEntryXksProxyConfiguration xksProxyConfiguration;

  public CustomKeyStoresListEntry() {
  }

  public CustomKeyStoresListEntry customKeyStoreId(String customKeyStoreId) {
    this.customKeyStoreId = customKeyStoreId;
    return this;
  }

  /**
   * Get customKeyStoreId
   * @return customKeyStoreId
   */
  @javax.annotation.Nullable
  public String getCustomKeyStoreId() {
    return customKeyStoreId;
  }

  public void setCustomKeyStoreId(String customKeyStoreId) {
    this.customKeyStoreId = customKeyStoreId;
  }


  public CustomKeyStoresListEntry customKeyStoreName(String customKeyStoreName) {
    this.customKeyStoreName = customKeyStoreName;
    return this;
  }

  /**
   * Get customKeyStoreName
   * @return customKeyStoreName
   */
  @javax.annotation.Nullable
  public String getCustomKeyStoreName() {
    return customKeyStoreName;
  }

  public void setCustomKeyStoreName(String customKeyStoreName) {
    this.customKeyStoreName = customKeyStoreName;
  }


  public CustomKeyStoresListEntry cloudHsmClusterId(String cloudHsmClusterId) {
    this.cloudHsmClusterId = cloudHsmClusterId;
    return this;
  }

  /**
   * Get cloudHsmClusterId
   * @return cloudHsmClusterId
   */
  @javax.annotation.Nullable
  public String getCloudHsmClusterId() {
    return cloudHsmClusterId;
  }

  public void setCloudHsmClusterId(String cloudHsmClusterId) {
    this.cloudHsmClusterId = cloudHsmClusterId;
  }


  public CustomKeyStoresListEntry trustAnchorCertificate(String trustAnchorCertificate) {
    this.trustAnchorCertificate = trustAnchorCertificate;
    return this;
  }

  /**
   * Get trustAnchorCertificate
   * @return trustAnchorCertificate
   */
  @javax.annotation.Nullable
  public String getTrustAnchorCertificate() {
    return trustAnchorCertificate;
  }

  public void setTrustAnchorCertificate(String trustAnchorCertificate) {
    this.trustAnchorCertificate = trustAnchorCertificate;
  }


  public CustomKeyStoresListEntry connectionState(ConnectionStateType connectionState) {
    this.connectionState = connectionState;
    return this;
  }

  /**
   * Get connectionState
   * @return connectionState
   */
  @javax.annotation.Nullable
  public ConnectionStateType getConnectionState() {
    return connectionState;
  }

  public void setConnectionState(ConnectionStateType connectionState) {
    this.connectionState = connectionState;
  }


  public CustomKeyStoresListEntry connectionErrorCode(ConnectionErrorCodeType connectionErrorCode) {
    this.connectionErrorCode = connectionErrorCode;
    return this;
  }

  /**
   * Get connectionErrorCode
   * @return connectionErrorCode
   */
  @javax.annotation.Nullable
  public ConnectionErrorCodeType getConnectionErrorCode() {
    return connectionErrorCode;
  }

  public void setConnectionErrorCode(ConnectionErrorCodeType connectionErrorCode) {
    this.connectionErrorCode = connectionErrorCode;
  }


  public CustomKeyStoresListEntry creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public CustomKeyStoresListEntry customKeyStoreType(CustomKeyStoreType customKeyStoreType) {
    this.customKeyStoreType = customKeyStoreType;
    return this;
  }

  /**
   * Get customKeyStoreType
   * @return customKeyStoreType
   */
  @javax.annotation.Nullable
  public CustomKeyStoreType getCustomKeyStoreType() {
    return customKeyStoreType;
  }

  public void setCustomKeyStoreType(CustomKeyStoreType customKeyStoreType) {
    this.customKeyStoreType = customKeyStoreType;
  }


  public CustomKeyStoresListEntry xksProxyConfiguration(CustomKeyStoresListEntryXksProxyConfiguration xksProxyConfiguration) {
    this.xksProxyConfiguration = xksProxyConfiguration;
    return this;
  }

  /**
   * Get xksProxyConfiguration
   * @return xksProxyConfiguration
   */
  @javax.annotation.Nullable
  public CustomKeyStoresListEntryXksProxyConfiguration getXksProxyConfiguration() {
    return xksProxyConfiguration;
  }

  public void setXksProxyConfiguration(CustomKeyStoresListEntryXksProxyConfiguration xksProxyConfiguration) {
    this.xksProxyConfiguration = xksProxyConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomKeyStoresListEntry customKeyStoresListEntry = (CustomKeyStoresListEntry) o;
    return Objects.equals(this.customKeyStoreId, customKeyStoresListEntry.customKeyStoreId) &&
        Objects.equals(this.customKeyStoreName, customKeyStoresListEntry.customKeyStoreName) &&
        Objects.equals(this.cloudHsmClusterId, customKeyStoresListEntry.cloudHsmClusterId) &&
        Objects.equals(this.trustAnchorCertificate, customKeyStoresListEntry.trustAnchorCertificate) &&
        Objects.equals(this.connectionState, customKeyStoresListEntry.connectionState) &&
        Objects.equals(this.connectionErrorCode, customKeyStoresListEntry.connectionErrorCode) &&
        Objects.equals(this.creationDate, customKeyStoresListEntry.creationDate) &&
        Objects.equals(this.customKeyStoreType, customKeyStoresListEntry.customKeyStoreType) &&
        Objects.equals(this.xksProxyConfiguration, customKeyStoresListEntry.xksProxyConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customKeyStoreId, customKeyStoreName, cloudHsmClusterId, trustAnchorCertificate, connectionState, connectionErrorCode, creationDate, customKeyStoreType, xksProxyConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomKeyStoresListEntry {\n");
    sb.append("    customKeyStoreId: ").append(toIndentedString(customKeyStoreId)).append("\n");
    sb.append("    customKeyStoreName: ").append(toIndentedString(customKeyStoreName)).append("\n");
    sb.append("    cloudHsmClusterId: ").append(toIndentedString(cloudHsmClusterId)).append("\n");
    sb.append("    trustAnchorCertificate: ").append(toIndentedString(trustAnchorCertificate)).append("\n");
    sb.append("    connectionState: ").append(toIndentedString(connectionState)).append("\n");
    sb.append("    connectionErrorCode: ").append(toIndentedString(connectionErrorCode)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    customKeyStoreType: ").append(toIndentedString(customKeyStoreType)).append("\n");
    sb.append("    xksProxyConfiguration: ").append(toIndentedString(xksProxyConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CustomKeyStoreId");
    openapiFields.add("CustomKeyStoreName");
    openapiFields.add("CloudHsmClusterId");
    openapiFields.add("TrustAnchorCertificate");
    openapiFields.add("ConnectionState");
    openapiFields.add("ConnectionErrorCode");
    openapiFields.add("CreationDate");
    openapiFields.add("CustomKeyStoreType");
    openapiFields.add("XksProxyConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomKeyStoresListEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomKeyStoresListEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomKeyStoresListEntry is not found in the empty JSON string", CustomKeyStoresListEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomKeyStoresListEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomKeyStoresListEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CustomKeyStoreId`
      if (jsonObj.get("CustomKeyStoreId") != null && !jsonObj.get("CustomKeyStoreId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CustomKeyStoreId"));
      }
      // validate the optional field `CustomKeyStoreName`
      if (jsonObj.get("CustomKeyStoreName") != null && !jsonObj.get("CustomKeyStoreName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CustomKeyStoreName"));
      }
      // validate the optional field `CloudHsmClusterId`
      if (jsonObj.get("CloudHsmClusterId") != null && !jsonObj.get("CloudHsmClusterId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CloudHsmClusterId"));
      }
      // validate the optional field `TrustAnchorCertificate`
      if (jsonObj.get("TrustAnchorCertificate") != null && !jsonObj.get("TrustAnchorCertificate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrustAnchorCertificate"));
      }
      // validate the optional field `ConnectionState`
      if (jsonObj.get("ConnectionState") != null && !jsonObj.get("ConnectionState").isJsonNull()) {
        ConnectionStateType.validateJsonElement(jsonObj.get("ConnectionState"));
      }
      // validate the optional field `ConnectionErrorCode`
      if (jsonObj.get("ConnectionErrorCode") != null && !jsonObj.get("ConnectionErrorCode").isJsonNull()) {
        ConnectionErrorCodeType.validateJsonElement(jsonObj.get("ConnectionErrorCode"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `CustomKeyStoreType`
      if (jsonObj.get("CustomKeyStoreType") != null && !jsonObj.get("CustomKeyStoreType").isJsonNull()) {
        CustomKeyStoreType.validateJsonElement(jsonObj.get("CustomKeyStoreType"));
      }
      // validate the optional field `XksProxyConfiguration`
      if (jsonObj.get("XksProxyConfiguration") != null && !jsonObj.get("XksProxyConfiguration").isJsonNull()) {
        CustomKeyStoresListEntryXksProxyConfiguration.validateJsonElement(jsonObj.get("XksProxyConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomKeyStoresListEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomKeyStoresListEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomKeyStoresListEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomKeyStoresListEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomKeyStoresListEntry>() {
           @Override
           public void write(JsonWriter out, CustomKeyStoresListEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomKeyStoresListEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomKeyStoresListEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomKeyStoresListEntry
   * @throws IOException if the JSON string is invalid with respect to CustomKeyStoresListEntry
   */
  public static CustomKeyStoresListEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomKeyStoresListEntry.class);
  }

  /**
   * Convert an instance of CustomKeyStoresListEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

