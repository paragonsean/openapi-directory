/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListFindingsRequest_filterCriteria.h
 *
 * 
 */

#ifndef OAIListFindingsRequest_filterCriteria_H
#define OAIListFindingsRequest_filterCriteria_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListFindingsRequest_filterCriteria : public OAIObject {
public:
    OAIListFindingsRequest_filterCriteria();
    OAIListFindingsRequest_filterCriteria(QString json);
    ~OAIListFindingsRequest_filterCriteria() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAwsAccountId() const;
    void setAwsAccountId(const QList &aws_account_id);
    bool is_aws_account_id_Set() const;
    bool is_aws_account_id_Valid() const;

    QList getCodeVulnerabilityDetectorName() const;
    void setCodeVulnerabilityDetectorName(const QList &code_vulnerability_detector_name);
    bool is_code_vulnerability_detector_name_Set() const;
    bool is_code_vulnerability_detector_name_Valid() const;

    QList getCodeVulnerabilityDetectorTags() const;
    void setCodeVulnerabilityDetectorTags(const QList &code_vulnerability_detector_tags);
    bool is_code_vulnerability_detector_tags_Set() const;
    bool is_code_vulnerability_detector_tags_Valid() const;

    QList getCodeVulnerabilityFilePath() const;
    void setCodeVulnerabilityFilePath(const QList &code_vulnerability_file_path);
    bool is_code_vulnerability_file_path_Set() const;
    bool is_code_vulnerability_file_path_Valid() const;

    QList getComponentId() const;
    void setComponentId(const QList &component_id);
    bool is_component_id_Set() const;
    bool is_component_id_Valid() const;

    QList getComponentType() const;
    void setComponentType(const QList &component_type);
    bool is_component_type_Set() const;
    bool is_component_type_Valid() const;

    QList getEc2InstanceImageId() const;
    void setEc2InstanceImageId(const QList &ec2_instance_image_id);
    bool is_ec2_instance_image_id_Set() const;
    bool is_ec2_instance_image_id_Valid() const;

    QList getEc2InstanceSubnetId() const;
    void setEc2InstanceSubnetId(const QList &ec2_instance_subnet_id);
    bool is_ec2_instance_subnet_id_Set() const;
    bool is_ec2_instance_subnet_id_Valid() const;

    QList getEc2InstanceVpcId() const;
    void setEc2InstanceVpcId(const QList &ec2_instance_vpc_id);
    bool is_ec2_instance_vpc_id_Set() const;
    bool is_ec2_instance_vpc_id_Valid() const;

    QList getEcrImageArchitecture() const;
    void setEcrImageArchitecture(const QList &ecr_image_architecture);
    bool is_ecr_image_architecture_Set() const;
    bool is_ecr_image_architecture_Valid() const;

    QList getEcrImageHash() const;
    void setEcrImageHash(const QList &ecr_image_hash);
    bool is_ecr_image_hash_Set() const;
    bool is_ecr_image_hash_Valid() const;

    QList getEcrImagePushedAt() const;
    void setEcrImagePushedAt(const QList &ecr_image_pushed_at);
    bool is_ecr_image_pushed_at_Set() const;
    bool is_ecr_image_pushed_at_Valid() const;

    QList getEcrImageRegistry() const;
    void setEcrImageRegistry(const QList &ecr_image_registry);
    bool is_ecr_image_registry_Set() const;
    bool is_ecr_image_registry_Valid() const;

    QList getEcrImageRepositoryName() const;
    void setEcrImageRepositoryName(const QList &ecr_image_repository_name);
    bool is_ecr_image_repository_name_Set() const;
    bool is_ecr_image_repository_name_Valid() const;

    QList getEcrImageTags() const;
    void setEcrImageTags(const QList &ecr_image_tags);
    bool is_ecr_image_tags_Set() const;
    bool is_ecr_image_tags_Valid() const;

    QList getEpssScore() const;
    void setEpssScore(const QList &epss_score);
    bool is_epss_score_Set() const;
    bool is_epss_score_Valid() const;

    QList getExploitAvailable() const;
    void setExploitAvailable(const QList &exploit_available);
    bool is_exploit_available_Set() const;
    bool is_exploit_available_Valid() const;

    QList getFindingArn() const;
    void setFindingArn(const QList &finding_arn);
    bool is_finding_arn_Set() const;
    bool is_finding_arn_Valid() const;

    QList getFindingStatus() const;
    void setFindingStatus(const QList &finding_status);
    bool is_finding_status_Set() const;
    bool is_finding_status_Valid() const;

    QList getFindingType() const;
    void setFindingType(const QList &finding_type);
    bool is_finding_type_Set() const;
    bool is_finding_type_Valid() const;

    QList getFirstObservedAt() const;
    void setFirstObservedAt(const QList &first_observed_at);
    bool is_first_observed_at_Set() const;
    bool is_first_observed_at_Valid() const;

    QList getFixAvailable() const;
    void setFixAvailable(const QList &fix_available);
    bool is_fix_available_Set() const;
    bool is_fix_available_Valid() const;

    QList getInspectorScore() const;
    void setInspectorScore(const QList &inspector_score);
    bool is_inspector_score_Set() const;
    bool is_inspector_score_Valid() const;

    QList getLambdaFunctionExecutionRoleArn() const;
    void setLambdaFunctionExecutionRoleArn(const QList &lambda_function_execution_role_arn);
    bool is_lambda_function_execution_role_arn_Set() const;
    bool is_lambda_function_execution_role_arn_Valid() const;

    QList getLambdaFunctionLastModifiedAt() const;
    void setLambdaFunctionLastModifiedAt(const QList &lambda_function_last_modified_at);
    bool is_lambda_function_last_modified_at_Set() const;
    bool is_lambda_function_last_modified_at_Valid() const;

    QList getLambdaFunctionLayers() const;
    void setLambdaFunctionLayers(const QList &lambda_function_layers);
    bool is_lambda_function_layers_Set() const;
    bool is_lambda_function_layers_Valid() const;

    QList getLambdaFunctionName() const;
    void setLambdaFunctionName(const QList &lambda_function_name);
    bool is_lambda_function_name_Set() const;
    bool is_lambda_function_name_Valid() const;

    QList getLambdaFunctionRuntime() const;
    void setLambdaFunctionRuntime(const QList &lambda_function_runtime);
    bool is_lambda_function_runtime_Set() const;
    bool is_lambda_function_runtime_Valid() const;

    QList getLastObservedAt() const;
    void setLastObservedAt(const QList &last_observed_at);
    bool is_last_observed_at_Set() const;
    bool is_last_observed_at_Valid() const;

    QList getNetworkProtocol() const;
    void setNetworkProtocol(const QList &network_protocol);
    bool is_network_protocol_Set() const;
    bool is_network_protocol_Valid() const;

    QList getPortRange() const;
    void setPortRange(const QList &port_range);
    bool is_port_range_Set() const;
    bool is_port_range_Valid() const;

    QList getRelatedVulnerabilities() const;
    void setRelatedVulnerabilities(const QList &related_vulnerabilities);
    bool is_related_vulnerabilities_Set() const;
    bool is_related_vulnerabilities_Valid() const;

    QList getResourceId() const;
    void setResourceId(const QList &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QList getResourceTags() const;
    void setResourceTags(const QList &resource_tags);
    bool is_resource_tags_Set() const;
    bool is_resource_tags_Valid() const;

    QList getResourceType() const;
    void setResourceType(const QList &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QList getSeverity() const;
    void setSeverity(const QList &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QList getTitle() const;
    void setTitle(const QList &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QList getUpdatedAt() const;
    void setUpdatedAt(const QList &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QList getVendorSeverity() const;
    void setVendorSeverity(const QList &vendor_severity);
    bool is_vendor_severity_Set() const;
    bool is_vendor_severity_Valid() const;

    QList getVulnerabilityId() const;
    void setVulnerabilityId(const QList &vulnerability_id);
    bool is_vulnerability_id_Set() const;
    bool is_vulnerability_id_Valid() const;

    QList getVulnerabilitySource() const;
    void setVulnerabilitySource(const QList &vulnerability_source);
    bool is_vulnerability_source_Set() const;
    bool is_vulnerability_source_Valid() const;

    QList getVulnerablePackages() const;
    void setVulnerablePackages(const QList &vulnerable_packages);
    bool is_vulnerable_packages_Set() const;
    bool is_vulnerable_packages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_aws_account_id;
    bool m_aws_account_id_isSet;
    bool m_aws_account_id_isValid;

    QList m_code_vulnerability_detector_name;
    bool m_code_vulnerability_detector_name_isSet;
    bool m_code_vulnerability_detector_name_isValid;

    QList m_code_vulnerability_detector_tags;
    bool m_code_vulnerability_detector_tags_isSet;
    bool m_code_vulnerability_detector_tags_isValid;

    QList m_code_vulnerability_file_path;
    bool m_code_vulnerability_file_path_isSet;
    bool m_code_vulnerability_file_path_isValid;

    QList m_component_id;
    bool m_component_id_isSet;
    bool m_component_id_isValid;

    QList m_component_type;
    bool m_component_type_isSet;
    bool m_component_type_isValid;

    QList m_ec2_instance_image_id;
    bool m_ec2_instance_image_id_isSet;
    bool m_ec2_instance_image_id_isValid;

    QList m_ec2_instance_subnet_id;
    bool m_ec2_instance_subnet_id_isSet;
    bool m_ec2_instance_subnet_id_isValid;

    QList m_ec2_instance_vpc_id;
    bool m_ec2_instance_vpc_id_isSet;
    bool m_ec2_instance_vpc_id_isValid;

    QList m_ecr_image_architecture;
    bool m_ecr_image_architecture_isSet;
    bool m_ecr_image_architecture_isValid;

    QList m_ecr_image_hash;
    bool m_ecr_image_hash_isSet;
    bool m_ecr_image_hash_isValid;

    QList m_ecr_image_pushed_at;
    bool m_ecr_image_pushed_at_isSet;
    bool m_ecr_image_pushed_at_isValid;

    QList m_ecr_image_registry;
    bool m_ecr_image_registry_isSet;
    bool m_ecr_image_registry_isValid;

    QList m_ecr_image_repository_name;
    bool m_ecr_image_repository_name_isSet;
    bool m_ecr_image_repository_name_isValid;

    QList m_ecr_image_tags;
    bool m_ecr_image_tags_isSet;
    bool m_ecr_image_tags_isValid;

    QList m_epss_score;
    bool m_epss_score_isSet;
    bool m_epss_score_isValid;

    QList m_exploit_available;
    bool m_exploit_available_isSet;
    bool m_exploit_available_isValid;

    QList m_finding_arn;
    bool m_finding_arn_isSet;
    bool m_finding_arn_isValid;

    QList m_finding_status;
    bool m_finding_status_isSet;
    bool m_finding_status_isValid;

    QList m_finding_type;
    bool m_finding_type_isSet;
    bool m_finding_type_isValid;

    QList m_first_observed_at;
    bool m_first_observed_at_isSet;
    bool m_first_observed_at_isValid;

    QList m_fix_available;
    bool m_fix_available_isSet;
    bool m_fix_available_isValid;

    QList m_inspector_score;
    bool m_inspector_score_isSet;
    bool m_inspector_score_isValid;

    QList m_lambda_function_execution_role_arn;
    bool m_lambda_function_execution_role_arn_isSet;
    bool m_lambda_function_execution_role_arn_isValid;

    QList m_lambda_function_last_modified_at;
    bool m_lambda_function_last_modified_at_isSet;
    bool m_lambda_function_last_modified_at_isValid;

    QList m_lambda_function_layers;
    bool m_lambda_function_layers_isSet;
    bool m_lambda_function_layers_isValid;

    QList m_lambda_function_name;
    bool m_lambda_function_name_isSet;
    bool m_lambda_function_name_isValid;

    QList m_lambda_function_runtime;
    bool m_lambda_function_runtime_isSet;
    bool m_lambda_function_runtime_isValid;

    QList m_last_observed_at;
    bool m_last_observed_at_isSet;
    bool m_last_observed_at_isValid;

    QList m_network_protocol;
    bool m_network_protocol_isSet;
    bool m_network_protocol_isValid;

    QList m_port_range;
    bool m_port_range_isSet;
    bool m_port_range_isValid;

    QList m_related_vulnerabilities;
    bool m_related_vulnerabilities_isSet;
    bool m_related_vulnerabilities_isValid;

    QList m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QList m_resource_tags;
    bool m_resource_tags_isSet;
    bool m_resource_tags_isValid;

    QList m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QList m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QList m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QList m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QList m_vendor_severity;
    bool m_vendor_severity_isSet;
    bool m_vendor_severity_isValid;

    QList m_vulnerability_id;
    bool m_vulnerability_id_isSet;
    bool m_vulnerability_id_isValid;

    QList m_vulnerability_source;
    bool m_vulnerability_source_isSet;
    bool m_vulnerability_source_isValid;

    QList m_vulnerable_packages;
    bool m_vulnerable_packages_isSet;
    bool m_vulnerable_packages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListFindingsRequest_filterCriteria)

#endif // OAIListFindingsRequest_filterCriteria_H
