/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAggregationResponse_lambdaFunctionAggregation.h
 *
 * 
 */

#ifndef OAIAggregationResponse_lambdaFunctionAggregation_H
#define OAIAggregationResponse_lambdaFunctionAggregation_H

#include <QJsonObject>

#include "OAISeverityCounts.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISeverityCounts;

class OAIAggregationResponse_lambdaFunctionAggregation : public OAIObject {
public:
    OAIAggregationResponse_lambdaFunctionAggregation();
    OAIAggregationResponse_lambdaFunctionAggregation(QString json);
    ~OAIAggregationResponse_lambdaFunctionAggregation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getFunctionName() const;
    void setFunctionName(const QString &function_name);
    bool is_function_name_Set() const;
    bool is_function_name_Valid() const;

    QMap getLambdaTags() const;
    void setLambdaTags(const QMap &lambda_tags);
    bool is_lambda_tags_Set() const;
    bool is_lambda_tags_Valid() const;

    QDateTime getLastModifiedAt() const;
    void setLastModifiedAt(const QDateTime &last_modified_at);
    bool is_last_modified_at_Set() const;
    bool is_last_modified_at_Valid() const;

    QString getResourceId() const;
    void setResourceId(const QString &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QString getRuntime() const;
    void setRuntime(const QString &runtime);
    bool is_runtime_Set() const;
    bool is_runtime_Valid() const;

    OAISeverityCounts getSeverityCounts() const;
    void setSeverityCounts(const OAISeverityCounts &severity_counts);
    bool is_severity_counts_Set() const;
    bool is_severity_counts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_function_name;
    bool m_function_name_isSet;
    bool m_function_name_isValid;

    QMap m_lambda_tags;
    bool m_lambda_tags_isSet;
    bool m_lambda_tags_isValid;

    QDateTime m_last_modified_at;
    bool m_last_modified_at_isSet;
    bool m_last_modified_at_isValid;

    QString m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QString m_runtime;
    bool m_runtime_isSet;
    bool m_runtime_isValid;

    OAISeverityCounts m_severity_counts;
    bool m_severity_counts_isSet;
    bool m_severity_counts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAggregationResponse_lambdaFunctionAggregation)

#endif // OAIAggregationResponse_lambdaFunctionAggregation_H
