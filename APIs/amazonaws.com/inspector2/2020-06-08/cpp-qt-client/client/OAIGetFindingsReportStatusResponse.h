/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetFindingsReportStatusResponse.h
 *
 * 
 */

#ifndef OAIGetFindingsReportStatusResponse_H
#define OAIGetFindingsReportStatusResponse_H

#include <QJsonObject>

#include "OAIExternalReportStatus.h"
#include "OAIGetFindingsReportStatusResponse_destination.h"
#include "OAIGetFindingsReportStatusResponse_filterCriteria.h"
#include "OAIReportingErrorCode.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetFindingsReportStatusResponse_destination;
class OAIGetFindingsReportStatusResponse_filterCriteria;

class OAIGetFindingsReportStatusResponse : public OAIObject {
public:
    OAIGetFindingsReportStatusResponse();
    OAIGetFindingsReportStatusResponse(QString json);
    ~OAIGetFindingsReportStatusResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetFindingsReportStatusResponse_destination getDestination() const;
    void setDestination(const OAIGetFindingsReportStatusResponse_destination &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    OAIReportingErrorCode getErrorCode() const;
    void setErrorCode(const OAIReportingErrorCode &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    OAIGetFindingsReportStatusResponse_filterCriteria getFilterCriteria() const;
    void setFilterCriteria(const OAIGetFindingsReportStatusResponse_filterCriteria &filter_criteria);
    bool is_filter_criteria_Set() const;
    bool is_filter_criteria_Valid() const;

    QString getReportId() const;
    void setReportId(const QString &report_id);
    bool is_report_id_Set() const;
    bool is_report_id_Valid() const;

    OAIExternalReportStatus getStatus() const;
    void setStatus(const OAIExternalReportStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetFindingsReportStatusResponse_destination m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    OAIReportingErrorCode m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    OAIGetFindingsReportStatusResponse_filterCriteria m_filter_criteria;
    bool m_filter_criteria_isSet;
    bool m_filter_criteria_isValid;

    QString m_report_id;
    bool m_report_id_isSet;
    bool m_report_id_isValid;

    OAIExternalReportStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetFindingsReportStatusResponse)

#endif // OAIGetFindingsReportStatusResponse_H
