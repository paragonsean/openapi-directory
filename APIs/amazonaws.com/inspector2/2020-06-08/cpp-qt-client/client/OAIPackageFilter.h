/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPackageFilter.h
 *
 * Contains information on the details of a package filter.
 */

#ifndef OAIPackageFilter_H
#define OAIPackageFilter_H

#include <QJsonObject>

#include "OAIPackageFilter_architecture.h"
#include "OAIPackageFilter_epoch.h"
#include "OAIPackageFilter_name.h"
#include "OAIPackageFilter_release.h"
#include "OAIPackageFilter_sourceLayerHash.h"
#include "OAIPackageFilter_version.h"
#include "OAIStringFilter.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPackageFilter_architecture;
class OAIPackageFilter_epoch;
class OAIPackageFilter_name;
class OAIPackageFilter_release;
class OAIStringFilter;
class OAIPackageFilter_sourceLayerHash;
class OAIPackageFilter_version;

class OAIPackageFilter : public OAIObject {
public:
    OAIPackageFilter();
    OAIPackageFilter(QString json);
    ~OAIPackageFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPackageFilter_architecture getArchitecture() const;
    void setArchitecture(const OAIPackageFilter_architecture &architecture);
    bool is_architecture_Set() const;
    bool is_architecture_Valid() const;

    OAIPackageFilter_epoch getEpoch() const;
    void setEpoch(const OAIPackageFilter_epoch &epoch);
    bool is_epoch_Set() const;
    bool is_epoch_Valid() const;

    OAIPackageFilter_name getName() const;
    void setName(const OAIPackageFilter_name &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPackageFilter_release getRelease() const;
    void setRelease(const OAIPackageFilter_release &release);
    bool is_release_Set() const;
    bool is_release_Valid() const;

    OAIStringFilter getSourceLambdaLayerArn() const;
    void setSourceLambdaLayerArn(const OAIStringFilter &source_lambda_layer_arn);
    bool is_source_lambda_layer_arn_Set() const;
    bool is_source_lambda_layer_arn_Valid() const;

    OAIPackageFilter_sourceLayerHash getSourceLayerHash() const;
    void setSourceLayerHash(const OAIPackageFilter_sourceLayerHash &source_layer_hash);
    bool is_source_layer_hash_Set() const;
    bool is_source_layer_hash_Valid() const;

    OAIPackageFilter_version getVersion() const;
    void setVersion(const OAIPackageFilter_version &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPackageFilter_architecture m_architecture;
    bool m_architecture_isSet;
    bool m_architecture_isValid;

    OAIPackageFilter_epoch m_epoch;
    bool m_epoch_isSet;
    bool m_epoch_isValid;

    OAIPackageFilter_name m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPackageFilter_release m_release;
    bool m_release_isSet;
    bool m_release_isValid;

    OAIStringFilter m_source_lambda_layer_arn;
    bool m_source_lambda_layer_arn_isSet;
    bool m_source_lambda_layer_arn_isValid;

    OAIPackageFilter_sourceLayerHash m_source_layer_hash;
    bool m_source_layer_hash_isSet;
    bool m_source_layer_hash_isValid;

    OAIPackageFilter_version m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPackageFilter)

#endif // OAIPackageFilter_H
