/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchGetFindingDetailsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchGetFindingDetailsRequest::OAIBatchGetFindingDetailsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchGetFindingDetailsRequest::OAIBatchGetFindingDetailsRequest() {
    this->initializeModel();
}

OAIBatchGetFindingDetailsRequest::~OAIBatchGetFindingDetailsRequest() {}

void OAIBatchGetFindingDetailsRequest::initializeModel() {

    m_finding_arns_isSet = false;
    m_finding_arns_isValid = false;
}

void OAIBatchGetFindingDetailsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchGetFindingDetailsRequest::fromJsonObject(QJsonObject json) {

    m_finding_arns_isValid = ::OpenAPI::fromJsonValue(m_finding_arns, json[QString("findingArns")]);
    m_finding_arns_isSet = !json[QString("findingArns")].isNull() && m_finding_arns_isValid;
}

QString OAIBatchGetFindingDetailsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchGetFindingDetailsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_finding_arns.isSet()) {
        obj.insert(QString("findingArns"), ::OpenAPI::toJsonValue(m_finding_arns));
    }
    return obj;
}

QList OAIBatchGetFindingDetailsRequest::getFindingArns() const {
    return m_finding_arns;
}
void OAIBatchGetFindingDetailsRequest::setFindingArns(const QList &finding_arns) {
    m_finding_arns = finding_arns;
    m_finding_arns_isSet = true;
}

bool OAIBatchGetFindingDetailsRequest::is_finding_arns_Set() const{
    return m_finding_arns_isSet;
}

bool OAIBatchGetFindingDetailsRequest::is_finding_arns_Valid() const{
    return m_finding_arns_isValid;
}

bool OAIBatchGetFindingDetailsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_finding_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchGetFindingDetailsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_finding_arns_isValid && true;
}

} // namespace OpenAPI
