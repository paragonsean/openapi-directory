/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateConfiguration_request_ecrConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateConfiguration_request_ecrConfiguration::OAIUpdateConfiguration_request_ecrConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateConfiguration_request_ecrConfiguration::OAIUpdateConfiguration_request_ecrConfiguration() {
    this->initializeModel();
}

OAIUpdateConfiguration_request_ecrConfiguration::~OAIUpdateConfiguration_request_ecrConfiguration() {}

void OAIUpdateConfiguration_request_ecrConfiguration::initializeModel() {

    m_rescan_duration_isSet = false;
    m_rescan_duration_isValid = false;
}

void OAIUpdateConfiguration_request_ecrConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateConfiguration_request_ecrConfiguration::fromJsonObject(QJsonObject json) {

    m_rescan_duration_isValid = ::OpenAPI::fromJsonValue(m_rescan_duration, json[QString("rescanDuration")]);
    m_rescan_duration_isSet = !json[QString("rescanDuration")].isNull() && m_rescan_duration_isValid;
}

QString OAIUpdateConfiguration_request_ecrConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateConfiguration_request_ecrConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_rescan_duration.isSet()) {
        obj.insert(QString("rescanDuration"), ::OpenAPI::toJsonValue(m_rescan_duration));
    }
    return obj;
}

OAIEcrRescanDuration OAIUpdateConfiguration_request_ecrConfiguration::getRescanDuration() const {
    return m_rescan_duration;
}
void OAIUpdateConfiguration_request_ecrConfiguration::setRescanDuration(const OAIEcrRescanDuration &rescan_duration) {
    m_rescan_duration = rescan_duration;
    m_rescan_duration_isSet = true;
}

bool OAIUpdateConfiguration_request_ecrConfiguration::is_rescan_duration_Set() const{
    return m_rescan_duration_isSet;
}

bool OAIUpdateConfiguration_request_ecrConfiguration::is_rescan_duration_Valid() const{
    return m_rescan_duration_isValid;
}

bool OAIUpdateConfiguration_request_ecrConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rescan_duration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateConfiguration_request_ecrConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
