/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateSbomExport_request_resourceFilterCriteria.h
 *
 * The resource filter criteria for a Software bill of materials (SBOM) report.
 */

#ifndef OAICreateSbomExport_request_resourceFilterCriteria_H
#define OAICreateSbomExport_request_resourceFilterCriteria_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateSbomExport_request_resourceFilterCriteria : public OAIObject {
public:
    OAICreateSbomExport_request_resourceFilterCriteria();
    OAICreateSbomExport_request_resourceFilterCriteria(QString json);
    ~OAICreateSbomExport_request_resourceFilterCriteria() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAccountId() const;
    void setAccountId(const QList &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QList getEc2InstanceTags() const;
    void setEc2InstanceTags(const QList &ec2_instance_tags);
    bool is_ec2_instance_tags_Set() const;
    bool is_ec2_instance_tags_Valid() const;

    QList getEcrImageTags() const;
    void setEcrImageTags(const QList &ecr_image_tags);
    bool is_ecr_image_tags_Set() const;
    bool is_ecr_image_tags_Valid() const;

    QList getEcrRepositoryName() const;
    void setEcrRepositoryName(const QList &ecr_repository_name);
    bool is_ecr_repository_name_Set() const;
    bool is_ecr_repository_name_Valid() const;

    QList getLambdaFunctionName() const;
    void setLambdaFunctionName(const QList &lambda_function_name);
    bool is_lambda_function_name_Set() const;
    bool is_lambda_function_name_Valid() const;

    QList getLambdaFunctionTags() const;
    void setLambdaFunctionTags(const QList &lambda_function_tags);
    bool is_lambda_function_tags_Set() const;
    bool is_lambda_function_tags_Valid() const;

    QList getResourceId() const;
    void setResourceId(const QList &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QList getResourceType() const;
    void setResourceType(const QList &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QList m_ec2_instance_tags;
    bool m_ec2_instance_tags_isSet;
    bool m_ec2_instance_tags_isValid;

    QList m_ecr_image_tags;
    bool m_ecr_image_tags_isSet;
    bool m_ecr_image_tags_isValid;

    QList m_ecr_repository_name;
    bool m_ecr_repository_name_isSet;
    bool m_ecr_repository_name_isValid;

    QList m_lambda_function_name;
    bool m_lambda_function_name_isSet;
    bool m_lambda_function_name_isValid;

    QList m_lambda_function_tags;
    bool m_lambda_function_tags_isSet;
    bool m_lambda_function_tags_isValid;

    QList m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QList m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateSbomExport_request_resourceFilterCriteria)

#endif // OAICreateSbomExport_request_resourceFilterCriteria_H
