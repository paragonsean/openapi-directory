/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroupKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroupKey::OAIGroupKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroupKey::OAIGroupKey() {
    this->initializeModel();
}

OAIGroupKey::~OAIGroupKey() {}

void OAIGroupKey::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIGroupKey::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIGroupKey::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SCAN_STATUS_CODE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupKey::SCAN_STATUS_CODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SCAN_STATUS_REASON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupKey::SCAN_STATUS_REASON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACCOUNT_ID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupKey::ACCOUNT_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RESOURCE_TYPE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupKey::RESOURCE_TYPE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ECR_REPOSITORY_NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupKey::ECR_REPOSITORY_NAME;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIGroupKey::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIGroupKey::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIGroupKey::SCAN_STATUS_CODE:
            val = "SCAN_STATUS_CODE";
            break;
        case eOAIGroupKey::SCAN_STATUS_REASON:
            val = "SCAN_STATUS_REASON";
            break;
        case eOAIGroupKey::ACCOUNT_ID:
            val = "ACCOUNT_ID";
            break;
        case eOAIGroupKey::RESOURCE_TYPE:
            val = "RESOURCE_TYPE";
            break;
        case eOAIGroupKey::ECR_REPOSITORY_NAME:
            val = "ECR_REPOSITORY_NAME";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIGroupKey::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIGroupKey::eOAIGroupKey OAIGroupKey::getValue() const {
    return m_value;
}

void OAIGroupKey::setValue(const OAIGroupKey::eOAIGroupKey& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIGroupKey::isSet() const {
    
    return m_value_isSet;
}

bool OAIGroupKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
