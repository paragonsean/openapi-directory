/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICoveredResource_resourceMetadata.h
 *
 * 
 */

#ifndef OAICoveredResource_resourceMetadata_H
#define OAICoveredResource_resourceMetadata_H

#include <QJsonObject>

#include "OAIResourceScanMetadata_ec2.h"
#include "OAIResourceScanMetadata_ecrImage.h"
#include "OAIResourceScanMetadata_ecrRepository.h"
#include "OAIResourceScanMetadata_lambdaFunction.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceScanMetadata_ec2;
class OAIResourceScanMetadata_ecrImage;
class OAIResourceScanMetadata_ecrRepository;
class OAIResourceScanMetadata_lambdaFunction;

class OAICoveredResource_resourceMetadata : public OAIObject {
public:
    OAICoveredResource_resourceMetadata();
    OAICoveredResource_resourceMetadata(QString json);
    ~OAICoveredResource_resourceMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResourceScanMetadata_ec2 getEc2() const;
    void setEc2(const OAIResourceScanMetadata_ec2 &ec2);
    bool is_ec2_Set() const;
    bool is_ec2_Valid() const;

    OAIResourceScanMetadata_ecrImage getEcrImage() const;
    void setEcrImage(const OAIResourceScanMetadata_ecrImage &ecr_image);
    bool is_ecr_image_Set() const;
    bool is_ecr_image_Valid() const;

    OAIResourceScanMetadata_ecrRepository getEcrRepository() const;
    void setEcrRepository(const OAIResourceScanMetadata_ecrRepository &ecr_repository);
    bool is_ecr_repository_Set() const;
    bool is_ecr_repository_Valid() const;

    OAIResourceScanMetadata_lambdaFunction getLambdaFunction() const;
    void setLambdaFunction(const OAIResourceScanMetadata_lambdaFunction &lambda_function);
    bool is_lambda_function_Set() const;
    bool is_lambda_function_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResourceScanMetadata_ec2 m_ec2;
    bool m_ec2_isSet;
    bool m_ec2_isValid;

    OAIResourceScanMetadata_ecrImage m_ecr_image;
    bool m_ecr_image_isSet;
    bool m_ecr_image_isValid;

    OAIResourceScanMetadata_ecrRepository m_ecr_repository;
    bool m_ecr_repository_isSet;
    bool m_ecr_repository_isValid;

    OAIResourceScanMetadata_lambdaFunction m_lambda_function;
    bool m_lambda_function_isSet;
    bool m_lambda_function_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICoveredResource_resourceMetadata)

#endif // OAICoveredResource_resourceMetadata_H
