/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUsage.h
 *
 * Contains usage information about the cost of Amazon Inspector operation.
 */

#ifndef OAIUsage_H
#define OAIUsage_H

#include <QJsonObject>

#include "OAICurrency.h"
#include "OAIUsageType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUsage : public OAIObject {
public:
    OAIUsage();
    OAIUsage(QString json);
    ~OAIUsage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICurrency getCurrency() const;
    void setCurrency(const OAICurrency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    double getEstimatedMonthlyCost() const;
    void setEstimatedMonthlyCost(const double &estimated_monthly_cost);
    bool is_estimated_monthly_cost_Set() const;
    bool is_estimated_monthly_cost_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    OAIUsageType getType() const;
    void setType(const OAIUsageType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICurrency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    double m_estimated_monthly_cost;
    bool m_estimated_monthly_cost_isSet;
    bool m_estimated_monthly_cost_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    OAIUsageType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUsage)

#endif // OAIUsage_H
