/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEc2InstanceAggregation.h
 *
 * The details that define an aggregation based on Amazon EC2 instances.
 */

#ifndef OAIEc2InstanceAggregation_H
#define OAIEc2InstanceAggregation_H

#include <QJsonObject>

#include "OAIEc2InstanceSortBy.h"
#include "OAISortOrder.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEc2InstanceAggregation : public OAIObject {
public:
    OAIEc2InstanceAggregation();
    OAIEc2InstanceAggregation(QString json);
    ~OAIEc2InstanceAggregation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAmis() const;
    void setAmis(const QList &amis);
    bool is_amis_Set() const;
    bool is_amis_Valid() const;

    QList getInstanceIds() const;
    void setInstanceIds(const QList &instance_ids);
    bool is_instance_ids_Set() const;
    bool is_instance_ids_Valid() const;

    QList getInstanceTags() const;
    void setInstanceTags(const QList &instance_tags);
    bool is_instance_tags_Set() const;
    bool is_instance_tags_Valid() const;

    QList getOperatingSystems() const;
    void setOperatingSystems(const QList &operating_systems);
    bool is_operating_systems_Set() const;
    bool is_operating_systems_Valid() const;

    OAIEc2InstanceSortBy getSortBy() const;
    void setSortBy(const OAIEc2InstanceSortBy &sort_by);
    bool is_sort_by_Set() const;
    bool is_sort_by_Valid() const;

    OAISortOrder getSortOrder() const;
    void setSortOrder(const OAISortOrder &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_amis;
    bool m_amis_isSet;
    bool m_amis_isValid;

    QList m_instance_ids;
    bool m_instance_ids_isSet;
    bool m_instance_ids_isValid;

    QList m_instance_tags;
    bool m_instance_tags_isSet;
    bool m_instance_tags_isValid;

    QList m_operating_systems;
    bool m_operating_systems_isSet;
    bool m_operating_systems_isValid;

    OAIEc2InstanceSortBy m_sort_by;
    bool m_sort_by_isSet;
    bool m_sort_by_isValid;

    OAISortOrder m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEc2InstanceAggregation)

#endif // OAIEc2InstanceAggregation_H
