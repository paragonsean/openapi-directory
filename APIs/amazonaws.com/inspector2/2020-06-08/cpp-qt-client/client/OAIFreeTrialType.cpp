/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFreeTrialType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFreeTrialType::OAIFreeTrialType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFreeTrialType::OAIFreeTrialType() {
    this->initializeModel();
}

OAIFreeTrialType::~OAIFreeTrialType() {}

void OAIFreeTrialType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFreeTrialType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFreeTrialType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("EC2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFreeTrialType::EC2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ECR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFreeTrialType::ECR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAMBDA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFreeTrialType::LAMBDA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAMBDA_CODE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFreeTrialType::LAMBDA_CODE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFreeTrialType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFreeTrialType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFreeTrialType::EC2:
            val = "EC2";
            break;
        case eOAIFreeTrialType::ECR:
            val = "ECR";
            break;
        case eOAIFreeTrialType::LAMBDA:
            val = "LAMBDA";
            break;
        case eOAIFreeTrialType::LAMBDA_CODE:
            val = "LAMBDA_CODE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFreeTrialType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFreeTrialType::eOAIFreeTrialType OAIFreeTrialType::getValue() const {
    return m_value;
}

void OAIFreeTrialType::setValue(const OAIFreeTrialType::eOAIFreeTrialType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFreeTrialType::isSet() const {
    
    return m_value_isSet;
}

bool OAIFreeTrialType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
