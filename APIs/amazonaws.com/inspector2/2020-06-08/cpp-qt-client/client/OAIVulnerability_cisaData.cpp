/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVulnerability_cisaData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVulnerability_cisaData::OAIVulnerability_cisaData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVulnerability_cisaData::OAIVulnerability_cisaData() {
    this->initializeModel();
}

OAIVulnerability_cisaData::~OAIVulnerability_cisaData() {}

void OAIVulnerability_cisaData::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_date_added_isSet = false;
    m_date_added_isValid = false;

    m_date_due_isSet = false;
    m_date_due_isValid = false;
}

void OAIVulnerability_cisaData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVulnerability_cisaData::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_date_added_isValid = ::OpenAPI::fromJsonValue(m_date_added, json[QString("dateAdded")]);
    m_date_added_isSet = !json[QString("dateAdded")].isNull() && m_date_added_isValid;

    m_date_due_isValid = ::OpenAPI::fromJsonValue(m_date_due, json[QString("dateDue")]);
    m_date_due_isSet = !json[QString("dateDue")].isNull() && m_date_due_isValid;
}

QString OAIVulnerability_cisaData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVulnerability_cisaData::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_date_added_isSet) {
        obj.insert(QString("dateAdded"), ::OpenAPI::toJsonValue(m_date_added));
    }
    if (m_date_due_isSet) {
        obj.insert(QString("dateDue"), ::OpenAPI::toJsonValue(m_date_due));
    }
    return obj;
}

QString OAIVulnerability_cisaData::getAction() const {
    return m_action;
}
void OAIVulnerability_cisaData::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIVulnerability_cisaData::is_action_Set() const{
    return m_action_isSet;
}

bool OAIVulnerability_cisaData::is_action_Valid() const{
    return m_action_isValid;
}

QDateTime OAIVulnerability_cisaData::getDateAdded() const {
    return m_date_added;
}
void OAIVulnerability_cisaData::setDateAdded(const QDateTime &date_added) {
    m_date_added = date_added;
    m_date_added_isSet = true;
}

bool OAIVulnerability_cisaData::is_date_added_Set() const{
    return m_date_added_isSet;
}

bool OAIVulnerability_cisaData::is_date_added_Valid() const{
    return m_date_added_isValid;
}

QDateTime OAIVulnerability_cisaData::getDateDue() const {
    return m_date_due;
}
void OAIVulnerability_cisaData::setDateDue(const QDateTime &date_due) {
    m_date_due = date_due;
    m_date_due_isSet = true;
}

bool OAIVulnerability_cisaData::is_date_due_Set() const{
    return m_date_due_isSet;
}

bool OAIVulnerability_cisaData::is_date_due_Valid() const{
    return m_date_due_isValid;
}

bool OAIVulnerability_cisaData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_added_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_due_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVulnerability_cisaData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
