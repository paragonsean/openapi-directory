/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISbomReportFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISbomReportFormat::OAISbomReportFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISbomReportFormat::OAISbomReportFormat() {
    this->initializeModel();
}

OAISbomReportFormat::~OAISbomReportFormat() {}

void OAISbomReportFormat::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISbomReportFormat::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISbomReportFormat::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CYCLONEDX_1_4", Qt::CaseInsensitive) == 0) {
        m_value = eOAISbomReportFormat::CYCLONEDX_1_4;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SPDX_2_3", Qt::CaseInsensitive) == 0) {
        m_value = eOAISbomReportFormat::SPDX_2_3;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISbomReportFormat::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISbomReportFormat::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISbomReportFormat::CYCLONEDX_1_4:
            val = "CYCLONEDX_1_4";
            break;
        case eOAISbomReportFormat::SPDX_2_3:
            val = "SPDX_2_3";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISbomReportFormat::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISbomReportFormat::eOAISbomReportFormat OAISbomReportFormat::getValue() const {
    return m_value;
}

void OAISbomReportFormat::setValue(const OAISbomReportFormat::eOAISbomReportFormat& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISbomReportFormat::isSet() const {
    
    return m_value_isSet;
}

bool OAISbomReportFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
