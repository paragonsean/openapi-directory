/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperation::OAIOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperation::OAIOperation() {
    this->initializeModel();
}

OAIOperation::~OAIOperation() {}

void OAIOperation::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOperation::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOperation::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ENABLE_SCANNING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOperation::ENABLE_SCANNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DISABLE_SCANNING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOperation::DISABLE_SCANNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ENABLE_REPOSITORY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOperation::ENABLE_REPOSITORY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DISABLE_REPOSITORY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOperation::DISABLE_REPOSITORY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOperation::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOperation::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOperation::ENABLE_SCANNING:
            val = "ENABLE_SCANNING";
            break;
        case eOAIOperation::DISABLE_SCANNING:
            val = "DISABLE_SCANNING";
            break;
        case eOAIOperation::ENABLE_REPOSITORY:
            val = "ENABLE_REPOSITORY";
            break;
        case eOAIOperation::DISABLE_REPOSITORY:
            val = "DISABLE_REPOSITORY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOperation::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOperation::eOAIOperation OAIOperation::getValue() const {
    return m_value;
}

void OAIOperation::setValue(const OAIOperation::eOAIOperation& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOperation::isSet() const {
    
    return m_value_isSet;
}

bool OAIOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
