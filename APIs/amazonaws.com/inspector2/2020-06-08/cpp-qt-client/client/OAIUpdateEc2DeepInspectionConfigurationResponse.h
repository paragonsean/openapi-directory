/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateEc2DeepInspectionConfigurationResponse.h
 *
 * 
 */

#ifndef OAIUpdateEc2DeepInspectionConfigurationResponse_H
#define OAIUpdateEc2DeepInspectionConfigurationResponse_H

#include <QJsonObject>

#include "OAIEc2DeepInspectionStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateEc2DeepInspectionConfigurationResponse : public OAIObject {
public:
    OAIUpdateEc2DeepInspectionConfigurationResponse();
    OAIUpdateEc2DeepInspectionConfigurationResponse(QString json);
    ~OAIUpdateEc2DeepInspectionConfigurationResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QList getOrgPackagePaths() const;
    void setOrgPackagePaths(const QList &org_package_paths);
    bool is_org_package_paths_Set() const;
    bool is_org_package_paths_Valid() const;

    QList getPackagePaths() const;
    void setPackagePaths(const QList &package_paths);
    bool is_package_paths_Set() const;
    bool is_package_paths_Valid() const;

    OAIEc2DeepInspectionStatus getStatus() const;
    void setStatus(const OAIEc2DeepInspectionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QList m_org_package_paths;
    bool m_org_package_paths_isSet;
    bool m_org_package_paths_isValid;

    QList m_package_paths;
    bool m_package_paths_isSet;
    bool m_package_paths_isValid;

    OAIEc2DeepInspectionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateEc2DeepInspectionConfigurationResponse)

#endif // OAIUpdateEc2DeepInspectionConfigurationResponse_H
