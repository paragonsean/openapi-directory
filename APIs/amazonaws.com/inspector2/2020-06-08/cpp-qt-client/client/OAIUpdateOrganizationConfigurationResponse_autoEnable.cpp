/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateOrganizationConfigurationResponse_autoEnable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateOrganizationConfigurationResponse_autoEnable::OAIUpdateOrganizationConfigurationResponse_autoEnable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateOrganizationConfigurationResponse_autoEnable::OAIUpdateOrganizationConfigurationResponse_autoEnable() {
    this->initializeModel();
}

OAIUpdateOrganizationConfigurationResponse_autoEnable::~OAIUpdateOrganizationConfigurationResponse_autoEnable() {}

void OAIUpdateOrganizationConfigurationResponse_autoEnable::initializeModel() {

    m_ec2_isSet = false;
    m_ec2_isValid = false;

    m_ecr_isSet = false;
    m_ecr_isValid = false;

    m_lambda_isSet = false;
    m_lambda_isValid = false;

    m_lambda_code_isSet = false;
    m_lambda_code_isValid = false;
}

void OAIUpdateOrganizationConfigurationResponse_autoEnable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateOrganizationConfigurationResponse_autoEnable::fromJsonObject(QJsonObject json) {

    m_ec2_isValid = ::OpenAPI::fromJsonValue(m_ec2, json[QString("ec2")]);
    m_ec2_isSet = !json[QString("ec2")].isNull() && m_ec2_isValid;

    m_ecr_isValid = ::OpenAPI::fromJsonValue(m_ecr, json[QString("ecr")]);
    m_ecr_isSet = !json[QString("ecr")].isNull() && m_ecr_isValid;

    m_lambda_isValid = ::OpenAPI::fromJsonValue(m_lambda, json[QString("lambda")]);
    m_lambda_isSet = !json[QString("lambda")].isNull() && m_lambda_isValid;

    m_lambda_code_isValid = ::OpenAPI::fromJsonValue(m_lambda_code, json[QString("lambdaCode")]);
    m_lambda_code_isSet = !json[QString("lambdaCode")].isNull() && m_lambda_code_isValid;
}

QString OAIUpdateOrganizationConfigurationResponse_autoEnable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateOrganizationConfigurationResponse_autoEnable::asJsonObject() const {
    QJsonObject obj;
    if (m_ec2_isSet) {
        obj.insert(QString("ec2"), ::OpenAPI::toJsonValue(m_ec2));
    }
    if (m_ecr_isSet) {
        obj.insert(QString("ecr"), ::OpenAPI::toJsonValue(m_ecr));
    }
    if (m_lambda_isSet) {
        obj.insert(QString("lambda"), ::OpenAPI::toJsonValue(m_lambda));
    }
    if (m_lambda_code_isSet) {
        obj.insert(QString("lambdaCode"), ::OpenAPI::toJsonValue(m_lambda_code));
    }
    return obj;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::getEc2() const {
    return m_ec2;
}
void OAIUpdateOrganizationConfigurationResponse_autoEnable::setEc2(const bool &ec2) {
    m_ec2 = ec2;
    m_ec2_isSet = true;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::is_ec2_Set() const{
    return m_ec2_isSet;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::is_ec2_Valid() const{
    return m_ec2_isValid;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::getEcr() const {
    return m_ecr;
}
void OAIUpdateOrganizationConfigurationResponse_autoEnable::setEcr(const bool &ecr) {
    m_ecr = ecr;
    m_ecr_isSet = true;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::is_ecr_Set() const{
    return m_ecr_isSet;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::is_ecr_Valid() const{
    return m_ecr_isValid;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::getLambda() const {
    return m_lambda;
}
void OAIUpdateOrganizationConfigurationResponse_autoEnable::setLambda(const bool &lambda) {
    m_lambda = lambda;
    m_lambda_isSet = true;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::is_lambda_Set() const{
    return m_lambda_isSet;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::is_lambda_Valid() const{
    return m_lambda_isValid;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::getLambdaCode() const {
    return m_lambda_code;
}
void OAIUpdateOrganizationConfigurationResponse_autoEnable::setLambdaCode(const bool &lambda_code) {
    m_lambda_code = lambda_code;
    m_lambda_code_isSet = true;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::is_lambda_code_Set() const{
    return m_lambda_code_isSet;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::is_lambda_code_Valid() const{
    return m_lambda_code_isValid;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ec2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ecr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lambda_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lambda_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateOrganizationConfigurationResponse_autoEnable::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ec2_isValid && m_ecr_isValid && true;
}

} // namespace OpenAPI
