/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListFindingAggregations_request_aggregationRequest_titleAggregation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListFindingAggregations_request_aggregationRequest_titleAggregation::OAIListFindingAggregations_request_aggregationRequest_titleAggregation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListFindingAggregations_request_aggregationRequest_titleAggregation::OAIListFindingAggregations_request_aggregationRequest_titleAggregation() {
    this->initializeModel();
}

OAIListFindingAggregations_request_aggregationRequest_titleAggregation::~OAIListFindingAggregations_request_aggregationRequest_titleAggregation() {}

void OAIListFindingAggregations_request_aggregationRequest_titleAggregation::initializeModel() {

    m_finding_type_isSet = false;
    m_finding_type_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;

    m_sort_by_isSet = false;
    m_sort_by_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;

    m_titles_isSet = false;
    m_titles_isValid = false;

    m_vulnerability_ids_isSet = false;
    m_vulnerability_ids_isValid = false;
}

void OAIListFindingAggregations_request_aggregationRequest_titleAggregation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListFindingAggregations_request_aggregationRequest_titleAggregation::fromJsonObject(QJsonObject json) {

    m_finding_type_isValid = ::OpenAPI::fromJsonValue(m_finding_type, json[QString("findingType")]);
    m_finding_type_isSet = !json[QString("findingType")].isNull() && m_finding_type_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resourceType")]);
    m_resource_type_isSet = !json[QString("resourceType")].isNull() && m_resource_type_isValid;

    m_sort_by_isValid = ::OpenAPI::fromJsonValue(m_sort_by, json[QString("sortBy")]);
    m_sort_by_isSet = !json[QString("sortBy")].isNull() && m_sort_by_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("sortOrder")]);
    m_sort_order_isSet = !json[QString("sortOrder")].isNull() && m_sort_order_isValid;

    m_titles_isValid = ::OpenAPI::fromJsonValue(m_titles, json[QString("titles")]);
    m_titles_isSet = !json[QString("titles")].isNull() && m_titles_isValid;

    m_vulnerability_ids_isValid = ::OpenAPI::fromJsonValue(m_vulnerability_ids, json[QString("vulnerabilityIds")]);
    m_vulnerability_ids_isSet = !json[QString("vulnerabilityIds")].isNull() && m_vulnerability_ids_isValid;
}

QString OAIListFindingAggregations_request_aggregationRequest_titleAggregation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListFindingAggregations_request_aggregationRequest_titleAggregation::asJsonObject() const {
    QJsonObject obj;
    if (m_finding_type.isSet()) {
        obj.insert(QString("findingType"), ::OpenAPI::toJsonValue(m_finding_type));
    }
    if (m_resource_type.isSet()) {
        obj.insert(QString("resourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    if (m_sort_by.isSet()) {
        obj.insert(QString("sortBy"), ::OpenAPI::toJsonValue(m_sort_by));
    }
    if (m_sort_order.isSet()) {
        obj.insert(QString("sortOrder"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    if (m_titles.isSet()) {
        obj.insert(QString("titles"), ::OpenAPI::toJsonValue(m_titles));
    }
    if (m_vulnerability_ids.isSet()) {
        obj.insert(QString("vulnerabilityIds"), ::OpenAPI::toJsonValue(m_vulnerability_ids));
    }
    return obj;
}

OAIAggregationFindingType OAIListFindingAggregations_request_aggregationRequest_titleAggregation::getFindingType() const {
    return m_finding_type;
}
void OAIListFindingAggregations_request_aggregationRequest_titleAggregation::setFindingType(const OAIAggregationFindingType &finding_type) {
    m_finding_type = finding_type;
    m_finding_type_isSet = true;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_finding_type_Set() const{
    return m_finding_type_isSet;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_finding_type_Valid() const{
    return m_finding_type_isValid;
}

OAIAggregationResourceType OAIListFindingAggregations_request_aggregationRequest_titleAggregation::getResourceType() const {
    return m_resource_type;
}
void OAIListFindingAggregations_request_aggregationRequest_titleAggregation::setResourceType(const OAIAggregationResourceType &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

OAITitleSortBy OAIListFindingAggregations_request_aggregationRequest_titleAggregation::getSortBy() const {
    return m_sort_by;
}
void OAIListFindingAggregations_request_aggregationRequest_titleAggregation::setSortBy(const OAITitleSortBy &sort_by) {
    m_sort_by = sort_by;
    m_sort_by_isSet = true;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_sort_by_Set() const{
    return m_sort_by_isSet;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_sort_by_Valid() const{
    return m_sort_by_isValid;
}

OAISortOrder OAIListFindingAggregations_request_aggregationRequest_titleAggregation::getSortOrder() const {
    return m_sort_order;
}
void OAIListFindingAggregations_request_aggregationRequest_titleAggregation::setSortOrder(const OAISortOrder &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

QList OAIListFindingAggregations_request_aggregationRequest_titleAggregation::getTitles() const {
    return m_titles;
}
void OAIListFindingAggregations_request_aggregationRequest_titleAggregation::setTitles(const QList &titles) {
    m_titles = titles;
    m_titles_isSet = true;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_titles_Set() const{
    return m_titles_isSet;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_titles_Valid() const{
    return m_titles_isValid;
}

QList OAIListFindingAggregations_request_aggregationRequest_titleAggregation::getVulnerabilityIds() const {
    return m_vulnerability_ids;
}
void OAIListFindingAggregations_request_aggregationRequest_titleAggregation::setVulnerabilityIds(const QList &vulnerability_ids) {
    m_vulnerability_ids = vulnerability_ids;
    m_vulnerability_ids_isSet = true;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_vulnerability_ids_Set() const{
    return m_vulnerability_ids_isSet;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::is_vulnerability_ids_Valid() const{
    return m_vulnerability_ids_isValid;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_finding_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_titles.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vulnerability_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListFindingAggregations_request_aggregationRequest_titleAggregation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
