/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAwsLambdaFunctionDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAwsLambdaFunctionDetails::OAIAwsLambdaFunctionDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAwsLambdaFunctionDetails::OAIAwsLambdaFunctionDetails() {
    this->initializeModel();
}

OAIAwsLambdaFunctionDetails::~OAIAwsLambdaFunctionDetails() {}

void OAIAwsLambdaFunctionDetails::initializeModel() {

    m_architectures_isSet = false;
    m_architectures_isValid = false;

    m_code_sha256_isSet = false;
    m_code_sha256_isValid = false;

    m_execution_role_arn_isSet = false;
    m_execution_role_arn_isValid = false;

    m_function_name_isSet = false;
    m_function_name_isValid = false;

    m_last_modified_at_isSet = false;
    m_last_modified_at_isValid = false;

    m_layers_isSet = false;
    m_layers_isValid = false;

    m_package_type_isSet = false;
    m_package_type_isValid = false;

    m_runtime_isSet = false;
    m_runtime_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;

    m_vpc_config_isSet = false;
    m_vpc_config_isValid = false;
}

void OAIAwsLambdaFunctionDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAwsLambdaFunctionDetails::fromJsonObject(QJsonObject json) {

    m_architectures_isValid = ::OpenAPI::fromJsonValue(m_architectures, json[QString("architectures")]);
    m_architectures_isSet = !json[QString("architectures")].isNull() && m_architectures_isValid;

    m_code_sha256_isValid = ::OpenAPI::fromJsonValue(m_code_sha256, json[QString("codeSha256")]);
    m_code_sha256_isSet = !json[QString("codeSha256")].isNull() && m_code_sha256_isValid;

    m_execution_role_arn_isValid = ::OpenAPI::fromJsonValue(m_execution_role_arn, json[QString("executionRoleArn")]);
    m_execution_role_arn_isSet = !json[QString("executionRoleArn")].isNull() && m_execution_role_arn_isValid;

    m_function_name_isValid = ::OpenAPI::fromJsonValue(m_function_name, json[QString("functionName")]);
    m_function_name_isSet = !json[QString("functionName")].isNull() && m_function_name_isValid;

    m_last_modified_at_isValid = ::OpenAPI::fromJsonValue(m_last_modified_at, json[QString("lastModifiedAt")]);
    m_last_modified_at_isSet = !json[QString("lastModifiedAt")].isNull() && m_last_modified_at_isValid;

    m_layers_isValid = ::OpenAPI::fromJsonValue(m_layers, json[QString("layers")]);
    m_layers_isSet = !json[QString("layers")].isNull() && m_layers_isValid;

    m_package_type_isValid = ::OpenAPI::fromJsonValue(m_package_type, json[QString("packageType")]);
    m_package_type_isSet = !json[QString("packageType")].isNull() && m_package_type_isValid;

    m_runtime_isValid = ::OpenAPI::fromJsonValue(m_runtime, json[QString("runtime")]);
    m_runtime_isSet = !json[QString("runtime")].isNull() && m_runtime_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;

    m_vpc_config_isValid = ::OpenAPI::fromJsonValue(m_vpc_config, json[QString("vpcConfig")]);
    m_vpc_config_isSet = !json[QString("vpcConfig")].isNull() && m_vpc_config_isValid;
}

QString OAIAwsLambdaFunctionDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAwsLambdaFunctionDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_architectures.isSet()) {
        obj.insert(QString("architectures"), ::OpenAPI::toJsonValue(m_architectures));
    }
    if (m_code_sha256_isSet) {
        obj.insert(QString("codeSha256"), ::OpenAPI::toJsonValue(m_code_sha256));
    }
    if (m_execution_role_arn_isSet) {
        obj.insert(QString("executionRoleArn"), ::OpenAPI::toJsonValue(m_execution_role_arn));
    }
    if (m_function_name_isSet) {
        obj.insert(QString("functionName"), ::OpenAPI::toJsonValue(m_function_name));
    }
    if (m_last_modified_at_isSet) {
        obj.insert(QString("lastModifiedAt"), ::OpenAPI::toJsonValue(m_last_modified_at));
    }
    if (m_layers.isSet()) {
        obj.insert(QString("layers"), ::OpenAPI::toJsonValue(m_layers));
    }
    if (m_package_type.isSet()) {
        obj.insert(QString("packageType"), ::OpenAPI::toJsonValue(m_package_type));
    }
    if (m_runtime.isSet()) {
        obj.insert(QString("runtime"), ::OpenAPI::toJsonValue(m_runtime));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    if (m_vpc_config.isSet()) {
        obj.insert(QString("vpcConfig"), ::OpenAPI::toJsonValue(m_vpc_config));
    }
    return obj;
}

QList OAIAwsLambdaFunctionDetails::getArchitectures() const {
    return m_architectures;
}
void OAIAwsLambdaFunctionDetails::setArchitectures(const QList &architectures) {
    m_architectures = architectures;
    m_architectures_isSet = true;
}

bool OAIAwsLambdaFunctionDetails::is_architectures_Set() const{
    return m_architectures_isSet;
}

bool OAIAwsLambdaFunctionDetails::is_architectures_Valid() const{
    return m_architectures_isValid;
}

QString OAIAwsLambdaFunctionDetails::getCodeSha256() const {
    return m_code_sha256;
}
void OAIAwsLambdaFunctionDetails::setCodeSha256(const QString &code_sha256) {
    m_code_sha256 = code_sha256;
    m_code_sha256_isSet = true;
}

bool OAIAwsLambdaFunctionDetails::is_code_sha256_Set() const{
    return m_code_sha256_isSet;
}

bool OAIAwsLambdaFunctionDetails::is_code_sha256_Valid() const{
    return m_code_sha256_isValid;
}

QString OAIAwsLambdaFunctionDetails::getExecutionRoleArn() const {
    return m_execution_role_arn;
}
void OAIAwsLambdaFunctionDetails::setExecutionRoleArn(const QString &execution_role_arn) {
    m_execution_role_arn = execution_role_arn;
    m_execution_role_arn_isSet = true;
}

bool OAIAwsLambdaFunctionDetails::is_execution_role_arn_Set() const{
    return m_execution_role_arn_isSet;
}

bool OAIAwsLambdaFunctionDetails::is_execution_role_arn_Valid() const{
    return m_execution_role_arn_isValid;
}

QString OAIAwsLambdaFunctionDetails::getFunctionName() const {
    return m_function_name;
}
void OAIAwsLambdaFunctionDetails::setFunctionName(const QString &function_name) {
    m_function_name = function_name;
    m_function_name_isSet = true;
}

bool OAIAwsLambdaFunctionDetails::is_function_name_Set() const{
    return m_function_name_isSet;
}

bool OAIAwsLambdaFunctionDetails::is_function_name_Valid() const{
    return m_function_name_isValid;
}

QDateTime OAIAwsLambdaFunctionDetails::getLastModifiedAt() const {
    return m_last_modified_at;
}
void OAIAwsLambdaFunctionDetails::setLastModifiedAt(const QDateTime &last_modified_at) {
    m_last_modified_at = last_modified_at;
    m_last_modified_at_isSet = true;
}

bool OAIAwsLambdaFunctionDetails::is_last_modified_at_Set() const{
    return m_last_modified_at_isSet;
}

bool OAIAwsLambdaFunctionDetails::is_last_modified_at_Valid() const{
    return m_last_modified_at_isValid;
}

QList OAIAwsLambdaFunctionDetails::getLayers() const {
    return m_layers;
}
void OAIAwsLambdaFunctionDetails::setLayers(const QList &layers) {
    m_layers = layers;
    m_layers_isSet = true;
}

bool OAIAwsLambdaFunctionDetails::is_layers_Set() const{
    return m_layers_isSet;
}

bool OAIAwsLambdaFunctionDetails::is_layers_Valid() const{
    return m_layers_isValid;
}

OAIPackageType OAIAwsLambdaFunctionDetails::getPackageType() const {
    return m_package_type;
}
void OAIAwsLambdaFunctionDetails::setPackageType(const OAIPackageType &package_type) {
    m_package_type = package_type;
    m_package_type_isSet = true;
}

bool OAIAwsLambdaFunctionDetails::is_package_type_Set() const{
    return m_package_type_isSet;
}

bool OAIAwsLambdaFunctionDetails::is_package_type_Valid() const{
    return m_package_type_isValid;
}

OAIRuntime OAIAwsLambdaFunctionDetails::getRuntime() const {
    return m_runtime;
}
void OAIAwsLambdaFunctionDetails::setRuntime(const OAIRuntime &runtime) {
    m_runtime = runtime;
    m_runtime_isSet = true;
}

bool OAIAwsLambdaFunctionDetails::is_runtime_Set() const{
    return m_runtime_isSet;
}

bool OAIAwsLambdaFunctionDetails::is_runtime_Valid() const{
    return m_runtime_isValid;
}

QString OAIAwsLambdaFunctionDetails::getVersion() const {
    return m_version;
}
void OAIAwsLambdaFunctionDetails::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIAwsLambdaFunctionDetails::is_version_Set() const{
    return m_version_isSet;
}

bool OAIAwsLambdaFunctionDetails::is_version_Valid() const{
    return m_version_isValid;
}

OAIAwsLambdaFunctionDetails_vpcConfig OAIAwsLambdaFunctionDetails::getVpcConfig() const {
    return m_vpc_config;
}
void OAIAwsLambdaFunctionDetails::setVpcConfig(const OAIAwsLambdaFunctionDetails_vpcConfig &vpc_config) {
    m_vpc_config = vpc_config;
    m_vpc_config_isSet = true;
}

bool OAIAwsLambdaFunctionDetails::is_vpc_config_Set() const{
    return m_vpc_config_isSet;
}

bool OAIAwsLambdaFunctionDetails::is_vpc_config_Valid() const{
    return m_vpc_config_isValid;
}

bool OAIAwsLambdaFunctionDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_architectures.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_sha256_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_function_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_layers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAwsLambdaFunctionDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_code_sha256_isValid && m_execution_role_arn_isValid && m_function_name_isValid && m_runtime_isValid && m_version_isValid && true;
}

} // namespace OpenAPI
