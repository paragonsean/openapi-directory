/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountSortBy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountSortBy::OAIAccountSortBy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountSortBy::OAIAccountSortBy() {
    this->initializeModel();
}

OAIAccountSortBy::~OAIAccountSortBy() {}

void OAIAccountSortBy::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAccountSortBy::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAccountSortBy::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CRITICAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountSortBy::CRITICAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HIGH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountSortBy::HIGH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ALL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountSortBy::ALL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAccountSortBy::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAccountSortBy::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAccountSortBy::CRITICAL:
            val = "CRITICAL";
            break;
        case eOAIAccountSortBy::HIGH:
            val = "HIGH";
            break;
        case eOAIAccountSortBy::ALL:
            val = "ALL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAccountSortBy::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAccountSortBy::eOAIAccountSortBy OAIAccountSortBy::getValue() const {
    return m_value;
}

void OAIAccountSortBy::setValue(const OAIAccountSortBy::eOAIAccountSortBy& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAccountSortBy::isSet() const {
    
    return m_value_isSet;
}

bool OAIAccountSortBy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
