/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVulnerability.h
 *
 * Contains details about a specific vulnerability Amazon Inspector can detect.
 */

#ifndef OAIVulnerability_H
#define OAIVulnerability_H

#include <QJsonObject>

#include "OAIVulnerabilitySource.h"
#include "OAIVulnerability_atigData.h"
#include "OAIVulnerability_cisaData.h"
#include "OAIVulnerability_cvss2.h"
#include "OAIVulnerability_cvss3.h"
#include "OAIVulnerability_epss.h"
#include "OAIVulnerability_exploitObserved.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVulnerability_atigData;
class OAIVulnerability_cisaData;
class OAIVulnerability_cvss2;
class OAIVulnerability_cvss3;
class OAIVulnerability_epss;
class OAIVulnerability_exploitObserved;

class OAIVulnerability : public OAIObject {
public:
    OAIVulnerability();
    OAIVulnerability(QString json);
    ~OAIVulnerability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVulnerability_atigData getAtigData() const;
    void setAtigData(const OAIVulnerability_atigData &atig_data);
    bool is_atig_data_Set() const;
    bool is_atig_data_Valid() const;

    OAIVulnerability_cisaData getCisaData() const;
    void setCisaData(const OAIVulnerability_cisaData &cisa_data);
    bool is_cisa_data_Set() const;
    bool is_cisa_data_Valid() const;

    OAIVulnerability_cvss2 getCvss2() const;
    void setCvss2(const OAIVulnerability_cvss2 &cvss2);
    bool is_cvss2_Set() const;
    bool is_cvss2_Valid() const;

    OAIVulnerability_cvss3 getCvss3() const;
    void setCvss3(const OAIVulnerability_cvss3 &cvss3);
    bool is_cvss3_Set() const;
    bool is_cvss3_Valid() const;

    QList getCwes() const;
    void setCwes(const QList &cwes);
    bool is_cwes_Set() const;
    bool is_cwes_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getDetectionPlatforms() const;
    void setDetectionPlatforms(const QList &detection_platforms);
    bool is_detection_platforms_Set() const;
    bool is_detection_platforms_Valid() const;

    OAIVulnerability_epss getEpss() const;
    void setEpss(const OAIVulnerability_epss &epss);
    bool is_epss_Set() const;
    bool is_epss_Valid() const;

    OAIVulnerability_exploitObserved getExploitObserved() const;
    void setExploitObserved(const OAIVulnerability_exploitObserved &exploit_observed);
    bool is_exploit_observed_Set() const;
    bool is_exploit_observed_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList getReferenceUrls() const;
    void setReferenceUrls(const QList &reference_urls);
    bool is_reference_urls_Set() const;
    bool is_reference_urls_Valid() const;

    QList getRelatedVulnerabilities() const;
    void setRelatedVulnerabilities(const QList &related_vulnerabilities);
    bool is_related_vulnerabilities_Set() const;
    bool is_related_vulnerabilities_Valid() const;

    OAIVulnerabilitySource getSource() const;
    void setSource(const OAIVulnerabilitySource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getSourceUrl() const;
    void setSourceUrl(const QString &source_url);
    bool is_source_url_Set() const;
    bool is_source_url_Valid() const;

    QDateTime getVendorCreatedAt() const;
    void setVendorCreatedAt(const QDateTime &vendor_created_at);
    bool is_vendor_created_at_Set() const;
    bool is_vendor_created_at_Valid() const;

    QString getVendorSeverity() const;
    void setVendorSeverity(const QString &vendor_severity);
    bool is_vendor_severity_Set() const;
    bool is_vendor_severity_Valid() const;

    QDateTime getVendorUpdatedAt() const;
    void setVendorUpdatedAt(const QDateTime &vendor_updated_at);
    bool is_vendor_updated_at_Set() const;
    bool is_vendor_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVulnerability_atigData m_atig_data;
    bool m_atig_data_isSet;
    bool m_atig_data_isValid;

    OAIVulnerability_cisaData m_cisa_data;
    bool m_cisa_data_isSet;
    bool m_cisa_data_isValid;

    OAIVulnerability_cvss2 m_cvss2;
    bool m_cvss2_isSet;
    bool m_cvss2_isValid;

    OAIVulnerability_cvss3 m_cvss3;
    bool m_cvss3_isSet;
    bool m_cvss3_isValid;

    QList m_cwes;
    bool m_cwes_isSet;
    bool m_cwes_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_detection_platforms;
    bool m_detection_platforms_isSet;
    bool m_detection_platforms_isValid;

    OAIVulnerability_epss m_epss;
    bool m_epss_isSet;
    bool m_epss_isValid;

    OAIVulnerability_exploitObserved m_exploit_observed;
    bool m_exploit_observed_isSet;
    bool m_exploit_observed_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList m_reference_urls;
    bool m_reference_urls_isSet;
    bool m_reference_urls_isValid;

    QList m_related_vulnerabilities;
    bool m_related_vulnerabilities_isSet;
    bool m_related_vulnerabilities_isValid;

    OAIVulnerabilitySource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_source_url;
    bool m_source_url_isSet;
    bool m_source_url_isValid;

    QDateTime m_vendor_created_at;
    bool m_vendor_created_at_isSet;
    bool m_vendor_created_at_isValid;

    QString m_vendor_severity;
    bool m_vendor_severity_isSet;
    bool m_vendor_severity_isValid;

    QDateTime m_vendor_updated_at;
    bool m_vendor_updated_at_isSet;
    bool m_vendor_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVulnerability)

#endif // OAIVulnerability_H
