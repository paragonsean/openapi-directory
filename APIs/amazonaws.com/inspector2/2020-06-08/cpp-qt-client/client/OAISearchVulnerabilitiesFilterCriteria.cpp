/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchVulnerabilitiesFilterCriteria.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchVulnerabilitiesFilterCriteria::OAISearchVulnerabilitiesFilterCriteria(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchVulnerabilitiesFilterCriteria::OAISearchVulnerabilitiesFilterCriteria() {
    this->initializeModel();
}

OAISearchVulnerabilitiesFilterCriteria::~OAISearchVulnerabilitiesFilterCriteria() {}

void OAISearchVulnerabilitiesFilterCriteria::initializeModel() {

    m_vulnerability_ids_isSet = false;
    m_vulnerability_ids_isValid = false;
}

void OAISearchVulnerabilitiesFilterCriteria::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchVulnerabilitiesFilterCriteria::fromJsonObject(QJsonObject json) {

    m_vulnerability_ids_isValid = ::OpenAPI::fromJsonValue(m_vulnerability_ids, json[QString("vulnerabilityIds")]);
    m_vulnerability_ids_isSet = !json[QString("vulnerabilityIds")].isNull() && m_vulnerability_ids_isValid;
}

QString OAISearchVulnerabilitiesFilterCriteria::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchVulnerabilitiesFilterCriteria::asJsonObject() const {
    QJsonObject obj;
    if (m_vulnerability_ids.isSet()) {
        obj.insert(QString("vulnerabilityIds"), ::OpenAPI::toJsonValue(m_vulnerability_ids));
    }
    return obj;
}

QList OAISearchVulnerabilitiesFilterCriteria::getVulnerabilityIds() const {
    return m_vulnerability_ids;
}
void OAISearchVulnerabilitiesFilterCriteria::setVulnerabilityIds(const QList &vulnerability_ids) {
    m_vulnerability_ids = vulnerability_ids;
    m_vulnerability_ids_isSet = true;
}

bool OAISearchVulnerabilitiesFilterCriteria::is_vulnerability_ids_Set() const{
    return m_vulnerability_ids_isSet;
}

bool OAISearchVulnerabilitiesFilterCriteria::is_vulnerability_ids_Valid() const{
    return m_vulnerability_ids_isValid;
}

bool OAISearchVulnerabilitiesFilterCriteria::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vulnerability_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchVulnerabilitiesFilterCriteria::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_vulnerability_ids_isValid && true;
}

} // namespace OpenAPI
