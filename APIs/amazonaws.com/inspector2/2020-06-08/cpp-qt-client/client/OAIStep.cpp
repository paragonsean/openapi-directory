/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStep.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStep::OAIStep(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStep::OAIStep() {
    this->initializeModel();
}

OAIStep::~OAIStep() {}

void OAIStep::initializeModel() {

    m_component_id_isSet = false;
    m_component_id_isValid = false;

    m_component_type_isSet = false;
    m_component_type_isValid = false;
}

void OAIStep::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStep::fromJsonObject(QJsonObject json) {

    m_component_id_isValid = ::OpenAPI::fromJsonValue(m_component_id, json[QString("componentId")]);
    m_component_id_isSet = !json[QString("componentId")].isNull() && m_component_id_isValid;

    m_component_type_isValid = ::OpenAPI::fromJsonValue(m_component_type, json[QString("componentType")]);
    m_component_type_isSet = !json[QString("componentType")].isNull() && m_component_type_isValid;
}

QString OAIStep::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStep::asJsonObject() const {
    QJsonObject obj;
    if (m_component_id_isSet) {
        obj.insert(QString("componentId"), ::OpenAPI::toJsonValue(m_component_id));
    }
    if (m_component_type_isSet) {
        obj.insert(QString("componentType"), ::OpenAPI::toJsonValue(m_component_type));
    }
    return obj;
}

QString OAIStep::getComponentId() const {
    return m_component_id;
}
void OAIStep::setComponentId(const QString &component_id) {
    m_component_id = component_id;
    m_component_id_isSet = true;
}

bool OAIStep::is_component_id_Set() const{
    return m_component_id_isSet;
}

bool OAIStep::is_component_id_Valid() const{
    return m_component_id_isValid;
}

QString OAIStep::getComponentType() const {
    return m_component_type;
}
void OAIStep::setComponentType(const QString &component_type) {
    m_component_type = component_type;
    m_component_type_isSet = true;
}

bool OAIStep::is_component_type_Set() const{
    return m_component_type_isSet;
}

bool OAIStep::is_component_type_Valid() const{
    return m_component_type_isValid;
}

bool OAIStep::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_component_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_component_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStep::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_component_id_isValid && m_component_type_isValid && true;
}

} // namespace OpenAPI
