/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFinding_packageVulnerabilityDetails.h
 *
 * 
 */

#ifndef OAIFinding_packageVulnerabilityDetails_H
#define OAIFinding_packageVulnerabilityDetails_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFinding_packageVulnerabilityDetails : public OAIObject {
public:
    OAIFinding_packageVulnerabilityDetails();
    OAIFinding_packageVulnerabilityDetails(QString json);
    ~OAIFinding_packageVulnerabilityDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getCvss() const;
    void setCvss(const QList &cvss);
    bool is_cvss_Set() const;
    bool is_cvss_Valid() const;

    QList getReferenceUrls() const;
    void setReferenceUrls(const QList &reference_urls);
    bool is_reference_urls_Set() const;
    bool is_reference_urls_Valid() const;

    QList getRelatedVulnerabilities() const;
    void setRelatedVulnerabilities(const QList &related_vulnerabilities);
    bool is_related_vulnerabilities_Set() const;
    bool is_related_vulnerabilities_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getSourceUrl() const;
    void setSourceUrl(const QString &source_url);
    bool is_source_url_Set() const;
    bool is_source_url_Valid() const;

    QDateTime getVendorCreatedAt() const;
    void setVendorCreatedAt(const QDateTime &vendor_created_at);
    bool is_vendor_created_at_Set() const;
    bool is_vendor_created_at_Valid() const;

    QString getVendorSeverity() const;
    void setVendorSeverity(const QString &vendor_severity);
    bool is_vendor_severity_Set() const;
    bool is_vendor_severity_Valid() const;

    QDateTime getVendorUpdatedAt() const;
    void setVendorUpdatedAt(const QDateTime &vendor_updated_at);
    bool is_vendor_updated_at_Set() const;
    bool is_vendor_updated_at_Valid() const;

    QString getVulnerabilityId() const;
    void setVulnerabilityId(const QString &vulnerability_id);
    bool is_vulnerability_id_Set() const;
    bool is_vulnerability_id_Valid() const;

    QList getVulnerablePackages() const;
    void setVulnerablePackages(const QList &vulnerable_packages);
    bool is_vulnerable_packages_Set() const;
    bool is_vulnerable_packages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_cvss;
    bool m_cvss_isSet;
    bool m_cvss_isValid;

    QList m_reference_urls;
    bool m_reference_urls_isSet;
    bool m_reference_urls_isValid;

    QList m_related_vulnerabilities;
    bool m_related_vulnerabilities_isSet;
    bool m_related_vulnerabilities_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_source_url;
    bool m_source_url_isSet;
    bool m_source_url_isValid;

    QDateTime m_vendor_created_at;
    bool m_vendor_created_at_isSet;
    bool m_vendor_created_at_isValid;

    QString m_vendor_severity;
    bool m_vendor_severity_isSet;
    bool m_vendor_severity_isValid;

    QDateTime m_vendor_updated_at;
    bool m_vendor_updated_at_isSet;
    bool m_vendor_updated_at_isValid;

    QString m_vulnerability_id;
    bool m_vulnerability_id_isSet;
    bool m_vulnerability_id_isValid;

    QList m_vulnerable_packages;
    bool m_vulnerable_packages_isSet;
    bool m_vulnerable_packages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFinding_packageVulnerabilityDetails)

#endif // OAIFinding_packageVulnerabilityDetails_H
