/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListCoverageStatisticsRequest.h
 *
 * 
 */

#ifndef OAIListCoverageStatisticsRequest_H
#define OAIListCoverageStatisticsRequest_H

#include <QJsonObject>

#include "OAIGroupKey.h"
#include "OAIListCoverageRequest_filterCriteria.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListCoverageRequest_filterCriteria;

class OAIListCoverageStatisticsRequest : public OAIObject {
public:
    OAIListCoverageStatisticsRequest();
    OAIListCoverageStatisticsRequest(QString json);
    ~OAIListCoverageStatisticsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIListCoverageRequest_filterCriteria getFilterCriteria() const;
    void setFilterCriteria(const OAIListCoverageRequest_filterCriteria &filter_criteria);
    bool is_filter_criteria_Set() const;
    bool is_filter_criteria_Valid() const;

    OAIGroupKey getGroupBy() const;
    void setGroupBy(const OAIGroupKey &group_by);
    bool is_group_by_Set() const;
    bool is_group_by_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIListCoverageRequest_filterCriteria m_filter_criteria;
    bool m_filter_criteria_isSet;
    bool m_filter_criteria_isValid;

    OAIGroupKey m_group_by;
    bool m_group_by_isSet;
    bool m_group_by_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListCoverageStatisticsRequest)

#endif // OAIListCoverageStatisticsRequest_H
