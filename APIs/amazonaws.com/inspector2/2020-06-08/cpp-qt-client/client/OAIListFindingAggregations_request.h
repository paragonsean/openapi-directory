/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListFindingAggregations_request.h
 *
 * 
 */

#ifndef OAIListFindingAggregations_request_H
#define OAIListFindingAggregations_request_H

#include <QJsonObject>

#include "OAIListFindingAggregations_request_aggregationRequest.h"
#include "OAIStringFilter.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStringFilter;
class OAIListFindingAggregations_request_aggregationRequest;

class OAIListFindingAggregations_request : public OAIObject {
public:
    OAIListFindingAggregations_request();
    OAIListFindingAggregations_request(QString json);
    ~OAIListFindingAggregations_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIStringFilter> getAccountIds() const;
    void setAccountIds(const QList<OAIStringFilter> &account_ids);
    bool is_account_ids_Set() const;
    bool is_account_ids_Valid() const;

    OAIListFindingAggregations_request_aggregationRequest getAggregationRequest() const;
    void setAggregationRequest(const OAIListFindingAggregations_request_aggregationRequest &aggregation_request);
    bool is_aggregation_request_Set() const;
    bool is_aggregation_request_Valid() const;

    QString getAggregationType() const;
    void setAggregationType(const QString &aggregation_type);
    bool is_aggregation_type_Set() const;
    bool is_aggregation_type_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIStringFilter> m_account_ids;
    bool m_account_ids_isSet;
    bool m_account_ids_isValid;

    OAIListFindingAggregations_request_aggregationRequest m_aggregation_request;
    bool m_aggregation_request_isSet;
    bool m_aggregation_request_isValid;

    QString m_aggregation_type;
    bool m_aggregation_type_isSet;
    bool m_aggregation_type_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListFindingAggregations_request)

#endif // OAIListFindingAggregations_request_H
