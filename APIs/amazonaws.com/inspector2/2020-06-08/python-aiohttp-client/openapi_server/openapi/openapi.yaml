openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Amazon Inspector is a vulnerability discovery service that automates
    continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon
    ECR environments.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Inspector2
  version: 2020-06-08
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: inspector2
  x-aws-signingName: inspector2
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/inspector2-2020-06-08.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/inspector2/
servers:
- description: The Inspector2 multi-region endpoint
  url: "http://inspector2.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Inspector2 multi-region endpoint
  url: "https://inspector2.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Inspector2 endpoint for China (Beijing) and China (Ningxia)
  url: "http://inspector2.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Inspector2 endpoint for China (Beijing) and China (Ningxia)
  url: "https://inspector2.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /accountpermissions/list:
    post:
      description: Lists the permissions an account has to configure Amazon Inspector.
      operationId: list_account_permissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccountPermissions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountPermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /codesnippet/batchget:
    post:
      description: Retrieves code snippets from findings that Amazon Inspector detected
        code vulnerabilities in.
      operationId: batch_get_code_snippet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetCodeSnippet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetCodeSnippetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /configuration/get:
    post:
      description: Retrieves setting configurations for Inspector scans.
      operationId: get_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /configuration/update:
    post:
      description: Updates setting configurations for your Amazon Inspector account.
        When you use this API as an Amazon Inspector delegated administrator this
        updates the setting for all accounts you manage. Member accounts in an organization
        cannot update this setting.
      operationId: update_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /coverage/list:
    post:
      description: Lists coverage details for you environment.
      operationId: list_coverage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCoverage_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCoverageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /coverage/statistics/list:
    post:
      description: Lists Amazon Inspector coverage statistics for your environment.
      operationId: list_coverage_statistics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCoverageStatistics_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCoverageStatisticsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /delegatedadminaccounts/disable:
    post:
      description: Disables the Amazon Inspector delegated administrator for your
        organization.
      operationId: disable_delegated_admin_account
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableDelegatedAdminAccount_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableDelegatedAdminAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /delegatedadminaccounts/enable:
    post:
      description: Enables the Amazon Inspector delegated administrator for your Organizations
        organization.
      operationId: enable_delegated_admin_account
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableDelegatedAdminAccount_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableDelegatedAdminAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /delegatedadminaccounts/get:
    post:
      description: Retrieves information about the Amazon Inspector delegated administrator
        for your organization.
      operationId: get_delegated_admin_account
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDelegatedAdminAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /delegatedadminaccounts/list:
    post:
      description: Lists information about the Amazon Inspector delegated administrator
        of your organization.
      operationId: list_delegated_admin_accounts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDelegatedAdminAccounts_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDelegatedAdminAccountsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /disable:
    post:
      description: Disables Amazon Inspector scans for one or more Amazon Web Services
        accounts. Disabling all scan types in an account disables the Amazon Inspector
        service.
      operationId: disable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disable_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ec2deepinspectionconfiguration/get:
    post:
      description: 'Retrieves the activation status of Amazon Inspector deep inspection
        and custom paths associated with your account. '
      operationId: get_ec2_deep_inspection_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEc2DeepInspectionConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /ec2deepinspectionconfiguration/org/update:
    post:
      description: Updates the Amazon Inspector deep inspection custom paths for your
        organization. You must be an Amazon Inspector delegated administrator to use
        this API.
      operationId: update_org_ec2_deep_inspection_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrgEc2DeepInspectionConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrgEc2DeepInspectionConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ec2deepinspectionconfiguration/update:
    post:
      description: "Activates, deactivates Amazon Inspector deep inspection, or updates\
        \ custom paths for your account. "
      operationId: update_ec2_deep_inspection_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEc2DeepInspectionConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEc2DeepInspectionConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ec2deepinspectionstatus/member/batch/get:
    post:
      description: Retrieves Amazon Inspector deep inspection activation status of
        multiple member accounts within your organization. You must be the delegated
        administrator of an organization in Amazon Inspector to use this API.
      operationId: batch_get_member_ec2_deep_inspection_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetMemberEc2DeepInspectionStatus_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetMemberEc2DeepInspectionStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ec2deepinspectionstatus/member/batch/update:
    post:
      description: Activates or deactivates Amazon Inspector deep inspection for the
        provided member accounts in your organization. You must be the delegated administrator
        of an organization in Amazon Inspector to use this API.
      operationId: batch_update_member_ec2_deep_inspection_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateMemberEc2DeepInspectionStatus_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateMemberEc2DeepInspectionStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /enable:
    post:
      description: Enables Amazon Inspector scans for one or more Amazon Web Services
        accounts.
      operationId: enable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enable_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /encryptionkey/get#resourceType&scanType:
    get:
      description: Gets an encryption key.
      operationId: get_encryption_key
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The resource type the key encrypts.
        explode: true
        in: query
        name: resourceType
        required: true
        schema:
          enum:
          - AWS_EC2_INSTANCE
          - AWS_ECR_CONTAINER_IMAGE
          - AWS_ECR_REPOSITORY
          - AWS_LAMBDA_FUNCTION
          type: string
        style: form
      - description: The scan type the key encrypts.
        explode: true
        in: query
        name: scanType
        required: true
        schema:
          enum:
          - NETWORK
          - PACKAGE
          - CODE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEncryptionKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /encryptionkey/reset:
    put:
      description: Resets an encryption key. After the key is reset your resources
        will be encrypted by an Amazon Web Services owned key.
      operationId: reset_encryption_key
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetEncryptionKey_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetEncryptionKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /encryptionkey/update:
    put:
      description: Updates an encryption key. A <code>ResourceNotFoundException</code>
        means that an AWS owned key is being used for encryption.
      operationId: update_encryption_key
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEncryptionKey_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEncryptionKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /filters/create:
    post:
      description: Creates a filter resource using specified filter criteria.
      operationId: create_filter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilter_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFilterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /filters/delete:
    post:
      description: Deletes a filter resource.
      operationId: delete_filter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFilter_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFilterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /filters/list:
    post:
      description: Lists the filters associated with your account.
      operationId: list_filters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFilters_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFiltersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /filters/update:
    post:
      description: Specifies the action that is to be applied to the findings that
        match the filter.
      operationId: update_filter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFilter_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFilterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /findings/aggregation/list:
    post:
      description: Lists aggregated finding data for your environment based on specific
        criteria.
      operationId: list_finding_aggregations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFindingAggregations_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingAggregationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /findings/details/batch/get:
    post:
      description: Gets vulnerability details for findings.
      operationId: batch_get_finding_details
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetFindingDetails_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetFindingDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /findings/list:
    post:
      description: Lists findings for your environment.
      operationId: list_findings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFindings_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /freetrialinfo/batchget:
    post:
      description: Gets free trial status for multiple Amazon Web Services accounts.
      operationId: batch_get_free_trial_info
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetFreeTrialInfo_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetFreeTrialInfoResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /members/associate:
    post:
      description: "Associates an Amazon Web Services account with an Amazon Inspector\
        \ delegated administrator. An HTTP 200 response indicates the association\
        \ was successfully started, but doesn’t indicate whether it was completed.\
        \ You can check if the association completed by using <a href=\"https://docs.aws.amazon.com/inspector/v2/APIReference/API_ListMembers.html\"\
        >ListMembers</a> for multiple accounts or <a href=\"https://docs.aws.amazon.com/inspector/v2/APIReference/API_GetMember.html\"\
        >GetMembers</a> for a single account."
      operationId: associate_member
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateMember_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateMemberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /members/disassociate:
    post:
      description: Disassociates a member account from an Amazon Inspector delegated
        administrator.
      operationId: disassociate_member
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateMember_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateMemberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /members/get:
    post:
      description: Gets member information for your organization.
      operationId: get_member
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMember_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMemberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /members/list:
    post:
      description: List members associated with the Amazon Inspector delegated administrator
        for your organization.
      operationId: list_members
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMembers_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /organizationconfiguration/describe:
    post:
      description: Describe Amazon Inspector configuration settings for an Amazon
        Web Services organization.
      operationId: describe_organization_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOrganizationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /organizationconfiguration/update:
    post:
      description: Updates the configurations for your Amazon Inspector organization.
      operationId: update_organization_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrganizationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /reporting/cancel:
    post:
      description: Cancels the given findings report.
      operationId: cancel_findings_report
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelFindingsReport_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelFindingsReportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /reporting/create:
    post:
      description: 'Creates a finding report. By default only <code>ACTIVE</code>
        findings are returned in the report. To see <code>SUPRESSED</code> or <code>CLOSED</code>
        findings you must specify a value for the <code>findingStatus</code> filter
        criteria. '
      operationId: create_findings_report
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFindingsReport_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFindingsReportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /reporting/status/get:
    post:
      description: Gets the status of a findings report.
      operationId: get_findings_report_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFindingsReportStatus_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFindingsReportStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sbomexport/cancel:
    post:
      description: Cancels a software bill of materials (SBOM) report.
      operationId: cancel_sbom_export
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelSbomExport_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelSbomExportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sbomexport/create:
    post:
      description: Creates a software bill of materials (SBOM) report.
      operationId: create_sbom_export
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSbomExport_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSbomExportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sbomexport/get:
    post:
      description: Gets details of a software bill of materials (SBOM) report.
      operationId: get_sbom_export
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSbomExport_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSbomExportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /status/batch/get:
    post:
      description: Retrieves the Amazon Inspector status of multiple Amazon Web Services
        accounts within your environment.
      operationId: batch_get_account_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetAccountStatus_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetAccountStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}:
    get:
      description: Lists all tags attached to a given resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon resource number (ARN) of the resource to list tags
          of.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Adds tags to a resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource to apply a tag
          to.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes tags from a resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) for the resource to remove tags
          from.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: simple
      - description: The tag keys to remove from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /usage/list:
    post:
      description: Lists the Amazon Inspector usage totals over the last 30 days.
      operationId: list_usage_totals
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsageTotals_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsageTotalsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /vulnerabilities/search:
    post:
      description: Lists Amazon Inspector coverage details for a specific vulnerability.
      operationId: search_vulnerabilities
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchVulnerabilities_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchVulnerabilitiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateMemberResponse:
      example:
        accountId: ""
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the successfully associated
              member account.
          title: accountId
      required:
      - accountId
      title: AssociateMemberResponse
      type: object
    ValidationException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    InternalServerException: {}
    BatchGetAccountStatusResponse:
      example:
        failedAccounts: ""
        accounts: ""
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/AccountStateList'
          - description: An array of objects that provide details on the status of
              Amazon Inspector for each of the requested accounts.
          title: accounts
        failedAccounts:
          allOf:
          - $ref: '#/components/schemas/FailedAccountList'
          - description: An array of objects detailing any accounts that failed to
              enable Amazon Inspector and why.
          title: failedAccounts
      required:
      - accounts
      title: BatchGetAccountStatusResponse
      type: object
    AccountId:
      maxLength: 12
      minLength: 12
      pattern: "^\\d{12}$"
      title: AccountId
      type: string
    ResourceNotFoundException: {}
    BatchGetCodeSnippetResponse:
      example:
        codeSnippetResults: ""
        errors: ""
      properties:
        codeSnippetResults:
          allOf:
          - $ref: '#/components/schemas/CodeSnippetResultList'
          - description: The retrieved code snippets associated with the provided
              finding ARNs.
          title: codeSnippetResults
        errors:
          allOf:
          - $ref: '#/components/schemas/CodeSnippetErrorList'
          - description: Any errors Amazon Inspector encountered while trying to retrieve
              the requested code snippets.
          title: errors
      title: BatchGetCodeSnippetResponse
      type: object
    FindingArn:
      maxLength: 100
      minLength: 1
      pattern: "^arn:(aws[a-zA-Z-]*)?:inspector2:[a-z]{2}(-gov)?-[a-z]+-\\d{1}:\\\
        d{12}:finding/[a-f0-9]{32}$"
      title: FindingArn
      type: string
    BatchGetFindingDetailsResponse:
      example:
        findingDetails: ""
        errors: ""
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/FindingDetailsErrorList'
          - description: Error information for findings that details could not be
              returned for.
          title: errors
        findingDetails:
          allOf:
          - $ref: '#/components/schemas/FindingDetails'
          - description: A finding's vulnerability details.
          title: findingDetails
      title: BatchGetFindingDetailsResponse
      type: object
    BatchGetFreeTrialInfoResponse:
      example:
        failedAccounts: ""
        accounts: ""
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/FreeTrialAccountInfoList'
          - description: 'An array of objects that provide Amazon Inspector free trial
              details for each of the requested accounts. '
          title: accounts
        failedAccounts:
          allOf:
          - $ref: '#/components/schemas/FreeTrialInfoErrorList'
          - description: An array of objects detailing any accounts that free trial
              data could not be returned for.
          title: failedAccounts
      required:
      - accounts
      - failedAccounts
      title: BatchGetFreeTrialInfoResponse
      type: object
    MeteringAccountId:
      pattern: "[0-9]{12}"
      title: MeteringAccountId
      type: string
    BatchGetMemberEc2DeepInspectionStatusResponse:
      example:
        failedAccountIds: ""
        accountIds: ""
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatusStateList'
          - description: An array of objects that provide details on the activation
              status of Amazon Inspector deep inspection for each of the requested
              accounts. <pre><code> &lt;/p&gt; </code></pre>
          title: accountIds
        failedAccountIds:
          allOf:
          - $ref: '#/components/schemas/FailedMemberAccountEc2DeepInspectionStatusStateList'
          - description: An array of objects that provide details on any accounts
              that failed to activate Amazon Inspector deep inspection and why. <pre><code>
              &lt;/p&gt; </code></pre>
          title: failedAccountIds
      title: BatchGetMemberEc2DeepInspectionStatusResponse
      type: object
    BatchUpdateMemberEc2DeepInspectionStatusResponse:
      example:
        failedAccountIds: ""
        accountIds: ""
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatusStateList'
          - description: 'An array of objects that provide details for each of the
              accounts that Amazon Inspector deep inspection status was successfully
              changed for. '
          title: accountIds
        failedAccountIds:
          allOf:
          - $ref: '#/components/schemas/FailedMemberAccountEc2DeepInspectionStatusStateList'
          - description: 'An array of objects that provide details for each of the
              accounts that Amazon Inspector deep inspection status could not be successfully
              changed for. '
          title: failedAccountIds
      title: BatchUpdateMemberEc2DeepInspectionStatusResponse
      type: object
    MemberAccountEc2DeepInspectionStatus:
      description: An object that contains details about the status of Amazon Inspector
        deep inspection for a member account in your organization.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The unique identifier for the Amazon Web Services account
              of the organization member.
          title: accountId
        activateDeepInspection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Whether Amazon Inspector deep inspection is active in the\
              \ account. If <code>TRUE</code> Amazon Inspector deep inspection is\
              \ active, if <code>FALSE</code> it is not active."
          title: activateDeepInspection
      required:
      - accountId
      - activateDeepInspection
      title: MemberAccountEc2DeepInspectionStatus
      type: object
    CancelFindingsReportResponse:
      example:
        reportId: ""
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: The ID of the canceled report.
          title: reportId
      required:
      - reportId
      title: CancelFindingsReportResponse
      type: object
    CancelSbomExportResponse:
      example:
        reportId: ""
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: The report ID of the canceled SBOM export.
          title: reportId
      title: CancelSbomExportResponse
      type: object
    CreateFilterResponse:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          - description: The Amazon Resource Number (ARN) of the successfully created
              filter.
          title: arn
      required:
      - arn
      title: CreateFilterResponse
      type: object
    StringFilterList:
      items:
        $ref: '#/components/schemas/StringFilter'
      maxItems: 10
      minItems: 1
      type: array
    DateFilterList:
      items:
        $ref: '#/components/schemas/DateFilter'
      maxItems: 10
      minItems: 1
      type: array
    NumberFilterList:
      items:
        $ref: '#/components/schemas/NumberFilter'
      maxItems: 10
      minItems: 1
      type: array
    PortRangeFilterList:
      items:
        $ref: '#/components/schemas/PortRangeFilter'
      maxItems: 10
      minItems: 1
      type: array
    MapFilterList:
      items:
        $ref: '#/components/schemas/MapFilter'
      maxItems: 10
      minItems: 1
      type: array
    PackageFilterList:
      items:
        $ref: '#/components/schemas/PackageFilter'
      maxItems: 10
      minItems: 1
      type: array
    MapValue:
      maxLength: 256
      minLength: 0
      title: MapValue
      type: string
    ServiceQuotaExceededException: {}
    BadRequestException: {}
    CreateFindingsReportResponse:
      example:
        reportId: ""
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: The ID of the report.
          title: reportId
      title: CreateFindingsReportResponse
      type: object
    String:
      title: String
      type: string
    CreateSbomExportResponse:
      example:
        reportId: ""
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: The report ID for the software bill of materials (SBOM) report.
          title: reportId
      title: CreateSbomExportResponse
      type: object
    ResourceStringFilterList:
      items:
        $ref: '#/components/schemas/ResourceStringFilter'
      maxItems: 10
      minItems: 1
      type: array
    ResourceMapFilterList:
      items:
        $ref: '#/components/schemas/ResourceMapFilter'
      maxItems: 10
      minItems: 1
      type: array
    DeleteFilterResponse:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          - description: The Amazon Resource Number (ARN) of the filter that has been
              deleted.
          title: arn
      required:
      - arn
      title: DeleteFilterResponse
      type: object
    DescribeOrganizationConfigurationResponse:
      example:
        autoEnable:
          lambda: ""
          ec2: ""
          ecr: ""
          lambdaCode: ""
        maxAccountLimitReached: ""
      properties:
        autoEnable:
          $ref: '#/components/schemas/DescribeOrganizationConfigurationResponse_autoEnable'
        maxAccountLimitReached:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Represents whether your organization has reached the maximum
              Amazon Web Services account limit for Amazon Inspector.
          title: maxAccountLimitReached
      title: DescribeOrganizationConfigurationResponse
      type: object
    DisableResponse:
      example:
        failedAccounts: ""
        accounts: ""
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/AccountList'
          - description: Information on the accounts that have had Amazon Inspector
              scans successfully disabled. Details are provided for each account.
          title: accounts
        failedAccounts:
          allOf:
          - $ref: '#/components/schemas/FailedAccountList'
          - description: Information on any accounts for which Amazon Inspector scans
              could not be disabled. Details are provided for each account.
          title: failedAccounts
      required:
      - accounts
      title: DisableResponse
      type: object
    ResourceScanType:
      enum:
      - EC2
      - ECR
      - LAMBDA
      - LAMBDA_CODE
      title: ResourceScanType
      type: string
    DisableDelegatedAdminAccountResponse:
      example:
        delegatedAdminAccountId: ""
      properties:
        delegatedAdminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the successfully disabled
              delegated administrator.
          title: delegatedAdminAccountId
      required:
      - delegatedAdminAccountId
      title: DisableDelegatedAdminAccountResponse
      type: object
    ConflictException: {}
    DisassociateMemberResponse:
      example:
        accountId: ""
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the successfully disassociated
              member.
          title: accountId
      required:
      - accountId
      title: DisassociateMemberResponse
      type: object
    EnableResponse:
      example:
        failedAccounts: ""
        accounts: ""
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/AccountList'
          - description: Information on the accounts that have had Amazon Inspector
              scans successfully enabled. Details are provided for each account.
          title: accounts
        failedAccounts:
          allOf:
          - $ref: '#/components/schemas/FailedAccountList'
          - description: Information on any accounts for which Amazon Inspector scans
              could not be enabled. Details are provided for each account.
          title: failedAccounts
      required:
      - accounts
      title: EnableResponse
      type: object
    EnableDelegatedAdminAccountResponse:
      example:
        delegatedAdminAccountId: ""
      properties:
        delegatedAdminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the successfully Amazon
              Inspector delegated administrator.
          title: delegatedAdminAccountId
      required:
      - delegatedAdminAccountId
      title: EnableDelegatedAdminAccountResponse
      type: object
    GetConfigurationResponse:
      example:
        ecrConfiguration:
          rescanDurationState:
            rescanDuration: ""
            status: ""
            updatedAt: ""
      properties:
        ecrConfiguration:
          $ref: '#/components/schemas/GetConfigurationResponse_ecrConfiguration'
      title: GetConfigurationResponse
      type: object
    GetDelegatedAdminAccountResponse:
      example:
        delegatedAdmin:
          accountId: ""
          relationshipStatus: ""
      properties:
        delegatedAdmin:
          $ref: '#/components/schemas/GetDelegatedAdminAccountResponse_delegatedAdmin'
      title: GetDelegatedAdminAccountResponse
      type: object
    GetEc2DeepInspectionConfigurationResponse:
      example:
        orgPackagePaths: ""
        errorMessage: ""
        packagePaths: ""
        status: ""
      properties:
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: An error message explaining why Amazon Inspector deep inspection
              configurations could not be retrieved for your account.
          title: errorMessage
        orgPackagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: The Amazon Inspector deep inspection custom paths for your
              organization.
          title: orgPackagePaths
        packagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: The Amazon Inspector deep inspection custom paths for your
              account.
          title: packagePaths
        status:
          allOf:
          - $ref: '#/components/schemas/Ec2DeepInspectionStatus'
          - description: The activation status of Amazon Inspector deep inspection
              in your account.
          title: status
      title: GetEc2DeepInspectionConfigurationResponse
      type: object
    GetEncryptionKeyResponse:
      example:
        kmsKeyId: ""
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: A kms key ID.
          title: kmsKeyId
      required:
      - kmsKeyId
      title: GetEncryptionKeyResponse
      type: object
    GetFindingsReportStatusResponse:
      example:
        filterCriteria:
          portRange: ""
          fixAvailable: ""
          resourceId: ""
          awsAccountId: ""
          componentId: ""
          codeVulnerabilityDetectorName: ""
          ecrImageHash: ""
          vendorSeverity: ""
          vulnerabilitySource: ""
          lambdaFunctionRuntime: ""
          codeVulnerabilityDetectorTags: ""
          title: ""
          ecrImagePushedAt: ""
          ecrImageRepositoryName: ""
          ecrImageRegistry: ""
          firstObservedAt: ""
          resourceTags: ""
          vulnerabilityId: ""
          lambdaFunctionName: ""
          ec2InstanceSubnetId: ""
          updatedAt: ""
          severity: ""
          componentType: ""
          relatedVulnerabilities: ""
          lastObservedAt: ""
          ec2InstanceImageId: ""
          epssScore: ""
          vulnerablePackages: ""
          lambdaFunctionLayers: ""
          inspectorScore: ""
          lambdaFunctionLastModifiedAt: ""
          lambdaFunctionExecutionRoleArn: ""
          findingType: ""
          ecrImageArchitecture: ""
          ec2InstanceVpcId: ""
          ecrImageTags: ""
          findingStatus: ""
          codeVulnerabilityFilePath: ""
          exploitAvailable: ""
          findingArn: ""
          networkProtocol: ""
          resourceType: ""
        reportId: ""
        destination:
          bucketName: ""
          kmsKeyArn: ""
          keyPrefix: ""
        errorMessage: ""
        errorCode: ""
        status: ""
      properties:
        destination:
          $ref: '#/components/schemas/GetFindingsReportStatusResponse_destination'
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ReportingErrorCode'
          - description: The error code of the report.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The error message of the report.
          title: errorMessage
        filterCriteria:
          $ref: '#/components/schemas/GetFindingsReportStatusResponse_filterCriteria'
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: The ID of the report.
          title: reportId
        status:
          allOf:
          - $ref: '#/components/schemas/ExternalReportStatus'
          - description: The status of the report.
          title: status
      title: GetFindingsReportStatusResponse
      type: object
    GetMemberResponse:
      example:
        member:
          accountId: ""
          delegatedAdminAccountId: ""
          relationshipStatus: ""
          updatedAt: ""
      properties:
        member:
          $ref: '#/components/schemas/GetMemberResponse_member'
      title: GetMemberResponse
      type: object
    GetSbomExportResponse:
      example:
        filterCriteria:
          accountId: ""
          ec2InstanceTags: ""
          resourceId: ""
          ecrImageTags: ""
          lambdaFunctionName: ""
          lambdaFunctionTags: ""
          ecrRepositoryName: ""
          resourceType: ""
        s3Destination:
          bucketName: ""
          kmsKeyArn: ""
          keyPrefix: ""
        reportId: ""
        errorMessage: ""
        format: ""
        errorCode: ""
        status: ""
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ReportingErrorCode'
          - description: An error code.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: An error message.
          title: errorMessage
        filterCriteria:
          $ref: '#/components/schemas/GetSbomExportResponse_filterCriteria'
        format:
          allOf:
          - $ref: '#/components/schemas/SbomReportFormat'
          - description: The format of the software bill of materials (SBOM) report.
          title: format
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: The report ID of the software bill of materials (SBOM) report.
          title: reportId
        s3Destination:
          $ref: '#/components/schemas/Destination'
        status:
          allOf:
          - $ref: '#/components/schemas/ExternalReportStatus'
          - description: The status of the software bill of materials (SBOM) report.
          title: status
      title: GetSbomExportResponse
      type: object
    ListAccountPermissionsResponse:
      example:
        nextToken: ""
        permissions: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
          title: nextToken
        permissions:
          allOf:
          - $ref: '#/components/schemas/Permissions'
          - description: Contains details on the permissions an account has to configure
              Amazon Inspector.
          title: permissions
      required:
      - permissions
      title: ListAccountPermissionsResponse
      type: object
    ListCoverageResponse:
      example:
        coveredResources: ""
        nextToken: ""
      properties:
        coveredResources:
          allOf:
          - $ref: '#/components/schemas/CoveredResources'
          - description: An object that contains details on the covered resources
              in your environment.
          title: coveredResources
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
          title: nextToken
      title: ListCoverageResponse
      type: object
    CoverageStringFilterList:
      items:
        $ref: '#/components/schemas/CoverageStringFilter'
      maxItems: 10
      minItems: 1
      type: array
    CoverageMapFilterList:
      items:
        $ref: '#/components/schemas/CoverageMapFilter'
      maxItems: 10
      minItems: 1
      type: array
    CoverageDateFilterList:
      items:
        $ref: '#/components/schemas/CoverageDateFilter'
      maxItems: 10
      minItems: 1
      type: array
    ListCoverageStatisticsResponse:
      example:
        nextToken: ""
        countsByGroup: ""
        totalCounts: ""
      properties:
        countsByGroup:
          allOf:
          - $ref: '#/components/schemas/CountsList'
          - description: An array with the number for each group.
          title: countsByGroup
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
          title: nextToken
        totalCounts:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The total number for all groups.
          title: totalCounts
      required:
      - totalCounts
      title: ListCoverageStatisticsResponse
      type: object
    ListDelegatedAdminAccountsResponse:
      example:
        nextToken: ""
        delegatedAdminAccounts: ""
      properties:
        delegatedAdminAccounts:
          allOf:
          - $ref: '#/components/schemas/DelegatedAdminAccountList'
          - description: Details of the Amazon Inspector delegated administrator of
              your organization.
          title: delegatedAdminAccounts
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
          title: nextToken
      title: ListDelegatedAdminAccountsResponse
      type: object
    ListFiltersResponse:
      example:
        nextToken: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: Contains details on the filters associated with your account.
          title: filters
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
          title: nextToken
      required:
      - filters
      title: ListFiltersResponse
      type: object
    FilterArn:
      maxLength: 128
      minLength: 1
      title: FilterArn
      type: string
    ListFindingAggregationsResponse:
      example:
        aggregationType: ""
        nextToken: ""
        responses: ""
      properties:
        aggregationType:
          allOf:
          - $ref: '#/components/schemas/AggregationType'
          - description: The type of aggregation to perform.
          title: aggregationType
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
          title: nextToken
        responses:
          allOf:
          - $ref: '#/components/schemas/AggregationResponseList'
          - description: Objects that contain the results of an aggregation operation.
          title: responses
      required:
      - aggregationType
      title: ListFindingAggregationsResponse
      type: object
    StringFilter:
      description: An object that describes the details of a string filter.
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/StringComparison'
          - description: The operator to use when comparing values in the filter.
          title: comparison
        value:
          allOf:
          - $ref: '#/components/schemas/StringInput'
          - description: The value to filter on.
          title: value
      required:
      - comparison
      - value
      title: StringFilter
      type: object
    AccountAggregation:
      description: An object that contains details about an aggregation response based
        on Amazon Web Services accounts.
      properties:
        findingType:
          allOf:
          - $ref: '#/components/schemas/AggregationFindingType'
          - description: The type of finding.
          title: findingType
        resourceType:
          allOf:
          - $ref: '#/components/schemas/AggregationResourceType'
          - description: The type of resource.
          title: resourceType
        sortBy:
          allOf:
          - $ref: '#/components/schemas/AccountSortBy'
          - description: The value to sort by.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The sort order (ascending or descending).
          title: sortOrder
      title: AccountAggregation
      type: object
    AmiAggregation:
      description: The details that define an aggregation based on Amazon machine
        images (AMIs).
      properties:
        amis:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The IDs of AMIs to aggregate findings for.
          title: amis
        sortBy:
          allOf:
          - $ref: '#/components/schemas/AmiSortBy'
          - description: The value to sort results by.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order to sort results by.
          title: sortOrder
      title: AmiAggregation
      type: object
    AwsEcrContainerAggregation:
      description: An aggregation of information about Amazon ECR containers.
      properties:
        architectures:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The architecture of the containers.
          title: architectures
        imageShas:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The image SHA values.
          title: imageShas
        imageTags:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The image tags.
          title: imageTags
        repositories:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The container repositories.
          title: repositories
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The container resource IDs.
          title: resourceIds
        sortBy:
          allOf:
          - $ref: '#/components/schemas/AwsEcrContainerSortBy'
          - description: The value to sort by.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The sort order (ascending or descending).
          title: sortOrder
      title: AwsEcrContainerAggregation
      type: object
    Ec2InstanceAggregation:
      description: The details that define an aggregation based on Amazon EC2 instances.
      properties:
        amis:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The AMI IDs associated with the Amazon EC2 instances to aggregate
              findings for.
          title: amis
        instanceIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The Amazon EC2 instance IDs to aggregate findings for.
          title: instanceIds
        instanceTags:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          - description: The Amazon EC2 instance tags to aggregate findings for.
          title: instanceTags
        operatingSystems:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: "The operating system types to aggregate findings for. Valid\
              \ values must be uppercase and underscore separated, examples are <code>ORACLE_LINUX_7</code>\
              \ and <code>ALPINE_LINUX_3_8</code>."
          title: operatingSystems
        sortBy:
          allOf:
          - $ref: '#/components/schemas/Ec2InstanceSortBy'
          - description: The value to sort results by.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order to sort results by.
          title: sortOrder
      title: Ec2InstanceAggregation
      type: object
    FindingTypeAggregation:
      description: The details that define an aggregation based on finding type.
      properties:
        findingType:
          allOf:
          - $ref: '#/components/schemas/AggregationFindingType'
          - description: The finding type to aggregate.
          title: findingType
        resourceType:
          allOf:
          - $ref: '#/components/schemas/AggregationResourceType'
          - description: The resource type to aggregate.
          title: resourceType
        sortBy:
          allOf:
          - $ref: '#/components/schemas/FindingTypeSortBy'
          - description: The value to sort results by.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order to sort results by.
          title: sortOrder
      title: FindingTypeAggregation
      type: object
    ImageLayerAggregation:
      description: The details that define an aggregation based on container image
        layers.
      properties:
        layerHashes:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The hashes associated with the layers.
          title: layerHashes
        repositories:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The repository associated with the container image hosting
              the layers.
          title: repositories
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The ID of the container image layer.
          title: resourceIds
        sortBy:
          allOf:
          - $ref: '#/components/schemas/ImageLayerSortBy'
          - description: The value to sort results by.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order to sort results by.
          title: sortOrder
      title: ImageLayerAggregation
      type: object
    LambdaFunctionAggregation:
      description: The details that define a findings aggregation based on AWS Lambda
        functions.
      properties:
        functionNames:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The AWS Lambda function names to include in the aggregation
              results.
          title: functionNames
        functionTags:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          - description: The tags to include in the aggregation results.
          title: functionTags
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The resource IDs to include in the aggregation results.
          title: resourceIds
        runtimes:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Returns findings aggregated by AWS Lambda function runtime
              environments.
          title: runtimes
        sortBy:
          allOf:
          - $ref: '#/components/schemas/LambdaFunctionSortBy'
          - description: The finding severity to use for sorting the results.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order to use for sorting the results.
          title: sortOrder
      title: LambdaFunctionAggregation
      type: object
    LambdaLayerAggregation:
      description: The details that define a findings aggregation based on an AWS
        Lambda function's layers.
      properties:
        functionNames:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The names of the AWS Lambda functions associated with the
              layers.
          title: functionNames
        layerArns:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: 'The Amazon Resource Name (ARN) of the AWS Lambda function
              layer. '
          title: layerArns
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The resource IDs for the AWS Lambda function layers.
          title: resourceIds
        sortBy:
          allOf:
          - $ref: '#/components/schemas/LambdaLayerSortBy'
          - description: The finding severity to use for sorting the results.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order to use for sorting the results.
          title: sortOrder
      title: LambdaLayerAggregation
      type: object
    PackageAggregation:
      description: The details that define an aggregation based on operating system
        package type.
      properties:
        packageNames:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The names of packages to aggregate findings on.
          title: packageNames
        sortBy:
          allOf:
          - $ref: '#/components/schemas/PackageSortBy'
          - description: The value to sort results by.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order to sort results by.
          title: sortOrder
      title: PackageAggregation
      type: object
    RepositoryAggregation:
      description: The details that define an aggregation based on repository.
      properties:
        repositories:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The names of repositories to aggregate findings on.
          title: repositories
        sortBy:
          allOf:
          - $ref: '#/components/schemas/RepositorySortBy'
          - description: The value to sort results by.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order to sort results by.
          title: sortOrder
      title: RepositoryAggregation
      type: object
    TitleAggregation:
      description: The details that define an aggregation based on finding title.
      properties:
        findingType:
          allOf:
          - $ref: '#/components/schemas/AggregationFindingType'
          - description: The type of finding to aggregate on.
          title: findingType
        resourceType:
          allOf:
          - $ref: '#/components/schemas/AggregationResourceType'
          - description: The resource type to aggregate on.
          title: resourceType
        sortBy:
          allOf:
          - $ref: '#/components/schemas/TitleSortBy'
          - description: The value to sort results by.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order to sort results by.
          title: sortOrder
        titles:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The finding titles to aggregate on.
          title: titles
        vulnerabilityIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The vulnerability IDs of the findings.
          title: vulnerabilityIds
      title: TitleAggregation
      type: object
    ListFindingsResponse:
      example:
        nextToken: ""
        findings: ""
      properties:
        findings:
          allOf:
          - $ref: '#/components/schemas/FindingList'
          - description: Contains details on the findings in your environment.
          title: findings
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
          title: nextToken
      title: ListFindingsResponse
      type: object
    SortField:
      enum:
      - AWS_ACCOUNT_ID
      - FINDING_TYPE
      - SEVERITY
      - FIRST_OBSERVED_AT
      - LAST_OBSERVED_AT
      - FINDING_STATUS
      - RESOURCE_TYPE
      - ECR_IMAGE_PUSHED_AT
      - ECR_IMAGE_REPOSITORY_NAME
      - ECR_IMAGE_REGISTRY
      - NETWORK_PROTOCOL
      - COMPONENT_TYPE
      - VULNERABILITY_ID
      - VULNERABILITY_SOURCE
      - INSPECTOR_SCORE
      - VENDOR_SEVERITY
      - EPSS_SCORE
      title: SortField
      type: string
    SortOrder:
      enum:
      - ASC
      - DESC
      title: SortOrder
      type: string
    ListMembersResponse:
      example:
        nextToken: ""
        members: ""
      properties:
        members:
          allOf:
          - $ref: '#/components/schemas/MemberList'
          - description: An object that contains details for each member account.
          title: members
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination parameter to be used on the next list operation
              to retrieve more items.
          title: nextToken
      title: ListMembersResponse
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags associated with the resource.
          title: tags
      title: ListTagsForResourceResponse
      type: object
    ListUsageTotalsResponse:
      example:
        nextToken: ""
        totals: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/ListUsageTotalsNextToken'
          - description: The pagination parameter to be used on the next list operation
              to retrieve more items.
          title: nextToken
        totals:
          allOf:
          - $ref: '#/components/schemas/UsageTotalList'
          - description: An object with details on the total usage for the requested
              account.
          title: totals
      title: ListUsageTotalsResponse
      type: object
    UsageAccountId:
      pattern: "[0-9]{12}"
      title: UsageAccountId
      type: string
    ResetEncryptionKeyResponse:
      properties: {}
      type: object
    SearchVulnerabilitiesResponse:
      example:
        nextToken: ""
        vulnerabilities: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination parameter to be used on the next list operation
              to retrieve more items.
          title: nextToken
        vulnerabilities:
          allOf:
          - $ref: '#/components/schemas/Vulnerabilities'
          - description: Details about the listed vulnerability.
          title: vulnerabilities
      required:
      - vulnerabilities
      title: SearchVulnerabilitiesResponse
      type: object
    VulnIdList:
      items:
        $ref: '#/components/schemas/VulnId'
      maxItems: 1
      minItems: 1
      type: array
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      title: TagKey
      type: string
    UpdateConfigurationResponse:
      properties: {}
      type: object
    EcrRescanDuration:
      enum:
      - LIFETIME
      - DAYS_30
      - DAYS_180
      title: EcrRescanDuration
      type: string
    UpdateEc2DeepInspectionConfigurationResponse:
      example:
        orgPackagePaths: ""
        errorMessage: ""
        packagePaths: ""
        status: ""
      properties:
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: An error message explaining why new Amazon Inspector deep
              inspection custom paths could not be added.
          title: errorMessage
        orgPackagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: The current Amazon Inspector deep inspection custom paths
              for the organization.
          title: orgPackagePaths
        packagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: The current Amazon Inspector deep inspection custom paths
              for your account.
          title: packagePaths
        status:
          allOf:
          - $ref: '#/components/schemas/Ec2DeepInspectionStatus'
          - description: The status of Amazon Inspector deep inspection in your account.
          title: status
      title: UpdateEc2DeepInspectionConfigurationResponse
      type: object
    Path:
      maxLength: 512
      minLength: 1
      pattern: "^(?:/(?:\\.[-\\w]+|[-\\w]+(?:\\.[-\\w]+)?))+/?$"
      title: Path
      type: string
    UpdateEncryptionKeyResponse:
      properties: {}
      type: object
    UpdateFilterResponse:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          - description: The Amazon Resource Number (ARN) of the successfully updated
              filter.
          title: arn
      required:
      - arn
      title: UpdateFilterResponse
      type: object
    UpdateOrgEc2DeepInspectionConfigurationResponse:
      properties: {}
      type: object
    UpdateOrganizationConfigurationResponse:
      example:
        autoEnable:
          lambda: ""
          ec2: ""
          ecr: ""
          lambdaCode: ""
      properties:
        autoEnable:
          $ref: '#/components/schemas/UpdateOrganizationConfigurationResponse_autoEnable'
      required:
      - autoEnable
      title: UpdateOrganizationConfigurationResponse
      type: object
    Boolean:
      type: boolean
    ResourceStatus:
      description: Details the status of Amazon Inspector for each resource type Amazon
        Inspector scans.
      properties:
        ec2:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of Amazon Inspector scanning for Amazon EC2 resources.
          title: ec2
        ecr:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of Amazon Inspector scanning for Amazon ECR resources.
          title: ecr
        lambda:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of Amazon Inspector scanning for AWS Lambda function.
          title: lambda
        lambdaCode:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: 'The status of Amazon Inspector scanning for custom application
              code for Amazon Web Services Lambda functions. '
          title: lambdaCode
      required:
      - ec2
      - ecr
      title: ResourceStatus
      type: object
    Status:
      enum:
      - ENABLING
      - ENABLED
      - DISABLING
      - DISABLED
      - SUSPENDING
      - SUSPENDED
      title: Status
      type: string
    Account:
      description: An Amazon Web Services account within your environment that Amazon
        Inspector has been enabled for.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The ID of the Amazon Web Services account.
          title: accountId
        resourceStatus:
          $ref: '#/components/schemas/Account_resourceStatus'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of Amazon Inspector for the account.
          title: status
      required:
      - accountId
      - resourceStatus
      - status
      title: Account
      type: object
    AggregationFindingType:
      enum:
      - NETWORK_REACHABILITY
      - PACKAGE_VULNERABILITY
      - CODE_VULNERABILITY
      title: AggregationFindingType
      type: string
    AggregationResourceType:
      enum:
      - AWS_EC2_INSTANCE
      - AWS_ECR_CONTAINER_IMAGE
      - AWS_LAMBDA_FUNCTION
      title: AggregationResourceType
      type: string
    AccountSortBy:
      enum:
      - CRITICAL
      - HIGH
      - ALL
      title: AccountSortBy
      type: string
    SeverityCounts:
      description: An object that contains the counts of aggregated finding per severity.
      properties:
        all:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The total count of findings from all severities.
          title: all
        critical:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The total count of critical severity findings.
          title: critical
        high:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The total count of high severity findings.
          title: high
        medium:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The total count of medium severity findings.
          title: medium
      title: SeverityCounts
      type: object
    AccountAggregationResponse:
      description: An aggregation of findings by Amazon Web Services account ID.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID.
          title: accountId
        severityCounts:
          $ref: '#/components/schemas/AccountAggregationResponse_severityCounts'
      title: AccountAggregationResponse
      type: object
    AccountIdSet:
      items:
        $ref: '#/components/schemas/AccountId'
      maxItems: 100
      minItems: 0
      type: array
    AccountList:
      items:
        $ref: '#/components/schemas/Account'
      type: array
    ResourceState:
      description: Details the state of Amazon Inspector for each resource type Amazon
        Inspector scans.
      properties:
        ec2:
          $ref: '#/components/schemas/ResourceState_ec2'
        ecr:
          $ref: '#/components/schemas/ResourceState_ecr'
        lambda:
          $ref: '#/components/schemas/State'
        lambdaCode:
          $ref: '#/components/schemas/State'
      required:
      - ec2
      - ecr
      title: ResourceState
      type: object
    State:
      description: An object that described the state of Amazon Inspector scans for
        an account.
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The error code explaining why the account failed to enable
              Amazon Inspector.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The error message received when the account failed to enable
              Amazon Inspector.
          title: errorMessage
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of Amazon Inspector for the account.
          title: status
      required:
      - errorCode
      - errorMessage
      - status
      title: State
      type: object
    AccountState:
      description: An object with details the status of an Amazon Web Services account
        within your Amazon Inspector environment.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID.
          title: accountId
        resourceState:
          $ref: '#/components/schemas/AccountState_resourceState'
        state:
          $ref: '#/components/schemas/AccountState_state'
      required:
      - accountId
      - resourceState
      - state
      title: AccountState
      type: object
    AccountStateList:
      items:
        $ref: '#/components/schemas/AccountState'
      maxItems: 100
      minItems: 0
      type: array
    AggCounts:
      type: integer
    AggregationRequest:
      description: Contains details about an aggregation request.
      properties:
        accountAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_accountAggregation'
        amiAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_amiAggregation'
        awsEcrContainerAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_awsEcrContainerAggregation'
        ec2InstanceAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_ec2InstanceAggregation'
        findingTypeAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_findingTypeAggregation'
        imageLayerAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_imageLayerAggregation'
        lambdaFunctionAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_lambdaFunctionAggregation'
        lambdaLayerAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_lambdaLayerAggregation'
        packageAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_packageAggregation'
        repositoryAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_repositoryAggregation'
        titleAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_titleAggregation'
      title: AggregationRequest
      type: object
    AmiAggregationResponse:
      description: A response that contains the results of a finding aggregation by
        AMI.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID for the AMI.
          title: accountId
        affectedInstances:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The IDs of Amazon EC2 instances using this AMI.
          title: affectedInstances
        ami:
          allOf:
          - $ref: '#/components/schemas/AmiId'
          - description: The ID of the AMI that findings were aggregated for.
          title: ami
        severityCounts:
          $ref: '#/components/schemas/AmiAggregationResponse_severityCounts'
      required:
      - ami
      title: AmiAggregationResponse
      type: object
    AwsEcrContainerAggregationResponse:
      description: An aggregation of information about Amazon ECR containers.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the account that owns
              the container.
          title: accountId
        architecture:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The architecture of the container.
          title: architecture
        imageSha:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The SHA value of the container image.
          title: imageSha
        imageTags:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The container image stags.
          title: imageTags
        repository:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The container repository.
          title: repository
        resourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The resource ID of the container.
          title: resourceId
        severityCounts:
          $ref: '#/components/schemas/AwsEcrContainerAggregationResponse_severityCounts'
      required:
      - resourceId
      title: AwsEcrContainerAggregationResponse
      type: object
    Ec2InstanceAggregationResponse:
      description: A response that contains the results of a finding aggregation by
        Amazon EC2 instance.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Web Services account for the Amazon EC2 instance.
          title: accountId
        ami:
          allOf:
          - $ref: '#/components/schemas/AmiId'
          - description: The Amazon Machine Image (AMI) of the Amazon EC2 instance.
          title: ami
        instanceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The Amazon EC2 instance ID.
          title: instanceId
        instanceTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags attached to the instance.
          title: instanceTags
        networkFindings:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of network findings for the Amazon EC2 instance.
          title: networkFindings
        operatingSystem:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The operating system of the Amazon EC2 instance.
          title: operatingSystem
        severityCounts:
          $ref: '#/components/schemas/AmiAggregationResponse_severityCounts'
      required:
      - instanceId
      title: Ec2InstanceAggregationResponse
      type: object
    FindingTypeAggregationResponse:
      description: A response that contains the results of a finding type aggregation.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The ID of the Amazon Web Services account associated with
              the findings.
          title: accountId
        severityCounts:
          $ref: '#/components/schemas/FindingTypeAggregationResponse_severityCounts'
      title: FindingTypeAggregationResponse
      type: object
    ImageLayerAggregationResponse:
      description: A response that contains the results of a finding aggregation by
        image layer.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The ID of the Amazon Web Services account that owns the container
              image hosting the layer image.
          title: accountId
        layerHash:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The layer hash.
          title: layerHash
        repository:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The repository the layer resides in.
          title: repository
        resourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The resource ID of the container image layer.
          title: resourceId
        severityCounts:
          $ref: '#/components/schemas/ImageLayerAggregationResponse_severityCounts'
      required:
      - accountId
      - layerHash
      - repository
      - resourceId
      title: ImageLayerAggregationResponse
      type: object
    LambdaFunctionAggregationResponse:
      description: A response that contains the results of an AWS Lambda function
        finding aggregation.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: 'The ID of the AWS account that owns the AWS Lambda function. '
          title: accountId
        functionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The AWS Lambda function names included in the aggregation
              results.
          title: functionName
        lambdaTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags included in the aggregation results.
          title: lambdaTags
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date that the AWS Lambda function included in the aggregation
              results was last changed.
          title: lastModifiedAt
        resourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The resource IDs included in the aggregation results.
          title: resourceId
        runtime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The runtimes included in the aggregation results.
          title: runtime
        severityCounts:
          $ref: '#/components/schemas/SeverityCounts'
      required:
      - resourceId
      title: LambdaFunctionAggregationResponse
      type: object
    LambdaLayerAggregationResponse:
      description: A response that contains the results of an AWS Lambda function
        layer finding aggregation.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The account ID of the AWS Lambda function layer.
          title: accountId
        functionName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The names of the AWS Lambda functions associated with the
              layers.
          title: functionName
        layerArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The Amazon Resource Name (ARN) of the AWS Lambda function
              layer.
          title: layerArn
        resourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The Resource ID of the AWS Lambda function layer.
          title: resourceId
        severityCounts:
          $ref: '#/components/schemas/SeverityCounts'
      required:
      - accountId
      - functionName
      - layerArn
      - resourceId
      title: LambdaLayerAggregationResponse
      type: object
    PackageAggregationResponse:
      description: A response that contains the results of a finding aggregation by
        image layer.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The ID of the Amazon Web Services account associated with
              the findings.
          title: accountId
        packageName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The name of the operating system package.
          title: packageName
        severityCounts:
          $ref: '#/components/schemas/AmiAggregationResponse_severityCounts'
      required:
      - packageName
      title: PackageAggregationResponse
      type: object
    RepositoryAggregationResponse:
      description: A response that contains details on the results of a finding aggregation
        by repository.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The ID of the Amazon Web Services account associated with
              the findings.
          title: accountId
        affectedImages:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of container images impacted by the findings.
          title: affectedImages
        repository:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The name of the repository associated with the findings.
          title: repository
        severityCounts:
          $ref: '#/components/schemas/RepositoryAggregationResponse_severityCounts'
      required:
      - repository
      title: RepositoryAggregationResponse
      type: object
    TitleAggregationResponse:
      description: A response that contains details on the results of a finding aggregation
        by title.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The ID of the Amazon Web Services account associated with
              the findings.
          title: accountId
        severityCounts:
          $ref: '#/components/schemas/RepositoryAggregationResponse_severityCounts'
        title:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The title that the findings were aggregated on.
          title: title
        vulnerabilityId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The vulnerability ID of the finding.
          title: vulnerabilityId
      required:
      - title
      title: TitleAggregationResponse
      type: object
    AggregationResponse:
      description: A structure that contains details about the results of an aggregation
        type.
      properties:
        accountAggregation:
          $ref: '#/components/schemas/AggregationResponse_accountAggregation'
        amiAggregation:
          $ref: '#/components/schemas/AggregationResponse_amiAggregation'
        awsEcrContainerAggregation:
          $ref: '#/components/schemas/AggregationResponse_awsEcrContainerAggregation'
        ec2InstanceAggregation:
          $ref: '#/components/schemas/AggregationResponse_ec2InstanceAggregation'
        findingTypeAggregation:
          $ref: '#/components/schemas/AggregationResponse_findingTypeAggregation'
        imageLayerAggregation:
          $ref: '#/components/schemas/AggregationResponse_imageLayerAggregation'
        lambdaFunctionAggregation:
          $ref: '#/components/schemas/AggregationResponse_lambdaFunctionAggregation'
        lambdaLayerAggregation:
          $ref: '#/components/schemas/AggregationResponse_lambdaLayerAggregation'
        packageAggregation:
          $ref: '#/components/schemas/AggregationResponse_packageAggregation'
        repositoryAggregation:
          $ref: '#/components/schemas/AggregationResponse_repositoryAggregation'
        titleAggregation:
          $ref: '#/components/schemas/AggregationResponse_titleAggregation'
      title: AggregationResponse
      type: object
    AggregationResponseList:
      items:
        $ref: '#/components/schemas/AggregationResponse'
      type: array
    AggregationType:
      enum:
      - FINDING_TYPE
      - PACKAGE
      - TITLE
      - REPOSITORY
      - AMI
      - AWS_EC2_INSTANCE
      - AWS_ECR_CONTAINER
      - IMAGE_LAYER
      - ACCOUNT
      - AWS_LAMBDA_FUNCTION
      - LAMBDA_LAYER
      title: AggregationType
      type: string
    AmiSortBy:
      enum:
      - CRITICAL
      - HIGH
      - ALL
      - AFFECTED_INSTANCES
      title: AmiSortBy
      type: string
    Long:
      type: integer
    AmiId:
      pattern: "^ami-([a-z0-9]{8}|[a-z0-9]{17}|\\*)$"
      type: string
    Architecture:
      enum:
      - X86_64
      - ARM64
      title: Architecture
      type: string
    ArchitectureList:
      items:
        $ref: '#/components/schemas/Architecture'
      maxItems: 1
      minItems: 1
      type: array
    Arn:
      maxLength: 1011
      minLength: 1
      type: string
    AssociateMemberRequest:
      example:
        accountId: ""
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the member account
              to be associated.
      required:
      - accountId
      title: AssociateMemberRequest
      type: object
    FirstSeen:
      format: date-time
      type: string
    LastSeen:
      format: date-time
      type: string
    Targets:
      items:
        $ref: '#/components/schemas/Target'
      minItems: 0
      type: array
    Ttps:
      items:
        $ref: '#/components/schemas/Ttp'
      minItems: 0
      type: array
    AtigData:
      description: The Amazon Web Services Threat Intel Group (ATIG) details for a
        specific vulnerability.
      properties:
        firstSeen:
          allOf:
          - $ref: '#/components/schemas/FirstSeen'
          - description: The date and time this vulnerability was first observed.
          title: firstSeen
        lastSeen:
          allOf:
          - $ref: '#/components/schemas/LastSeen'
          - description: The date and time this vulnerability was last observed.
          title: lastSeen
        targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The commercial sectors this vulnerability targets.
          title: targets
        ttps:
          allOf:
          - $ref: '#/components/schemas/Ttps'
          - description: "The <a href=\"https://attack.mitre.org/\">MITRE ATT&amp;CK</a>\
              \ tactics, techniques, and procedures (TTPs) associated with vulnerability."
          title: ttps
      title: AtigData
      type: object
    AutoEnable:
      description: Represents which scan types are automatically enabled for new members
        of your Amazon Inspector organization.
      properties:
        ec2:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Represents whether Amazon EC2 scans are automatically enabled
              for new members of your Amazon Inspector organization.
          title: ec2
        ecr:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Represents whether Amazon ECR scans are automatically enabled
              for new members of your Amazon Inspector organization.
          title: ecr
        lambda:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: 'Represents whether AWS Lambda standard scans are automatically
              enabled for new members of your Amazon Inspector organization. '
          title: lambda
        lambdaCode:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Represents whether AWS Lambda code scans are automatically
              enabled for new members of your Amazon Inspector organization. <pre><code>
              &lt;/p&gt; </code></pre>
          title: lambdaCode
      required:
      - ec2
      - ecr
      title: AutoEnable
      type: object
    NonEmptyString:
      minLength: 1
      title: NonEmptyString
      type: string
    IpV4AddressList:
      items:
        $ref: '#/components/schemas/IpV4Address'
      type: array
    IpV6AddressList:
      items:
        $ref: '#/components/schemas/IpV6Address'
      type: array
    DateTimeTimestamp:
      format: date-time
      type: string
    Platform:
      maxLength: 1024
      minLength: 1
      type: string
    AwsEc2InstanceDetails:
      description: Details of the Amazon EC2 instance involved in a finding.
      properties:
        iamInstanceProfileArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The IAM instance profile ARN of the Amazon EC2 instance.
          title: iamInstanceProfileArn
        imageId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The image ID of the Amazon EC2 instance.
          title: imageId
        ipV4Addresses:
          allOf:
          - $ref: '#/components/schemas/IpV4AddressList'
          - description: The IPv4 addresses of the Amazon EC2 instance.
          title: ipV4Addresses
        ipV6Addresses:
          allOf:
          - $ref: '#/components/schemas/IpV6AddressList'
          - description: The IPv6 addresses of the Amazon EC2 instance.
          title: ipV6Addresses
        keyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The name of the key pair used to launch the Amazon EC2 instance.
          title: keyName
        launchedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date and time the Amazon EC2 instance was launched at.
          title: launchedAt
        platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          - description: The platform of the Amazon EC2 instance.
          title: platform
        subnetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The subnet ID of the Amazon EC2 instance.
          title: subnetId
        type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The type of the Amazon EC2 instance.
          title: type
        vpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The VPC ID of the Amazon EC2 instance.
          title: vpcId
      title: AwsEc2InstanceDetails
      type: object
    AwsEcrContainerSortBy:
      enum:
      - CRITICAL
      - HIGH
      - ALL
      title: AwsEcrContainerSortBy
      type: string
    StringList:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      type: array
    ImageHash:
      maxLength: 71
      minLength: 71
      pattern: "^sha256:[a-z0-9]{64}$"
      type: string
    ImageTagList:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      type: array
    AwsEcrContainerImageDetails:
      description: The image details of the Amazon ECR container image.
      properties:
        architecture:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The architecture of the Amazon ECR container image.
          title: architecture
        author:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The image author of the Amazon ECR container image.
          title: author
        imageHash:
          allOf:
          - $ref: '#/components/schemas/ImageHash'
          - description: The image hash of the Amazon ECR container image.
          title: imageHash
        imageTags:
          allOf:
          - $ref: '#/components/schemas/ImageTagList'
          - description: The image tags attached to the Amazon ECR container image.
          title: imageTags
        platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          - description: The platform of the Amazon ECR container image.
          title: platform
        pushedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date and time the Amazon ECR container image was pushed.
          title: pushedAt
        registry:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The registry for the Amazon ECR container image.
          title: registry
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The name of the repository the Amazon ECR container image
              resides in.
          title: repositoryName
      required:
      - imageHash
      - registry
      - repositoryName
      title: AwsEcrContainerImageDetails
      type: object
    ExecutionRoleArn:
      pattern: "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
      type: string
    FunctionName:
      pattern: "^[a-zA-Z0-9-_\\.]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?$"
      type: string
    Timestamp:
      format: date-time
      type: string
    LayerList:
      items:
        $ref: '#/components/schemas/LambdaLayerArn'
      maxItems: 5
      minItems: 1
      type: array
    PackageType:
      enum:
      - IMAGE
      - ZIP
      title: PackageType
      type: string
    Runtime:
      enum:
      - NODEJS
      - NODEJS_12_X
      - NODEJS_14_X
      - NODEJS_16_X
      - JAVA_8
      - JAVA_8_AL2
      - JAVA_11
      - PYTHON_3_7
      - PYTHON_3_8
      - PYTHON_3_9
      - UNSUPPORTED
      - NODEJS_18_X
      - GO_1_X
      - JAVA_17
      - PYTHON_3_10
      title: Runtime
      type: string
    Version:
      pattern: "^\\$LATEST|[0-9]+$"
      type: string
    LambdaVpcConfig:
      description: "The VPC security groups and subnets that are attached to an AWS\
        \ Lambda function. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html\"\
        >VPC Settings</a>."
      properties:
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          - description: "The VPC security groups and subnets that are attached to\
              \ an AWS Lambda function. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html\"\
              >VPC Settings</a>."
          title: securityGroupIds
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          - description: A list of VPC subnet IDs.
          title: subnetIds
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the VPC.
          title: vpcId
      title: LambdaVpcConfig
      type: object
    AwsLambdaFunctionDetails:
      description: ' A summary of information about the AWS Lambda function.'
      properties:
        architectures:
          allOf:
          - $ref: '#/components/schemas/ArchitectureList'
          - description: The instruction set architecture that the AWS Lambda function
              supports. Architecture is a string array with one of the valid values.
              The default architecture value is <code>x86_64</code>.
          title: architectures
        codeSha256:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The SHA256 hash of the AWS Lambda function's deployment package.
          title: codeSha256
        executionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          - description: The AWS Lambda function's execution role.
          title: executionRoleArn
        functionName:
          allOf:
          - $ref: '#/components/schemas/FunctionName'
          - description: The name of the AWS Lambda function.
          title: functionName
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that a user last updated the configuration,\
              \ in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601 format</a> "
          title: lastModifiedAt
        layers:
          allOf:
          - $ref: '#/components/schemas/LayerList'
          - description: The AWS Lambda function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">
              layers</a>. A Lambda function can have up to five layers.
          title: layers
        packageType:
          allOf:
          - $ref: '#/components/schemas/PackageType'
          - description: The type of deployment package. Set to <code>Image</code>
              for container image and set <code>Zip</code> for .zip file archive.
          title: packageType
        runtime:
          allOf:
          - $ref: '#/components/schemas/Runtime'
          - description: The runtime environment for the AWS Lambda function.
          title: runtime
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the AWS Lambda function.
          title: version
        vpcConfig:
          $ref: '#/components/schemas/AwsLambdaFunctionDetails_vpcConfig'
      required:
      - codeSha256
      - executionRoleArn
      - functionName
      - runtime
      - version
      title: AwsLambdaFunctionDetails
      type: object
    BatchGetAccountStatusRequest:
      example:
        accountIds: ""
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdSet'
          - description: The 12-digit Amazon Web Services account IDs of the accounts
              to retrieve Amazon Inspector status for.
      title: BatchGetAccountStatusRequest
      type: object
    FailedAccountList:
      items:
        $ref: '#/components/schemas/FailedAccount'
      maxItems: 100
      minItems: 0
      type: array
    BatchGetCodeSnippetRequestFindingArnsList:
      items:
        $ref: '#/components/schemas/FindingArn'
      maxItems: 10
      minItems: 1
      type: array
    BatchGetCodeSnippetRequest:
      example:
        findingArns: ""
      properties:
        findingArns:
          allOf:
          - $ref: '#/components/schemas/BatchGetCodeSnippetRequestFindingArnsList'
          - description: An array of finding ARNs for the findings you want to retrieve
              code snippets from.
      required:
      - findingArns
      title: BatchGetCodeSnippetRequest
      type: object
    CodeSnippetResultList:
      items:
        $ref: '#/components/schemas/CodeSnippetResult'
      type: array
    CodeSnippetErrorList:
      items:
        $ref: '#/components/schemas/CodeSnippetError'
      type: array
    FindingArnList:
      items:
        $ref: '#/components/schemas/FindingArn'
      maxItems: 10
      minItems: 1
      type: array
    BatchGetFindingDetailsRequest:
      example:
        findingArns: ""
      properties:
        findingArns:
          allOf:
          - $ref: '#/components/schemas/FindingArnList'
          - description: A list of finding ARNs.
      required:
      - findingArns
      title: BatchGetFindingDetailsRequest
      type: object
    FindingDetailsErrorList:
      items:
        $ref: '#/components/schemas/FindingDetailsError'
      type: array
    FindingDetails:
      items:
        $ref: '#/components/schemas/FindingDetail'
      minItems: 0
      type: array
    BatchGetFreeTrialInfoRequestAccountIdsList:
      items:
        $ref: '#/components/schemas/MeteringAccountId'
      maxItems: 100
      minItems: 1
      type: array
    BatchGetFreeTrialInfoRequest:
      example:
        accountIds: ""
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/BatchGetFreeTrialInfoRequestAccountIdsList'
          - description: The account IDs to get free trial status for.
      required:
      - accountIds
      title: BatchGetFreeTrialInfoRequest
      type: object
    FreeTrialAccountInfoList:
      items:
        $ref: '#/components/schemas/FreeTrialAccountInfo'
      type: array
    FreeTrialInfoErrorList:
      items:
        $ref: '#/components/schemas/FreeTrialInfoError'
      type: array
    BatchGetMemberEc2DeepInspectionStatusRequest:
      example:
        accountIds: ""
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdSet'
          - description: The unique identifiers for the Amazon Web Services accounts
              to retrieve Amazon Inspector deep inspection activation status for.
              <pre><code> &lt;/p&gt; </code></pre>
      title: BatchGetMemberEc2DeepInspectionStatusRequest
      type: object
    MemberAccountEc2DeepInspectionStatusStateList:
      items:
        $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatusState'
      maxItems: 100
      minItems: 0
      type: array
    FailedMemberAccountEc2DeepInspectionStatusStateList:
      items:
        $ref: '#/components/schemas/FailedMemberAccountEc2DeepInspectionStatusState'
      maxItems: 100
      minItems: 0
      type: array
    MemberAccountEc2DeepInspectionStatusList:
      items:
        $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatus'
      maxItems: 100
      minItems: 0
      type: array
    BatchUpdateMemberEc2DeepInspectionStatusRequest:
      example:
        accountIds: ""
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatusList'
          - description: The unique identifiers for the Amazon Web Services accounts
              to change Amazon Inspector deep inspection status for.
      required:
      - accountIds
      title: BatchUpdateMemberEc2DeepInspectionStatusRequest
      type: object
    ReportId:
      pattern: "\\b[a-f0-9]{8}\\b-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-\\b[a-f0-9]{12}\\\
        b"
      type: string
    CancelFindingsReportRequest:
      example:
        reportId: ""
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: The ID of the report to be canceled.
      required:
      - reportId
      title: CancelFindingsReportRequest
      type: object
    CancelSbomExportRequest:
      example:
        reportId: ""
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: The report ID of the SBOM export to cancel.
      required:
      - reportId
      title: CancelSbomExportRequest
      type: object
    CisaAction:
      minLength: 0
      type: string
    CisaDateAdded:
      format: date-time
      type: string
    CisaDateDue:
      format: date-time
      type: string
    CisaData:
      description: The Cybersecurity and Infrastructure Security Agency (CISA) details
        for a specific vulnerability.
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/CisaAction'
          - description: The remediation action recommended by CISA for this vulnerability.
          title: action
        dateAdded:
          allOf:
          - $ref: '#/components/schemas/CisaDateAdded'
          - description: The date and time CISA added this vulnerability to their
              catalogue.
          title: dateAdded
        dateDue:
          allOf:
          - $ref: '#/components/schemas/CisaDateDue'
          - description: The date and time CISA expects a fix to have been provided
              vulnerability.
          title: dateDue
      title: CisaData
      type: object
    ClientToken:
      maxLength: 64
      minLength: 1
      type: string
    Integer:
      type: integer
    CodeFilePath:
      description: Contains information on where a code vulnerability is located in
        your Lambda function.
      properties:
        endLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The line number of the last line of code that a vulnerability
              was found in.
          title: endLine
        fileName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The name of the file the code vulnerability was found in.
          title: fileName
        filePath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The file path to the code that a vulnerability was found
              in.
          title: filePath
        startLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The line number of the first line of code that a vulnerability
              was found in.
          title: startLine
      required:
      - endLine
      - fileName
      - filePath
      - startLine
      title: CodeFilePath
      type: object
    CodeLineContentString:
      maxLength: 240
      minLength: 0
      type: string
    CodeLine:
      description: Contains information on the lines of code associated with a code
        snippet.
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/CodeLineContentString'
          - description: The content of a line of code
          title: content
        lineNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The line number that a section of code is located at.
          title: lineNumber
      required:
      - content
      - lineNumber
      title: CodeLine
      type: object
    CodeLineList:
      items:
        $ref: '#/components/schemas/CodeLine'
      maxItems: 20
      minItems: 1
      type: array
    CodeSnippetErrorCode:
      enum:
      - INTERNAL_ERROR
      - ACCESS_DENIED
      - CODE_SNIPPET_NOT_FOUND
      - INVALID_INPUT
      title: CodeSnippetErrorCode
      type: string
    CodeSnippetError:
      description: Contains information about any errors encountered while trying
        to retrieve a code snippet.
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/CodeSnippetErrorCode'
          - description: The error code for the error that prevented a code snippet
              from being retrieved.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The error message received when Amazon Inspector failed to
              retrieve a code snippet.
          title: errorMessage
        findingArn:
          allOf:
          - $ref: '#/components/schemas/FindingArn'
          - description: The ARN of the finding that a code snippet couldn't be retrieved
              for.
          title: findingArn
      required:
      - errorCode
      - errorMessage
      - findingArn
      title: CodeSnippetError
      type: object
    SuggestedFixes:
      items:
        $ref: '#/components/schemas/SuggestedFix'
      maxItems: 5
      minItems: 1
      type: array
    CodeSnippetResult:
      description: Contains information on a code snippet retrieved by Amazon Inspector
        from a code vulnerability finding.
      properties:
        codeSnippet:
          allOf:
          - $ref: '#/components/schemas/CodeLineList'
          - description: Contains information on the retrieved code snippet.
          title: codeSnippet
        endLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The line number of the last line of a code snippet.
          title: endLine
        findingArn:
          allOf:
          - $ref: '#/components/schemas/FindingArn'
          - description: The ARN of a finding that the code snippet is associated
              with.
          title: findingArn
        startLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The line number of the first line of a code snippet.
          title: startLine
        suggestedFixes:
          allOf:
          - $ref: '#/components/schemas/SuggestedFixes'
          - description: Details of a suggested code fix.
          title: suggestedFixes
      title: CodeSnippetResult
      type: object
    CweList:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      maxItems: 10
      minItems: 1
      type: array
    DetectorTagList:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      maxItems: 10
      minItems: 1
      type: array
    ReferenceUrls:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      maxItems: 10
      minItems: 1
      type: array
    LambdaLayerArn:
      pattern: "^arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+$"
      title: LambdaLayerArn
      type: string
    CodeVulnerabilityDetails:
      description: Contains information on the code vulnerability identified in your
        Lambda function.
      properties:
        cwes:
          allOf:
          - $ref: '#/components/schemas/CweList'
          - description: The Common Weakness Enumeration (CWE) item associated with
              the detected vulnerability.
          title: cwes
        detectorId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The ID for the Amazon CodeGuru detector associated with the
              finding. For more information on detectors see <a href="https://docs.aws.amazon.com/codeguru/detector-library">Amazon
              CodeGuru Detector Library</a>.
          title: detectorId
        detectorName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The name of the detector used to identify the code vulnerability.
              For more information on detectors see <a href="https://docs.aws.amazon.com/codeguru/detector-library">CodeGuru
              Detector Library</a>.
          title: detectorName
        detectorTags:
          allOf:
          - $ref: '#/components/schemas/DetectorTagList'
          - description: "The detector tag associated with the vulnerability. Detector\
              \ tags group related vulnerabilities by common themes or tactics. For\
              \ a list of available tags by programming language, see <a href=\"https://docs.aws.amazon.com/codeguru/detector-library/java/tags/\"\
              >Java tags</a>, or <a href=\"https://docs.aws.amazon.com/codeguru/detector-library/python/tags/\"\
              >Python tags</a>. "
          title: detectorTags
        filePath:
          $ref: '#/components/schemas/CodeVulnerabilityDetails_filePath'
        referenceUrls:
          allOf:
          - $ref: '#/components/schemas/ReferenceUrls'
          - description: A URL containing supporting documentation about the code
              vulnerability detected.
          title: referenceUrls
        ruleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The identifier for a rule that was used to detect the code
              vulnerability.
          title: ruleId
        sourceLambdaLayerArn:
          allOf:
          - $ref: '#/components/schemas/LambdaLayerArn'
          - description: The Amazon Resource Name (ARN) of the Lambda layer that the
              code vulnerability was detected in.
          title: sourceLambdaLayerArn
      required:
      - cwes
      - detectorId
      - detectorName
      - filePath
      title: CodeVulnerabilityDetails
      type: object
    Component:
      type: string
    ComponentType:
      type: string
    GroupKey:
      enum:
      - SCAN_STATUS_CODE
      - SCAN_STATUS_REASON
      - ACCOUNT_ID
      - RESOURCE_TYPE
      - ECR_REPOSITORY_NAME
      title: GroupKey
      type: string
    Counts:
      description: a structure that contains information on the count of resources
        within a group.
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/AggCounts'
          - description: The number of resources.
          title: count
        groupKey:
          allOf:
          - $ref: '#/components/schemas/GroupKey'
          - description: The key associated with this group
          title: groupKey
      title: Counts
      type: object
    CountsList:
      items:
        $ref: '#/components/schemas/Counts'
      maxItems: 5
      minItems: 1
      type: array
    CoverageDateFilter:
      description: Contains details of a coverage date filter.
      properties:
        endInclusive:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: A timestamp representing the end of the time period to filter
              results by.
          title: endInclusive
        startInclusive:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: A timestamp representing the start of the time period to
              filter results by.
          title: startInclusive
      title: CoverageDateFilter
      type: object
    CoverageFilterCriteria:
      description: A structure that identifies filter criteria for <code>GetCoverageStatistics</code>.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: An array of Amazon Web Services account IDs to return coverage
              statistics for.
          title: accountId
        ec2InstanceTags:
          allOf:
          - $ref: '#/components/schemas/CoverageMapFilterList'
          - description: The Amazon EC2 instance tags to filter on.
          title: ec2InstanceTags
        ecrImageTags:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: The Amazon ECR image tags to filter on.
          title: ecrImageTags
        ecrRepositoryName:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: The Amazon ECR repository name to filter on.
          title: ecrRepositoryName
        lambdaFunctionName:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: Returns coverage statistics for AWS Lambda functions filtered
              by function names.
          title: lambdaFunctionName
        lambdaFunctionRuntime:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: Returns coverage statistics for AWS Lambda functions filtered
              by runtime.
          title: lambdaFunctionRuntime
        lambdaFunctionTags:
          allOf:
          - $ref: '#/components/schemas/CoverageMapFilterList'
          - description: Returns coverage statistics for AWS Lambda functions filtered
              by tag.
          title: lambdaFunctionTags
        lastScannedAt:
          allOf:
          - $ref: '#/components/schemas/CoverageDateFilterList'
          - description: Filters Amazon Web Services resources based on whether Amazon
              Inspector has checked them for vulnerabilities within the specified
              time range.
          title: lastScannedAt
        resourceId:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: An array of Amazon Web Services resource IDs to return coverage
              statistics for.
          title: resourceId
        resourceType:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: "An array of Amazon Web Services resource types to return\
              \ coverage statistics for. The values can be <code>AWS_EC2_INSTANCE</code>,\
              \ <code>AWS_LAMBDA_FUNCTION</code> or <code>AWS_ECR_REPOSITORY</code>."
          title: resourceType
        scanStatusCode:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: The scan status code to filter on.
          title: scanStatusCode
        scanStatusReason:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: The scan status reason to filter on.
          title: scanStatusReason
        scanType:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: An array of Amazon Inspector scan types to return coverage
              statistics for.
          title: scanType
      title: CoverageFilterCriteria
      type: object
    CoverageMapComparison:
      enum:
      - EQUALS
      title: CoverageMapComparison
      type: string
    CoverageMapFilter:
      description: Contains details of a coverage map filter.
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/CoverageMapComparison'
          - description: The operator to compare coverage on.
          title: comparison
        key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The tag key associated with the coverage map filter.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The tag value associated with the coverage map filter.
          title: value
      required:
      - comparison
      - key
      title: CoverageMapFilter
      type: object
    CoverageResourceType:
      enum:
      - AWS_EC2_INSTANCE
      - AWS_ECR_CONTAINER_IMAGE
      - AWS_ECR_REPOSITORY
      - AWS_LAMBDA_FUNCTION
      title: CoverageResourceType
      type: string
    CoverageStringComparison:
      enum:
      - EQUALS
      - NOT_EQUALS
      title: CoverageStringComparison
      type: string
    CoverageStringInput:
      maxLength: 1024
      minLength: 1
      type: string
    CoverageStringFilter:
      description: Contains details of a coverage string filter.
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/CoverageStringComparison'
          - description: The operator to compare strings on.
          title: comparison
        value:
          allOf:
          - $ref: '#/components/schemas/CoverageStringInput'
          - description: The value to compare strings on.
          title: value
      required:
      - comparison
      - value
      title: CoverageStringFilter
      type: object
    ResourceId:
      maxLength: 341
      minLength: 10
      pattern: "(^arn:.*:ecr:.*:\\d{12}:repository\\/(?:[a-z0-9]+(?:[._-][a-z0-9]+)*\\\
        /)*[a-z0-9]+(?:[._-][a-z0-9]+)*(\\/sha256:[a-z0-9]{64})?$)|(^i-([a-z0-9]{8}|[a-z0-9]{17}|\\\
        \\*)$|(^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_\\\
        .]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?$))"
      type: string
    ResourceScanMetadata:
      description: An object that contains details about the metadata for an Amazon
        ECR resource.
      properties:
        ec2:
          $ref: '#/components/schemas/ResourceScanMetadata_ec2'
        ecrImage:
          $ref: '#/components/schemas/ResourceScanMetadata_ecrImage'
        ecrRepository:
          $ref: '#/components/schemas/ResourceScanMetadata_ecrRepository'
        lambdaFunction:
          $ref: '#/components/schemas/ResourceScanMetadata_lambdaFunction'
      title: ResourceScanMetadata
      type: object
    ScanStatus:
      description: The status of the scan.
      properties:
        reason:
          allOf:
          - $ref: '#/components/schemas/ScanStatusReason'
          - description: The reason for the scan.
          title: reason
        statusCode:
          allOf:
          - $ref: '#/components/schemas/ScanStatusCode'
          - description: The status code of the scan.
          title: statusCode
      required:
      - reason
      - statusCode
      title: ScanStatus
      type: object
    ScanType:
      enum:
      - NETWORK
      - PACKAGE
      - CODE
      title: ScanType
      type: string
    CoveredResource:
      description: An object that contains details about a resource covered by Amazon
        Inspector.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the covered resource.
          title: accountId
        lastScannedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date and time the resource was last checked for vulnerabilities.
          title: lastScannedAt
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the covered resource.
          title: resourceId
        resourceMetadata:
          $ref: '#/components/schemas/CoveredResource_resourceMetadata'
        resourceType:
          allOf:
          - $ref: '#/components/schemas/CoverageResourceType'
          - description: The type of the covered resource.
          title: resourceType
        scanStatus:
          $ref: '#/components/schemas/CoveredResource_scanStatus'
        scanType:
          allOf:
          - $ref: '#/components/schemas/ScanType'
          - description: The Amazon Inspector scan type covering the resource.
          title: scanType
      required:
      - accountId
      - resourceId
      - resourceType
      - scanType
      title: CoveredResource
      type: object
    CoveredResources:
      items:
        $ref: '#/components/schemas/CoveredResource'
      type: array
    FilterAction:
      enum:
      - NONE
      - SUPPRESS
      title: FilterAction
      type: string
    FilterDescription:
      maxLength: 512
      minLength: 1
      type: string
    FilterCriteria:
      description: Details on the criteria used to define the filter.
      properties:
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon Web Services account IDs used to filter
              findings.
          title: awsAccountId
        codeVulnerabilityDetectorName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The name of the detector used to identify a code vulnerability
              in a Lambda function used to filter findings.
          title: codeVulnerabilityDetectorName
        codeVulnerabilityDetectorTags:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: "The detector type tag associated with the vulnerability\
              \ used to filter findings. Detector tags group related vulnerabilities\
              \ by common themes or tactics. For a list of available tags by programming\
              \ language, see <a href=\"https://docs.aws.amazon.com/codeguru/detector-library/java/tags/\"\
              >Java tags</a>, or <a href=\"https://docs.aws.amazon.com/codeguru/detector-library/python/tags/\"\
              >Python tags</a>. "
          title: codeVulnerabilityDetectorTags
        codeVulnerabilityFilePath:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The file path to the file in a Lambda function that contains
              a code vulnerability used to filter findings.
          title: codeVulnerabilityFilePath
        componentId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the component IDs used to filter findings.
          title: componentId
        componentType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the component types used to filter findings.
          title: componentType
        ec2InstanceImageId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon EC2 instance image IDs used to filter
              findings.
          title: ec2InstanceImageId
        ec2InstanceSubnetId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon EC2 instance subnet IDs used to filter
              findings.
          title: ec2InstanceSubnetId
        ec2InstanceVpcId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon EC2 instance VPC IDs used to filter
              findings.
          title: ec2InstanceVpcId
        ecrImageArchitecture:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon ECR image architecture types used to
              filter findings.
          title: ecrImageArchitecture
        ecrImageHash:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon ECR image hashes used to filter findings.
          title: ecrImageHash
        ecrImagePushedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          - description: Details on the Amazon ECR image push date and time used to
              filter findings.
          title: ecrImagePushedAt
        ecrImageRegistry:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the Amazon ECR registry used to filter findings.
          title: ecrImageRegistry
        ecrImageRepositoryName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the name of the Amazon ECR repository used to
              filter findings.
          title: ecrImageRepositoryName
        ecrImageTags:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The tags attached to the Amazon ECR container image.
          title: ecrImageTags
        epssScore:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          - description: The EPSS score used to filter findings.
          title: epssScore
        exploitAvailable:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Filters the list of AWS Lambda findings by the availability
              of exploits.
          title: exploitAvailable
        findingArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the finding ARNs used to filter findings.
          title: findingArn
        findingStatus:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the finding status types used to filter findings.
          title: findingStatus
        findingType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the finding types used to filter findings.
          title: findingType
        firstObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          - description: Details on the date and time a finding was first seen used
              to filter findings.
          title: firstObservedAt
        fixAvailable:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: "Details on whether a fix is available through a version\
              \ update. This value can be <code>YES</code>, <code>NO</code>, or <code>PARTIAL</code>.\
              \ A <code>PARTIAL</code> fix means that some, but not all, of the packages\
              \ identified in the finding have fixes available through updated versions."
          title: fixAvailable
        inspectorScore:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          - description: The Amazon Inspector score to filter on.
          title: inspectorScore
        lambdaFunctionExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Filters the list of AWS Lambda functions by execution role.
          title: lambdaFunctionExecutionRoleArn
        lambdaFunctionLastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          - description: "Filters the list of AWS Lambda functions by the date and\
              \ time that a user last updated the configuration, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601 format</a> "
          title: lambdaFunctionLastModifiedAt
        lambdaFunctionLayers:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Filters the list of AWS Lambda functions by the function's
              <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">
              layers</a>. A Lambda function can have up to five layers.
          title: lambdaFunctionLayers
        lambdaFunctionName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Filters the list of AWS Lambda functions by the name of the
              function.
          title: lambdaFunctionName
        lambdaFunctionRuntime:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Filters the list of AWS Lambda functions by the runtime environment
              for the Lambda function.
          title: lambdaFunctionRuntime
        lastObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          - description: Details on the date and time a finding was last seen used
              to filter findings.
          title: lastObservedAt
        networkProtocol:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on network protocol used to filter findings.
          title: networkProtocol
        portRange:
          allOf:
          - $ref: '#/components/schemas/PortRangeFilterList'
          - description: Details on the port ranges used to filter findings.
          title: portRange
        relatedVulnerabilities:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the related vulnerabilities used to filter findings.
          title: relatedVulnerabilities
        resourceId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the resource IDs used to filter findings.
          title: resourceId
        resourceTags:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          - description: Details on the resource tags used to filter findings.
          title: resourceTags
        resourceType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the resource types used to filter findings.
          title: resourceType
        severity:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the severity used to filter findings.
          title: severity
        title:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the finding title used to filter findings.
          title: title
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          - description: Details on the date and time a finding was last updated at
              used to filter findings.
          title: updatedAt
        vendorSeverity:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the vendor severity used to filter findings.
          title: vendorSeverity
        vulnerabilityId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the vulnerability ID used to filter findings.
          title: vulnerabilityId
        vulnerabilitySource:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the vulnerability type used to filter findings.
          title: vulnerabilitySource
        vulnerablePackages:
          allOf:
          - $ref: '#/components/schemas/PackageFilterList'
          - description: Details on the vulnerable packages used to filter findings.
          title: vulnerablePackages
      title: FilterCriteria
      type: object
    FilterName:
      maxLength: 128
      minLength: 1
      type: string
    FilterReason:
      maxLength: 512
      minLength: 1
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/MapValue'
      type: object
    CreateFilterRequest:
      example:
        filterCriteria:
          portRange: ""
          fixAvailable: ""
          resourceId: ""
          awsAccountId: ""
          componentId: ""
          codeVulnerabilityDetectorName: ""
          ecrImageHash: ""
          vendorSeverity: ""
          vulnerabilitySource: ""
          lambdaFunctionRuntime: ""
          codeVulnerabilityDetectorTags: ""
          title: ""
          ecrImagePushedAt: ""
          ecrImageRepositoryName: ""
          ecrImageRegistry: ""
          firstObservedAt: ""
          resourceTags: ""
          vulnerabilityId: ""
          lambdaFunctionName: ""
          ec2InstanceSubnetId: ""
          updatedAt: ""
          severity: ""
          componentType: ""
          relatedVulnerabilities: ""
          lastObservedAt: ""
          ec2InstanceImageId: ""
          epssScore: ""
          vulnerablePackages: ""
          lambdaFunctionLayers: ""
          inspectorScore: ""
          lambdaFunctionLastModifiedAt: ""
          lambdaFunctionExecutionRoleArn: ""
          findingType: ""
          ecrImageArchitecture: ""
          ec2InstanceVpcId: ""
          ecrImageTags: ""
          findingStatus: ""
          codeVulnerabilityFilePath: ""
          exploitAvailable: ""
          findingArn: ""
          networkProtocol: ""
          resourceType: ""
        reason: ""
        name: ""
        action: ""
        description: ""
        tags: ""
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/FilterAction'
          - description: Defines the action that is to be applied to the findings
              that match the filter.
        description:
          allOf:
          - $ref: '#/components/schemas/FilterDescription'
          - description: A description of the filter.
        filterCriteria:
          $ref: '#/components/schemas/CreateFilterRequest_filterCriteria'
        name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          - description: "The name of the filter. Minimum length of 3. Maximum length\
              \ of 64. Valid characters include alphanumeric characters, dot (.),\
              \ underscore (_), and dash (-). Spaces are not allowed."
        reason:
          allOf:
          - $ref: '#/components/schemas/FilterReason'
          - description: The reason for creating the filter.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A list of tags for the filter.
      required:
      - action
      - filterCriteria
      - name
      title: CreateFilterRequest
      type: object
    ReportFormat:
      enum:
      - CSV
      - JSON
      title: ReportFormat
      type: string
    Destination:
      description: Contains details of the Amazon S3 bucket and KMS key used to export
        findings.
      example:
        bucketName: ""
        kmsKeyArn: ""
        keyPrefix: ""
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Amazon S3 bucket to export findings to.
          title: bucketName
        keyPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The prefix that the findings will be written under.
          title: keyPrefix
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the KMS key used to encrypt data when exporting
              findings.
          title: kmsKeyArn
      required:
      - bucketName
      - kmsKeyArn
      title: Destination
      type: object
    CreateFindingsReportRequest:
      example:
        filterCriteria:
          portRange: ""
          fixAvailable: ""
          resourceId: ""
          awsAccountId: ""
          componentId: ""
          codeVulnerabilityDetectorName: ""
          ecrImageHash: ""
          vendorSeverity: ""
          vulnerabilitySource: ""
          lambdaFunctionRuntime: ""
          codeVulnerabilityDetectorTags: ""
          title: ""
          ecrImagePushedAt: ""
          ecrImageRepositoryName: ""
          ecrImageRegistry: ""
          firstObservedAt: ""
          resourceTags: ""
          vulnerabilityId: ""
          lambdaFunctionName: ""
          ec2InstanceSubnetId: ""
          updatedAt: ""
          severity: ""
          componentType: ""
          relatedVulnerabilities: ""
          lastObservedAt: ""
          ec2InstanceImageId: ""
          epssScore: ""
          vulnerablePackages: ""
          lambdaFunctionLayers: ""
          inspectorScore: ""
          lambdaFunctionLastModifiedAt: ""
          lambdaFunctionExecutionRoleArn: ""
          findingType: ""
          ecrImageArchitecture: ""
          ec2InstanceVpcId: ""
          ecrImageTags: ""
          findingStatus: ""
          codeVulnerabilityFilePath: ""
          exploitAvailable: ""
          findingArn: ""
          networkProtocol: ""
          resourceType: ""
        s3Destination:
          bucketName: ""
          kmsKeyArn: ""
          keyPrefix: ""
        reportFormat: ""
      properties:
        filterCriteria:
          $ref: '#/components/schemas/CreateFindingsReportRequest_filterCriteria'
        reportFormat:
          allOf:
          - $ref: '#/components/schemas/ReportFormat'
          - description: The format to generate the report in.
        s3Destination:
          $ref: '#/components/schemas/CreateFindingsReportRequest_s3Destination'
      required:
      - reportFormat
      - s3Destination
      title: CreateFindingsReportRequest
      type: object
    SbomReportFormat:
      enum:
      - CYCLONEDX_1_4
      - SPDX_2_3
      title: SbomReportFormat
      type: string
    ResourceFilterCriteria:
      description: The resource filter criteria for a Software bill of materials (SBOM)
        report.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The account IDs used as resource filter criteria.
          title: accountId
        ec2InstanceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceMapFilterList'
          - description: The EC2 instance tags used as resource filter criteria.
          title: ec2InstanceTags
        ecrImageTags:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The ECR image tags used as resource filter criteria.
          title: ecrImageTags
        ecrRepositoryName:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The ECR repository names used as resource filter criteria.
          title: ecrRepositoryName
        lambdaFunctionName:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The AWS Lambda function name used as resource filter criteria.
          title: lambdaFunctionName
        lambdaFunctionTags:
          allOf:
          - $ref: '#/components/schemas/ResourceMapFilterList'
          - description: The AWS Lambda function tags used as resource filter criteria.
          title: lambdaFunctionTags
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The resource IDs used as resource filter criteria.
          title: resourceId
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The resource types used as resource filter criteria.
          title: resourceType
      title: ResourceFilterCriteria
      type: object
    CreateSbomExportRequest:
      example:
        s3Destination:
          bucketName: ""
          kmsKeyArn: ""
          keyPrefix: ""
        resourceFilterCriteria:
          accountId: ""
          ec2InstanceTags: ""
          resourceId: ""
          ecrImageTags: ""
          lambdaFunctionName: ""
          lambdaFunctionTags: ""
          ecrRepositoryName: ""
          resourceType: ""
        reportFormat: ""
      properties:
        reportFormat:
          allOf:
          - $ref: '#/components/schemas/SbomReportFormat'
          - description: The output format for the software bill of materials (SBOM)
              report.
        resourceFilterCriteria:
          $ref: '#/components/schemas/CreateSbomExportRequest_resourceFilterCriteria'
        s3Destination:
          $ref: '#/components/schemas/Destination'
      required:
      - reportFormat
      - s3Destination
      title: CreateSbomExportRequest
      type: object
    Currency:
      enum:
      - USD
      title: Currency
      type: string
    Cvss2BaseScore:
      format: double
      type: number
    Cvss2ScoringVector:
      minLength: 0
      type: string
    Cvss2:
      description: The Common Vulnerability Scoring System (CVSS) version 2 details
        for the vulnerability.
      properties:
        baseScore:
          allOf:
          - $ref: '#/components/schemas/Cvss2BaseScore'
          - description: The CVSS v2 base score for the vulnerability.
          title: baseScore
        scoringVector:
          allOf:
          - $ref: '#/components/schemas/Cvss2ScoringVector'
          - description: The scoring vector associated with the CVSS v2 score.
          title: scoringVector
      title: Cvss2
      type: object
    Cvss3BaseScore:
      format: double
      type: number
    Cvss3ScoringVector:
      minLength: 0
      type: string
    Cvss3:
      description: The Common Vulnerability Scoring System (CVSS) version 3 details
        for the vulnerability.
      properties:
        baseScore:
          allOf:
          - $ref: '#/components/schemas/Cvss3BaseScore'
          - description: The CVSS v3 base score for the vulnerability.
          title: baseScore
        scoringVector:
          allOf:
          - $ref: '#/components/schemas/Cvss3ScoringVector'
          - description: The scoring vector associated with the CVSS v3 score.
          title: scoringVector
      title: Cvss3
      type: object
    Double:
      format: double
      type: number
    CvssScore:
      description: The CVSS score for a finding.
      properties:
        baseScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The base CVSS score used for the finding.
          title: baseScore
        scoringVector:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The vector string of the CVSS score.
          title: scoringVector
        source:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The source of the CVSS score.
          title: source
        version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The version of CVSS used for the score.
          title: version
      required:
      - baseScore
      - scoringVector
      - source
      - version
      title: CvssScore
      type: object
    CvssScoreAdjustment:
      description: Details on adjustments Amazon Inspector made to the CVSS score
        for a finding.
      properties:
        metric:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The metric used to adjust the CVSS score.
          title: metric
        reason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The reason the CVSS score has been adjustment.
          title: reason
      required:
      - metric
      - reason
      title: CvssScoreAdjustment
      type: object
    CvssScoreAdjustmentList:
      items:
        $ref: '#/components/schemas/CvssScoreAdjustment'
      type: array
    CvssScoreDetails:
      description: Information about the CVSS score.
      properties:
        adjustments:
          allOf:
          - $ref: '#/components/schemas/CvssScoreAdjustmentList'
          - description: An object that contains details about adjustment Amazon Inspector
              made to the CVSS score.
          title: adjustments
        cvssSource:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The source of the CVSS data.
          title: cvssSource
        score:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The CVSS score.
          title: score
        scoreSource:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The source for the CVSS score.
          title: scoreSource
        scoringVector:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The vector for the CVSS score.
          title: scoringVector
        version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The CVSS version used in scoring.
          title: version
      required:
      - score
      - scoreSource
      - scoringVector
      - version
      title: CvssScoreDetails
      type: object
    CvssScoreList:
      items:
        $ref: '#/components/schemas/CvssScore'
      type: array
    Cwe:
      minLength: 0
      title: Cwe
      type: string
    Cwes:
      items:
        $ref: '#/components/schemas/Cwe'
      minItems: 0
      type: array
    DateFilter:
      description: Contains details on the time range used to filter findings.
      properties:
        endInclusive:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp representing the end of the time period filtered
              on.
          title: endInclusive
        startInclusive:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp representing the start of the time period filtered
              on.
          title: startInclusive
      title: DateFilter
      type: object
    RelationshipStatus:
      enum:
      - CREATED
      - INVITED
      - DISABLED
      - ENABLED
      - REMOVED
      - RESIGNED
      - DELETED
      - EMAIL_VERIFICATION_IN_PROGRESS
      - EMAIL_VERIFICATION_FAILED
      - REGION_DISABLED
      - ACCOUNT_SUSPENDED
      - CANNOT_CREATE_DETECTOR_IN_ORG_MASTER
      title: RelationshipStatus
      type: string
    DelegatedAdmin:
      description: Details of the Amazon Inspector delegated administrator for your
        organization.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the Amazon Inspector
              delegated administrator for your organization.
          title: accountId
        relationshipStatus:
          allOf:
          - $ref: '#/components/schemas/RelationshipStatus'
          - description: The status of the Amazon Inspector delegated administrator.
          title: relationshipStatus
      title: DelegatedAdmin
      type: object
    DelegatedAdminStatus:
      enum:
      - ENABLED
      - DISABLE_IN_PROGRESS
      title: DelegatedAdminStatus
      type: string
    DelegatedAdminAccount:
      description: Details of the Amazon Inspector delegated administrator for your
        organization.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the Amazon Inspector
              delegated administrator for your organization.
          title: accountId
        status:
          allOf:
          - $ref: '#/components/schemas/DelegatedAdminStatus'
          - description: The status of the Amazon Inspector delegated administrator.
          title: status
      title: DelegatedAdminAccount
      type: object
    DelegatedAdminAccountList:
      items:
        $ref: '#/components/schemas/DelegatedAdminAccount'
      maxItems: 5
      minItems: 0
      type: array
    DeleteFilterRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          - description: The Amazon Resource Number (ARN) of the filter to be deleted.
      required:
      - arn
      title: DeleteFilterRequest
      type: object
    DescribeOrganizationConfigurationRequest:
      properties: {}
      title: DescribeOrganizationConfigurationRequest
      type: object
    DetectionPlatforms:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      maxItems: 100
      minItems: 0
      type: array
    DisableDelegatedAdminAccountRequest:
      example:
        delegatedAdminAccountId: ""
      properties:
        delegatedAdminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the current Amazon
              Inspector delegated administrator.
      required:
      - delegatedAdminAccountId
      title: DisableDelegatedAdminAccountRequest
      type: object
    DisableResourceTypeList:
      items:
        $ref: '#/components/schemas/ResourceScanType'
      maxItems: 3
      minItems: 0
      type: array
    DisableRequest:
      example:
        resourceTypes: ""
        accountIds: ""
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdSet'
          - description: An array of account IDs you want to disable Amazon Inspector
              scans for.
        resourceTypes:
          allOf:
          - $ref: '#/components/schemas/DisableResourceTypeList'
          - description: The resource scan types you want to disable.
      title: DisableRequest
      type: object
    DisassociateMemberRequest:
      example:
        accountId: ""
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the member account
              to disassociate.
      required:
      - accountId
      title: DisassociateMemberRequest
      type: object
    Ec2DeepInspectionStatus:
      enum:
      - ACTIVATED
      - DEACTIVATED
      - PENDING
      - FAILED
      title: Ec2DeepInspectionStatus
      type: string
    Ec2InstanceSortBy:
      enum:
      - NETWORK_FINDINGS
      - CRITICAL
      - HIGH
      - ALL
      title: Ec2InstanceSortBy
      type: string
    Ec2Platform:
      enum:
      - WINDOWS
      - LINUX
      - UNKNOWN
      title: Ec2Platform
      type: string
    Ec2Metadata:
      description: Meta data details of an Amazon EC2 instance.
      properties:
        amiId:
          allOf:
          - $ref: '#/components/schemas/AmiId'
          - description: The ID of the Amazon Machine Image (AMI) used to launch the
              instance.
          title: amiId
        platform:
          allOf:
          - $ref: '#/components/schemas/Ec2Platform'
          - description: The platform of the instance.
          title: platform
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags attached to the instance.
          title: tags
      title: Ec2Metadata
      type: object
    EcrConfiguration:
      description: Details about the ECR automated re-scan duration setting for your
        environment.
      properties:
        rescanDuration:
          allOf:
          - $ref: '#/components/schemas/EcrRescanDuration'
          - description: The ECR automated re-scan duration defines how long an ECR
              image will be actively scanned by Amazon Inspector. When the number
              of days since an image was last pushed exceeds the automated re-scan
              duration the monitoring state of that image becomes <code>inactive</code>
              and all associated findings are scheduled for closure.
          title: rescanDuration
      required:
      - rescanDuration
      title: EcrConfiguration
      type: object
    EcrRescanDurationState:
      description: Details about the state of any changes to the ECR automated re-scan
        duration setting.
      properties:
        rescanDuration:
          allOf:
          - $ref: '#/components/schemas/EcrRescanDuration'
          - description: The ECR automated re-scan duration defines how long an ECR
              image will be actively scanned by Amazon Inspector. When the number
              of days since an image was last pushed exceeds the automated re-scan
              duration the monitoring state of that image becomes <code>inactive</code>
              and all associated findings are scheduled for closure.
          title: rescanDuration
        status:
          allOf:
          - $ref: '#/components/schemas/EcrRescanDurationStatus'
          - description: The status of changes to the ECR automated re-scan duration.
          title: status
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: A timestamp representing when the last time the ECR scan
              duration setting was changed.
          title: updatedAt
      title: EcrRescanDurationState
      type: object
    EcrConfigurationState:
      description: Details about the state of the ECR scans for your environment.
      properties:
        rescanDurationState:
          $ref: '#/components/schemas/EcrConfigurationState_rescanDurationState'
      title: EcrConfigurationState
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    EcrContainerImageMetadata:
      description: Information on the Amazon ECR image metadata associated with a
        finding.
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Tags associated with the Amazon ECR image metadata.
          title: tags
      title: EcrContainerImageMetadata
      type: object
    EcrScanFrequency:
      enum:
      - MANUAL
      - SCAN_ON_PUSH
      - CONTINUOUS_SCAN
      title: EcrScanFrequency
      type: string
    EcrRepositoryMetadata:
      description: Information on the Amazon ECR repository metadata associated with
        a finding.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Amazon ECR repository.
          title: name
        scanFrequency:
          allOf:
          - $ref: '#/components/schemas/EcrScanFrequency'
          - description: The frequency of scans.
          title: scanFrequency
      title: EcrRepositoryMetadata
      type: object
    EcrRescanDurationStatus:
      enum:
      - SUCCESS
      - PENDING
      - FAILED
      title: EcrRescanDurationStatus
      type: string
    EnableDelegatedAdminAccountRequest:
      example:
        delegatedAdminAccountId: ""
        clientToken: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The idempotency token for the request.
        delegatedAdminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the Amazon Inspector
              delegated administrator.
      required:
      - delegatedAdminAccountId
      title: EnableDelegatedAdminAccountRequest
      type: object
    EnableResourceTypeList:
      items:
        $ref: '#/components/schemas/ResourceScanType'
      maxItems: 3
      minItems: 1
      type: array
    EnableRequest:
      example:
        resourceTypes: ""
        accountIds: ""
        clientToken: ""
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdSet'
          - description: A list of account IDs you want to enable Amazon Inspector
              scans for.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The idempotency token for the request.
        resourceTypes:
          allOf:
          - $ref: '#/components/schemas/EnableResourceTypeList'
          - description: The resource scan types you want to enable.
      required:
      - resourceTypes
      title: EnableRequest
      type: object
    EpssScore:
      format: double
      type: number
    Epss:
      description: Details about the Exploit Prediction Scoring System (EPSS) score.
      properties:
        score:
          allOf:
          - $ref: '#/components/schemas/EpssScore'
          - description: The Exploit Prediction Scoring System (EPSS) score.
          title: score
      title: Epss
      type: object
    EpssScoreValue:
      format: double
      maximum: 1
      minimum: 0
      type: number
    EpssDetails:
      description: Details about the Exploit Prediction Scoring System (EPSS) score
        for a finding.
      properties:
        score:
          allOf:
          - $ref: '#/components/schemas/EpssScoreValue'
          - description: The EPSS score.
          title: score
      title: EpssDetails
      type: object
    ErrorCode:
      enum:
      - ALREADY_ENABLED
      - ENABLE_IN_PROGRESS
      - DISABLE_IN_PROGRESS
      - SUSPEND_IN_PROGRESS
      - RESOURCE_NOT_FOUND
      - ACCESS_DENIED
      - INTERNAL_ERROR
      - SSM_UNAVAILABLE
      - SSM_THROTTLED
      - EVENTBRIDGE_UNAVAILABLE
      - EVENTBRIDGE_THROTTLED
      - RESOURCE_SCAN_NOT_DISABLED
      - DISASSOCIATE_ALL_MEMBERS
      - ACCOUNT_IS_ISOLATED
      title: ErrorCode
      type: string
    ErrorMessage:
      type: string
    EvidenceDetail:
      minLength: 0
      type: string
    EvidenceRule:
      minLength: 0
      type: string
    EvidenceSeverity:
      minLength: 0
      type: string
    Evidence:
      description: Details of the evidence for a vulnerability identified in a finding.
      properties:
        evidenceDetail:
          allOf:
          - $ref: '#/components/schemas/EvidenceDetail'
          - description: The evidence details.
          title: evidenceDetail
        evidenceRule:
          allOf:
          - $ref: '#/components/schemas/EvidenceRule'
          - description: The evidence rule.
          title: evidenceRule
        severity:
          allOf:
          - $ref: '#/components/schemas/EvidenceSeverity'
          - description: The evidence severity.
          title: severity
      title: Evidence
      type: object
    EvidenceList:
      items:
        $ref: '#/components/schemas/Evidence'
      type: array
    ExploitAvailable:
      enum:
      - "YES"
      - "NO"
      title: ExploitAvailable
      type: string
    ExploitObserved:
      description: Contains information on when this exploit was observed.
      properties:
        firstSeen:
          allOf:
          - $ref: '#/components/schemas/FirstSeen'
          - description: The date an time when the exploit was first seen.
          title: firstSeen
        lastSeen:
          allOf:
          - $ref: '#/components/schemas/LastSeen'
          - description: The date an time when the exploit was last seen.
          title: lastSeen
      title: ExploitObserved
      type: object
    ExploitabilityDetails:
      description: The details of an exploit available for a finding discovered in
        your environment.
      properties:
        lastKnownExploitAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date and time of the last exploit associated with a finding
              discovered in your environment.
          title: lastKnownExploitAt
      title: ExploitabilityDetails
      type: object
    ExternalReportStatus:
      enum:
      - SUCCEEDED
      - IN_PROGRESS
      - CANCELLED
      - FAILED
      title: ExternalReportStatus
      type: string
    FailedAccount:
      description: An object with details on why an account failed to enable Amazon
        Inspector.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID.
          title: accountId
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The error code explaining why the account failed to enable
              Amazon Inspector.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The error message received when the account failed to enable
              Amazon Inspector.
          title: errorMessage
        resourceStatus:
          $ref: '#/components/schemas/FailedAccount_resourceStatus'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of Amazon Inspector for the account.
          title: status
      required:
      - accountId
      - errorCode
      - errorMessage
      title: FailedAccount
      type: object
    FailedMemberAccountEc2DeepInspectionStatusState:
      description: An object that contains details about a member account in your
        organization that failed to activate Amazon Inspector deep inspection.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The unique identifier for the Amazon Web Services account
              of the organization member that failed to activate Amazon Inspector
              deep inspection.
          title: accountId
        ec2ScanStatus:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of EC2 scanning in the account that failed to
              activate Amazon Inspector deep inspection.
          title: ec2ScanStatus
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The error message explaining why the account failed to activate
              Amazon Inspector deep inspection.
          title: errorMessage
      required:
      - accountId
      title: FailedMemberAccountEc2DeepInspectionStatusState
      type: object
    FilePath:
      maxLength: 1024
      minLength: 1
      type: string
    OwnerId:
      maxLength: 34
      minLength: 12
      pattern: "(^\\d{12}$)|(^o-[a-z0-9]{10,32}$)"
      type: string
    Filter:
      description: Details about a filter.
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/FilterAction'
          - description: The action that is to be applied to the findings that match
              the filter.
          title: action
        arn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          - description: The Amazon Resource Number (ARN) associated with this filter.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date and time this filter was created at.
          title: createdAt
        criteria:
          $ref: '#/components/schemas/Filter_criteria'
        description:
          allOf:
          - $ref: '#/components/schemas/FilterDescription'
          - description: A description of the filter.
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          - description: The name of the filter.
          title: name
        ownerId:
          allOf:
          - $ref: '#/components/schemas/OwnerId'
          - description: The Amazon Web Services account ID of the account that created
              the filter.
          title: ownerId
        reason:
          allOf:
          - $ref: '#/components/schemas/FilterReason'
          - description: The reason for the filter.
          title: reason
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags attached to the filter.
          title: tags
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date and time the filter was last updated at.
          title: updatedAt
      required:
      - action
      - arn
      - createdAt
      - criteria
      - name
      - ownerId
      - updatedAt
      title: Filter
      type: object
    FilterArnList:
      items:
        $ref: '#/components/schemas/FilterArn'
      type: array
    FilterList:
      items:
        $ref: '#/components/schemas/Filter'
      type: array
    FindingDescription:
      maxLength: 1024
      minLength: 1
      type: string
    FixAvailable:
      enum:
      - "YES"
      - "NO"
      - PARTIAL
      title: FixAvailable
      type: string
    InspectorScoreDetails:
      description: Information about the Amazon Inspector score given to a finding.
      properties:
        adjustedCvss:
          $ref: '#/components/schemas/InspectorScoreDetails_adjustedCvss'
      title: InspectorScoreDetails
      type: object
    NetworkReachabilityDetails:
      description: Contains the details of a network reachability finding.
      properties:
        networkPath:
          $ref: '#/components/schemas/NetworkReachabilityDetails_networkPath'
        openPortRange:
          $ref: '#/components/schemas/NetworkReachabilityDetails_openPortRange'
        protocol:
          allOf:
          - $ref: '#/components/schemas/NetworkProtocol'
          - description: The protocol associated with a finding.
          title: protocol
      required:
      - networkPath
      - openPortRange
      - protocol
      title: NetworkReachabilityDetails
      type: object
    PackageVulnerabilityDetails:
      description: Information about a package vulnerability finding.
      properties:
        cvss:
          allOf:
          - $ref: '#/components/schemas/CvssScoreList'
          - description: An object that contains details about the CVSS score of a
              finding.
          title: cvss
        referenceUrls:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          - description: One or more URLs that contain details about this vulnerability
              type.
          title: referenceUrls
        relatedVulnerabilities:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityIdList'
          - description: One or more vulnerabilities related to the one identified
              in this finding.
          title: relatedVulnerabilities
        source:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The source of the vulnerability information.
          title: source
        sourceUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: A URL to the source of the vulnerability information.
          title: sourceUrl
        vendorCreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date and time that this vulnerability was first added
              to the vendor's database.
          title: vendorCreatedAt
        vendorSeverity:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The severity the vendor has given to this vulnerability type.
          title: vendorSeverity
        vendorUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date and time the vendor last updated this vulnerability
              in their database.
          title: vendorUpdatedAt
        vulnerabilityId:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityId'
          - description: The ID given to this vulnerability.
          title: vulnerabilityId
        vulnerablePackages:
          allOf:
          - $ref: '#/components/schemas/VulnerablePackageList'
          - description: The packages impacted by this vulnerability.
          title: vulnerablePackages
      required:
      - source
      - vulnerabilityId
      title: PackageVulnerabilityDetails
      type: object
    Remediation:
      description: Information on how to remediate a finding.
      properties:
        recommendation:
          $ref: '#/components/schemas/Remediation_recommendation'
      title: Remediation
      type: object
    ResourceList:
      items:
        $ref: '#/components/schemas/Resource'
      maxItems: 10
      minItems: 1
      type: array
    Severity:
      enum:
      - INFORMATIONAL
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
      - UNTRIAGED
      title: Severity
      type: string
    FindingStatus:
      enum:
      - ACTIVE
      - SUPPRESSED
      - CLOSED
      title: FindingStatus
      type: string
    FindingTitle:
      maxLength: 1024
      minLength: 1
      type: string
    FindingType:
      enum:
      - NETWORK_REACHABILITY
      - PACKAGE_VULNERABILITY
      - CODE_VULNERABILITY
      title: FindingType
      type: string
    Finding:
      description: Details about an Amazon Inspector finding.
      properties:
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID associated with the finding.
          title: awsAccountId
        codeVulnerabilityDetails:
          $ref: '#/components/schemas/Finding_codeVulnerabilityDetails'
        description:
          allOf:
          - $ref: '#/components/schemas/FindingDescription'
          - description: The description of the finding.
          title: description
        epss:
          $ref: '#/components/schemas/Finding_epss'
        exploitAvailable:
          allOf:
          - $ref: '#/components/schemas/ExploitAvailable'
          - description: If a finding discovered in your environment has an exploit
              available.
          title: exploitAvailable
        exploitabilityDetails:
          $ref: '#/components/schemas/Finding_exploitabilityDetails'
        findingArn:
          allOf:
          - $ref: '#/components/schemas/FindingArn'
          - description: The Amazon Resource Number (ARN) of the finding.
          title: findingArn
        firstObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date and time that the finding was first observed.
          title: firstObservedAt
        fixAvailable:
          allOf:
          - $ref: '#/components/schemas/FixAvailable'
          - description: "Details on whether a fix is available through a version\
              \ update. This value can be <code>YES</code>, <code>NO</code>, or <code>PARTIAL</code>.\
              \ A <code>PARTIAL</code> fix means that some, but not all, of the packages\
              \ identified in the finding have fixes available through updated versions."
          title: fixAvailable
        inspectorScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The Amazon Inspector score given to the finding.
          title: inspectorScore
        inspectorScoreDetails:
          $ref: '#/components/schemas/Finding_inspectorScoreDetails'
        lastObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date and time that the finding was last observed.
          title: lastObservedAt
        networkReachabilityDetails:
          $ref: '#/components/schemas/Finding_networkReachabilityDetails'
        packageVulnerabilityDetails:
          $ref: '#/components/schemas/Finding_packageVulnerabilityDetails'
        remediation:
          $ref: '#/components/schemas/Finding_remediation'
        resources:
          allOf:
          - $ref: '#/components/schemas/ResourceList'
          - description: Contains information on the resources involved in a finding.
          title: resources
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          - description: The severity of the finding.
          title: severity
        status:
          allOf:
          - $ref: '#/components/schemas/FindingStatus'
          - description: The status of the finding.
          title: status
        title:
          allOf:
          - $ref: '#/components/schemas/FindingTitle'
          - description: The title of the finding.
          title: title
        type:
          allOf:
          - $ref: '#/components/schemas/FindingType'
          - description: The type of the finding.
          title: type
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: The date and time the finding was last updated at.
          title: updatedAt
      required:
      - awsAccountId
      - description
      - findingArn
      - firstObservedAt
      - lastObservedAt
      - remediation
      - resources
      - severity
      - status
      - type
      title: Finding
      type: object
    VulnerabilityReferenceUrls:
      items:
        $ref: '#/components/schemas/VulnerabilityReferenceUrl'
      maxItems: 100
      minItems: 0
      type: array
    RiskScore:
      type: integer
    Tools:
      items:
        $ref: '#/components/schemas/Tool'
      type: array
    FindingDetail:
      description: Details of the vulnerability identified in a finding.
      properties:
        cisaData:
          $ref: '#/components/schemas/CisaData'
        cwes:
          allOf:
          - $ref: '#/components/schemas/Cwes'
          - description: The Common Weakness Enumerations (CWEs) associated with the
              vulnerability.
          title: cwes
        epssScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The Exploit Prediction Scoring System (EPSS) score of the
              vulnerability.
          title: epssScore
        evidences:
          allOf:
          - $ref: '#/components/schemas/EvidenceList'
          - description: Information on the evidence of the vulnerability.
          title: evidences
        exploitObserved:
          $ref: '#/components/schemas/ExploitObserved'
        findingArn:
          allOf:
          - $ref: '#/components/schemas/FindingArn'
          - description: The finding ARN that the vulnerability details are associated
              with.
          title: findingArn
        referenceUrls:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityReferenceUrls'
          - description: The reference URLs for the vulnerability data.
          title: referenceUrls
        riskScore:
          allOf:
          - $ref: '#/components/schemas/RiskScore'
          - description: The risk score of the vulnerability.
          title: riskScore
        tools:
          allOf:
          - $ref: '#/components/schemas/Tools'
          - description: The known malware tools or kits that can exploit the vulnerability.
          title: tools
        ttps:
          allOf:
          - $ref: '#/components/schemas/Ttps'
          - description: "The MITRE adversary tactics, techniques, or procedures (TTPs)\
              \ associated with the vulnerability."
          title: ttps
      title: FindingDetail
      type: object
    FindingDetailsErrorCode:
      enum:
      - INTERNAL_ERROR
      - ACCESS_DENIED
      - FINDING_DETAILS_NOT_FOUND
      - INVALID_INPUT
      title: FindingDetailsErrorCode
      type: string
    FindingDetailsError:
      description: Details about an error encountered when trying to return vulnerability
        data for a finding.
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/FindingDetailsErrorCode'
          - description: The error code.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The error message.
          title: errorMessage
        findingArn:
          allOf:
          - $ref: '#/components/schemas/FindingArn'
          - description: The finding ARN that returned an error.
          title: findingArn
      required:
      - errorCode
      - errorMessage
      - findingArn
      title: FindingDetailsError
      type: object
    FindingList:
      items:
        $ref: '#/components/schemas/Finding'
      maxItems: 25
      minItems: 0
      type: array
    FindingTypeSortBy:
      enum:
      - CRITICAL
      - HIGH
      - ALL
      title: FindingTypeSortBy
      type: string
    FreeTrialInfoList:
      items:
        $ref: '#/components/schemas/FreeTrialInfo'
      type: array
    FreeTrialAccountInfo:
      description: Information about the Amazon Inspector free trial for an account.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/MeteringAccountId'
          - description: The account associated with the Amazon Inspector free trial
              information.
          title: accountId
        freeTrialInfo:
          allOf:
          - $ref: '#/components/schemas/FreeTrialInfoList'
          - description: Contains information about the Amazon Inspector free trial
              for an account.
          title: freeTrialInfo
      required:
      - accountId
      - freeTrialInfo
      title: FreeTrialAccountInfo
      type: object
    FreeTrialStatus:
      enum:
      - ACTIVE
      - INACTIVE
      title: FreeTrialStatus
      type: string
    FreeTrialType:
      enum:
      - EC2
      - ECR
      - LAMBDA
      - LAMBDA_CODE
      title: FreeTrialType
      type: string
    FreeTrialInfo:
      description: An object that contains information about the Amazon Inspector
        free trial for an account.
      properties:
        end:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the Amazon Inspector free trail ends
              for a given account.
          title: end
        start:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the Amazon Inspector free trail started
              for a given account.
          title: start
        status:
          allOf:
          - $ref: '#/components/schemas/FreeTrialStatus'
          - description: The order to sort results by.
          title: status
        type:
          allOf:
          - $ref: '#/components/schemas/FreeTrialType'
          - description: The type of scan covered by the Amazon Inspector free trail.
          title: type
      required:
      - end
      - start
      - status
      - type
      title: FreeTrialInfo
      type: object
    FreeTrialInfoErrorCode:
      enum:
      - ACCESS_DENIED
      - INTERNAL_ERROR
      title: FreeTrialInfoErrorCode
      type: string
    FreeTrialInfoError:
      description: Information about an error received while accessing free trail
        data for an account.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/MeteringAccountId'
          - description: The account associated with the Amazon Inspector free trial
              information.
          title: accountId
        code:
          allOf:
          - $ref: '#/components/schemas/FreeTrialInfoErrorCode'
          - description: The error code.
          title: code
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message returned.
          title: message
      required:
      - accountId
      - code
      - message
      title: FreeTrialInfoError
      type: object
    GetConfigurationRequest:
      properties: {}
      title: GetConfigurationRequest
      type: object
    GetDelegatedAdminAccountRequest:
      properties: {}
      title: GetDelegatedAdminAccountRequest
      type: object
    GetEc2DeepInspectionConfigurationRequest:
      properties: {}
      title: GetEc2DeepInspectionConfigurationRequest
      type: object
    PathList:
      items:
        $ref: '#/components/schemas/Path'
      maxItems: 5
      minItems: 0
      type: array
    ResourceType:
      enum:
      - AWS_EC2_INSTANCE
      - AWS_ECR_CONTAINER_IMAGE
      - AWS_ECR_REPOSITORY
      - AWS_LAMBDA_FUNCTION
      title: ResourceType
      type: string
    GetEncryptionKeyRequest:
      properties: {}
      title: GetEncryptionKeyRequest
      type: object
    KmsKeyArn:
      pattern: "^arn:aws(-(us-gov|cn))?:kms:([a-z0-9][-.a-z0-9]{0,62})?:[0-9]{12}?:key/(([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})|(mrk-[0-9a-zA-Z]{32}))$"
      type: string
    GetFindingsReportStatusRequest:
      example:
        reportId: ""
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: The ID of the report to retrieve the status of.
      title: GetFindingsReportStatusRequest
      type: object
    ReportingErrorCode:
      enum:
      - INTERNAL_ERROR
      - INVALID_PERMISSIONS
      - NO_FINDINGS_FOUND
      - BUCKET_NOT_FOUND
      - INCOMPATIBLE_BUCKET_REGION
      - MALFORMED_KMS_KEY
      title: ReportingErrorCode
      type: string
    GetMemberRequest:
      example:
        accountId: ""
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the member account
              to retrieve information on.
      required:
      - accountId
      title: GetMemberRequest
      type: object
    Member:
      description: Details on a member account in your organization.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the member account.
          title: accountId
        delegatedAdminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the Amazon Inspector
              delegated administrator for this member account.
          title: delegatedAdminAccountId
        relationshipStatus:
          allOf:
          - $ref: '#/components/schemas/RelationshipStatus'
          - description: The status of the member account.
          title: relationshipStatus
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          - description: A timestamp showing when the status of this member was last
              updated.
          title: updatedAt
      title: Member
      type: object
    GetSbomExportRequest:
      example:
        reportId: ""
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: The report ID of the SBOM export to get details for.
      required:
      - reportId
      title: GetSbomExportRequest
      type: object
    ImageLayerSortBy:
      enum:
      - CRITICAL
      - HIGH
      - ALL
      title: ImageLayerSortBy
      type: string
    IpV4Address:
      maxLength: 15
      minLength: 7
      pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
      title: IpV4Address
      type: string
    IpV6Address:
      maxLength: 47
      minLength: 1
      title: IpV6Address
      type: string
    LambdaFunctionSortBy:
      enum:
      - CRITICAL
      - HIGH
      - ALL
      title: LambdaFunctionSortBy
      type: string
    LambdaLayerList:
      items:
        $ref: '#/components/schemas/String'
      maxItems: 5
      minItems: 0
      type: array
    LambdaFunctionMetadata:
      description: The AWS Lambda function metadata.
      properties:
        functionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of a function.
          title: functionName
        functionTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The resource tags on an AWS Lambda function.
          title: functionTags
        layers:
          allOf:
          - $ref: '#/components/schemas/LambdaLayerList'
          - description: The layers for an AWS Lambda function. A Lambda function
              can have up to five layers.
          title: layers
        runtime:
          allOf:
          - $ref: '#/components/schemas/Runtime'
          - description: An AWS Lambda function's runtime.
          title: runtime
      title: LambdaFunctionMetadata
      type: object
    LambdaLayerSortBy:
      enum:
      - CRITICAL
      - HIGH
      - ALL
      title: LambdaLayerSortBy
      type: string
    SecurityGroupIdList:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 5
      minItems: 0
      type: array
    SubnetIdList:
      items:
        $ref: '#/components/schemas/SubnetId'
      maxItems: 16
      minItems: 0
      type: array
    VpcId:
      pattern: "^vpc-([a-z0-9]{8}|[a-z0-9]{17}|\\*)$"
      type: string
    ListAccountPermissionsMaxResults:
      maximum: 1024
      minimum: 1
      type: integer
    NextToken:
      maxLength: 1000000
      minLength: 0
      type: string
    Service:
      enum:
      - EC2
      - ECR
      - LAMBDA
      title: Service
      type: string
    ListAccountPermissionsRequest:
      example:
        maxResults: ""
        nextToken: ""
        service: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListAccountPermissionsMaxResults'
          - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
        service:
          allOf:
          - $ref: '#/components/schemas/Service'
          - description: The service scan type to check permissions for.
      title: ListAccountPermissionsRequest
      type: object
    Permissions:
      items:
        $ref: '#/components/schemas/Permission'
      maxItems: 1024
      minItems: 0
      type: array
    ListCoverageMaxResults:
      maximum: 200
      minimum: 1
      type: integer
    ListCoverageRequest:
      example:
        filterCriteria:
          lastScannedAt: ""
          ec2InstanceTags: ""
          resourceId: ""
          lambdaFunctionTags: ""
          lambdaFunctionRuntime: ""
          scanStatusCode: ""
          ecrRepositoryName: ""
          accountId: ""
          scanStatusReason: ""
          ecrImageTags: ""
          lambdaFunctionName: ""
          scanType: ""
          resourceType: ""
        maxResults: ""
        nextToken: ""
      properties:
        filterCriteria:
          $ref: '#/components/schemas/ListCoverageRequest_filterCriteria'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListCoverageMaxResults'
          - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
      title: ListCoverageRequest
      type: object
    ListCoverageStatisticsRequest:
      example:
        filterCriteria:
          lastScannedAt: ""
          ec2InstanceTags: ""
          resourceId: ""
          lambdaFunctionTags: ""
          lambdaFunctionRuntime: ""
          scanStatusCode: ""
          ecrRepositoryName: ""
          accountId: ""
          scanStatusReason: ""
          ecrImageTags: ""
          lambdaFunctionName: ""
          scanType: ""
          resourceType: ""
        nextToken: ""
        groupBy: ""
      properties:
        filterCriteria:
          $ref: '#/components/schemas/ListCoverageRequest_filterCriteria'
        groupBy:
          allOf:
          - $ref: '#/components/schemas/GroupKey'
          - description: The value to group the results by.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
      title: ListCoverageStatisticsRequest
      type: object
    ListDelegatedAdminMaxResults:
      maximum: 5
      minimum: 1
      type: integer
    ListDelegatedAdminAccountsRequest:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListDelegatedAdminMaxResults'
          - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
      title: ListDelegatedAdminAccountsRequest
      type: object
    ListFilterMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ListFiltersRequest:
      example:
        maxResults: ""
        nextToken: ""
        action: ""
        arns: ""
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/FilterAction'
          - description: The action the filter applies to matched findings.
        arns:
          allOf:
          - $ref: '#/components/schemas/FilterArnList'
          - description: The Amazon resource number (ARN) of the filter.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListFilterMaxResults'
          - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
      title: ListFiltersRequest
      type: object
    ListFindingAggregationsMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ListFindingAggregationsRequest:
      example:
        aggregationType: ""
        accountIds: ""
        maxResults: ""
        nextToken: ""
        aggregationRequest:
          findingTypeAggregation:
            findingType: ""
            sortOrder: ""
            sortBy: ""
            resourceType: ""
          imageLayerAggregation:
            layerHashes: ""
            repositories: ""
            sortOrder: ""
            sortBy: ""
            resourceIds: ""
          repositoryAggregation:
            repositories: ""
            sortOrder: ""
            sortBy: ""
          amiAggregation:
            sortOrder: ""
            sortBy: ""
            amis: ""
          lambdaLayerAggregation:
            functionNames: ""
            layerArns: ""
            sortOrder: ""
            sortBy: ""
            resourceIds: ""
          accountAggregation:
            findingType: ""
            sortOrder: ""
            sortBy: ""
            resourceType: ""
          packageAggregation:
            packageNames: ""
            sortOrder: ""
            sortBy: ""
          ec2InstanceAggregation:
            operatingSystems: ""
            instanceIds: ""
            sortOrder: ""
            instanceTags: ""
            sortBy: ""
            amis: ""
          awsEcrContainerAggregation:
            architectures: ""
            imageShas: ""
            repositories: ""
            sortOrder: ""
            sortBy: ""
            imageTags: ""
            resourceIds: ""
          lambdaFunctionAggregation:
            functionNames: ""
            runtimes: ""
            sortOrder: ""
            functionTags: ""
            sortBy: ""
            resourceIds: ""
          titleAggregation:
            findingType: ""
            vulnerabilityIds: ""
            sortOrder: ""
            sortBy: ""
            titles: ""
            resourceType: ""
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The Amazon Web Services account IDs to retrieve finding aggregation
              data for.
        aggregationRequest:
          $ref: '#/components/schemas/ListFindingAggregationsRequest_aggregationRequest'
        aggregationType:
          allOf:
          - $ref: '#/components/schemas/AggregationType'
          - description: The type of the aggregation request.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListFindingAggregationsMaxResults'
          - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
      required:
      - aggregationType
      title: ListFindingAggregationsRequest
      type: object
    ListFindingsMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    SortCriteria:
      description: Details about the criteria used to sort finding results.
      properties:
        field:
          allOf:
          - $ref: '#/components/schemas/SortField'
          - description: The finding detail field by which results are sorted.
          title: field
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order by which findings are sorted.
          title: sortOrder
      required:
      - field
      - sortOrder
      title: SortCriteria
      type: object
    ListFindingsRequest:
      example:
        filterCriteria:
          portRange: ""
          fixAvailable: ""
          resourceId: ""
          awsAccountId: ""
          componentId: ""
          codeVulnerabilityDetectorName: ""
          ecrImageHash: ""
          vendorSeverity: ""
          vulnerabilitySource: ""
          lambdaFunctionRuntime: ""
          codeVulnerabilityDetectorTags: ""
          title: ""
          ecrImagePushedAt: ""
          ecrImageRepositoryName: ""
          ecrImageRegistry: ""
          firstObservedAt: ""
          resourceTags: ""
          vulnerabilityId: ""
          lambdaFunctionName: ""
          ec2InstanceSubnetId: ""
          updatedAt: ""
          severity: ""
          componentType: ""
          relatedVulnerabilities: ""
          lastObservedAt: ""
          ec2InstanceImageId: ""
          epssScore: ""
          vulnerablePackages: ""
          lambdaFunctionLayers: ""
          inspectorScore: ""
          lambdaFunctionLastModifiedAt: ""
          lambdaFunctionExecutionRoleArn: ""
          findingType: ""
          ecrImageArchitecture: ""
          ec2InstanceVpcId: ""
          ecrImageTags: ""
          findingStatus: ""
          codeVulnerabilityFilePath: ""
          exploitAvailable: ""
          findingArn: ""
          networkProtocol: ""
          resourceType: ""
        maxResults: ""
        nextToken: ""
        sortCriteria:
          field: ""
          sortOrder: ""
      properties:
        filterCriteria:
          $ref: '#/components/schemas/ListFindingsRequest_filterCriteria'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListFindingsMaxResults'
          - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
        sortCriteria:
          $ref: '#/components/schemas/ListFindingsRequest_sortCriteria'
      title: ListFindingsRequest
      type: object
    ListMembersMaxResults:
      maximum: 50
      minimum: 1
      type: integer
    ListMembersRequest:
      example:
        maxResults: ""
        nextToken: ""
        onlyAssociated: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListMembersMaxResults'
          - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
        onlyAssociated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether to list only currently associated members
              if <code>True</code> or to list all members within the organization
              if <code>False</code>.
      title: ListMembersRequest
      type: object
    MemberList:
      items:
        $ref: '#/components/schemas/Member'
      maxItems: 50
      minItems: 0
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ListUsageTotalsMaxResults:
      maximum: 500
      minimum: 1
      type: integer
    ListUsageTotalsNextToken:
      minLength: 1
      type: string
    UsageAccountIdList:
      items:
        $ref: '#/components/schemas/UsageAccountId'
      maxItems: 7000
      minItems: 1
      type: array
    ListUsageTotalsRequest:
      example:
        accountIds: ""
        maxResults: ""
        nextToken: ""
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/UsageAccountIdList'
          - description: The Amazon Web Services account IDs to retrieve usage totals
              for.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListUsageTotalsMaxResults'
          - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/ListUsageTotalsNextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
      title: ListUsageTotalsRequest
      type: object
    UsageTotalList:
      items:
        $ref: '#/components/schemas/UsageTotal'
      type: array
    MapComparison:
      enum:
      - EQUALS
      title: MapComparison
      type: string
    MapKey:
      maxLength: 128
      minLength: 1
      type: string
    MapFilter:
      description: An object that describes details of a map filter.
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/MapComparison'
          - description: The operator to use when comparing values in the filter.
          title: comparison
        key:
          allOf:
          - $ref: '#/components/schemas/MapKey'
          - description: The tag key used in the filter.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/MapValue'
          - description: The tag value used in the filter.
          title: value
      required:
      - comparison
      - key
      title: MapFilter
      type: object
    MemberAccountEc2DeepInspectionStatusState:
      description: An object that contains details about the state of Amazon Inspector
        deep inspection for a member account.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The unique identifier for the Amazon Web Services account
              of the organization member
          title: accountId
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The error message explaining why the account failed to activate
              Amazon Inspector deep inspection.
          title: errorMessage
        status:
          allOf:
          - $ref: '#/components/schemas/Ec2DeepInspectionStatus'
          - description: The state of Amazon Inspector deep inspection in the member
              account.
          title: status
      required:
      - accountId
      title: MemberAccountEc2DeepInspectionStatusState
      type: object
    MonthlyCostEstimate:
      format: double
      minimum: 0
      type: number
    StepList:
      items:
        $ref: '#/components/schemas/Step'
      maxItems: 30
      minItems: 1
      type: array
    NetworkPath:
      description: Information on the network path associated with a finding.
      properties:
        steps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          - description: The details on the steps in the network path.
          title: steps
      title: NetworkPath
      type: object
    NetworkProtocol:
      enum:
      - TCP
      - UDP
      title: NetworkProtocol
      type: string
    PortRange:
      description: Details about the port range associated with a finding.
      properties:
        begin:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The beginning port in a port range.
          title: begin
        end:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The ending port in a port range.
          title: end
      required:
      - begin
      - end
      title: PortRange
      type: object
    NonEmptyStringList:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      type: array
    NumberFilter:
      description: An object that describes the details of a number filter.
      properties:
        lowerInclusive:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The lowest number to be included in the filter.
          title: lowerInclusive
        upperInclusive:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The highest number to be included in the filter.
          title: upperInclusive
      title: NumberFilter
      type: object
    Operation:
      enum:
      - ENABLE_SCANNING
      - DISABLE_SCANNING
      - ENABLE_REPOSITORY
      - DISABLE_REPOSITORY
      title: Operation
      type: string
    PackageSortBy:
      enum:
      - CRITICAL
      - HIGH
      - ALL
      title: PackageSortBy
      type: string
    PackageArchitecture:
      maxLength: 64
      minLength: 1
      type: string
    PackageEpoch:
      type: integer
    PackageFilter:
      description: Contains information on the details of a package filter.
      properties:
        architecture:
          $ref: '#/components/schemas/PackageFilter_architecture'
        epoch:
          $ref: '#/components/schemas/PackageFilter_epoch'
        name:
          $ref: '#/components/schemas/PackageFilter_name'
        release:
          $ref: '#/components/schemas/PackageFilter_release'
        sourceLambdaLayerArn:
          $ref: '#/components/schemas/StringFilter'
        sourceLayerHash:
          $ref: '#/components/schemas/PackageFilter_sourceLayerHash'
        version:
          $ref: '#/components/schemas/PackageFilter_version'
      title: PackageFilter
      type: object
    PackageManager:
      enum:
      - BUNDLER
      - CARGO
      - COMPOSER
      - NPM
      - NUGET
      - PIPENV
      - POETRY
      - YARN
      - GOBINARY
      - GOMOD
      - JAR
      - OS
      - PIP
      - PYTHONPKG
      - NODEPKG
      - POM
      - GEMSPEC
      title: PackageManager
      type: string
    PackageName:
      maxLength: 1024
      minLength: 1
      type: string
    PackageRelease:
      maxLength: 1024
      minLength: 1
      type: string
    PackageVersion:
      maxLength: 1024
      minLength: 1
      type: string
    VulnerabilityIdList:
      items:
        $ref: '#/components/schemas/VulnerabilityId'
      type: array
    VulnerabilityId:
      maxLength: 128
      minLength: 1
      title: VulnerabilityId
      type: string
    VulnerablePackageList:
      items:
        $ref: '#/components/schemas/VulnerablePackage'
      type: array
    Permission:
      description: Contains information on the permissions an account has within Amazon
        Inspector.
      properties:
        operation:
          allOf:
          - $ref: '#/components/schemas/Operation'
          - description: The operations that can be performed with the given permissions.
          title: operation
        service:
          allOf:
          - $ref: '#/components/schemas/Service'
          - description: The services that the permissions allow an account to perform
              the given operations for.
          title: service
      required:
      - operation
      - service
      title: Permission
      type: object
    Port:
      maximum: 65535
      minimum: 0
      type: integer
    PortRangeFilter:
      description: An object that describes the details of a port range filter.
      properties:
        beginInclusive:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The port number the port range begins at.
          title: beginInclusive
        endInclusive:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The port number the port range ends at.
          title: endInclusive
      title: PortRangeFilter
      type: object
    Recommendation:
      description: Details about the recommended course of action to remediate the
        finding.
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The URL address to the CVE remediation recommendations.
          title: Url
        text:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The recommended course of action to remediate the finding.
          title: text
      title: Recommendation
      type: object
    RelatedVulnerability:
      minLength: 0
      title: RelatedVulnerability
      type: string
    RelatedVulnerabilities:
      items:
        $ref: '#/components/schemas/RelatedVulnerability'
      maxItems: 100
      minItems: 0
      type: array
    RepositorySortBy:
      enum:
      - CRITICAL
      - HIGH
      - ALL
      - AFFECTED_IMAGES
      title: RepositorySortBy
      type: string
    ResetEncryptionKeyRequest:
      example:
        scanType: ""
        resourceType: ""
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The resource type the key encrypts.
        scanType:
          allOf:
          - $ref: '#/components/schemas/ScanType'
          - description: The scan type the key encrypts.
      required:
      - resourceType
      - scanType
      title: ResetEncryptionKeyRequest
      type: object
    ResourceDetails:
      description: Contains details about the resource involved in the finding.
      properties:
        awsEc2Instance:
          $ref: '#/components/schemas/ResourceDetails_awsEc2Instance'
        awsEcrContainerImage:
          $ref: '#/components/schemas/ResourceDetails_awsEcrContainerImage'
        awsLambdaFunction:
          $ref: '#/components/schemas/ResourceDetails_awsLambdaFunction'
      title: ResourceDetails
      type: object
    Resource:
      description: Details about the resource involved in a finding.
      properties:
        details:
          $ref: '#/components/schemas/Resource_details'
        id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The ID of the resource.
          title: id
        partition:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The partition of the resource.
          title: partition
        region:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The Amazon Web Services Region the impacted resource is located
              in.
          title: region
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags attached to the resource.
          title: tags
        type:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The type of resource.
          title: type
      required:
      - id
      - type
      title: Resource
      type: object
    ResourceMapComparison:
      enum:
      - EQUALS
      title: ResourceMapComparison
      type: string
    ResourceMapFilter:
      description: A resource map filter for a software bill of material report.
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/ResourceMapComparison'
          - description: The filter's comparison.
          title: comparison
        key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The filter's key.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The filter's value.
          title: value
      required:
      - comparison
      - key
      title: ResourceMapFilter
      type: object
    ResourceStringComparison:
      enum:
      - EQUALS
      - NOT_EQUALS
      title: ResourceStringComparison
      type: string
    ResourceStringInput:
      maxLength: 1024
      minLength: 1
      type: string
    ResourceStringFilter:
      description: A resource string filter for a software bill of materials report.
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/ResourceStringComparison'
          - description: The filter's comparison.
          title: comparison
        value:
          allOf:
          - $ref: '#/components/schemas/ResourceStringInput'
          - description: The filter's value.
          title: value
      required:
      - comparison
      - value
      title: ResourceStringFilter
      type: object
    ScanStatusReason:
      enum:
      - PENDING_INITIAL_SCAN
      - ACCESS_DENIED
      - INTERNAL_ERROR
      - UNMANAGED_EC2_INSTANCE
      - UNSUPPORTED_OS
      - SCAN_ELIGIBILITY_EXPIRED
      - RESOURCE_TERMINATED
      - SUCCESSFUL
      - NO_RESOURCES_FOUND
      - IMAGE_SIZE_EXCEEDED
      - SCAN_FREQUENCY_MANUAL
      - SCAN_FREQUENCY_SCAN_ON_PUSH
      - EC2_INSTANCE_STOPPED
      - PENDING_DISABLE
      - NO_INVENTORY
      - STALE_INVENTORY
      - EXCLUDED_BY_TAG
      - UNSUPPORTED_RUNTIME
      - UNSUPPORTED_MEDIA_TYPE
      - UNSUPPORTED_CONFIG_FILE
      - DEEP_INSPECTION_PACKAGE_COLLECTION_LIMIT_EXCEEDED
      - DEEP_INSPECTION_DAILY_SSM_INVENTORY_LIMIT_EXCEEDED
      - DEEP_INSPECTION_COLLECTION_TIME_LIMIT_EXCEEDED
      - DEEP_INSPECTION_NO_INVENTORY
      title: ScanStatusReason
      type: string
    ScanStatusCode:
      enum:
      - ACTIVE
      - INACTIVE
      title: ScanStatusCode
      type: string
    SearchVulnerabilitiesFilterCriteria:
      description: 'Details on the criteria used to define the filter for a vulnerability
        search. '
      properties:
        vulnerabilityIds:
          allOf:
          - $ref: '#/components/schemas/VulnIdList'
          - description: The IDs for specific vulnerabilities.
          title: vulnerabilityIds
      required:
      - vulnerabilityIds
      title: SearchVulnerabilitiesFilterCriteria
      type: object
    SearchVulnerabilitiesRequest:
      example:
        filterCriteria:
          vulnerabilityIds: ""
        nextToken: ""
      properties:
        filterCriteria:
          $ref: '#/components/schemas/SearchVulnerabilitiesRequest_filterCriteria'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token to use for paginating results that are returned\
              \ in the response. Set the value of this parameter to null for the first\
              \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
              \ value returned from the previous request to continue listing results\
              \ after the first page."
      required:
      - filterCriteria
      title: SearchVulnerabilitiesRequest
      type: object
    Vulnerabilities:
      items:
        $ref: '#/components/schemas/Vulnerability'
      maxItems: 1
      minItems: 0
      type: array
    SecurityGroupId:
      pattern: "^sg-([a-z0-9]{8}|[a-z0-9]{17}|\\*)$"
      title: SecurityGroupId
      type: string
    SourceLayerHash:
      maxLength: 71
      minLength: 71
      pattern: "^sha256:[a-z0-9]{64}$"
      type: string
    Step:
      description: Details about the step associated with a finding.
      properties:
        componentId:
          allOf:
          - $ref: '#/components/schemas/Component'
          - description: The component ID.
          title: componentId
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          - description: The component type.
          title: componentType
      required:
      - componentId
      - componentType
      title: Step
      type: object
    StringComparison:
      enum:
      - EQUALS
      - PREFIX
      - NOT_EQUALS
      title: StringComparison
      type: string
    StringInput:
      maxLength: 1024
      minLength: 1
      type: string
    SubnetId:
      pattern: "^subnet-([a-z0-9]{8}|[a-z0-9]{17}|\\*)$"
      title: SubnetId
      type: string
    SuggestedFixCodeString:
      maxLength: 2500
      minLength: 1
      type: string
    SuggestedFixDescriptionString:
      maxLength: 1000
      minLength: 1
      type: string
    SuggestedFix:
      description: A suggested fix for a vulnerability in your Lambda function code.
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/SuggestedFixCodeString'
          - description: The fix's code.
          title: code
        description:
          allOf:
          - $ref: '#/components/schemas/SuggestedFixDescriptionString'
          - description: The fix's description.
          title: description
      title: SuggestedFix
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to be added to a resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    Target:
      maxLength: 50
      minLength: 0
      title: Target
      type: string
    TitleSortBy:
      enum:
      - CRITICAL
      - HIGH
      - ALL
      title: TitleSortBy
      type: string
    Tool:
      minLength: 0
      title: Tool
      type: string
    Ttp:
      maxLength: 30
      minLength: 0
      title: Ttp
      type: string
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateConfigurationRequest:
      example:
        ecrConfiguration:
          rescanDuration: ""
      properties:
        ecrConfiguration:
          $ref: '#/components/schemas/UpdateConfigurationRequest_ecrConfiguration'
      required:
      - ecrConfiguration
      title: UpdateConfigurationRequest
      type: object
    UpdateEc2DeepInspectionConfigurationRequest:
      example:
        activateDeepInspection: ""
        packagePaths: ""
      properties:
        activateDeepInspection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specify <code>TRUE</code> to activate Amazon Inspector deep\
              \ inspection in your account, or <code>FALSE</code> to deactivate. Member\
              \ accounts in an organization cannot deactivate deep inspection, instead\
              \ the delegated administrator for the organization can deactivate a\
              \ member account using <a href=\"https://docs.aws.amazon.com/inspector/v2/APIReference/API_BatchUpdateMemberEc2DeepInspectionStatus.html\"\
              >BatchUpdateMemberEc2DeepInspectionStatus</a>."
        packagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: The Amazon Inspector deep inspection custom paths you are
              adding for your account.
      title: UpdateEc2DeepInspectionConfigurationRequest
      type: object
    UpdateEncryptionKeyRequest:
      example:
        kmsKeyId: ""
        scanType: ""
        resourceType: ""
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: A KMS key ID for the encryption key.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The resource type for the encryption key.
        scanType:
          allOf:
          - $ref: '#/components/schemas/ScanType'
          - description: The scan type for the encryption key.
      required:
      - kmsKeyId
      - resourceType
      - scanType
      title: UpdateEncryptionKeyRequest
      type: object
    UpdateFilterRequest:
      example:
        filterCriteria:
          portRange: ""
          fixAvailable: ""
          resourceId: ""
          awsAccountId: ""
          componentId: ""
          codeVulnerabilityDetectorName: ""
          ecrImageHash: ""
          vendorSeverity: ""
          vulnerabilitySource: ""
          lambdaFunctionRuntime: ""
          codeVulnerabilityDetectorTags: ""
          title: ""
          ecrImagePushedAt: ""
          ecrImageRepositoryName: ""
          ecrImageRegistry: ""
          firstObservedAt: ""
          resourceTags: ""
          vulnerabilityId: ""
          lambdaFunctionName: ""
          ec2InstanceSubnetId: ""
          updatedAt: ""
          severity: ""
          componentType: ""
          relatedVulnerabilities: ""
          lastObservedAt: ""
          ec2InstanceImageId: ""
          epssScore: ""
          vulnerablePackages: ""
          lambdaFunctionLayers: ""
          inspectorScore: ""
          lambdaFunctionLastModifiedAt: ""
          lambdaFunctionExecutionRoleArn: ""
          findingType: ""
          ecrImageArchitecture: ""
          ec2InstanceVpcId: ""
          ecrImageTags: ""
          findingStatus: ""
          codeVulnerabilityFilePath: ""
          exploitAvailable: ""
          findingArn: ""
          networkProtocol: ""
          resourceType: ""
        reason: ""
        filterArn: ""
        name: ""
        action: ""
        description: ""
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/FilterAction'
          - description: Specifies the action that is to be applied to the findings
              that match the filter.
        description:
          allOf:
          - $ref: '#/components/schemas/FilterDescription'
          - description: A description of the filter.
        filterArn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          - description: The Amazon Resource Number (ARN) of the filter to update.
        filterCriteria:
          $ref: '#/components/schemas/UpdateFilterRequest_filterCriteria'
        name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          - description: The name of the filter.
        reason:
          allOf:
          - $ref: '#/components/schemas/FilterReason'
          - description: The reason the filter was updated.
      required:
      - filterArn
      title: UpdateFilterRequest
      type: object
    UpdateOrgEc2DeepInspectionConfigurationRequest:
      example:
        orgPackagePaths: ""
      properties:
        orgPackagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: The Amazon Inspector deep inspection custom paths you are
              adding for your organization.
      required:
      - orgPackagePaths
      title: UpdateOrgEc2DeepInspectionConfigurationRequest
      type: object
    UpdateOrganizationConfigurationRequest:
      example:
        autoEnable:
          lambda: ""
          ec2: ""
          ecr: ""
          lambdaCode: ""
      properties:
        autoEnable:
          $ref: '#/components/schemas/UpdateOrganizationConfigurationRequest_autoEnable'
      required:
      - autoEnable
      title: UpdateOrganizationConfigurationRequest
      type: object
    UsageValue:
      format: double
      minimum: 0
      type: number
    UsageType:
      enum:
      - EC2_INSTANCE_HOURS
      - ECR_INITIAL_SCAN
      - ECR_RESCAN
      - LAMBDA_FUNCTION_HOURS
      - LAMBDA_FUNCTION_CODE_HOURS
      title: UsageType
      type: string
    Usage:
      description: Contains usage information about the cost of Amazon Inspector operation.
      properties:
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          - description: The currency type used when calculating usage data.
          title: currency
        estimatedMonthlyCost:
          allOf:
          - $ref: '#/components/schemas/MonthlyCostEstimate'
          - description: The estimated monthly cost of Amazon Inspector.
          title: estimatedMonthlyCost
        total:
          allOf:
          - $ref: '#/components/schemas/UsageValue'
          - description: The total of usage.
          title: total
        type:
          allOf:
          - $ref: '#/components/schemas/UsageType'
          - description: The type scan.
          title: type
      title: Usage
      type: object
    UsageList:
      items:
        $ref: '#/components/schemas/Usage'
      type: array
    UsageTotal:
      description: The total of usage for an account ID.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/MeteringAccountId'
          - description: The account ID of the account that usage data was retrieved
              for.
          title: accountId
        usage:
          allOf:
          - $ref: '#/components/schemas/UsageList'
          - description: An object representing the total usage for an account.
          title: usage
      title: UsageTotal
      type: object
    VendorCreatedAt:
      format: date-time
      type: string
    VendorSeverity:
      maxLength: 64
      minLength: 1
      type: string
    VendorUpdatedAt:
      format: date-time
      type: string
    VulnId:
      pattern: "^CVE-[12][0-9]{3}-[0-9]{1,10}$"
      title: VulnId
      type: string
    Vulnerability:
      description: Contains details about a specific vulnerability Amazon Inspector
        can detect.
      properties:
        atigData:
          $ref: '#/components/schemas/Vulnerability_atigData'
        cisaData:
          $ref: '#/components/schemas/Vulnerability_cisaData'
        cvss2:
          $ref: '#/components/schemas/Vulnerability_cvss2'
        cvss3:
          $ref: '#/components/schemas/Vulnerability_cvss3'
        cwes:
          allOf:
          - $ref: '#/components/schemas/Cwes'
          - description: The Common Weakness Enumeration (CWE) associated with the
              vulnerability.
          title: cwes
        description:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityDescription'
          - description: A description of the vulnerability.
          title: description
        detectionPlatforms:
          allOf:
          - $ref: '#/components/schemas/DetectionPlatforms'
          - description: Platforms that the vulnerability can be detected on.
          title: detectionPlatforms
        epss:
          $ref: '#/components/schemas/Vulnerability_epss'
        exploitObserved:
          $ref: '#/components/schemas/Vulnerability_exploitObserved'
        id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The ID for the specific vulnerability.
          title: id
        referenceUrls:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityReferenceUrls'
          - description: 'Links to various resources with more information on this
              vulnerability. '
          title: referenceUrls
        relatedVulnerabilities:
          allOf:
          - $ref: '#/components/schemas/RelatedVulnerabilities'
          - description: A list of related vulnerabilities.
          title: relatedVulnerabilities
        source:
          allOf:
          - $ref: '#/components/schemas/VulnerabilitySource'
          - description: The source of the vulnerability information.
          title: source
        sourceUrl:
          allOf:
          - $ref: '#/components/schemas/VulnerabilitySourceUrl'
          - description: A link to the official source material for this vulnerability.
          title: sourceUrl
        vendorCreatedAt:
          allOf:
          - $ref: '#/components/schemas/VendorCreatedAt'
          - description: The date and time when the vendor created this vulnerability.
          title: vendorCreatedAt
        vendorSeverity:
          allOf:
          - $ref: '#/components/schemas/VendorSeverity'
          - description: The severity assigned by the vendor.
          title: vendorSeverity
        vendorUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/VendorUpdatedAt'
          - description: The date and time when the vendor last updated this vulnerability.
          title: vendorUpdatedAt
      required:
      - id
      title: Vulnerability
      type: object
    VulnerabilityDescription:
      type: string
    VulnerabilitySource:
      enum:
      - NVD
      title: VulnerabilitySource
      type: string
    VulnerabilitySourceUrl:
      minLength: 0
      type: string
    VulnerabilityReferenceUrl:
      minLength: 0
      title: VulnerabilityReferenceUrl
      type: string
    VulnerablePackageRemediation:
      maxLength: 1024
      minLength: 1
      type: string
    VulnerablePackage:
      description: Information on the vulnerable package identified by a finding.
      properties:
        arch:
          allOf:
          - $ref: '#/components/schemas/PackageArchitecture'
          - description: The architecture of the vulnerable package.
          title: arch
        epoch:
          allOf:
          - $ref: '#/components/schemas/PackageEpoch'
          - description: The epoch of the vulnerable package.
          title: epoch
        filePath:
          allOf:
          - $ref: '#/components/schemas/FilePath'
          - description: The file path of the vulnerable package.
          title: filePath
        fixedInVersion:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          - description: The version of the package that contains the vulnerability
              fix.
          title: fixedInVersion
        name:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          - description: The name of the vulnerable package.
          title: name
        packageManager:
          allOf:
          - $ref: '#/components/schemas/PackageManager'
          - description: The package manager of the vulnerable package.
          title: packageManager
        release:
          allOf:
          - $ref: '#/components/schemas/PackageRelease'
          - description: The release of the vulnerable package.
          title: release
        remediation:
          allOf:
          - $ref: '#/components/schemas/VulnerablePackageRemediation'
          - description: The code to run in your environment to update packages with
              a fix available.
          title: remediation
        sourceLambdaLayerArn:
          allOf:
          - $ref: '#/components/schemas/LambdaLayerArn'
          - description: The Amazon Resource Number (ARN) of the AWS Lambda function
              affected by a finding.
          title: sourceLambdaLayerArn
        sourceLayerHash:
          allOf:
          - $ref: '#/components/schemas/SourceLayerHash'
          - description: The source layer hash of the vulnerable package.
          title: sourceLayerHash
        version:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          - description: The version of the vulnerable package.
          title: version
      required:
      - name
      - version
      title: VulnerablePackage
      type: object
    AssociateMember_request:
      properties:
        accountId:
          description: The Amazon Web Services account ID of the member account to
            be associated.
          maxLength: 12
          minLength: 12
          pattern: "^\\d{12}$"
          title: accountId
          type: string
      required:
      - accountId
      title: AssociateMember_request
      type: object
    BatchGetAccountStatus_request:
      properties:
        accountIds:
          description: The 12-digit Amazon Web Services account IDs of the accounts
            to retrieve Amazon Inspector status for.
          items:
            $ref: '#/components/schemas/AccountId'
          maxItems: 100
          minItems: 0
          title: accountIds
          type: array
      title: BatchGetAccountStatus_request
      type: object
    BatchGetCodeSnippet_request:
      properties:
        findingArns:
          description: An array of finding ARNs for the findings you want to retrieve
            code snippets from.
          items:
            $ref: '#/components/schemas/FindingArn'
          maxItems: 10
          minItems: 1
          title: findingArns
          type: array
      required:
      - findingArns
      title: BatchGetCodeSnippet_request
      type: object
    BatchGetFindingDetails_request:
      properties:
        findingArns:
          description: A list of finding ARNs.
          items:
            $ref: '#/components/schemas/FindingArn'
          maxItems: 10
          minItems: 1
          title: findingArns
          type: array
      required:
      - findingArns
      title: BatchGetFindingDetails_request
      type: object
    BatchGetFreeTrialInfo_request:
      properties:
        accountIds:
          description: The account IDs to get free trial status for.
          items:
            $ref: '#/components/schemas/MeteringAccountId'
          maxItems: 100
          minItems: 1
          title: accountIds
          type: array
      required:
      - accountIds
      title: BatchGetFreeTrialInfo_request
      type: object
    BatchGetMemberEc2DeepInspectionStatus_request:
      properties:
        accountIds:
          description: The unique identifiers for the Amazon Web Services accounts
            to retrieve Amazon Inspector deep inspection activation status for. <pre><code>
            &lt;/p&gt; </code></pre>
          items:
            $ref: '#/components/schemas/AccountId'
          maxItems: 100
          minItems: 0
          title: accountIds
          type: array
      title: BatchGetMemberEc2DeepInspectionStatus_request
      type: object
    BatchUpdateMemberEc2DeepInspectionStatus_request:
      properties:
        accountIds:
          description: The unique identifiers for the Amazon Web Services accounts
            to change Amazon Inspector deep inspection status for.
          items:
            $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatus'
          maxItems: 100
          minItems: 0
          title: accountIds
          type: array
      required:
      - accountIds
      title: BatchUpdateMemberEc2DeepInspectionStatus_request
      type: object
    CancelFindingsReport_request:
      properties:
        reportId:
          description: The ID of the report to be canceled.
          pattern: "\\b[a-f0-9]{8}\\b-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-\\b[a-f0-9]{12}\\\
            b"
          title: reportId
          type: string
      required:
      - reportId
      title: CancelFindingsReport_request
      type: object
    CancelSbomExport_request:
      properties:
        reportId:
          description: The report ID of the SBOM export to cancel.
          pattern: "\\b[a-f0-9]{8}\\b-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-\\b[a-f0-9]{12}\\\
            b"
          title: reportId
          type: string
      required:
      - reportId
      title: CancelSbomExport_request
      type: object
    CreateFilter_request_filterCriteria:
      description: Details on the criteria used to define the filter.
      properties:
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon Web Services account IDs used to filter
              findings.
          title: awsAccountId
        codeVulnerabilityDetectorName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The name of the detector used to identify a code vulnerability
              in a Lambda function used to filter findings.
          title: codeVulnerabilityDetectorName
        codeVulnerabilityDetectorTags:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: "The detector type tag associated with the vulnerability\
              \ used to filter findings. Detector tags group related vulnerabilities\
              \ by common themes or tactics. For a list of available tags by programming\
              \ language, see <a href=\"https://docs.aws.amazon.com/codeguru/detector-library/java/tags/\"\
              >Java tags</a>, or <a href=\"https://docs.aws.amazon.com/codeguru/detector-library/python/tags/\"\
              >Python tags</a>. "
          title: codeVulnerabilityDetectorTags
        codeVulnerabilityFilePath:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The file path to the file in a Lambda function that contains
              a code vulnerability used to filter findings.
          title: codeVulnerabilityFilePath
        componentId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the component IDs used to filter findings.
          title: componentId
        componentType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the component types used to filter findings.
          title: componentType
        ec2InstanceImageId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon EC2 instance image IDs used to filter
              findings.
          title: ec2InstanceImageId
        ec2InstanceSubnetId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon EC2 instance subnet IDs used to filter
              findings.
          title: ec2InstanceSubnetId
        ec2InstanceVpcId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon EC2 instance VPC IDs used to filter
              findings.
          title: ec2InstanceVpcId
        ecrImageArchitecture:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon ECR image architecture types used to
              filter findings.
          title: ecrImageArchitecture
        ecrImageHash:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details of the Amazon ECR image hashes used to filter findings.
          title: ecrImageHash
        ecrImagePushedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          - description: Details on the Amazon ECR image push date and time used to
              filter findings.
          title: ecrImagePushedAt
        ecrImageRegistry:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the Amazon ECR registry used to filter findings.
          title: ecrImageRegistry
        ecrImageRepositoryName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the name of the Amazon ECR repository used to
              filter findings.
          title: ecrImageRepositoryName
        ecrImageTags:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: The tags attached to the Amazon ECR container image.
          title: ecrImageTags
        epssScore:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          - description: The EPSS score used to filter findings.
          title: epssScore
        exploitAvailable:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Filters the list of AWS Lambda findings by the availability
              of exploits.
          title: exploitAvailable
        findingArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the finding ARNs used to filter findings.
          title: findingArn
        findingStatus:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the finding status types used to filter findings.
          title: findingStatus
        findingType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the finding types used to filter findings.
          title: findingType
        firstObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          - description: Details on the date and time a finding was first seen used
              to filter findings.
          title: firstObservedAt
        fixAvailable:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: "Details on whether a fix is available through a version\
              \ update. This value can be <code>YES</code>, <code>NO</code>, or <code>PARTIAL</code>.\
              \ A <code>PARTIAL</code> fix means that some, but not all, of the packages\
              \ identified in the finding have fixes available through updated versions."
          title: fixAvailable
        inspectorScore:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          - description: The Amazon Inspector score to filter on.
          title: inspectorScore
        lambdaFunctionExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Filters the list of AWS Lambda functions by execution role.
          title: lambdaFunctionExecutionRoleArn
        lambdaFunctionLastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          - description: "Filters the list of AWS Lambda functions by the date and\
              \ time that a user last updated the configuration, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"\
              >ISO 8601 format</a> "
          title: lambdaFunctionLastModifiedAt
        lambdaFunctionLayers:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Filters the list of AWS Lambda functions by the function's
              <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">
              layers</a>. A Lambda function can have up to five layers.
          title: lambdaFunctionLayers
        lambdaFunctionName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Filters the list of AWS Lambda functions by the name of the
              function.
          title: lambdaFunctionName
        lambdaFunctionRuntime:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Filters the list of AWS Lambda functions by the runtime environment
              for the Lambda function.
          title: lambdaFunctionRuntime
        lastObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          - description: Details on the date and time a finding was last seen used
              to filter findings.
          title: lastObservedAt
        networkProtocol:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on network protocol used to filter findings.
          title: networkProtocol
        portRange:
          allOf:
          - $ref: '#/components/schemas/PortRangeFilterList'
          - description: Details on the port ranges used to filter findings.
          title: portRange
        relatedVulnerabilities:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the related vulnerabilities used to filter findings.
          title: relatedVulnerabilities
        resourceId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the resource IDs used to filter findings.
          title: resourceId
        resourceTags:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          - description: Details on the resource tags used to filter findings.
          title: resourceTags
        resourceType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the resource types used to filter findings.
          title: resourceType
        severity:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the severity used to filter findings.
          title: severity
        title:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the finding title used to filter findings.
          title: title
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          - description: Details on the date and time a finding was last updated at
              used to filter findings.
          title: updatedAt
        vendorSeverity:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the vendor severity used to filter findings.
          title: vendorSeverity
        vulnerabilityId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the vulnerability ID used to filter findings.
          title: vulnerabilityId
        vulnerabilitySource:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          - description: Details on the vulnerability type used to filter findings.
          title: vulnerabilitySource
        vulnerablePackages:
          allOf:
          - $ref: '#/components/schemas/PackageFilterList'
          - description: Details on the vulnerable packages used to filter findings.
          title: vulnerablePackages
      title: CreateFilter_request_filterCriteria
      type: object
    CreateFilter_request:
      properties:
        action:
          description: Defines the action that is to be applied to the findings that
            match the filter.
          enum:
          - NONE
          - SUPPRESS
          title: action
          type: string
        description:
          description: A description of the filter.
          maxLength: 512
          minLength: 1
          title: description
          type: string
        filterCriteria:
          $ref: '#/components/schemas/CreateFilter_request_filterCriteria'
        name:
          description: "The name of the filter. Minimum length of 3. Maximum length\
            \ of 64. Valid characters include alphanumeric characters, dot (.), underscore\
            \ (_), and dash (-). Spaces are not allowed."
          maxLength: 128
          minLength: 1
          title: name
          type: string
        reason:
          description: The reason for creating the filter.
          maxLength: 512
          minLength: 1
          title: reason
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/MapValue'
          description: A list of tags for the filter.
          title: tags
          type: object
      required:
      - action
      - filterCriteria
      - name
      title: CreateFilter_request
      type: object
    CreateFindingsReport_request_s3Destination:
      description: Contains details of the Amazon S3 bucket and KMS key used to export
        findings.
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Amazon S3 bucket to export findings to.
          title: bucketName
        keyPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The prefix that the findings will be written under.
          title: keyPrefix
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the KMS key used to encrypt data when exporting
              findings.
          title: kmsKeyArn
      title: CreateFindingsReport_request_s3Destination
      type: object
    CreateFindingsReport_request:
      properties:
        filterCriteria:
          $ref: '#/components/schemas/CreateFilter_request_filterCriteria'
        reportFormat:
          description: The format to generate the report in.
          enum:
          - CSV
          - JSON
          title: reportFormat
          type: string
        s3Destination:
          $ref: '#/components/schemas/CreateFindingsReport_request_s3Destination'
      required:
      - reportFormat
      - s3Destination
      title: CreateFindingsReport_request
      type: object
    CreateSbomExport_request_resourceFilterCriteria:
      description: The resource filter criteria for a Software bill of materials (SBOM)
        report.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The account IDs used as resource filter criteria.
          title: accountId
        ec2InstanceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceMapFilterList'
          - description: The EC2 instance tags used as resource filter criteria.
          title: ec2InstanceTags
        ecrImageTags:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The ECR image tags used as resource filter criteria.
          title: ecrImageTags
        ecrRepositoryName:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The ECR repository names used as resource filter criteria.
          title: ecrRepositoryName
        lambdaFunctionName:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The AWS Lambda function name used as resource filter criteria.
          title: lambdaFunctionName
        lambdaFunctionTags:
          allOf:
          - $ref: '#/components/schemas/ResourceMapFilterList'
          - description: The AWS Lambda function tags used as resource filter criteria.
          title: lambdaFunctionTags
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The resource IDs used as resource filter criteria.
          title: resourceId
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          - description: The resource types used as resource filter criteria.
          title: resourceType
      title: CreateSbomExport_request_resourceFilterCriteria
      type: object
    CreateSbomExport_request:
      properties:
        reportFormat:
          description: The output format for the software bill of materials (SBOM)
            report.
          enum:
          - CYCLONEDX_1_4
          - SPDX_2_3
          title: reportFormat
          type: string
        resourceFilterCriteria:
          $ref: '#/components/schemas/CreateSbomExport_request_resourceFilterCriteria'
        s3Destination:
          $ref: '#/components/schemas/CreateFindingsReport_request_s3Destination'
      required:
      - reportFormat
      - s3Destination
      title: CreateSbomExport_request
      type: object
    DeleteFilter_request:
      properties:
        arn:
          description: The Amazon Resource Number (ARN) of the filter to be deleted.
          maxLength: 128
          minLength: 1
          title: arn
          type: string
      required:
      - arn
      title: DeleteFilter_request
      type: object
    Disable_request:
      properties:
        accountIds:
          description: An array of account IDs you want to disable Amazon Inspector
            scans for.
          items:
            $ref: '#/components/schemas/AccountId'
          maxItems: 100
          minItems: 0
          title: accountIds
          type: array
        resourceTypes:
          description: The resource scan types you want to disable.
          items:
            $ref: '#/components/schemas/ResourceScanType'
          maxItems: 3
          minItems: 0
          title: resourceTypes
          type: array
      title: Disable_request
      type: object
    DisableDelegatedAdminAccount_request:
      properties:
        delegatedAdminAccountId:
          description: The Amazon Web Services account ID of the current Amazon Inspector
            delegated administrator.
          maxLength: 12
          minLength: 12
          pattern: "^\\d{12}$"
          title: delegatedAdminAccountId
          type: string
      required:
      - delegatedAdminAccountId
      title: DisableDelegatedAdminAccount_request
      type: object
    DisassociateMember_request:
      properties:
        accountId:
          description: The Amazon Web Services account ID of the member account to
            disassociate.
          maxLength: 12
          minLength: 12
          pattern: "^\\d{12}$"
          title: accountId
          type: string
      required:
      - accountId
      title: DisassociateMember_request
      type: object
    Enable_request:
      properties:
        accountIds:
          description: A list of account IDs you want to enable Amazon Inspector scans
            for.
          items:
            $ref: '#/components/schemas/AccountId'
          maxItems: 100
          minItems: 0
          title: accountIds
          type: array
        clientToken:
          description: The idempotency token for the request.
          maxLength: 64
          minLength: 1
          title: clientToken
          type: string
        resourceTypes:
          description: The resource scan types you want to enable.
          items:
            $ref: '#/components/schemas/ResourceScanType'
          maxItems: 3
          minItems: 1
          title: resourceTypes
          type: array
      required:
      - resourceTypes
      title: Enable_request
      type: object
    EnableDelegatedAdminAccount_request:
      properties:
        clientToken:
          description: The idempotency token for the request.
          maxLength: 64
          minLength: 1
          title: clientToken
          type: string
        delegatedAdminAccountId:
          description: The Amazon Web Services account ID of the Amazon Inspector
            delegated administrator.
          maxLength: 12
          minLength: 12
          pattern: "^\\d{12}$"
          title: delegatedAdminAccountId
          type: string
      required:
      - delegatedAdminAccountId
      title: EnableDelegatedAdminAccount_request
      type: object
    GetFindingsReportStatus_request:
      properties:
        reportId:
          description: The ID of the report to retrieve the status of.
          pattern: "\\b[a-f0-9]{8}\\b-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-\\b[a-f0-9]{12}\\\
            b"
          title: reportId
          type: string
      title: GetFindingsReportStatus_request
      type: object
    GetMember_request:
      properties:
        accountId:
          description: The Amazon Web Services account ID of the member account to
            retrieve information on.
          maxLength: 12
          minLength: 12
          pattern: "^\\d{12}$"
          title: accountId
          type: string
      required:
      - accountId
      title: GetMember_request
      type: object
    GetSbomExport_request:
      properties:
        reportId:
          description: The report ID of the SBOM export to get details for.
          pattern: "\\b[a-f0-9]{8}\\b-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-\\b[a-f0-9]{12}\\\
            b"
          title: reportId
          type: string
      required:
      - reportId
      title: GetSbomExport_request
      type: object
    ListAccountPermissions_request:
      properties:
        maxResults:
          description: The maximum number of results to return in the response.
          maximum: 1024
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: "A token to use for paginating results that are returned in\
            \ the response. Set the value of this parameter to null for the first\
            \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
            \ value returned from the previous request to continue listing results\
            \ after the first page."
          maxLength: 1000000
          minLength: 0
          title: nextToken
          type: string
        service:
          description: The service scan type to check permissions for.
          enum:
          - EC2
          - ECR
          - LAMBDA
          title: service
          type: string
      title: ListAccountPermissions_request
      type: object
    ListCoverage_request_filterCriteria:
      description: A structure that identifies filter criteria for <code>GetCoverageStatistics</code>.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: An array of Amazon Web Services account IDs to return coverage
              statistics for.
          title: accountId
        ec2InstanceTags:
          allOf:
          - $ref: '#/components/schemas/CoverageMapFilterList'
          - description: The Amazon EC2 instance tags to filter on.
          title: ec2InstanceTags
        ecrImageTags:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: The Amazon ECR image tags to filter on.
          title: ecrImageTags
        ecrRepositoryName:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: The Amazon ECR repository name to filter on.
          title: ecrRepositoryName
        lambdaFunctionName:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: Returns coverage statistics for AWS Lambda functions filtered
              by function names.
          title: lambdaFunctionName
        lambdaFunctionRuntime:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: Returns coverage statistics for AWS Lambda functions filtered
              by runtime.
          title: lambdaFunctionRuntime
        lambdaFunctionTags:
          allOf:
          - $ref: '#/components/schemas/CoverageMapFilterList'
          - description: Returns coverage statistics for AWS Lambda functions filtered
              by tag.
          title: lambdaFunctionTags
        lastScannedAt:
          allOf:
          - $ref: '#/components/schemas/CoverageDateFilterList'
          - description: Filters Amazon Web Services resources based on whether Amazon
              Inspector has checked them for vulnerabilities within the specified
              time range.
          title: lastScannedAt
        resourceId:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: An array of Amazon Web Services resource IDs to return coverage
              statistics for.
          title: resourceId
        resourceType:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: "An array of Amazon Web Services resource types to return\
              \ coverage statistics for. The values can be <code>AWS_EC2_INSTANCE</code>,\
              \ <code>AWS_LAMBDA_FUNCTION</code> or <code>AWS_ECR_REPOSITORY</code>."
          title: resourceType
        scanStatusCode:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: The scan status code to filter on.
          title: scanStatusCode
        scanStatusReason:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: The scan status reason to filter on.
          title: scanStatusReason
        scanType:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          - description: An array of Amazon Inspector scan types to return coverage
              statistics for.
          title: scanType
      title: ListCoverage_request_filterCriteria
      type: object
    ListCoverage_request:
      properties:
        filterCriteria:
          $ref: '#/components/schemas/ListCoverage_request_filterCriteria'
        maxResults:
          description: The maximum number of results to return in the response.
          maximum: 200
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: "A token to use for paginating results that are returned in\
            \ the response. Set the value of this parameter to null for the first\
            \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
            \ value returned from the previous request to continue listing results\
            \ after the first page."
          maxLength: 1000000
          minLength: 0
          title: nextToken
          type: string
      title: ListCoverage_request
      type: object
    ListCoverageStatistics_request:
      properties:
        filterCriteria:
          $ref: '#/components/schemas/ListCoverage_request_filterCriteria'
        groupBy:
          description: The value to group the results by.
          enum:
          - SCAN_STATUS_CODE
          - SCAN_STATUS_REASON
          - ACCOUNT_ID
          - RESOURCE_TYPE
          - ECR_REPOSITORY_NAME
          title: groupBy
          type: string
        nextToken:
          description: "A token to use for paginating results that are returned in\
            \ the response. Set the value of this parameter to null for the first\
            \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
            \ value returned from the previous request to continue listing results\
            \ after the first page."
          maxLength: 1000000
          minLength: 0
          title: nextToken
          type: string
      title: ListCoverageStatistics_request
      type: object
    ListDelegatedAdminAccounts_request:
      properties:
        maxResults:
          description: The maximum number of results to return in the response.
          maximum: 5
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: "A token to use for paginating results that are returned in\
            \ the response. Set the value of this parameter to null for the first\
            \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
            \ value returned from the previous request to continue listing results\
            \ after the first page."
          maxLength: 1000000
          minLength: 0
          title: nextToken
          type: string
      title: ListDelegatedAdminAccounts_request
      type: object
    ListFilters_request:
      properties:
        action:
          description: The action the filter applies to matched findings.
          enum:
          - NONE
          - SUPPRESS
          title: action
          type: string
        arns:
          description: The Amazon resource number (ARN) of the filter.
          items:
            $ref: '#/components/schemas/FilterArn'
          title: arns
          type: array
        maxResults:
          description: The maximum number of results to return in the response.
          maximum: 100
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: "A token to use for paginating results that are returned in\
            \ the response. Set the value of this parameter to null for the first\
            \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
            \ value returned from the previous request to continue listing results\
            \ after the first page."
          maxLength: 1000000
          minLength: 0
          title: nextToken
          type: string
      title: ListFilters_request
      type: object
    ListFindingAggregations_request_aggregationRequest_accountAggregation:
      allOf:
      - $ref: '#/components/schemas/AccountAggregation'
      - description: An object that contains details about an aggregation request
          based on Amazon Web Services account IDs.
      example:
        findingType: ""
        sortOrder: ""
        sortBy: ""
        resourceType: ""
      title: ListFindingAggregations_request_aggregationRequest_accountAggregation
    ListFindingAggregations_request_aggregationRequest_amiAggregation:
      allOf:
      - $ref: '#/components/schemas/AmiAggregation'
      - description: An object that contains details about an aggregation request
          based on Amazon Machine Images (AMIs).
      example:
        sortOrder: ""
        sortBy: ""
        amis: ""
      title: ListFindingAggregations_request_aggregationRequest_amiAggregation
    ListFindingAggregations_request_aggregationRequest_awsEcrContainerAggregation:
      allOf:
      - $ref: '#/components/schemas/AwsEcrContainerAggregation'
      - description: An object that contains details about an aggregation request
          based on Amazon ECR container images.
      example:
        architectures: ""
        imageShas: ""
        repositories: ""
        sortOrder: ""
        sortBy: ""
        imageTags: ""
        resourceIds: ""
      title: ListFindingAggregations_request_aggregationRequest_awsEcrContainerAggregation
    ListFindingAggregations_request_aggregationRequest_ec2InstanceAggregation:
      allOf:
      - $ref: '#/components/schemas/Ec2InstanceAggregation'
      - description: An object that contains details about an aggregation request
          based on Amazon EC2 instances.
      example:
        operatingSystems: ""
        instanceIds: ""
        sortOrder: ""
        instanceTags: ""
        sortBy: ""
        amis: ""
      title: ListFindingAggregations_request_aggregationRequest_ec2InstanceAggregation
    ListFindingAggregations_request_aggregationRequest_findingTypeAggregation:
      allOf:
      - $ref: '#/components/schemas/FindingTypeAggregation'
      - description: An object that contains details about an aggregation request
          based on finding types.
      example:
        findingType: ""
        sortOrder: ""
        sortBy: ""
        resourceType: ""
      title: ListFindingAggregations_request_aggregationRequest_findingTypeAggregation
    ListFindingAggregations_request_aggregationRequest_imageLayerAggregation:
      allOf:
      - $ref: '#/components/schemas/ImageLayerAggregation'
      - description: An object that contains details about an aggregation request
          based on container image layers.
      example:
        layerHashes: ""
        repositories: ""
        sortOrder: ""
        sortBy: ""
        resourceIds: ""
      title: ListFindingAggregations_request_aggregationRequest_imageLayerAggregation
    ListFindingAggregations_request_aggregationRequest_lambdaFunctionAggregation:
      allOf:
      - $ref: '#/components/schemas/LambdaFunctionAggregation'
      - description: Returns an object with findings aggregated by AWS Lambda function.
      example:
        functionNames: ""
        runtimes: ""
        sortOrder: ""
        functionTags: ""
        sortBy: ""
        resourceIds: ""
      title: ListFindingAggregations_request_aggregationRequest_lambdaFunctionAggregation
    ListFindingAggregations_request_aggregationRequest_lambdaLayerAggregation:
      allOf:
      - $ref: '#/components/schemas/LambdaLayerAggregation'
      - description: Returns an object with findings aggregated by AWS Lambda layer.
      example:
        functionNames: ""
        layerArns: ""
        sortOrder: ""
        sortBy: ""
        resourceIds: ""
      title: ListFindingAggregations_request_aggregationRequest_lambdaLayerAggregation
    ListFindingAggregations_request_aggregationRequest_packageAggregation:
      allOf:
      - $ref: '#/components/schemas/PackageAggregation'
      - description: An object that contains details about an aggregation request
          based on operating system package type.
      example:
        packageNames: ""
        sortOrder: ""
        sortBy: ""
      title: ListFindingAggregations_request_aggregationRequest_packageAggregation
    ListFindingAggregations_request_aggregationRequest_repositoryAggregation:
      allOf:
      - $ref: '#/components/schemas/RepositoryAggregation'
      - description: An object that contains details about an aggregation request
          based on Amazon ECR repositories.
      example:
        repositories: ""
        sortOrder: ""
        sortBy: ""
      title: ListFindingAggregations_request_aggregationRequest_repositoryAggregation
    ListFindingAggregations_request_aggregationRequest_titleAggregation:
      allOf:
      - $ref: '#/components/schemas/TitleAggregation'
      - description: An object that contains details about an aggregation request
          based on finding title.
      example:
        findingType: ""
        vulnerabilityIds: ""
        sortOrder: ""
        sortBy: ""
        titles: ""
        resourceType: ""
      title: ListFindingAggregations_request_aggregationRequest_titleAggregation
    ListFindingAggregations_request_aggregationRequest:
      description: Contains details about an aggregation request.
      properties:
        accountAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_accountAggregation'
        amiAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_amiAggregation'
        awsEcrContainerAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_awsEcrContainerAggregation'
        ec2InstanceAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_ec2InstanceAggregation'
        findingTypeAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_findingTypeAggregation'
        imageLayerAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_imageLayerAggregation'
        lambdaFunctionAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_lambdaFunctionAggregation'
        lambdaLayerAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_lambdaLayerAggregation'
        packageAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_packageAggregation'
        repositoryAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_repositoryAggregation'
        titleAggregation:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest_titleAggregation'
      title: ListFindingAggregations_request_aggregationRequest
      type: object
    ListFindingAggregations_request:
      properties:
        accountIds:
          description: The Amazon Web Services account IDs to retrieve finding aggregation
            data for.
          items:
            $ref: '#/components/schemas/StringFilter'
          maxItems: 10
          minItems: 1
          title: accountIds
          type: array
        aggregationRequest:
          $ref: '#/components/schemas/ListFindingAggregations_request_aggregationRequest'
        aggregationType:
          description: The type of the aggregation request.
          enum:
          - FINDING_TYPE
          - PACKAGE
          - TITLE
          - REPOSITORY
          - AMI
          - AWS_EC2_INSTANCE
          - AWS_ECR_CONTAINER
          - IMAGE_LAYER
          - ACCOUNT
          - AWS_LAMBDA_FUNCTION
          - LAMBDA_LAYER
          title: aggregationType
          type: string
        maxResults:
          description: The maximum number of results to return in the response.
          maximum: 100
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: "A token to use for paginating results that are returned in\
            \ the response. Set the value of this parameter to null for the first\
            \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
            \ value returned from the previous request to continue listing results\
            \ after the first page."
          maxLength: 1000000
          minLength: 0
          title: nextToken
          type: string
      required:
      - aggregationType
      title: ListFindingAggregations_request
      type: object
    ListFindings_request_sortCriteria:
      description: Details about the criteria used to sort finding results.
      properties:
        field:
          allOf:
          - $ref: '#/components/schemas/SortField'
          - description: The finding detail field by which results are sorted.
          title: field
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order by which findings are sorted.
          title: sortOrder
      title: ListFindings_request_sortCriteria
      type: object
    ListFindings_request:
      properties:
        filterCriteria:
          $ref: '#/components/schemas/CreateFilter_request_filterCriteria'
        maxResults:
          description: The maximum number of results to return in the response.
          maximum: 100
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: "A token to use for paginating results that are returned in\
            \ the response. Set the value of this parameter to null for the first\
            \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
            \ value returned from the previous request to continue listing results\
            \ after the first page."
          maxLength: 1000000
          minLength: 0
          title: nextToken
          type: string
        sortCriteria:
          $ref: '#/components/schemas/ListFindings_request_sortCriteria'
      title: ListFindings_request
      type: object
    ListMembers_request:
      properties:
        maxResults:
          description: The maximum number of results to return in the response.
          maximum: 50
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: "A token to use for paginating results that are returned in\
            \ the response. Set the value of this parameter to null for the first\
            \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
            \ value returned from the previous request to continue listing results\
            \ after the first page."
          maxLength: 1000000
          minLength: 0
          title: nextToken
          type: string
        onlyAssociated:
          description: Specifies whether to list only currently associated members
            if <code>True</code> or to list all members within the organization if
            <code>False</code>.
          title: onlyAssociated
          type: boolean
      title: ListMembers_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/MapValue'
          description: The tags to be added to a resource.
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    ListUsageTotals_request:
      properties:
        accountIds:
          description: The Amazon Web Services account IDs to retrieve usage totals
            for.
          items:
            $ref: '#/components/schemas/UsageAccountId'
          maxItems: 7000
          minItems: 1
          title: accountIds
          type: array
        maxResults:
          description: The maximum number of results to return in the response.
          maximum: 500
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: "A token to use for paginating results that are returned in\
            \ the response. Set the value of this parameter to null for the first\
            \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
            \ value returned from the previous request to continue listing results\
            \ after the first page."
          minLength: 1
          title: nextToken
          type: string
      title: ListUsageTotals_request
      type: object
    ResetEncryptionKey_request:
      properties:
        resourceType:
          description: The resource type the key encrypts.
          enum:
          - AWS_EC2_INSTANCE
          - AWS_ECR_CONTAINER_IMAGE
          - AWS_ECR_REPOSITORY
          - AWS_LAMBDA_FUNCTION
          title: resourceType
          type: string
        scanType:
          description: The scan type the key encrypts.
          enum:
          - NETWORK
          - PACKAGE
          - CODE
          title: scanType
          type: string
      required:
      - resourceType
      - scanType
      title: ResetEncryptionKey_request
      type: object
    SearchVulnerabilities_request_filterCriteria:
      description: 'Details on the criteria used to define the filter for a vulnerability
        search. '
      properties:
        vulnerabilityIds:
          allOf:
          - $ref: '#/components/schemas/VulnIdList'
          - description: The IDs for specific vulnerabilities.
          title: vulnerabilityIds
      title: SearchVulnerabilities_request_filterCriteria
      type: object
    SearchVulnerabilities_request:
      properties:
        filterCriteria:
          $ref: '#/components/schemas/SearchVulnerabilities_request_filterCriteria'
        nextToken:
          description: "A token to use for paginating results that are returned in\
            \ the response. Set the value of this parameter to null for the first\
            \ request to a list action. For subsequent calls, use the <code>NextToken</code>\
            \ value returned from the previous request to continue listing results\
            \ after the first page."
          maxLength: 1000000
          minLength: 0
          title: nextToken
          type: string
      required:
      - filterCriteria
      title: SearchVulnerabilities_request
      type: object
    UpdateConfiguration_request_ecrConfiguration:
      description: Details about the ECR automated re-scan duration setting for your
        environment.
      properties:
        rescanDuration:
          allOf:
          - $ref: '#/components/schemas/EcrRescanDuration'
          - description: The ECR automated re-scan duration defines how long an ECR
              image will be actively scanned by Amazon Inspector. When the number
              of days since an image was last pushed exceeds the automated re-scan
              duration the monitoring state of that image becomes <code>inactive</code>
              and all associated findings are scheduled for closure.
          title: rescanDuration
      title: UpdateConfiguration_request_ecrConfiguration
      type: object
    UpdateConfiguration_request:
      properties:
        ecrConfiguration:
          $ref: '#/components/schemas/UpdateConfiguration_request_ecrConfiguration'
      required:
      - ecrConfiguration
      title: UpdateConfiguration_request
      type: object
    UpdateEc2DeepInspectionConfiguration_request:
      properties:
        activateDeepInspection:
          description: "Specify <code>TRUE</code> to activate Amazon Inspector deep\
            \ inspection in your account, or <code>FALSE</code> to deactivate. Member\
            \ accounts in an organization cannot deactivate deep inspection, instead\
            \ the delegated administrator for the organization can deactivate a member\
            \ account using <a href=\"https://docs.aws.amazon.com/inspector/v2/APIReference/API_BatchUpdateMemberEc2DeepInspectionStatus.html\"\
            >BatchUpdateMemberEc2DeepInspectionStatus</a>."
          title: activateDeepInspection
          type: boolean
        packagePaths:
          description: The Amazon Inspector deep inspection custom paths you are adding
            for your account.
          items:
            $ref: '#/components/schemas/Path'
          maxItems: 5
          minItems: 0
          title: packagePaths
          type: array
      title: UpdateEc2DeepInspectionConfiguration_request
      type: object
    UpdateEncryptionKey_request:
      properties:
        kmsKeyId:
          description: A KMS key ID for the encryption key.
          pattern: "^arn:aws(-(us-gov|cn))?:kms:([a-z0-9][-.a-z0-9]{0,62})?:[0-9]{12}?:key/(([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})|(mrk-[0-9a-zA-Z]{32}))$"
          title: kmsKeyId
          type: string
        resourceType:
          description: The resource type for the encryption key.
          enum:
          - AWS_EC2_INSTANCE
          - AWS_ECR_CONTAINER_IMAGE
          - AWS_ECR_REPOSITORY
          - AWS_LAMBDA_FUNCTION
          title: resourceType
          type: string
        scanType:
          description: The scan type for the encryption key.
          enum:
          - NETWORK
          - PACKAGE
          - CODE
          title: scanType
          type: string
      required:
      - kmsKeyId
      - resourceType
      - scanType
      title: UpdateEncryptionKey_request
      type: object
    UpdateFilter_request:
      properties:
        action:
          description: Specifies the action that is to be applied to the findings
            that match the filter.
          enum:
          - NONE
          - SUPPRESS
          title: action
          type: string
        description:
          description: A description of the filter.
          maxLength: 512
          minLength: 1
          title: description
          type: string
        filterArn:
          description: The Amazon Resource Number (ARN) of the filter to update.
          maxLength: 128
          minLength: 1
          title: filterArn
          type: string
        filterCriteria:
          $ref: '#/components/schemas/CreateFilter_request_filterCriteria'
        name:
          description: The name of the filter.
          maxLength: 128
          minLength: 1
          title: name
          type: string
        reason:
          description: The reason the filter was updated.
          maxLength: 512
          minLength: 1
          title: reason
          type: string
      required:
      - filterArn
      title: UpdateFilter_request
      type: object
    UpdateOrgEc2DeepInspectionConfiguration_request:
      properties:
        orgPackagePaths:
          description: The Amazon Inspector deep inspection custom paths you are adding
            for your organization.
          items:
            $ref: '#/components/schemas/Path'
          maxItems: 5
          minItems: 0
          title: orgPackagePaths
          type: array
      required:
      - orgPackagePaths
      title: UpdateOrgEc2DeepInspectionConfiguration_request
      type: object
    UpdateOrganizationConfiguration_request_autoEnable:
      description: Represents which scan types are automatically enabled for new members
        of your Amazon Inspector organization.
      properties:
        ec2:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Represents whether Amazon EC2 scans are automatically enabled
              for new members of your Amazon Inspector organization.
          title: ec2
        ecr:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Represents whether Amazon ECR scans are automatically enabled
              for new members of your Amazon Inspector organization.
          title: ecr
        lambda:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: 'Represents whether AWS Lambda standard scans are automatically
              enabled for new members of your Amazon Inspector organization. '
          title: lambda
        lambdaCode:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Represents whether AWS Lambda code scans are automatically
              enabled for new members of your Amazon Inspector organization. <pre><code>
              &lt;/p&gt; </code></pre>
          title: lambdaCode
      title: UpdateOrganizationConfiguration_request_autoEnable
      type: object
    UpdateOrganizationConfiguration_request:
      properties:
        autoEnable:
          $ref: '#/components/schemas/UpdateOrganizationConfiguration_request_autoEnable'
      required:
      - autoEnable
      title: UpdateOrganizationConfiguration_request
      type: object
    DescribeOrganizationConfigurationResponse_autoEnable:
      allOf:
      - $ref: '#/components/schemas/AutoEnable'
      - description: The scan types are automatically enabled for new members of your
          organization.
      example:
        lambda: ""
        ec2: ""
        ecr: ""
        lambdaCode: ""
      title: DescribeOrganizationConfigurationResponse_autoEnable
    GetConfigurationResponse_ecrConfiguration:
      allOf:
      - $ref: '#/components/schemas/EcrConfigurationState'
      - description: Specifies how the ECR automated re-scan duration is currently
          configured for your environment.
      example:
        rescanDurationState:
          rescanDuration: ""
          status: ""
          updatedAt: ""
      title: GetConfigurationResponse_ecrConfiguration
    GetDelegatedAdminAccountResponse_delegatedAdmin:
      allOf:
      - $ref: '#/components/schemas/DelegatedAdmin'
      - description: The Amazon Web Services account ID of the Amazon Inspector delegated
          administrator.
      example:
        accountId: ""
        relationshipStatus: ""
      title: GetDelegatedAdminAccountResponse_delegatedAdmin
    GetFindingsReportStatusResponse_destination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - description: The destination of the report.
      example:
        bucketName: ""
        kmsKeyArn: ""
        keyPrefix: ""
      title: GetFindingsReportStatusResponse_destination
    GetFindingsReportStatusResponse_filterCriteria:
      allOf:
      - $ref: '#/components/schemas/FilterCriteria'
      - description: The filter criteria associated with the report.
      example:
        portRange: ""
        fixAvailable: ""
        resourceId: ""
        awsAccountId: ""
        componentId: ""
        codeVulnerabilityDetectorName: ""
        ecrImageHash: ""
        vendorSeverity: ""
        vulnerabilitySource: ""
        lambdaFunctionRuntime: ""
        codeVulnerabilityDetectorTags: ""
        title: ""
        ecrImagePushedAt: ""
        ecrImageRepositoryName: ""
        ecrImageRegistry: ""
        firstObservedAt: ""
        resourceTags: ""
        vulnerabilityId: ""
        lambdaFunctionName: ""
        ec2InstanceSubnetId: ""
        updatedAt: ""
        severity: ""
        componentType: ""
        relatedVulnerabilities: ""
        lastObservedAt: ""
        ec2InstanceImageId: ""
        epssScore: ""
        vulnerablePackages: ""
        lambdaFunctionLayers: ""
        inspectorScore: ""
        lambdaFunctionLastModifiedAt: ""
        lambdaFunctionExecutionRoleArn: ""
        findingType: ""
        ecrImageArchitecture: ""
        ec2InstanceVpcId: ""
        ecrImageTags: ""
        findingStatus: ""
        codeVulnerabilityFilePath: ""
        exploitAvailable: ""
        findingArn: ""
        networkProtocol: ""
        resourceType: ""
      title: GetFindingsReportStatusResponse_filterCriteria
    GetMemberResponse_member:
      allOf:
      - $ref: '#/components/schemas/Member'
      - description: Details of the retrieved member account.
      example:
        accountId: ""
        delegatedAdminAccountId: ""
        relationshipStatus: ""
        updatedAt: ""
      title: GetMemberResponse_member
    GetSbomExportResponse_filterCriteria:
      allOf:
      - $ref: '#/components/schemas/ResourceFilterCriteria'
      - description: Contains details about the resource filter criteria used for
          the software bill of materials (SBOM) report.
      example:
        accountId: ""
        ec2InstanceTags: ""
        resourceId: ""
        ecrImageTags: ""
        lambdaFunctionName: ""
        lambdaFunctionTags: ""
        ecrRepositoryName: ""
        resourceType: ""
      title: GetSbomExportResponse_filterCriteria
    UpdateOrganizationConfigurationResponse_autoEnable:
      allOf:
      - $ref: '#/components/schemas/AutoEnable'
      - description: The updated status of scan types automatically enabled for new
          members of your Amazon Inspector organization.
      example:
        lambda: ""
        ec2: ""
        ecr: ""
        lambdaCode: ""
      title: UpdateOrganizationConfigurationResponse_autoEnable
    Account_resourceStatus:
      allOf:
      - $ref: '#/components/schemas/ResourceStatus'
      - description: Details of the status of Amazon Inspector scans by resource type.
      title: Account_resourceStatus
    AccountAggregationResponse_severityCounts:
      allOf:
      - $ref: '#/components/schemas/SeverityCounts'
      - description: The number of findings by severity.
      title: AccountAggregationResponse_severityCounts
    ResourceState_ec2:
      allOf:
      - $ref: '#/components/schemas/State'
      - description: An object detailing the state of Amazon Inspector scanning for
          Amazon EC2 resources.
      title: ResourceState_ec2
    ResourceState_ecr:
      allOf:
      - $ref: '#/components/schemas/State'
      - description: An object detailing the state of Amazon Inspector scanning for
          Amazon ECR resources.
      title: ResourceState_ecr
    AccountState_resourceState:
      allOf:
      - $ref: '#/components/schemas/ResourceState'
      - description: An object detailing which resources Amazon Inspector is enabled
          to scan for the account.
      title: AccountState_resourceState
    AccountState_state:
      allOf:
      - $ref: '#/components/schemas/State'
      - description: An object detailing the status of Amazon Inspector for the account.
      title: AccountState_state
    AmiAggregationResponse_severityCounts:
      allOf:
      - $ref: '#/components/schemas/SeverityCounts'
      - description: An object that contains the count of matched findings per severity.
      title: AmiAggregationResponse_severityCounts
    AwsEcrContainerAggregationResponse_severityCounts:
      allOf:
      - $ref: '#/components/schemas/SeverityCounts'
      - description: The number of finding by severity.
      title: AwsEcrContainerAggregationResponse_severityCounts
    FindingTypeAggregationResponse_severityCounts:
      allOf:
      - $ref: '#/components/schemas/SeverityCounts'
      - description: The value to sort results by.
      title: FindingTypeAggregationResponse_severityCounts
    ImageLayerAggregationResponse_severityCounts:
      allOf:
      - $ref: '#/components/schemas/SeverityCounts'
      - description: An object that represents the count of matched findings per severity.
      title: ImageLayerAggregationResponse_severityCounts
    RepositoryAggregationResponse_severityCounts:
      allOf:
      - $ref: '#/components/schemas/SeverityCounts'
      - description: An object that represent the count of matched findings per severity.
      title: RepositoryAggregationResponse_severityCounts
    AggregationResponse_accountAggregation:
      allOf:
      - $ref: '#/components/schemas/AccountAggregationResponse'
      - description: An object that contains details about an aggregation response
          based on Amazon Web Services account IDs.
      title: AggregationResponse_accountAggregation
    AggregationResponse_amiAggregation:
      allOf:
      - $ref: '#/components/schemas/AmiAggregationResponse'
      - description: An object that contains details about an aggregation response
          based on Amazon Machine Images (AMIs).
      title: AggregationResponse_amiAggregation
    AggregationResponse_awsEcrContainerAggregation:
      allOf:
      - $ref: '#/components/schemas/AwsEcrContainerAggregationResponse'
      - description: An object that contains details about an aggregation response
          based on Amazon ECR container images.
      title: AggregationResponse_awsEcrContainerAggregation
    AggregationResponse_ec2InstanceAggregation:
      allOf:
      - $ref: '#/components/schemas/Ec2InstanceAggregationResponse'
      - description: An object that contains details about an aggregation response
          based on Amazon EC2 instances.
      title: AggregationResponse_ec2InstanceAggregation
    AggregationResponse_findingTypeAggregation:
      allOf:
      - $ref: '#/components/schemas/FindingTypeAggregationResponse'
      - description: An object that contains details about an aggregation response
          based on finding types.
      title: AggregationResponse_findingTypeAggregation
    AggregationResponse_imageLayerAggregation:
      allOf:
      - $ref: '#/components/schemas/ImageLayerAggregationResponse'
      - description: An object that contains details about an aggregation response
          based on container image layers.
      title: AggregationResponse_imageLayerAggregation
    AggregationResponse_lambdaFunctionAggregation:
      allOf:
      - $ref: '#/components/schemas/LambdaFunctionAggregationResponse'
      - description: An aggregation of findings by AWS Lambda function.
      title: AggregationResponse_lambdaFunctionAggregation
    AggregationResponse_lambdaLayerAggregation:
      allOf:
      - $ref: '#/components/schemas/LambdaLayerAggregationResponse'
      - description: An aggregation of findings by AWS Lambda layer.
      title: AggregationResponse_lambdaLayerAggregation
    AggregationResponse_packageAggregation:
      allOf:
      - $ref: '#/components/schemas/PackageAggregationResponse'
      - description: An object that contains details about an aggregation response
          based on operating system package type.
      title: AggregationResponse_packageAggregation
    AggregationResponse_repositoryAggregation:
      allOf:
      - $ref: '#/components/schemas/RepositoryAggregationResponse'
      - description: An object that contains details about an aggregation response
          based on Amazon ECR repositories.
      title: AggregationResponse_repositoryAggregation
    AggregationResponse_titleAggregation:
      allOf:
      - $ref: '#/components/schemas/TitleAggregationResponse'
      - description: An object that contains details about an aggregation response
          based on finding title.
      title: AggregationResponse_titleAggregation
    AwsLambdaFunctionDetails_vpcConfig:
      allOf:
      - $ref: '#/components/schemas/LambdaVpcConfig'
      - description: The AWS Lambda function's networking configuration.
      title: AwsLambdaFunctionDetails_vpcConfig
    CodeVulnerabilityDetails_filePath:
      allOf:
      - $ref: '#/components/schemas/CodeFilePath'
      - description: Contains information on where the code vulnerability is located
          in your code.
      title: CodeVulnerabilityDetails_filePath
    ResourceScanMetadata_ec2:
      allOf:
      - $ref: '#/components/schemas/Ec2Metadata'
      - description: An object that contains metadata details for an Amazon EC2 instance.
      title: ResourceScanMetadata_ec2
    ResourceScanMetadata_ecrImage:
      allOf:
      - $ref: '#/components/schemas/EcrContainerImageMetadata'
      - description: An object that contains details about the container metadata
          for an Amazon ECR image.
      title: ResourceScanMetadata_ecrImage
    ResourceScanMetadata_ecrRepository:
      allOf:
      - $ref: '#/components/schemas/EcrRepositoryMetadata'
      - description: An object that contains details about the repository an Amazon
          ECR image resides in.
      title: ResourceScanMetadata_ecrRepository
    ResourceScanMetadata_lambdaFunction:
      allOf:
      - $ref: '#/components/schemas/LambdaFunctionMetadata'
      - description: An object that contains metadata details for an AWS Lambda function.
      title: ResourceScanMetadata_lambdaFunction
    CoveredResource_resourceMetadata:
      allOf:
      - $ref: '#/components/schemas/ResourceScanMetadata'
      - description: An object that contains details about the metadata.
      title: CoveredResource_resourceMetadata
    CoveredResource_scanStatus:
      allOf:
      - $ref: '#/components/schemas/ScanStatus'
      - description: The status of the scan covering the resource.
      title: CoveredResource_scanStatus
    CreateFilterRequest_filterCriteria:
      allOf:
      - $ref: '#/components/schemas/FilterCriteria'
      - description: Defines the criteria to be used in the filter for querying findings.
      example:
        portRange: ""
        fixAvailable: ""
        resourceId: ""
        awsAccountId: ""
        componentId: ""
        codeVulnerabilityDetectorName: ""
        ecrImageHash: ""
        vendorSeverity: ""
        vulnerabilitySource: ""
        lambdaFunctionRuntime: ""
        codeVulnerabilityDetectorTags: ""
        title: ""
        ecrImagePushedAt: ""
        ecrImageRepositoryName: ""
        ecrImageRegistry: ""
        firstObservedAt: ""
        resourceTags: ""
        vulnerabilityId: ""
        lambdaFunctionName: ""
        ec2InstanceSubnetId: ""
        updatedAt: ""
        severity: ""
        componentType: ""
        relatedVulnerabilities: ""
        lastObservedAt: ""
        ec2InstanceImageId: ""
        epssScore: ""
        vulnerablePackages: ""
        lambdaFunctionLayers: ""
        inspectorScore: ""
        lambdaFunctionLastModifiedAt: ""
        lambdaFunctionExecutionRoleArn: ""
        findingType: ""
        ecrImageArchitecture: ""
        ec2InstanceVpcId: ""
        ecrImageTags: ""
        findingStatus: ""
        codeVulnerabilityFilePath: ""
        exploitAvailable: ""
        findingArn: ""
        networkProtocol: ""
        resourceType: ""
      title: CreateFilterRequest_filterCriteria
    CreateFindingsReportRequest_filterCriteria:
      allOf:
      - $ref: '#/components/schemas/FilterCriteria'
      - description: The filter criteria to apply to the results of the finding report.
      example:
        portRange: ""
        fixAvailable: ""
        resourceId: ""
        awsAccountId: ""
        componentId: ""
        codeVulnerabilityDetectorName: ""
        ecrImageHash: ""
        vendorSeverity: ""
        vulnerabilitySource: ""
        lambdaFunctionRuntime: ""
        codeVulnerabilityDetectorTags: ""
        title: ""
        ecrImagePushedAt: ""
        ecrImageRepositoryName: ""
        ecrImageRegistry: ""
        firstObservedAt: ""
        resourceTags: ""
        vulnerabilityId: ""
        lambdaFunctionName: ""
        ec2InstanceSubnetId: ""
        updatedAt: ""
        severity: ""
        componentType: ""
        relatedVulnerabilities: ""
        lastObservedAt: ""
        ec2InstanceImageId: ""
        epssScore: ""
        vulnerablePackages: ""
        lambdaFunctionLayers: ""
        inspectorScore: ""
        lambdaFunctionLastModifiedAt: ""
        lambdaFunctionExecutionRoleArn: ""
        findingType: ""
        ecrImageArchitecture: ""
        ec2InstanceVpcId: ""
        ecrImageTags: ""
        findingStatus: ""
        codeVulnerabilityFilePath: ""
        exploitAvailable: ""
        findingArn: ""
        networkProtocol: ""
        resourceType: ""
      title: CreateFindingsReportRequest_filterCriteria
    CreateFindingsReportRequest_s3Destination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - description: The Amazon S3 export destination for the report.
      example:
        bucketName: ""
        kmsKeyArn: ""
        keyPrefix: ""
      title: CreateFindingsReportRequest_s3Destination
    CreateSbomExportRequest_resourceFilterCriteria:
      allOf:
      - $ref: '#/components/schemas/ResourceFilterCriteria'
      - description: The resource filter criteria for the software bill of materials
          (SBOM) report.
      example:
        accountId: ""
        ec2InstanceTags: ""
        resourceId: ""
        ecrImageTags: ""
        lambdaFunctionName: ""
        lambdaFunctionTags: ""
        ecrRepositoryName: ""
        resourceType: ""
      title: CreateSbomExportRequest_resourceFilterCriteria
    EcrConfigurationState_rescanDurationState:
      allOf:
      - $ref: '#/components/schemas/EcrRescanDurationState'
      - description: An object that contains details about the state of the ECR automated
          re-scan setting.
      example:
        rescanDuration: ""
        status: ""
        updatedAt: ""
      title: EcrConfigurationState_rescanDurationState
    FailedAccount_resourceStatus:
      allOf:
      - $ref: '#/components/schemas/ResourceStatus'
      - description: An object detailing which resources Amazon Inspector is enabled
          to scan for the account.
      title: FailedAccount_resourceStatus
    Filter_criteria:
      allOf:
      - $ref: '#/components/schemas/FilterCriteria'
      - description: Details on the filter criteria associated with this filter.
      title: Filter_criteria
    InspectorScoreDetails_adjustedCvss:
      allOf:
      - $ref: '#/components/schemas/CvssScoreDetails'
      - description: An object that contains details about the CVSS score given to
          a finding.
      title: InspectorScoreDetails_adjustedCvss
    NetworkReachabilityDetails_networkPath:
      allOf:
      - $ref: '#/components/schemas/NetworkPath'
      - description: An object that contains details about a network path associated
          with a finding.
      title: NetworkReachabilityDetails_networkPath
    NetworkReachabilityDetails_openPortRange:
      allOf:
      - $ref: '#/components/schemas/PortRange'
      - description: An object that contains details about the open port range associated
          with a finding.
      title: NetworkReachabilityDetails_openPortRange
    Remediation_recommendation:
      allOf:
      - $ref: '#/components/schemas/Recommendation'
      - description: An object that contains information about the recommended course
          of action to remediate the finding.
      title: Remediation_recommendation
    Finding_codeVulnerabilityDetails:
      allOf:
      - $ref: '#/components/schemas/CodeVulnerabilityDetails'
      - description: Details about the code vulnerability identified in a Lambda function
          used to filter findings.
      title: Finding_codeVulnerabilityDetails
    Finding_epss:
      allOf:
      - $ref: '#/components/schemas/EpssDetails'
      - description: The finding's EPSS score.
      title: Finding_epss
    Finding_exploitabilityDetails:
      allOf:
      - $ref: '#/components/schemas/ExploitabilityDetails'
      - description: The details of an exploit available for a finding discovered
          in your environment.
      title: Finding_exploitabilityDetails
    Finding_inspectorScoreDetails:
      allOf:
      - $ref: '#/components/schemas/InspectorScoreDetails'
      - description: An object that contains details of the Amazon Inspector score.
      title: Finding_inspectorScoreDetails
    Finding_networkReachabilityDetails:
      allOf:
      - $ref: '#/components/schemas/NetworkReachabilityDetails'
      - description: An object that contains the details of a network reachability
          finding.
      title: Finding_networkReachabilityDetails
    Finding_packageVulnerabilityDetails:
      allOf:
      - $ref: '#/components/schemas/PackageVulnerabilityDetails'
      - description: An object that contains the details of a package vulnerability
          finding.
      title: Finding_packageVulnerabilityDetails
    Finding_remediation:
      allOf:
      - $ref: '#/components/schemas/Remediation'
      - description: An object that contains the details about how to remediate a
          finding.
      title: Finding_remediation
    ListCoverageRequest_filterCriteria:
      allOf:
      - $ref: '#/components/schemas/CoverageFilterCriteria'
      - description: An object that contains details on the filters to apply to the
          coverage data for your environment.
      example:
        lastScannedAt: ""
        ec2InstanceTags: ""
        resourceId: ""
        lambdaFunctionTags: ""
        lambdaFunctionRuntime: ""
        scanStatusCode: ""
        ecrRepositoryName: ""
        accountId: ""
        scanStatusReason: ""
        ecrImageTags: ""
        lambdaFunctionName: ""
        scanType: ""
        resourceType: ""
      title: ListCoverageRequest_filterCriteria
    ListFindingAggregationsRequest_aggregationRequest:
      allOf:
      - $ref: '#/components/schemas/AggregationRequest'
      - description: Details of the aggregation request that is used to filter your
          aggregation results.
      example:
        findingTypeAggregation:
          findingType: ""
          sortOrder: ""
          sortBy: ""
          resourceType: ""
        imageLayerAggregation:
          layerHashes: ""
          repositories: ""
          sortOrder: ""
          sortBy: ""
          resourceIds: ""
        repositoryAggregation:
          repositories: ""
          sortOrder: ""
          sortBy: ""
        amiAggregation:
          sortOrder: ""
          sortBy: ""
          amis: ""
        lambdaLayerAggregation:
          functionNames: ""
          layerArns: ""
          sortOrder: ""
          sortBy: ""
          resourceIds: ""
        accountAggregation:
          findingType: ""
          sortOrder: ""
          sortBy: ""
          resourceType: ""
        packageAggregation:
          packageNames: ""
          sortOrder: ""
          sortBy: ""
        ec2InstanceAggregation:
          operatingSystems: ""
          instanceIds: ""
          sortOrder: ""
          instanceTags: ""
          sortBy: ""
          amis: ""
        awsEcrContainerAggregation:
          architectures: ""
          imageShas: ""
          repositories: ""
          sortOrder: ""
          sortBy: ""
          imageTags: ""
          resourceIds: ""
        lambdaFunctionAggregation:
          functionNames: ""
          runtimes: ""
          sortOrder: ""
          functionTags: ""
          sortBy: ""
          resourceIds: ""
        titleAggregation:
          findingType: ""
          vulnerabilityIds: ""
          sortOrder: ""
          sortBy: ""
          titles: ""
          resourceType: ""
      title: ListFindingAggregationsRequest_aggregationRequest
    ListFindingsRequest_filterCriteria:
      allOf:
      - $ref: '#/components/schemas/FilterCriteria'
      - description: Details on the filters to apply to your finding results.
      example:
        portRange: ""
        fixAvailable: ""
        resourceId: ""
        awsAccountId: ""
        componentId: ""
        codeVulnerabilityDetectorName: ""
        ecrImageHash: ""
        vendorSeverity: ""
        vulnerabilitySource: ""
        lambdaFunctionRuntime: ""
        codeVulnerabilityDetectorTags: ""
        title: ""
        ecrImagePushedAt: ""
        ecrImageRepositoryName: ""
        ecrImageRegistry: ""
        firstObservedAt: ""
        resourceTags: ""
        vulnerabilityId: ""
        lambdaFunctionName: ""
        ec2InstanceSubnetId: ""
        updatedAt: ""
        severity: ""
        componentType: ""
        relatedVulnerabilities: ""
        lastObservedAt: ""
        ec2InstanceImageId: ""
        epssScore: ""
        vulnerablePackages: ""
        lambdaFunctionLayers: ""
        inspectorScore: ""
        lambdaFunctionLastModifiedAt: ""
        lambdaFunctionExecutionRoleArn: ""
        findingType: ""
        ecrImageArchitecture: ""
        ec2InstanceVpcId: ""
        ecrImageTags: ""
        findingStatus: ""
        codeVulnerabilityFilePath: ""
        exploitAvailable: ""
        findingArn: ""
        networkProtocol: ""
        resourceType: ""
      title: ListFindingsRequest_filterCriteria
    ListFindingsRequest_sortCriteria:
      allOf:
      - $ref: '#/components/schemas/SortCriteria'
      - description: Details on the sort criteria to apply to your finding results.
      example:
        field: ""
        sortOrder: ""
      title: ListFindingsRequest_sortCriteria
    PackageFilter_architecture:
      allOf:
      - $ref: '#/components/schemas/StringFilter'
      - description: An object that contains details on the package architecture type
          to filter on.
      title: PackageFilter_architecture
    PackageFilter_epoch:
      allOf:
      - $ref: '#/components/schemas/NumberFilter'
      - description: An object that contains details on the package epoch to filter
          on.
      title: PackageFilter_epoch
    PackageFilter_name:
      allOf:
      - $ref: '#/components/schemas/StringFilter'
      - description: An object that contains details on the name of the package to
          filter on.
      title: PackageFilter_name
    PackageFilter_release:
      allOf:
      - $ref: '#/components/schemas/StringFilter'
      - description: An object that contains details on the package release to filter
          on.
      title: PackageFilter_release
    PackageFilter_sourceLayerHash:
      allOf:
      - $ref: '#/components/schemas/StringFilter'
      - description: An object that contains details on the source layer hash to filter
          on.
      title: PackageFilter_sourceLayerHash
    PackageFilter_version:
      allOf:
      - $ref: '#/components/schemas/StringFilter'
      - description: The package version to filter on.
      title: PackageFilter_version
    ResourceDetails_awsEc2Instance:
      allOf:
      - $ref: '#/components/schemas/AwsEc2InstanceDetails'
      - description: An object that contains details about the Amazon EC2 instance
          involved in the finding.
      title: ResourceDetails_awsEc2Instance
    ResourceDetails_awsEcrContainerImage:
      allOf:
      - $ref: '#/components/schemas/AwsEcrContainerImageDetails'
      - description: An object that contains details about the Amazon ECR container
          image involved in the finding.
      title: ResourceDetails_awsEcrContainerImage
    ResourceDetails_awsLambdaFunction:
      allOf:
      - $ref: '#/components/schemas/AwsLambdaFunctionDetails'
      - description: A summary of the information about an AWS Lambda function affected
          by a finding.
      title: ResourceDetails_awsLambdaFunction
    Resource_details:
      allOf:
      - $ref: '#/components/schemas/ResourceDetails'
      - description: An object that contains details about the resource involved in
          a finding.
      title: Resource_details
    SearchVulnerabilitiesRequest_filterCriteria:
      allOf:
      - $ref: '#/components/schemas/SearchVulnerabilitiesFilterCriteria'
      - description: The criteria used to filter the results of a vulnerability search.
      example:
        vulnerabilityIds: ""
      title: SearchVulnerabilitiesRequest_filterCriteria
    UpdateConfigurationRequest_ecrConfiguration:
      allOf:
      - $ref: '#/components/schemas/EcrConfiguration'
      - description: Specifies how the ECR automated re-scan will be updated for your
          environment.
      example:
        rescanDuration: ""
      title: UpdateConfigurationRequest_ecrConfiguration
    UpdateFilterRequest_filterCriteria:
      allOf:
      - $ref: '#/components/schemas/FilterCriteria'
      - description: Defines the criteria to be update in the filter.
      example:
        portRange: ""
        fixAvailable: ""
        resourceId: ""
        awsAccountId: ""
        componentId: ""
        codeVulnerabilityDetectorName: ""
        ecrImageHash: ""
        vendorSeverity: ""
        vulnerabilitySource: ""
        lambdaFunctionRuntime: ""
        codeVulnerabilityDetectorTags: ""
        title: ""
        ecrImagePushedAt: ""
        ecrImageRepositoryName: ""
        ecrImageRegistry: ""
        firstObservedAt: ""
        resourceTags: ""
        vulnerabilityId: ""
        lambdaFunctionName: ""
        ec2InstanceSubnetId: ""
        updatedAt: ""
        severity: ""
        componentType: ""
        relatedVulnerabilities: ""
        lastObservedAt: ""
        ec2InstanceImageId: ""
        epssScore: ""
        vulnerablePackages: ""
        lambdaFunctionLayers: ""
        inspectorScore: ""
        lambdaFunctionLastModifiedAt: ""
        lambdaFunctionExecutionRoleArn: ""
        findingType: ""
        ecrImageArchitecture: ""
        ec2InstanceVpcId: ""
        ecrImageTags: ""
        findingStatus: ""
        codeVulnerabilityFilePath: ""
        exploitAvailable: ""
        findingArn: ""
        networkProtocol: ""
        resourceType: ""
      title: UpdateFilterRequest_filterCriteria
    UpdateOrganizationConfigurationRequest_autoEnable:
      allOf:
      - $ref: '#/components/schemas/AutoEnable'
      - description: Defines which scan types are enabled automatically for new members
          of your Amazon Inspector organization.
      example:
        lambda: ""
        ec2: ""
        ecr: ""
        lambdaCode: ""
      title: UpdateOrganizationConfigurationRequest_autoEnable
    Vulnerability_atigData:
      allOf:
      - $ref: '#/components/schemas/AtigData'
      - description: An object that contains information about the Amazon Web Services
          Threat Intel Group (ATIG) details for the vulnerability.
      title: Vulnerability_atigData
    Vulnerability_cisaData:
      allOf:
      - $ref: '#/components/schemas/CisaData'
      - description: An object that contains the Cybersecurity and Infrastructure
          Security Agency (CISA) details for the vulnerability.
      title: Vulnerability_cisaData
    Vulnerability_cvss2:
      allOf:
      - $ref: '#/components/schemas/Cvss2'
      - description: An object that contains the Common Vulnerability Scoring System
          (CVSS) Version 2 details for the vulnerability.
      title: Vulnerability_cvss2
    Vulnerability_cvss3:
      allOf:
      - $ref: '#/components/schemas/Cvss3'
      - description: An object that contains the Common Vulnerability Scoring System
          (CVSS) Version 3 details for the vulnerability.
      title: Vulnerability_cvss3
    Vulnerability_epss:
      allOf:
      - $ref: '#/components/schemas/Epss'
      - description: An object that contains the Exploit Prediction Scoring System
          (EPSS) score for a vulnerability.
      title: Vulnerability_epss
    Vulnerability_exploitObserved:
      allOf:
      - $ref: '#/components/schemas/ExploitObserved'
      - description: An object that contains details on when the exploit was observed.
      title: Vulnerability_exploitObserved
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
