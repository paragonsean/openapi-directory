# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_organization_configuration_request_auto_enable import UpdateOrganizationConfigurationRequestAutoEnable
from openapi_server import util


class UpdateOrganizationConfigurationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_enable: UpdateOrganizationConfigurationRequestAutoEnable=None):
        """UpdateOrganizationConfigurationRequest - a model defined in OpenAPI

        :param auto_enable: The auto_enable of this UpdateOrganizationConfigurationRequest.
        """
        self.openapi_types = {
            'auto_enable': UpdateOrganizationConfigurationRequestAutoEnable
        }

        self.attribute_map = {
            'auto_enable': 'autoEnable'
        }

        self._auto_enable = auto_enable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateOrganizationConfigurationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateOrganizationConfiguration_request of this UpdateOrganizationConfigurationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_enable(self):
        """Gets the auto_enable of this UpdateOrganizationConfigurationRequest.


        :return: The auto_enable of this UpdateOrganizationConfigurationRequest.
        :rtype: UpdateOrganizationConfigurationRequestAutoEnable
        """
        return self._auto_enable

    @auto_enable.setter
    def auto_enable(self, auto_enable):
        """Sets the auto_enable of this UpdateOrganizationConfigurationRequest.


        :param auto_enable: The auto_enable of this UpdateOrganizationConfigurationRequest.
        :type auto_enable: UpdateOrganizationConfigurationRequestAutoEnable
        """
        if auto_enable is None:
            raise ValueError("Invalid value for `auto_enable`, must not be `None`")

        self._auto_enable = auto_enable
