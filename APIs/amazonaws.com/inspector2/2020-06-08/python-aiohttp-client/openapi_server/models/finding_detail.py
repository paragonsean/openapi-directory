# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cisa_data import CisaData
from openapi_server.models.exploit_observed import ExploitObserved
from openapi_server import util


class FindingDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cisa_data: CisaData=None, cwes: List=None, epss_score: float=None, evidences: List=None, exploit_observed: ExploitObserved=None, finding_arn: str=None, reference_urls: List=None, risk_score: int=None, tools: List=None, ttps: List=None):
        """FindingDetail - a model defined in OpenAPI

        :param cisa_data: The cisa_data of this FindingDetail.
        :param cwes: The cwes of this FindingDetail.
        :param epss_score: The epss_score of this FindingDetail.
        :param evidences: The evidences of this FindingDetail.
        :param exploit_observed: The exploit_observed of this FindingDetail.
        :param finding_arn: The finding_arn of this FindingDetail.
        :param reference_urls: The reference_urls of this FindingDetail.
        :param risk_score: The risk_score of this FindingDetail.
        :param tools: The tools of this FindingDetail.
        :param ttps: The ttps of this FindingDetail.
        """
        self.openapi_types = {
            'cisa_data': CisaData,
            'cwes': List,
            'epss_score': float,
            'evidences': List,
            'exploit_observed': ExploitObserved,
            'finding_arn': str,
            'reference_urls': List,
            'risk_score': int,
            'tools': List,
            'ttps': List
        }

        self.attribute_map = {
            'cisa_data': 'cisaData',
            'cwes': 'cwes',
            'epss_score': 'epssScore',
            'evidences': 'evidences',
            'exploit_observed': 'exploitObserved',
            'finding_arn': 'findingArn',
            'reference_urls': 'referenceUrls',
            'risk_score': 'riskScore',
            'tools': 'tools',
            'ttps': 'ttps'
        }

        self._cisa_data = cisa_data
        self._cwes = cwes
        self._epss_score = epss_score
        self._evidences = evidences
        self._exploit_observed = exploit_observed
        self._finding_arn = finding_arn
        self._reference_urls = reference_urls
        self._risk_score = risk_score
        self._tools = tools
        self._ttps = ttps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindingDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FindingDetail of this FindingDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cisa_data(self):
        """Gets the cisa_data of this FindingDetail.


        :return: The cisa_data of this FindingDetail.
        :rtype: CisaData
        """
        return self._cisa_data

    @cisa_data.setter
    def cisa_data(self, cisa_data):
        """Sets the cisa_data of this FindingDetail.


        :param cisa_data: The cisa_data of this FindingDetail.
        :type cisa_data: CisaData
        """

        self._cisa_data = cisa_data

    @property
    def cwes(self):
        """Gets the cwes of this FindingDetail.


        :return: The cwes of this FindingDetail.
        :rtype: List
        """
        return self._cwes

    @cwes.setter
    def cwes(self, cwes):
        """Sets the cwes of this FindingDetail.


        :param cwes: The cwes of this FindingDetail.
        :type cwes: List
        """

        self._cwes = cwes

    @property
    def epss_score(self):
        """Gets the epss_score of this FindingDetail.


        :return: The epss_score of this FindingDetail.
        :rtype: float
        """
        return self._epss_score

    @epss_score.setter
    def epss_score(self, epss_score):
        """Sets the epss_score of this FindingDetail.


        :param epss_score: The epss_score of this FindingDetail.
        :type epss_score: float
        """

        self._epss_score = epss_score

    @property
    def evidences(self):
        """Gets the evidences of this FindingDetail.


        :return: The evidences of this FindingDetail.
        :rtype: List
        """
        return self._evidences

    @evidences.setter
    def evidences(self, evidences):
        """Sets the evidences of this FindingDetail.


        :param evidences: The evidences of this FindingDetail.
        :type evidences: List
        """

        self._evidences = evidences

    @property
    def exploit_observed(self):
        """Gets the exploit_observed of this FindingDetail.


        :return: The exploit_observed of this FindingDetail.
        :rtype: ExploitObserved
        """
        return self._exploit_observed

    @exploit_observed.setter
    def exploit_observed(self, exploit_observed):
        """Sets the exploit_observed of this FindingDetail.


        :param exploit_observed: The exploit_observed of this FindingDetail.
        :type exploit_observed: ExploitObserved
        """

        self._exploit_observed = exploit_observed

    @property
    def finding_arn(self):
        """Gets the finding_arn of this FindingDetail.


        :return: The finding_arn of this FindingDetail.
        :rtype: str
        """
        return self._finding_arn

    @finding_arn.setter
    def finding_arn(self, finding_arn):
        """Sets the finding_arn of this FindingDetail.


        :param finding_arn: The finding_arn of this FindingDetail.
        :type finding_arn: str
        """

        self._finding_arn = finding_arn

    @property
    def reference_urls(self):
        """Gets the reference_urls of this FindingDetail.


        :return: The reference_urls of this FindingDetail.
        :rtype: List
        """
        return self._reference_urls

    @reference_urls.setter
    def reference_urls(self, reference_urls):
        """Sets the reference_urls of this FindingDetail.


        :param reference_urls: The reference_urls of this FindingDetail.
        :type reference_urls: List
        """

        self._reference_urls = reference_urls

    @property
    def risk_score(self):
        """Gets the risk_score of this FindingDetail.


        :return: The risk_score of this FindingDetail.
        :rtype: int
        """
        return self._risk_score

    @risk_score.setter
    def risk_score(self, risk_score):
        """Sets the risk_score of this FindingDetail.


        :param risk_score: The risk_score of this FindingDetail.
        :type risk_score: int
        """

        self._risk_score = risk_score

    @property
    def tools(self):
        """Gets the tools of this FindingDetail.


        :return: The tools of this FindingDetail.
        :rtype: List
        """
        return self._tools

    @tools.setter
    def tools(self, tools):
        """Sets the tools of this FindingDetail.


        :param tools: The tools of this FindingDetail.
        :type tools: List
        """

        self._tools = tools

    @property
    def ttps(self):
        """Gets the ttps of this FindingDetail.


        :return: The ttps of this FindingDetail.
        :rtype: List
        """
        return self._ttps

    @ttps.setter
    def ttps(self, ttps):
        """Sets the ttps of this FindingDetail.


        :param ttps: The ttps of this FindingDetail.
        :type ttps: List
        """

        self._ttps = ttps
