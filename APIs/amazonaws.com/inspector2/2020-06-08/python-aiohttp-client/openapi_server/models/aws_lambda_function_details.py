# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aws_lambda_function_details_vpc_config import AwsLambdaFunctionDetailsVpcConfig
from openapi_server.models.package_type import PackageType
from openapi_server.models.runtime import Runtime
from openapi_server import util


class AwsLambdaFunctionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, architectures: List=None, code_sha256: str=None, execution_role_arn: str=None, function_name: str=None, last_modified_at: datetime=None, layers: List=None, package_type: PackageType=None, runtime: Runtime=None, version: str=None, vpc_config: AwsLambdaFunctionDetailsVpcConfig=None):
        """AwsLambdaFunctionDetails - a model defined in OpenAPI

        :param architectures: The architectures of this AwsLambdaFunctionDetails.
        :param code_sha256: The code_sha256 of this AwsLambdaFunctionDetails.
        :param execution_role_arn: The execution_role_arn of this AwsLambdaFunctionDetails.
        :param function_name: The function_name of this AwsLambdaFunctionDetails.
        :param last_modified_at: The last_modified_at of this AwsLambdaFunctionDetails.
        :param layers: The layers of this AwsLambdaFunctionDetails.
        :param package_type: The package_type of this AwsLambdaFunctionDetails.
        :param runtime: The runtime of this AwsLambdaFunctionDetails.
        :param version: The version of this AwsLambdaFunctionDetails.
        :param vpc_config: The vpc_config of this AwsLambdaFunctionDetails.
        """
        self.openapi_types = {
            'architectures': List,
            'code_sha256': str,
            'execution_role_arn': str,
            'function_name': str,
            'last_modified_at': datetime,
            'layers': List,
            'package_type': PackageType,
            'runtime': Runtime,
            'version': str,
            'vpc_config': AwsLambdaFunctionDetailsVpcConfig
        }

        self.attribute_map = {
            'architectures': 'architectures',
            'code_sha256': 'codeSha256',
            'execution_role_arn': 'executionRoleArn',
            'function_name': 'functionName',
            'last_modified_at': 'lastModifiedAt',
            'layers': 'layers',
            'package_type': 'packageType',
            'runtime': 'runtime',
            'version': 'version',
            'vpc_config': 'vpcConfig'
        }

        self._architectures = architectures
        self._code_sha256 = code_sha256
        self._execution_role_arn = execution_role_arn
        self._function_name = function_name
        self._last_modified_at = last_modified_at
        self._layers = layers
        self._package_type = package_type
        self._runtime = runtime
        self._version = version
        self._vpc_config = vpc_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AwsLambdaFunctionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AwsLambdaFunctionDetails of this AwsLambdaFunctionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def architectures(self):
        """Gets the architectures of this AwsLambdaFunctionDetails.


        :return: The architectures of this AwsLambdaFunctionDetails.
        :rtype: List
        """
        return self._architectures

    @architectures.setter
    def architectures(self, architectures):
        """Sets the architectures of this AwsLambdaFunctionDetails.


        :param architectures: The architectures of this AwsLambdaFunctionDetails.
        :type architectures: List
        """

        self._architectures = architectures

    @property
    def code_sha256(self):
        """Gets the code_sha256 of this AwsLambdaFunctionDetails.


        :return: The code_sha256 of this AwsLambdaFunctionDetails.
        :rtype: str
        """
        return self._code_sha256

    @code_sha256.setter
    def code_sha256(self, code_sha256):
        """Sets the code_sha256 of this AwsLambdaFunctionDetails.


        :param code_sha256: The code_sha256 of this AwsLambdaFunctionDetails.
        :type code_sha256: str
        """
        if code_sha256 is None:
            raise ValueError("Invalid value for `code_sha256`, must not be `None`")

        self._code_sha256 = code_sha256

    @property
    def execution_role_arn(self):
        """Gets the execution_role_arn of this AwsLambdaFunctionDetails.


        :return: The execution_role_arn of this AwsLambdaFunctionDetails.
        :rtype: str
        """
        return self._execution_role_arn

    @execution_role_arn.setter
    def execution_role_arn(self, execution_role_arn):
        """Sets the execution_role_arn of this AwsLambdaFunctionDetails.


        :param execution_role_arn: The execution_role_arn of this AwsLambdaFunctionDetails.
        :type execution_role_arn: str
        """
        if execution_role_arn is None:
            raise ValueError("Invalid value for `execution_role_arn`, must not be `None`")

        self._execution_role_arn = execution_role_arn

    @property
    def function_name(self):
        """Gets the function_name of this AwsLambdaFunctionDetails.


        :return: The function_name of this AwsLambdaFunctionDetails.
        :rtype: str
        """
        return self._function_name

    @function_name.setter
    def function_name(self, function_name):
        """Sets the function_name of this AwsLambdaFunctionDetails.


        :param function_name: The function_name of this AwsLambdaFunctionDetails.
        :type function_name: str
        """
        if function_name is None:
            raise ValueError("Invalid value for `function_name`, must not be `None`")

        self._function_name = function_name

    @property
    def last_modified_at(self):
        """Gets the last_modified_at of this AwsLambdaFunctionDetails.


        :return: The last_modified_at of this AwsLambdaFunctionDetails.
        :rtype: datetime
        """
        return self._last_modified_at

    @last_modified_at.setter
    def last_modified_at(self, last_modified_at):
        """Sets the last_modified_at of this AwsLambdaFunctionDetails.


        :param last_modified_at: The last_modified_at of this AwsLambdaFunctionDetails.
        :type last_modified_at: datetime
        """

        self._last_modified_at = last_modified_at

    @property
    def layers(self):
        """Gets the layers of this AwsLambdaFunctionDetails.


        :return: The layers of this AwsLambdaFunctionDetails.
        :rtype: List
        """
        return self._layers

    @layers.setter
    def layers(self, layers):
        """Sets the layers of this AwsLambdaFunctionDetails.


        :param layers: The layers of this AwsLambdaFunctionDetails.
        :type layers: List
        """

        self._layers = layers

    @property
    def package_type(self):
        """Gets the package_type of this AwsLambdaFunctionDetails.


        :return: The package_type of this AwsLambdaFunctionDetails.
        :rtype: PackageType
        """
        return self._package_type

    @package_type.setter
    def package_type(self, package_type):
        """Sets the package_type of this AwsLambdaFunctionDetails.


        :param package_type: The package_type of this AwsLambdaFunctionDetails.
        :type package_type: PackageType
        """

        self._package_type = package_type

    @property
    def runtime(self):
        """Gets the runtime of this AwsLambdaFunctionDetails.


        :return: The runtime of this AwsLambdaFunctionDetails.
        :rtype: Runtime
        """
        return self._runtime

    @runtime.setter
    def runtime(self, runtime):
        """Sets the runtime of this AwsLambdaFunctionDetails.


        :param runtime: The runtime of this AwsLambdaFunctionDetails.
        :type runtime: Runtime
        """
        if runtime is None:
            raise ValueError("Invalid value for `runtime`, must not be `None`")

        self._runtime = runtime

    @property
    def version(self):
        """Gets the version of this AwsLambdaFunctionDetails.


        :return: The version of this AwsLambdaFunctionDetails.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this AwsLambdaFunctionDetails.


        :param version: The version of this AwsLambdaFunctionDetails.
        :type version: str
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version

    @property
    def vpc_config(self):
        """Gets the vpc_config of this AwsLambdaFunctionDetails.


        :return: The vpc_config of this AwsLambdaFunctionDetails.
        :rtype: AwsLambdaFunctionDetailsVpcConfig
        """
        return self._vpc_config

    @vpc_config.setter
    def vpc_config(self, vpc_config):
        """Sets the vpc_config of this AwsLambdaFunctionDetails.


        :param vpc_config: The vpc_config of this AwsLambdaFunctionDetails.
        :type vpc_config: AwsLambdaFunctionDetailsVpcConfig
        """

        self._vpc_config = vpc_config
