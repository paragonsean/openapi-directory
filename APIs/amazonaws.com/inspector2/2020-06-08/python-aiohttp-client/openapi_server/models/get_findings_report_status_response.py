# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.external_report_status import ExternalReportStatus
from openapi_server.models.get_findings_report_status_response_destination import GetFindingsReportStatusResponseDestination
from openapi_server.models.get_findings_report_status_response_filter_criteria import GetFindingsReportStatusResponseFilterCriteria
from openapi_server.models.reporting_error_code import ReportingErrorCode
from openapi_server import util


class GetFindingsReportStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination: GetFindingsReportStatusResponseDestination=None, error_code: ReportingErrorCode=None, error_message: str=None, filter_criteria: GetFindingsReportStatusResponseFilterCriteria=None, report_id: str=None, status: ExternalReportStatus=None):
        """GetFindingsReportStatusResponse - a model defined in OpenAPI

        :param destination: The destination of this GetFindingsReportStatusResponse.
        :param error_code: The error_code of this GetFindingsReportStatusResponse.
        :param error_message: The error_message of this GetFindingsReportStatusResponse.
        :param filter_criteria: The filter_criteria of this GetFindingsReportStatusResponse.
        :param report_id: The report_id of this GetFindingsReportStatusResponse.
        :param status: The status of this GetFindingsReportStatusResponse.
        """
        self.openapi_types = {
            'destination': GetFindingsReportStatusResponseDestination,
            'error_code': ReportingErrorCode,
            'error_message': str,
            'filter_criteria': GetFindingsReportStatusResponseFilterCriteria,
            'report_id': str,
            'status': ExternalReportStatus
        }

        self.attribute_map = {
            'destination': 'destination',
            'error_code': 'errorCode',
            'error_message': 'errorMessage',
            'filter_criteria': 'filterCriteria',
            'report_id': 'reportId',
            'status': 'status'
        }

        self._destination = destination
        self._error_code = error_code
        self._error_message = error_message
        self._filter_criteria = filter_criteria
        self._report_id = report_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetFindingsReportStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetFindingsReportStatusResponse of this GetFindingsReportStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self):
        """Gets the destination of this GetFindingsReportStatusResponse.


        :return: The destination of this GetFindingsReportStatusResponse.
        :rtype: GetFindingsReportStatusResponseDestination
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this GetFindingsReportStatusResponse.


        :param destination: The destination of this GetFindingsReportStatusResponse.
        :type destination: GetFindingsReportStatusResponseDestination
        """

        self._destination = destination

    @property
    def error_code(self):
        """Gets the error_code of this GetFindingsReportStatusResponse.


        :return: The error_code of this GetFindingsReportStatusResponse.
        :rtype: ReportingErrorCode
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this GetFindingsReportStatusResponse.


        :param error_code: The error_code of this GetFindingsReportStatusResponse.
        :type error_code: ReportingErrorCode
        """

        self._error_code = error_code

    @property
    def error_message(self):
        """Gets the error_message of this GetFindingsReportStatusResponse.


        :return: The error_message of this GetFindingsReportStatusResponse.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this GetFindingsReportStatusResponse.


        :param error_message: The error_message of this GetFindingsReportStatusResponse.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def filter_criteria(self):
        """Gets the filter_criteria of this GetFindingsReportStatusResponse.


        :return: The filter_criteria of this GetFindingsReportStatusResponse.
        :rtype: GetFindingsReportStatusResponseFilterCriteria
        """
        return self._filter_criteria

    @filter_criteria.setter
    def filter_criteria(self, filter_criteria):
        """Sets the filter_criteria of this GetFindingsReportStatusResponse.


        :param filter_criteria: The filter_criteria of this GetFindingsReportStatusResponse.
        :type filter_criteria: GetFindingsReportStatusResponseFilterCriteria
        """

        self._filter_criteria = filter_criteria

    @property
    def report_id(self):
        """Gets the report_id of this GetFindingsReportStatusResponse.


        :return: The report_id of this GetFindingsReportStatusResponse.
        :rtype: str
        """
        return self._report_id

    @report_id.setter
    def report_id(self, report_id):
        """Sets the report_id of this GetFindingsReportStatusResponse.


        :param report_id: The report_id of this GetFindingsReportStatusResponse.
        :type report_id: str
        """

        self._report_id = report_id

    @property
    def status(self):
        """Gets the status of this GetFindingsReportStatusResponse.


        :return: The status of this GetFindingsReportStatusResponse.
        :rtype: ExternalReportStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetFindingsReportStatusResponse.


        :param status: The status of this GetFindingsReportStatusResponse.
        :type status: ExternalReportStatus
        """

        self._status = status
