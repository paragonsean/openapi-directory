# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchGetFreeTrialInfoRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_ids: List[str]=None):
        """BatchGetFreeTrialInfoRequest - a model defined in OpenAPI

        :param account_ids: The account_ids of this BatchGetFreeTrialInfoRequest.
        """
        self.openapi_types = {
            'account_ids': List[str]
        }

        self.attribute_map = {
            'account_ids': 'accountIds'
        }

        self._account_ids = account_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetFreeTrialInfoRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetFreeTrialInfo_request of this BatchGetFreeTrialInfoRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_ids(self):
        """Gets the account_ids of this BatchGetFreeTrialInfoRequest.

        The account IDs to get free trial status for.

        :return: The account_ids of this BatchGetFreeTrialInfoRequest.
        :rtype: List[str]
        """
        return self._account_ids

    @account_ids.setter
    def account_ids(self, account_ids):
        """Sets the account_ids of this BatchGetFreeTrialInfoRequest.

        The account IDs to get free trial status for.

        :param account_ids: The account_ids of this BatchGetFreeTrialInfoRequest.
        :type account_ids: List[str]
        """
        if account_ids is None:
            raise ValueError("Invalid value for `account_ids`, must not be `None`")
        if account_ids is not None and len(account_ids) > 100:
            raise ValueError("Invalid value for `account_ids`, number of items must be less than or equal to `100`")
        if account_ids is not None and len(account_ids) < 1:
            raise ValueError("Invalid value for `account_ids`, number of items must be greater than or equal to `1`")

        self._account_ids = account_ids
