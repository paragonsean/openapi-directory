# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.severity_counts import SeverityCounts
from openapi_server import util


class LambdaFunctionAggregationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, function_name: str=None, lambda_tags: Dict=None, last_modified_at: datetime=None, resource_id: str=None, runtime: str=None, severity_counts: SeverityCounts=None):
        """LambdaFunctionAggregationResponse - a model defined in OpenAPI

        :param account_id: The account_id of this LambdaFunctionAggregationResponse.
        :param function_name: The function_name of this LambdaFunctionAggregationResponse.
        :param lambda_tags: The lambda_tags of this LambdaFunctionAggregationResponse.
        :param last_modified_at: The last_modified_at of this LambdaFunctionAggregationResponse.
        :param resource_id: The resource_id of this LambdaFunctionAggregationResponse.
        :param runtime: The runtime of this LambdaFunctionAggregationResponse.
        :param severity_counts: The severity_counts of this LambdaFunctionAggregationResponse.
        """
        self.openapi_types = {
            'account_id': str,
            'function_name': str,
            'lambda_tags': Dict,
            'last_modified_at': datetime,
            'resource_id': str,
            'runtime': str,
            'severity_counts': SeverityCounts
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'function_name': 'functionName',
            'lambda_tags': 'lambdaTags',
            'last_modified_at': 'lastModifiedAt',
            'resource_id': 'resourceId',
            'runtime': 'runtime',
            'severity_counts': 'severityCounts'
        }

        self._account_id = account_id
        self._function_name = function_name
        self._lambda_tags = lambda_tags
        self._last_modified_at = last_modified_at
        self._resource_id = resource_id
        self._runtime = runtime
        self._severity_counts = severity_counts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LambdaFunctionAggregationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LambdaFunctionAggregationResponse of this LambdaFunctionAggregationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this LambdaFunctionAggregationResponse.


        :return: The account_id of this LambdaFunctionAggregationResponse.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this LambdaFunctionAggregationResponse.


        :param account_id: The account_id of this LambdaFunctionAggregationResponse.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def function_name(self):
        """Gets the function_name of this LambdaFunctionAggregationResponse.


        :return: The function_name of this LambdaFunctionAggregationResponse.
        :rtype: str
        """
        return self._function_name

    @function_name.setter
    def function_name(self, function_name):
        """Sets the function_name of this LambdaFunctionAggregationResponse.


        :param function_name: The function_name of this LambdaFunctionAggregationResponse.
        :type function_name: str
        """

        self._function_name = function_name

    @property
    def lambda_tags(self):
        """Gets the lambda_tags of this LambdaFunctionAggregationResponse.


        :return: The lambda_tags of this LambdaFunctionAggregationResponse.
        :rtype: Dict
        """
        return self._lambda_tags

    @lambda_tags.setter
    def lambda_tags(self, lambda_tags):
        """Sets the lambda_tags of this LambdaFunctionAggregationResponse.


        :param lambda_tags: The lambda_tags of this LambdaFunctionAggregationResponse.
        :type lambda_tags: Dict
        """

        self._lambda_tags = lambda_tags

    @property
    def last_modified_at(self):
        """Gets the last_modified_at of this LambdaFunctionAggregationResponse.


        :return: The last_modified_at of this LambdaFunctionAggregationResponse.
        :rtype: datetime
        """
        return self._last_modified_at

    @last_modified_at.setter
    def last_modified_at(self, last_modified_at):
        """Sets the last_modified_at of this LambdaFunctionAggregationResponse.


        :param last_modified_at: The last_modified_at of this LambdaFunctionAggregationResponse.
        :type last_modified_at: datetime
        """

        self._last_modified_at = last_modified_at

    @property
    def resource_id(self):
        """Gets the resource_id of this LambdaFunctionAggregationResponse.


        :return: The resource_id of this LambdaFunctionAggregationResponse.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this LambdaFunctionAggregationResponse.


        :param resource_id: The resource_id of this LambdaFunctionAggregationResponse.
        :type resource_id: str
        """
        if resource_id is None:
            raise ValueError("Invalid value for `resource_id`, must not be `None`")

        self._resource_id = resource_id

    @property
    def runtime(self):
        """Gets the runtime of this LambdaFunctionAggregationResponse.


        :return: The runtime of this LambdaFunctionAggregationResponse.
        :rtype: str
        """
        return self._runtime

    @runtime.setter
    def runtime(self, runtime):
        """Sets the runtime of this LambdaFunctionAggregationResponse.


        :param runtime: The runtime of this LambdaFunctionAggregationResponse.
        :type runtime: str
        """

        self._runtime = runtime

    @property
    def severity_counts(self):
        """Gets the severity_counts of this LambdaFunctionAggregationResponse.


        :return: The severity_counts of this LambdaFunctionAggregationResponse.
        :rtype: SeverityCounts
        """
        return self._severity_counts

    @severity_counts.setter
    def severity_counts(self, severity_counts):
        """Sets the severity_counts of this LambdaFunctionAggregationResponse.


        :param severity_counts: The severity_counts of this LambdaFunctionAggregationResponse.
        :type severity_counts: SeverityCounts
        """

        self._severity_counts = severity_counts
