# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AggregationType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    FINDING_TYPE = 'FINDING_TYPE'
    PACKAGE = 'PACKAGE'
    TITLE = 'TITLE'
    REPOSITORY = 'REPOSITORY'
    AMI = 'AMI'
    AWS_EC2_INSTANCE = 'AWS_EC2_INSTANCE'
    AWS_ECR_CONTAINER = 'AWS_ECR_CONTAINER'
    IMAGE_LAYER = 'IMAGE_LAYER'
    ACCOUNT = 'ACCOUNT'
    AWS_LAMBDA_FUNCTION = 'AWS_LAMBDA_FUNCTION'
    LAMBDA_LAYER = 'LAMBDA_LAYER'

    def __init__(self):
        """AggregationType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AggregationType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AggregationType of this AggregationType.
        """
        return util.deserialize_model(dikt, cls)
