# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FindingDetailsErrorCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    ACCESS_DENIED = 'ACCESS_DENIED'
    FINDING_DETAILS_NOT_FOUND = 'FINDING_DETAILS_NOT_FOUND'
    INVALID_INPUT = 'INVALID_INPUT'

    def __init__(self):
        """FindingDetailsErrorCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindingDetailsErrorCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FindingDetailsErrorCode of this FindingDetailsErrorCode.
        """
        return util.deserialize_model(dikt, cls)
