# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ecr_rescan_duration import EcrRescanDuration
from openapi_server.models.ecr_rescan_duration_status import EcrRescanDurationStatus
from openapi_server import util


class EcrConfigurationStateRescanDurationState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rescan_duration: EcrRescanDuration=None, status: EcrRescanDurationStatus=None, updated_at: datetime=None):
        """EcrConfigurationStateRescanDurationState - a model defined in OpenAPI

        :param rescan_duration: The rescan_duration of this EcrConfigurationStateRescanDurationState.
        :param status: The status of this EcrConfigurationStateRescanDurationState.
        :param updated_at: The updated_at of this EcrConfigurationStateRescanDurationState.
        """
        self.openapi_types = {
            'rescan_duration': EcrRescanDuration,
            'status': EcrRescanDurationStatus,
            'updated_at': datetime
        }

        self.attribute_map = {
            'rescan_duration': 'rescanDuration',
            'status': 'status',
            'updated_at': 'updatedAt'
        }

        self._rescan_duration = rescan_duration
        self._status = status
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EcrConfigurationStateRescanDurationState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EcrConfigurationState_rescanDurationState of this EcrConfigurationStateRescanDurationState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rescan_duration(self):
        """Gets the rescan_duration of this EcrConfigurationStateRescanDurationState.


        :return: The rescan_duration of this EcrConfigurationStateRescanDurationState.
        :rtype: EcrRescanDuration
        """
        return self._rescan_duration

    @rescan_duration.setter
    def rescan_duration(self, rescan_duration):
        """Sets the rescan_duration of this EcrConfigurationStateRescanDurationState.


        :param rescan_duration: The rescan_duration of this EcrConfigurationStateRescanDurationState.
        :type rescan_duration: EcrRescanDuration
        """

        self._rescan_duration = rescan_duration

    @property
    def status(self):
        """Gets the status of this EcrConfigurationStateRescanDurationState.


        :return: The status of this EcrConfigurationStateRescanDurationState.
        :rtype: EcrRescanDurationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this EcrConfigurationStateRescanDurationState.


        :param status: The status of this EcrConfigurationStateRescanDurationState.
        :type status: EcrRescanDurationStatus
        """

        self._status = status

    @property
    def updated_at(self):
        """Gets the updated_at of this EcrConfigurationStateRescanDurationState.


        :return: The updated_at of this EcrConfigurationStateRescanDurationState.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this EcrConfigurationStateRescanDurationState.


        :param updated_at: The updated_at of this EcrConfigurationStateRescanDurationState.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
