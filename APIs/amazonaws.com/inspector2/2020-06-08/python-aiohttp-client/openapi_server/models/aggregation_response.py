# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aggregation_response_account_aggregation import AggregationResponseAccountAggregation
from openapi_server.models.aggregation_response_ami_aggregation import AggregationResponseAmiAggregation
from openapi_server.models.aggregation_response_aws_ecr_container_aggregation import AggregationResponseAwsEcrContainerAggregation
from openapi_server.models.aggregation_response_ec2_instance_aggregation import AggregationResponseEc2InstanceAggregation
from openapi_server.models.aggregation_response_finding_type_aggregation import AggregationResponseFindingTypeAggregation
from openapi_server.models.aggregation_response_image_layer_aggregation import AggregationResponseImageLayerAggregation
from openapi_server.models.aggregation_response_lambda_function_aggregation import AggregationResponseLambdaFunctionAggregation
from openapi_server.models.aggregation_response_lambda_layer_aggregation import AggregationResponseLambdaLayerAggregation
from openapi_server.models.aggregation_response_package_aggregation import AggregationResponsePackageAggregation
from openapi_server.models.aggregation_response_repository_aggregation import AggregationResponseRepositoryAggregation
from openapi_server.models.aggregation_response_title_aggregation import AggregationResponseTitleAggregation
from openapi_server import util


class AggregationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_aggregation: AggregationResponseAccountAggregation=None, ami_aggregation: AggregationResponseAmiAggregation=None, aws_ecr_container_aggregation: AggregationResponseAwsEcrContainerAggregation=None, ec2_instance_aggregation: AggregationResponseEc2InstanceAggregation=None, finding_type_aggregation: AggregationResponseFindingTypeAggregation=None, image_layer_aggregation: AggregationResponseImageLayerAggregation=None, lambda_function_aggregation: AggregationResponseLambdaFunctionAggregation=None, lambda_layer_aggregation: AggregationResponseLambdaLayerAggregation=None, package_aggregation: AggregationResponsePackageAggregation=None, repository_aggregation: AggregationResponseRepositoryAggregation=None, title_aggregation: AggregationResponseTitleAggregation=None):
        """AggregationResponse - a model defined in OpenAPI

        :param account_aggregation: The account_aggregation of this AggregationResponse.
        :param ami_aggregation: The ami_aggregation of this AggregationResponse.
        :param aws_ecr_container_aggregation: The aws_ecr_container_aggregation of this AggregationResponse.
        :param ec2_instance_aggregation: The ec2_instance_aggregation of this AggregationResponse.
        :param finding_type_aggregation: The finding_type_aggregation of this AggregationResponse.
        :param image_layer_aggregation: The image_layer_aggregation of this AggregationResponse.
        :param lambda_function_aggregation: The lambda_function_aggregation of this AggregationResponse.
        :param lambda_layer_aggregation: The lambda_layer_aggregation of this AggregationResponse.
        :param package_aggregation: The package_aggregation of this AggregationResponse.
        :param repository_aggregation: The repository_aggregation of this AggregationResponse.
        :param title_aggregation: The title_aggregation of this AggregationResponse.
        """
        self.openapi_types = {
            'account_aggregation': AggregationResponseAccountAggregation,
            'ami_aggregation': AggregationResponseAmiAggregation,
            'aws_ecr_container_aggregation': AggregationResponseAwsEcrContainerAggregation,
            'ec2_instance_aggregation': AggregationResponseEc2InstanceAggregation,
            'finding_type_aggregation': AggregationResponseFindingTypeAggregation,
            'image_layer_aggregation': AggregationResponseImageLayerAggregation,
            'lambda_function_aggregation': AggregationResponseLambdaFunctionAggregation,
            'lambda_layer_aggregation': AggregationResponseLambdaLayerAggregation,
            'package_aggregation': AggregationResponsePackageAggregation,
            'repository_aggregation': AggregationResponseRepositoryAggregation,
            'title_aggregation': AggregationResponseTitleAggregation
        }

        self.attribute_map = {
            'account_aggregation': 'accountAggregation',
            'ami_aggregation': 'amiAggregation',
            'aws_ecr_container_aggregation': 'awsEcrContainerAggregation',
            'ec2_instance_aggregation': 'ec2InstanceAggregation',
            'finding_type_aggregation': 'findingTypeAggregation',
            'image_layer_aggregation': 'imageLayerAggregation',
            'lambda_function_aggregation': 'lambdaFunctionAggregation',
            'lambda_layer_aggregation': 'lambdaLayerAggregation',
            'package_aggregation': 'packageAggregation',
            'repository_aggregation': 'repositoryAggregation',
            'title_aggregation': 'titleAggregation'
        }

        self._account_aggregation = account_aggregation
        self._ami_aggregation = ami_aggregation
        self._aws_ecr_container_aggregation = aws_ecr_container_aggregation
        self._ec2_instance_aggregation = ec2_instance_aggregation
        self._finding_type_aggregation = finding_type_aggregation
        self._image_layer_aggregation = image_layer_aggregation
        self._lambda_function_aggregation = lambda_function_aggregation
        self._lambda_layer_aggregation = lambda_layer_aggregation
        self._package_aggregation = package_aggregation
        self._repository_aggregation = repository_aggregation
        self._title_aggregation = title_aggregation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AggregationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AggregationResponse of this AggregationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_aggregation(self):
        """Gets the account_aggregation of this AggregationResponse.


        :return: The account_aggregation of this AggregationResponse.
        :rtype: AggregationResponseAccountAggregation
        """
        return self._account_aggregation

    @account_aggregation.setter
    def account_aggregation(self, account_aggregation):
        """Sets the account_aggregation of this AggregationResponse.


        :param account_aggregation: The account_aggregation of this AggregationResponse.
        :type account_aggregation: AggregationResponseAccountAggregation
        """

        self._account_aggregation = account_aggregation

    @property
    def ami_aggregation(self):
        """Gets the ami_aggregation of this AggregationResponse.


        :return: The ami_aggregation of this AggregationResponse.
        :rtype: AggregationResponseAmiAggregation
        """
        return self._ami_aggregation

    @ami_aggregation.setter
    def ami_aggregation(self, ami_aggregation):
        """Sets the ami_aggregation of this AggregationResponse.


        :param ami_aggregation: The ami_aggregation of this AggregationResponse.
        :type ami_aggregation: AggregationResponseAmiAggregation
        """

        self._ami_aggregation = ami_aggregation

    @property
    def aws_ecr_container_aggregation(self):
        """Gets the aws_ecr_container_aggregation of this AggregationResponse.


        :return: The aws_ecr_container_aggregation of this AggregationResponse.
        :rtype: AggregationResponseAwsEcrContainerAggregation
        """
        return self._aws_ecr_container_aggregation

    @aws_ecr_container_aggregation.setter
    def aws_ecr_container_aggregation(self, aws_ecr_container_aggregation):
        """Sets the aws_ecr_container_aggregation of this AggregationResponse.


        :param aws_ecr_container_aggregation: The aws_ecr_container_aggregation of this AggregationResponse.
        :type aws_ecr_container_aggregation: AggregationResponseAwsEcrContainerAggregation
        """

        self._aws_ecr_container_aggregation = aws_ecr_container_aggregation

    @property
    def ec2_instance_aggregation(self):
        """Gets the ec2_instance_aggregation of this AggregationResponse.


        :return: The ec2_instance_aggregation of this AggregationResponse.
        :rtype: AggregationResponseEc2InstanceAggregation
        """
        return self._ec2_instance_aggregation

    @ec2_instance_aggregation.setter
    def ec2_instance_aggregation(self, ec2_instance_aggregation):
        """Sets the ec2_instance_aggregation of this AggregationResponse.


        :param ec2_instance_aggregation: The ec2_instance_aggregation of this AggregationResponse.
        :type ec2_instance_aggregation: AggregationResponseEc2InstanceAggregation
        """

        self._ec2_instance_aggregation = ec2_instance_aggregation

    @property
    def finding_type_aggregation(self):
        """Gets the finding_type_aggregation of this AggregationResponse.


        :return: The finding_type_aggregation of this AggregationResponse.
        :rtype: AggregationResponseFindingTypeAggregation
        """
        return self._finding_type_aggregation

    @finding_type_aggregation.setter
    def finding_type_aggregation(self, finding_type_aggregation):
        """Sets the finding_type_aggregation of this AggregationResponse.


        :param finding_type_aggregation: The finding_type_aggregation of this AggregationResponse.
        :type finding_type_aggregation: AggregationResponseFindingTypeAggregation
        """

        self._finding_type_aggregation = finding_type_aggregation

    @property
    def image_layer_aggregation(self):
        """Gets the image_layer_aggregation of this AggregationResponse.


        :return: The image_layer_aggregation of this AggregationResponse.
        :rtype: AggregationResponseImageLayerAggregation
        """
        return self._image_layer_aggregation

    @image_layer_aggregation.setter
    def image_layer_aggregation(self, image_layer_aggregation):
        """Sets the image_layer_aggregation of this AggregationResponse.


        :param image_layer_aggregation: The image_layer_aggregation of this AggregationResponse.
        :type image_layer_aggregation: AggregationResponseImageLayerAggregation
        """

        self._image_layer_aggregation = image_layer_aggregation

    @property
    def lambda_function_aggregation(self):
        """Gets the lambda_function_aggregation of this AggregationResponse.


        :return: The lambda_function_aggregation of this AggregationResponse.
        :rtype: AggregationResponseLambdaFunctionAggregation
        """
        return self._lambda_function_aggregation

    @lambda_function_aggregation.setter
    def lambda_function_aggregation(self, lambda_function_aggregation):
        """Sets the lambda_function_aggregation of this AggregationResponse.


        :param lambda_function_aggregation: The lambda_function_aggregation of this AggregationResponse.
        :type lambda_function_aggregation: AggregationResponseLambdaFunctionAggregation
        """

        self._lambda_function_aggregation = lambda_function_aggregation

    @property
    def lambda_layer_aggregation(self):
        """Gets the lambda_layer_aggregation of this AggregationResponse.


        :return: The lambda_layer_aggregation of this AggregationResponse.
        :rtype: AggregationResponseLambdaLayerAggregation
        """
        return self._lambda_layer_aggregation

    @lambda_layer_aggregation.setter
    def lambda_layer_aggregation(self, lambda_layer_aggregation):
        """Sets the lambda_layer_aggregation of this AggregationResponse.


        :param lambda_layer_aggregation: The lambda_layer_aggregation of this AggregationResponse.
        :type lambda_layer_aggregation: AggregationResponseLambdaLayerAggregation
        """

        self._lambda_layer_aggregation = lambda_layer_aggregation

    @property
    def package_aggregation(self):
        """Gets the package_aggregation of this AggregationResponse.


        :return: The package_aggregation of this AggregationResponse.
        :rtype: AggregationResponsePackageAggregation
        """
        return self._package_aggregation

    @package_aggregation.setter
    def package_aggregation(self, package_aggregation):
        """Sets the package_aggregation of this AggregationResponse.


        :param package_aggregation: The package_aggregation of this AggregationResponse.
        :type package_aggregation: AggregationResponsePackageAggregation
        """

        self._package_aggregation = package_aggregation

    @property
    def repository_aggregation(self):
        """Gets the repository_aggregation of this AggregationResponse.


        :return: The repository_aggregation of this AggregationResponse.
        :rtype: AggregationResponseRepositoryAggregation
        """
        return self._repository_aggregation

    @repository_aggregation.setter
    def repository_aggregation(self, repository_aggregation):
        """Sets the repository_aggregation of this AggregationResponse.


        :param repository_aggregation: The repository_aggregation of this AggregationResponse.
        :type repository_aggregation: AggregationResponseRepositoryAggregation
        """

        self._repository_aggregation = repository_aggregation

    @property
    def title_aggregation(self):
        """Gets the title_aggregation of this AggregationResponse.


        :return: The title_aggregation of this AggregationResponse.
        :rtype: AggregationResponseTitleAggregation
        """
        return self._title_aggregation

    @title_aggregation.setter
    def title_aggregation(self, title_aggregation):
        """Sets the title_aggregation of this AggregationResponse.


        :param title_aggregation: The title_aggregation of this AggregationResponse.
        :type title_aggregation: AggregationResponseTitleAggregation
        """

        self._title_aggregation = title_aggregation
