# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_details_aws_ec2_instance import ResourceDetailsAwsEc2Instance
from openapi_server.models.resource_details_aws_ecr_container_image import ResourceDetailsAwsEcrContainerImage
from openapi_server.models.resource_details_aws_lambda_function import ResourceDetailsAwsLambdaFunction
from openapi_server import util


class ResourceDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aws_ec2_instance: ResourceDetailsAwsEc2Instance=None, aws_ecr_container_image: ResourceDetailsAwsEcrContainerImage=None, aws_lambda_function: ResourceDetailsAwsLambdaFunction=None):
        """ResourceDetails - a model defined in OpenAPI

        :param aws_ec2_instance: The aws_ec2_instance of this ResourceDetails.
        :param aws_ecr_container_image: The aws_ecr_container_image of this ResourceDetails.
        :param aws_lambda_function: The aws_lambda_function of this ResourceDetails.
        """
        self.openapi_types = {
            'aws_ec2_instance': ResourceDetailsAwsEc2Instance,
            'aws_ecr_container_image': ResourceDetailsAwsEcrContainerImage,
            'aws_lambda_function': ResourceDetailsAwsLambdaFunction
        }

        self.attribute_map = {
            'aws_ec2_instance': 'awsEc2Instance',
            'aws_ecr_container_image': 'awsEcrContainerImage',
            'aws_lambda_function': 'awsLambdaFunction'
        }

        self._aws_ec2_instance = aws_ec2_instance
        self._aws_ecr_container_image = aws_ecr_container_image
        self._aws_lambda_function = aws_lambda_function

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Resource_details of this ResourceDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aws_ec2_instance(self):
        """Gets the aws_ec2_instance of this ResourceDetails.


        :return: The aws_ec2_instance of this ResourceDetails.
        :rtype: ResourceDetailsAwsEc2Instance
        """
        return self._aws_ec2_instance

    @aws_ec2_instance.setter
    def aws_ec2_instance(self, aws_ec2_instance):
        """Sets the aws_ec2_instance of this ResourceDetails.


        :param aws_ec2_instance: The aws_ec2_instance of this ResourceDetails.
        :type aws_ec2_instance: ResourceDetailsAwsEc2Instance
        """

        self._aws_ec2_instance = aws_ec2_instance

    @property
    def aws_ecr_container_image(self):
        """Gets the aws_ecr_container_image of this ResourceDetails.


        :return: The aws_ecr_container_image of this ResourceDetails.
        :rtype: ResourceDetailsAwsEcrContainerImage
        """
        return self._aws_ecr_container_image

    @aws_ecr_container_image.setter
    def aws_ecr_container_image(self, aws_ecr_container_image):
        """Sets the aws_ecr_container_image of this ResourceDetails.


        :param aws_ecr_container_image: The aws_ecr_container_image of this ResourceDetails.
        :type aws_ecr_container_image: ResourceDetailsAwsEcrContainerImage
        """

        self._aws_ecr_container_image = aws_ecr_container_image

    @property
    def aws_lambda_function(self):
        """Gets the aws_lambda_function of this ResourceDetails.


        :return: The aws_lambda_function of this ResourceDetails.
        :rtype: ResourceDetailsAwsLambdaFunction
        """
        return self._aws_lambda_function

    @aws_lambda_function.setter
    def aws_lambda_function(self, aws_lambda_function):
        """Sets the aws_lambda_function of this ResourceDetails.


        :param aws_lambda_function: The aws_lambda_function of this ResourceDetails.
        :type aws_lambda_function: ResourceDetailsAwsLambdaFunction
        """

        self._aws_lambda_function = aws_lambda_function
