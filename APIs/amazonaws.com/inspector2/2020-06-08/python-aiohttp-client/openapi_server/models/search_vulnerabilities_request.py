# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_vulnerabilities_request_filter_criteria import SearchVulnerabilitiesRequestFilterCriteria
from openapi_server import util


class SearchVulnerabilitiesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter_criteria: SearchVulnerabilitiesRequestFilterCriteria=None, next_token: str=None):
        """SearchVulnerabilitiesRequest - a model defined in OpenAPI

        :param filter_criteria: The filter_criteria of this SearchVulnerabilitiesRequest.
        :param next_token: The next_token of this SearchVulnerabilitiesRequest.
        """
        self.openapi_types = {
            'filter_criteria': SearchVulnerabilitiesRequestFilterCriteria,
            'next_token': str
        }

        self.attribute_map = {
            'filter_criteria': 'filterCriteria',
            'next_token': 'nextToken'
        }

        self._filter_criteria = filter_criteria
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchVulnerabilitiesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchVulnerabilities_request of this SearchVulnerabilitiesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter_criteria(self):
        """Gets the filter_criteria of this SearchVulnerabilitiesRequest.


        :return: The filter_criteria of this SearchVulnerabilitiesRequest.
        :rtype: SearchVulnerabilitiesRequestFilterCriteria
        """
        return self._filter_criteria

    @filter_criteria.setter
    def filter_criteria(self, filter_criteria):
        """Sets the filter_criteria of this SearchVulnerabilitiesRequest.


        :param filter_criteria: The filter_criteria of this SearchVulnerabilitiesRequest.
        :type filter_criteria: SearchVulnerabilitiesRequestFilterCriteria
        """
        if filter_criteria is None:
            raise ValueError("Invalid value for `filter_criteria`, must not be `None`")

        self._filter_criteria = filter_criteria

    @property
    def next_token(self):
        """Gets the next_token of this SearchVulnerabilitiesRequest.

        A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.

        :return: The next_token of this SearchVulnerabilitiesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this SearchVulnerabilitiesRequest.

        A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.

        :param next_token: The next_token of this SearchVulnerabilitiesRequest.
        :type next_token: str
        """
        if next_token is not None and len(next_token) > 1000000:
            raise ValueError("Invalid value for `next_token`, length must be less than or equal to `1000000`")
        if next_token is not None and len(next_token) < 0:
            raise ValueError("Invalid value for `next_token`, length must be greater than or equal to `0`")

        self._next_token = next_token
