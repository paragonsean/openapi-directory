# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PortRangeFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, begin_inclusive: int=None, end_inclusive: int=None):
        """PortRangeFilter - a model defined in OpenAPI

        :param begin_inclusive: The begin_inclusive of this PortRangeFilter.
        :param end_inclusive: The end_inclusive of this PortRangeFilter.
        """
        self.openapi_types = {
            'begin_inclusive': int,
            'end_inclusive': int
        }

        self.attribute_map = {
            'begin_inclusive': 'beginInclusive',
            'end_inclusive': 'endInclusive'
        }

        self._begin_inclusive = begin_inclusive
        self._end_inclusive = end_inclusive

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PortRangeFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PortRangeFilter of this PortRangeFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def begin_inclusive(self):
        """Gets the begin_inclusive of this PortRangeFilter.


        :return: The begin_inclusive of this PortRangeFilter.
        :rtype: int
        """
        return self._begin_inclusive

    @begin_inclusive.setter
    def begin_inclusive(self, begin_inclusive):
        """Sets the begin_inclusive of this PortRangeFilter.


        :param begin_inclusive: The begin_inclusive of this PortRangeFilter.
        :type begin_inclusive: int
        """

        self._begin_inclusive = begin_inclusive

    @property
    def end_inclusive(self):
        """Gets the end_inclusive of this PortRangeFilter.


        :return: The end_inclusive of this PortRangeFilter.
        :rtype: int
        """
        return self._end_inclusive

    @end_inclusive.setter
    def end_inclusive(self, end_inclusive):
        """Sets the end_inclusive of this PortRangeFilter.


        :param end_inclusive: The end_inclusive of this PortRangeFilter.
        :type end_inclusive: int
        """

        self._end_inclusive = end_inclusive
