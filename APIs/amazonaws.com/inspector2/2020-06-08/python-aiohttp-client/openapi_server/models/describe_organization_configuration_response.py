# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_organization_configuration_response_auto_enable import DescribeOrganizationConfigurationResponseAutoEnable
from openapi_server import util


class DescribeOrganizationConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_enable: DescribeOrganizationConfigurationResponseAutoEnable=None, max_account_limit_reached: bool=None):
        """DescribeOrganizationConfigurationResponse - a model defined in OpenAPI

        :param auto_enable: The auto_enable of this DescribeOrganizationConfigurationResponse.
        :param max_account_limit_reached: The max_account_limit_reached of this DescribeOrganizationConfigurationResponse.
        """
        self.openapi_types = {
            'auto_enable': DescribeOrganizationConfigurationResponseAutoEnable,
            'max_account_limit_reached': bool
        }

        self.attribute_map = {
            'auto_enable': 'autoEnable',
            'max_account_limit_reached': 'maxAccountLimitReached'
        }

        self._auto_enable = auto_enable
        self._max_account_limit_reached = max_account_limit_reached

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeOrganizationConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeOrganizationConfigurationResponse of this DescribeOrganizationConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_enable(self):
        """Gets the auto_enable of this DescribeOrganizationConfigurationResponse.


        :return: The auto_enable of this DescribeOrganizationConfigurationResponse.
        :rtype: DescribeOrganizationConfigurationResponseAutoEnable
        """
        return self._auto_enable

    @auto_enable.setter
    def auto_enable(self, auto_enable):
        """Sets the auto_enable of this DescribeOrganizationConfigurationResponse.


        :param auto_enable: The auto_enable of this DescribeOrganizationConfigurationResponse.
        :type auto_enable: DescribeOrganizationConfigurationResponseAutoEnable
        """

        self._auto_enable = auto_enable

    @property
    def max_account_limit_reached(self):
        """Gets the max_account_limit_reached of this DescribeOrganizationConfigurationResponse.


        :return: The max_account_limit_reached of this DescribeOrganizationConfigurationResponse.
        :rtype: bool
        """
        return self._max_account_limit_reached

    @max_account_limit_reached.setter
    def max_account_limit_reached(self, max_account_limit_reached):
        """Sets the max_account_limit_reached of this DescribeOrganizationConfigurationResponse.


        :param max_account_limit_reached: The max_account_limit_reached of this DescribeOrganizationConfigurationResponse.
        :type max_account_limit_reached: bool
        """

        self._max_account_limit_reached = max_account_limit_reached
