# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.package_filter_architecture import PackageFilterArchitecture
from openapi_server.models.package_filter_epoch import PackageFilterEpoch
from openapi_server.models.package_filter_name import PackageFilterName
from openapi_server.models.package_filter_release import PackageFilterRelease
from openapi_server.models.package_filter_source_layer_hash import PackageFilterSourceLayerHash
from openapi_server.models.package_filter_version import PackageFilterVersion
from openapi_server.models.string_filter import StringFilter
from openapi_server import util


class PackageFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, architecture: PackageFilterArchitecture=None, epoch: PackageFilterEpoch=None, name: PackageFilterName=None, release: PackageFilterRelease=None, source_lambda_layer_arn: StringFilter=None, source_layer_hash: PackageFilterSourceLayerHash=None, version: PackageFilterVersion=None):
        """PackageFilter - a model defined in OpenAPI

        :param architecture: The architecture of this PackageFilter.
        :param epoch: The epoch of this PackageFilter.
        :param name: The name of this PackageFilter.
        :param release: The release of this PackageFilter.
        :param source_lambda_layer_arn: The source_lambda_layer_arn of this PackageFilter.
        :param source_layer_hash: The source_layer_hash of this PackageFilter.
        :param version: The version of this PackageFilter.
        """
        self.openapi_types = {
            'architecture': PackageFilterArchitecture,
            'epoch': PackageFilterEpoch,
            'name': PackageFilterName,
            'release': PackageFilterRelease,
            'source_lambda_layer_arn': StringFilter,
            'source_layer_hash': PackageFilterSourceLayerHash,
            'version': PackageFilterVersion
        }

        self.attribute_map = {
            'architecture': 'architecture',
            'epoch': 'epoch',
            'name': 'name',
            'release': 'release',
            'source_lambda_layer_arn': 'sourceLambdaLayerArn',
            'source_layer_hash': 'sourceLayerHash',
            'version': 'version'
        }

        self._architecture = architecture
        self._epoch = epoch
        self._name = name
        self._release = release
        self._source_lambda_layer_arn = source_lambda_layer_arn
        self._source_layer_hash = source_layer_hash
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PackageFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PackageFilter of this PackageFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def architecture(self):
        """Gets the architecture of this PackageFilter.


        :return: The architecture of this PackageFilter.
        :rtype: PackageFilterArchitecture
        """
        return self._architecture

    @architecture.setter
    def architecture(self, architecture):
        """Sets the architecture of this PackageFilter.


        :param architecture: The architecture of this PackageFilter.
        :type architecture: PackageFilterArchitecture
        """

        self._architecture = architecture

    @property
    def epoch(self):
        """Gets the epoch of this PackageFilter.


        :return: The epoch of this PackageFilter.
        :rtype: PackageFilterEpoch
        """
        return self._epoch

    @epoch.setter
    def epoch(self, epoch):
        """Sets the epoch of this PackageFilter.


        :param epoch: The epoch of this PackageFilter.
        :type epoch: PackageFilterEpoch
        """

        self._epoch = epoch

    @property
    def name(self):
        """Gets the name of this PackageFilter.


        :return: The name of this PackageFilter.
        :rtype: PackageFilterName
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PackageFilter.


        :param name: The name of this PackageFilter.
        :type name: PackageFilterName
        """

        self._name = name

    @property
    def release(self):
        """Gets the release of this PackageFilter.


        :return: The release of this PackageFilter.
        :rtype: PackageFilterRelease
        """
        return self._release

    @release.setter
    def release(self, release):
        """Sets the release of this PackageFilter.


        :param release: The release of this PackageFilter.
        :type release: PackageFilterRelease
        """

        self._release = release

    @property
    def source_lambda_layer_arn(self):
        """Gets the source_lambda_layer_arn of this PackageFilter.


        :return: The source_lambda_layer_arn of this PackageFilter.
        :rtype: StringFilter
        """
        return self._source_lambda_layer_arn

    @source_lambda_layer_arn.setter
    def source_lambda_layer_arn(self, source_lambda_layer_arn):
        """Sets the source_lambda_layer_arn of this PackageFilter.


        :param source_lambda_layer_arn: The source_lambda_layer_arn of this PackageFilter.
        :type source_lambda_layer_arn: StringFilter
        """

        self._source_lambda_layer_arn = source_lambda_layer_arn

    @property
    def source_layer_hash(self):
        """Gets the source_layer_hash of this PackageFilter.


        :return: The source_layer_hash of this PackageFilter.
        :rtype: PackageFilterSourceLayerHash
        """
        return self._source_layer_hash

    @source_layer_hash.setter
    def source_layer_hash(self, source_layer_hash):
        """Sets the source_layer_hash of this PackageFilter.


        :param source_layer_hash: The source_layer_hash of this PackageFilter.
        :type source_layer_hash: PackageFilterSourceLayerHash
        """

        self._source_layer_hash = source_layer_hash

    @property
    def version(self):
        """Gets the version of this PackageFilter.


        :return: The version of this PackageFilter.
        :rtype: PackageFilterVersion
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PackageFilter.


        :param version: The version of this PackageFilter.
        :type version: PackageFilterVersion
        """

        self._version = version
