# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aggregation_finding_type import AggregationFindingType
from openapi_server.models.aggregation_resource_type import AggregationResourceType
from openapi_server.models.finding_type_sort_by import FindingTypeSortBy
from openapi_server.models.sort_order import SortOrder
from openapi_server import util


class ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, finding_type: AggregationFindingType=None, resource_type: AggregationResourceType=None, sort_by: FindingTypeSortBy=None, sort_order: SortOrder=None):
        """ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation - a model defined in OpenAPI

        :param finding_type: The finding_type of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        :param resource_type: The resource_type of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        :param sort_by: The sort_by of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        :param sort_order: The sort_order of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        """
        self.openapi_types = {
            'finding_type': AggregationFindingType,
            'resource_type': AggregationResourceType,
            'sort_by': FindingTypeSortBy,
            'sort_order': SortOrder
        }

        self.attribute_map = {
            'finding_type': 'findingType',
            'resource_type': 'resourceType',
            'sort_by': 'sortBy',
            'sort_order': 'sortOrder'
        }

        self._finding_type = finding_type
        self._resource_type = resource_type
        self._sort_by = sort_by
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListFindingAggregations_request_aggregationRequest_findingTypeAggregation of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def finding_type(self):
        """Gets the finding_type of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.


        :return: The finding_type of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        :rtype: AggregationFindingType
        """
        return self._finding_type

    @finding_type.setter
    def finding_type(self, finding_type):
        """Sets the finding_type of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.


        :param finding_type: The finding_type of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        :type finding_type: AggregationFindingType
        """

        self._finding_type = finding_type

    @property
    def resource_type(self):
        """Gets the resource_type of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.


        :return: The resource_type of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        :rtype: AggregationResourceType
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.


        :param resource_type: The resource_type of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        :type resource_type: AggregationResourceType
        """

        self._resource_type = resource_type

    @property
    def sort_by(self):
        """Gets the sort_by of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.


        :return: The sort_by of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        :rtype: FindingTypeSortBy
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.


        :param sort_by: The sort_by of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        :type sort_by: FindingTypeSortBy
        """

        self._sort_by = sort_by

    @property
    def sort_order(self):
        """Gets the sort_order of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.


        :return: The sort_order of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        :rtype: SortOrder
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.


        :param sort_order: The sort_order of this ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.
        :type sort_order: SortOrder
        """

        self._sort_order = sort_order
