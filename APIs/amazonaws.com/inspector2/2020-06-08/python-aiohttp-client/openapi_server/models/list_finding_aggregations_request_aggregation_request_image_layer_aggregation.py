# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_layer_sort_by import ImageLayerSortBy
from openapi_server.models.sort_order import SortOrder
from openapi_server import util


class ListFindingAggregationsRequestAggregationRequestImageLayerAggregation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, layer_hashes: List=None, repositories: List=None, resource_ids: List=None, sort_by: ImageLayerSortBy=None, sort_order: SortOrder=None):
        """ListFindingAggregationsRequestAggregationRequestImageLayerAggregation - a model defined in OpenAPI

        :param layer_hashes: The layer_hashes of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :param repositories: The repositories of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :param resource_ids: The resource_ids of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :param sort_by: The sort_by of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :param sort_order: The sort_order of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        """
        self.openapi_types = {
            'layer_hashes': List,
            'repositories': List,
            'resource_ids': List,
            'sort_by': ImageLayerSortBy,
            'sort_order': SortOrder
        }

        self.attribute_map = {
            'layer_hashes': 'layerHashes',
            'repositories': 'repositories',
            'resource_ids': 'resourceIds',
            'sort_by': 'sortBy',
            'sort_order': 'sortOrder'
        }

        self._layer_hashes = layer_hashes
        self._repositories = repositories
        self._resource_ids = resource_ids
        self._sort_by = sort_by
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListFindingAggregationsRequestAggregationRequestImageLayerAggregation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListFindingAggregations_request_aggregationRequest_imageLayerAggregation of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def layer_hashes(self):
        """Gets the layer_hashes of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.


        :return: The layer_hashes of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :rtype: List
        """
        return self._layer_hashes

    @layer_hashes.setter
    def layer_hashes(self, layer_hashes):
        """Sets the layer_hashes of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.


        :param layer_hashes: The layer_hashes of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :type layer_hashes: List
        """

        self._layer_hashes = layer_hashes

    @property
    def repositories(self):
        """Gets the repositories of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.


        :return: The repositories of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :rtype: List
        """
        return self._repositories

    @repositories.setter
    def repositories(self, repositories):
        """Sets the repositories of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.


        :param repositories: The repositories of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :type repositories: List
        """

        self._repositories = repositories

    @property
    def resource_ids(self):
        """Gets the resource_ids of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.


        :return: The resource_ids of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :rtype: List
        """
        return self._resource_ids

    @resource_ids.setter
    def resource_ids(self, resource_ids):
        """Sets the resource_ids of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.


        :param resource_ids: The resource_ids of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :type resource_ids: List
        """

        self._resource_ids = resource_ids

    @property
    def sort_by(self):
        """Gets the sort_by of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.


        :return: The sort_by of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :rtype: ImageLayerSortBy
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.


        :param sort_by: The sort_by of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :type sort_by: ImageLayerSortBy
        """

        self._sort_by = sort_by

    @property
    def sort_order(self):
        """Gets the sort_order of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.


        :return: The sort_order of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :rtype: SortOrder
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.


        :param sort_order: The sort_order of this ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.
        :type sort_order: SortOrder
        """

        self._sort_order = sort_order
