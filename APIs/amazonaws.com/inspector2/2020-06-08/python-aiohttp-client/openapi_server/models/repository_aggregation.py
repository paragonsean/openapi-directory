# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.repository_sort_by import RepositorySortBy
from openapi_server.models.sort_order import SortOrder
from openapi_server import util


class RepositoryAggregation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, repositories: List=None, sort_by: RepositorySortBy=None, sort_order: SortOrder=None):
        """RepositoryAggregation - a model defined in OpenAPI

        :param repositories: The repositories of this RepositoryAggregation.
        :param sort_by: The sort_by of this RepositoryAggregation.
        :param sort_order: The sort_order of this RepositoryAggregation.
        """
        self.openapi_types = {
            'repositories': List,
            'sort_by': RepositorySortBy,
            'sort_order': SortOrder
        }

        self.attribute_map = {
            'repositories': 'repositories',
            'sort_by': 'sortBy',
            'sort_order': 'sortOrder'
        }

        self._repositories = repositories
        self._sort_by = sort_by
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepositoryAggregation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepositoryAggregation of this RepositoryAggregation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def repositories(self):
        """Gets the repositories of this RepositoryAggregation.


        :return: The repositories of this RepositoryAggregation.
        :rtype: List
        """
        return self._repositories

    @repositories.setter
    def repositories(self, repositories):
        """Sets the repositories of this RepositoryAggregation.


        :param repositories: The repositories of this RepositoryAggregation.
        :type repositories: List
        """

        self._repositories = repositories

    @property
    def sort_by(self):
        """Gets the sort_by of this RepositoryAggregation.


        :return: The sort_by of this RepositoryAggregation.
        :rtype: RepositorySortBy
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this RepositoryAggregation.


        :param sort_by: The sort_by of this RepositoryAggregation.
        :type sort_by: RepositorySortBy
        """

        self._sort_by = sort_by

    @property
    def sort_order(self):
        """Gets the sort_order of this RepositoryAggregation.


        :return: The sort_order of this RepositoryAggregation.
        :rtype: SortOrder
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this RepositoryAggregation.


        :param sort_order: The sort_order of this RepositoryAggregation.
        :type sort_order: SortOrder
        """

        self._sort_order = sort_order
