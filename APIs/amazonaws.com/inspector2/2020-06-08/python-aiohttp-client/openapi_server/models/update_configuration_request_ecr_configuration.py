# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ecr_rescan_duration import EcrRescanDuration
from openapi_server import util


class UpdateConfigurationRequestEcrConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rescan_duration: EcrRescanDuration=None):
        """UpdateConfigurationRequestEcrConfiguration - a model defined in OpenAPI

        :param rescan_duration: The rescan_duration of this UpdateConfigurationRequestEcrConfiguration.
        """
        self.openapi_types = {
            'rescan_duration': EcrRescanDuration
        }

        self.attribute_map = {
            'rescan_duration': 'rescanDuration'
        }

        self._rescan_duration = rescan_duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConfigurationRequestEcrConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateConfigurationRequest_ecrConfiguration of this UpdateConfigurationRequestEcrConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rescan_duration(self):
        """Gets the rescan_duration of this UpdateConfigurationRequestEcrConfiguration.


        :return: The rescan_duration of this UpdateConfigurationRequestEcrConfiguration.
        :rtype: EcrRescanDuration
        """
        return self._rescan_duration

    @rescan_duration.setter
    def rescan_duration(self, rescan_duration):
        """Sets the rescan_duration of this UpdateConfigurationRequestEcrConfiguration.


        :param rescan_duration: The rescan_duration of this UpdateConfigurationRequestEcrConfiguration.
        :type rescan_duration: EcrRescanDuration
        """
        if rescan_duration is None:
            raise ValueError("Invalid value for `rescan_duration`, must not be `None`")

        self._rescan_duration = rescan_duration
