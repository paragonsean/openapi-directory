# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ec2_deep_inspection_status import Ec2DeepInspectionStatus
from openapi_server import util


class GetEc2DeepInspectionConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_message: str=None, org_package_paths: List=None, package_paths: List=None, status: Ec2DeepInspectionStatus=None):
        """GetEc2DeepInspectionConfigurationResponse - a model defined in OpenAPI

        :param error_message: The error_message of this GetEc2DeepInspectionConfigurationResponse.
        :param org_package_paths: The org_package_paths of this GetEc2DeepInspectionConfigurationResponse.
        :param package_paths: The package_paths of this GetEc2DeepInspectionConfigurationResponse.
        :param status: The status of this GetEc2DeepInspectionConfigurationResponse.
        """
        self.openapi_types = {
            'error_message': str,
            'org_package_paths': List,
            'package_paths': List,
            'status': Ec2DeepInspectionStatus
        }

        self.attribute_map = {
            'error_message': 'errorMessage',
            'org_package_paths': 'orgPackagePaths',
            'package_paths': 'packagePaths',
            'status': 'status'
        }

        self._error_message = error_message
        self._org_package_paths = org_package_paths
        self._package_paths = package_paths
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetEc2DeepInspectionConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetEc2DeepInspectionConfigurationResponse of this GetEc2DeepInspectionConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_message(self):
        """Gets the error_message of this GetEc2DeepInspectionConfigurationResponse.


        :return: The error_message of this GetEc2DeepInspectionConfigurationResponse.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this GetEc2DeepInspectionConfigurationResponse.


        :param error_message: The error_message of this GetEc2DeepInspectionConfigurationResponse.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def org_package_paths(self):
        """Gets the org_package_paths of this GetEc2DeepInspectionConfigurationResponse.


        :return: The org_package_paths of this GetEc2DeepInspectionConfigurationResponse.
        :rtype: List
        """
        return self._org_package_paths

    @org_package_paths.setter
    def org_package_paths(self, org_package_paths):
        """Sets the org_package_paths of this GetEc2DeepInspectionConfigurationResponse.


        :param org_package_paths: The org_package_paths of this GetEc2DeepInspectionConfigurationResponse.
        :type org_package_paths: List
        """

        self._org_package_paths = org_package_paths

    @property
    def package_paths(self):
        """Gets the package_paths of this GetEc2DeepInspectionConfigurationResponse.


        :return: The package_paths of this GetEc2DeepInspectionConfigurationResponse.
        :rtype: List
        """
        return self._package_paths

    @package_paths.setter
    def package_paths(self, package_paths):
        """Sets the package_paths of this GetEc2DeepInspectionConfigurationResponse.


        :param package_paths: The package_paths of this GetEc2DeepInspectionConfigurationResponse.
        :type package_paths: List
        """

        self._package_paths = package_paths

    @property
    def status(self):
        """Gets the status of this GetEc2DeepInspectionConfigurationResponse.


        :return: The status of this GetEc2DeepInspectionConfigurationResponse.
        :rtype: Ec2DeepInspectionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetEc2DeepInspectionConfigurationResponse.


        :param status: The status of this GetEc2DeepInspectionConfigurationResponse.
        :type status: Ec2DeepInspectionStatus
        """

        self._status = status
