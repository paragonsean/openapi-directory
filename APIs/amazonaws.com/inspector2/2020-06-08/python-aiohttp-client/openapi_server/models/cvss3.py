# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Cvss3(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_score: float=None, scoring_vector: str=None):
        """Cvss3 - a model defined in OpenAPI

        :param base_score: The base_score of this Cvss3.
        :param scoring_vector: The scoring_vector of this Cvss3.
        """
        self.openapi_types = {
            'base_score': float,
            'scoring_vector': str
        }

        self.attribute_map = {
            'base_score': 'baseScore',
            'scoring_vector': 'scoringVector'
        }

        self._base_score = base_score
        self._scoring_vector = scoring_vector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Cvss3':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cvss3 of this Cvss3.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_score(self):
        """Gets the base_score of this Cvss3.


        :return: The base_score of this Cvss3.
        :rtype: float
        """
        return self._base_score

    @base_score.setter
    def base_score(self, base_score):
        """Sets the base_score of this Cvss3.


        :param base_score: The base_score of this Cvss3.
        :type base_score: float
        """

        self._base_score = base_score

    @property
    def scoring_vector(self):
        """Gets the scoring_vector of this Cvss3.


        :return: The scoring_vector of this Cvss3.
        :rtype: str
        """
        return self._scoring_vector

    @scoring_vector.setter
    def scoring_vector(self, scoring_vector):
        """Sets the scoring_vector of this Cvss3.


        :param scoring_vector: The scoring_vector of this Cvss3.
        :type scoring_vector: str
        """

        self._scoring_vector = scoring_vector
