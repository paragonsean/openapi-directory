# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class EnableDelegatedAdminAccountRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_token: str=None, delegated_admin_account_id: str=None):
        """EnableDelegatedAdminAccountRequest - a model defined in OpenAPI

        :param client_token: The client_token of this EnableDelegatedAdminAccountRequest.
        :param delegated_admin_account_id: The delegated_admin_account_id of this EnableDelegatedAdminAccountRequest.
        """
        self.openapi_types = {
            'client_token': str,
            'delegated_admin_account_id': str
        }

        self.attribute_map = {
            'client_token': 'clientToken',
            'delegated_admin_account_id': 'delegatedAdminAccountId'
        }

        self._client_token = client_token
        self._delegated_admin_account_id = delegated_admin_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnableDelegatedAdminAccountRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnableDelegatedAdminAccount_request of this EnableDelegatedAdminAccountRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_token(self):
        """Gets the client_token of this EnableDelegatedAdminAccountRequest.

        The idempotency token for the request.

        :return: The client_token of this EnableDelegatedAdminAccountRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this EnableDelegatedAdminAccountRequest.

        The idempotency token for the request.

        :param client_token: The client_token of this EnableDelegatedAdminAccountRequest.
        :type client_token: str
        """
        if client_token is not None and len(client_token) > 64:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `64`")
        if client_token is not None and len(client_token) < 1:
            raise ValueError("Invalid value for `client_token`, length must be greater than or equal to `1`")

        self._client_token = client_token

    @property
    def delegated_admin_account_id(self):
        """Gets the delegated_admin_account_id of this EnableDelegatedAdminAccountRequest.

        The Amazon Web Services account ID of the Amazon Inspector delegated administrator.

        :return: The delegated_admin_account_id of this EnableDelegatedAdminAccountRequest.
        :rtype: str
        """
        return self._delegated_admin_account_id

    @delegated_admin_account_id.setter
    def delegated_admin_account_id(self, delegated_admin_account_id):
        """Sets the delegated_admin_account_id of this EnableDelegatedAdminAccountRequest.

        The Amazon Web Services account ID of the Amazon Inspector delegated administrator.

        :param delegated_admin_account_id: The delegated_admin_account_id of this EnableDelegatedAdminAccountRequest.
        :type delegated_admin_account_id: str
        """
        if delegated_admin_account_id is None:
            raise ValueError("Invalid value for `delegated_admin_account_id`, must not be `None`")
        if delegated_admin_account_id is not None and len(delegated_admin_account_id) > 12:
            raise ValueError("Invalid value for `delegated_admin_account_id`, length must be less than or equal to `12`")
        if delegated_admin_account_id is not None and len(delegated_admin_account_id) < 12:
            raise ValueError("Invalid value for `delegated_admin_account_id`, length must be greater than or equal to `12`")
        if delegated_admin_account_id is not None and not re.search(r'^\d{12}$', delegated_admin_account_id):
            raise ValueError("Invalid value for `delegated_admin_account_id`, must be a follow pattern or equal to `/^\d{12}$/`")

        self._delegated_admin_account_id = delegated_admin_account_id
