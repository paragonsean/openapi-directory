# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.free_trial_status import FreeTrialStatus
from openapi_server.models.free_trial_type import FreeTrialType
from openapi_server import util


class FreeTrialInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end: datetime=None, start: datetime=None, status: FreeTrialStatus=None, type: FreeTrialType=None):
        """FreeTrialInfo - a model defined in OpenAPI

        :param end: The end of this FreeTrialInfo.
        :param start: The start of this FreeTrialInfo.
        :param status: The status of this FreeTrialInfo.
        :param type: The type of this FreeTrialInfo.
        """
        self.openapi_types = {
            'end': datetime,
            'start': datetime,
            'status': FreeTrialStatus,
            'type': FreeTrialType
        }

        self.attribute_map = {
            'end': 'end',
            'start': 'start',
            'status': 'status',
            'type': 'type'
        }

        self._end = end
        self._start = start
        self._status = status
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FreeTrialInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FreeTrialInfo of this FreeTrialInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end(self):
        """Gets the end of this FreeTrialInfo.


        :return: The end of this FreeTrialInfo.
        :rtype: datetime
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this FreeTrialInfo.


        :param end: The end of this FreeTrialInfo.
        :type end: datetime
        """
        if end is None:
            raise ValueError("Invalid value for `end`, must not be `None`")

        self._end = end

    @property
    def start(self):
        """Gets the start of this FreeTrialInfo.


        :return: The start of this FreeTrialInfo.
        :rtype: datetime
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this FreeTrialInfo.


        :param start: The start of this FreeTrialInfo.
        :type start: datetime
        """
        if start is None:
            raise ValueError("Invalid value for `start`, must not be `None`")

        self._start = start

    @property
    def status(self):
        """Gets the status of this FreeTrialInfo.


        :return: The status of this FreeTrialInfo.
        :rtype: FreeTrialStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this FreeTrialInfo.


        :param status: The status of this FreeTrialInfo.
        :type status: FreeTrialStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def type(self):
        """Gets the type of this FreeTrialInfo.


        :return: The type of this FreeTrialInfo.
        :rtype: FreeTrialType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this FreeTrialInfo.


        :param type: The type of this FreeTrialInfo.
        :type type: FreeTrialType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
