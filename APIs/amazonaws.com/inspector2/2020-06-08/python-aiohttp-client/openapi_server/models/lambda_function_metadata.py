# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.runtime import Runtime
from openapi_server import util


class LambdaFunctionMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, function_name: str=None, function_tags: Dict=None, layers: List=None, runtime: Runtime=None):
        """LambdaFunctionMetadata - a model defined in OpenAPI

        :param function_name: The function_name of this LambdaFunctionMetadata.
        :param function_tags: The function_tags of this LambdaFunctionMetadata.
        :param layers: The layers of this LambdaFunctionMetadata.
        :param runtime: The runtime of this LambdaFunctionMetadata.
        """
        self.openapi_types = {
            'function_name': str,
            'function_tags': Dict,
            'layers': List,
            'runtime': Runtime
        }

        self.attribute_map = {
            'function_name': 'functionName',
            'function_tags': 'functionTags',
            'layers': 'layers',
            'runtime': 'runtime'
        }

        self._function_name = function_name
        self._function_tags = function_tags
        self._layers = layers
        self._runtime = runtime

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LambdaFunctionMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LambdaFunctionMetadata of this LambdaFunctionMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def function_name(self):
        """Gets the function_name of this LambdaFunctionMetadata.


        :return: The function_name of this LambdaFunctionMetadata.
        :rtype: str
        """
        return self._function_name

    @function_name.setter
    def function_name(self, function_name):
        """Sets the function_name of this LambdaFunctionMetadata.


        :param function_name: The function_name of this LambdaFunctionMetadata.
        :type function_name: str
        """

        self._function_name = function_name

    @property
    def function_tags(self):
        """Gets the function_tags of this LambdaFunctionMetadata.


        :return: The function_tags of this LambdaFunctionMetadata.
        :rtype: Dict
        """
        return self._function_tags

    @function_tags.setter
    def function_tags(self, function_tags):
        """Sets the function_tags of this LambdaFunctionMetadata.


        :param function_tags: The function_tags of this LambdaFunctionMetadata.
        :type function_tags: Dict
        """

        self._function_tags = function_tags

    @property
    def layers(self):
        """Gets the layers of this LambdaFunctionMetadata.


        :return: The layers of this LambdaFunctionMetadata.
        :rtype: List
        """
        return self._layers

    @layers.setter
    def layers(self, layers):
        """Sets the layers of this LambdaFunctionMetadata.


        :param layers: The layers of this LambdaFunctionMetadata.
        :type layers: List
        """

        self._layers = layers

    @property
    def runtime(self):
        """Gets the runtime of this LambdaFunctionMetadata.


        :return: The runtime of this LambdaFunctionMetadata.
        :rtype: Runtime
        """
        return self._runtime

    @runtime.setter
    def runtime(self, runtime):
        """Sets the runtime of this LambdaFunctionMetadata.


        :param runtime: The runtime of this LambdaFunctionMetadata.
        :type runtime: Runtime
        """

        self._runtime = runtime
