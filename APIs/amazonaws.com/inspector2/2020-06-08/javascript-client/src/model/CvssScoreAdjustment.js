/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CvssScoreAdjustment model module.
 * @module model/CvssScoreAdjustment
 * @version 2020-06-08
 */
class CvssScoreAdjustment {
    /**
     * Constructs a new <code>CvssScoreAdjustment</code>.
     * Details on adjustments Amazon Inspector made to the CVSS score for a finding.
     * @alias module:model/CvssScoreAdjustment
     * @param metric {String} 
     * @param reason {String} 
     */
    constructor(metric, reason) { 
        
        CvssScoreAdjustment.initialize(this, metric, reason);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, metric, reason) { 
        obj['metric'] = metric;
        obj['reason'] = reason;
    }

    /**
     * Constructs a <code>CvssScoreAdjustment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CvssScoreAdjustment} obj Optional instance to populate.
     * @return {module:model/CvssScoreAdjustment} The populated <code>CvssScoreAdjustment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CvssScoreAdjustment();

            if (data.hasOwnProperty('metric')) {
                obj['metric'] = ApiClient.convertToType(data['metric'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CvssScoreAdjustment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CvssScoreAdjustment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CvssScoreAdjustment.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `metric`
        if (data['metric']) { // data not null
          String.validateJSON(data['metric']);
        }
        // validate the optional field `reason`
        if (data['reason']) { // data not null
          String.validateJSON(data['reason']);
        }

        return true;
    }


}

CvssScoreAdjustment.RequiredProperties = ["metric", "reason"];

/**
 * @member {String} metric
 */
CvssScoreAdjustment.prototype['metric'] = undefined;

/**
 * @member {String} reason
 */
CvssScoreAdjustment.prototype['reason'] = undefined;






export default CvssScoreAdjustment;

