/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateFilterRequestFilterCriteria from './CreateFilterRequestFilterCriteria';
import ListFindingsRequestSortCriteria from './ListFindingsRequestSortCriteria';

/**
 * The ListFindingsRequest model module.
 * @module model/ListFindingsRequest
 * @version 2020-06-08
 */
class ListFindingsRequest {
    /**
     * Constructs a new <code>ListFindingsRequest</code>.
     * @alias module:model/ListFindingsRequest
     */
    constructor() { 
        
        ListFindingsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListFindingsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListFindingsRequest} obj Optional instance to populate.
     * @return {module:model/ListFindingsRequest} The populated <code>ListFindingsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListFindingsRequest();

            if (data.hasOwnProperty('filterCriteria')) {
                obj['filterCriteria'] = CreateFilterRequestFilterCriteria.constructFromObject(data['filterCriteria']);
            }
            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
            if (data.hasOwnProperty('nextToken')) {
                obj['nextToken'] = ApiClient.convertToType(data['nextToken'], 'String');
            }
            if (data.hasOwnProperty('sortCriteria')) {
                obj['sortCriteria'] = ListFindingsRequestSortCriteria.constructFromObject(data['sortCriteria']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListFindingsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListFindingsRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `filterCriteria`
        if (data['filterCriteria']) { // data not null
          CreateFilterRequestFilterCriteria.validateJSON(data['filterCriteria']);
        }
        // ensure the json data is a string
        if (data['nextToken'] && !(typeof data['nextToken'] === 'string' || data['nextToken'] instanceof String)) {
            throw new Error("Expected the field `nextToken` to be a primitive type in the JSON string but got " + data['nextToken']);
        }
        // validate the optional field `sortCriteria`
        if (data['sortCriteria']) { // data not null
          ListFindingsRequestSortCriteria.validateJSON(data['sortCriteria']);
        }

        return true;
    }


}



/**
 * @member {module:model/CreateFilterRequestFilterCriteria} filterCriteria
 */
ListFindingsRequest.prototype['filterCriteria'] = undefined;

/**
 * The maximum number of results to return in the response.
 * @member {Number} maxResults
 */
ListFindingsRequest.prototype['maxResults'] = undefined;

/**
 * A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.
 * @member {String} nextToken
 */
ListFindingsRequest.prototype['nextToken'] = undefined;

/**
 * @member {module:model/ListFindingsRequestSortCriteria} sortCriteria
 */
ListFindingsRequest.prototype['sortCriteria'] = undefined;






export default ListFindingsRequest;

