/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageLayerSortBy from './ImageLayerSortBy';
import SortOrder from './SortOrder';

/**
 * The ImageLayerAggregation model module.
 * @module model/ImageLayerAggregation
 * @version 2020-06-08
 */
class ImageLayerAggregation {
    /**
     * Constructs a new <code>ImageLayerAggregation</code>.
     * The details that define an aggregation based on container image layers.
     * @alias module:model/ImageLayerAggregation
     */
    constructor() { 
        
        ImageLayerAggregation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageLayerAggregation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageLayerAggregation} obj Optional instance to populate.
     * @return {module:model/ImageLayerAggregation} The populated <code>ImageLayerAggregation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageLayerAggregation();

            if (data.hasOwnProperty('layerHashes')) {
                obj['layerHashes'] = ApiClient.convertToType(data['layerHashes'], Array);
            }
            if (data.hasOwnProperty('repositories')) {
                obj['repositories'] = ApiClient.convertToType(data['repositories'], Array);
            }
            if (data.hasOwnProperty('resourceIds')) {
                obj['resourceIds'] = ApiClient.convertToType(data['resourceIds'], Array);
            }
            if (data.hasOwnProperty('sortBy')) {
                obj['sortBy'] = ApiClient.convertToType(data['sortBy'], ImageLayerSortBy);
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], SortOrder);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageLayerAggregation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageLayerAggregation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `layerHashes`
        if (data['layerHashes']) { // data not null
          Array.validateJSON(data['layerHashes']);
        }
        // validate the optional field `repositories`
        if (data['repositories']) { // data not null
          Array.validateJSON(data['repositories']);
        }
        // validate the optional field `resourceIds`
        if (data['resourceIds']) { // data not null
          Array.validateJSON(data['resourceIds']);
        }
        // validate the optional field `sortBy`
        if (data['sortBy']) { // data not null
          ImageLayerSortBy.validateJSON(data['sortBy']);
        }
        // validate the optional field `sortOrder`
        if (data['sortOrder']) { // data not null
          SortOrder.validateJSON(data['sortOrder']);
        }

        return true;
    }


}



/**
 * @member {Array} layerHashes
 */
ImageLayerAggregation.prototype['layerHashes'] = undefined;

/**
 * @member {Array} repositories
 */
ImageLayerAggregation.prototype['repositories'] = undefined;

/**
 * @member {Array} resourceIds
 */
ImageLayerAggregation.prototype['resourceIds'] = undefined;

/**
 * @member {module:model/ImageLayerSortBy} sortBy
 */
ImageLayerAggregation.prototype['sortBy'] = undefined;

/**
 * @member {module:model/SortOrder} sortOrder
 */
ImageLayerAggregation.prototype['sortOrder'] = undefined;






export default ImageLayerAggregation;

