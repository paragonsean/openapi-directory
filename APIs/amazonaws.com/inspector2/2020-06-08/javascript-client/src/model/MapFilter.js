/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MapComparison from './MapComparison';

/**
 * The MapFilter model module.
 * @module model/MapFilter
 * @version 2020-06-08
 */
class MapFilter {
    /**
     * Constructs a new <code>MapFilter</code>.
     * An object that describes details of a map filter.
     * @alias module:model/MapFilter
     * @param comparison {module:model/MapComparison} 
     * @param key {String} 
     */
    constructor(comparison, key) { 
        
        MapFilter.initialize(this, comparison, key);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, comparison, key) { 
        obj['comparison'] = comparison;
        obj['key'] = key;
    }

    /**
     * Constructs a <code>MapFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MapFilter} obj Optional instance to populate.
     * @return {module:model/MapFilter} The populated <code>MapFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MapFilter();

            if (data.hasOwnProperty('comparison')) {
                obj['comparison'] = ApiClient.convertToType(data['comparison'], MapComparison);
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MapFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MapFilter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MapFilter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `comparison`
        if (data['comparison']) { // data not null
          MapComparison.validateJSON(data['comparison']);
        }
        // validate the optional field `key`
        if (data['key']) { // data not null
          String.validateJSON(data['key']);
        }
        // validate the optional field `value`
        if (data['value']) { // data not null
          String.validateJSON(data['value']);
        }

        return true;
    }


}

MapFilter.RequiredProperties = ["comparison", "key"];

/**
 * @member {module:model/MapComparison} comparison
 */
MapFilter.prototype['comparison'] = undefined;

/**
 * @member {String} key
 */
MapFilter.prototype['key'] = undefined;

/**
 * @member {String} value
 */
MapFilter.prototype['value'] = undefined;






export default MapFilter;

