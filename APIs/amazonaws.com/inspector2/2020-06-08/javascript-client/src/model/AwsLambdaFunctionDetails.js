/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AwsLambdaFunctionDetailsVpcConfig from './AwsLambdaFunctionDetailsVpcConfig';
import PackageType from './PackageType';
import Runtime from './Runtime';

/**
 * The AwsLambdaFunctionDetails model module.
 * @module model/AwsLambdaFunctionDetails
 * @version 2020-06-08
 */
class AwsLambdaFunctionDetails {
    /**
     * Constructs a new <code>AwsLambdaFunctionDetails</code>.
     *  A summary of information about the AWS Lambda function.
     * @alias module:model/AwsLambdaFunctionDetails
     * @param codeSha256 {String} 
     * @param executionRoleArn {String} 
     * @param functionName {String} 
     * @param runtime {module:model/Runtime} 
     * @param version {String} 
     */
    constructor(codeSha256, executionRoleArn, functionName, runtime, version) { 
        
        AwsLambdaFunctionDetails.initialize(this, codeSha256, executionRoleArn, functionName, runtime, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, codeSha256, executionRoleArn, functionName, runtime, version) { 
        obj['codeSha256'] = codeSha256;
        obj['executionRoleArn'] = executionRoleArn;
        obj['functionName'] = functionName;
        obj['runtime'] = runtime;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>AwsLambdaFunctionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AwsLambdaFunctionDetails} obj Optional instance to populate.
     * @return {module:model/AwsLambdaFunctionDetails} The populated <code>AwsLambdaFunctionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AwsLambdaFunctionDetails();

            if (data.hasOwnProperty('architectures')) {
                obj['architectures'] = ApiClient.convertToType(data['architectures'], Array);
            }
            if (data.hasOwnProperty('codeSha256')) {
                obj['codeSha256'] = ApiClient.convertToType(data['codeSha256'], 'String');
            }
            if (data.hasOwnProperty('executionRoleArn')) {
                obj['executionRoleArn'] = ApiClient.convertToType(data['executionRoleArn'], 'String');
            }
            if (data.hasOwnProperty('functionName')) {
                obj['functionName'] = ApiClient.convertToType(data['functionName'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedAt')) {
                obj['lastModifiedAt'] = ApiClient.convertToType(data['lastModifiedAt'], 'Date');
            }
            if (data.hasOwnProperty('layers')) {
                obj['layers'] = ApiClient.convertToType(data['layers'], Array);
            }
            if (data.hasOwnProperty('packageType')) {
                obj['packageType'] = ApiClient.convertToType(data['packageType'], PackageType);
            }
            if (data.hasOwnProperty('runtime')) {
                obj['runtime'] = ApiClient.convertToType(data['runtime'], Runtime);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('vpcConfig')) {
                obj['vpcConfig'] = AwsLambdaFunctionDetailsVpcConfig.constructFromObject(data['vpcConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AwsLambdaFunctionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AwsLambdaFunctionDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AwsLambdaFunctionDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `architectures`
        if (data['architectures']) { // data not null
          Array.validateJSON(data['architectures']);
        }
        // validate the optional field `codeSha256`
        if (data['codeSha256']) { // data not null
          String.validateJSON(data['codeSha256']);
        }
        // validate the optional field `executionRoleArn`
        if (data['executionRoleArn']) { // data not null
          String.validateJSON(data['executionRoleArn']);
        }
        // validate the optional field `functionName`
        if (data['functionName']) { // data not null
          String.validateJSON(data['functionName']);
        }
        // validate the optional field `lastModifiedAt`
        if (data['lastModifiedAt']) { // data not null
          Date.validateJSON(data['lastModifiedAt']);
        }
        // validate the optional field `layers`
        if (data['layers']) { // data not null
          Array.validateJSON(data['layers']);
        }
        // validate the optional field `packageType`
        if (data['packageType']) { // data not null
          PackageType.validateJSON(data['packageType']);
        }
        // validate the optional field `runtime`
        if (data['runtime']) { // data not null
          Runtime.validateJSON(data['runtime']);
        }
        // validate the optional field `version`
        if (data['version']) { // data not null
          String.validateJSON(data['version']);
        }
        // validate the optional field `vpcConfig`
        if (data['vpcConfig']) { // data not null
          AwsLambdaFunctionDetailsVpcConfig.validateJSON(data['vpcConfig']);
        }

        return true;
    }


}

AwsLambdaFunctionDetails.RequiredProperties = ["codeSha256", "executionRoleArn", "functionName", "runtime", "version"];

/**
 * @member {Array} architectures
 */
AwsLambdaFunctionDetails.prototype['architectures'] = undefined;

/**
 * @member {String} codeSha256
 */
AwsLambdaFunctionDetails.prototype['codeSha256'] = undefined;

/**
 * @member {String} executionRoleArn
 */
AwsLambdaFunctionDetails.prototype['executionRoleArn'] = undefined;

/**
 * @member {String} functionName
 */
AwsLambdaFunctionDetails.prototype['functionName'] = undefined;

/**
 * @member {Date} lastModifiedAt
 */
AwsLambdaFunctionDetails.prototype['lastModifiedAt'] = undefined;

/**
 * @member {Array} layers
 */
AwsLambdaFunctionDetails.prototype['layers'] = undefined;

/**
 * @member {module:model/PackageType} packageType
 */
AwsLambdaFunctionDetails.prototype['packageType'] = undefined;

/**
 * @member {module:model/Runtime} runtime
 */
AwsLambdaFunctionDetails.prototype['runtime'] = undefined;

/**
 * @member {String} version
 */
AwsLambdaFunctionDetails.prototype['version'] = undefined;

/**
 * @member {module:model/AwsLambdaFunctionDetailsVpcConfig} vpcConfig
 */
AwsLambdaFunctionDetails.prototype['vpcConfig'] = undefined;






export default AwsLambdaFunctionDetails;

