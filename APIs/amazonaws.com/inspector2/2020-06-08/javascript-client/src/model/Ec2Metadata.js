/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Ec2Platform from './Ec2Platform';

/**
 * The Ec2Metadata model module.
 * @module model/Ec2Metadata
 * @version 2020-06-08
 */
class Ec2Metadata {
    /**
     * Constructs a new <code>Ec2Metadata</code>.
     * Meta data details of an Amazon EC2 instance.
     * @alias module:model/Ec2Metadata
     */
    constructor() { 
        
        Ec2Metadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Ec2Metadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Ec2Metadata} obj Optional instance to populate.
     * @return {module:model/Ec2Metadata} The populated <code>Ec2Metadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Ec2Metadata();

            if (data.hasOwnProperty('amiId')) {
                obj['amiId'] = ApiClient.convertToType(data['amiId'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], Ec2Platform);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Ec2Metadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Ec2Metadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `amiId`
        if (data['amiId']) { // data not null
          String.validateJSON(data['amiId']);
        }
        // validate the optional field `platform`
        if (data['platform']) { // data not null
          Ec2Platform.validateJSON(data['platform']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }

        return true;
    }


}



/**
 * @member {String} amiId
 */
Ec2Metadata.prototype['amiId'] = undefined;

/**
 * @member {module:model/Ec2Platform} platform
 */
Ec2Metadata.prototype['platform'] = undefined;

/**
 * @member {Object} tags
 */
Ec2Metadata.prototype['tags'] = undefined;






export default Ec2Metadata;

