/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Operation from './Operation';
import Service from './Service';

/**
 * The Permission model module.
 * @module model/Permission
 * @version 2020-06-08
 */
class Permission {
    /**
     * Constructs a new <code>Permission</code>.
     * Contains information on the permissions an account has within Amazon Inspector.
     * @alias module:model/Permission
     * @param operation {module:model/Operation} 
     * @param service {module:model/Service} 
     */
    constructor(operation, service) { 
        
        Permission.initialize(this, operation, service);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, operation, service) { 
        obj['operation'] = operation;
        obj['service'] = service;
    }

    /**
     * Constructs a <code>Permission</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Permission} obj Optional instance to populate.
     * @return {module:model/Permission} The populated <code>Permission</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Permission();

            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], Operation);
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], Service);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Permission</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Permission</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Permission.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `operation`
        if (data['operation']) { // data not null
          Operation.validateJSON(data['operation']);
        }
        // validate the optional field `service`
        if (data['service']) { // data not null
          Service.validateJSON(data['service']);
        }

        return true;
    }


}

Permission.RequiredProperties = ["operation", "service"];

/**
 * @member {module:model/Operation} operation
 */
Permission.prototype['operation'] = undefined;

/**
 * @member {module:model/Service} service
 */
Permission.prototype['service'] = undefined;






export default Permission;

