/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VulnerabilityAtigData from './VulnerabilityAtigData';
import VulnerabilityCisaData from './VulnerabilityCisaData';
import VulnerabilityCvss2 from './VulnerabilityCvss2';
import VulnerabilityCvss3 from './VulnerabilityCvss3';
import VulnerabilityEpss from './VulnerabilityEpss';
import VulnerabilityExploitObserved from './VulnerabilityExploitObserved';
import VulnerabilitySource from './VulnerabilitySource';

/**
 * The Vulnerability model module.
 * @module model/Vulnerability
 * @version 2020-06-08
 */
class Vulnerability {
    /**
     * Constructs a new <code>Vulnerability</code>.
     * Contains details about a specific vulnerability Amazon Inspector can detect.
     * @alias module:model/Vulnerability
     * @param id {String} 
     */
    constructor(id) { 
        
        Vulnerability.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>Vulnerability</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Vulnerability} obj Optional instance to populate.
     * @return {module:model/Vulnerability} The populated <code>Vulnerability</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Vulnerability();

            if (data.hasOwnProperty('atigData')) {
                obj['atigData'] = VulnerabilityAtigData.constructFromObject(data['atigData']);
            }
            if (data.hasOwnProperty('cisaData')) {
                obj['cisaData'] = VulnerabilityCisaData.constructFromObject(data['cisaData']);
            }
            if (data.hasOwnProperty('cvss2')) {
                obj['cvss2'] = VulnerabilityCvss2.constructFromObject(data['cvss2']);
            }
            if (data.hasOwnProperty('cvss3')) {
                obj['cvss3'] = VulnerabilityCvss3.constructFromObject(data['cvss3']);
            }
            if (data.hasOwnProperty('cwes')) {
                obj['cwes'] = ApiClient.convertToType(data['cwes'], Array);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('detectionPlatforms')) {
                obj['detectionPlatforms'] = ApiClient.convertToType(data['detectionPlatforms'], Array);
            }
            if (data.hasOwnProperty('epss')) {
                obj['epss'] = VulnerabilityEpss.constructFromObject(data['epss']);
            }
            if (data.hasOwnProperty('exploitObserved')) {
                obj['exploitObserved'] = VulnerabilityExploitObserved.constructFromObject(data['exploitObserved']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('referenceUrls')) {
                obj['referenceUrls'] = ApiClient.convertToType(data['referenceUrls'], Array);
            }
            if (data.hasOwnProperty('relatedVulnerabilities')) {
                obj['relatedVulnerabilities'] = ApiClient.convertToType(data['relatedVulnerabilities'], Array);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], VulnerabilitySource);
            }
            if (data.hasOwnProperty('sourceUrl')) {
                obj['sourceUrl'] = ApiClient.convertToType(data['sourceUrl'], 'String');
            }
            if (data.hasOwnProperty('vendorCreatedAt')) {
                obj['vendorCreatedAt'] = ApiClient.convertToType(data['vendorCreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('vendorSeverity')) {
                obj['vendorSeverity'] = ApiClient.convertToType(data['vendorSeverity'], 'String');
            }
            if (data.hasOwnProperty('vendorUpdatedAt')) {
                obj['vendorUpdatedAt'] = ApiClient.convertToType(data['vendorUpdatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Vulnerability</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Vulnerability</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Vulnerability.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `atigData`
        if (data['atigData']) { // data not null
          VulnerabilityAtigData.validateJSON(data['atigData']);
        }
        // validate the optional field `cisaData`
        if (data['cisaData']) { // data not null
          VulnerabilityCisaData.validateJSON(data['cisaData']);
        }
        // validate the optional field `cvss2`
        if (data['cvss2']) { // data not null
          VulnerabilityCvss2.validateJSON(data['cvss2']);
        }
        // validate the optional field `cvss3`
        if (data['cvss3']) { // data not null
          VulnerabilityCvss3.validateJSON(data['cvss3']);
        }
        // validate the optional field `cwes`
        if (data['cwes']) { // data not null
          Array.validateJSON(data['cwes']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `detectionPlatforms`
        if (data['detectionPlatforms']) { // data not null
          Array.validateJSON(data['detectionPlatforms']);
        }
        // validate the optional field `epss`
        if (data['epss']) { // data not null
          VulnerabilityEpss.validateJSON(data['epss']);
        }
        // validate the optional field `exploitObserved`
        if (data['exploitObserved']) { // data not null
          VulnerabilityExploitObserved.validateJSON(data['exploitObserved']);
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          String.validateJSON(data['id']);
        }
        // validate the optional field `referenceUrls`
        if (data['referenceUrls']) { // data not null
          Array.validateJSON(data['referenceUrls']);
        }
        // validate the optional field `relatedVulnerabilities`
        if (data['relatedVulnerabilities']) { // data not null
          Array.validateJSON(data['relatedVulnerabilities']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          VulnerabilitySource.validateJSON(data['source']);
        }
        // validate the optional field `sourceUrl`
        if (data['sourceUrl']) { // data not null
          String.validateJSON(data['sourceUrl']);
        }
        // validate the optional field `vendorCreatedAt`
        if (data['vendorCreatedAt']) { // data not null
          Date.validateJSON(data['vendorCreatedAt']);
        }
        // validate the optional field `vendorSeverity`
        if (data['vendorSeverity']) { // data not null
          String.validateJSON(data['vendorSeverity']);
        }
        // validate the optional field `vendorUpdatedAt`
        if (data['vendorUpdatedAt']) { // data not null
          Date.validateJSON(data['vendorUpdatedAt']);
        }

        return true;
    }


}

Vulnerability.RequiredProperties = ["id"];

/**
 * @member {module:model/VulnerabilityAtigData} atigData
 */
Vulnerability.prototype['atigData'] = undefined;

/**
 * @member {module:model/VulnerabilityCisaData} cisaData
 */
Vulnerability.prototype['cisaData'] = undefined;

/**
 * @member {module:model/VulnerabilityCvss2} cvss2
 */
Vulnerability.prototype['cvss2'] = undefined;

/**
 * @member {module:model/VulnerabilityCvss3} cvss3
 */
Vulnerability.prototype['cvss3'] = undefined;

/**
 * @member {Array} cwes
 */
Vulnerability.prototype['cwes'] = undefined;

/**
 * @member {String} description
 */
Vulnerability.prototype['description'] = undefined;

/**
 * @member {Array} detectionPlatforms
 */
Vulnerability.prototype['detectionPlatforms'] = undefined;

/**
 * @member {module:model/VulnerabilityEpss} epss
 */
Vulnerability.prototype['epss'] = undefined;

/**
 * @member {module:model/VulnerabilityExploitObserved} exploitObserved
 */
Vulnerability.prototype['exploitObserved'] = undefined;

/**
 * @member {String} id
 */
Vulnerability.prototype['id'] = undefined;

/**
 * @member {Array} referenceUrls
 */
Vulnerability.prototype['referenceUrls'] = undefined;

/**
 * @member {Array} relatedVulnerabilities
 */
Vulnerability.prototype['relatedVulnerabilities'] = undefined;

/**
 * @member {module:model/VulnerabilitySource} source
 */
Vulnerability.prototype['source'] = undefined;

/**
 * @member {String} sourceUrl
 */
Vulnerability.prototype['sourceUrl'] = undefined;

/**
 * @member {Date} vendorCreatedAt
 */
Vulnerability.prototype['vendorCreatedAt'] = undefined;

/**
 * @member {String} vendorSeverity
 */
Vulnerability.prototype['vendorSeverity'] = undefined;

/**
 * @member {Date} vendorUpdatedAt
 */
Vulnerability.prototype['vendorUpdatedAt'] = undefined;






export default Vulnerability;

