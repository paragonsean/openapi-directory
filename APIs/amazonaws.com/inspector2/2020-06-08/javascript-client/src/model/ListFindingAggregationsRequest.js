/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ListFindingAggregationsRequestAggregationRequest from './ListFindingAggregationsRequestAggregationRequest';
import StringFilter from './StringFilter';

/**
 * The ListFindingAggregationsRequest model module.
 * @module model/ListFindingAggregationsRequest
 * @version 2020-06-08
 */
class ListFindingAggregationsRequest {
    /**
     * Constructs a new <code>ListFindingAggregationsRequest</code>.
     * @alias module:model/ListFindingAggregationsRequest
     * @param aggregationType {module:model/ListFindingAggregationsRequest.AggregationTypeEnum} The type of the aggregation request.
     */
    constructor(aggregationType) { 
        
        ListFindingAggregationsRequest.initialize(this, aggregationType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, aggregationType) { 
        obj['aggregationType'] = aggregationType;
    }

    /**
     * Constructs a <code>ListFindingAggregationsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListFindingAggregationsRequest} obj Optional instance to populate.
     * @return {module:model/ListFindingAggregationsRequest} The populated <code>ListFindingAggregationsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListFindingAggregationsRequest();

            if (data.hasOwnProperty('accountIds')) {
                obj['accountIds'] = ApiClient.convertToType(data['accountIds'], [StringFilter]);
            }
            if (data.hasOwnProperty('aggregationRequest')) {
                obj['aggregationRequest'] = ListFindingAggregationsRequestAggregationRequest.constructFromObject(data['aggregationRequest']);
            }
            if (data.hasOwnProperty('aggregationType')) {
                obj['aggregationType'] = ApiClient.convertToType(data['aggregationType'], 'String');
            }
            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
            if (data.hasOwnProperty('nextToken')) {
                obj['nextToken'] = ApiClient.convertToType(data['nextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListFindingAggregationsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListFindingAggregationsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListFindingAggregationsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['accountIds']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accountIds'])) {
                throw new Error("Expected the field `accountIds` to be an array in the JSON data but got " + data['accountIds']);
            }
            // validate the optional field `accountIds` (array)
            for (const item of data['accountIds']) {
                StringFilter.validateJSON(item);
            };
        }
        // validate the optional field `aggregationRequest`
        if (data['aggregationRequest']) { // data not null
          ListFindingAggregationsRequestAggregationRequest.validateJSON(data['aggregationRequest']);
        }
        // ensure the json data is a string
        if (data['aggregationType'] && !(typeof data['aggregationType'] === 'string' || data['aggregationType'] instanceof String)) {
            throw new Error("Expected the field `aggregationType` to be a primitive type in the JSON string but got " + data['aggregationType']);
        }
        // ensure the json data is a string
        if (data['nextToken'] && !(typeof data['nextToken'] === 'string' || data['nextToken'] instanceof String)) {
            throw new Error("Expected the field `nextToken` to be a primitive type in the JSON string but got " + data['nextToken']);
        }

        return true;
    }


}

ListFindingAggregationsRequest.RequiredProperties = ["aggregationType"];

/**
 * The Amazon Web Services account IDs to retrieve finding aggregation data for.
 * @member {Array.<module:model/StringFilter>} accountIds
 */
ListFindingAggregationsRequest.prototype['accountIds'] = undefined;

/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequest} aggregationRequest
 */
ListFindingAggregationsRequest.prototype['aggregationRequest'] = undefined;

/**
 * The type of the aggregation request.
 * @member {module:model/ListFindingAggregationsRequest.AggregationTypeEnum} aggregationType
 */
ListFindingAggregationsRequest.prototype['aggregationType'] = undefined;

/**
 * The maximum number of results to return in the response.
 * @member {Number} maxResults
 */
ListFindingAggregationsRequest.prototype['maxResults'] = undefined;

/**
 * A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.
 * @member {String} nextToken
 */
ListFindingAggregationsRequest.prototype['nextToken'] = undefined;





/**
 * Allowed values for the <code>aggregationType</code> property.
 * @enum {String}
 * @readonly
 */
ListFindingAggregationsRequest['AggregationTypeEnum'] = {

    /**
     * value: "FINDING_TYPE"
     * @const
     */
    "FINDING_TYPE": "FINDING_TYPE",

    /**
     * value: "PACKAGE"
     * @const
     */
    "PACKAGE": "PACKAGE",

    /**
     * value: "TITLE"
     * @const
     */
    "TITLE": "TITLE",

    /**
     * value: "REPOSITORY"
     * @const
     */
    "REPOSITORY": "REPOSITORY",

    /**
     * value: "AMI"
     * @const
     */
    "AMI": "AMI",

    /**
     * value: "AWS_EC2_INSTANCE"
     * @const
     */
    "AWS_EC2_INSTANCE": "AWS_EC2_INSTANCE",

    /**
     * value: "AWS_ECR_CONTAINER"
     * @const
     */
    "AWS_ECR_CONTAINER": "AWS_ECR_CONTAINER",

    /**
     * value: "IMAGE_LAYER"
     * @const
     */
    "IMAGE_LAYER": "IMAGE_LAYER",

    /**
     * value: "ACCOUNT"
     * @const
     */
    "ACCOUNT": "ACCOUNT",

    /**
     * value: "AWS_LAMBDA_FUNCTION"
     * @const
     */
    "AWS_LAMBDA_FUNCTION": "AWS_LAMBDA_FUNCTION",

    /**
     * value: "LAMBDA_LAYER"
     * @const
     */
    "LAMBDA_LAYER": "LAMBDA_LAYER"
};



export default ListFindingAggregationsRequest;

