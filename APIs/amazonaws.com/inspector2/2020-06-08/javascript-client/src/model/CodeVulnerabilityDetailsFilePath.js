/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CodeFilePath from './CodeFilePath';

/**
 * The CodeVulnerabilityDetailsFilePath model module.
 * @module model/CodeVulnerabilityDetailsFilePath
 * @version 2020-06-08
 */
class CodeVulnerabilityDetailsFilePath {
    /**
     * Constructs a new <code>CodeVulnerabilityDetailsFilePath</code>.
     * @alias module:model/CodeVulnerabilityDetailsFilePath
     * @implements module:model/CodeFilePath
     * @param endLine {Number} 
     * @param fileName {String} 
     * @param filePath {String} 
     * @param startLine {Number} 
     */
    constructor(endLine, fileName, filePath, startLine) { 
        CodeFilePath.initialize(this, endLine, fileName, filePath, startLine);
        CodeVulnerabilityDetailsFilePath.initialize(this, endLine, fileName, filePath, startLine);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endLine, fileName, filePath, startLine) { 
        obj['endLine'] = endLine;
        obj['fileName'] = fileName;
        obj['filePath'] = filePath;
        obj['startLine'] = startLine;
    }

    /**
     * Constructs a <code>CodeVulnerabilityDetailsFilePath</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CodeVulnerabilityDetailsFilePath} obj Optional instance to populate.
     * @return {module:model/CodeVulnerabilityDetailsFilePath} The populated <code>CodeVulnerabilityDetailsFilePath</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CodeVulnerabilityDetailsFilePath();
            CodeFilePath.constructFromObject(data, obj);

            if (data.hasOwnProperty('endLine')) {
                obj['endLine'] = ApiClient.convertToType(data['endLine'], 'Number');
            }
            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('filePath')) {
                obj['filePath'] = ApiClient.convertToType(data['filePath'], 'String');
            }
            if (data.hasOwnProperty('startLine')) {
                obj['startLine'] = ApiClient.convertToType(data['startLine'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CodeVulnerabilityDetailsFilePath</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CodeVulnerabilityDetailsFilePath</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CodeVulnerabilityDetailsFilePath.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `endLine`
        if (data['endLine']) { // data not null
          Number.validateJSON(data['endLine']);
        }
        // validate the optional field `fileName`
        if (data['fileName']) { // data not null
          String.validateJSON(data['fileName']);
        }
        // validate the optional field `filePath`
        if (data['filePath']) { // data not null
          String.validateJSON(data['filePath']);
        }
        // validate the optional field `startLine`
        if (data['startLine']) { // data not null
          Number.validateJSON(data['startLine']);
        }

        return true;
    }


}

CodeVulnerabilityDetailsFilePath.RequiredProperties = ["endLine", "fileName", "filePath", "startLine"];

/**
 * @member {Number} endLine
 */
CodeVulnerabilityDetailsFilePath.prototype['endLine'] = undefined;

/**
 * @member {String} fileName
 */
CodeVulnerabilityDetailsFilePath.prototype['fileName'] = undefined;

/**
 * @member {String} filePath
 */
CodeVulnerabilityDetailsFilePath.prototype['filePath'] = undefined;

/**
 * @member {Number} startLine
 */
CodeVulnerabilityDetailsFilePath.prototype['startLine'] = undefined;


// Implement CodeFilePath interface:
/**
 * @member {Number} endLine
 */
CodeFilePath.prototype['endLine'] = undefined;
/**
 * @member {String} fileName
 */
CodeFilePath.prototype['fileName'] = undefined;
/**
 * @member {String} filePath
 */
CodeFilePath.prototype['filePath'] = undefined;
/**
 * @member {Number} startLine
 */
CodeFilePath.prototype['startLine'] = undefined;




export default CodeVulnerabilityDetailsFilePath;

