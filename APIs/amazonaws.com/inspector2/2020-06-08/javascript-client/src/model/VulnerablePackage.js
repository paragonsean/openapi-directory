/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PackageManager from './PackageManager';

/**
 * The VulnerablePackage model module.
 * @module model/VulnerablePackage
 * @version 2020-06-08
 */
class VulnerablePackage {
    /**
     * Constructs a new <code>VulnerablePackage</code>.
     * Information on the vulnerable package identified by a finding.
     * @alias module:model/VulnerablePackage
     * @param name {String} 
     * @param version {String} 
     */
    constructor(name, version) { 
        
        VulnerablePackage.initialize(this, name, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, version) { 
        obj['name'] = name;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>VulnerablePackage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VulnerablePackage} obj Optional instance to populate.
     * @return {module:model/VulnerablePackage} The populated <code>VulnerablePackage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VulnerablePackage();

            if (data.hasOwnProperty('arch')) {
                obj['arch'] = ApiClient.convertToType(data['arch'], 'String');
            }
            if (data.hasOwnProperty('epoch')) {
                obj['epoch'] = ApiClient.convertToType(data['epoch'], 'Number');
            }
            if (data.hasOwnProperty('filePath')) {
                obj['filePath'] = ApiClient.convertToType(data['filePath'], 'String');
            }
            if (data.hasOwnProperty('fixedInVersion')) {
                obj['fixedInVersion'] = ApiClient.convertToType(data['fixedInVersion'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('packageManager')) {
                obj['packageManager'] = ApiClient.convertToType(data['packageManager'], PackageManager);
            }
            if (data.hasOwnProperty('release')) {
                obj['release'] = ApiClient.convertToType(data['release'], 'String');
            }
            if (data.hasOwnProperty('remediation')) {
                obj['remediation'] = ApiClient.convertToType(data['remediation'], 'String');
            }
            if (data.hasOwnProperty('sourceLambdaLayerArn')) {
                obj['sourceLambdaLayerArn'] = ApiClient.convertToType(data['sourceLambdaLayerArn'], 'String');
            }
            if (data.hasOwnProperty('sourceLayerHash')) {
                obj['sourceLayerHash'] = ApiClient.convertToType(data['sourceLayerHash'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VulnerablePackage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VulnerablePackage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VulnerablePackage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `arch`
        if (data['arch']) { // data not null
          String.validateJSON(data['arch']);
        }
        // validate the optional field `epoch`
        if (data['epoch']) { // data not null
          Number.validateJSON(data['epoch']);
        }
        // validate the optional field `filePath`
        if (data['filePath']) { // data not null
          String.validateJSON(data['filePath']);
        }
        // validate the optional field `fixedInVersion`
        if (data['fixedInVersion']) { // data not null
          String.validateJSON(data['fixedInVersion']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `packageManager`
        if (data['packageManager']) { // data not null
          PackageManager.validateJSON(data['packageManager']);
        }
        // validate the optional field `release`
        if (data['release']) { // data not null
          String.validateJSON(data['release']);
        }
        // validate the optional field `remediation`
        if (data['remediation']) { // data not null
          String.validateJSON(data['remediation']);
        }
        // validate the optional field `sourceLambdaLayerArn`
        if (data['sourceLambdaLayerArn']) { // data not null
          String.validateJSON(data['sourceLambdaLayerArn']);
        }
        // validate the optional field `sourceLayerHash`
        if (data['sourceLayerHash']) { // data not null
          String.validateJSON(data['sourceLayerHash']);
        }
        // validate the optional field `version`
        if (data['version']) { // data not null
          String.validateJSON(data['version']);
        }

        return true;
    }


}

VulnerablePackage.RequiredProperties = ["name", "version"];

/**
 * @member {String} arch
 */
VulnerablePackage.prototype['arch'] = undefined;

/**
 * @member {Number} epoch
 */
VulnerablePackage.prototype['epoch'] = undefined;

/**
 * @member {String} filePath
 */
VulnerablePackage.prototype['filePath'] = undefined;

/**
 * @member {String} fixedInVersion
 */
VulnerablePackage.prototype['fixedInVersion'] = undefined;

/**
 * @member {String} name
 */
VulnerablePackage.prototype['name'] = undefined;

/**
 * @member {module:model/PackageManager} packageManager
 */
VulnerablePackage.prototype['packageManager'] = undefined;

/**
 * @member {String} release
 */
VulnerablePackage.prototype['release'] = undefined;

/**
 * @member {String} remediation
 */
VulnerablePackage.prototype['remediation'] = undefined;

/**
 * @member {String} sourceLambdaLayerArn
 */
VulnerablePackage.prototype['sourceLambdaLayerArn'] = undefined;

/**
 * @member {String} sourceLayerHash
 */
VulnerablePackage.prototype['sourceLayerHash'] = undefined;

/**
 * @member {String} version
 */
VulnerablePackage.prototype['version'] = undefined;






export default VulnerablePackage;

