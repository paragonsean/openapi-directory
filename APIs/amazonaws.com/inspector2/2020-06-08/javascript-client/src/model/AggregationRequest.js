/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ListFindingAggregationsRequestAggregationRequestAccountAggregation from './ListFindingAggregationsRequestAggregationRequestAccountAggregation';
import ListFindingAggregationsRequestAggregationRequestAmiAggregation from './ListFindingAggregationsRequestAggregationRequestAmiAggregation';
import ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation from './ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation';
import ListFindingAggregationsRequestAggregationRequestEc2InstanceAggregation from './ListFindingAggregationsRequestAggregationRequestEc2InstanceAggregation';
import ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation from './ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation';
import ListFindingAggregationsRequestAggregationRequestImageLayerAggregation from './ListFindingAggregationsRequestAggregationRequestImageLayerAggregation';
import ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation from './ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation';
import ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation from './ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation';
import ListFindingAggregationsRequestAggregationRequestPackageAggregation from './ListFindingAggregationsRequestAggregationRequestPackageAggregation';
import ListFindingAggregationsRequestAggregationRequestRepositoryAggregation from './ListFindingAggregationsRequestAggregationRequestRepositoryAggregation';
import ListFindingAggregationsRequestAggregationRequestTitleAggregation from './ListFindingAggregationsRequestAggregationRequestTitleAggregation';

/**
 * The AggregationRequest model module.
 * @module model/AggregationRequest
 * @version 2020-06-08
 */
class AggregationRequest {
    /**
     * Constructs a new <code>AggregationRequest</code>.
     * Contains details about an aggregation request.
     * @alias module:model/AggregationRequest
     */
    constructor() { 
        
        AggregationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AggregationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AggregationRequest} obj Optional instance to populate.
     * @return {module:model/AggregationRequest} The populated <code>AggregationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AggregationRequest();

            if (data.hasOwnProperty('accountAggregation')) {
                obj['accountAggregation'] = ListFindingAggregationsRequestAggregationRequestAccountAggregation.constructFromObject(data['accountAggregation']);
            }
            if (data.hasOwnProperty('amiAggregation')) {
                obj['amiAggregation'] = ListFindingAggregationsRequestAggregationRequestAmiAggregation.constructFromObject(data['amiAggregation']);
            }
            if (data.hasOwnProperty('awsEcrContainerAggregation')) {
                obj['awsEcrContainerAggregation'] = ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.constructFromObject(data['awsEcrContainerAggregation']);
            }
            if (data.hasOwnProperty('ec2InstanceAggregation')) {
                obj['ec2InstanceAggregation'] = ListFindingAggregationsRequestAggregationRequestEc2InstanceAggregation.constructFromObject(data['ec2InstanceAggregation']);
            }
            if (data.hasOwnProperty('findingTypeAggregation')) {
                obj['findingTypeAggregation'] = ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.constructFromObject(data['findingTypeAggregation']);
            }
            if (data.hasOwnProperty('imageLayerAggregation')) {
                obj['imageLayerAggregation'] = ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.constructFromObject(data['imageLayerAggregation']);
            }
            if (data.hasOwnProperty('lambdaFunctionAggregation')) {
                obj['lambdaFunctionAggregation'] = ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation.constructFromObject(data['lambdaFunctionAggregation']);
            }
            if (data.hasOwnProperty('lambdaLayerAggregation')) {
                obj['lambdaLayerAggregation'] = ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.constructFromObject(data['lambdaLayerAggregation']);
            }
            if (data.hasOwnProperty('packageAggregation')) {
                obj['packageAggregation'] = ListFindingAggregationsRequestAggregationRequestPackageAggregation.constructFromObject(data['packageAggregation']);
            }
            if (data.hasOwnProperty('repositoryAggregation')) {
                obj['repositoryAggregation'] = ListFindingAggregationsRequestAggregationRequestRepositoryAggregation.constructFromObject(data['repositoryAggregation']);
            }
            if (data.hasOwnProperty('titleAggregation')) {
                obj['titleAggregation'] = ListFindingAggregationsRequestAggregationRequestTitleAggregation.constructFromObject(data['titleAggregation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AggregationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AggregationRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accountAggregation`
        if (data['accountAggregation']) { // data not null
          ListFindingAggregationsRequestAggregationRequestAccountAggregation.validateJSON(data['accountAggregation']);
        }
        // validate the optional field `amiAggregation`
        if (data['amiAggregation']) { // data not null
          ListFindingAggregationsRequestAggregationRequestAmiAggregation.validateJSON(data['amiAggregation']);
        }
        // validate the optional field `awsEcrContainerAggregation`
        if (data['awsEcrContainerAggregation']) { // data not null
          ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.validateJSON(data['awsEcrContainerAggregation']);
        }
        // validate the optional field `ec2InstanceAggregation`
        if (data['ec2InstanceAggregation']) { // data not null
          ListFindingAggregationsRequestAggregationRequestEc2InstanceAggregation.validateJSON(data['ec2InstanceAggregation']);
        }
        // validate the optional field `findingTypeAggregation`
        if (data['findingTypeAggregation']) { // data not null
          ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation.validateJSON(data['findingTypeAggregation']);
        }
        // validate the optional field `imageLayerAggregation`
        if (data['imageLayerAggregation']) { // data not null
          ListFindingAggregationsRequestAggregationRequestImageLayerAggregation.validateJSON(data['imageLayerAggregation']);
        }
        // validate the optional field `lambdaFunctionAggregation`
        if (data['lambdaFunctionAggregation']) { // data not null
          ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation.validateJSON(data['lambdaFunctionAggregation']);
        }
        // validate the optional field `lambdaLayerAggregation`
        if (data['lambdaLayerAggregation']) { // data not null
          ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.validateJSON(data['lambdaLayerAggregation']);
        }
        // validate the optional field `packageAggregation`
        if (data['packageAggregation']) { // data not null
          ListFindingAggregationsRequestAggregationRequestPackageAggregation.validateJSON(data['packageAggregation']);
        }
        // validate the optional field `repositoryAggregation`
        if (data['repositoryAggregation']) { // data not null
          ListFindingAggregationsRequestAggregationRequestRepositoryAggregation.validateJSON(data['repositoryAggregation']);
        }
        // validate the optional field `titleAggregation`
        if (data['titleAggregation']) { // data not null
          ListFindingAggregationsRequestAggregationRequestTitleAggregation.validateJSON(data['titleAggregation']);
        }

        return true;
    }


}



/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequestAccountAggregation} accountAggregation
 */
AggregationRequest.prototype['accountAggregation'] = undefined;

/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequestAmiAggregation} amiAggregation
 */
AggregationRequest.prototype['amiAggregation'] = undefined;

/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation} awsEcrContainerAggregation
 */
AggregationRequest.prototype['awsEcrContainerAggregation'] = undefined;

/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequestEc2InstanceAggregation} ec2InstanceAggregation
 */
AggregationRequest.prototype['ec2InstanceAggregation'] = undefined;

/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequestFindingTypeAggregation} findingTypeAggregation
 */
AggregationRequest.prototype['findingTypeAggregation'] = undefined;

/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequestImageLayerAggregation} imageLayerAggregation
 */
AggregationRequest.prototype['imageLayerAggregation'] = undefined;

/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation} lambdaFunctionAggregation
 */
AggregationRequest.prototype['lambdaFunctionAggregation'] = undefined;

/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation} lambdaLayerAggregation
 */
AggregationRequest.prototype['lambdaLayerAggregation'] = undefined;

/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequestPackageAggregation} packageAggregation
 */
AggregationRequest.prototype['packageAggregation'] = undefined;

/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequestRepositoryAggregation} repositoryAggregation
 */
AggregationRequest.prototype['repositoryAggregation'] = undefined;

/**
 * @member {module:model/ListFindingAggregationsRequestAggregationRequestTitleAggregation} titleAggregation
 */
AggregationRequest.prototype['titleAggregation'] = undefined;






export default AggregationRequest;

