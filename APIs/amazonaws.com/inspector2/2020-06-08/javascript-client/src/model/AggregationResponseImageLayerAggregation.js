/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageLayerAggregationResponse from './ImageLayerAggregationResponse';
import ImageLayerAggregationResponseSeverityCounts from './ImageLayerAggregationResponseSeverityCounts';

/**
 * The AggregationResponseImageLayerAggregation model module.
 * @module model/AggregationResponseImageLayerAggregation
 * @version 2020-06-08
 */
class AggregationResponseImageLayerAggregation {
    /**
     * Constructs a new <code>AggregationResponseImageLayerAggregation</code>.
     * @alias module:model/AggregationResponseImageLayerAggregation
     * @implements module:model/ImageLayerAggregationResponse
     * @param accountId {String} 
     * @param layerHash {String} 
     * @param repository {String} 
     * @param resourceId {String} 
     */
    constructor(accountId, layerHash, repository, resourceId) { 
        ImageLayerAggregationResponse.initialize(this, accountId, layerHash, repository, resourceId);
        AggregationResponseImageLayerAggregation.initialize(this, accountId, layerHash, repository, resourceId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountId, layerHash, repository, resourceId) { 
        obj['accountId'] = accountId;
        obj['layerHash'] = layerHash;
        obj['repository'] = repository;
        obj['resourceId'] = resourceId;
    }

    /**
     * Constructs a <code>AggregationResponseImageLayerAggregation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AggregationResponseImageLayerAggregation} obj Optional instance to populate.
     * @return {module:model/AggregationResponseImageLayerAggregation} The populated <code>AggregationResponseImageLayerAggregation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AggregationResponseImageLayerAggregation();
            ImageLayerAggregationResponse.constructFromObject(data, obj);

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('layerHash')) {
                obj['layerHash'] = ApiClient.convertToType(data['layerHash'], 'String');
            }
            if (data.hasOwnProperty('repository')) {
                obj['repository'] = ApiClient.convertToType(data['repository'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('severityCounts')) {
                obj['severityCounts'] = ImageLayerAggregationResponseSeverityCounts.constructFromObject(data['severityCounts']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AggregationResponseImageLayerAggregation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AggregationResponseImageLayerAggregation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AggregationResponseImageLayerAggregation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `accountId`
        if (data['accountId']) { // data not null
          String.validateJSON(data['accountId']);
        }
        // validate the optional field `layerHash`
        if (data['layerHash']) { // data not null
          String.validateJSON(data['layerHash']);
        }
        // validate the optional field `repository`
        if (data['repository']) { // data not null
          String.validateJSON(data['repository']);
        }
        // validate the optional field `resourceId`
        if (data['resourceId']) { // data not null
          String.validateJSON(data['resourceId']);
        }
        // validate the optional field `severityCounts`
        if (data['severityCounts']) { // data not null
          ImageLayerAggregationResponseSeverityCounts.validateJSON(data['severityCounts']);
        }

        return true;
    }


}

AggregationResponseImageLayerAggregation.RequiredProperties = ["accountId", "layerHash", "repository", "resourceId"];

/**
 * @member {String} accountId
 */
AggregationResponseImageLayerAggregation.prototype['accountId'] = undefined;

/**
 * @member {String} layerHash
 */
AggregationResponseImageLayerAggregation.prototype['layerHash'] = undefined;

/**
 * @member {String} repository
 */
AggregationResponseImageLayerAggregation.prototype['repository'] = undefined;

/**
 * @member {String} resourceId
 */
AggregationResponseImageLayerAggregation.prototype['resourceId'] = undefined;

/**
 * @member {module:model/ImageLayerAggregationResponseSeverityCounts} severityCounts
 */
AggregationResponseImageLayerAggregation.prototype['severityCounts'] = undefined;


// Implement ImageLayerAggregationResponse interface:
/**
 * @member {String} accountId
 */
ImageLayerAggregationResponse.prototype['accountId'] = undefined;
/**
 * @member {String} layerHash
 */
ImageLayerAggregationResponse.prototype['layerHash'] = undefined;
/**
 * @member {String} repository
 */
ImageLayerAggregationResponse.prototype['repository'] = undefined;
/**
 * @member {String} resourceId
 */
ImageLayerAggregationResponse.prototype['resourceId'] = undefined;
/**
 * @member {module:model/ImageLayerAggregationResponseSeverityCounts} severityCounts
 */
ImageLayerAggregationResponse.prototype['severityCounts'] = undefined;




export default AggregationResponseImageLayerAggregation;

