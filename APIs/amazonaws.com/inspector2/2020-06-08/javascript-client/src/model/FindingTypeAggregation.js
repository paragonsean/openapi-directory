/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AggregationFindingType from './AggregationFindingType';
import AggregationResourceType from './AggregationResourceType';
import FindingTypeSortBy from './FindingTypeSortBy';
import SortOrder from './SortOrder';

/**
 * The FindingTypeAggregation model module.
 * @module model/FindingTypeAggregation
 * @version 2020-06-08
 */
class FindingTypeAggregation {
    /**
     * Constructs a new <code>FindingTypeAggregation</code>.
     * The details that define an aggregation based on finding type.
     * @alias module:model/FindingTypeAggregation
     */
    constructor() { 
        
        FindingTypeAggregation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FindingTypeAggregation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FindingTypeAggregation} obj Optional instance to populate.
     * @return {module:model/FindingTypeAggregation} The populated <code>FindingTypeAggregation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FindingTypeAggregation();

            if (data.hasOwnProperty('findingType')) {
                obj['findingType'] = ApiClient.convertToType(data['findingType'], AggregationFindingType);
            }
            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], AggregationResourceType);
            }
            if (data.hasOwnProperty('sortBy')) {
                obj['sortBy'] = ApiClient.convertToType(data['sortBy'], FindingTypeSortBy);
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], SortOrder);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FindingTypeAggregation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FindingTypeAggregation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `findingType`
        if (data['findingType']) { // data not null
          AggregationFindingType.validateJSON(data['findingType']);
        }
        // validate the optional field `resourceType`
        if (data['resourceType']) { // data not null
          AggregationResourceType.validateJSON(data['resourceType']);
        }
        // validate the optional field `sortBy`
        if (data['sortBy']) { // data not null
          FindingTypeSortBy.validateJSON(data['sortBy']);
        }
        // validate the optional field `sortOrder`
        if (data['sortOrder']) { // data not null
          SortOrder.validateJSON(data['sortOrder']);
        }

        return true;
    }


}



/**
 * @member {module:model/AggregationFindingType} findingType
 */
FindingTypeAggregation.prototype['findingType'] = undefined;

/**
 * @member {module:model/AggregationResourceType} resourceType
 */
FindingTypeAggregation.prototype['resourceType'] = undefined;

/**
 * @member {module:model/FindingTypeSortBy} sortBy
 */
FindingTypeAggregation.prototype['sortBy'] = undefined;

/**
 * @member {module:model/SortOrder} sortOrder
 */
FindingTypeAggregation.prototype['sortOrder'] = undefined;






export default FindingTypeAggregation;

