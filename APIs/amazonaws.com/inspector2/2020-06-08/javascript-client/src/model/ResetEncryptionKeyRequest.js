/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResetEncryptionKeyRequest model module.
 * @module model/ResetEncryptionKeyRequest
 * @version 2020-06-08
 */
class ResetEncryptionKeyRequest {
    /**
     * Constructs a new <code>ResetEncryptionKeyRequest</code>.
     * @alias module:model/ResetEncryptionKeyRequest
     * @param resourceType {module:model/ResetEncryptionKeyRequest.ResourceTypeEnum} The resource type the key encrypts.
     * @param scanType {module:model/ResetEncryptionKeyRequest.ScanTypeEnum} The scan type the key encrypts.
     */
    constructor(resourceType, scanType) { 
        
        ResetEncryptionKeyRequest.initialize(this, resourceType, scanType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceType, scanType) { 
        obj['resourceType'] = resourceType;
        obj['scanType'] = scanType;
    }

    /**
     * Constructs a <code>ResetEncryptionKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResetEncryptionKeyRequest} obj Optional instance to populate.
     * @return {module:model/ResetEncryptionKeyRequest} The populated <code>ResetEncryptionKeyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResetEncryptionKeyRequest();

            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
            if (data.hasOwnProperty('scanType')) {
                obj['scanType'] = ApiClient.convertToType(data['scanType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResetEncryptionKeyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResetEncryptionKeyRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResetEncryptionKeyRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['resourceType'] && !(typeof data['resourceType'] === 'string' || data['resourceType'] instanceof String)) {
            throw new Error("Expected the field `resourceType` to be a primitive type in the JSON string but got " + data['resourceType']);
        }
        // ensure the json data is a string
        if (data['scanType'] && !(typeof data['scanType'] === 'string' || data['scanType'] instanceof String)) {
            throw new Error("Expected the field `scanType` to be a primitive type in the JSON string but got " + data['scanType']);
        }

        return true;
    }


}

ResetEncryptionKeyRequest.RequiredProperties = ["resourceType", "scanType"];

/**
 * The resource type the key encrypts.
 * @member {module:model/ResetEncryptionKeyRequest.ResourceTypeEnum} resourceType
 */
ResetEncryptionKeyRequest.prototype['resourceType'] = undefined;

/**
 * The scan type the key encrypts.
 * @member {module:model/ResetEncryptionKeyRequest.ScanTypeEnum} scanType
 */
ResetEncryptionKeyRequest.prototype['scanType'] = undefined;





/**
 * Allowed values for the <code>resourceType</code> property.
 * @enum {String}
 * @readonly
 */
ResetEncryptionKeyRequest['ResourceTypeEnum'] = {

    /**
     * value: "AWS_EC2_INSTANCE"
     * @const
     */
    "EC2_INSTANCE": "AWS_EC2_INSTANCE",

    /**
     * value: "AWS_ECR_CONTAINER_IMAGE"
     * @const
     */
    "ECR_CONTAINER_IMAGE": "AWS_ECR_CONTAINER_IMAGE",

    /**
     * value: "AWS_ECR_REPOSITORY"
     * @const
     */
    "ECR_REPOSITORY": "AWS_ECR_REPOSITORY",

    /**
     * value: "AWS_LAMBDA_FUNCTION"
     * @const
     */
    "LAMBDA_FUNCTION": "AWS_LAMBDA_FUNCTION"
};


/**
 * Allowed values for the <code>scanType</code> property.
 * @enum {String}
 * @readonly
 */
ResetEncryptionKeyRequest['ScanTypeEnum'] = {

    /**
     * value: "NETWORK"
     * @const
     */
    "NETWORK": "NETWORK",

    /**
     * value: "PACKAGE"
     * @const
     */
    "PACKAGE": "PACKAGE",

    /**
     * value: "CODE"
     * @const
     */
    "CODE": "CODE"
};



export default ResetEncryptionKeyRequest;

