/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EcrRescanDuration from './EcrRescanDuration';
import EcrRescanDurationState from './EcrRescanDurationState';
import EcrRescanDurationStatus from './EcrRescanDurationStatus';

/**
 * The EcrConfigurationStateRescanDurationState model module.
 * @module model/EcrConfigurationStateRescanDurationState
 * @version 2020-06-08
 */
class EcrConfigurationStateRescanDurationState {
    /**
     * Constructs a new <code>EcrConfigurationStateRescanDurationState</code>.
     * @alias module:model/EcrConfigurationStateRescanDurationState
     * @implements module:model/EcrRescanDurationState
     */
    constructor() { 
        EcrRescanDurationState.initialize(this);
        EcrConfigurationStateRescanDurationState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EcrConfigurationStateRescanDurationState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EcrConfigurationStateRescanDurationState} obj Optional instance to populate.
     * @return {module:model/EcrConfigurationStateRescanDurationState} The populated <code>EcrConfigurationStateRescanDurationState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EcrConfigurationStateRescanDurationState();
            EcrRescanDurationState.constructFromObject(data, obj);

            if (data.hasOwnProperty('rescanDuration')) {
                obj['rescanDuration'] = ApiClient.convertToType(data['rescanDuration'], EcrRescanDuration);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], EcrRescanDurationStatus);
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EcrConfigurationStateRescanDurationState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EcrConfigurationStateRescanDurationState</code>.
     */
    static validateJSON(data) {
        // validate the optional field `rescanDuration`
        if (data['rescanDuration']) { // data not null
          EcrRescanDuration.validateJSON(data['rescanDuration']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          EcrRescanDurationStatus.validateJSON(data['status']);
        }
        // validate the optional field `updatedAt`
        if (data['updatedAt']) { // data not null
          Date.validateJSON(data['updatedAt']);
        }

        return true;
    }


}



/**
 * @member {module:model/EcrRescanDuration} rescanDuration
 */
EcrConfigurationStateRescanDurationState.prototype['rescanDuration'] = undefined;

/**
 * @member {module:model/EcrRescanDurationStatus} status
 */
EcrConfigurationStateRescanDurationState.prototype['status'] = undefined;

/**
 * @member {Date} updatedAt
 */
EcrConfigurationStateRescanDurationState.prototype['updatedAt'] = undefined;


// Implement EcrRescanDurationState interface:
/**
 * @member {module:model/EcrRescanDuration} rescanDuration
 */
EcrRescanDurationState.prototype['rescanDuration'] = undefined;
/**
 * @member {module:model/EcrRescanDurationStatus} status
 */
EcrRescanDurationState.prototype['status'] = undefined;
/**
 * @member {Date} updatedAt
 */
EcrRescanDurationState.prototype['updatedAt'] = undefined;




export default EcrConfigurationStateRescanDurationState;

