/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PackageVulnerabilityDetails model module.
 * @module model/PackageVulnerabilityDetails
 * @version 2020-06-08
 */
class PackageVulnerabilityDetails {
    /**
     * Constructs a new <code>PackageVulnerabilityDetails</code>.
     * Information about a package vulnerability finding.
     * @alias module:model/PackageVulnerabilityDetails
     * @param source {String} 
     * @param vulnerabilityId {String} 
     */
    constructor(source, vulnerabilityId) { 
        
        PackageVulnerabilityDetails.initialize(this, source, vulnerabilityId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, source, vulnerabilityId) { 
        obj['source'] = source;
        obj['vulnerabilityId'] = vulnerabilityId;
    }

    /**
     * Constructs a <code>PackageVulnerabilityDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PackageVulnerabilityDetails} obj Optional instance to populate.
     * @return {module:model/PackageVulnerabilityDetails} The populated <code>PackageVulnerabilityDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PackageVulnerabilityDetails();

            if (data.hasOwnProperty('cvss')) {
                obj['cvss'] = ApiClient.convertToType(data['cvss'], Array);
            }
            if (data.hasOwnProperty('referenceUrls')) {
                obj['referenceUrls'] = ApiClient.convertToType(data['referenceUrls'], Array);
            }
            if (data.hasOwnProperty('relatedVulnerabilities')) {
                obj['relatedVulnerabilities'] = ApiClient.convertToType(data['relatedVulnerabilities'], Array);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('sourceUrl')) {
                obj['sourceUrl'] = ApiClient.convertToType(data['sourceUrl'], 'String');
            }
            if (data.hasOwnProperty('vendorCreatedAt')) {
                obj['vendorCreatedAt'] = ApiClient.convertToType(data['vendorCreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('vendorSeverity')) {
                obj['vendorSeverity'] = ApiClient.convertToType(data['vendorSeverity'], 'String');
            }
            if (data.hasOwnProperty('vendorUpdatedAt')) {
                obj['vendorUpdatedAt'] = ApiClient.convertToType(data['vendorUpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('vulnerabilityId')) {
                obj['vulnerabilityId'] = ApiClient.convertToType(data['vulnerabilityId'], 'String');
            }
            if (data.hasOwnProperty('vulnerablePackages')) {
                obj['vulnerablePackages'] = ApiClient.convertToType(data['vulnerablePackages'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PackageVulnerabilityDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PackageVulnerabilityDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PackageVulnerabilityDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `cvss`
        if (data['cvss']) { // data not null
          Array.validateJSON(data['cvss']);
        }
        // validate the optional field `referenceUrls`
        if (data['referenceUrls']) { // data not null
          Array.validateJSON(data['referenceUrls']);
        }
        // validate the optional field `relatedVulnerabilities`
        if (data['relatedVulnerabilities']) { // data not null
          Array.validateJSON(data['relatedVulnerabilities']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          String.validateJSON(data['source']);
        }
        // validate the optional field `sourceUrl`
        if (data['sourceUrl']) { // data not null
          String.validateJSON(data['sourceUrl']);
        }
        // validate the optional field `vendorCreatedAt`
        if (data['vendorCreatedAt']) { // data not null
          Date.validateJSON(data['vendorCreatedAt']);
        }
        // validate the optional field `vendorSeverity`
        if (data['vendorSeverity']) { // data not null
          String.validateJSON(data['vendorSeverity']);
        }
        // validate the optional field `vendorUpdatedAt`
        if (data['vendorUpdatedAt']) { // data not null
          Date.validateJSON(data['vendorUpdatedAt']);
        }
        // validate the optional field `vulnerabilityId`
        if (data['vulnerabilityId']) { // data not null
          String.validateJSON(data['vulnerabilityId']);
        }
        // validate the optional field `vulnerablePackages`
        if (data['vulnerablePackages']) { // data not null
          Array.validateJSON(data['vulnerablePackages']);
        }

        return true;
    }


}

PackageVulnerabilityDetails.RequiredProperties = ["source", "vulnerabilityId"];

/**
 * @member {Array} cvss
 */
PackageVulnerabilityDetails.prototype['cvss'] = undefined;

/**
 * @member {Array} referenceUrls
 */
PackageVulnerabilityDetails.prototype['referenceUrls'] = undefined;

/**
 * @member {Array} relatedVulnerabilities
 */
PackageVulnerabilityDetails.prototype['relatedVulnerabilities'] = undefined;

/**
 * @member {String} source
 */
PackageVulnerabilityDetails.prototype['source'] = undefined;

/**
 * @member {String} sourceUrl
 */
PackageVulnerabilityDetails.prototype['sourceUrl'] = undefined;

/**
 * @member {Date} vendorCreatedAt
 */
PackageVulnerabilityDetails.prototype['vendorCreatedAt'] = undefined;

/**
 * @member {String} vendorSeverity
 */
PackageVulnerabilityDetails.prototype['vendorSeverity'] = undefined;

/**
 * @member {Date} vendorUpdatedAt
 */
PackageVulnerabilityDetails.prototype['vendorUpdatedAt'] = undefined;

/**
 * @member {String} vulnerabilityId
 */
PackageVulnerabilityDetails.prototype['vulnerabilityId'] = undefined;

/**
 * @member {Array} vulnerablePackages
 */
PackageVulnerabilityDetails.prototype['vulnerablePackages'] = undefined;






export default PackageVulnerabilityDetails;

