/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';
import UsageType from './UsageType';

/**
 * The Usage model module.
 * @module model/Usage
 * @version 2020-06-08
 */
class Usage {
    /**
     * Constructs a new <code>Usage</code>.
     * Contains usage information about the cost of Amazon Inspector operation.
     * @alias module:model/Usage
     */
    constructor() { 
        
        Usage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Usage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Usage} obj Optional instance to populate.
     * @return {module:model/Usage} The populated <code>Usage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Usage();

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], Currency);
            }
            if (data.hasOwnProperty('estimatedMonthlyCost')) {
                obj['estimatedMonthlyCost'] = ApiClient.convertToType(data['estimatedMonthlyCost'], 'Number');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], UsageType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Usage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Usage</code>.
     */
    static validateJSON(data) {
        // validate the optional field `currency`
        if (data['currency']) { // data not null
          Currency.validateJSON(data['currency']);
        }
        // validate the optional field `estimatedMonthlyCost`
        if (data['estimatedMonthlyCost']) { // data not null
          Number.validateJSON(data['estimatedMonthlyCost']);
        }
        // validate the optional field `total`
        if (data['total']) { // data not null
          Number.validateJSON(data['total']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          UsageType.validateJSON(data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/Currency} currency
 */
Usage.prototype['currency'] = undefined;

/**
 * @member {Number} estimatedMonthlyCost
 */
Usage.prototype['estimatedMonthlyCost'] = undefined;

/**
 * @member {Number} total
 */
Usage.prototype['total'] = undefined;

/**
 * @member {module:model/UsageType} type
 */
Usage.prototype['type'] = undefined;






export default Usage;

