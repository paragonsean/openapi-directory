/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LambdaFunctionAggregation from './LambdaFunctionAggregation';
import LambdaFunctionSortBy from './LambdaFunctionSortBy';
import SortOrder from './SortOrder';

/**
 * The ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation model module.
 * @module model/ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation
 * @version 2020-06-08
 */
class ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation {
    /**
     * Constructs a new <code>ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation</code>.
     * @alias module:model/ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation
     * @implements module:model/LambdaFunctionAggregation
     */
    constructor() { 
        LambdaFunctionAggregation.initialize(this);
        ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation} obj Optional instance to populate.
     * @return {module:model/ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation} The populated <code>ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation();
            LambdaFunctionAggregation.constructFromObject(data, obj);

            if (data.hasOwnProperty('functionNames')) {
                obj['functionNames'] = ApiClient.convertToType(data['functionNames'], Array);
            }
            if (data.hasOwnProperty('functionTags')) {
                obj['functionTags'] = ApiClient.convertToType(data['functionTags'], Array);
            }
            if (data.hasOwnProperty('resourceIds')) {
                obj['resourceIds'] = ApiClient.convertToType(data['resourceIds'], Array);
            }
            if (data.hasOwnProperty('runtimes')) {
                obj['runtimes'] = ApiClient.convertToType(data['runtimes'], Array);
            }
            if (data.hasOwnProperty('sortBy')) {
                obj['sortBy'] = ApiClient.convertToType(data['sortBy'], LambdaFunctionSortBy);
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], SortOrder);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `functionNames`
        if (data['functionNames']) { // data not null
          Array.validateJSON(data['functionNames']);
        }
        // validate the optional field `functionTags`
        if (data['functionTags']) { // data not null
          Array.validateJSON(data['functionTags']);
        }
        // validate the optional field `resourceIds`
        if (data['resourceIds']) { // data not null
          Array.validateJSON(data['resourceIds']);
        }
        // validate the optional field `runtimes`
        if (data['runtimes']) { // data not null
          Array.validateJSON(data['runtimes']);
        }
        // validate the optional field `sortBy`
        if (data['sortBy']) { // data not null
          LambdaFunctionSortBy.validateJSON(data['sortBy']);
        }
        // validate the optional field `sortOrder`
        if (data['sortOrder']) { // data not null
          SortOrder.validateJSON(data['sortOrder']);
        }

        return true;
    }


}



/**
 * @member {Array} functionNames
 */
ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation.prototype['functionNames'] = undefined;

/**
 * @member {Array} functionTags
 */
ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation.prototype['functionTags'] = undefined;

/**
 * @member {Array} resourceIds
 */
ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation.prototype['resourceIds'] = undefined;

/**
 * @member {Array} runtimes
 */
ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation.prototype['runtimes'] = undefined;

/**
 * @member {module:model/LambdaFunctionSortBy} sortBy
 */
ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation.prototype['sortBy'] = undefined;

/**
 * @member {module:model/SortOrder} sortOrder
 */
ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation.prototype['sortOrder'] = undefined;


// Implement LambdaFunctionAggregation interface:
/**
 * @member {Array} functionNames
 */
LambdaFunctionAggregation.prototype['functionNames'] = undefined;
/**
 * @member {Array} functionTags
 */
LambdaFunctionAggregation.prototype['functionTags'] = undefined;
/**
 * @member {Array} resourceIds
 */
LambdaFunctionAggregation.prototype['resourceIds'] = undefined;
/**
 * @member {Array} runtimes
 */
LambdaFunctionAggregation.prototype['runtimes'] = undefined;
/**
 * @member {module:model/LambdaFunctionSortBy} sortBy
 */
LambdaFunctionAggregation.prototype['sortBy'] = undefined;
/**
 * @member {module:model/SortOrder} sortOrder
 */
LambdaFunctionAggregation.prototype['sortOrder'] = undefined;




export default ListFindingAggregationsRequestAggregationRequestLambdaFunctionAggregation;

