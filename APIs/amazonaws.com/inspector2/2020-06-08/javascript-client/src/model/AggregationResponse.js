/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AggregationResponseAccountAggregation from './AggregationResponseAccountAggregation';
import AggregationResponseAmiAggregation from './AggregationResponseAmiAggregation';
import AggregationResponseAwsEcrContainerAggregation from './AggregationResponseAwsEcrContainerAggregation';
import AggregationResponseEc2InstanceAggregation from './AggregationResponseEc2InstanceAggregation';
import AggregationResponseFindingTypeAggregation from './AggregationResponseFindingTypeAggregation';
import AggregationResponseImageLayerAggregation from './AggregationResponseImageLayerAggregation';
import AggregationResponseLambdaFunctionAggregation from './AggregationResponseLambdaFunctionAggregation';
import AggregationResponseLambdaLayerAggregation from './AggregationResponseLambdaLayerAggregation';
import AggregationResponsePackageAggregation from './AggregationResponsePackageAggregation';
import AggregationResponseRepositoryAggregation from './AggregationResponseRepositoryAggregation';
import AggregationResponseTitleAggregation from './AggregationResponseTitleAggregation';

/**
 * The AggregationResponse model module.
 * @module model/AggregationResponse
 * @version 2020-06-08
 */
class AggregationResponse {
    /**
     * Constructs a new <code>AggregationResponse</code>.
     * A structure that contains details about the results of an aggregation type.
     * @alias module:model/AggregationResponse
     */
    constructor() { 
        
        AggregationResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AggregationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AggregationResponse} obj Optional instance to populate.
     * @return {module:model/AggregationResponse} The populated <code>AggregationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AggregationResponse();

            if (data.hasOwnProperty('accountAggregation')) {
                obj['accountAggregation'] = AggregationResponseAccountAggregation.constructFromObject(data['accountAggregation']);
            }
            if (data.hasOwnProperty('amiAggregation')) {
                obj['amiAggregation'] = AggregationResponseAmiAggregation.constructFromObject(data['amiAggregation']);
            }
            if (data.hasOwnProperty('awsEcrContainerAggregation')) {
                obj['awsEcrContainerAggregation'] = AggregationResponseAwsEcrContainerAggregation.constructFromObject(data['awsEcrContainerAggregation']);
            }
            if (data.hasOwnProperty('ec2InstanceAggregation')) {
                obj['ec2InstanceAggregation'] = AggregationResponseEc2InstanceAggregation.constructFromObject(data['ec2InstanceAggregation']);
            }
            if (data.hasOwnProperty('findingTypeAggregation')) {
                obj['findingTypeAggregation'] = AggregationResponseFindingTypeAggregation.constructFromObject(data['findingTypeAggregation']);
            }
            if (data.hasOwnProperty('imageLayerAggregation')) {
                obj['imageLayerAggregation'] = AggregationResponseImageLayerAggregation.constructFromObject(data['imageLayerAggregation']);
            }
            if (data.hasOwnProperty('lambdaFunctionAggregation')) {
                obj['lambdaFunctionAggregation'] = AggregationResponseLambdaFunctionAggregation.constructFromObject(data['lambdaFunctionAggregation']);
            }
            if (data.hasOwnProperty('lambdaLayerAggregation')) {
                obj['lambdaLayerAggregation'] = AggregationResponseLambdaLayerAggregation.constructFromObject(data['lambdaLayerAggregation']);
            }
            if (data.hasOwnProperty('packageAggregation')) {
                obj['packageAggregation'] = AggregationResponsePackageAggregation.constructFromObject(data['packageAggregation']);
            }
            if (data.hasOwnProperty('repositoryAggregation')) {
                obj['repositoryAggregation'] = AggregationResponseRepositoryAggregation.constructFromObject(data['repositoryAggregation']);
            }
            if (data.hasOwnProperty('titleAggregation')) {
                obj['titleAggregation'] = AggregationResponseTitleAggregation.constructFromObject(data['titleAggregation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AggregationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AggregationResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accountAggregation`
        if (data['accountAggregation']) { // data not null
          AggregationResponseAccountAggregation.validateJSON(data['accountAggregation']);
        }
        // validate the optional field `amiAggregation`
        if (data['amiAggregation']) { // data not null
          AggregationResponseAmiAggregation.validateJSON(data['amiAggregation']);
        }
        // validate the optional field `awsEcrContainerAggregation`
        if (data['awsEcrContainerAggregation']) { // data not null
          AggregationResponseAwsEcrContainerAggregation.validateJSON(data['awsEcrContainerAggregation']);
        }
        // validate the optional field `ec2InstanceAggregation`
        if (data['ec2InstanceAggregation']) { // data not null
          AggregationResponseEc2InstanceAggregation.validateJSON(data['ec2InstanceAggregation']);
        }
        // validate the optional field `findingTypeAggregation`
        if (data['findingTypeAggregation']) { // data not null
          AggregationResponseFindingTypeAggregation.validateJSON(data['findingTypeAggregation']);
        }
        // validate the optional field `imageLayerAggregation`
        if (data['imageLayerAggregation']) { // data not null
          AggregationResponseImageLayerAggregation.validateJSON(data['imageLayerAggregation']);
        }
        // validate the optional field `lambdaFunctionAggregation`
        if (data['lambdaFunctionAggregation']) { // data not null
          AggregationResponseLambdaFunctionAggregation.validateJSON(data['lambdaFunctionAggregation']);
        }
        // validate the optional field `lambdaLayerAggregation`
        if (data['lambdaLayerAggregation']) { // data not null
          AggregationResponseLambdaLayerAggregation.validateJSON(data['lambdaLayerAggregation']);
        }
        // validate the optional field `packageAggregation`
        if (data['packageAggregation']) { // data not null
          AggregationResponsePackageAggregation.validateJSON(data['packageAggregation']);
        }
        // validate the optional field `repositoryAggregation`
        if (data['repositoryAggregation']) { // data not null
          AggregationResponseRepositoryAggregation.validateJSON(data['repositoryAggregation']);
        }
        // validate the optional field `titleAggregation`
        if (data['titleAggregation']) { // data not null
          AggregationResponseTitleAggregation.validateJSON(data['titleAggregation']);
        }

        return true;
    }


}



/**
 * @member {module:model/AggregationResponseAccountAggregation} accountAggregation
 */
AggregationResponse.prototype['accountAggregation'] = undefined;

/**
 * @member {module:model/AggregationResponseAmiAggregation} amiAggregation
 */
AggregationResponse.prototype['amiAggregation'] = undefined;

/**
 * @member {module:model/AggregationResponseAwsEcrContainerAggregation} awsEcrContainerAggregation
 */
AggregationResponse.prototype['awsEcrContainerAggregation'] = undefined;

/**
 * @member {module:model/AggregationResponseEc2InstanceAggregation} ec2InstanceAggregation
 */
AggregationResponse.prototype['ec2InstanceAggregation'] = undefined;

/**
 * @member {module:model/AggregationResponseFindingTypeAggregation} findingTypeAggregation
 */
AggregationResponse.prototype['findingTypeAggregation'] = undefined;

/**
 * @member {module:model/AggregationResponseImageLayerAggregation} imageLayerAggregation
 */
AggregationResponse.prototype['imageLayerAggregation'] = undefined;

/**
 * @member {module:model/AggregationResponseLambdaFunctionAggregation} lambdaFunctionAggregation
 */
AggregationResponse.prototype['lambdaFunctionAggregation'] = undefined;

/**
 * @member {module:model/AggregationResponseLambdaLayerAggregation} lambdaLayerAggregation
 */
AggregationResponse.prototype['lambdaLayerAggregation'] = undefined;

/**
 * @member {module:model/AggregationResponsePackageAggregation} packageAggregation
 */
AggregationResponse.prototype['packageAggregation'] = undefined;

/**
 * @member {module:model/AggregationResponseRepositoryAggregation} repositoryAggregation
 */
AggregationResponse.prototype['repositoryAggregation'] = undefined;

/**
 * @member {module:model/AggregationResponseTitleAggregation} titleAggregation
 */
AggregationResponse.prototype['titleAggregation'] = undefined;






export default AggregationResponse;

