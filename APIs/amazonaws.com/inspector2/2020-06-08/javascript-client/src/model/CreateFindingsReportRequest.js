/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateFilterRequestFilterCriteria from './CreateFilterRequestFilterCriteria';
import CreateFindingsReportRequestS3Destination from './CreateFindingsReportRequestS3Destination';

/**
 * The CreateFindingsReportRequest model module.
 * @module model/CreateFindingsReportRequest
 * @version 2020-06-08
 */
class CreateFindingsReportRequest {
    /**
     * Constructs a new <code>CreateFindingsReportRequest</code>.
     * @alias module:model/CreateFindingsReportRequest
     * @param reportFormat {module:model/CreateFindingsReportRequest.ReportFormatEnum} The format to generate the report in.
     * @param s3Destination {module:model/CreateFindingsReportRequestS3Destination} 
     */
    constructor(reportFormat, s3Destination) { 
        
        CreateFindingsReportRequest.initialize(this, reportFormat, s3Destination);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, reportFormat, s3Destination) { 
        obj['reportFormat'] = reportFormat;
        obj['s3Destination'] = s3Destination;
    }

    /**
     * Constructs a <code>CreateFindingsReportRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFindingsReportRequest} obj Optional instance to populate.
     * @return {module:model/CreateFindingsReportRequest} The populated <code>CreateFindingsReportRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFindingsReportRequest();

            if (data.hasOwnProperty('filterCriteria')) {
                obj['filterCriteria'] = CreateFilterRequestFilterCriteria.constructFromObject(data['filterCriteria']);
            }
            if (data.hasOwnProperty('reportFormat')) {
                obj['reportFormat'] = ApiClient.convertToType(data['reportFormat'], 'String');
            }
            if (data.hasOwnProperty('s3Destination')) {
                obj['s3Destination'] = CreateFindingsReportRequestS3Destination.constructFromObject(data['s3Destination']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateFindingsReportRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateFindingsReportRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateFindingsReportRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `filterCriteria`
        if (data['filterCriteria']) { // data not null
          CreateFilterRequestFilterCriteria.validateJSON(data['filterCriteria']);
        }
        // ensure the json data is a string
        if (data['reportFormat'] && !(typeof data['reportFormat'] === 'string' || data['reportFormat'] instanceof String)) {
            throw new Error("Expected the field `reportFormat` to be a primitive type in the JSON string but got " + data['reportFormat']);
        }
        // validate the optional field `s3Destination`
        if (data['s3Destination']) { // data not null
          CreateFindingsReportRequestS3Destination.validateJSON(data['s3Destination']);
        }

        return true;
    }


}

CreateFindingsReportRequest.RequiredProperties = ["reportFormat", "s3Destination"];

/**
 * @member {module:model/CreateFilterRequestFilterCriteria} filterCriteria
 */
CreateFindingsReportRequest.prototype['filterCriteria'] = undefined;

/**
 * The format to generate the report in.
 * @member {module:model/CreateFindingsReportRequest.ReportFormatEnum} reportFormat
 */
CreateFindingsReportRequest.prototype['reportFormat'] = undefined;

/**
 * @member {module:model/CreateFindingsReportRequestS3Destination} s3Destination
 */
CreateFindingsReportRequest.prototype['s3Destination'] = undefined;





/**
 * Allowed values for the <code>reportFormat</code> property.
 * @enum {String}
 * @readonly
 */
CreateFindingsReportRequest['ReportFormatEnum'] = {

    /**
     * value: "CSV"
     * @const
     */
    "CSV": "CSV",

    /**
     * value: "JSON"
     * @const
     */
    "JSON": "JSON"
};



export default CreateFindingsReportRequest;

