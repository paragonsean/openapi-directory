/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExploitAvailable from './ExploitAvailable';
import FindingCodeVulnerabilityDetails from './FindingCodeVulnerabilityDetails';
import FindingEpss from './FindingEpss';
import FindingExploitabilityDetails from './FindingExploitabilityDetails';
import FindingInspectorScoreDetails from './FindingInspectorScoreDetails';
import FindingNetworkReachabilityDetails from './FindingNetworkReachabilityDetails';
import FindingPackageVulnerabilityDetails from './FindingPackageVulnerabilityDetails';
import FindingRemediation from './FindingRemediation';
import FindingStatus from './FindingStatus';
import FindingType from './FindingType';
import FixAvailable from './FixAvailable';
import Severity from './Severity';

/**
 * The Finding model module.
 * @module model/Finding
 * @version 2020-06-08
 */
class Finding {
    /**
     * Constructs a new <code>Finding</code>.
     * Details about an Amazon Inspector finding.
     * @alias module:model/Finding
     * @param awsAccountId {String} 
     * @param description {String} 
     * @param findingArn {String} 
     * @param firstObservedAt {Date} 
     * @param lastObservedAt {Date} 
     * @param remediation {module:model/FindingRemediation} 
     * @param resources {Array} 
     * @param severity {module:model/Severity} 
     * @param status {module:model/FindingStatus} 
     * @param type {module:model/FindingType} 
     */
    constructor(awsAccountId, description, findingArn, firstObservedAt, lastObservedAt, remediation, resources, severity, status, type) { 
        
        Finding.initialize(this, awsAccountId, description, findingArn, firstObservedAt, lastObservedAt, remediation, resources, severity, status, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, awsAccountId, description, findingArn, firstObservedAt, lastObservedAt, remediation, resources, severity, status, type) { 
        obj['awsAccountId'] = awsAccountId;
        obj['description'] = description;
        obj['findingArn'] = findingArn;
        obj['firstObservedAt'] = firstObservedAt;
        obj['lastObservedAt'] = lastObservedAt;
        obj['remediation'] = remediation;
        obj['resources'] = resources;
        obj['severity'] = severity;
        obj['status'] = status;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>Finding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Finding} obj Optional instance to populate.
     * @return {module:model/Finding} The populated <code>Finding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Finding();

            if (data.hasOwnProperty('awsAccountId')) {
                obj['awsAccountId'] = ApiClient.convertToType(data['awsAccountId'], 'String');
            }
            if (data.hasOwnProperty('codeVulnerabilityDetails')) {
                obj['codeVulnerabilityDetails'] = FindingCodeVulnerabilityDetails.constructFromObject(data['codeVulnerabilityDetails']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('epss')) {
                obj['epss'] = FindingEpss.constructFromObject(data['epss']);
            }
            if (data.hasOwnProperty('exploitAvailable')) {
                obj['exploitAvailable'] = ApiClient.convertToType(data['exploitAvailable'], ExploitAvailable);
            }
            if (data.hasOwnProperty('exploitabilityDetails')) {
                obj['exploitabilityDetails'] = FindingExploitabilityDetails.constructFromObject(data['exploitabilityDetails']);
            }
            if (data.hasOwnProperty('findingArn')) {
                obj['findingArn'] = ApiClient.convertToType(data['findingArn'], 'String');
            }
            if (data.hasOwnProperty('firstObservedAt')) {
                obj['firstObservedAt'] = ApiClient.convertToType(data['firstObservedAt'], 'Date');
            }
            if (data.hasOwnProperty('fixAvailable')) {
                obj['fixAvailable'] = ApiClient.convertToType(data['fixAvailable'], FixAvailable);
            }
            if (data.hasOwnProperty('inspectorScore')) {
                obj['inspectorScore'] = ApiClient.convertToType(data['inspectorScore'], 'Number');
            }
            if (data.hasOwnProperty('inspectorScoreDetails')) {
                obj['inspectorScoreDetails'] = FindingInspectorScoreDetails.constructFromObject(data['inspectorScoreDetails']);
            }
            if (data.hasOwnProperty('lastObservedAt')) {
                obj['lastObservedAt'] = ApiClient.convertToType(data['lastObservedAt'], 'Date');
            }
            if (data.hasOwnProperty('networkReachabilityDetails')) {
                obj['networkReachabilityDetails'] = FindingNetworkReachabilityDetails.constructFromObject(data['networkReachabilityDetails']);
            }
            if (data.hasOwnProperty('packageVulnerabilityDetails')) {
                obj['packageVulnerabilityDetails'] = FindingPackageVulnerabilityDetails.constructFromObject(data['packageVulnerabilityDetails']);
            }
            if (data.hasOwnProperty('remediation')) {
                obj['remediation'] = FindingRemediation.constructFromObject(data['remediation']);
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ApiClient.convertToType(data['resources'], Array);
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], Severity);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], FindingStatus);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], FindingType);
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Finding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Finding</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Finding.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `awsAccountId`
        if (data['awsAccountId']) { // data not null
          String.validateJSON(data['awsAccountId']);
        }
        // validate the optional field `codeVulnerabilityDetails`
        if (data['codeVulnerabilityDetails']) { // data not null
          FindingCodeVulnerabilityDetails.validateJSON(data['codeVulnerabilityDetails']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `epss`
        if (data['epss']) { // data not null
          FindingEpss.validateJSON(data['epss']);
        }
        // validate the optional field `exploitAvailable`
        if (data['exploitAvailable']) { // data not null
          ExploitAvailable.validateJSON(data['exploitAvailable']);
        }
        // validate the optional field `exploitabilityDetails`
        if (data['exploitabilityDetails']) { // data not null
          FindingExploitabilityDetails.validateJSON(data['exploitabilityDetails']);
        }
        // validate the optional field `findingArn`
        if (data['findingArn']) { // data not null
          String.validateJSON(data['findingArn']);
        }
        // validate the optional field `firstObservedAt`
        if (data['firstObservedAt']) { // data not null
          Date.validateJSON(data['firstObservedAt']);
        }
        // validate the optional field `fixAvailable`
        if (data['fixAvailable']) { // data not null
          FixAvailable.validateJSON(data['fixAvailable']);
        }
        // validate the optional field `inspectorScore`
        if (data['inspectorScore']) { // data not null
          Number.validateJSON(data['inspectorScore']);
        }
        // validate the optional field `inspectorScoreDetails`
        if (data['inspectorScoreDetails']) { // data not null
          FindingInspectorScoreDetails.validateJSON(data['inspectorScoreDetails']);
        }
        // validate the optional field `lastObservedAt`
        if (data['lastObservedAt']) { // data not null
          Date.validateJSON(data['lastObservedAt']);
        }
        // validate the optional field `networkReachabilityDetails`
        if (data['networkReachabilityDetails']) { // data not null
          FindingNetworkReachabilityDetails.validateJSON(data['networkReachabilityDetails']);
        }
        // validate the optional field `packageVulnerabilityDetails`
        if (data['packageVulnerabilityDetails']) { // data not null
          FindingPackageVulnerabilityDetails.validateJSON(data['packageVulnerabilityDetails']);
        }
        // validate the optional field `remediation`
        if (data['remediation']) { // data not null
          FindingRemediation.validateJSON(data['remediation']);
        }
        // validate the optional field `resources`
        if (data['resources']) { // data not null
          Array.validateJSON(data['resources']);
        }
        // validate the optional field `severity`
        if (data['severity']) { // data not null
          Severity.validateJSON(data['severity']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          FindingStatus.validateJSON(data['status']);
        }
        // validate the optional field `title`
        if (data['title']) { // data not null
          String.validateJSON(data['title']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          FindingType.validateJSON(data['type']);
        }
        // validate the optional field `updatedAt`
        if (data['updatedAt']) { // data not null
          Date.validateJSON(data['updatedAt']);
        }

        return true;
    }


}

Finding.RequiredProperties = ["awsAccountId", "description", "findingArn", "firstObservedAt", "lastObservedAt", "remediation", "resources", "severity", "status", "type"];

/**
 * @member {String} awsAccountId
 */
Finding.prototype['awsAccountId'] = undefined;

/**
 * @member {module:model/FindingCodeVulnerabilityDetails} codeVulnerabilityDetails
 */
Finding.prototype['codeVulnerabilityDetails'] = undefined;

/**
 * @member {String} description
 */
Finding.prototype['description'] = undefined;

/**
 * @member {module:model/FindingEpss} epss
 */
Finding.prototype['epss'] = undefined;

/**
 * @member {module:model/ExploitAvailable} exploitAvailable
 */
Finding.prototype['exploitAvailable'] = undefined;

/**
 * @member {module:model/FindingExploitabilityDetails} exploitabilityDetails
 */
Finding.prototype['exploitabilityDetails'] = undefined;

/**
 * @member {String} findingArn
 */
Finding.prototype['findingArn'] = undefined;

/**
 * @member {Date} firstObservedAt
 */
Finding.prototype['firstObservedAt'] = undefined;

/**
 * @member {module:model/FixAvailable} fixAvailable
 */
Finding.prototype['fixAvailable'] = undefined;

/**
 * @member {Number} inspectorScore
 */
Finding.prototype['inspectorScore'] = undefined;

/**
 * @member {module:model/FindingInspectorScoreDetails} inspectorScoreDetails
 */
Finding.prototype['inspectorScoreDetails'] = undefined;

/**
 * @member {Date} lastObservedAt
 */
Finding.prototype['lastObservedAt'] = undefined;

/**
 * @member {module:model/FindingNetworkReachabilityDetails} networkReachabilityDetails
 */
Finding.prototype['networkReachabilityDetails'] = undefined;

/**
 * @member {module:model/FindingPackageVulnerabilityDetails} packageVulnerabilityDetails
 */
Finding.prototype['packageVulnerabilityDetails'] = undefined;

/**
 * @member {module:model/FindingRemediation} remediation
 */
Finding.prototype['remediation'] = undefined;

/**
 * @member {Array} resources
 */
Finding.prototype['resources'] = undefined;

/**
 * @member {module:model/Severity} severity
 */
Finding.prototype['severity'] = undefined;

/**
 * @member {module:model/FindingStatus} status
 */
Finding.prototype['status'] = undefined;

/**
 * @member {String} title
 */
Finding.prototype['title'] = undefined;

/**
 * @member {module:model/FindingType} type
 */
Finding.prototype['type'] = undefined;

/**
 * @member {Date} updatedAt
 */
Finding.prototype['updatedAt'] = undefined;






export default Finding;

