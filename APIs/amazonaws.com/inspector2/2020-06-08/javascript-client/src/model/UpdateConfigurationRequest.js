/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateConfigurationRequestEcrConfiguration from './UpdateConfigurationRequestEcrConfiguration';

/**
 * The UpdateConfigurationRequest model module.
 * @module model/UpdateConfigurationRequest
 * @version 2020-06-08
 */
class UpdateConfigurationRequest {
    /**
     * Constructs a new <code>UpdateConfigurationRequest</code>.
     * @alias module:model/UpdateConfigurationRequest
     * @param ecrConfiguration {module:model/UpdateConfigurationRequestEcrConfiguration} 
     */
    constructor(ecrConfiguration) { 
        
        UpdateConfigurationRequest.initialize(this, ecrConfiguration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ecrConfiguration) { 
        obj['ecrConfiguration'] = ecrConfiguration;
    }

    /**
     * Constructs a <code>UpdateConfigurationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateConfigurationRequest} obj Optional instance to populate.
     * @return {module:model/UpdateConfigurationRequest} The populated <code>UpdateConfigurationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateConfigurationRequest();

            if (data.hasOwnProperty('ecrConfiguration')) {
                obj['ecrConfiguration'] = UpdateConfigurationRequestEcrConfiguration.constructFromObject(data['ecrConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateConfigurationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateConfigurationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateConfigurationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ecrConfiguration`
        if (data['ecrConfiguration']) { // data not null
          UpdateConfigurationRequestEcrConfiguration.validateJSON(data['ecrConfiguration']);
        }

        return true;
    }


}

UpdateConfigurationRequest.RequiredProperties = ["ecrConfiguration"];

/**
 * @member {module:model/UpdateConfigurationRequestEcrConfiguration} ecrConfiguration
 */
UpdateConfigurationRequest.prototype['ecrConfiguration'] = undefined;






export default UpdateConfigurationRequest;

