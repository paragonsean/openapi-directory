/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LambdaFunctionMetadata from './LambdaFunctionMetadata';
import Runtime from './Runtime';

/**
 * The ResourceScanMetadataLambdaFunction model module.
 * @module model/ResourceScanMetadataLambdaFunction
 * @version 2020-06-08
 */
class ResourceScanMetadataLambdaFunction {
    /**
     * Constructs a new <code>ResourceScanMetadataLambdaFunction</code>.
     * @alias module:model/ResourceScanMetadataLambdaFunction
     * @implements module:model/LambdaFunctionMetadata
     */
    constructor() { 
        LambdaFunctionMetadata.initialize(this);
        ResourceScanMetadataLambdaFunction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceScanMetadataLambdaFunction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceScanMetadataLambdaFunction} obj Optional instance to populate.
     * @return {module:model/ResourceScanMetadataLambdaFunction} The populated <code>ResourceScanMetadataLambdaFunction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceScanMetadataLambdaFunction();
            LambdaFunctionMetadata.constructFromObject(data, obj);

            if (data.hasOwnProperty('functionName')) {
                obj['functionName'] = ApiClient.convertToType(data['functionName'], 'String');
            }
            if (data.hasOwnProperty('functionTags')) {
                obj['functionTags'] = ApiClient.convertToType(data['functionTags'], Object);
            }
            if (data.hasOwnProperty('layers')) {
                obj['layers'] = ApiClient.convertToType(data['layers'], Array);
            }
            if (data.hasOwnProperty('runtime')) {
                obj['runtime'] = ApiClient.convertToType(data['runtime'], Runtime);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceScanMetadataLambdaFunction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceScanMetadataLambdaFunction</code>.
     */
    static validateJSON(data) {
        // validate the optional field `functionName`
        if (data['functionName']) { // data not null
          String.validateJSON(data['functionName']);
        }
        // validate the optional field `functionTags`
        if (data['functionTags']) { // data not null
          Object.validateJSON(data['functionTags']);
        }
        // validate the optional field `layers`
        if (data['layers']) { // data not null
          Array.validateJSON(data['layers']);
        }
        // validate the optional field `runtime`
        if (data['runtime']) { // data not null
          Runtime.validateJSON(data['runtime']);
        }

        return true;
    }


}



/**
 * @member {String} functionName
 */
ResourceScanMetadataLambdaFunction.prototype['functionName'] = undefined;

/**
 * @member {Object} functionTags
 */
ResourceScanMetadataLambdaFunction.prototype['functionTags'] = undefined;

/**
 * @member {Array} layers
 */
ResourceScanMetadataLambdaFunction.prototype['layers'] = undefined;

/**
 * @member {module:model/Runtime} runtime
 */
ResourceScanMetadataLambdaFunction.prototype['runtime'] = undefined;


// Implement LambdaFunctionMetadata interface:
/**
 * @member {String} functionName
 */
LambdaFunctionMetadata.prototype['functionName'] = undefined;
/**
 * @member {Object} functionTags
 */
LambdaFunctionMetadata.prototype['functionTags'] = undefined;
/**
 * @member {Array} layers
 */
LambdaFunctionMetadata.prototype['layers'] = undefined;
/**
 * @member {module:model/Runtime} runtime
 */
LambdaFunctionMetadata.prototype['runtime'] = undefined;




export default ResourceScanMetadataLambdaFunction;

