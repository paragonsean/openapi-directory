/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SeverityCounts from './SeverityCounts';

/**
 * The LambdaLayerAggregationResponse model module.
 * @module model/LambdaLayerAggregationResponse
 * @version 2020-06-08
 */
class LambdaLayerAggregationResponse {
    /**
     * Constructs a new <code>LambdaLayerAggregationResponse</code>.
     * A response that contains the results of an AWS Lambda function layer finding aggregation.
     * @alias module:model/LambdaLayerAggregationResponse
     * @param accountId {String} 
     * @param functionName {String} 
     * @param layerArn {String} 
     * @param resourceId {String} 
     */
    constructor(accountId, functionName, layerArn, resourceId) { 
        
        LambdaLayerAggregationResponse.initialize(this, accountId, functionName, layerArn, resourceId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountId, functionName, layerArn, resourceId) { 
        obj['accountId'] = accountId;
        obj['functionName'] = functionName;
        obj['layerArn'] = layerArn;
        obj['resourceId'] = resourceId;
    }

    /**
     * Constructs a <code>LambdaLayerAggregationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LambdaLayerAggregationResponse} obj Optional instance to populate.
     * @return {module:model/LambdaLayerAggregationResponse} The populated <code>LambdaLayerAggregationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LambdaLayerAggregationResponse();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('functionName')) {
                obj['functionName'] = ApiClient.convertToType(data['functionName'], 'String');
            }
            if (data.hasOwnProperty('layerArn')) {
                obj['layerArn'] = ApiClient.convertToType(data['layerArn'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('severityCounts')) {
                obj['severityCounts'] = SeverityCounts.constructFromObject(data['severityCounts']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LambdaLayerAggregationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LambdaLayerAggregationResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LambdaLayerAggregationResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `accountId`
        if (data['accountId']) { // data not null
          String.validateJSON(data['accountId']);
        }
        // validate the optional field `functionName`
        if (data['functionName']) { // data not null
          String.validateJSON(data['functionName']);
        }
        // validate the optional field `layerArn`
        if (data['layerArn']) { // data not null
          String.validateJSON(data['layerArn']);
        }
        // validate the optional field `resourceId`
        if (data['resourceId']) { // data not null
          String.validateJSON(data['resourceId']);
        }
        // validate the optional field `severityCounts`
        if (data['severityCounts']) { // data not null
          SeverityCounts.validateJSON(data['severityCounts']);
        }

        return true;
    }


}

LambdaLayerAggregationResponse.RequiredProperties = ["accountId", "functionName", "layerArn", "resourceId"];

/**
 * @member {String} accountId
 */
LambdaLayerAggregationResponse.prototype['accountId'] = undefined;

/**
 * @member {String} functionName
 */
LambdaLayerAggregationResponse.prototype['functionName'] = undefined;

/**
 * @member {String} layerArn
 */
LambdaLayerAggregationResponse.prototype['layerArn'] = undefined;

/**
 * @member {String} resourceId
 */
LambdaLayerAggregationResponse.prototype['resourceId'] = undefined;

/**
 * @member {module:model/SeverityCounts} severityCounts
 */
LambdaLayerAggregationResponse.prototype['severityCounts'] = undefined;






export default LambdaLayerAggregationResponse;

