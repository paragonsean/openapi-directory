/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AwsEc2InstanceDetails model module.
 * @module model/AwsEc2InstanceDetails
 * @version 2020-06-08
 */
class AwsEc2InstanceDetails {
    /**
     * Constructs a new <code>AwsEc2InstanceDetails</code>.
     * Details of the Amazon EC2 instance involved in a finding.
     * @alias module:model/AwsEc2InstanceDetails
     */
    constructor() { 
        
        AwsEc2InstanceDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AwsEc2InstanceDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AwsEc2InstanceDetails} obj Optional instance to populate.
     * @return {module:model/AwsEc2InstanceDetails} The populated <code>AwsEc2InstanceDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AwsEc2InstanceDetails();

            if (data.hasOwnProperty('iamInstanceProfileArn')) {
                obj['iamInstanceProfileArn'] = ApiClient.convertToType(data['iamInstanceProfileArn'], 'String');
            }
            if (data.hasOwnProperty('imageId')) {
                obj['imageId'] = ApiClient.convertToType(data['imageId'], 'String');
            }
            if (data.hasOwnProperty('ipV4Addresses')) {
                obj['ipV4Addresses'] = ApiClient.convertToType(data['ipV4Addresses'], Array);
            }
            if (data.hasOwnProperty('ipV6Addresses')) {
                obj['ipV6Addresses'] = ApiClient.convertToType(data['ipV6Addresses'], Array);
            }
            if (data.hasOwnProperty('keyName')) {
                obj['keyName'] = ApiClient.convertToType(data['keyName'], 'String');
            }
            if (data.hasOwnProperty('launchedAt')) {
                obj['launchedAt'] = ApiClient.convertToType(data['launchedAt'], 'Date');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
            }
            if (data.hasOwnProperty('subnetId')) {
                obj['subnetId'] = ApiClient.convertToType(data['subnetId'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('vpcId')) {
                obj['vpcId'] = ApiClient.convertToType(data['vpcId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AwsEc2InstanceDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AwsEc2InstanceDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `iamInstanceProfileArn`
        if (data['iamInstanceProfileArn']) { // data not null
          String.validateJSON(data['iamInstanceProfileArn']);
        }
        // validate the optional field `imageId`
        if (data['imageId']) { // data not null
          String.validateJSON(data['imageId']);
        }
        // validate the optional field `ipV4Addresses`
        if (data['ipV4Addresses']) { // data not null
          Array.validateJSON(data['ipV4Addresses']);
        }
        // validate the optional field `ipV6Addresses`
        if (data['ipV6Addresses']) { // data not null
          Array.validateJSON(data['ipV6Addresses']);
        }
        // validate the optional field `keyName`
        if (data['keyName']) { // data not null
          String.validateJSON(data['keyName']);
        }
        // validate the optional field `launchedAt`
        if (data['launchedAt']) { // data not null
          Date.validateJSON(data['launchedAt']);
        }
        // validate the optional field `platform`
        if (data['platform']) { // data not null
          String.validateJSON(data['platform']);
        }
        // validate the optional field `subnetId`
        if (data['subnetId']) { // data not null
          String.validateJSON(data['subnetId']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          String.validateJSON(data['type']);
        }
        // validate the optional field `vpcId`
        if (data['vpcId']) { // data not null
          String.validateJSON(data['vpcId']);
        }

        return true;
    }


}



/**
 * @member {String} iamInstanceProfileArn
 */
AwsEc2InstanceDetails.prototype['iamInstanceProfileArn'] = undefined;

/**
 * @member {String} imageId
 */
AwsEc2InstanceDetails.prototype['imageId'] = undefined;

/**
 * @member {Array} ipV4Addresses
 */
AwsEc2InstanceDetails.prototype['ipV4Addresses'] = undefined;

/**
 * @member {Array} ipV6Addresses
 */
AwsEc2InstanceDetails.prototype['ipV6Addresses'] = undefined;

/**
 * @member {String} keyName
 */
AwsEc2InstanceDetails.prototype['keyName'] = undefined;

/**
 * @member {Date} launchedAt
 */
AwsEc2InstanceDetails.prototype['launchedAt'] = undefined;

/**
 * @member {String} platform
 */
AwsEc2InstanceDetails.prototype['platform'] = undefined;

/**
 * @member {String} subnetId
 */
AwsEc2InstanceDetails.prototype['subnetId'] = undefined;

/**
 * @member {String} type
 */
AwsEc2InstanceDetails.prototype['type'] = undefined;

/**
 * @member {String} vpcId
 */
AwsEc2InstanceDetails.prototype['vpcId'] = undefined;






export default AwsEc2InstanceDetails;

