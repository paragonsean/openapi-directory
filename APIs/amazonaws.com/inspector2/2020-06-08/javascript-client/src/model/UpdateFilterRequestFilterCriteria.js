/**
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FilterCriteria from './FilterCriteria';

/**
 * The UpdateFilterRequestFilterCriteria model module.
 * @module model/UpdateFilterRequestFilterCriteria
 * @version 2020-06-08
 */
class UpdateFilterRequestFilterCriteria {
    /**
     * Constructs a new <code>UpdateFilterRequestFilterCriteria</code>.
     * @alias module:model/UpdateFilterRequestFilterCriteria
     * @implements module:model/FilterCriteria
     */
    constructor() { 
        FilterCriteria.initialize(this);
        UpdateFilterRequestFilterCriteria.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateFilterRequestFilterCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateFilterRequestFilterCriteria} obj Optional instance to populate.
     * @return {module:model/UpdateFilterRequestFilterCriteria} The populated <code>UpdateFilterRequestFilterCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateFilterRequestFilterCriteria();
            FilterCriteria.constructFromObject(data, obj);

            if (data.hasOwnProperty('awsAccountId')) {
                obj['awsAccountId'] = ApiClient.convertToType(data['awsAccountId'], Array);
            }
            if (data.hasOwnProperty('codeVulnerabilityDetectorName')) {
                obj['codeVulnerabilityDetectorName'] = ApiClient.convertToType(data['codeVulnerabilityDetectorName'], Array);
            }
            if (data.hasOwnProperty('codeVulnerabilityDetectorTags')) {
                obj['codeVulnerabilityDetectorTags'] = ApiClient.convertToType(data['codeVulnerabilityDetectorTags'], Array);
            }
            if (data.hasOwnProperty('codeVulnerabilityFilePath')) {
                obj['codeVulnerabilityFilePath'] = ApiClient.convertToType(data['codeVulnerabilityFilePath'], Array);
            }
            if (data.hasOwnProperty('componentId')) {
                obj['componentId'] = ApiClient.convertToType(data['componentId'], Array);
            }
            if (data.hasOwnProperty('componentType')) {
                obj['componentType'] = ApiClient.convertToType(data['componentType'], Array);
            }
            if (data.hasOwnProperty('ec2InstanceImageId')) {
                obj['ec2InstanceImageId'] = ApiClient.convertToType(data['ec2InstanceImageId'], Array);
            }
            if (data.hasOwnProperty('ec2InstanceSubnetId')) {
                obj['ec2InstanceSubnetId'] = ApiClient.convertToType(data['ec2InstanceSubnetId'], Array);
            }
            if (data.hasOwnProperty('ec2InstanceVpcId')) {
                obj['ec2InstanceVpcId'] = ApiClient.convertToType(data['ec2InstanceVpcId'], Array);
            }
            if (data.hasOwnProperty('ecrImageArchitecture')) {
                obj['ecrImageArchitecture'] = ApiClient.convertToType(data['ecrImageArchitecture'], Array);
            }
            if (data.hasOwnProperty('ecrImageHash')) {
                obj['ecrImageHash'] = ApiClient.convertToType(data['ecrImageHash'], Array);
            }
            if (data.hasOwnProperty('ecrImagePushedAt')) {
                obj['ecrImagePushedAt'] = ApiClient.convertToType(data['ecrImagePushedAt'], Array);
            }
            if (data.hasOwnProperty('ecrImageRegistry')) {
                obj['ecrImageRegistry'] = ApiClient.convertToType(data['ecrImageRegistry'], Array);
            }
            if (data.hasOwnProperty('ecrImageRepositoryName')) {
                obj['ecrImageRepositoryName'] = ApiClient.convertToType(data['ecrImageRepositoryName'], Array);
            }
            if (data.hasOwnProperty('ecrImageTags')) {
                obj['ecrImageTags'] = ApiClient.convertToType(data['ecrImageTags'], Array);
            }
            if (data.hasOwnProperty('epssScore')) {
                obj['epssScore'] = ApiClient.convertToType(data['epssScore'], Array);
            }
            if (data.hasOwnProperty('exploitAvailable')) {
                obj['exploitAvailable'] = ApiClient.convertToType(data['exploitAvailable'], Array);
            }
            if (data.hasOwnProperty('findingArn')) {
                obj['findingArn'] = ApiClient.convertToType(data['findingArn'], Array);
            }
            if (data.hasOwnProperty('findingStatus')) {
                obj['findingStatus'] = ApiClient.convertToType(data['findingStatus'], Array);
            }
            if (data.hasOwnProperty('findingType')) {
                obj['findingType'] = ApiClient.convertToType(data['findingType'], Array);
            }
            if (data.hasOwnProperty('firstObservedAt')) {
                obj['firstObservedAt'] = ApiClient.convertToType(data['firstObservedAt'], Array);
            }
            if (data.hasOwnProperty('fixAvailable')) {
                obj['fixAvailable'] = ApiClient.convertToType(data['fixAvailable'], Array);
            }
            if (data.hasOwnProperty('inspectorScore')) {
                obj['inspectorScore'] = ApiClient.convertToType(data['inspectorScore'], Array);
            }
            if (data.hasOwnProperty('lambdaFunctionExecutionRoleArn')) {
                obj['lambdaFunctionExecutionRoleArn'] = ApiClient.convertToType(data['lambdaFunctionExecutionRoleArn'], Array);
            }
            if (data.hasOwnProperty('lambdaFunctionLastModifiedAt')) {
                obj['lambdaFunctionLastModifiedAt'] = ApiClient.convertToType(data['lambdaFunctionLastModifiedAt'], Array);
            }
            if (data.hasOwnProperty('lambdaFunctionLayers')) {
                obj['lambdaFunctionLayers'] = ApiClient.convertToType(data['lambdaFunctionLayers'], Array);
            }
            if (data.hasOwnProperty('lambdaFunctionName')) {
                obj['lambdaFunctionName'] = ApiClient.convertToType(data['lambdaFunctionName'], Array);
            }
            if (data.hasOwnProperty('lambdaFunctionRuntime')) {
                obj['lambdaFunctionRuntime'] = ApiClient.convertToType(data['lambdaFunctionRuntime'], Array);
            }
            if (data.hasOwnProperty('lastObservedAt')) {
                obj['lastObservedAt'] = ApiClient.convertToType(data['lastObservedAt'], Array);
            }
            if (data.hasOwnProperty('networkProtocol')) {
                obj['networkProtocol'] = ApiClient.convertToType(data['networkProtocol'], Array);
            }
            if (data.hasOwnProperty('portRange')) {
                obj['portRange'] = ApiClient.convertToType(data['portRange'], Array);
            }
            if (data.hasOwnProperty('relatedVulnerabilities')) {
                obj['relatedVulnerabilities'] = ApiClient.convertToType(data['relatedVulnerabilities'], Array);
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], Array);
            }
            if (data.hasOwnProperty('resourceTags')) {
                obj['resourceTags'] = ApiClient.convertToType(data['resourceTags'], Array);
            }
            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], Array);
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], Array);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], Array);
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], Array);
            }
            if (data.hasOwnProperty('vendorSeverity')) {
                obj['vendorSeverity'] = ApiClient.convertToType(data['vendorSeverity'], Array);
            }
            if (data.hasOwnProperty('vulnerabilityId')) {
                obj['vulnerabilityId'] = ApiClient.convertToType(data['vulnerabilityId'], Array);
            }
            if (data.hasOwnProperty('vulnerabilitySource')) {
                obj['vulnerabilitySource'] = ApiClient.convertToType(data['vulnerabilitySource'], Array);
            }
            if (data.hasOwnProperty('vulnerablePackages')) {
                obj['vulnerablePackages'] = ApiClient.convertToType(data['vulnerablePackages'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateFilterRequestFilterCriteria</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateFilterRequestFilterCriteria</code>.
     */
    static validateJSON(data) {
        // validate the optional field `awsAccountId`
        if (data['awsAccountId']) { // data not null
          Array.validateJSON(data['awsAccountId']);
        }
        // validate the optional field `codeVulnerabilityDetectorName`
        if (data['codeVulnerabilityDetectorName']) { // data not null
          Array.validateJSON(data['codeVulnerabilityDetectorName']);
        }
        // validate the optional field `codeVulnerabilityDetectorTags`
        if (data['codeVulnerabilityDetectorTags']) { // data not null
          Array.validateJSON(data['codeVulnerabilityDetectorTags']);
        }
        // validate the optional field `codeVulnerabilityFilePath`
        if (data['codeVulnerabilityFilePath']) { // data not null
          Array.validateJSON(data['codeVulnerabilityFilePath']);
        }
        // validate the optional field `componentId`
        if (data['componentId']) { // data not null
          Array.validateJSON(data['componentId']);
        }
        // validate the optional field `componentType`
        if (data['componentType']) { // data not null
          Array.validateJSON(data['componentType']);
        }
        // validate the optional field `ec2InstanceImageId`
        if (data['ec2InstanceImageId']) { // data not null
          Array.validateJSON(data['ec2InstanceImageId']);
        }
        // validate the optional field `ec2InstanceSubnetId`
        if (data['ec2InstanceSubnetId']) { // data not null
          Array.validateJSON(data['ec2InstanceSubnetId']);
        }
        // validate the optional field `ec2InstanceVpcId`
        if (data['ec2InstanceVpcId']) { // data not null
          Array.validateJSON(data['ec2InstanceVpcId']);
        }
        // validate the optional field `ecrImageArchitecture`
        if (data['ecrImageArchitecture']) { // data not null
          Array.validateJSON(data['ecrImageArchitecture']);
        }
        // validate the optional field `ecrImageHash`
        if (data['ecrImageHash']) { // data not null
          Array.validateJSON(data['ecrImageHash']);
        }
        // validate the optional field `ecrImagePushedAt`
        if (data['ecrImagePushedAt']) { // data not null
          Array.validateJSON(data['ecrImagePushedAt']);
        }
        // validate the optional field `ecrImageRegistry`
        if (data['ecrImageRegistry']) { // data not null
          Array.validateJSON(data['ecrImageRegistry']);
        }
        // validate the optional field `ecrImageRepositoryName`
        if (data['ecrImageRepositoryName']) { // data not null
          Array.validateJSON(data['ecrImageRepositoryName']);
        }
        // validate the optional field `ecrImageTags`
        if (data['ecrImageTags']) { // data not null
          Array.validateJSON(data['ecrImageTags']);
        }
        // validate the optional field `epssScore`
        if (data['epssScore']) { // data not null
          Array.validateJSON(data['epssScore']);
        }
        // validate the optional field `exploitAvailable`
        if (data['exploitAvailable']) { // data not null
          Array.validateJSON(data['exploitAvailable']);
        }
        // validate the optional field `findingArn`
        if (data['findingArn']) { // data not null
          Array.validateJSON(data['findingArn']);
        }
        // validate the optional field `findingStatus`
        if (data['findingStatus']) { // data not null
          Array.validateJSON(data['findingStatus']);
        }
        // validate the optional field `findingType`
        if (data['findingType']) { // data not null
          Array.validateJSON(data['findingType']);
        }
        // validate the optional field `firstObservedAt`
        if (data['firstObservedAt']) { // data not null
          Array.validateJSON(data['firstObservedAt']);
        }
        // validate the optional field `fixAvailable`
        if (data['fixAvailable']) { // data not null
          Array.validateJSON(data['fixAvailable']);
        }
        // validate the optional field `inspectorScore`
        if (data['inspectorScore']) { // data not null
          Array.validateJSON(data['inspectorScore']);
        }
        // validate the optional field `lambdaFunctionExecutionRoleArn`
        if (data['lambdaFunctionExecutionRoleArn']) { // data not null
          Array.validateJSON(data['lambdaFunctionExecutionRoleArn']);
        }
        // validate the optional field `lambdaFunctionLastModifiedAt`
        if (data['lambdaFunctionLastModifiedAt']) { // data not null
          Array.validateJSON(data['lambdaFunctionLastModifiedAt']);
        }
        // validate the optional field `lambdaFunctionLayers`
        if (data['lambdaFunctionLayers']) { // data not null
          Array.validateJSON(data['lambdaFunctionLayers']);
        }
        // validate the optional field `lambdaFunctionName`
        if (data['lambdaFunctionName']) { // data not null
          Array.validateJSON(data['lambdaFunctionName']);
        }
        // validate the optional field `lambdaFunctionRuntime`
        if (data['lambdaFunctionRuntime']) { // data not null
          Array.validateJSON(data['lambdaFunctionRuntime']);
        }
        // validate the optional field `lastObservedAt`
        if (data['lastObservedAt']) { // data not null
          Array.validateJSON(data['lastObservedAt']);
        }
        // validate the optional field `networkProtocol`
        if (data['networkProtocol']) { // data not null
          Array.validateJSON(data['networkProtocol']);
        }
        // validate the optional field `portRange`
        if (data['portRange']) { // data not null
          Array.validateJSON(data['portRange']);
        }
        // validate the optional field `relatedVulnerabilities`
        if (data['relatedVulnerabilities']) { // data not null
          Array.validateJSON(data['relatedVulnerabilities']);
        }
        // validate the optional field `resourceId`
        if (data['resourceId']) { // data not null
          Array.validateJSON(data['resourceId']);
        }
        // validate the optional field `resourceTags`
        if (data['resourceTags']) { // data not null
          Array.validateJSON(data['resourceTags']);
        }
        // validate the optional field `resourceType`
        if (data['resourceType']) { // data not null
          Array.validateJSON(data['resourceType']);
        }
        // validate the optional field `severity`
        if (data['severity']) { // data not null
          Array.validateJSON(data['severity']);
        }
        // validate the optional field `title`
        if (data['title']) { // data not null
          Array.validateJSON(data['title']);
        }
        // validate the optional field `updatedAt`
        if (data['updatedAt']) { // data not null
          Array.validateJSON(data['updatedAt']);
        }
        // validate the optional field `vendorSeverity`
        if (data['vendorSeverity']) { // data not null
          Array.validateJSON(data['vendorSeverity']);
        }
        // validate the optional field `vulnerabilityId`
        if (data['vulnerabilityId']) { // data not null
          Array.validateJSON(data['vulnerabilityId']);
        }
        // validate the optional field `vulnerabilitySource`
        if (data['vulnerabilitySource']) { // data not null
          Array.validateJSON(data['vulnerabilitySource']);
        }
        // validate the optional field `vulnerablePackages`
        if (data['vulnerablePackages']) { // data not null
          Array.validateJSON(data['vulnerablePackages']);
        }

        return true;
    }


}



/**
 * @member {Array} awsAccountId
 */
UpdateFilterRequestFilterCriteria.prototype['awsAccountId'] = undefined;

/**
 * @member {Array} codeVulnerabilityDetectorName
 */
UpdateFilterRequestFilterCriteria.prototype['codeVulnerabilityDetectorName'] = undefined;

/**
 * @member {Array} codeVulnerabilityDetectorTags
 */
UpdateFilterRequestFilterCriteria.prototype['codeVulnerabilityDetectorTags'] = undefined;

/**
 * @member {Array} codeVulnerabilityFilePath
 */
UpdateFilterRequestFilterCriteria.prototype['codeVulnerabilityFilePath'] = undefined;

/**
 * @member {Array} componentId
 */
UpdateFilterRequestFilterCriteria.prototype['componentId'] = undefined;

/**
 * @member {Array} componentType
 */
UpdateFilterRequestFilterCriteria.prototype['componentType'] = undefined;

/**
 * @member {Array} ec2InstanceImageId
 */
UpdateFilterRequestFilterCriteria.prototype['ec2InstanceImageId'] = undefined;

/**
 * @member {Array} ec2InstanceSubnetId
 */
UpdateFilterRequestFilterCriteria.prototype['ec2InstanceSubnetId'] = undefined;

/**
 * @member {Array} ec2InstanceVpcId
 */
UpdateFilterRequestFilterCriteria.prototype['ec2InstanceVpcId'] = undefined;

/**
 * @member {Array} ecrImageArchitecture
 */
UpdateFilterRequestFilterCriteria.prototype['ecrImageArchitecture'] = undefined;

/**
 * @member {Array} ecrImageHash
 */
UpdateFilterRequestFilterCriteria.prototype['ecrImageHash'] = undefined;

/**
 * @member {Array} ecrImagePushedAt
 */
UpdateFilterRequestFilterCriteria.prototype['ecrImagePushedAt'] = undefined;

/**
 * @member {Array} ecrImageRegistry
 */
UpdateFilterRequestFilterCriteria.prototype['ecrImageRegistry'] = undefined;

/**
 * @member {Array} ecrImageRepositoryName
 */
UpdateFilterRequestFilterCriteria.prototype['ecrImageRepositoryName'] = undefined;

/**
 * @member {Array} ecrImageTags
 */
UpdateFilterRequestFilterCriteria.prototype['ecrImageTags'] = undefined;

/**
 * @member {Array} epssScore
 */
UpdateFilterRequestFilterCriteria.prototype['epssScore'] = undefined;

/**
 * @member {Array} exploitAvailable
 */
UpdateFilterRequestFilterCriteria.prototype['exploitAvailable'] = undefined;

/**
 * @member {Array} findingArn
 */
UpdateFilterRequestFilterCriteria.prototype['findingArn'] = undefined;

/**
 * @member {Array} findingStatus
 */
UpdateFilterRequestFilterCriteria.prototype['findingStatus'] = undefined;

/**
 * @member {Array} findingType
 */
UpdateFilterRequestFilterCriteria.prototype['findingType'] = undefined;

/**
 * @member {Array} firstObservedAt
 */
UpdateFilterRequestFilterCriteria.prototype['firstObservedAt'] = undefined;

/**
 * @member {Array} fixAvailable
 */
UpdateFilterRequestFilterCriteria.prototype['fixAvailable'] = undefined;

/**
 * @member {Array} inspectorScore
 */
UpdateFilterRequestFilterCriteria.prototype['inspectorScore'] = undefined;

/**
 * @member {Array} lambdaFunctionExecutionRoleArn
 */
UpdateFilterRequestFilterCriteria.prototype['lambdaFunctionExecutionRoleArn'] = undefined;

/**
 * @member {Array} lambdaFunctionLastModifiedAt
 */
UpdateFilterRequestFilterCriteria.prototype['lambdaFunctionLastModifiedAt'] = undefined;

/**
 * @member {Array} lambdaFunctionLayers
 */
UpdateFilterRequestFilterCriteria.prototype['lambdaFunctionLayers'] = undefined;

/**
 * @member {Array} lambdaFunctionName
 */
UpdateFilterRequestFilterCriteria.prototype['lambdaFunctionName'] = undefined;

/**
 * @member {Array} lambdaFunctionRuntime
 */
UpdateFilterRequestFilterCriteria.prototype['lambdaFunctionRuntime'] = undefined;

/**
 * @member {Array} lastObservedAt
 */
UpdateFilterRequestFilterCriteria.prototype['lastObservedAt'] = undefined;

/**
 * @member {Array} networkProtocol
 */
UpdateFilterRequestFilterCriteria.prototype['networkProtocol'] = undefined;

/**
 * @member {Array} portRange
 */
UpdateFilterRequestFilterCriteria.prototype['portRange'] = undefined;

/**
 * @member {Array} relatedVulnerabilities
 */
UpdateFilterRequestFilterCriteria.prototype['relatedVulnerabilities'] = undefined;

/**
 * @member {Array} resourceId
 */
UpdateFilterRequestFilterCriteria.prototype['resourceId'] = undefined;

/**
 * @member {Array} resourceTags
 */
UpdateFilterRequestFilterCriteria.prototype['resourceTags'] = undefined;

/**
 * @member {Array} resourceType
 */
UpdateFilterRequestFilterCriteria.prototype['resourceType'] = undefined;

/**
 * @member {Array} severity
 */
UpdateFilterRequestFilterCriteria.prototype['severity'] = undefined;

/**
 * @member {Array} title
 */
UpdateFilterRequestFilterCriteria.prototype['title'] = undefined;

/**
 * @member {Array} updatedAt
 */
UpdateFilterRequestFilterCriteria.prototype['updatedAt'] = undefined;

/**
 * @member {Array} vendorSeverity
 */
UpdateFilterRequestFilterCriteria.prototype['vendorSeverity'] = undefined;

/**
 * @member {Array} vulnerabilityId
 */
UpdateFilterRequestFilterCriteria.prototype['vulnerabilityId'] = undefined;

/**
 * @member {Array} vulnerabilitySource
 */
UpdateFilterRequestFilterCriteria.prototype['vulnerabilitySource'] = undefined;

/**
 * @member {Array} vulnerablePackages
 */
UpdateFilterRequestFilterCriteria.prototype['vulnerablePackages'] = undefined;


// Implement FilterCriteria interface:
/**
 * @member {Array} awsAccountId
 */
FilterCriteria.prototype['awsAccountId'] = undefined;
/**
 * @member {Array} codeVulnerabilityDetectorName
 */
FilterCriteria.prototype['codeVulnerabilityDetectorName'] = undefined;
/**
 * @member {Array} codeVulnerabilityDetectorTags
 */
FilterCriteria.prototype['codeVulnerabilityDetectorTags'] = undefined;
/**
 * @member {Array} codeVulnerabilityFilePath
 */
FilterCriteria.prototype['codeVulnerabilityFilePath'] = undefined;
/**
 * @member {Array} componentId
 */
FilterCriteria.prototype['componentId'] = undefined;
/**
 * @member {Array} componentType
 */
FilterCriteria.prototype['componentType'] = undefined;
/**
 * @member {Array} ec2InstanceImageId
 */
FilterCriteria.prototype['ec2InstanceImageId'] = undefined;
/**
 * @member {Array} ec2InstanceSubnetId
 */
FilterCriteria.prototype['ec2InstanceSubnetId'] = undefined;
/**
 * @member {Array} ec2InstanceVpcId
 */
FilterCriteria.prototype['ec2InstanceVpcId'] = undefined;
/**
 * @member {Array} ecrImageArchitecture
 */
FilterCriteria.prototype['ecrImageArchitecture'] = undefined;
/**
 * @member {Array} ecrImageHash
 */
FilterCriteria.prototype['ecrImageHash'] = undefined;
/**
 * @member {Array} ecrImagePushedAt
 */
FilterCriteria.prototype['ecrImagePushedAt'] = undefined;
/**
 * @member {Array} ecrImageRegistry
 */
FilterCriteria.prototype['ecrImageRegistry'] = undefined;
/**
 * @member {Array} ecrImageRepositoryName
 */
FilterCriteria.prototype['ecrImageRepositoryName'] = undefined;
/**
 * @member {Array} ecrImageTags
 */
FilterCriteria.prototype['ecrImageTags'] = undefined;
/**
 * @member {Array} epssScore
 */
FilterCriteria.prototype['epssScore'] = undefined;
/**
 * @member {Array} exploitAvailable
 */
FilterCriteria.prototype['exploitAvailable'] = undefined;
/**
 * @member {Array} findingArn
 */
FilterCriteria.prototype['findingArn'] = undefined;
/**
 * @member {Array} findingStatus
 */
FilterCriteria.prototype['findingStatus'] = undefined;
/**
 * @member {Array} findingType
 */
FilterCriteria.prototype['findingType'] = undefined;
/**
 * @member {Array} firstObservedAt
 */
FilterCriteria.prototype['firstObservedAt'] = undefined;
/**
 * @member {Array} fixAvailable
 */
FilterCriteria.prototype['fixAvailable'] = undefined;
/**
 * @member {Array} inspectorScore
 */
FilterCriteria.prototype['inspectorScore'] = undefined;
/**
 * @member {Array} lambdaFunctionExecutionRoleArn
 */
FilterCriteria.prototype['lambdaFunctionExecutionRoleArn'] = undefined;
/**
 * @member {Array} lambdaFunctionLastModifiedAt
 */
FilterCriteria.prototype['lambdaFunctionLastModifiedAt'] = undefined;
/**
 * @member {Array} lambdaFunctionLayers
 */
FilterCriteria.prototype['lambdaFunctionLayers'] = undefined;
/**
 * @member {Array} lambdaFunctionName
 */
FilterCriteria.prototype['lambdaFunctionName'] = undefined;
/**
 * @member {Array} lambdaFunctionRuntime
 */
FilterCriteria.prototype['lambdaFunctionRuntime'] = undefined;
/**
 * @member {Array} lastObservedAt
 */
FilterCriteria.prototype['lastObservedAt'] = undefined;
/**
 * @member {Array} networkProtocol
 */
FilterCriteria.prototype['networkProtocol'] = undefined;
/**
 * @member {Array} portRange
 */
FilterCriteria.prototype['portRange'] = undefined;
/**
 * @member {Array} relatedVulnerabilities
 */
FilterCriteria.prototype['relatedVulnerabilities'] = undefined;
/**
 * @member {Array} resourceId
 */
FilterCriteria.prototype['resourceId'] = undefined;
/**
 * @member {Array} resourceTags
 */
FilterCriteria.prototype['resourceTags'] = undefined;
/**
 * @member {Array} resourceType
 */
FilterCriteria.prototype['resourceType'] = undefined;
/**
 * @member {Array} severity
 */
FilterCriteria.prototype['severity'] = undefined;
/**
 * @member {Array} title
 */
FilterCriteria.prototype['title'] = undefined;
/**
 * @member {Array} updatedAt
 */
FilterCriteria.prototype['updatedAt'] = undefined;
/**
 * @member {Array} vendorSeverity
 */
FilterCriteria.prototype['vendorSeverity'] = undefined;
/**
 * @member {Array} vulnerabilityId
 */
FilterCriteria.prototype['vulnerabilityId'] = undefined;
/**
 * @member {Array} vulnerabilitySource
 */
FilterCriteria.prototype['vulnerabilitySource'] = undefined;
/**
 * @member {Array} vulnerablePackages
 */
FilterCriteria.prototype['vulnerablePackages'] = undefined;




export default UpdateFilterRequestFilterCriteria;

