/*
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateFilterRequestFilterCriteria
 */
public class UpdateFilterRequestFilterCriteriaTest {
    private final UpdateFilterRequestFilterCriteria model = new UpdateFilterRequestFilterCriteria();

    /**
     * Model tests for UpdateFilterRequestFilterCriteria
     */
    @Test
    public void testUpdateFilterRequestFilterCriteria() {
        // TODO: test UpdateFilterRequestFilterCriteria
    }

    /**
     * Test the property 'awsAccountId'
     */
    @Test
    public void awsAccountIdTest() {
        // TODO: test awsAccountId
    }

    /**
     * Test the property 'codeVulnerabilityDetectorName'
     */
    @Test
    public void codeVulnerabilityDetectorNameTest() {
        // TODO: test codeVulnerabilityDetectorName
    }

    /**
     * Test the property 'codeVulnerabilityDetectorTags'
     */
    @Test
    public void codeVulnerabilityDetectorTagsTest() {
        // TODO: test codeVulnerabilityDetectorTags
    }

    /**
     * Test the property 'codeVulnerabilityFilePath'
     */
    @Test
    public void codeVulnerabilityFilePathTest() {
        // TODO: test codeVulnerabilityFilePath
    }

    /**
     * Test the property 'componentId'
     */
    @Test
    public void componentIdTest() {
        // TODO: test componentId
    }

    /**
     * Test the property 'componentType'
     */
    @Test
    public void componentTypeTest() {
        // TODO: test componentType
    }

    /**
     * Test the property 'ec2InstanceImageId'
     */
    @Test
    public void ec2InstanceImageIdTest() {
        // TODO: test ec2InstanceImageId
    }

    /**
     * Test the property 'ec2InstanceSubnetId'
     */
    @Test
    public void ec2InstanceSubnetIdTest() {
        // TODO: test ec2InstanceSubnetId
    }

    /**
     * Test the property 'ec2InstanceVpcId'
     */
    @Test
    public void ec2InstanceVpcIdTest() {
        // TODO: test ec2InstanceVpcId
    }

    /**
     * Test the property 'ecrImageArchitecture'
     */
    @Test
    public void ecrImageArchitectureTest() {
        // TODO: test ecrImageArchitecture
    }

    /**
     * Test the property 'ecrImageHash'
     */
    @Test
    public void ecrImageHashTest() {
        // TODO: test ecrImageHash
    }

    /**
     * Test the property 'ecrImagePushedAt'
     */
    @Test
    public void ecrImagePushedAtTest() {
        // TODO: test ecrImagePushedAt
    }

    /**
     * Test the property 'ecrImageRegistry'
     */
    @Test
    public void ecrImageRegistryTest() {
        // TODO: test ecrImageRegistry
    }

    /**
     * Test the property 'ecrImageRepositoryName'
     */
    @Test
    public void ecrImageRepositoryNameTest() {
        // TODO: test ecrImageRepositoryName
    }

    /**
     * Test the property 'ecrImageTags'
     */
    @Test
    public void ecrImageTagsTest() {
        // TODO: test ecrImageTags
    }

    /**
     * Test the property 'epssScore'
     */
    @Test
    public void epssScoreTest() {
        // TODO: test epssScore
    }

    /**
     * Test the property 'exploitAvailable'
     */
    @Test
    public void exploitAvailableTest() {
        // TODO: test exploitAvailable
    }

    /**
     * Test the property 'findingArn'
     */
    @Test
    public void findingArnTest() {
        // TODO: test findingArn
    }

    /**
     * Test the property 'findingStatus'
     */
    @Test
    public void findingStatusTest() {
        // TODO: test findingStatus
    }

    /**
     * Test the property 'findingType'
     */
    @Test
    public void findingTypeTest() {
        // TODO: test findingType
    }

    /**
     * Test the property 'firstObservedAt'
     */
    @Test
    public void firstObservedAtTest() {
        // TODO: test firstObservedAt
    }

    /**
     * Test the property 'fixAvailable'
     */
    @Test
    public void fixAvailableTest() {
        // TODO: test fixAvailable
    }

    /**
     * Test the property 'inspectorScore'
     */
    @Test
    public void inspectorScoreTest() {
        // TODO: test inspectorScore
    }

    /**
     * Test the property 'lambdaFunctionExecutionRoleArn'
     */
    @Test
    public void lambdaFunctionExecutionRoleArnTest() {
        // TODO: test lambdaFunctionExecutionRoleArn
    }

    /**
     * Test the property 'lambdaFunctionLastModifiedAt'
     */
    @Test
    public void lambdaFunctionLastModifiedAtTest() {
        // TODO: test lambdaFunctionLastModifiedAt
    }

    /**
     * Test the property 'lambdaFunctionLayers'
     */
    @Test
    public void lambdaFunctionLayersTest() {
        // TODO: test lambdaFunctionLayers
    }

    /**
     * Test the property 'lambdaFunctionName'
     */
    @Test
    public void lambdaFunctionNameTest() {
        // TODO: test lambdaFunctionName
    }

    /**
     * Test the property 'lambdaFunctionRuntime'
     */
    @Test
    public void lambdaFunctionRuntimeTest() {
        // TODO: test lambdaFunctionRuntime
    }

    /**
     * Test the property 'lastObservedAt'
     */
    @Test
    public void lastObservedAtTest() {
        // TODO: test lastObservedAt
    }

    /**
     * Test the property 'networkProtocol'
     */
    @Test
    public void networkProtocolTest() {
        // TODO: test networkProtocol
    }

    /**
     * Test the property 'portRange'
     */
    @Test
    public void portRangeTest() {
        // TODO: test portRange
    }

    /**
     * Test the property 'relatedVulnerabilities'
     */
    @Test
    public void relatedVulnerabilitiesTest() {
        // TODO: test relatedVulnerabilities
    }

    /**
     * Test the property 'resourceId'
     */
    @Test
    public void resourceIdTest() {
        // TODO: test resourceId
    }

    /**
     * Test the property 'resourceTags'
     */
    @Test
    public void resourceTagsTest() {
        // TODO: test resourceTags
    }

    /**
     * Test the property 'resourceType'
     */
    @Test
    public void resourceTypeTest() {
        // TODO: test resourceType
    }

    /**
     * Test the property 'severity'
     */
    @Test
    public void severityTest() {
        // TODO: test severity
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'vendorSeverity'
     */
    @Test
    public void vendorSeverityTest() {
        // TODO: test vendorSeverity
    }

    /**
     * Test the property 'vulnerabilityId'
     */
    @Test
    public void vulnerabilityIdTest() {
        // TODO: test vulnerabilityId
    }

    /**
     * Test the property 'vulnerabilitySource'
     */
    @Test
    public void vulnerabilitySourceTest() {
        // TODO: test vulnerabilitySource
    }

    /**
     * Test the property 'vulnerablePackages'
     */
    @Test
    public void vulnerablePackagesTest() {
        // TODO: test vulnerablePackages
    }

}
