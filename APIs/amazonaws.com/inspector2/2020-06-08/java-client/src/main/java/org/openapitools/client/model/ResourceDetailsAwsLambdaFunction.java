/*
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AwsLambdaFunctionDetailsVpcConfig;
import org.openapitools.client.model.PackageType;
import org.openapitools.client.model.Runtime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ResourceDetailsAwsLambdaFunction
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:02.844521-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResourceDetailsAwsLambdaFunction {
  public static final String SERIALIZED_NAME_ARCHITECTURES = "architectures";
  @SerializedName(SERIALIZED_NAME_ARCHITECTURES)
  private List architectures;

  public static final String SERIALIZED_NAME_CODE_SHA256 = "codeSha256";
  @SerializedName(SERIALIZED_NAME_CODE_SHA256)
  private String codeSha256;

  public static final String SERIALIZED_NAME_EXECUTION_ROLE_ARN = "executionRoleArn";
  @SerializedName(SERIALIZED_NAME_EXECUTION_ROLE_ARN)
  private String executionRoleArn;

  public static final String SERIALIZED_NAME_FUNCTION_NAME = "functionName";
  @SerializedName(SERIALIZED_NAME_FUNCTION_NAME)
  private String functionName;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_AT = "lastModifiedAt";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_AT)
  private OffsetDateTime lastModifiedAt;

  public static final String SERIALIZED_NAME_LAYERS = "layers";
  @SerializedName(SERIALIZED_NAME_LAYERS)
  private List layers;

  public static final String SERIALIZED_NAME_PACKAGE_TYPE = "packageType";
  @SerializedName(SERIALIZED_NAME_PACKAGE_TYPE)
  private PackageType packageType;

  public static final String SERIALIZED_NAME_RUNTIME = "runtime";
  @SerializedName(SERIALIZED_NAME_RUNTIME)
  private Runtime runtime;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_VPC_CONFIG = "vpcConfig";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIG)
  private AwsLambdaFunctionDetailsVpcConfig vpcConfig;

  public ResourceDetailsAwsLambdaFunction() {
  }

  public ResourceDetailsAwsLambdaFunction architectures(List architectures) {
    this.architectures = architectures;
    return this;
  }

  /**
   * Get architectures
   * @return architectures
   */
  @javax.annotation.Nullable
  public List getArchitectures() {
    return architectures;
  }

  public void setArchitectures(List architectures) {
    this.architectures = architectures;
  }


  public ResourceDetailsAwsLambdaFunction codeSha256(String codeSha256) {
    this.codeSha256 = codeSha256;
    return this;
  }

  /**
   * Get codeSha256
   * @return codeSha256
   */
  @javax.annotation.Nonnull
  public String getCodeSha256() {
    return codeSha256;
  }

  public void setCodeSha256(String codeSha256) {
    this.codeSha256 = codeSha256;
  }


  public ResourceDetailsAwsLambdaFunction executionRoleArn(String executionRoleArn) {
    this.executionRoleArn = executionRoleArn;
    return this;
  }

  /**
   * Get executionRoleArn
   * @return executionRoleArn
   */
  @javax.annotation.Nonnull
  public String getExecutionRoleArn() {
    return executionRoleArn;
  }

  public void setExecutionRoleArn(String executionRoleArn) {
    this.executionRoleArn = executionRoleArn;
  }


  public ResourceDetailsAwsLambdaFunction functionName(String functionName) {
    this.functionName = functionName;
    return this;
  }

  /**
   * Get functionName
   * @return functionName
   */
  @javax.annotation.Nonnull
  public String getFunctionName() {
    return functionName;
  }

  public void setFunctionName(String functionName) {
    this.functionName = functionName;
  }


  public ResourceDetailsAwsLambdaFunction lastModifiedAt(OffsetDateTime lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
    return this;
  }

  /**
   * Get lastModifiedAt
   * @return lastModifiedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedAt() {
    return lastModifiedAt;
  }

  public void setLastModifiedAt(OffsetDateTime lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
  }


  public ResourceDetailsAwsLambdaFunction layers(List layers) {
    this.layers = layers;
    return this;
  }

  /**
   * Get layers
   * @return layers
   */
  @javax.annotation.Nullable
  public List getLayers() {
    return layers;
  }

  public void setLayers(List layers) {
    this.layers = layers;
  }


  public ResourceDetailsAwsLambdaFunction packageType(PackageType packageType) {
    this.packageType = packageType;
    return this;
  }

  /**
   * Get packageType
   * @return packageType
   */
  @javax.annotation.Nullable
  public PackageType getPackageType() {
    return packageType;
  }

  public void setPackageType(PackageType packageType) {
    this.packageType = packageType;
  }


  public ResourceDetailsAwsLambdaFunction runtime(Runtime runtime) {
    this.runtime = runtime;
    return this;
  }

  /**
   * Get runtime
   * @return runtime
   */
  @javax.annotation.Nonnull
  public Runtime getRuntime() {
    return runtime;
  }

  public void setRuntime(Runtime runtime) {
    this.runtime = runtime;
  }


  public ResourceDetailsAwsLambdaFunction version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nonnull
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public ResourceDetailsAwsLambdaFunction vpcConfig(AwsLambdaFunctionDetailsVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
    return this;
  }

  /**
   * Get vpcConfig
   * @return vpcConfig
   */
  @javax.annotation.Nullable
  public AwsLambdaFunctionDetailsVpcConfig getVpcConfig() {
    return vpcConfig;
  }

  public void setVpcConfig(AwsLambdaFunctionDetailsVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceDetailsAwsLambdaFunction resourceDetailsAwsLambdaFunction = (ResourceDetailsAwsLambdaFunction) o;
    return Objects.equals(this.architectures, resourceDetailsAwsLambdaFunction.architectures) &&
        Objects.equals(this.codeSha256, resourceDetailsAwsLambdaFunction.codeSha256) &&
        Objects.equals(this.executionRoleArn, resourceDetailsAwsLambdaFunction.executionRoleArn) &&
        Objects.equals(this.functionName, resourceDetailsAwsLambdaFunction.functionName) &&
        Objects.equals(this.lastModifiedAt, resourceDetailsAwsLambdaFunction.lastModifiedAt) &&
        Objects.equals(this.layers, resourceDetailsAwsLambdaFunction.layers) &&
        Objects.equals(this.packageType, resourceDetailsAwsLambdaFunction.packageType) &&
        Objects.equals(this.runtime, resourceDetailsAwsLambdaFunction.runtime) &&
        Objects.equals(this.version, resourceDetailsAwsLambdaFunction.version) &&
        Objects.equals(this.vpcConfig, resourceDetailsAwsLambdaFunction.vpcConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(architectures, codeSha256, executionRoleArn, functionName, lastModifiedAt, layers, packageType, runtime, version, vpcConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceDetailsAwsLambdaFunction {\n");
    sb.append("    architectures: ").append(toIndentedString(architectures)).append("\n");
    sb.append("    codeSha256: ").append(toIndentedString(codeSha256)).append("\n");
    sb.append("    executionRoleArn: ").append(toIndentedString(executionRoleArn)).append("\n");
    sb.append("    functionName: ").append(toIndentedString(functionName)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    layers: ").append(toIndentedString(layers)).append("\n");
    sb.append("    packageType: ").append(toIndentedString(packageType)).append("\n");
    sb.append("    runtime: ").append(toIndentedString(runtime)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    vpcConfig: ").append(toIndentedString(vpcConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("architectures");
    openapiFields.add("codeSha256");
    openapiFields.add("executionRoleArn");
    openapiFields.add("functionName");
    openapiFields.add("lastModifiedAt");
    openapiFields.add("layers");
    openapiFields.add("packageType");
    openapiFields.add("runtime");
    openapiFields.add("version");
    openapiFields.add("vpcConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("codeSha256");
    openapiRequiredFields.add("executionRoleArn");
    openapiRequiredFields.add("functionName");
    openapiRequiredFields.add("runtime");
    openapiRequiredFields.add("version");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceDetailsAwsLambdaFunction
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceDetailsAwsLambdaFunction.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceDetailsAwsLambdaFunction is not found in the empty JSON string", ResourceDetailsAwsLambdaFunction.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceDetailsAwsLambdaFunction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceDetailsAwsLambdaFunction` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ResourceDetailsAwsLambdaFunction.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `architectures`
      if (jsonObj.get("architectures") != null && !jsonObj.get("architectures").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("architectures"));
      }
      // validate the required field `codeSha256`
      String.validateJsonElement(jsonObj.get("codeSha256"));
      // validate the required field `executionRoleArn`
      String.validateJsonElement(jsonObj.get("executionRoleArn"));
      // validate the required field `functionName`
      String.validateJsonElement(jsonObj.get("functionName"));
      // validate the optional field `lastModifiedAt`
      if (jsonObj.get("lastModifiedAt") != null && !jsonObj.get("lastModifiedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastModifiedAt"));
      }
      // validate the optional field `layers`
      if (jsonObj.get("layers") != null && !jsonObj.get("layers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("layers"));
      }
      // validate the optional field `packageType`
      if (jsonObj.get("packageType") != null && !jsonObj.get("packageType").isJsonNull()) {
        PackageType.validateJsonElement(jsonObj.get("packageType"));
      }
      // validate the required field `runtime`
      Runtime.validateJsonElement(jsonObj.get("runtime"));
      // validate the required field `version`
      String.validateJsonElement(jsonObj.get("version"));
      // validate the optional field `vpcConfig`
      if (jsonObj.get("vpcConfig") != null && !jsonObj.get("vpcConfig").isJsonNull()) {
        AwsLambdaFunctionDetailsVpcConfig.validateJsonElement(jsonObj.get("vpcConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceDetailsAwsLambdaFunction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceDetailsAwsLambdaFunction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceDetailsAwsLambdaFunction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceDetailsAwsLambdaFunction.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceDetailsAwsLambdaFunction>() {
           @Override
           public void write(JsonWriter out, ResourceDetailsAwsLambdaFunction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceDetailsAwsLambdaFunction read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceDetailsAwsLambdaFunction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceDetailsAwsLambdaFunction
   * @throws IOException if the JSON string is invalid with respect to ResourceDetailsAwsLambdaFunction
   */
  public static ResourceDetailsAwsLambdaFunction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceDetailsAwsLambdaFunction.class);
  }

  /**
   * Convert an instance of ResourceDetailsAwsLambdaFunction to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

