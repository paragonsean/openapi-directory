/*
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AggregationResponseAccountAggregation;
import org.openapitools.client.model.AggregationResponseAmiAggregation;
import org.openapitools.client.model.AggregationResponseAwsEcrContainerAggregation;
import org.openapitools.client.model.AggregationResponseEc2InstanceAggregation;
import org.openapitools.client.model.AggregationResponseFindingTypeAggregation;
import org.openapitools.client.model.AggregationResponseImageLayerAggregation;
import org.openapitools.client.model.AggregationResponseLambdaFunctionAggregation;
import org.openapitools.client.model.AggregationResponseLambdaLayerAggregation;
import org.openapitools.client.model.AggregationResponsePackageAggregation;
import org.openapitools.client.model.AggregationResponseRepositoryAggregation;
import org.openapitools.client.model.AggregationResponseTitleAggregation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A structure that contains details about the results of an aggregation type.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:02.844521-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AggregationResponse {
  public static final String SERIALIZED_NAME_ACCOUNT_AGGREGATION = "accountAggregation";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_AGGREGATION)
  private AggregationResponseAccountAggregation accountAggregation;

  public static final String SERIALIZED_NAME_AMI_AGGREGATION = "amiAggregation";
  @SerializedName(SERIALIZED_NAME_AMI_AGGREGATION)
  private AggregationResponseAmiAggregation amiAggregation;

  public static final String SERIALIZED_NAME_AWS_ECR_CONTAINER_AGGREGATION = "awsEcrContainerAggregation";
  @SerializedName(SERIALIZED_NAME_AWS_ECR_CONTAINER_AGGREGATION)
  private AggregationResponseAwsEcrContainerAggregation awsEcrContainerAggregation;

  public static final String SERIALIZED_NAME_EC2_INSTANCE_AGGREGATION = "ec2InstanceAggregation";
  @SerializedName(SERIALIZED_NAME_EC2_INSTANCE_AGGREGATION)
  private AggregationResponseEc2InstanceAggregation ec2InstanceAggregation;

  public static final String SERIALIZED_NAME_FINDING_TYPE_AGGREGATION = "findingTypeAggregation";
  @SerializedName(SERIALIZED_NAME_FINDING_TYPE_AGGREGATION)
  private AggregationResponseFindingTypeAggregation findingTypeAggregation;

  public static final String SERIALIZED_NAME_IMAGE_LAYER_AGGREGATION = "imageLayerAggregation";
  @SerializedName(SERIALIZED_NAME_IMAGE_LAYER_AGGREGATION)
  private AggregationResponseImageLayerAggregation imageLayerAggregation;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_AGGREGATION = "lambdaFunctionAggregation";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_AGGREGATION)
  private AggregationResponseLambdaFunctionAggregation lambdaFunctionAggregation;

  public static final String SERIALIZED_NAME_LAMBDA_LAYER_AGGREGATION = "lambdaLayerAggregation";
  @SerializedName(SERIALIZED_NAME_LAMBDA_LAYER_AGGREGATION)
  private AggregationResponseLambdaLayerAggregation lambdaLayerAggregation;

  public static final String SERIALIZED_NAME_PACKAGE_AGGREGATION = "packageAggregation";
  @SerializedName(SERIALIZED_NAME_PACKAGE_AGGREGATION)
  private AggregationResponsePackageAggregation packageAggregation;

  public static final String SERIALIZED_NAME_REPOSITORY_AGGREGATION = "repositoryAggregation";
  @SerializedName(SERIALIZED_NAME_REPOSITORY_AGGREGATION)
  private AggregationResponseRepositoryAggregation repositoryAggregation;

  public static final String SERIALIZED_NAME_TITLE_AGGREGATION = "titleAggregation";
  @SerializedName(SERIALIZED_NAME_TITLE_AGGREGATION)
  private AggregationResponseTitleAggregation titleAggregation;

  public AggregationResponse() {
  }

  public AggregationResponse accountAggregation(AggregationResponseAccountAggregation accountAggregation) {
    this.accountAggregation = accountAggregation;
    return this;
  }

  /**
   * Get accountAggregation
   * @return accountAggregation
   */
  @javax.annotation.Nullable
  public AggregationResponseAccountAggregation getAccountAggregation() {
    return accountAggregation;
  }

  public void setAccountAggregation(AggregationResponseAccountAggregation accountAggregation) {
    this.accountAggregation = accountAggregation;
  }


  public AggregationResponse amiAggregation(AggregationResponseAmiAggregation amiAggregation) {
    this.amiAggregation = amiAggregation;
    return this;
  }

  /**
   * Get amiAggregation
   * @return amiAggregation
   */
  @javax.annotation.Nullable
  public AggregationResponseAmiAggregation getAmiAggregation() {
    return amiAggregation;
  }

  public void setAmiAggregation(AggregationResponseAmiAggregation amiAggregation) {
    this.amiAggregation = amiAggregation;
  }


  public AggregationResponse awsEcrContainerAggregation(AggregationResponseAwsEcrContainerAggregation awsEcrContainerAggregation) {
    this.awsEcrContainerAggregation = awsEcrContainerAggregation;
    return this;
  }

  /**
   * Get awsEcrContainerAggregation
   * @return awsEcrContainerAggregation
   */
  @javax.annotation.Nullable
  public AggregationResponseAwsEcrContainerAggregation getAwsEcrContainerAggregation() {
    return awsEcrContainerAggregation;
  }

  public void setAwsEcrContainerAggregation(AggregationResponseAwsEcrContainerAggregation awsEcrContainerAggregation) {
    this.awsEcrContainerAggregation = awsEcrContainerAggregation;
  }


  public AggregationResponse ec2InstanceAggregation(AggregationResponseEc2InstanceAggregation ec2InstanceAggregation) {
    this.ec2InstanceAggregation = ec2InstanceAggregation;
    return this;
  }

  /**
   * Get ec2InstanceAggregation
   * @return ec2InstanceAggregation
   */
  @javax.annotation.Nullable
  public AggregationResponseEc2InstanceAggregation getEc2InstanceAggregation() {
    return ec2InstanceAggregation;
  }

  public void setEc2InstanceAggregation(AggregationResponseEc2InstanceAggregation ec2InstanceAggregation) {
    this.ec2InstanceAggregation = ec2InstanceAggregation;
  }


  public AggregationResponse findingTypeAggregation(AggregationResponseFindingTypeAggregation findingTypeAggregation) {
    this.findingTypeAggregation = findingTypeAggregation;
    return this;
  }

  /**
   * Get findingTypeAggregation
   * @return findingTypeAggregation
   */
  @javax.annotation.Nullable
  public AggregationResponseFindingTypeAggregation getFindingTypeAggregation() {
    return findingTypeAggregation;
  }

  public void setFindingTypeAggregation(AggregationResponseFindingTypeAggregation findingTypeAggregation) {
    this.findingTypeAggregation = findingTypeAggregation;
  }


  public AggregationResponse imageLayerAggregation(AggregationResponseImageLayerAggregation imageLayerAggregation) {
    this.imageLayerAggregation = imageLayerAggregation;
    return this;
  }

  /**
   * Get imageLayerAggregation
   * @return imageLayerAggregation
   */
  @javax.annotation.Nullable
  public AggregationResponseImageLayerAggregation getImageLayerAggregation() {
    return imageLayerAggregation;
  }

  public void setImageLayerAggregation(AggregationResponseImageLayerAggregation imageLayerAggregation) {
    this.imageLayerAggregation = imageLayerAggregation;
  }


  public AggregationResponse lambdaFunctionAggregation(AggregationResponseLambdaFunctionAggregation lambdaFunctionAggregation) {
    this.lambdaFunctionAggregation = lambdaFunctionAggregation;
    return this;
  }

  /**
   * Get lambdaFunctionAggregation
   * @return lambdaFunctionAggregation
   */
  @javax.annotation.Nullable
  public AggregationResponseLambdaFunctionAggregation getLambdaFunctionAggregation() {
    return lambdaFunctionAggregation;
  }

  public void setLambdaFunctionAggregation(AggregationResponseLambdaFunctionAggregation lambdaFunctionAggregation) {
    this.lambdaFunctionAggregation = lambdaFunctionAggregation;
  }


  public AggregationResponse lambdaLayerAggregation(AggregationResponseLambdaLayerAggregation lambdaLayerAggregation) {
    this.lambdaLayerAggregation = lambdaLayerAggregation;
    return this;
  }

  /**
   * Get lambdaLayerAggregation
   * @return lambdaLayerAggregation
   */
  @javax.annotation.Nullable
  public AggregationResponseLambdaLayerAggregation getLambdaLayerAggregation() {
    return lambdaLayerAggregation;
  }

  public void setLambdaLayerAggregation(AggregationResponseLambdaLayerAggregation lambdaLayerAggregation) {
    this.lambdaLayerAggregation = lambdaLayerAggregation;
  }


  public AggregationResponse packageAggregation(AggregationResponsePackageAggregation packageAggregation) {
    this.packageAggregation = packageAggregation;
    return this;
  }

  /**
   * Get packageAggregation
   * @return packageAggregation
   */
  @javax.annotation.Nullable
  public AggregationResponsePackageAggregation getPackageAggregation() {
    return packageAggregation;
  }

  public void setPackageAggregation(AggregationResponsePackageAggregation packageAggregation) {
    this.packageAggregation = packageAggregation;
  }


  public AggregationResponse repositoryAggregation(AggregationResponseRepositoryAggregation repositoryAggregation) {
    this.repositoryAggregation = repositoryAggregation;
    return this;
  }

  /**
   * Get repositoryAggregation
   * @return repositoryAggregation
   */
  @javax.annotation.Nullable
  public AggregationResponseRepositoryAggregation getRepositoryAggregation() {
    return repositoryAggregation;
  }

  public void setRepositoryAggregation(AggregationResponseRepositoryAggregation repositoryAggregation) {
    this.repositoryAggregation = repositoryAggregation;
  }


  public AggregationResponse titleAggregation(AggregationResponseTitleAggregation titleAggregation) {
    this.titleAggregation = titleAggregation;
    return this;
  }

  /**
   * Get titleAggregation
   * @return titleAggregation
   */
  @javax.annotation.Nullable
  public AggregationResponseTitleAggregation getTitleAggregation() {
    return titleAggregation;
  }

  public void setTitleAggregation(AggregationResponseTitleAggregation titleAggregation) {
    this.titleAggregation = titleAggregation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregationResponse aggregationResponse = (AggregationResponse) o;
    return Objects.equals(this.accountAggregation, aggregationResponse.accountAggregation) &&
        Objects.equals(this.amiAggregation, aggregationResponse.amiAggregation) &&
        Objects.equals(this.awsEcrContainerAggregation, aggregationResponse.awsEcrContainerAggregation) &&
        Objects.equals(this.ec2InstanceAggregation, aggregationResponse.ec2InstanceAggregation) &&
        Objects.equals(this.findingTypeAggregation, aggregationResponse.findingTypeAggregation) &&
        Objects.equals(this.imageLayerAggregation, aggregationResponse.imageLayerAggregation) &&
        Objects.equals(this.lambdaFunctionAggregation, aggregationResponse.lambdaFunctionAggregation) &&
        Objects.equals(this.lambdaLayerAggregation, aggregationResponse.lambdaLayerAggregation) &&
        Objects.equals(this.packageAggregation, aggregationResponse.packageAggregation) &&
        Objects.equals(this.repositoryAggregation, aggregationResponse.repositoryAggregation) &&
        Objects.equals(this.titleAggregation, aggregationResponse.titleAggregation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountAggregation, amiAggregation, awsEcrContainerAggregation, ec2InstanceAggregation, findingTypeAggregation, imageLayerAggregation, lambdaFunctionAggregation, lambdaLayerAggregation, packageAggregation, repositoryAggregation, titleAggregation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregationResponse {\n");
    sb.append("    accountAggregation: ").append(toIndentedString(accountAggregation)).append("\n");
    sb.append("    amiAggregation: ").append(toIndentedString(amiAggregation)).append("\n");
    sb.append("    awsEcrContainerAggregation: ").append(toIndentedString(awsEcrContainerAggregation)).append("\n");
    sb.append("    ec2InstanceAggregation: ").append(toIndentedString(ec2InstanceAggregation)).append("\n");
    sb.append("    findingTypeAggregation: ").append(toIndentedString(findingTypeAggregation)).append("\n");
    sb.append("    imageLayerAggregation: ").append(toIndentedString(imageLayerAggregation)).append("\n");
    sb.append("    lambdaFunctionAggregation: ").append(toIndentedString(lambdaFunctionAggregation)).append("\n");
    sb.append("    lambdaLayerAggregation: ").append(toIndentedString(lambdaLayerAggregation)).append("\n");
    sb.append("    packageAggregation: ").append(toIndentedString(packageAggregation)).append("\n");
    sb.append("    repositoryAggregation: ").append(toIndentedString(repositoryAggregation)).append("\n");
    sb.append("    titleAggregation: ").append(toIndentedString(titleAggregation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountAggregation");
    openapiFields.add("amiAggregation");
    openapiFields.add("awsEcrContainerAggregation");
    openapiFields.add("ec2InstanceAggregation");
    openapiFields.add("findingTypeAggregation");
    openapiFields.add("imageLayerAggregation");
    openapiFields.add("lambdaFunctionAggregation");
    openapiFields.add("lambdaLayerAggregation");
    openapiFields.add("packageAggregation");
    openapiFields.add("repositoryAggregation");
    openapiFields.add("titleAggregation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AggregationResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AggregationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AggregationResponse is not found in the empty JSON string", AggregationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AggregationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AggregationResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `accountAggregation`
      if (jsonObj.get("accountAggregation") != null && !jsonObj.get("accountAggregation").isJsonNull()) {
        AggregationResponseAccountAggregation.validateJsonElement(jsonObj.get("accountAggregation"));
      }
      // validate the optional field `amiAggregation`
      if (jsonObj.get("amiAggregation") != null && !jsonObj.get("amiAggregation").isJsonNull()) {
        AggregationResponseAmiAggregation.validateJsonElement(jsonObj.get("amiAggregation"));
      }
      // validate the optional field `awsEcrContainerAggregation`
      if (jsonObj.get("awsEcrContainerAggregation") != null && !jsonObj.get("awsEcrContainerAggregation").isJsonNull()) {
        AggregationResponseAwsEcrContainerAggregation.validateJsonElement(jsonObj.get("awsEcrContainerAggregation"));
      }
      // validate the optional field `ec2InstanceAggregation`
      if (jsonObj.get("ec2InstanceAggregation") != null && !jsonObj.get("ec2InstanceAggregation").isJsonNull()) {
        AggregationResponseEc2InstanceAggregation.validateJsonElement(jsonObj.get("ec2InstanceAggregation"));
      }
      // validate the optional field `findingTypeAggregation`
      if (jsonObj.get("findingTypeAggregation") != null && !jsonObj.get("findingTypeAggregation").isJsonNull()) {
        AggregationResponseFindingTypeAggregation.validateJsonElement(jsonObj.get("findingTypeAggregation"));
      }
      // validate the optional field `imageLayerAggregation`
      if (jsonObj.get("imageLayerAggregation") != null && !jsonObj.get("imageLayerAggregation").isJsonNull()) {
        AggregationResponseImageLayerAggregation.validateJsonElement(jsonObj.get("imageLayerAggregation"));
      }
      // validate the optional field `lambdaFunctionAggregation`
      if (jsonObj.get("lambdaFunctionAggregation") != null && !jsonObj.get("lambdaFunctionAggregation").isJsonNull()) {
        AggregationResponseLambdaFunctionAggregation.validateJsonElement(jsonObj.get("lambdaFunctionAggregation"));
      }
      // validate the optional field `lambdaLayerAggregation`
      if (jsonObj.get("lambdaLayerAggregation") != null && !jsonObj.get("lambdaLayerAggregation").isJsonNull()) {
        AggregationResponseLambdaLayerAggregation.validateJsonElement(jsonObj.get("lambdaLayerAggregation"));
      }
      // validate the optional field `packageAggregation`
      if (jsonObj.get("packageAggregation") != null && !jsonObj.get("packageAggregation").isJsonNull()) {
        AggregationResponsePackageAggregation.validateJsonElement(jsonObj.get("packageAggregation"));
      }
      // validate the optional field `repositoryAggregation`
      if (jsonObj.get("repositoryAggregation") != null && !jsonObj.get("repositoryAggregation").isJsonNull()) {
        AggregationResponseRepositoryAggregation.validateJsonElement(jsonObj.get("repositoryAggregation"));
      }
      // validate the optional field `titleAggregation`
      if (jsonObj.get("titleAggregation") != null && !jsonObj.get("titleAggregation").isJsonNull()) {
        AggregationResponseTitleAggregation.validateJsonElement(jsonObj.get("titleAggregation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AggregationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AggregationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AggregationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AggregationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<AggregationResponse>() {
           @Override
           public void write(JsonWriter out, AggregationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AggregationResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AggregationResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AggregationResponse
   * @throws IOException if the JSON string is invalid with respect to AggregationResponse
   */
  public static AggregationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AggregationResponse.class);
  }

  /**
   * Convert an instance of AggregationResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

