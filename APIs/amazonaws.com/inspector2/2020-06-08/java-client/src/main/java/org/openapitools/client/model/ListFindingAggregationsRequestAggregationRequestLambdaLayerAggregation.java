/*
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LambdaLayerSortBy;
import org.openapitools.client.model.SortOrder;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:02.844521-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation {
  public static final String SERIALIZED_NAME_FUNCTION_NAMES = "functionNames";
  @SerializedName(SERIALIZED_NAME_FUNCTION_NAMES)
  private List functionNames;

  public static final String SERIALIZED_NAME_LAYER_ARNS = "layerArns";
  @SerializedName(SERIALIZED_NAME_LAYER_ARNS)
  private List layerArns;

  public static final String SERIALIZED_NAME_RESOURCE_IDS = "resourceIds";
  @SerializedName(SERIALIZED_NAME_RESOURCE_IDS)
  private List resourceIds;

  public static final String SERIALIZED_NAME_SORT_BY = "sortBy";
  @SerializedName(SERIALIZED_NAME_SORT_BY)
  private LambdaLayerSortBy sortBy;

  public static final String SERIALIZED_NAME_SORT_ORDER = "sortOrder";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private SortOrder sortOrder;

  public ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation() {
  }

  public ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation functionNames(List functionNames) {
    this.functionNames = functionNames;
    return this;
  }

  /**
   * Get functionNames
   * @return functionNames
   */
  @javax.annotation.Nullable
  public List getFunctionNames() {
    return functionNames;
  }

  public void setFunctionNames(List functionNames) {
    this.functionNames = functionNames;
  }


  public ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation layerArns(List layerArns) {
    this.layerArns = layerArns;
    return this;
  }

  /**
   * Get layerArns
   * @return layerArns
   */
  @javax.annotation.Nullable
  public List getLayerArns() {
    return layerArns;
  }

  public void setLayerArns(List layerArns) {
    this.layerArns = layerArns;
  }


  public ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation resourceIds(List resourceIds) {
    this.resourceIds = resourceIds;
    return this;
  }

  /**
   * Get resourceIds
   * @return resourceIds
   */
  @javax.annotation.Nullable
  public List getResourceIds() {
    return resourceIds;
  }

  public void setResourceIds(List resourceIds) {
    this.resourceIds = resourceIds;
  }


  public ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation sortBy(LambdaLayerSortBy sortBy) {
    this.sortBy = sortBy;
    return this;
  }

  /**
   * Get sortBy
   * @return sortBy
   */
  @javax.annotation.Nullable
  public LambdaLayerSortBy getSortBy() {
    return sortBy;
  }

  public void setSortBy(LambdaLayerSortBy sortBy) {
    this.sortBy = sortBy;
  }


  public ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation sortOrder(SortOrder sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  /**
   * Get sortOrder
   * @return sortOrder
   */
  @javax.annotation.Nullable
  public SortOrder getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(SortOrder sortOrder) {
    this.sortOrder = sortOrder;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation listFindingAggregationsRequestAggregationRequestLambdaLayerAggregation = (ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation) o;
    return Objects.equals(this.functionNames, listFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.functionNames) &&
        Objects.equals(this.layerArns, listFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.layerArns) &&
        Objects.equals(this.resourceIds, listFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.resourceIds) &&
        Objects.equals(this.sortBy, listFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.sortBy) &&
        Objects.equals(this.sortOrder, listFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.sortOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(functionNames, layerArns, resourceIds, sortBy, sortOrder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation {\n");
    sb.append("    functionNames: ").append(toIndentedString(functionNames)).append("\n");
    sb.append("    layerArns: ").append(toIndentedString(layerArns)).append("\n");
    sb.append("    resourceIds: ").append(toIndentedString(resourceIds)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("functionNames");
    openapiFields.add("layerArns");
    openapiFields.add("resourceIds");
    openapiFields.add("sortBy");
    openapiFields.add("sortOrder");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation is not found in the empty JSON string", ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `functionNames`
      if (jsonObj.get("functionNames") != null && !jsonObj.get("functionNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("functionNames"));
      }
      // validate the optional field `layerArns`
      if (jsonObj.get("layerArns") != null && !jsonObj.get("layerArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("layerArns"));
      }
      // validate the optional field `resourceIds`
      if (jsonObj.get("resourceIds") != null && !jsonObj.get("resourceIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("resourceIds"));
      }
      // validate the optional field `sortBy`
      if (jsonObj.get("sortBy") != null && !jsonObj.get("sortBy").isJsonNull()) {
        LambdaLayerSortBy.validateJsonElement(jsonObj.get("sortBy"));
      }
      // validate the optional field `sortOrder`
      if (jsonObj.get("sortOrder") != null && !jsonObj.get("sortOrder").isJsonNull()) {
        SortOrder.validateJsonElement(jsonObj.get("sortOrder"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.class));

       return (TypeAdapter<T>) new TypeAdapter<ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation>() {
           @Override
           public void write(JsonWriter out, ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation
   * @throws IOException if the JSON string is invalid with respect to ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation
   */
  public static ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation.class);
  }

  /**
   * Convert an instance of ListFindingAggregationsRequestAggregationRequestLambdaLayerAggregation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

